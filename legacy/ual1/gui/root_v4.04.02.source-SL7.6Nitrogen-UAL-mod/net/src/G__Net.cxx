//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:22:59 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__Net.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TInetAddress_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TInetAddress_IsA(const void*);
   static void *new_TInetAddress(void *p = 0);
   static void *newArray_TInetAddress(Long_t size);
   static void delete_TInetAddress(void *p);
   static void deleteArray_TInetAddress(void *p);
   static void destruct_TInetAddress(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TInetAddress*)
   {
      ::TInetAddress *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TInetAddress", ::TInetAddress::Class_Version(), "include/TInetAddress.h", 40,
                  typeid(::TInetAddress), DefineBehavior(ptr, ptr),
                  &::TInetAddress::Dictionary, &TInetAddress_IsA, 1,
                  sizeof(::TInetAddress) );
      instance.SetNew(&new_TInetAddress);
      instance.SetNewArray(&newArray_TInetAddress);
      instance.SetDelete(&delete_TInetAddress);
      instance.SetDeleteArray(&deleteArray_TInetAddress);
      instance.SetDestructor(&destruct_TInetAddress);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TInetAddress*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAuthenticate_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAuthenticate_IsA(const void*);
   static void delete_TAuthenticate(void *p);
   static void deleteArray_TAuthenticate(void *p);
   static void destruct_TAuthenticate(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAuthenticate*)
   {
      ::TAuthenticate *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAuthenticate", ::TAuthenticate::Class_Version(), "net/inc/TAuthenticate.h", 60,
                  typeid(::TAuthenticate), DefineBehavior(ptr, ptr),
                  &::TAuthenticate::Dictionary, &TAuthenticate_IsA, 0,
                  sizeof(::TAuthenticate) );
      instance.SetDelete(&delete_TAuthenticate);
      instance.SetDeleteArray(&deleteArray_TAuthenticate);
      instance.SetDestructor(&destruct_TAuthenticate);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAuthenticate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void THostAuth_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *THostAuth_IsA(const void*);
   static void delete_THostAuth(void *p);
   static void deleteArray_THostAuth(void *p);
   static void destruct_THostAuth(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::THostAuth*)
   {
      ::THostAuth *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("THostAuth", ::THostAuth::Class_Version(), "net/inc/THostAuth.h", 44,
                  typeid(::THostAuth), DefineBehavior(ptr, ptr),
                  &::THostAuth::Dictionary, &THostAuth_IsA, 0,
                  sizeof(::THostAuth) );
      instance.SetDelete(&delete_THostAuth);
      instance.SetDeleteArray(&deleteArray_THostAuth);
      instance.SetDestructor(&destruct_THostAuth);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::THostAuth*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSocket_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSocket_IsA(const void*);
   static void delete_TSocket(void *p);
   static void deleteArray_TSocket(void *p);
   static void destruct_TSocket(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSocket*)
   {
      ::TSocket *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSocket", ::TSocket::Class_Version(), "net/inc/TSocket.h", 66,
                  typeid(::TSocket), DefineBehavior(ptr, ptr),
                  &::TSocket::Dictionary, &TSocket_IsA, 0,
                  sizeof(::TSocket) );
      instance.SetDelete(&delete_TSocket);
      instance.SetDeleteArray(&deleteArray_TSocket);
      instance.SetDestructor(&destruct_TSocket);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSocket*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSecContext_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSecContext_IsA(const void*);
   static void delete_TSecContext(void *p);
   static void deleteArray_TSecContext(void *p);
   static void destruct_TSecContext(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSecContext*)
   {
      ::TSecContext *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSecContext", ::TSecContext::Class_Version(), "net/inc/TSecContext.h", 45,
                  typeid(::TSecContext), DefineBehavior(ptr, ptr),
                  &::TSecContext::Dictionary, &TSecContext_IsA, 0,
                  sizeof(::TSecContext) );
      instance.SetDelete(&delete_TSecContext);
      instance.SetDeleteArray(&deleteArray_TSecContext);
      instance.SetDestructor(&destruct_TSecContext);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSecContext*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TCache_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCache_IsA(const void*);
   static void delete_TCache(void *p);
   static void deleteArray_TCache(void *p);
   static void destruct_TCache(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCache*)
   {
      ::TCache *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCache", ::TCache::Class_Version(), "include/TCache.h", 52,
                  typeid(::TCache), DefineBehavior(ptr, ptr),
                  &::TCache::Dictionary, &TCache_IsA, 0,
                  sizeof(::TCache) );
      instance.SetDelete(&delete_TCache);
      instance.SetDeleteArray(&deleteArray_TCache);
      instance.SetDestructor(&destruct_TCache);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCache*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TUrl_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TUrl_IsA(const void*);
   static void delete_TUrl(void *p);
   static void deleteArray_TUrl(void *p);
   static void destruct_TUrl(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TUrl*)
   {
      ::TUrl *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TUrl", ::TUrl::Class_Version(), "net/inc/TUrl.h", 35,
                  typeid(::TUrl), DefineBehavior(ptr, ptr),
                  &::TUrl::Dictionary, &TUrl_IsA, 0,
                  sizeof(::TUrl) );
      instance.SetDelete(&delete_TUrl);
      instance.SetDeleteArray(&deleteArray_TUrl);
      instance.SetDestructor(&destruct_TUrl);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TUrl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TServerSocket_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TServerSocket_IsA(const void*);
   static void delete_TServerSocket(void *p);
   static void deleteArray_TServerSocket(void *p);
   static void destruct_TServerSocket(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TServerSocket*)
   {
      ::TServerSocket *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TServerSocket", ::TServerSocket::Class_Version(), "net/inc/TServerSocket.h", 41,
                  typeid(::TServerSocket), DefineBehavior(ptr, ptr),
                  &::TServerSocket::Dictionary, &TServerSocket_IsA, 0,
                  sizeof(::TServerSocket) );
      instance.SetDelete(&delete_TServerSocket);
      instance.SetDeleteArray(&deleteArray_TServerSocket);
      instance.SetDestructor(&destruct_TServerSocket);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TServerSocket*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TFTP_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TFTP_IsA(const void*);
   static void delete_TFTP(void *p);
   static void deleteArray_TFTP(void *p);
   static void destruct_TFTP(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TFTP*)
   {
      ::TFTP *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TFTP", ::TFTP::Class_Version(), "net/inc/TFTP.h", 42,
                  typeid(::TFTP), DefineBehavior(ptr, ptr),
                  &::TFTP::Dictionary, &TFTP_IsA, 0,
                  sizeof(::TFTP) );
      instance.SetDelete(&delete_TFTP);
      instance.SetDeleteArray(&deleteArray_TFTP);
      instance.SetDestructor(&destruct_TFTP);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TFTP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TNetFile_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TNetFile_IsA(const void*);
   static void *new_TNetFile(void *p = 0);
   static void *newArray_TNetFile(Long_t size);
   static void delete_TNetFile(void *p);
   static void deleteArray_TNetFile(void *p);
   static void destruct_TNetFile(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TNetFile*)
   {
      ::TNetFile *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TNetFile", ::TNetFile::Class_Version(), "net/inc/TNetFile.h", 44,
                  typeid(::TNetFile), DefineBehavior(ptr, ptr),
                  &::TNetFile::Dictionary, &TNetFile_IsA, 0,
                  sizeof(::TNetFile) );
      instance.SetNew(&new_TNetFile);
      instance.SetNewArray(&newArray_TNetFile);
      instance.SetDelete(&delete_TNetFile);
      instance.SetDeleteArray(&deleteArray_TNetFile);
      instance.SetDestructor(&destruct_TNetFile);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TNetFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TNetSystem_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TNetSystem_IsA(const void*);
   static void *new_TNetSystem(void *p = 0);
   static void *newArray_TNetSystem(Long_t size);
   static void delete_TNetSystem(void *p);
   static void deleteArray_TNetSystem(void *p);
   static void destruct_TNetSystem(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TNetSystem*)
   {
      ::TNetSystem *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TNetSystem", ::TNetSystem::Class_Version(), "net/inc/TNetFile.h", 86,
                  typeid(::TNetSystem), DefineBehavior(ptr, ptr),
                  &::TNetSystem::Dictionary, &TNetSystem_IsA, 0,
                  sizeof(::TNetSystem) );
      instance.SetNew(&new_TNetSystem);
      instance.SetNewArray(&newArray_TNetSystem);
      instance.SetDelete(&delete_TNetSystem);
      instance.SetDeleteArray(&deleteArray_TNetSystem);
      instance.SetDestructor(&destruct_TNetSystem);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TNetSystem*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGridResult_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGridResult_IsA(const void*);
   static void delete_TGridResult(void *p);
   static void deleteArray_TGridResult(void *p);
   static void destruct_TGridResult(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGridResult*)
   {
      ::TGridResult *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGridResult", ::TGridResult::Class_Version(), "net/inc/TGridResult.h", 36,
                  typeid(::TGridResult), DefineBehavior(ptr, ptr),
                  &::TGridResult::Dictionary, &TGridResult_IsA, 0,
                  sizeof(::TGridResult) );
      instance.SetDelete(&delete_TGridResult);
      instance.SetDeleteArray(&deleteArray_TGridResult);
      instance.SetDestructor(&destruct_TGridResult);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGridResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGridProof_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGridProof_IsA(const void*);
   static void delete_TGridProof(void *p);
   static void deleteArray_TGridProof(void *p);
   static void destruct_TGridProof(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGridProof*)
   {
      ::TGridProof *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGridProof", ::TGridProof::Class_Version(), "net/inc/TGridProof.h", 40,
                  typeid(::TGridProof), DefineBehavior(ptr, ptr),
                  &::TGridProof::Dictionary, &TGridProof_IsA, 0,
                  sizeof(::TGridProof) );
      instance.SetDelete(&delete_TGridProof);
      instance.SetDeleteArray(&deleteArray_TGridProof);
      instance.SetDestructor(&destruct_TGridProof);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGridProof*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void Grid_Result_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void Grid_Result_t_Dictionary();
   static TClass *Grid_Result_t_IsA(const void*);
   static void *new_Grid_Result_t(void *p = 0);
   static void *newArray_Grid_Result_t(Long_t size);
   static void delete_Grid_Result_t(void *p);
   static void deleteArray_Grid_Result_t(void *p);
   static void destruct_Grid_Result_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::Grid_Result_t*)
   {
      ::Grid_Result_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("Grid_Result_t", "net/inc/TGrid.h", 59,
                  typeid(::Grid_Result_t), DefineBehavior(ptr, ptr),
                  0, &Grid_Result_t_Dictionary, &Grid_Result_t_IsA, 0,
                  sizeof(::Grid_Result_t) );
      instance.SetNew(&new_Grid_Result_t);
      instance.SetNewArray(&newArray_Grid_Result_t);
      instance.SetDelete(&delete_Grid_Result_t);
      instance.SetDeleteArray(&deleteArray_Grid_Result_t);
      instance.SetDestructor(&destruct_Grid_Result_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::Grid_Result_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Grid_Result_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::Grid_Result_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void TGrid_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGrid_IsA(const void*);
   static void delete_TGrid(void *p);
   static void deleteArray_TGrid(void *p);
   static void destruct_TGrid(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGrid*)
   {
      ::TGrid *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGrid", ::TGrid::Class_Version(), "net/inc/TGrid.h", 77,
                  typeid(::TGrid), DefineBehavior(ptr, ptr),
                  &::TGrid::Dictionary, &TGrid_IsA, 0,
                  sizeof(::TGrid) );
      instance.SetDelete(&delete_TGrid);
      instance.SetDeleteArray(&deleteArray_TGrid);
      instance.SetDestructor(&destruct_TGrid);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGrid*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSecContextCleanup_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSecContextCleanup_IsA(const void*);
   static void delete_TSecContextCleanup(void *p);
   static void deleteArray_TSecContextCleanup(void *p);
   static void destruct_TSecContextCleanup(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSecContextCleanup*)
   {
      ::TSecContextCleanup *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSecContextCleanup", ::TSecContextCleanup::Class_Version(), "net/inc/TSecContext.h", 112,
                  typeid(::TSecContextCleanup), DefineBehavior(ptr, ptr),
                  &::TSecContextCleanup::Dictionary, &TSecContextCleanup_IsA, 0,
                  sizeof(::TSecContextCleanup) );
      instance.SetDelete(&delete_TSecContextCleanup);
      instance.SetDeleteArray(&deleteArray_TSecContextCleanup);
      instance.SetDestructor(&destruct_TSecContextCleanup);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSecContextCleanup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSQLRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSQLRow_IsA(const void*);
   static void delete_TSQLRow(void *p);
   static void deleteArray_TSQLRow(void *p);
   static void destruct_TSQLRow(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSQLRow*)
   {
      ::TSQLRow *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSQLRow", ::TSQLRow::Class_Version(), "net/inc/TSQLRow.h", 32,
                  typeid(::TSQLRow), DefineBehavior(ptr, ptr),
                  &::TSQLRow::Dictionary, &TSQLRow_IsA, 0,
                  sizeof(::TSQLRow) );
      instance.SetDelete(&delete_TSQLRow);
      instance.SetDeleteArray(&deleteArray_TSQLRow);
      instance.SetDestructor(&destruct_TSQLRow);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSQLRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSQLResult_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSQLResult_IsA(const void*);
   static void delete_TSQLResult(void *p);
   static void deleteArray_TSQLResult(void *p);
   static void destruct_TSQLResult(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSQLResult*)
   {
      ::TSQLResult *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSQLResult", ::TSQLResult::Class_Version(), "net/inc/TSQLResult.h", 34,
                  typeid(::TSQLResult), DefineBehavior(ptr, ptr),
                  &::TSQLResult::Dictionary, &TSQLResult_IsA, 0,
                  sizeof(::TSQLResult) );
      instance.SetDelete(&delete_TSQLResult);
      instance.SetDeleteArray(&deleteArray_TSQLResult);
      instance.SetDestructor(&destruct_TSQLResult);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSQLResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMessage_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMessage_IsA(const void*);
   static void *new_TMessage(void *p = 0);
   static void *newArray_TMessage(Long_t size);
   static void delete_TMessage(void *p);
   static void deleteArray_TMessage(void *p);
   static void destruct_TMessage(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMessage*)
   {
      ::TMessage *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMessage", ::TMessage::Class_Version(), "net/inc/TMessage.h", 33,
                  typeid(::TMessage), DefineBehavior(ptr, ptr),
                  &::TMessage::Dictionary, &TMessage_IsA, 0,
                  sizeof(::TMessage) );
      instance.SetNew(&new_TMessage);
      instance.SetNewArray(&newArray_TMessage);
      instance.SetDelete(&delete_TMessage);
      instance.SetDeleteArray(&deleteArray_TMessage);
      instance.SetDestructor(&destruct_TMessage);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMessage*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMonitor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMonitor_IsA(const void*);
   static void *new_TMonitor(void *p = 0);
   static void *newArray_TMonitor(Long_t size);
   static void delete_TMonitor(void *p);
   static void deleteArray_TMonitor(void *p);
   static void destruct_TMonitor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMonitor*)
   {
      ::TMonitor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMonitor", ::TMonitor::Class_Version(), "net/inc/TMonitor.h", 40,
                  typeid(::TMonitor), DefineBehavior(ptr, ptr),
                  &::TMonitor::Dictionary, &TMonitor_IsA, 0,
                  sizeof(::TMonitor) );
      instance.SetNew(&new_TMonitor);
      instance.SetNewArray(&newArray_TMonitor);
      instance.SetDelete(&delete_TMonitor);
      instance.SetDeleteArray(&deleteArray_TMonitor);
      instance.SetDestructor(&destruct_TMonitor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMonitor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPSocket_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPSocket_IsA(const void*);
   static void delete_TPSocket(void *p);
   static void deleteArray_TPSocket(void *p);
   static void destruct_TPSocket(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPSocket*)
   {
      ::TPSocket *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPSocket", ::TPSocket::Class_Version(), "net/inc/TPSocket.h", 35,
                  typeid(::TPSocket), DefineBehavior(ptr, ptr),
                  &::TPSocket::Dictionary, &TPSocket_IsA, 0,
                  sizeof(::TPSocket) );
      instance.SetDelete(&delete_TPSocket);
      instance.SetDeleteArray(&deleteArray_TPSocket);
      instance.SetDestructor(&destruct_TPSocket);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPSocket*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPServerSocket_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPServerSocket_IsA(const void*);
   static void delete_TPServerSocket(void *p);
   static void deleteArray_TPServerSocket(void *p);
   static void destruct_TPServerSocket(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPServerSocket*)
   {
      ::TPServerSocket *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPServerSocket", ::TPServerSocket::Class_Version(), "net/inc/TPServerSocket.h", 36,
                  typeid(::TPServerSocket), DefineBehavior(ptr, ptr),
                  &::TPServerSocket::Dictionary, &TPServerSocket_IsA, 0,
                  sizeof(::TPServerSocket) );
      instance.SetDelete(&delete_TPServerSocket);
      instance.SetDeleteArray(&deleteArray_TPServerSocket);
      instance.SetDestructor(&destruct_TPServerSocket);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPServerSocket*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TWebFile_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TWebFile_IsA(const void*);
   static void delete_TWebFile(void *p);
   static void deleteArray_TWebFile(void *p);
   static void destruct_TWebFile(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TWebFile*)
   {
      ::TWebFile *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TWebFile", ::TWebFile::Class_Version(), "net/inc/TWebFile.h", 34,
                  typeid(::TWebFile), DefineBehavior(ptr, ptr),
                  &::TWebFile::Dictionary, &TWebFile_IsA, 0,
                  sizeof(::TWebFile) );
      instance.SetDelete(&delete_TWebFile);
      instance.SetDeleteArray(&deleteArray_TWebFile);
      instance.SetDestructor(&destruct_TWebFile);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TWebFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSQLServer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSQLServer_IsA(const void*);
   static void delete_TSQLServer(void *p);
   static void deleteArray_TSQLServer(void *p);
   static void destruct_TSQLServer(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSQLServer*)
   {
      ::TSQLServer *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSQLServer", ::TSQLServer::Class_Version(), "net/inc/TSQLServer.h", 43,
                  typeid(::TSQLServer), DefineBehavior(ptr, ptr),
                  &::TSQLServer::Dictionary, &TSQLServer_IsA, 0,
                  sizeof(::TSQLServer) );
      instance.SetDelete(&delete_TSQLServer);
      instance.SetDeleteArray(&deleteArray_TSQLServer);
      instance.SetDestructor(&destruct_TSQLServer);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSQLServer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TInetAddress::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TInetAddress::Class_Name()
{
   return "TInetAddress";
}

//______________________________________________________________________________
const char *TInetAddress::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TInetAddress*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TInetAddress::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TInetAddress*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TInetAddress::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TInetAddress*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TInetAddress::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TInetAddress*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAuthenticate::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAuthenticate::Class_Name()
{
   return "TAuthenticate";
}

//______________________________________________________________________________
const char *TAuthenticate::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAuthenticate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAuthenticate::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAuthenticate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAuthenticate::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAuthenticate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAuthenticate::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAuthenticate*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THostAuth::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THostAuth::Class_Name()
{
   return "THostAuth";
}

//______________________________________________________________________________
const char *THostAuth::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::THostAuth*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THostAuth::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::THostAuth*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THostAuth::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::THostAuth*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THostAuth::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::THostAuth*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSocket::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSocket::Class_Name()
{
   return "TSocket";
}

//______________________________________________________________________________
const char *TSocket::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSocket*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSocket::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSocket*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSocket::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSocket*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSocket::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSocket*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSecContext::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSecContext::Class_Name()
{
   return "TSecContext";
}

//______________________________________________________________________________
const char *TSecContext::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSecContext*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSecContext::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSecContext*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSecContext::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSecContext*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSecContext::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSecContext*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCache::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCache::Class_Name()
{
   return "TCache";
}

//______________________________________________________________________________
const char *TCache::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCache*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCache::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCache*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCache::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCache*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCache::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCache*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TUrl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TUrl::Class_Name()
{
   return "TUrl";
}

//______________________________________________________________________________
const char *TUrl::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TUrl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TUrl::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TUrl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TUrl::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TUrl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TUrl::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TUrl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TServerSocket::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TServerSocket::Class_Name()
{
   return "TServerSocket";
}

//______________________________________________________________________________
const char *TServerSocket::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TServerSocket*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TServerSocket::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TServerSocket*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TServerSocket::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TServerSocket*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TServerSocket::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TServerSocket*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFTP::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFTP::Class_Name()
{
   return "TFTP";
}

//______________________________________________________________________________
const char *TFTP::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TFTP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFTP::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TFTP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFTP::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TFTP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFTP::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TFTP*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TNetFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TNetFile::Class_Name()
{
   return "TNetFile";
}

//______________________________________________________________________________
const char *TNetFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TNetFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TNetFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TNetFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TNetFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TNetFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TNetFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TNetFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TNetSystem::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TNetSystem::Class_Name()
{
   return "TNetSystem";
}

//______________________________________________________________________________
const char *TNetSystem::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TNetSystem*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TNetSystem::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TNetSystem*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TNetSystem::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TNetSystem*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TNetSystem::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TNetSystem*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGridResult::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGridResult::Class_Name()
{
   return "TGridResult";
}

//______________________________________________________________________________
const char *TGridResult::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGridResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGridResult::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGridResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGridResult::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGridResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGridResult::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGridResult*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGridProof::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGridProof::Class_Name()
{
   return "TGridProof";
}

//______________________________________________________________________________
const char *TGridProof::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGridProof*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGridProof::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGridProof*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGridProof::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGridProof*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGridProof::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGridProof*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGrid::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGrid::Class_Name()
{
   return "TGrid";
}

//______________________________________________________________________________
const char *TGrid::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGrid*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGrid::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGrid*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGrid::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGrid*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGrid::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGrid*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSecContextCleanup::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSecContextCleanup::Class_Name()
{
   return "TSecContextCleanup";
}

//______________________________________________________________________________
const char *TSecContextCleanup::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSecContextCleanup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSecContextCleanup::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSecContextCleanup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSecContextCleanup::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSecContextCleanup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSecContextCleanup::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSecContextCleanup*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSQLRow::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSQLRow::Class_Name()
{
   return "TSQLRow";
}

//______________________________________________________________________________
const char *TSQLRow::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSQLRow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSQLRow::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSQLRow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSQLRow::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSQLRow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSQLRow::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSQLRow*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSQLResult::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSQLResult::Class_Name()
{
   return "TSQLResult";
}

//______________________________________________________________________________
const char *TSQLResult::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSQLResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSQLResult::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSQLResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSQLResult::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSQLResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSQLResult::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSQLResult*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMessage::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMessage::Class_Name()
{
   return "TMessage";
}

//______________________________________________________________________________
const char *TMessage::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMessage*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMessage::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMessage*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMessage::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMessage*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMessage::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMessage*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMonitor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMonitor::Class_Name()
{
   return "TMonitor";
}

//______________________________________________________________________________
const char *TMonitor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMonitor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMonitor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMonitor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMonitor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMonitor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMonitor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMonitor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPSocket::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPSocket::Class_Name()
{
   return "TPSocket";
}

//______________________________________________________________________________
const char *TPSocket::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPSocket*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPSocket::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPSocket*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPSocket::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPSocket*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPSocket::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPSocket*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPServerSocket::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPServerSocket::Class_Name()
{
   return "TPServerSocket";
}

//______________________________________________________________________________
const char *TPServerSocket::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPServerSocket*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPServerSocket::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPServerSocket*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPServerSocket::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPServerSocket*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPServerSocket::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPServerSocket*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TWebFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TWebFile::Class_Name()
{
   return "TWebFile";
}

//______________________________________________________________________________
const char *TWebFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TWebFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TWebFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TWebFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TWebFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TWebFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TWebFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TWebFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSQLServer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSQLServer::Class_Name()
{
   return "TSQLServer";
}

//______________________________________________________________________________
const char *TSQLServer::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSQLServer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSQLServer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSQLServer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSQLServer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSQLServer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSQLServer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSQLServer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TInetAddress::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TInetAddress.

      TClass *R__cl = ::TInetAddress::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fHostname", &fHostname);
      fHostname.ShowMembers(R__insp, strcat(R__parent,"fHostname.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAddress", &fAddress);
      R__insp.Inspect(R__cl, R__parent, "fFamily", &fFamily);
      R__insp.Inspect(R__cl, R__parent, "fPort", &fPort);
      R__insp.Inspect(R__cl, R__parent, "fAddresses", (void*)&fAddresses);
      ::ROOT::GenericShowMembers("TInetAddress::AddressList_t", (void*)&fAddresses, R__insp, strcat(R__parent,"fAddresses."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAliases", (void*)&fAliases);
      ::ROOT::GenericShowMembers("TInetAddress::AliasList_t", (void*)&fAliases, R__insp, strcat(R__parent,"fAliases."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TInetAddress_IsA(const void *obj) {
      return ((::TInetAddress*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TInetAddress(void *p) {
      return  p ? new(p) ::TInetAddress : new ::TInetAddress;
   }
   static void *newArray_TInetAddress(Long_t size) {
      return new ::TInetAddress[size];
   }
   // Wrapper around operator delete
   static void delete_TInetAddress(void *p) {
      delete ((::TInetAddress*)p);
   }
   static void deleteArray_TInetAddress(void *p) {
      delete [] ((::TInetAddress*)p);
   }
   static void destruct_TInetAddress(void *p) {
      typedef ::TInetAddress current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TInetAddress

//______________________________________________________________________________
void TAuthenticate::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAuthenticate.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TAuthenticate::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAuthenticate.

      TClass *R__cl = ::TAuthenticate::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDetails", &fDetails);
      fDetails.ShowMembers(R__insp, strcat(R__parent,"fDetails.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fHostAuth", &fHostAuth);
      R__insp.Inspect(R__cl, R__parent, "fPasswd", &fPasswd);
      fPasswd.ShowMembers(R__insp, strcat(R__parent,"fPasswd.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fProtocol", &fProtocol);
      fProtocol.ShowMembers(R__insp, strcat(R__parent,"fProtocol.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPwHash", &fPwHash);
      R__insp.Inspect(R__cl, R__parent, "fRemote", &fRemote);
      fRemote.ShowMembers(R__insp, strcat(R__parent,"fRemote.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRSAKey", &fRSAKey);
      R__insp.Inspect(R__cl, R__parent, "*fSecContext", &fSecContext);
      R__insp.Inspect(R__cl, R__parent, "fSecurity", &fSecurity);
      R__insp.Inspect(R__cl, R__parent, "*fSocket", &fSocket);
      R__insp.Inspect(R__cl, R__parent, "fSRPPwd", &fSRPPwd);
      R__insp.Inspect(R__cl, R__parent, "fVersion", &fVersion);
      R__insp.Inspect(R__cl, R__parent, "fUser", &fUser);
      fUser.ShowMembers(R__insp, strcat(R__parent,"fUser.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTimeOut", &fTimeOut);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAuthenticate_IsA(const void *obj) {
      return ((::TAuthenticate*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TAuthenticate(void *p) {
      delete ((::TAuthenticate*)p);
   }
   static void deleteArray_TAuthenticate(void *p) {
      delete [] ((::TAuthenticate*)p);
   }
   static void destruct_TAuthenticate(void *p) {
      typedef ::TAuthenticate current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAuthenticate

//______________________________________________________________________________
void TServerSocket::Streamer(TBuffer &R__b)
{
   // Stream an object of class TServerSocket.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TSocket::Streamer(R__b);
      R__b >> fSecContexts;
      R__b.CheckByteCount(R__s, R__c, TServerSocket::IsA());
   } else {
      R__c = R__b.WriteVersion(TServerSocket::IsA(), kTRUE);
      TSocket::Streamer(R__b);
      R__b << fSecContexts;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TServerSocket::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TServerSocket.

      TClass *R__cl = ::TServerSocket::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSecContexts", &fSecContexts);
      TSocket::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TServerSocket_IsA(const void *obj) {
      return ((::TServerSocket*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TServerSocket(void *p) {
      delete ((::TServerSocket*)p);
   }
   static void deleteArray_TServerSocket(void *p) {
      delete [] ((::TServerSocket*)p);
   }
   static void destruct_TServerSocket(void *p) {
      typedef ::TServerSocket current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TServerSocket

//______________________________________________________________________________
void TSocket::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSocket.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      fAddress.Streamer(R__b);
      R__b >> fBytesRecv;
      R__b >> fBytesSent;
      R__b >> fCompress;
      fLocalAddress.Streamer(R__b);
      R__b >> fRemoteProtocol;
      R__b >> fSecContext;
      fService.Streamer(R__b);
      R__b >> (Int_t&)fServType;
      R__b >> fSocket;
      R__b >> fTcpWindowSize;
      fUrl.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TSocket::IsA());
   } else {
      R__c = R__b.WriteVersion(TSocket::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      fAddress.Streamer(R__b);
      R__b << fBytesRecv;
      R__b << fBytesSent;
      R__b << fCompress;
      fLocalAddress.Streamer(R__b);
      R__b << fRemoteProtocol;
      R__b << fSecContext;
      fService.Streamer(R__b);
      R__b << (Int_t)fServType;
      R__b << fSocket;
      R__b << fTcpWindowSize;
      fUrl.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TSocket::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSocket.

      TClass *R__cl = ::TSocket::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fAddress", &fAddress);
      fAddress.ShowMembers(R__insp, strcat(R__parent,"fAddress.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fBytesRecv", &fBytesRecv);
      R__insp.Inspect(R__cl, R__parent, "fBytesSent", &fBytesSent);
      R__insp.Inspect(R__cl, R__parent, "fCompress", &fCompress);
      R__insp.Inspect(R__cl, R__parent, "fLocalAddress", &fLocalAddress);
      fLocalAddress.ShowMembers(R__insp, strcat(R__parent,"fLocalAddress.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRemoteProtocol", &fRemoteProtocol);
      R__insp.Inspect(R__cl, R__parent, "*fSecContext", &fSecContext);
      R__insp.Inspect(R__cl, R__parent, "fService", &fService);
      fService.ShowMembers(R__insp, strcat(R__parent,"fService.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fServType", &fServType);
      R__insp.Inspect(R__cl, R__parent, "fSocket", &fSocket);
      R__insp.Inspect(R__cl, R__parent, "fTcpWindowSize", &fTcpWindowSize);
      R__insp.Inspect(R__cl, R__parent, "fUrl", &fUrl);
      fUrl.ShowMembers(R__insp, strcat(R__parent,"fUrl.")); R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSocket_IsA(const void *obj) {
      return ((::TSocket*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TSocket(void *p) {
      delete ((::TSocket*)p);
   }
   static void deleteArray_TSocket(void *p) {
      delete [] ((::TSocket*)p);
   }
   static void destruct_TSocket(void *p) {
      typedef ::TSocket current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSocket

//______________________________________________________________________________
void TPServerSocket::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPServerSocket.

   TServerSocket::Streamer(R__b);
}

//______________________________________________________________________________
void TPServerSocket::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPServerSocket.

      TClass *R__cl = ::TPServerSocket::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTcpWindowSize", &fTcpWindowSize);
      TServerSocket::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPServerSocket_IsA(const void *obj) {
      return ((::TPServerSocket*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TPServerSocket(void *p) {
      delete ((::TPServerSocket*)p);
   }
   static void deleteArray_TPServerSocket(void *p) {
      delete [] ((::TPServerSocket*)p);
   }
   static void destruct_TPServerSocket(void *p) {
      typedef ::TPServerSocket current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPServerSocket

//______________________________________________________________________________
void TPSocket::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPSocket.

   TSocket::Streamer(R__b);
}

//______________________________________________________________________________
void TPSocket::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPSocket.

      TClass *R__cl = ::TPSocket::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSockets", &fSockets);
      R__insp.Inspect(R__cl, R__parent, "*fWriteMonitor", &fWriteMonitor);
      R__insp.Inspect(R__cl, R__parent, "*fReadMonitor", &fReadMonitor);
      R__insp.Inspect(R__cl, R__parent, "fSize", &fSize);
      R__insp.Inspect(R__cl, R__parent, "*fWriteBytesLeft", &fWriteBytesLeft);
      R__insp.Inspect(R__cl, R__parent, "*fReadBytesLeft", &fReadBytesLeft);
      R__insp.Inspect(R__cl, R__parent, "*fWritePtr", &fWritePtr);
      R__insp.Inspect(R__cl, R__parent, "*fReadPtr", &fReadPtr);
      TSocket::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPSocket_IsA(const void *obj) {
      return ((::TPSocket*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TPSocket(void *p) {
      delete ((::TPSocket*)p);
   }
   static void deleteArray_TPSocket(void *p) {
      delete [] ((::TPSocket*)p);
   }
   static void destruct_TPSocket(void *p) {
      typedef ::TPSocket current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPSocket

//______________________________________________________________________________
void TMessage::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMessage.

   TBuffer::Streamer(R__b);
}

//______________________________________________________________________________
void TMessage::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMessage.

      TClass *R__cl = ::TMessage::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fWhat", &fWhat);
      R__insp.Inspect(R__cl, R__parent, "*fClass", &fClass);
      R__insp.Inspect(R__cl, R__parent, "fCompress", &fCompress);
      R__insp.Inspect(R__cl, R__parent, "*fBufComp", &fBufComp);
      R__insp.Inspect(R__cl, R__parent, "*fBufCompCur", &fBufCompCur);
      R__insp.Inspect(R__cl, R__parent, "*fCompPos", &fCompPos);
      TBuffer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMessage_IsA(const void *obj) {
      return ((::TMessage*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMessage(void *p) {
      return  p ? new(p) ::TMessage : new ::TMessage;
   }
   static void *newArray_TMessage(Long_t size) {
      return new ::TMessage[size];
   }
   // Wrapper around operator delete
   static void delete_TMessage(void *p) {
      delete ((::TMessage*)p);
   }
   static void deleteArray_TMessage(void *p) {
      delete [] ((::TMessage*)p);
   }
   static void destruct_TMessage(void *p) {
      typedef ::TMessage current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMessage

//______________________________________________________________________________
void TMonitor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMonitor.

   TObject::Streamer(R__b);
   TQObject::Streamer(R__b);
}

//______________________________________________________________________________
void TMonitor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMonitor.

      TClass *R__cl = ::TMonitor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fActive", &fActive);
      R__insp.Inspect(R__cl, R__parent, "*fDeActive", &fDeActive);
      R__insp.Inspect(R__cl, R__parent, "*fReady", &fReady);
      R__insp.Inspect(R__cl, R__parent, "fMainLoop", &fMainLoop);
      TObject::ShowMembers(R__insp, R__parent);
      TQObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMonitor_IsA(const void *obj) {
      return ((::TMonitor*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMonitor(void *p) {
      return  p ? new(p) ::TMonitor : new ::TMonitor;
   }
   static void *newArray_TMonitor(Long_t size) {
      return new ::TMonitor[size];
   }
   // Wrapper around operator delete
   static void delete_TMonitor(void *p) {
      delete ((::TMonitor*)p);
   }
   static void deleteArray_TMonitor(void *p) {
      delete [] ((::TMonitor*)p);
   }
   static void destruct_TMonitor(void *p) {
      typedef ::TMonitor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMonitor

//______________________________________________________________________________
void TUrl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TUrl.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      fUrl.Streamer(R__b);
      fProtocol.Streamer(R__b);
      fUser.Streamer(R__b);
      fPasswd.Streamer(R__b);
      fHost.Streamer(R__b);
      fFile.Streamer(R__b);
      fAnchor.Streamer(R__b);
      fOptions.Streamer(R__b);
      R__b >> fPort;
      R__b.CheckByteCount(R__s, R__c, TUrl::IsA());
   } else {
      R__c = R__b.WriteVersion(TUrl::IsA(), kTRUE);
      TObject::Streamer(R__b);
      fUrl.Streamer(R__b);
      fProtocol.Streamer(R__b);
      fUser.Streamer(R__b);
      fPasswd.Streamer(R__b);
      fHost.Streamer(R__b);
      fFile.Streamer(R__b);
      fAnchor.Streamer(R__b);
      fOptions.Streamer(R__b);
      R__b << fPort;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TUrl::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TUrl.

      TClass *R__cl = ::TUrl::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fUrl", &fUrl);
      fUrl.ShowMembers(R__insp, strcat(R__parent,"fUrl.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fProtocol", &fProtocol);
      fProtocol.ShowMembers(R__insp, strcat(R__parent,"fProtocol.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUser", &fUser);
      fUser.ShowMembers(R__insp, strcat(R__parent,"fUser.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPasswd", &fPasswd);
      fPasswd.ShowMembers(R__insp, strcat(R__parent,"fPasswd.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fHost", &fHost);
      fHost.ShowMembers(R__insp, strcat(R__parent,"fHost.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFile", &fFile);
      fFile.ShowMembers(R__insp, strcat(R__parent,"fFile.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAnchor", &fAnchor);
      fAnchor.ShowMembers(R__insp, strcat(R__parent,"fAnchor.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOptions", &fOptions);
      fOptions.ShowMembers(R__insp, strcat(R__parent,"fOptions.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPort", &fPort);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TUrl_IsA(const void *obj) {
      return ((::TUrl*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TUrl(void *p) {
      delete ((::TUrl*)p);
   }
   static void deleteArray_TUrl(void *p) {
      delete [] ((::TUrl*)p);
   }
   static void destruct_TUrl(void *p) {
      typedef ::TUrl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TUrl

//______________________________________________________________________________
void TNetFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TNetFile.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TFile::Streamer(R__b);
      fUrl.Streamer(R__b);
      fUser.Streamer(R__b);
      R__b >> fSocket;
      R__b >> fProtocol;
      R__b >> fErrorCode;
      R__b.CheckByteCount(R__s, R__c, TNetFile::IsA());
   } else {
      R__c = R__b.WriteVersion(TNetFile::IsA(), kTRUE);
      TFile::Streamer(R__b);
      fUrl.Streamer(R__b);
      fUser.Streamer(R__b);
      R__b << fSocket;
      R__b << fProtocol;
      R__b << fErrorCode;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TNetFile::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TNetFile.

      TClass *R__cl = ::TNetFile::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fUrl", &fUrl);
      fUrl.ShowMembers(R__insp, strcat(R__parent,"fUrl.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUser", &fUser);
      fUser.ShowMembers(R__insp, strcat(R__parent,"fUser.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fSocket", &fSocket);
      R__insp.Inspect(R__cl, R__parent, "fProtocol", &fProtocol);
      R__insp.Inspect(R__cl, R__parent, "fErrorCode", &fErrorCode);
      TFile::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TNetFile_IsA(const void *obj) {
      return ((::TNetFile*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TNetFile(void *p) {
      return  p ? new(p) ::TNetFile : new ::TNetFile;
   }
   static void *newArray_TNetFile(Long_t size) {
      return new ::TNetFile[size];
   }
   // Wrapper around operator delete
   static void delete_TNetFile(void *p) {
      delete ((::TNetFile*)p);
   }
   static void deleteArray_TNetFile(void *p) {
      delete [] ((::TNetFile*)p);
   }
   static void destruct_TNetFile(void *p) {
      typedef ::TNetFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TNetFile

//______________________________________________________________________________
void TNetSystem::Streamer(TBuffer &R__b)
{
   // Stream an object of class TNetSystem.

   TSystem::Streamer(R__b);
}

//______________________________________________________________________________
void TNetSystem::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TNetSystem.

      TClass *R__cl = ::TNetSystem::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDir", &fDir);
      R__insp.Inspect(R__cl, R__parent, "*fDirp", &fDirp);
      R__insp.Inspect(R__cl, R__parent, "*fFTP", &fFTP);
      R__insp.Inspect(R__cl, R__parent, "fHost", &fHost);
      fHost.ShowMembers(R__insp, strcat(R__parent,"fHost.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUser", &fUser);
      fUser.ShowMembers(R__insp, strcat(R__parent,"fUser.")); R__parent[R__ncp] = 0;
      TSystem::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TNetSystem_IsA(const void *obj) {
      return ((::TNetSystem*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TNetSystem(void *p) {
      return  p ? new(p) ::TNetSystem : new ::TNetSystem;
   }
   static void *newArray_TNetSystem(Long_t size) {
      return new ::TNetSystem[size];
   }
   // Wrapper around operator delete
   static void delete_TNetSystem(void *p) {
      delete ((::TNetSystem*)p);
   }
   static void deleteArray_TNetSystem(void *p) {
      delete [] ((::TNetSystem*)p);
   }
   static void destruct_TNetSystem(void *p) {
      typedef ::TNetSystem current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TNetSystem

//______________________________________________________________________________
void TWebFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TWebFile.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TFile::Streamer(R__b);
      fUrl.Streamer(R__b);
      R__b >> fOffset;
      R__b.CheckByteCount(R__s, R__c, TWebFile::IsA());
   } else {
      R__c = R__b.WriteVersion(TWebFile::IsA(), kTRUE);
      TFile::Streamer(R__b);
      fUrl.Streamer(R__b);
      R__b << fOffset;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TWebFile::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TWebFile.

      TClass *R__cl = ::TWebFile::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fUrl", &fUrl);
      fUrl.ShowMembers(R__insp, strcat(R__parent,"fUrl.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOffset", &fOffset);
      TFile::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TWebFile_IsA(const void *obj) {
      return ((::TWebFile*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TWebFile(void *p) {
      delete ((::TWebFile*)p);
   }
   static void deleteArray_TWebFile(void *p) {
      delete [] ((::TWebFile*)p);
   }
   static void destruct_TWebFile(void *p) {
      typedef ::TWebFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TWebFile

//______________________________________________________________________________
void TCache::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCache.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TCache::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCache.

      TClass *R__cl = ::TCache::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fCache", &fCache);
      R__insp.Inspect(R__cl, R__parent, "*fNew", &fNew);
      R__insp.Inspect(R__cl, R__parent, "*fFree", &fFree);
      R__insp.Inspect(R__cl, R__parent, "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__parent, "fEOF", &fEOF);
      R__insp.Inspect(R__cl, R__parent, "fHighWater", &fHighWater);
      R__insp.Inspect(R__cl, R__parent, "fLowWater", &fLowWater);
      R__insp.Inspect(R__cl, R__parent, "fPageSize", &fPageSize);
      R__insp.Inspect(R__cl, R__parent, "fLowLevel", &fLowLevel);
      R__insp.Inspect(R__cl, R__parent, "fDiv", &fDiv);
      R__insp.Inspect(R__cl, R__parent, "fRecursive", &fRecursive);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCache_IsA(const void *obj) {
      return ((::TCache*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TCache(void *p) {
      delete ((::TCache*)p);
   }
   static void deleteArray_TCache(void *p) {
      delete [] ((::TCache*)p);
   }
   static void destruct_TCache(void *p) {
      typedef ::TCache current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCache

//______________________________________________________________________________
void TFTP::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFTP.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      fHost.Streamer(R__b);
      fUser.Streamer(R__b);
      R__b >> fPort;
      R__b >> fParallel;
      R__b >> fWindowSize;
      R__b >> fProtocol;
      R__b >> fLastBlock;
      R__b >> fBlockSize;
      R__b >> fMode;
      R__b >> fRestartAt;
      fCurrentFile.Streamer(R__b);
      R__b >> fBytesWrite;
      R__b >> fBytesRead;
      R__b >> fDir;
      R__b.CheckByteCount(R__s, R__c, TFTP::IsA());
   } else {
      R__c = R__b.WriteVersion(TFTP::IsA(), kTRUE);
      TObject::Streamer(R__b);
      fHost.Streamer(R__b);
      fUser.Streamer(R__b);
      R__b << fPort;
      R__b << fParallel;
      R__b << fWindowSize;
      R__b << fProtocol;
      R__b << fLastBlock;
      R__b << fBlockSize;
      R__b << fMode;
      R__b << fRestartAt;
      fCurrentFile.Streamer(R__b);
      R__b << fBytesWrite;
      R__b << fBytesRead;
      R__b << fDir;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TFTP::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFTP.

      TClass *R__cl = ::TFTP::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fHost", &fHost);
      fHost.ShowMembers(R__insp, strcat(R__parent,"fHost.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUser", &fUser);
      fUser.ShowMembers(R__insp, strcat(R__parent,"fUser.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPort", &fPort);
      R__insp.Inspect(R__cl, R__parent, "fParallel", &fParallel);
      R__insp.Inspect(R__cl, R__parent, "fWindowSize", &fWindowSize);
      R__insp.Inspect(R__cl, R__parent, "fProtocol", &fProtocol);
      R__insp.Inspect(R__cl, R__parent, "fLastBlock", &fLastBlock);
      R__insp.Inspect(R__cl, R__parent, "fBlockSize", &fBlockSize);
      R__insp.Inspect(R__cl, R__parent, "fMode", &fMode);
      R__insp.Inspect(R__cl, R__parent, "fRestartAt", &fRestartAt);
      R__insp.Inspect(R__cl, R__parent, "fCurrentFile", &fCurrentFile);
      fCurrentFile.ShowMembers(R__insp, strcat(R__parent,"fCurrentFile.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fSocket", &fSocket);
      R__insp.Inspect(R__cl, R__parent, "fBytesWrite", &fBytesWrite);
      R__insp.Inspect(R__cl, R__parent, "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__parent, "fDir", &fDir);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TFTP_IsA(const void *obj) {
      return ((::TFTP*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TFTP(void *p) {
      delete ((::TFTP*)p);
   }
   static void deleteArray_TFTP(void *p) {
      delete [] ((::TFTP*)p);
   }
   static void destruct_TFTP(void *p) {
      typedef ::TFTP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFTP

//______________________________________________________________________________
void TSQLServer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSQLServer.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TSQLServer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSQLServer.

      TClass *R__cl = ::TSQLServer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      fType.ShowMembers(R__insp, strcat(R__parent,"fType.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fHost", &fHost);
      fHost.ShowMembers(R__insp, strcat(R__parent,"fHost.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDB", &fDB);
      fDB.ShowMembers(R__insp, strcat(R__parent,"fDB.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPort", &fPort);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSQLServer_IsA(const void *obj) {
      return ((::TSQLServer*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TSQLServer(void *p) {
      delete ((::TSQLServer*)p);
   }
   static void deleteArray_TSQLServer(void *p) {
      delete [] ((::TSQLServer*)p);
   }
   static void destruct_TSQLServer(void *p) {
      typedef ::TSQLServer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSQLServer

//______________________________________________________________________________
void TSQLResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSQLResult.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TSQLResult::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSQLResult.

      TClass *R__cl = ::TSQLResult::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRowCount", &fRowCount);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSQLResult_IsA(const void *obj) {
      return ((::TSQLResult*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TSQLResult(void *p) {
      delete ((::TSQLResult*)p);
   }
   static void deleteArray_TSQLResult(void *p) {
      delete [] ((::TSQLResult*)p);
   }
   static void destruct_TSQLResult(void *p) {
      typedef ::TSQLResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSQLResult

//______________________________________________________________________________
void TSQLRow::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSQLRow.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TSQLRow::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSQLRow.

      TClass *R__cl = ::TSQLRow::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSQLRow_IsA(const void *obj) {
      return ((::TSQLRow*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TSQLRow(void *p) {
      delete ((::TSQLRow*)p);
   }
   static void deleteArray_TSQLRow(void *p) {
      delete [] ((::TSQLRow*)p);
   }
   static void destruct_TSQLRow(void *p) {
      typedef ::TSQLRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSQLRow

//______________________________________________________________________________
void TGrid::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGrid.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TGrid::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGrid.

      TClass *R__cl = ::TGrid::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fGrid", &fGrid);
      fGrid.ShowMembers(R__insp, strcat(R__parent,"fGrid.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fHost", &fHost);
      fHost.ShowMembers(R__insp, strcat(R__parent,"fHost.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPort", &fPort);
      R__insp.Inspect(R__cl, R__parent, "*fProof", &fProof);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGrid_IsA(const void *obj) {
      return ((::TGrid*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGrid(void *p) {
      delete ((::TGrid*)p);
   }
   static void deleteArray_TGrid(void *p) {
      delete [] ((::TGrid*)p);
   }
   static void destruct_TGrid(void *p) {
      typedef ::TGrid current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGrid

//______________________________________________________________________________
void TGridResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGridResult.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TGridResult::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGridResult.

      TClass *R__cl = ::TGridResult::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fResults", &fResults);
      R__insp.Inspect(R__cl, R__parent, "fCurrent", &fCurrent);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGridResult_IsA(const void *obj) {
      return ((::TGridResult*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGridResult(void *p) {
      delete ((::TGridResult*)p);
   }
   static void deleteArray_TGridResult(void *p) {
      delete [] ((::TGridResult*)p);
   }
   static void destruct_TGridResult(void *p) {
      typedef ::TGridResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGridResult

//______________________________________________________________________________
void TGridProof::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGridProof.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TGridProof::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGridProof.

      TClass *R__cl = ::TGridProof::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fProof", &fProof);
      R__insp.Inspect(R__cl, R__parent, "*fProofSession", &fProofSession);
      R__insp.Inspect(R__cl, R__parent, "fProofMasterUrl", &fProofMasterUrl);
      fProofMasterUrl.ShowMembers(R__insp, strcat(R__parent,"fProofMasterUrl.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fProofLogin", &fProofLogin);
      fProofLogin.ShowMembers(R__insp, strcat(R__parent,"fProofLogin.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fProofPasswd", &fProofPasswd);
      fProofPasswd.ShowMembers(R__insp, strcat(R__parent,"fProofPasswd.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fProofConfigFile", &fProofConfigFile);
      fProofConfigFile.ShowMembers(R__insp, strcat(R__parent,"fProofConfigFile.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGridProof_IsA(const void *obj) {
      return ((::TGridProof*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGridProof(void *p) {
      delete ((::TGridProof*)p);
   }
   static void deleteArray_TGridProof(void *p) {
      delete [] ((::TGridProof*)p);
   }
   static void destruct_TGridProof(void *p) {
      typedef ::TGridProof current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGridProof

//______________________________________________________________________________
void THostAuth::Streamer(TBuffer &R__b)
{
   // Stream an object of class THostAuth.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void THostAuth::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THostAuth.

      TClass *R__cl = ::THostAuth::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fHost", &fHost);
      fHost.ShowMembers(R__insp, strcat(R__parent,"fHost.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fServer", &fServer);
      R__insp.Inspect(R__cl, R__parent, "fUser", &fUser);
      fUser.ShowMembers(R__insp, strcat(R__parent,"fUser.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNumMethods", &fNumMethods);
      R__insp.Inspect(R__cl, R__parent, "fMethods[6]", fMethods);
      R__insp.Inspect(R__cl, R__parent, "fDetails[6]", fDetails);
      R__insp.Inspect(R__cl, R__parent, "fSuccess[6]", fSuccess);
      R__insp.Inspect(R__cl, R__parent, "fFailure[6]", fFailure);
      R__insp.Inspect(R__cl, R__parent, "fActive", &fActive);
      R__insp.Inspect(R__cl, R__parent, "*fSecContexts", &fSecContexts);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *THostAuth_IsA(const void *obj) {
      return ((::THostAuth*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_THostAuth(void *p) {
      delete ((::THostAuth*)p);
   }
   static void deleteArray_THostAuth(void *p) {
      delete [] ((::THostAuth*)p);
   }
   static void destruct_THostAuth(void *p) {
      typedef ::THostAuth current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THostAuth

//______________________________________________________________________________
void TSecContext::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSecContext.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TSecContext::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSecContext.

      TClass *R__cl = ::TSecContext::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fContext", &fContext);
      R__insp.Inspect(R__cl, R__parent, "*fCleanup", &fCleanup);
      R__insp.Inspect(R__cl, R__parent, "fDetails", &fDetails);
      fDetails.ShowMembers(R__insp, strcat(R__parent,"fDetails.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fExpDate", &fExpDate);
      fExpDate.ShowMembers(R__insp, strcat(R__parent,"fExpDate.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fHost", &fHost);
      fHost.ShowMembers(R__insp, strcat(R__parent,"fHost.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMethod", &fMethod);
      R__insp.Inspect(R__cl, R__parent, "fOffSet", &fOffSet);
      R__insp.Inspect(R__cl, R__parent, "fRSAKey", &fRSAKey);
      R__insp.Inspect(R__cl, R__parent, "fToken", &fToken);
      fToken.ShowMembers(R__insp, strcat(R__parent,"fToken.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUser", &fUser);
      fUser.ShowMembers(R__insp, strcat(R__parent,"fUser.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSecContext_IsA(const void *obj) {
      return ((::TSecContext*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TSecContext(void *p) {
      delete ((::TSecContext*)p);
   }
   static void deleteArray_TSecContext(void *p) {
      delete [] ((::TSecContext*)p);
   }
   static void destruct_TSecContext(void *p) {
      typedef ::TSecContext current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSecContext

//______________________________________________________________________________
void TSecContextCleanup::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSecContextCleanup.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TSecContextCleanup::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSecContextCleanup.

      TClass *R__cl = ::TSecContextCleanup::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPort", &fPort);
      R__insp.Inspect(R__cl, R__parent, "fServerProtocol", &fServerProtocol);
      R__insp.Inspect(R__cl, R__parent, "fServerType", &fServerType);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSecContextCleanup_IsA(const void *obj) {
      return ((::TSecContextCleanup*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TSecContextCleanup(void *p) {
      delete ((::TSecContextCleanup*)p);
   }
   static void deleteArray_TSecContextCleanup(void *p) {
      delete [] ((::TSecContextCleanup*)p);
   }
   static void destruct_TSecContextCleanup(void *p) {
      typedef ::TSecContextCleanup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSecContextCleanup

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *Grid_Result_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::Grid_Result_t*)obj));
   }
   // Wrappers around operator new
   static void *new_Grid_Result_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Grid_Result_t : new ::Grid_Result_t;
   }
   static void *newArray_Grid_Result_t(Long_t size) {
      return new ::Grid_Result_t[size];
   }
   // Wrapper around operator delete
   static void delete_Grid_Result_t(void *p) {
      delete ((::Grid_Result_t*)p);
   }
   static void deleteArray_Grid_Result_t(void *p) {
      delete [] ((::Grid_Result_t*)p);
   }
   static void destruct_Grid_Result_t(void *p) {
      typedef ::Grid_Result_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Grid_Result_t

namespace ROOT {
   void vectorlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlETStringgR_Dictionary();
   static TClass *vectorlETStringgR_IsA(const void*);
   static void *new_vectorlETStringgR(void *p = 0);
   static void *newArray_vectorlETStringgR(Long_t size);
   static void delete_vectorlETStringgR(void *p);
   static void deleteArray_vectorlETStringgR(void *p);
   static void destruct_vectorlETStringgR(void *p);

   // Function generating the singleton type initializer
   static // The GenerateInitInstance for STL are not unique and should not be externally accessible
   TGenericClassInfo *GenerateInitInstance(const vector<TString>*)
   {
      vector<TString> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("vector<TString>", ::TStreamerInfo::Class_Version(), "prec_stl/vector", 42,
                  typeid(vector<TString>), DefineBehavior(ptr, ptr),
                  0, &vectorlETStringgR_Dictionary, &vectorlETStringgR_IsA, 0,
                  sizeof(vector<TString>) );
      instance.SetNew(&new_vectorlETStringgR);
      instance.SetNewArray(&newArray_vectorlETStringgR);
      instance.SetDelete(&delete_vectorlETStringgR);
      instance.SetDeleteArray(&deleteArray_vectorlETStringgR);
      instance.SetDestructor(&destruct_vectorlETStringgR);
      instance.AdoptStreamer(TCollectionProxy::genClassStreamer(TCollectionProxy::Pushback<vector<TString> >()));
      instance.AdoptCollectionProxy(TCollectionProxy::genProxy(TCollectionProxy::Pushback<vector<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const vector<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETStringgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const vector<TString>*)0x0)->GetClass();
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *vectorlETStringgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(vector<TString>*)obj));
   }
   // Wrappers around operator new
   static void *new_vectorlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString> : new vector<TString>;
   }
   static void *newArray_vectorlETStringgR(Long_t size) {
      return new vector<TString>[size];
   }
   // Wrapper around operator delete
   static void delete_vectorlETStringgR(void *p) {
      delete ((vector<TString>*)p);
   }
   static void deleteArray_vectorlETStringgR(void *p) {
      delete [] ((vector<TString>*)p);
   }
   static void destruct_vectorlETStringgR(void *p) {
      typedef vector<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TString>

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEunsignedsPintgR_Dictionary();
   static TClass *vectorlEunsignedsPintgR_IsA(const void*);
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static // The GenerateInitInstance for STL are not unique and should not be externally accessible
   TGenericClassInfo *GenerateInitInstance(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", ::TStreamerInfo::Class_Version(), "prec_stl/vector", 42,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, &vectorlEunsignedsPintgR_IsA, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptStreamer(TCollectionProxy::genClassStreamer(TCollectionProxy::Pushback<vector<unsigned int> >()));
      instance.AdoptCollectionProxy(TCollectionProxy::genProxy(TCollectionProxy::Pushback<vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const vector<unsigned int>*)0x0)->GetClass();
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *vectorlEunsignedsPintgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(vector<unsigned int>*)obj));
   }
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t size) {
      return new vector<unsigned int>[size];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

/********************************************************
* net/src/G__Net.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__Net();

extern "C" void G__set_cpp_environmentG__Net() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("net/inc/TAuthenticate.h");
  G__add_compiledheader("net/inc/TNetFile.h");
  G__add_compiledheader("net/inc/TGridProof.h");
  G__add_compiledheader("net/inc/THostAuth.h");
  G__add_compiledheader("net/inc/TSQLResult.h");
  G__add_compiledheader("net/inc/TPSocket.h");
  G__add_compiledheader("net/inc/TSQLRow.h");
  G__add_compiledheader("net/inc/TWebFile.h");
  G__add_compiledheader("net/inc/TServerSocket.h");
  G__add_compiledheader("net/inc/TSQLServer.h");
  G__add_compiledheader("net/inc/TUrl.h");
  G__add_compiledheader("net/inc/TInetAddress.h");
  G__add_compiledheader("net/inc/TPServerSocket.h");
  G__add_compiledheader("net/inc/AuthConst.h");
  G__add_compiledheader("net/inc/TMonitor.h");
  G__add_compiledheader("net/inc/TSocket.h");
  G__add_compiledheader("net/inc/TGridResult.h");
  G__add_compiledheader("net/inc/NetErrors.h");
  G__add_compiledheader("net/inc/TFTP.h");
  G__add_compiledheader("net/inc/TCache.h");
  G__add_compiledheader("net/inc/TGrid.h");
  G__add_compiledheader("net/inc/TMessage.h");
  G__add_compiledheader("net/inc/TSecContext.h");
  G__cpp_reset_tagtableG__Net();
}
class G__netdIsrcdIG__NetdOcxx_tag {};

void* operator new(size_t size,G__netdIsrcdIG__NetdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__netdIsrcdIG__NetdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_netdIsrcdIG__NetdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__Net() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TInetAddress */
static int G__G__Net_106_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TInetAddress *p=NULL;
   if(G__getaryconstruct()) p=new TInetAddress[G__getaryconstruct()];
   else                    p=new TInetAddress;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TInetAddress);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TInetAddress *p=NULL;
      p = new TInetAddress(*(TInetAddress*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TInetAddress);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TInetAddress& obj=((TInetAddress*)(G__getstructoffset()))->operator=(*(TInetAddress*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TInetAddress*)(G__getstructoffset()))->GetAddress());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,66,(long)((const TInetAddress*)(G__getstructoffset()))->GetAddressBytes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TInetAddress*)(G__getstructoffset()))->GetHostAddress());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TInetAddress*)(G__getstructoffset()))->GetHostName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TInetAddress*)(G__getstructoffset()))->GetFamily());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TInetAddress*)(G__getstructoffset()))->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TInetAddress::AddressList_t& obj=((const TInetAddress*)(G__getstructoffset()))->GetAddresses();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TInetAddress::AliasList_t& obj=((const TInetAddress*)(G__getstructoffset()))->GetAliases();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TInetAddress*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TInetAddress*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TInetAddress*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TInetAddress::GetHostAddress((UInt_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TInetAddress::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TInetAddress::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TInetAddress::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TInetAddress::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TInetAddress*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TInetAddress*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TInetAddress*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TInetAddress*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TInetAddress::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TInetAddress::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TInetAddress::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_106_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TInetAddress::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TInetAddress G__TTInetAddress;
static int G__G__Net_106_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TInetAddress *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TInetAddress *)((G__getstructoffset())+sizeof(TInetAddress)*i);
   else  delete (TInetAddress *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAuthenticate */
static int G__G__Net_131_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAuthenticate *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TAuthenticate(
(TSocket*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3]));
      break;
   case 3:
      p = new TAuthenticate(
(TSocket*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TAuthenticate);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TAuthenticate*)(G__getstructoffset()))->AuthExists(*((TString*)G__int(libp->para[0])),(Int_t)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t*)G__int(libp->para[3])
,(Int_t*)G__int(libp->para[4]),(CheckSecCtx_t)G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAuthenticate*)(G__getstructoffset()))->CatchTimeOut();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TAuthenticate*)(G__getstructoffset()))->CheckNetrc(*(TString*)libp->para[0].ref,*(TString*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TAuthenticate*)(G__getstructoffset()))->CheckNetrc(*(TString*)libp->para[0].ref,*(TString*)libp->para[1].ref
,*(Bool_t*)G__Boolref(&libp->para[2]),(Bool_t)G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAuthenticate*)(G__getstructoffset()))->GetHostAuth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TAuthenticate*)(G__getstructoffset()))->GetProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TAuthenticate*)(G__getstructoffset()))->GetRemoteHost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TAuthenticate*)(G__getstructoffset()))->GetRSAKeyType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAuthenticate*)(G__getstructoffset()))->GetSocket());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TAuthenticate*)(G__getstructoffset()))->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TAuthenticate*)(G__getstructoffset()))->HasTimedOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAuthenticate*)(G__getstructoffset()))->SetRSAKeyType((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAuthenticate*)(G__getstructoffset()))->SetSecContext((TSecContext*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::AuthError((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)TAuthenticate::CheckProofAuth((Int_t)G__int(libp->para[0]),*(TString*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      TAuthenticate::CleanupSecContextAll((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      TAuthenticate::CleanupSecContextAll();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,105,(long)TAuthenticate::DecodeRSAPublic((const char*)G__int(libp->para[0]),*(rsa_NUMBER*)libp->para[1].ref
,*(rsa_NUMBER*)libp->para[2].ref,(void**)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)TAuthenticate::DecodeRSAPublic((const char*)G__int(libp->para[0]),*(rsa_NUMBER*)libp->para[1].ref
,*(rsa_NUMBER*)libp->para[2].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAuthenticate::GetAuthInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAuthenticate::GetAuthMethod((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAuthenticate::GetAuthMethodIdx((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)TAuthenticate::GetAuthReUse());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAuthenticate::GetClientProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAuthenticate::GetDefaultDetails((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAuthenticate::GetDefaultUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TDatime *pobj,xobj=TAuthenticate::GetGlobalExpDate();
        pobj=new TDatime(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)TAuthenticate::GetGlobalPwHash());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)TAuthenticate::GetGlobalSRPPwd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAuthenticate::GetGlobalUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)TAuthenticate::GetGlobusAuthHook());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)TAuthenticate::GetHostAuth((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Int_t*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TAuthenticate::GetHostAuth((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TAuthenticate::GetHostAuth((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)TAuthenticate::GetHostAuth((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAuthenticate::GetKrb5Principal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)TAuthenticate::GetPromptUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAuthenticate::GetProofAuthInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAuthenticate::GetRSAInit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,67,(long)TAuthenticate::GetRSAPubExport((Int_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,67,(long)TAuthenticate::GetRSAPubExport());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)TAuthenticate::HasHostAuth((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TAuthenticate::HasHostAuth((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::InitRandom();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      TAuthenticate::MergeHostAuthList((TList*)G__int(libp->para[0]),(TList*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      TAuthenticate::MergeHostAuthList((TList*)G__int(libp->para[0]),(TList*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,67,(long)TAuthenticate::PromptPasswd((const char*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,67,(long)TAuthenticate::PromptPasswd());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAuthenticate::PromptUser((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::ReadProofConf((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)TAuthenticate::ReadRootAuthrc((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)TAuthenticate::ReadRootAuthrc());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      TAuthenticate::RemoveHostAuth((THostAuth*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      TAuthenticate::RemoveHostAuth((THostAuth*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAuthenticate::SecureRecv((TSocket*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(char**)G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAuthenticate::SecureSend((TSocket*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)TAuthenticate::SendRSAPublicKey((TSocket*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)TAuthenticate::SendRSAPublicKey((TSocket*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetAuthReUse((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetDefaultUser((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetGlobalExpDate(*((TDatime*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetGlobalPasswd((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetGlobalPwHash((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetGlobalSRPPwd((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetGlobalUser((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetGlobusAuthHook((GlobusAuth_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetKrb5AuthHook((Krb5Auth_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetPromptUser((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetDefaultRSAKeyType((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      TAuthenticate::SetRSAInit((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      TAuthenticate::SetRSAInit();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAuthenticate::SetRSAPublic((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetSecureAuthHook((SecureAuth_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::SetTimeOut((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      TAuthenticate::Show((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      TAuthenticate::Show();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAuthenticate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAuthenticate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAuthenticate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAuthenticate::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAuthenticate*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAuthenticate*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAuthenticate*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAuthenticate*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAuthenticate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAuthenticate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAuthenticate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_131_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAuthenticate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Net_131_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TAuthenticate *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TAuthenticate(*(TAuthenticate*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TAuthenticate);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAuthenticate G__TTAuthenticate;
static int G__G__Net_131_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAuthenticate *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TAuthenticate *)((G__getstructoffset())+sizeof(TAuthenticate)*i);
   else  delete (TAuthenticate *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_131_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAuthenticate *dest = (TAuthenticate*)(G__getstructoffset());
   *dest = (*(TAuthenticate*)libp->para[0].ref);
   const TAuthenticate& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THostAuth */
static int G__G__Net_132_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THostAuth *p=NULL;
   switch(libp->paran) {
   case 5:
      p = new THostAuth(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t*)G__int(libp->para[3])
,(char**)G__int(libp->para[4]));
      break;
   case 4:
      p = new THostAuth(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t*)G__int(libp->para[3]));
      break;
   case 3:
      p = new THostAuth(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new THostAuth((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_THostAuth);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THostAuth *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new THostAuth(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t*)G__int(libp->para[4]),(char**)G__int(libp->para[5]));
      break;
   case 5:
      p = new THostAuth(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t*)G__int(libp->para[4]));
      break;
   case 4:
      p = new THostAuth(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new THostAuth(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_THostAuth);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THostAuth *p=NULL;
      p = new THostAuth(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(const char*)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_THostAuth);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THostAuth *p=NULL;
      p = new THostAuth(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_THostAuth);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THostAuth *p=NULL;
      p = new THostAuth((const char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_THostAuth);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THostAuth *p=NULL;
      p = new THostAuth(*(THostAuth*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_THostAuth);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->AsString(*(TString*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const THostAuth*)(G__getstructoffset()))->NumMethods());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const THostAuth*)(G__getstructoffset()))->GetMethod((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,103,(long)((THostAuth*)(G__getstructoffset()))->HasMethod((Int_t)G__int(libp->para[0]),(Int_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((THostAuth*)(G__getstructoffset()))->HasMethod((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->AddMethod((Int_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->AddMethod((Int_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->RemoveMethod((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->ReOrder((Int_t)G__int(libp->para[0]),(Int_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->Update((THostAuth*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->SetFirst((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->AddFirst((Int_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->AddFirst((Int_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->SetLast((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->CountFailure((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->CountSuccess((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const THostAuth*)(G__getstructoffset()))->GetFailure((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const THostAuth*)(G__getstructoffset()))->GetSuccess((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const THostAuth*)(G__getstructoffset()))->IsActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->DeActivate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->Activate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((THostAuth*)(G__getstructoffset()))->GetDetails((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const THostAuth*)(G__getstructoffset()))->GetDetailsByIdx((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->SetDetails((Int_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const THostAuth*)(G__getstructoffset()))->GetHost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const THostAuth*)(G__getstructoffset()))->GetServer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const THostAuth*)(G__getstructoffset()))->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->SetHost((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->SetServer((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->SetUser((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const THostAuth*)(G__getstructoffset()))->Established());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->SetEstablished((TList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const THostAuth*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const THostAuth*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const THostAuth*)(G__getstructoffset()))->PrintEstablished();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 9:
   G__letint(result7,85,(long)((THostAuth*)(G__getstructoffset()))->CreateSecContext(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]),(const char*)G__int(libp->para[5])
,*((TDatime*)G__int(libp->para[6])),(void*)G__int(libp->para[7])
,(Int_t)G__int(libp->para[8])));
      break;
   case 8:
   G__letint(result7,85,(long)((THostAuth*)(G__getstructoffset()))->CreateSecContext(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]),(const char*)G__int(libp->para[5])
,*((TDatime*)G__int(libp->para[6])),(void*)G__int(libp->para[7])));
      break;
   case 7:
   G__letint(result7,85,(long)((THostAuth*)(G__getstructoffset()))->CreateSecContext(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]),(const char*)G__int(libp->para[5])
,*((TDatime*)G__int(libp->para[6]))));
      break;
   case 6:
   G__letint(result7,85,(long)((THostAuth*)(G__getstructoffset()))->CreateSecContext((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]),(const char*)G__int(libp->para[5])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)THostAuth::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THostAuth::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)THostAuth::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      THostAuth::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const THostAuth*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THostAuth*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THostAuth::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THostAuth::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THostAuth::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_132_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THostAuth::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THostAuth G__TTHostAuth;
static int G__G__Net_132_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (THostAuth *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (THostAuth *)((G__getstructoffset())+sizeof(THostAuth)*i);
   else  delete (THostAuth *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_132_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THostAuth *dest = (THostAuth*)(G__getstructoffset());
   *dest = (*(THostAuth*)libp->para[0].ref);
   const THostAuth& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSocket */
static int G__G__Net_134_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSocket *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TSocket(
*((TInetAddress*)G__int(libp->para[0])),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TSocket(*((TInetAddress*)G__int(libp->para[0])),(const char*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSocket *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TSocket(
*((TInetAddress*)G__int(libp->para[0])),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TSocket(*((TInetAddress*)G__int(libp->para[0])),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSocket *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TSocket(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TSocket((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSocket *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TSocket(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TSocket((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSocket *p=NULL;
      p = new TSocket((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSocket *p=NULL;
      p = new TSocket(*(TSocket*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSocket*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSocket*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSocket*)(G__getstructoffset()))->GetDescriptor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TInetAddress *pobj,xobj=((const TSocket*)(G__getstructoffset()))->GetInetAddress();
        pobj=new TInetAddress(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TInetAddress *pobj,xobj=((TSocket*)(G__getstructoffset()))->GetLocalInetAddress();
        pobj=new TInetAddress(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSocket*)(G__getstructoffset()))->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSocket*)(G__getstructoffset()))->GetService());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSocket*)(G__getstructoffset()))->GetServType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->GetLocalPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TSocket*)(G__getstructoffset()))->GetBytesSent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TSocket*)(G__getstructoffset()))->GetBytesRecv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSocket*)(G__getstructoffset()))->GetCompressionLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSocket*)(G__getstructoffset()))->GetErrorCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->GetOption((ESockOptions)G__int(libp->para[0]),*(Int_t*)G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSocket*)(G__getstructoffset()))->GetRemoteProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSocket*)(G__getstructoffset()))->GetSecContext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSocket*)(G__getstructoffset()))->GetTcpWindowSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSocket*)(G__getstructoffset()))->GetUrl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TSocket*)(G__getstructoffset()))->IsAuthenticated());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TSocket*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Recv(libp->para[0].ref?*(TMessage**)libp->para[0].ref:*(TMessage**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Recv(*(Int_t*)G__Intref(&libp->para[0]),*(Int_t*)G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Recv((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Recv((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(Int_t*)G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->RecvRaw((void*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(ESendRecvOptions)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->RecvRaw((void*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Select((Int_t)G__int(libp->para[0]),(Long_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Select((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Select());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Send(*(TMessage*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Send((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Send((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Send((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->Send((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->SendObject((const TObject*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->SendObject((const TObject*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->SendRaw((const void*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(ESendRecvOptions)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->SendRaw((const void*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSocket*)(G__getstructoffset()))->SetCompressionLevel((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSocket*)(G__getstructoffset()))->SetCompressionLevel();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSocket*)(G__getstructoffset()))->SetOption((ESockOptions)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSocket*)(G__getstructoffset()))->SetRemoteProtocol((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSocket*)(G__getstructoffset()))->SetSecContext((TSecContext*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSocket*)(G__getstructoffset()))->SetService((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSocket*)(G__getstructoffset()))->SetUrl((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letULonglong(result7,109,(G__uint64)TSocket::GetSocketBytesSent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letULonglong(result7,109,(G__uint64)TSocket::GetSocketBytesRecv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
   G__letint(result7,85,(long)TSocket::CreateAuthSocket((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(TSocket*)G__int(libp->para[5])));
      break;
   case 5:
   G__letint(result7,85,(long)TSocket::CreateAuthSocket((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)TSocket::CreateAuthSocket((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TSocket::CreateAuthSocket((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)TSocket::CreateAuthSocket((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TSocket*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TSocket::CreateAuthSocket((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TSocket::CreateAuthSocket((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)TSocket::CreateAuthSocket((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSocket::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSocket::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSocket::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSocket::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSocket*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSocket*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSocket*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSocket*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSocket::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSocket::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSocket::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_134_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSocket::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSocket G__TTSocket;
static int G__G__Net_134_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSocket *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSocket *)((G__getstructoffset())+sizeof(TSocket)*i);
   else  delete (TSocket *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSecContext */
static int G__G__Net_135_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSecContext *p=NULL;
   switch(libp->paran) {
   case 8:
      p = new TSecContext(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]),*((TDatime*)G__int(libp->para[5]))
,(void*)G__int(libp->para[6]),(Int_t)G__int(libp->para[7]));
      break;
   case 7:
      p = new TSecContext(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]),*((TDatime*)G__int(libp->para[5]))
,(void*)G__int(libp->para[6]));
      break;
   case 6:
      p = new TSecContext(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]),*((TDatime*)G__int(libp->para[5])));
      break;
   case 5:
      p = new TSecContext(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TSecContext);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSecContext *p=NULL;
   switch(libp->paran) {
   case 9:
      p = new TSecContext(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]),(const char*)G__int(libp->para[5])
,*((TDatime*)G__int(libp->para[6])),(void*)G__int(libp->para[7])
,(Int_t)G__int(libp->para[8]));
      break;
   case 8:
      p = new TSecContext(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]),(const char*)G__int(libp->para[5])
,*((TDatime*)G__int(libp->para[6])),(void*)G__int(libp->para[7]));
      break;
   case 7:
      p = new TSecContext(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]),(const char*)G__int(libp->para[5])
,*((TDatime*)G__int(libp->para[6])));
      break;
   case 6:
      p = new TSecContext(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const char*)G__int(libp->para[4]),(const char*)G__int(libp->para[5]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TSecContext);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContext*)(G__getstructoffset()))->AddForCleanup((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSecContext*)(G__getstructoffset()))->AsString());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContext*)(G__getstructoffset()))->Cleanup();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSecContext*)(G__getstructoffset()))->DeActivate((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSecContext*)(G__getstructoffset()))->DeActivate();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TSecContext*)(G__getstructoffset()))->GetContext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSecContext*)(G__getstructoffset()))->GetDetails());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TDatime *pobj,xobj=((const TSecContext*)(G__getstructoffset()))->GetExpDate();
        pobj=new TDatime(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSecContext*)(G__getstructoffset()))->GetHost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSecContext*)(G__getstructoffset()))->GetMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSecContext*)(G__getstructoffset()))->GetMethodName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSecContext*)(G__getstructoffset()))->GetOffSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSecContext*)(G__getstructoffset()))->GetRSAKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSecContext*)(G__getstructoffset()))->GetSecContextCleanup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSecContext*)(G__getstructoffset()))->GetToken());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSecContext*)(G__getstructoffset()))->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TSecContext*)(G__getstructoffset()))->IsA((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TSecContext*)(G__getstructoffset()))->IsActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TSecContext*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TSecContext*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContext*)(G__getstructoffset()))->SetDetails((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContext*)(G__getstructoffset()))->SetExpDate(*((TDatime*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContext*)(G__getstructoffset()))->SetOffSet((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContext*)(G__getstructoffset()))->SetUser((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSecContext::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSecContext::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSecContext::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSecContext::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSecContext*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContext*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContext*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContext*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSecContext::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSecContext::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSecContext::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_135_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSecContext::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Net_135_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TSecContext *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TSecContext(*(TSecContext*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TSecContext);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSecContext G__TTSecContext;
static int G__G__Net_135_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSecContext *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSecContext *)((G__getstructoffset())+sizeof(TSecContext)*i);
   else  delete (TSecContext *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_135_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSecContext *dest = (TSecContext*)(G__getstructoffset());
   *dest = (*(TSecContext*)libp->para[0].ref);
   const TSecContext& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCache */
static int G__G__Net_140_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCache *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TCache(
(Int_t)G__int(libp->para[0]),(TFile*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TCache((Int_t)G__int(libp->para[0]),(TFile*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TCache);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCache*)(G__getstructoffset()))->GetMaxCacheSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCache*)(G__getstructoffset()))->GetActiveCacheSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCache*)(G__getstructoffset()))->GetPageSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCache*)(G__getstructoffset()))->GetLowLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TCache*)(G__getstructoffset()))->Resize((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCache*)(G__getstructoffset()))->SetLowLevel((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TCache*)(G__getstructoffset()))->ReadBuffer((Long64_t)G__Longlong(libp->para[0]),(char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TCache*)(G__getstructoffset()))->WriteBuffer((Long64_t)G__Longlong(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TCache*)(G__getstructoffset()))->Flush());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCache::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCache::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCache::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCache::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCache*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCache*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCache*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCache*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCache::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCache::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCache::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_140_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCache::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Net_140_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TCache *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TCache(*(TCache*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TCache);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCache G__TTCache;
static int G__G__Net_140_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCache *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCache *)((G__getstructoffset())+sizeof(TCache)*i);
   else  delete (TCache *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_140_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCache *dest = (TCache*)(G__getstructoffset());
   *dest = (*(TCache*)libp->para[0].ref);
   const TCache& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TUrl */
static int G__G__Net_150_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TUrl *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TUrl((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TUrl((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TUrl);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TUrl *p=NULL;
      p = new TUrl(*(TUrl*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TUrl);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TUrl& obj=((TUrl*)(G__getstructoffset()))->operator=(*(TUrl*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TUrl*)(G__getstructoffset()))->GetUrl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TUrl*)(G__getstructoffset()))->GetProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TUrl*)(G__getstructoffset()))->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TUrl*)(G__getstructoffset()))->GetPasswd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TUrl*)(G__getstructoffset()))->GetHost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TUrl*)(G__getstructoffset()))->GetFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TUrl*)(G__getstructoffset()))->GetAnchor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TUrl*)(G__getstructoffset()))->GetOptions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TUrl*)(G__getstructoffset()))->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TUrl*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUrl*)(G__getstructoffset()))->SetProtocol((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUrl*)(G__getstructoffset()))->SetUser((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUrl*)(G__getstructoffset()))->SetPasswd((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUrl*)(G__getstructoffset()))->SetHost((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUrl*)(G__getstructoffset()))->SetFile((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUrl*)(G__getstructoffset()))->SetAnchor((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUrl*)(G__getstructoffset()))->SetOptions((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUrl*)(G__getstructoffset()))->SetPort((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TUrl*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TUrl*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TUrl::GetSpecialProtocols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TUrl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TUrl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TUrl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TUrl::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TUrl*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUrl*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUrl*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUrl*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TUrl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TUrl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TUrl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_150_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TUrl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TUrl G__TTUrl;
static int G__G__Net_150_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TUrl *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TUrl *)((G__getstructoffset())+sizeof(TUrl)*i);
   else  delete (TUrl *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TServerSocket */
static int G__G__Net_156_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TServerSocket *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TServerSocket(
(Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TServerSocket(
(Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TServerSocket((Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TServerSocket((Int_t)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TServerSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TServerSocket *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TServerSocket(
(const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TServerSocket(
(const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TServerSocket((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TServerSocket((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TServerSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TServerSocket*)(G__getstructoffset()))->Accept((UChar_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TServerSocket*)(G__getstructoffset()))->Accept());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TInetAddress *pobj,xobj=((TServerSocket*)(G__getstructoffset()))->GetLocalInetAddress();
        pobj=new TInetAddress(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->GetLocalPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->Send(*(TMessage*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->Send((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->Send((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->Send((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->Send((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->SendObject((const TObject*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->SendObject((const TObject*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->SendRaw((const void*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(ESendRecvOptions)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->SendRaw((const void*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->Recv(libp->para[0].ref?*(TMessage**)libp->para[0].ref:*(TMessage**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->Recv(*(Int_t*)G__Intref(&libp->para[0]),*(Int_t*)G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->Recv((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->Recv((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(Int_t*)G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->RecvRaw((void*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(ESendRecvOptions)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TServerSocket*)(G__getstructoffset()))->RecvRaw((void*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)TServerSocket::GetAcceptOptions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TServerSocket::SetAcceptOptions((UChar_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TServerSocket::ShowAcceptOptions();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TServerSocket::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TServerSocket::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TServerSocket::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TServerSocket::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TServerSocket*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TServerSocket*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TServerSocket*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TServerSocket*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TServerSocket::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TServerSocket::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TServerSocket::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_156_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TServerSocket::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TServerSocket G__TTServerSocket;
static int G__G__Net_156_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TServerSocket *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TServerSocket *)((G__getstructoffset())+sizeof(TServerSocket)*i);
   else  delete (TServerSocket *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFTP */
static int G__G__Net_208_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFTP *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TFTP(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TFTP((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TFTP((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TFTP);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->SetBlockSize((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->GetBlockSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->SetRestartAt((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TFTP*)(G__getstructoffset()))->GetRestartAt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->GetMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TFTP*)(G__getstructoffset()))->IsOpen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TFTP*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TFTP*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((TFTP*)(G__getstructoffset()))->PutFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TFTP*)(G__getstructoffset()))->PutFile((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((TFTP*)(G__getstructoffset()))->GetFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TFTP*)(G__getstructoffset()))->GetFile((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)((TFTP*)(G__getstructoffset()))->AccessPathName((const char*)G__int(libp->para[0]),(EAccessMode)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)((TFTP*)(G__getstructoffset()))->AccessPathName((const char*)G__int(libp->para[0]),(EAccessMode)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((TFTP*)(G__getstructoffset()))->AccessPathName((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,67,(long)((TFTP*)(G__getstructoffset()))->GetDirEntry((Bool_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,67,(long)((TFTP*)(G__getstructoffset()))->GetDirEntry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TFTP*)(G__getstructoffset()))->GetPathInfo((const char*)G__int(libp->para[0]),*(FileStat_t*)libp->para[1].ref
,(Bool_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TFTP*)(G__getstructoffset()))->GetPathInfo((const char*)G__int(libp->para[0]),*(FileStat_t*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->ChangeDirectory((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->MakeDirectory((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->MakeDirectory((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->DeleteDirectory((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->ListDirectory((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->ListDirectory());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->FreeDirectory((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->FreeDirectory();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,103,(long)((TFTP*)(G__getstructoffset()))->OpenDirectory((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((TFTP*)(G__getstructoffset()))->OpenDirectory((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->PrintDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->RenameFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->DeleteFile((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFTP*)(G__getstructoffset()))->ChangePermission((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TFTP*)(G__getstructoffset()))->Close());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->Binary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->Ascii();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TFTP*)(G__getstructoffset()))->GetSocket());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->put((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->put((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->get((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->get((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TFTP*)(G__getstructoffset()))->cd((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TFTP*)(G__getstructoffset()))->mkdir((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TFTP*)(G__getstructoffset()))->rmdir((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TFTP*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TFTP*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TFTP*)(G__getstructoffset()))->pwd();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TFTP*)(G__getstructoffset()))->mv((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TFTP*)(G__getstructoffset()))->rm((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TFTP*)(G__getstructoffset()))->chmod((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->bye();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->bin();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->ascii();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TFTP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFTP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TFTP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TFTP::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TFTP*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFTP*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFTP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFTP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFTP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_208_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFTP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFTP G__TTFTP;
static int G__G__Net_208_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TFTP *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TFTP *)((G__getstructoffset())+sizeof(TFTP)*i);
   else  delete (TFTP *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TNetFile */
static int G__G__Net_210_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNetFile *p=NULL;
   switch(libp->paran) {
   case 5:
      p = new TNetFile(
(const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TNetFile(
(const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TNetFile(
(const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TNetFile((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TNetFile((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TNetFile);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNetFile *p=NULL;
   if(G__getaryconstruct()) p=new TNetFile[G__getaryconstruct()];
   else                    p=new TNetFile;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TNetFile);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TNetFile*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TNetFile*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNetFile*)(G__getstructoffset()))->Flush();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TNetFile*)(G__getstructoffset()))->GetErrorCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TNetFile*)(G__getstructoffset()))->IsOpen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TNetFile*)(G__getstructoffset()))->ReOpen((Option_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TNetFile*)(G__getstructoffset()))->ReadBuffer((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TNetFile*)(G__getstructoffset()))->WriteBuffer((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TNetFile*)(G__getstructoffset()))->Seek((Long64_t)G__Longlong(libp->para[0]),(TFile::ERelativeTo)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TNetFile*)(G__getstructoffset()))->Seek((Long64_t)G__Longlong(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TNetFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNetFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TNetFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TNetFile::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNetFile*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNetFile*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNetFile*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNetFile*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNetFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNetFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNetFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_210_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNetFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TNetFile G__TTNetFile;
static int G__G__Net_210_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TNetFile *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TNetFile *)((G__getstructoffset())+sizeof(TNetFile)*i);
   else  delete (TNetFile *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TNetSystem */
static int G__G__Net_211_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNetSystem *p=NULL;
   if(G__getaryconstruct()) p=new TNetSystem[G__getaryconstruct()];
   else                    p=new TNetSystem;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TNetSystem);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNetSystem *p=NULL;
      p = new TNetSystem((const char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TNetSystem);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TNetSystem*)(G__getstructoffset()))->ConsistentWith((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TNetSystem*)(G__getstructoffset()))->MakeDirectory((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TNetSystem*)(G__getstructoffset()))->OpenDirectory((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TNetSystem*)(G__getstructoffset()))->FreeDirectory((void*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TNetSystem*)(G__getstructoffset()))->FreeDirectory();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,67,(long)((TNetSystem*)(G__getstructoffset()))->GetDirEntry((void*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,67,(long)((TNetSystem*)(G__getstructoffset()))->GetDirEntry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TNetSystem*)(G__getstructoffset()))->GetPathInfo((const char*)G__int(libp->para[0]),*(FileStat_t*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TNetSystem*)(G__getstructoffset()))->AccessPathName((const char*)G__int(libp->para[0]),(EAccessMode)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TNetSystem::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNetSystem::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TNetSystem::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TNetSystem::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNetSystem*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNetSystem*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNetSystem*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNetSystem*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNetSystem::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNetSystem::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNetSystem::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_211_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNetSystem::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Net_211_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TNetSystem *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TNetSystem(*(TNetSystem*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TNetSystem);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TNetSystem G__TTNetSystem;
static int G__G__Net_211_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TNetSystem *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TNetSystem *)((G__getstructoffset())+sizeof(TNetSystem)*i);
   else  delete (TNetSystem *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_211_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNetSystem *dest = (TNetSystem*)(G__getstructoffset());
   *dest = (*(TNetSystem*)libp->para[0].ref);
   const TNetSystem& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGridResult */
static int G__G__Net_212_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGridResult *p=NULL;
      p = new TGridResult((Grid_ResultHandle_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TGridResult);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGridResult*)(G__getstructoffset()))->Close();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGridResult*)(G__getstructoffset()))->GetCurrent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGridResult*)(G__getstructoffset()))->GetResultCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TGridResult*)(G__getstructoffset()))->GetValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGridResult*)(G__getstructoffset()))->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TGridResult*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TGridResult*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGridResult*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGridResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGridResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGridResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGridResult::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGridResult*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGridResult*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGridResult*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGridResult*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGridResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGridResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGridResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_212_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGridResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Net_212_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGridResult *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGridResult(*(TGridResult*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TGridResult);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGridResult G__TTGridResult;
static int G__G__Net_212_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGridResult *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGridResult *)((G__getstructoffset())+sizeof(TGridResult)*i);
   else  delete (TGridResult *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_212_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGridResult *dest = (TGridResult*)(G__getstructoffset());
   *dest = (*(TGridResult*)libp->para[0].ref);
   const TGridResult& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGridProof */
static int G__G__Net_213_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGridProof*)(G__getstructoffset()))->ps((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGridProof*)(G__getstructoffset()))->ps();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TGridProof*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TGridProof*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGridProof*)(G__getstructoffset()))->kill((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGridProof*)(G__getstructoffset()))->Request((TDSet*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGridProof*)(G__getstructoffset()))->Connect();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TGridProof*)(G__getstructoffset()))->GetSiteBlob());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGridProof*)(G__getstructoffset()))->PrintSiteBlob();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGridProof*)(G__getstructoffset()))->DSetMsnExtraction((TDSet*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGridProof::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGridProof::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGridProof::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGridProof::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGridProof*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGridProof*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGridProof*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGridProof*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGridProof::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGridProof::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGridProof::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_213_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGridProof::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGridProof G__TTGridProof;
static int G__G__Net_213_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGridProof *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGridProof *)((G__getstructoffset())+sizeof(TGridProof)*i);
   else  delete (TGridProof *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_213_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGridProof *dest = (TGridProof*)(G__getstructoffset());
   *dest = (*(TGridProof*)libp->para[0].ref);
   const TGridProof& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Grid_Result_t */
static int G__G__Net_214_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Grid_Result_t *p=NULL;
   if(G__getaryconstruct()) p=new Grid_Result_t[G__getaryconstruct()];
   else p=::new((G__netdIsrcdIG__NetdOcxx_tag*)G__getgvp()) Grid_Result_t;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Net_214_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   Grid_Result_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new Grid_Result_t(*(Grid_Result_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Grid_Result_t G__TGrid_Result_t;
static int G__G__Net_214_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (Grid_Result_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((Grid_Result_t *)((G__getstructoffset())+sizeof(Grid_Result_t)*i))->~G__TGrid_Result_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((Grid_Result_t *)(G__getstructoffset()))->~G__TGrid_Result_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_214_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Grid_Result_t *dest = (Grid_Result_t*)(G__getstructoffset());
   *dest = (*(Grid_Result_t*)libp->para[0].ref);
   const Grid_Result_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGrid */
static int G__G__Net_216_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TGrid*)(G__getstructoffset()))->GetGrid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TGrid*)(G__getstructoffset()))->GetHost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGrid*)(G__getstructoffset()))->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGrid*)(G__getstructoffset()))->IsConnected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TGrid*)(G__getstructoffset()))->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((TGrid*)(G__getstructoffset()))->OpenDir((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGrid*)(G__getstructoffset()))->ReadResult((Grid_ResultHandle_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGrid*)(G__getstructoffset()))->CloseResult((Grid_ResultHandle_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGrid*)(G__getstructoffset()))->ResetResult((Grid_ResultHandle_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->Mkdir((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->Mkdir((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->Rmdir((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->Rmdir((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->Rm((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->Rm((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->Cp((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->Mv((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->Chmod((const char*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->Chown((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->AddFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(char*)G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->AddFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->AddFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->AddFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->AddFileMirror((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->RegisterFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->RegisterFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,67,(long)((TGrid*)(G__getstructoffset()))->GetFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,67,(long)((TGrid*)(G__getstructoffset()))->GetFile((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((TGrid*)(G__getstructoffset()))->GetPhysicalFileNames((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,107,(long)((TGrid*)(G__getstructoffset()))->Find((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,107,(long)((TGrid*)(G__getstructoffset()))->Find((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,107,(long)((TGrid*)(G__getstructoffset()))->FindEx((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,107,(long)((TGrid*)(G__getstructoffset()))->FindEx((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->AddTag((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->RemoveTag((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((TGrid*)(G__getstructoffset()))->GetTags((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
  G__va_arg_buf G__va_arg_bufobj;
  G__va_arg_put(&G__va_arg_bufobj,libp,3);
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->AddAttributes((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),G__va_arg_bufobj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->AddAttribute((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->DeleteAttribute((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((TGrid*)(G__getstructoffset()))->GetAttributes((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->SubmitJob((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TGrid*)(G__getstructoffset()))->GetJobStatus((Grid_JobId_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->KillJob((Grid_JobId_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->ResubmitJob((Grid_JobId_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,89,(long)((TGrid*)(G__getstructoffset()))->GetAccessPath((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,89,(long)((TGrid*)(G__getstructoffset()))->GetAccessPath((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,89,(long)((TGrid*)(G__getstructoffset()))->GetAccessPath((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TGrid*)(G__getstructoffset()))->GetFileUrl((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,107,(long)((TGrid*)(G__getstructoffset()))->GridOpen((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,107,(long)((TGrid*)(G__getstructoffset()))->GridOpen((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridClose((Grid_FileHandle_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridRead((Grid_FileHandle_t)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridWrite((Grid_FileHandle_t)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridFstat((Grid_FileHandle_t)G__int(libp->para[0]),(TGrid::gridstat_t*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridFsync((Grid_FileHandle_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridFchmod((Grid_FileHandle_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridFchown((Grid_FileHandle_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridLink((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridSymlink((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridReadlink((const char*)G__int(libp->para[0]),(char*)G__int(libp->para[1])
,(size_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridStat((const char*)G__int(libp->para[0]),(TGrid::gridstat_t*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridLstat((const char*)G__int(libp->para[0]),(TGrid::gridstat_t*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((TGrid*)(G__getstructoffset()))->GridOpendir((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGrid*)(G__getstructoffset()))->GridReaddir((Grid_FileHandle_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGrid*)(G__getstructoffset()))->GridClosedir((Grid_FileHandle_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGrid*)(G__getstructoffset()))->SetGridProof((TGridProof*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGrid*)(G__getstructoffset()))->GetGridProof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TGrid*)(G__getstructoffset()))->RequestProofSession((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(void**)G__int(libp->para[2]),(void**)G__int(libp->para[3])
,(int)G__int(libp->para[4]),(int)G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,108,(long)((TGrid*)(G__getstructoffset()))->GetProofSessionStatus((Grid_ProofSession_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGrid*)(G__getstructoffset()))->ListProofDaemons();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGrid*)(G__getstructoffset()))->ListProofSessions((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGrid*)(G__getstructoffset()))->ListProofSessions();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGrid*)(G__getstructoffset()))->KillProofSession((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGrid*)(G__getstructoffset()))->KillProofSession((Grid_ProofSession_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGrid*)(G__getstructoffset()))->CreateGridResult((Grid_ResultHandle_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGrid*)(G__getstructoffset()))->CreateGridProof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)TGrid::Connect((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)TGrid::Connect((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)TGrid::Connect((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)TGrid::Connect((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGrid::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGrid::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGrid::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGrid::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGrid*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGrid*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGrid*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGrid*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGrid::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGrid::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGrid::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_216_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGrid::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGrid G__TTGrid;
static int G__G__Net_216_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGrid *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGrid *)((G__getstructoffset())+sizeof(TGrid)*i);
   else  delete (TGrid *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_216_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGrid *dest = (TGrid*)(G__getstructoffset());
   *dest = (*(TGrid*)libp->para[0].ref);
   const TGrid& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSecContextCleanup */
static int G__G__Net_223_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSecContextCleanup *p=NULL;
      p = new TSecContextCleanup(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TSecContextCleanup);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSecContextCleanup*)(G__getstructoffset()))->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSecContextCleanup*)(G__getstructoffset()))->GetProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSecContextCleanup*)(G__getstructoffset()))->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSecContextCleanup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSecContextCleanup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSecContextCleanup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSecContextCleanup::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSecContextCleanup*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContextCleanup*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContextCleanup*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSecContextCleanup*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSecContextCleanup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSecContextCleanup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSecContextCleanup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_223_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSecContextCleanup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Net_223_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TSecContextCleanup *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TSecContextCleanup(*(TSecContextCleanup*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TSecContextCleanup);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSecContextCleanup G__TTSecContextCleanup;
static int G__G__Net_223_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSecContextCleanup *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSecContextCleanup *)((G__getstructoffset())+sizeof(TSecContextCleanup)*i);
   else  delete (TSecContextCleanup *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_223_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSecContextCleanup *dest = (TSecContextCleanup*)(G__getstructoffset());
   *dest = (*(TSecContextCleanup*)libp->para[0].ref);
   const TSecContextCleanup& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSQLRow */
static int G__G__Net_225_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSQLRow*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSQLRow*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((TSQLRow*)(G__getstructoffset()))->GetFieldLength((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TSQLRow*)(G__getstructoffset()))->GetField((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TSQLRow*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSQLRow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSQLRow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSQLRow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSQLRow::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSQLRow*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSQLRow*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSQLRow*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSQLRow*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSQLRow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSQLRow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSQLRow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_225_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSQLRow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSQLRow G__TTSQLRow;
static int G__G__Net_225_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSQLRow *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSQLRow *)((G__getstructoffset())+sizeof(TSQLRow)*i);
   else  delete (TSQLRow *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_225_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSQLRow *dest = (TSQLRow*)(G__getstructoffset());
   *dest = (*(TSQLRow*)libp->para[0].ref);
   const TSQLRow& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSQLResult */
static int G__G__Net_226_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSQLResult*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSQLResult*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSQLResult*)(G__getstructoffset()))->GetFieldCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TSQLResult*)(G__getstructoffset()))->GetFieldName((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSQLResult*)(G__getstructoffset()))->GetRowCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TSQLResult*)(G__getstructoffset()))->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSQLResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSQLResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSQLResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSQLResult::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSQLResult*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSQLResult*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSQLResult*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSQLResult*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSQLResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSQLResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSQLResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_226_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSQLResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSQLResult G__TTSQLResult;
static int G__G__Net_226_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSQLResult *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSQLResult *)((G__getstructoffset())+sizeof(TSQLResult)*i);
   else  delete (TSQLResult *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_226_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSQLResult *dest = (TSQLResult*)(G__getstructoffset());
   *dest = (*(TSQLResult*)libp->para[0].ref);
   const TSQLResult& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMessage */
static int G__G__Net_229_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMessage *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TMessage((UInt_t)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TMessage[G__getaryconstruct()];
   else                    p=new TMessage;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TMessage);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMessage*)(G__getstructoffset()))->Forward();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMessage*)(G__getstructoffset()))->GetClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMessage*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMessage*)(G__getstructoffset()))->Reset((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TMessage*)(G__getstructoffset()))->What());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMessage*)(G__getstructoffset()))->SetWhat((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMessage*)(G__getstructoffset()))->SetCompressionLevel((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMessage*)(G__getstructoffset()))->SetCompressionLevel();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMessage*)(G__getstructoffset()))->GetCompressionLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMessage*)(G__getstructoffset()))->Compress());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMessage*)(G__getstructoffset()))->Uncompress());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TMessage*)(G__getstructoffset()))->CompBuffer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMessage*)(G__getstructoffset()))->CompLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMessage::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMessage::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMessage::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMessage::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMessage*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMessage*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMessage*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMessage*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMessage::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMessage::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMessage::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_229_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMessage::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMessage G__TTMessage;
static int G__G__Net_229_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMessage *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMessage *)((G__getstructoffset())+sizeof(TMessage)*i);
   else  delete (TMessage *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMonitor */
static int G__G__Net_233_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMonitor *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TMonitor((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TMonitor[G__getaryconstruct()];
   else                    p=new TMonitor;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TMonitor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->Add((TSocket*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->Add((TSocket*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->SetInterest((TSocket*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->SetInterest((TSocket*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->Remove((TSocket*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->RemoveAll();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->Activate((TSocket*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->ActivateAll();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->DeActivate((TSocket*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->DeActivateAll();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->Ready((TSocket*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TMonitor*)(G__getstructoffset()))->Select());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TMonitor*)(G__getstructoffset()))->Select((Long_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMonitor*)(G__getstructoffset()))->Select((TList*)G__int(libp->para[0]),(TList*)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMonitor*)(G__getstructoffset()))->GetActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMonitor*)(G__getstructoffset()))->GetDeActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMonitor*)(G__getstructoffset()))->GetListOfActives());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMonitor*)(G__getstructoffset()))->GetListOfDeActives());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMonitor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMonitor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMonitor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMonitor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMonitor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMonitor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMonitor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMonitor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMonitor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_233_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMonitor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Net_233_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMonitor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMonitor(*(TMonitor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TMonitor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMonitor G__TTMonitor;
static int G__G__Net_233_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMonitor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMonitor *)((G__getstructoffset())+sizeof(TMonitor)*i);
   else  delete (TMonitor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_233_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMonitor *dest = (TMonitor*)(G__getstructoffset());
   *dest = (*(TMonitor*)libp->para[0].ref);
   const TMonitor& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPSocket */
static int G__G__Net_234_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPSocket *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TPSocket(
*((TInetAddress*)G__int(libp->para[0])),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TPSocket(
*((TInetAddress*)G__int(libp->para[0])),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TPSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPSocket *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TPSocket(
*((TInetAddress*)G__int(libp->para[0])),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TPSocket(
*((TInetAddress*)G__int(libp->para[0])),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TPSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPSocket *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TPSocket(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TPSocket(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TPSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPSocket *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TPSocket(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TPSocket(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TPSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPSocket *p=NULL;
      p = new TPSocket(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TSocket*)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TPSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPSocket*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPSocket*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPSocket*)(G__getstructoffset()))->GetDescriptor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TInetAddress *pobj,xobj=((TPSocket*)(G__getstructoffset()))->GetLocalInetAddress();
        pobj=new TInetAddress(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->Send(*(TMessage*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->Send((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->Send((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->Send((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->Send((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->SendRaw((const void*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(ESendRecvOptions)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->Recv(libp->para[0].ref?*(TMessage**)libp->para[0].ref:*(TMessage**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->Recv(*(Int_t*)G__Intref(&libp->para[0]),*(Int_t*)G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->Recv((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->Recv((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(Int_t*)G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->RecvRaw((void*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(ESendRecvOptions)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPSocket*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPSocket*)(G__getstructoffset()))->GetErrorCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->SetOption((ESockOptions)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPSocket*)(G__getstructoffset()))->GetOption((ESockOptions)G__int(libp->para[0]),*(Int_t*)G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPSocket*)(G__getstructoffset()))->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPSocket::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPSocket::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPSocket::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPSocket::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPSocket*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPSocket*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPSocket*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPSocket*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPSocket::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPSocket::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPSocket::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_234_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPSocket::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPSocket G__TTPSocket;
static int G__G__Net_234_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPSocket *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPSocket *)((G__getstructoffset())+sizeof(TPSocket)*i);
   else  delete (TPSocket *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPServerSocket */
static int G__G__Net_235_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPServerSocket *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TPServerSocket(
(Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TPServerSocket(
(Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TPServerSocket((Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TPServerSocket((Int_t)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TPServerSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPServerSocket *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TPServerSocket(
(const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TPServerSocket(
(const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TPServerSocket((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TPServerSocket((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TPServerSocket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TPServerSocket*)(G__getstructoffset()))->Accept((UChar_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TPServerSocket*)(G__getstructoffset()))->Accept());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPServerSocket::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPServerSocket::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPServerSocket::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPServerSocket::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPServerSocket*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPServerSocket*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPServerSocket*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPServerSocket*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPServerSocket::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPServerSocket::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPServerSocket::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_235_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPServerSocket::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPServerSocket G__TTPServerSocket;
static int G__G__Net_235_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPServerSocket *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPServerSocket *)((G__getstructoffset())+sizeof(TPServerSocket)*i);
   else  delete (TPServerSocket *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TWebFile */
static int G__G__Net_236_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TWebFile *p=NULL;
      p = new TWebFile((const char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TWebFile);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TWebFile *p=NULL;
      p = new TWebFile(*((TUrl*)G__int(libp->para[0])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__NetLN_TWebFile);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TWebFile*)(G__getstructoffset()))->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TWebFile*)(G__getstructoffset()))->IsOpen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TWebFile*)(G__getstructoffset()))->ReOpen((Option_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TWebFile*)(G__getstructoffset()))->ReadBuffer((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TWebFile*)(G__getstructoffset()))->Seek((Long64_t)G__Longlong(libp->para[0]),(TFile::ERelativeTo)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TWebFile*)(G__getstructoffset()))->Seek((Long64_t)G__Longlong(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TWebFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TWebFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TWebFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TWebFile::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TWebFile*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TWebFile*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TWebFile*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TWebFile*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TWebFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TWebFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TWebFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_236_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TWebFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TWebFile G__TTWebFile;
static int G__G__Net_236_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TWebFile *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TWebFile *)((G__getstructoffset())+sizeof(TWebFile)*i);
   else  delete (TWebFile *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSQLServer */
static int G__G__Net_238_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSQLServer*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSQLServer*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TSQLServer*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSQLServer*)(G__getstructoffset()))->SelectDataBase((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TSQLServer*)(G__getstructoffset()))->GetDataBases((const char*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TSQLServer*)(G__getstructoffset()))->GetDataBases());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TSQLServer*)(G__getstructoffset()))->GetTables((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TSQLServer*)(G__getstructoffset()))->GetTables((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TSQLServer*)(G__getstructoffset()))->GetColumns((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TSQLServer*)(G__getstructoffset()))->GetColumns((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSQLServer*)(G__getstructoffset()))->CreateDataBase((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSQLServer*)(G__getstructoffset()))->DropDataBase((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSQLServer*)(G__getstructoffset()))->Reload());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSQLServer*)(G__getstructoffset()))->Shutdown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TSQLServer*)(G__getstructoffset()))->ServerInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TSQLServer*)(G__getstructoffset()))->IsConnected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSQLServer*)(G__getstructoffset()))->GetDBMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSQLServer*)(G__getstructoffset()))->GetHost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSQLServer*)(G__getstructoffset()))->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSQLServer::Connect((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSQLServer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSQLServer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSQLServer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSQLServer::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSQLServer*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSQLServer*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSQLServer*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSQLServer*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSQLServer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSQLServer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSQLServer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Net_238_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSQLServer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSQLServer G__TTSQLServer;
static int G__G__Net_238_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSQLServer *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSQLServer *)((G__getstructoffset())+sizeof(TSQLServer)*i);
   else  delete (TSQLServer *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Net_238_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSQLServer *dest = (TSQLServer*)(G__getstructoffset());
   *dest = (*(TSQLServer*)libp->para[0].ref);
   const TSQLServer& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TInetAddress */

/* TAuthenticate */

/* THostAuth */

/* TSocket */

/* TSecContext */

/* TCache */

/* TUrl */

/* TServerSocket */

/* TFTP */

/* TNetFile */

/* TNetSystem */

/* TGridResult */

/* TGridProof */

/* Grid_Result_t */

/* TGrid */

/* TSecContextCleanup */

/* TSQLRow */

/* TSQLResult */

/* TMessage */

/* TMonitor */

/* TPSocket */

/* TPServerSocket */

/* TWebFile */

/* TSQLServer */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Net {
 public:
  G__Sizep2memfuncG__Net() {p=&G__Sizep2memfuncG__Net::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Net::*p)();
};

size_t G__get_sizep2memfuncG__Net()
{
  G__Sizep2memfuncG__Net a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Net() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TInetAddress))) {
     TInetAddress *G__Lderived;
     G__Lderived=(TInetAddress*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TInetAddress),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TAuthenticate))) {
     TAuthenticate *G__Lderived;
     G__Lderived=(TAuthenticate*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TAuthenticate),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_THostAuth))) {
     THostAuth *G__Lderived;
     G__Lderived=(THostAuth*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_THostAuth),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TSocket))) {
     TSocket *G__Lderived;
     G__Lderived=(TSocket*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TSocket),G__get_linked_tagnum(&G__G__NetLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TSocket),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TSecContext))) {
     TSecContext *G__Lderived;
     G__Lderived=(TSecContext*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TSecContext),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TCache))) {
     TCache *G__Lderived;
     G__Lderived=(TCache*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TCache),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TUrl))) {
     TUrl *G__Lderived;
     G__Lderived=(TUrl*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TUrl),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TServerSocket))) {
     TServerSocket *G__Lderived;
     G__Lderived=(TServerSocket*)0x1000;
     {
       TSocket *G__Lpbase=(TSocket*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TServerSocket),G__get_linked_tagnum(&G__G__NetLN_TSocket),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TServerSocket),G__get_linked_tagnum(&G__G__NetLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TServerSocket),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TFTP))) {
     TFTP *G__Lderived;
     G__Lderived=(TFTP*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TFTP),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TNetFile))) {
     TNetFile *G__Lderived;
     G__Lderived=(TNetFile*)0x1000;
     {
       TFile *G__Lpbase=(TFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TNetFile),G__get_linked_tagnum(&G__G__NetLN_TFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDirectory *G__Lpbase=(TDirectory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TNetFile),G__get_linked_tagnum(&G__G__NetLN_TDirectory),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TNetFile),G__get_linked_tagnum(&G__G__NetLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TNetFile),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TNetSystem))) {
     TNetSystem *G__Lderived;
     G__Lderived=(TNetSystem*)0x1000;
     {
       TSystem *G__Lpbase=(TSystem*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TNetSystem),G__get_linked_tagnum(&G__G__NetLN_TSystem),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TNetSystem),G__get_linked_tagnum(&G__G__NetLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TNetSystem),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TGridResult))) {
     TGridResult *G__Lderived;
     G__Lderived=(TGridResult*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TGridResult),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TGridProof))) {
     TGridProof *G__Lderived;
     G__Lderived=(TGridProof*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TGridProof),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TGrid))) {
     TGrid *G__Lderived;
     G__Lderived=(TGrid*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TGrid),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TSecContextCleanup))) {
     TSecContextCleanup *G__Lderived;
     G__Lderived=(TSecContextCleanup*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TSecContextCleanup),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TSQLRow))) {
     TSQLRow *G__Lderived;
     G__Lderived=(TSQLRow*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLRow),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TSQLResult))) {
     TSQLResult *G__Lderived;
     G__Lderived=(TSQLResult*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLResult),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TMessage))) {
     TMessage *G__Lderived;
     G__Lderived=(TMessage*)0x1000;
     {
       TBuffer *G__Lpbase=(TBuffer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TMessage),G__get_linked_tagnum(&G__G__NetLN_TBuffer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TMessage),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TMonitor))) {
     TMonitor *G__Lderived;
     G__Lderived=(TMonitor*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TMonitor),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TMonitor),G__get_linked_tagnum(&G__G__NetLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TPSocket))) {
     TPSocket *G__Lderived;
     G__Lderived=(TPSocket*)0x1000;
     {
       TSocket *G__Lpbase=(TSocket*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TPSocket),G__get_linked_tagnum(&G__G__NetLN_TSocket),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TPSocket),G__get_linked_tagnum(&G__G__NetLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TPSocket),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TPServerSocket))) {
     TPServerSocket *G__Lderived;
     G__Lderived=(TPServerSocket*)0x1000;
     {
       TServerSocket *G__Lpbase=(TServerSocket*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TPServerSocket),G__get_linked_tagnum(&G__G__NetLN_TServerSocket),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSocket *G__Lpbase=(TSocket*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TPServerSocket),G__get_linked_tagnum(&G__G__NetLN_TSocket),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TPServerSocket),G__get_linked_tagnum(&G__G__NetLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TPServerSocket),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TWebFile))) {
     TWebFile *G__Lderived;
     G__Lderived=(TWebFile*)0x1000;
     {
       TFile *G__Lpbase=(TFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TWebFile),G__get_linked_tagnum(&G__G__NetLN_TFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDirectory *G__Lpbase=(TDirectory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TWebFile),G__get_linked_tagnum(&G__G__NetLN_TDirectory),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TWebFile),G__get_linked_tagnum(&G__G__NetLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TWebFile),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__NetLN_TSQLServer))) {
     TSQLServer *G__Lderived;
     G__Lderived=(TSQLServer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLServer),G__get_linked_tagnum(&G__G__NetLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Net() {

   /* Setting up typedef entry */
   G__search_typename2("size_t",104,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("UChar_t",98,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,
-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,
-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__NetLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__NetLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__NetLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__NetLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__NetLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("rsa_NUMBER",117,G__get_linked_tagnum(&G__G__NetLN_rsa_NUMBER),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CheckSecCtx_t",89,-1,0,
-1);
   G__setnewtype(-1,"Int_t (*CheckSecCtx_t)(const char *subj, TSecContext *ctx);",0);
   G__search_typename2("GlobusAuth_t",89,-1,0,
-1);
   G__setnewtype(-1,"Int_t (*GlobusAuth_t)(TAuthenticate *auth, TString &user, TString &det);",0);
   G__search_typename2("Krb5Auth_t",89,-1,0,
-1);
   G__setnewtype(-1,"Int_t (*Krb5Auth_t)(TAuthenticate *auth, TString &user, TString &det, Int_t version);",0);
   G__search_typename2("SecureAuth_t",89,-1,0,
-1);
   G__setnewtype(-1,"Int_t (*SecureAuth_t)(TAuthenticate *auth, const char *user, const char *passwd,",0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__NetLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__NetLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__NetLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__NetLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__NetLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__G__NetLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("AddressList_t",117,G__get_linked_tagnum(&G__G__NetLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,G__get_linked_tagnum(&G__G__NetLN_TInetAddress));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__NetLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__NetLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__NetLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__NetLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__NetLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("AliasList_t",117,G__get_linked_tagnum(&G__G__NetLN_vectorlETStringcOallocatorlETStringgRsPgR),0,G__get_linked_tagnum(&G__G__NetLN_TInetAddress));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Grid_JobId_t",105,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Grid_ResultHandle_t",107,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Grid_ProofSessionStatus_t",108,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Grid_FileHandle_t",107,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Grid_AccessPath_t",121,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Grid_JobStatus_t",121,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Grid_FileEntry_t",117,G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Grid_ProofSession_t",121,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TInetAddress */
static void G__setup_memvarTInetAddress(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TInetAddress));
   { TInetAddress *p; p=(TInetAddress*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fHostname=",0,"fully qualified hostname");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fAddress=",0,"IP address in host byte order");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFamily=",0,"address family");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPort=",0,"port through which we are connected");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("AddressList_t"),-1,4,"fAddresses=",0,"list of all IP addresses in host byte order");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("AliasList_t"),-1,4,"fAliases=",0,"list of aliases");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAuthenticate */
static void G__setup_memvarTAuthenticate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TAuthenticate));
   { TAuthenticate *p; p=(TAuthenticate*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TAuthenticatecLcLESecurity),-1,-2,1,"kClear=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TAuthenticatecLcLESecurity),-1,-2,1,"kSRP=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TAuthenticatecLcLESecurity),-1,-2,1,"kKrb5=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TAuthenticatecLcLESecurity),-1,-2,1,"kGlobus=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TAuthenticatecLcLESecurity),-1,-2,1,"kSSH=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TAuthenticatecLcLESecurity),-1,-2,1,"kRfio=5",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fDetails=",0,"logon details (method dependent ...)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_THostAuth),-1,-1,4,"fHostAuth=",0,"pointer to relevant authentication info");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fPasswd=",0,"user's password");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fProtocol=",0,"remote service (rootd, proofd)");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPwHash=",0,"kTRUE if fPasswd is a passwd hash");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fRemote=",0,"remote host to which we want to connect");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRSAKey=",0,"Type of RSA key used");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TSecContext),-1,-1,4,"fSecContext=",0,"pointer to relevant sec context");
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__G__NetLN_TAuthenticatecLcLESecurity),-1,-1,4,"fSecurity=",0,"actual logon security level");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,-1,4,"fSocket=",0,"connection to remote daemon");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSRPPwd=",0,"kTRUE if fPasswd is a SRP passwd");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVersion=",0,"0,1,2, ... accordingly to remote daemon version");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fUser=",0,"user to be authenticated");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTimeOut=",0,"timeout flag");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TList),-1,-2,4,"fgAuthInfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-2,4,"fgAuthMeth[6]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgAuthReUse=",0,"kTRUE is ReUse required");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgClientProtocol=",0,"client protocol level");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-2,4,"fgDefaultUser=",0,"Default user information");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TDatime),-1,-2,4,"fgExpDate=",0,"Expiring date for new security contexts");
   G__memvar_setup((void*)NULL,89,0,0,-1,G__defined_typename("GlobusAuth_t"),-2,4,"fgGlobusAuthHook=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,89,0,0,-1,G__defined_typename("Krb5Auth_t"),-2,4,"fgKrb5AuthHook=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-2,4,"fgKrb5Principal=",0,"Principal for Krb5 ticket");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TDatime),-1,-2,4,"fgLastAuthrc=",0,"Time of last reading of fgRootAuthrc");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-2,4,"fgPasswd=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgPromptUser=",0,"kTRUE if user prompt required");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TList),-1,-2,4,"fgProofAuthInfo=",0,"Specific lists of THostAuth fro proof");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgPwHash=",0,"kTRUE if fgPasswd is a passwd hash");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgReadHomeAuthrc=",0,"kTRUE to look for $HOME/.rootauthrc");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-2,4,"fgRootAuthrc=",0,"Path to last rootauthrc-like file read");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgRSAKey=",0,"Default type of RSA key to be tried");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgRSAInit=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_rsa_KEY),G__defined_typename("rsa_KEY"),-2,4,"fgRSAPriKey=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_rsa_KEY),G__defined_typename("rsa_KEY"),-2,4,"fgRSAPubKey=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_rsa_KEY_export),G__defined_typename("rsa_KEY_export"),-2,4,"fgRSAPubExport[2]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,89,0,0,-1,G__defined_typename("SecureAuth_t"),-2,4,"fgSecAuthHook=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgSRPPwd=",0,"kTRUE if fgPasswd is a SRP passwd");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-2,4,"fgUser=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgUsrPwdCrypt=",0,"kTRUE if encryption for UsrPwd is required");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgLastError=",0,"Last error code processed by AuthError()");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgAuthTO=",0,"if > 0, timeout in sec");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THostAuth */
static void G__setup_memvarTHostAuth(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_THostAuth));
   { THostAuth *p; p=(THostAuth*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fHost=",0,"Host");
   G__memvar_setup((void*)NULL,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fServer=",0,"Server (kSOCKD,kROOTD,kPROOFD)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fUser=",0,"Username");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumMethods=",0,"Number of AuthMethods");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMethods[6]=",0,"AuthMethods");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fDetails[6]=",0,"AuthDetails");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSuccess[6]=",0,"Statistics of successful attempts / per method");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFailure[6]=",0,"Statistics of failed attempts / per method");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fActive=",0,"Flag used in cleaning/reset");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TList),-1,-1,4,"fSecContexts=",0,"List of TSecContexts related to this THostAuth");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSocket */
static void G__setup_memvarTSocket(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TSocket));
   { TSocket *p; p=(TSocket*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TSocketcLcLEInterest),-1,-2,1,"kRead=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TSocketcLcLEInterest),-1,-2,1,"kWrite=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TSocketcLcLEServiceType),-1,-2,1,"kSOCKD=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TSocketcLcLEServiceType),-1,-2,1,"kROOTD=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TSocketcLcLEServiceType),-1,-2,1,"kPROOFD=2",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TInetAddress),-1,-1,2,"fAddress=",0,"remote internet address and port #");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fBytesRecv=",0,"total bytes received over this socket");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fBytesSent=",0,"total bytes sent using this socket");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCompress=",0,"compression level from 0 (not compressed)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TInetAddress),-1,-1,2,"fLocalAddress=",0,"local internet address and port #");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRemoteProtocol=",0,"protocol of remote daemon");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TSecContext),-1,-1,2,"fSecContext=",0,"after a successful Authenticate call");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fService=",0,"name of service (matches remote port #)");
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__G__NetLN_TSocketcLcLEServiceType),-1,-1,2,"fServType=",0,"remote service type");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSocket=",0,"socket descriptor");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTcpWindowSize=",0,"TCP window size (default 65535);");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fUrl=",0,"needs this for special authentication options");
   G__memvar_setup((void*)NULL,109,0,0,-1,G__defined_typename("ULong64_t"),-2,2,"fgBytesRecv=",0,"total bytes received by all socket objects");
   G__memvar_setup((void*)NULL,109,0,0,-1,G__defined_typename("ULong64_t"),-2,2,"fgBytesSent=",0,"total bytes sent by all socket objects");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSecContext */
static void G__setup_memvarTSecContext(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TSecContext));
   { TSecContext *p; p=(TSecContext*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,89,0,0,-1,-1,-1,4,"fContext=",0,"Krb5, Globus: ptr to specific sec context");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TList),-1,-1,4,"fCleanup=",0,"Points to list with info for remote cleanup");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fDetails=",0,"Auth process details (user, principal, ... )");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TDatime),-1,-1,4,"fExpDate=",0,"Expiring date (one sec precision)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fHost=",0,"Remote host name");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMethod=",0,"Authentication method used");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOffSet=",0,"offset in remote host auth tab file (in bytes)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRSAKey=",0,"Type of RSA key used");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fToken=",0,"Token identifying this authentication");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fUser=",0,"Remote login username");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCache */
static void G__setup_memvarTCache(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TCache));
   { TCache *p; p=(TCache*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TCachecLcLTCacheList),-1,-1,4,"fCache=",0,"hash list containing cached pages");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TSortedList),-1,-1,4,"fNew=",0,"list constaining new pages that have to be written to disk");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TList),-1,-1,4,"fFree=",0,"list containing unused pages");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TFile),-1,-1,4,"fFile=",0,"file for which pages are being cached");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEOF=",0,"end of file");
   G__memvar_setup((void*)NULL,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fHighWater=",0,"high water mark (i.e. maximum cache size in bytes)");
   G__memvar_setup((void*)NULL,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fLowWater=",0,"low water mark (free pages till low water mark is reached)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPageSize=",0,"size of cached pages");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLowLevel=",0,"low water mark is at low level percent of high");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDiv=",0,"page size divider");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fRecursive=",0,"true to prevent recusively calling ReadBuffer()");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TCachecLcLdA),-1,-2,1,"kDfltPageSize=524288",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TCachecLcLdA),-1,-2,1,"kDfltLowLevel=70",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TUrl */
static void G__setup_memvarTUrl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TUrl));
   { TUrl *p; p=(TUrl*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fUrl=",0,"full URL");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fProtocol=",0,"protocol: http, ftp, news, root, proof, rfio, hpss");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fUser=",0,"user name");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fPasswd=",0,"password");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fHost=",0,"remote host");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fFile=",0,"remote object");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fAnchor=",0,"anchor in object");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fOptions=",0,"options (after ?)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPort=",0,"port through which to contact remote server");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TObjArray),-1,-2,4,"fgSpecialProtocols=",0,"list of special protocols");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TServerSocket */
static void G__setup_memvarTServerSocket(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TServerSocket));
   { TServerSocket *p; p=(TServerSocket*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TSeqCollection),-1,-1,4,"fSecContexts=",0,"List of TSecContext with cleanup info");
   G__memvar_setup((void*)NULL,89,0,0,-1,G__defined_typename("SrvAuth_t"),-2,4,"fgSrvAuthHook=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,89,0,0,-1,G__defined_typename("SrvClup_t"),-2,4,"fgSrvAuthClupHook=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("UChar_t"),-2,4,"fgAcceptOpt=",0,"Default accept options ");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TServerSocketcLcLdA),-1,-2,1,"kDefaultBacklog=10",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EMessageTypes */

   /* TFTP */
static void G__setup_memvarTFTP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TFTP));
   { TFTP *p; p=(TFTP*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fHost=",0,"FQDN of remote host");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fUser=",0,"remote user");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPort=",0,"port to which to connect");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fParallel=",0,"number of parallel sockets");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fWindowSize=",0,"tcp window size used");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fProtocol=",0,"rootd protocol level");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLastBlock=",0,"last block successfully transfered");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBlockSize=",0,"size of data buffer used to transfer");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMode=",0,"binary or ascii file transfer mode");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fRestartAt=",0,"restart transmission at specified offset");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fCurrentFile=",0,"file currently being get or put");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,-1,4,"fSocket=",0,"! connection to rootd");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBytesWrite=",0,"number of bytes sent");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBytesRead=",0,"number of bytes received");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDir=",0,"Indicates if a remote directory is open");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-2,4,"fgBytesWrite=",0,"number of bytes sent by all TFTP objects");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-2,4,"fgBytesRead=",0,"number of bytes received by all TFTP objects");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TFTPcLcLdA),-1,-2,1,"kDfltBlockSize=524288",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TFTPcLcLdA),-1,-2,1,"kDfltWindowSize=65535",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TFTPcLcLdA),-1,-2,1,"kBinary=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TFTPcLcLdA),-1,-2,1,"kAscii=1",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TNetFile */
static void G__setup_memvarTNetFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TNetFile));
   { TNetFile *p; p=(TNetFile*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TUrl),-1,-1,2,"fUrl=",0,"URL of file");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fUser=",0,"remote user name");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,-1,2,"fSocket=",0,"connection to rootd server");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fProtocol=",0,"rootd protocol level");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fErrorCode=",0,"error code returned by rootd (matching gRootdErrStr)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TNetSystem */
static void G__setup_memvarTNetSystem(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TNetSystem));
   { TNetSystem *p; p=(TNetSystem*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDir=",0,"true if a directory is open remotely");
   G__memvar_setup((void*)NULL,89,0,0,-1,-1,-1,4,"fDirp=",0,"directory handler");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TFTP),-1,-1,4,"fFTP=",0,"Connection to rootd");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fHost=",0,"Remote host");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,4,"fUser=",0,"Remote user");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGridResult */
static void G__setup_memvarTGridResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TGridResult));
   { TGridResult *p; p=(TGridResult*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fResults=",0,"number of result items");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCurrent=",0,"current result item, used by Next()");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGridProof */
static void G__setup_memvarTGridProof(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TGridProof));
   { TGridProof *p; p=(TGridProof*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TVirtualProof),-1,-1,2,"fProof=",0,"PROOF pointer");
   G__memvar_setup((void*)NULL,89,0,0,-1,G__defined_typename("Grid_ProofSession_t"),-1,2,"fProofSession=",0,"the PROOF session pointer");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fProofMasterUrl=",0,"the URL of the PROOF master");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fProofLogin=",0,"the Login to the PROOF master");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fProofPasswd=",0,"the Password for the PROOF master");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fProofConfigFile=",0,"the Config File for the PROOF master");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Grid_Result_t */
static void G__setup_memvarGrid_Result_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t));
   { Grid_Result_t *p; p=(Grid_Result_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__NetLN_string),-1,-1,1,"name=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->name2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__NetLN_string),-1,-1,1,"name2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->info)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__NetLN_Grid_Result_tcLcLstat),-1,-1,1,"info=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->data)-(long)(p)),107,0,0,-1,G__defined_typename("Grid_ResultHandle_t"),-1,1,"data=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGrid */
static void G__setup_memvarTGrid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TGrid));
   { TGrid *p; p=(TGrid*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fGrid=",0,"type of GRID (AliEn, Globus, ...)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fHost=",0,"GRID portal to which we are connected");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPort=",0,"port to which we are connected");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TGridProof),-1,-1,2,"fProof=",0,"PROOF pointer");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSecContextCleanup */
static void G__setup_memvarTSecContextCleanup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TSecContextCleanup));
   { TSecContextCleanup *p; p=(TSecContextCleanup*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPort=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fServerProtocol=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fServerType=",0,"0 = sockd, 1 = rootd, 2 = proofd");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSQLRow */
static void G__setup_memvarTSQLRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLRow));
   { TSQLRow *p; p=(TSQLRow*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSQLResult */
static void G__setup_memvarTSQLResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLResult));
   { TSQLResult *p; p=(TSQLResult*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowCount=",0,"number of rows in result");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ESockOptions */

   /* ESendRecvOptions */

   /* TMessage */
static void G__setup_memvarTMessage(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TMessage));
   { TMessage *p; p=(TMessage*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fWhat=",0,"Message type");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-1,4,"fClass=",0,"If message is kMESS_OBJECT pointer to object's class");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCompress=",0,"Compression level from 0 (not compressed) to 9 (max compression)");
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,4,"fBufComp=",0,"Compressed buffer");
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,4,"fBufCompCur=",0,"Current position in compressed buffer");
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,4,"fCompPos=",0,"Position of fBufCur when message was compressed");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMonitor */
static void G__setup_memvarTMonitor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TMonitor));
   { TMonitor *p; p=(TMonitor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TList),-1,-1,4,"fActive=",0,"list of sockets to monitor");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TList),-1,-1,4,"fDeActive=",0,"list of (temporary) disabled sockets");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,-1,4,"fReady=",0,"socket which is ready to be read or written");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMainLoop=",0,"true if monitoring sockets within the main");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TMonitorcLcLEInterest),-1,-2,1,"kRead=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_TMonitorcLcLEInterest),-1,-2,1,"kWrite=2",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPSocket */
static void G__setup_memvarTPSocket(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TPSocket));
   { TPSocket *p; p=(TPSocket*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,-1,4,"fSockets=",0,"array of parallel sockets");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TMonitor),-1,-1,4,"fWriteMonitor=",0,"monitor write on parallel sockets");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TMonitor),-1,-1,4,"fReadMonitor=",0,"monitor read from parallel sockets");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSize=",0,"number of parallel sockets");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fWriteBytesLeft=",0,"bytes left to write for specified socket");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fReadBytesLeft=",0,"bytes left to read for specified socket");
   G__memvar_setup((void*)NULL,67,2,0,-1,-1,-1,4,"fWritePtr=",0,"pointer to write buffer for specified socket");
   G__memvar_setup((void*)NULL,67,2,0,-1,-1,-1,4,"fReadPtr=",0,"pointer to read buffer for specified socket");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPServerSocket */
static void G__setup_memvarTPServerSocket(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TPServerSocket));
   { TPServerSocket *p; p=(TPServerSocket*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTcpWindowSize=",0,"size of tcp window (for window scaling)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TWebFile */
static void G__setup_memvarTWebFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TWebFile));
   { TWebFile *p; p=(TWebFile*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TUrl),-1,-1,4,"fUrl=",0,"URL of file");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fOffset=",0,"seek offset");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSQLServer */
static void G__setup_memvarTSQLServer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLServer));
   { TSQLServer *p; p=(TSQLServer*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fType=",0,"type of DBMS (MySQL, Oracle, SysBase, ...)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fHost=",0,"host to which we are connected");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__NetLN_TString),-1,-1,2,"fDB=",0,"currently selected DB");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPort=",0,"port to which we are connected");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Net() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTInetAddress(void) {
   /* TInetAddress */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TInetAddress));
   G__memfunc_setup("TInetAddress",1194,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TInetAddress),-1,0,4,1,4,0,
"C - - 10 - host h - 'UInt_t' 0 - addr "
"i - 'Int_t' 0 - family i - 'Int_t' 0 -1 port",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddAddress",975,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"h - 'UInt_t' 0 - addr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddAlias",755,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"C - - 10 - alias",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TInetAddress",1194,G__G__Net_106_4_0,105,G__get_linked_tagnum(&G__G__NetLN_TInetAddress),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TInetAddress",1194,G__G__Net_106_5_0,105,G__get_linked_tagnum(&G__G__NetLN_TInetAddress),-1,0,1,1,1,0,"u 'TInetAddress' - 11 - adr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Net_106_6_0,117,G__get_linked_tagnum(&G__G__NetLN_TInetAddress),-1,1,1,1,1,0,"u 'TInetAddress' - 11 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAddress",998,G__G__Net_106_7_0,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAddressBytes",1517,G__G__Net_106_8_0,66,-1,G__defined_typename("UChar_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHostAddress",1412,G__G__Net_106_9_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHostName",1087,G__G__Net_106_0_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFamily",898,G__G__Net_106_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPort",709,G__G__Net_106_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAddresses",1214,G__G__Net_106_3_1,117,G__get_linked_tagnum(&G__G__NetLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("TInetAddress::AddressList_t"),1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAliases",994,G__G__Net_106_4_1,117,G__get_linked_tagnum(&G__G__NetLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("TInetAddress::AliasList_t"),1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsValid",684,G__G__Net_106_5_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Net_106_6_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetHostAddress",1412,G__G__Net_106_7_1,67,-1,-1,0,1,3,1,1,"h - 'UInt_t' 0 - addr",(char*)NULL,(void*)(const char* (*)(UInt_t))(&TInetAddress::GetHostAddress),0);
   G__memfunc_setup("Class",502,G__G__Net_106_8_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TInetAddress::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_106_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TInetAddress::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_106_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TInetAddress::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_106_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TInetAddress::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_106_2_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_106_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_106_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_106_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_106_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TInetAddress::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_106_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TInetAddress::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_106_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TInetAddress::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_106_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TInetAddress::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TInetAddress",1320,G__G__Net_106_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAuthenticate(void) {
   /* TAuthenticate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TAuthenticate));
   G__memfunc_setup("Authenticate",1247,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GenRSAKeys",924,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPwHash",875,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRSAKey",815,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSecContext",1312,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__NetLN_TSecContext),-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSecurity",1144,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TAuthenticatecLcLESecurity),-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSRPPwd",832,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSshUser",1005,(G__InterfaceMethod)NULL,67,-1,-1,0,1,1,4,9,"u 'TString' - 0 - user",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVersion",1030,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ClearAuth",889,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,4,0,
"u 'TString' - 1 - user u 'TString' - 1 - passwd "
"g - 'Bool_t' 1 - pwhash",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUserPasswd",1329,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,4,1,4,0,
"u 'TString' - 1 - user u 'TString' - 1 - passwd "
"g - 'Bool_t' 1 - pwhash g - 'Bool_t' 0 - srppwd",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRandString",1308,(G__InterfaceMethod)NULL,67,-1,-1,0,2,1,4,0,
"i - 'Int_t' 0 - Opt i - 'Int_t' 0 - Len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RfioAuth",802,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"u 'TString' - 1 - user",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetEnvironment",1473,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SshAuth",704,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"u 'TString' - 1 - user",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SshError",824,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"C - - 10 - errfile",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CheckHost",892,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,2,3,4,0,
"C - - 10 - Host C - - 10 - host",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CleanupSecContext",1736,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,2,3,4,0,
"U 'TSecContext' - 0 - ctx g - 'Bool_t' 0 - all",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FileExpand",992,(G__InterfaceMethod)NULL,121,-1,-1,0,2,3,4,0,
"C - - 10 - fin E - - 0 - ftmp",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RemoveSecContext",1646,(G__InterfaceMethod)NULL,121,-1,-1,0,1,3,4,0,"U 'TSecContext' - 0 - ctx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetReadHomeAuthrc",1688,(G__InterfaceMethod)NULL,121,-1,-1,0,1,3,2,0,"g - 'Bool_t' 0 - readhomeauthrc","for TProofServ",(void*)NULL,0);
   G__memfunc_setup("TAuthenticate",1331,G__G__Net_131_2_2,105,G__get_linked_tagnum(&G__G__NetLN_TAuthenticate),-1,0,4,1,1,0,
"U 'TSocket' - 0 - sock C - - 10 - remote "
"C - - 10 - proto C - - 10 \"\" user",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AuthExists",1042,G__G__Net_131_3_2,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"u 'TString' - 0 - User i - 'Int_t' 0 - method "
"C - - 10 - Options I - 'Int_t' 0 - Message "
"I - 'Int_t' 0 - Rflag Y - 'CheckSecCtx_t' 0 - funcheck",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CatchTimeOut",1194,G__G__Net_131_4_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CheckNetrc",986,G__G__Net_131_5_2,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TString' - 1 - user u 'TString' - 1 - passwd",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CheckNetrc",986,G__G__Net_131_6_2,103,-1,G__defined_typename("Bool_t"),0,4,1,1,0,
"u 'TString' - 1 - user u 'TString' - 1 - passwd "
"g - 'Bool_t' 1 - pwhash g - 'Bool_t' 0 - srppwd",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHostAuth",1104,G__G__Net_131_7_2,85,G__get_linked_tagnum(&G__G__NetLN_THostAuth),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetProtocol",1138,G__G__Net_131_8_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRemoteHost",1322,G__G__Net_131_9_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRSAKeyType",1233,G__G__Net_131_0_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSocket",905,G__G__Net_131_1_3,85,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUser",703,G__G__Net_131_2_3,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HasTimedOut",1095,G__G__Net_131_3_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetRSAKeyType",1245,G__G__Net_131_4_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - key",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSecContext",1324,G__G__Net_131_5_3,121,-1,-1,0,1,1,1,0,"U 'TSecContext' - 0 - ctx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AuthError",924,G__G__Net_131_6_3,121,-1,-1,0,2,3,1,0,
"C - - 10 - where i - 'Int_t' 0 - error",(char*)NULL,(void*)(void (*)(const char*,Int_t))(&TAuthenticate::AuthError),0);
   G__memfunc_setup("CheckProofAuth",1398,G__G__Net_131_7_3,103,-1,G__defined_typename("Bool_t"),0,2,3,1,0,
"i - 'Int_t' 0 - cSec u 'TString' - 1 - det",(char*)NULL,(void*)(Bool_t (*)(Int_t,TString&))(&TAuthenticate::CheckProofAuth),0);
   G__memfunc_setup("CleanupSecContextAll",2017,G__G__Net_131_8_3,121,-1,-1,0,1,3,1,0,"C - 'Option_t' 10 \"k\" opt",(char*)NULL,(void*)(void (*)(Option_t*))(&TAuthenticate::CleanupSecContextAll),0);
   G__memfunc_setup("DecodeRSAPublic",1417,G__G__Net_131_9_3,105,-1,G__defined_typename("Int_t"),0,4,3,1,0,
"C - - 10 - rsapubexport u 'rsa_NUMBER' 'rsa_NUMBER' 1 - n "
"u 'rsa_NUMBER' 'rsa_NUMBER' 1 - d Y - - 2 0 rsassl",(char*)NULL,(void*)(Int_t (*)(const char*,rsa_NUMBER&,rsa_NUMBER&,void**))(&TAuthenticate::DecodeRSAPublic),0);
   G__memfunc_setup("GetAuthInfo",1086,G__G__Net_131_0_4,85,G__get_linked_tagnum(&G__G__NetLN_TList),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TList* (*)())(&TAuthenticate::GetAuthInfo),0);
   G__memfunc_setup("GetAuthMethod",1299,G__G__Net_131_1_4,67,-1,-1,0,1,3,1,1,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)(const char* (*)(Int_t))(&TAuthenticate::GetAuthMethod),0);
   G__memfunc_setup("GetAuthMethodIdx",1592,G__G__Net_131_2_4,105,-1,G__defined_typename("Int_t"),0,1,3,1,0,"C - - 10 - meth",(char*)NULL,(void*)(Int_t (*)(const char*))(&TAuthenticate::GetAuthMethodIdx),0);
   G__memfunc_setup("GetAuthReUse",1174,G__G__Net_131_3_4,103,-1,G__defined_typename("Bool_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Bool_t (*)())(&TAuthenticate::GetAuthReUse),0);
   G__memfunc_setup("GetClientProtocol",1745,G__G__Net_131_4_4,105,-1,G__defined_typename("Int_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Int_t (*)())(&TAuthenticate::GetClientProtocol),0);
   G__memfunc_setup("GetDefaultDetails",1707,G__G__Net_131_5_4,67,-1,-1,0,3,3,1,0,
"i - 'Int_t' 0 - method i - 'Int_t' 0 - opt "
"C - - 10 - user",(char*)NULL,(void*)(char* (*)(Int_t,Int_t,const char*))(&TAuthenticate::GetDefaultDetails),0);
   G__memfunc_setup("GetDefaultUser",1412,G__G__Net_131_6_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAuthenticate::GetDefaultUser),0);
   G__memfunc_setup("GetGlobalExpDate",1564,G__G__Net_131_7_4,117,G__get_linked_tagnum(&G__G__NetLN_TDatime),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TDatime (*)())(&TAuthenticate::GetGlobalExpDate),0);
   G__memfunc_setup("GetGlobalPwHash",1468,G__G__Net_131_8_4,103,-1,G__defined_typename("Bool_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Bool_t (*)())(&TAuthenticate::GetGlobalPwHash),0);
   G__memfunc_setup("GetGlobalSRPPwd",1425,G__G__Net_131_9_4,103,-1,G__defined_typename("Bool_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Bool_t (*)())(&TAuthenticate::GetGlobalSRPPwd),0);
   G__memfunc_setup("GetGlobalUser",1296,G__G__Net_131_0_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAuthenticate::GetGlobalUser),0);
   G__memfunc_setup("GetGlobusAuthHook",1711,G__G__Net_131_1_5,89,-1,G__defined_typename("GlobusAuth_t"),0,0,3,1,0,"",(char*)NULL,(void*)(GlobusAuth_t (*)())(&TAuthenticate::GetGlobusAuthHook),0);
   G__memfunc_setup("GetHostAuth",1104,G__G__Net_131_2_5,85,G__get_linked_tagnum(&G__G__NetLN_THostAuth),-1,0,4,3,1,0,
"C - - 10 - host C - - 10 \"\" user "
"C - 'Option_t' 10 \"R\" opt I - 'Int_t' 0 0 Exact",(char*)NULL,(void*)(THostAuth* (*)(const char*,const char*,Option_t*,Int_t*))(&TAuthenticate::GetHostAuth),0);
   G__memfunc_setup("GetKrb5Principal",1558,G__G__Net_131_3_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAuthenticate::GetKrb5Principal),0);
   G__memfunc_setup("GetPromptUser",1345,G__G__Net_131_4_5,103,-1,G__defined_typename("Bool_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Bool_t (*)())(&TAuthenticate::GetPromptUser),0);
   G__memfunc_setup("GetProofAuthInfo",1604,G__G__Net_131_5_5,85,G__get_linked_tagnum(&G__G__NetLN_TList),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TList* (*)())(&TAuthenticate::GetProofAuthInfo),0);
   G__memfunc_setup("GetRSAInit",922,G__G__Net_131_6_5,105,-1,G__defined_typename("Int_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Int_t (*)())(&TAuthenticate::GetRSAInit),0);
   G__memfunc_setup("GetRSAPubExport",1455,G__G__Net_131_7_5,67,-1,-1,0,1,3,1,1,"i - 'Int_t' 0 0 key",(char*)NULL,(void*)(const char* (*)(Int_t))(&TAuthenticate::GetRSAPubExport),0);
   G__memfunc_setup("HasHostAuth",1100,G__G__Net_131_8_5,85,G__get_linked_tagnum(&G__G__NetLN_THostAuth),-1,0,3,3,1,0,
"C - - 10 - host C - - 10 - user "
"C - 'Option_t' 10 \"R\" opt",(char*)NULL,(void*)(THostAuth* (*)(const char*,const char*,Option_t*))(&TAuthenticate::HasHostAuth),0);
   G__memfunc_setup("InitRandom",1013,G__G__Net_131_9_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAuthenticate::InitRandom),0);
   G__memfunc_setup("MergeHostAuthList",1724,G__G__Net_131_0_6,121,-1,-1,0,3,3,1,0,
"U 'TList' - 0 - Std U 'TList' - 0 - New "
"C - 'Option_t' 10 \"\" Opt",(char*)NULL,(void*)(void (*)(TList*,TList*,Option_t*))(&TAuthenticate::MergeHostAuthList),0);
   G__memfunc_setup("PromptPasswd",1268,G__G__Net_131_1_6,67,-1,-1,0,1,3,1,0,"C - - 10 \"Password: \" prompt",(char*)NULL,(void*)(char* (*)(const char*))(&TAuthenticate::PromptPasswd),0);
   G__memfunc_setup("PromptUser",1057,G__G__Net_131_2_6,67,-1,-1,0,1,3,1,0,"C - - 10 - remote",(char*)NULL,(void*)(char* (*)(const char*))(&TAuthenticate::PromptUser),0);
   G__memfunc_setup("ReadProofConf",1288,G__G__Net_131_3_6,121,-1,-1,0,1,3,1,0,"C - - 10 - proofconf",(char*)NULL,(void*)(void (*)(const char*))(&TAuthenticate::ReadProofConf),0);
   G__memfunc_setup("ReadRootAuthrc",1415,G__G__Net_131_4_6,105,-1,G__defined_typename("Int_t"),0,1,3,1,0,"C - - 10 0 proofconf",(char*)NULL,(void*)(Int_t (*)(const char*))(&TAuthenticate::ReadRootAuthrc),0);
   G__memfunc_setup("RemoveHostAuth",1438,G__G__Net_131_5_6,121,-1,-1,0,2,3,1,0,
"U 'THostAuth' - 0 - ha C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)(void (*)(THostAuth*,Option_t*))(&TAuthenticate::RemoveHostAuth),0);
   G__memfunc_setup("SecureRecv",1015,G__G__Net_131_6_6,105,-1,G__defined_typename("Int_t"),0,4,3,1,0,
"U 'TSocket' - 0 - Socket i - 'Int_t' 0 - dec "
"i - 'Int_t' 0 - KeyType C - - 2 - Out",(char*)NULL,(void*)(Int_t (*)(TSocket*,Int_t,Int_t,char**))(&TAuthenticate::SecureRecv),0);
   G__memfunc_setup("SecureSend",1009,G__G__Net_131_7_6,105,-1,G__defined_typename("Int_t"),0,4,3,1,0,
"U 'TSocket' - 0 - Socket i - 'Int_t' 0 - enc "
"i - 'Int_t' 0 - KeyType C - - 10 - In",(char*)NULL,(void*)(Int_t (*)(TSocket*,Int_t,Int_t,const char*))(&TAuthenticate::SecureSend),0);
   G__memfunc_setup("SendRSAPublicKey",1528,G__G__Net_131_8_6,105,-1,G__defined_typename("Int_t"),0,2,3,1,0,
"U 'TSocket' - 0 - Socket i - 'Int_t' 0 0 key",(char*)NULL,(void*)(Int_t (*)(TSocket*,Int_t))(&TAuthenticate::SendRSAPublicKey),0);
   G__memfunc_setup("SetAuthReUse",1186,G__G__Net_131_9_6,121,-1,-1,0,1,3,1,0,"g - 'Bool_t' 0 - authreuse",(char*)NULL,(void*)(void (*)(Bool_t))(&TAuthenticate::SetAuthReUse),0);
   G__memfunc_setup("SetDefaultUser",1424,G__G__Net_131_0_7,121,-1,-1,0,1,3,1,0,"C - - 10 - defaultuser",(char*)NULL,(void*)(void (*)(const char*))(&TAuthenticate::SetDefaultUser),0);
   G__memfunc_setup("SetGlobalExpDate",1576,G__G__Net_131_1_7,121,-1,-1,0,1,3,1,0,"u 'TDatime' - 0 - expdate",(char*)NULL,(void*)(void (*)(TDatime))(&TAuthenticate::SetGlobalExpDate),0);
   G__memfunc_setup("SetGlobalPasswd",1519,G__G__Net_131_2_7,121,-1,-1,0,1,3,1,0,"C - - 10 - passwd",(char*)NULL,(void*)(void (*)(const char*))(&TAuthenticate::SetGlobalPasswd),0);
   G__memfunc_setup("SetGlobalPwHash",1480,G__G__Net_131_3_7,121,-1,-1,0,1,3,1,0,"g - 'Bool_t' 0 - pwhash",(char*)NULL,(void*)(void (*)(Bool_t))(&TAuthenticate::SetGlobalPwHash),0);
   G__memfunc_setup("SetGlobalSRPPwd",1437,G__G__Net_131_4_7,121,-1,-1,0,1,3,1,0,"g - 'Bool_t' 0 - srppwd",(char*)NULL,(void*)(void (*)(Bool_t))(&TAuthenticate::SetGlobalSRPPwd),0);
   G__memfunc_setup("SetGlobalUser",1308,G__G__Net_131_5_7,121,-1,-1,0,1,3,1,0,"C - - 10 - user",(char*)NULL,(void*)(void (*)(const char*))(&TAuthenticate::SetGlobalUser),0);
   G__memfunc_setup("SetGlobusAuthHook",1723,G__G__Net_131_6_7,121,-1,-1,0,1,3,1,0,"Y - 'GlobusAuth_t' 0 - func",(char*)NULL,(void*)(void (*)(GlobusAuth_t))(&TAuthenticate::SetGlobusAuthHook),0);
   G__memfunc_setup("SetKrb5AuthHook",1443,G__G__Net_131_7_7,121,-1,-1,0,1,3,1,0,"Y - 'Krb5Auth_t' 0 - func",(char*)NULL,(void*)(void (*)(Krb5Auth_t))(&TAuthenticate::SetKrb5AuthHook),0);
   G__memfunc_setup("SetPromptUser",1357,G__G__Net_131_8_7,121,-1,-1,0,1,3,1,0,"g - 'Bool_t' 0 - promptuser",(char*)NULL,(void*)(void (*)(Bool_t))(&TAuthenticate::SetPromptUser),0);
   G__memfunc_setup("SetDefaultRSAKeyType",1954,G__G__Net_131_9_7,121,-1,-1,0,1,3,1,0,"i - 'Int_t' 0 - key",(char*)NULL,(void*)(void (*)(Int_t))(&TAuthenticate::SetDefaultRSAKeyType),0);
   G__memfunc_setup("SetRSAInit",934,G__G__Net_131_0_8,121,-1,-1,0,1,3,1,0,"i - 'Int_t' 0 1 init",(char*)NULL,(void*)(void (*)(Int_t))(&TAuthenticate::SetRSAInit),0);
   G__memfunc_setup("SetRSAPublic",1137,G__G__Net_131_1_8,105,-1,G__defined_typename("Int_t"),0,2,3,1,0,
"C - - 10 - rsapubexport i - 'Int_t' 0 - klen",(char*)NULL,(void*)(Int_t (*)(const char*,Int_t))(&TAuthenticate::SetRSAPublic),0);
   G__memfunc_setup("SetSecureAuthHook",1718,G__G__Net_131_2_8,121,-1,-1,0,1,3,1,0,"Y - 'SecureAuth_t' 0 - func",(char*)NULL,(void*)(void (*)(SecureAuth_t))(&TAuthenticate::SetSecureAuthHook),0);
   G__memfunc_setup("SetTimeOut",1011,G__G__Net_131_3_8,121,-1,-1,0,1,3,1,0,"i - 'Int_t' 0 - to",(char*)NULL,(void*)(void (*)(Int_t))(&TAuthenticate::SetTimeOut),0);
   G__memfunc_setup("Show",417,G__G__Net_131_4_8,121,-1,-1,0,1,3,1,0,"C - 'Option_t' 10 \"S\" opt",(char*)NULL,(void*)(void (*)(Option_t*))(&TAuthenticate::Show),0);
   G__memfunc_setup("Class",502,G__G__Net_131_5_8,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAuthenticate::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_131_6_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAuthenticate::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_131_7_8,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAuthenticate::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_131_8_8,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAuthenticate::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_131_9_8,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_131_0_9,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_131_1_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_131_2_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_131_3_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAuthenticate::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_131_4_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAuthenticate::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_131_5_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAuthenticate::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_131_6_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAuthenticate::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TAuthenticate",1331,G__G__Net_131_7_9,(int)('i'),G__get_linked_tagnum(&G__G__NetLN_TAuthenticate),-1,0,1,1,1,0,"u 'TAuthenticate' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TAuthenticate",1457,G__G__Net_131_8_9,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_131_9_9,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TAuthenticate),-1,1,1,1,1,0,"u 'TAuthenticate' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHostAuth(void) {
   /* THostAuth */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_THostAuth));
   G__memfunc_setup("Create",596,(G__InterfaceMethod)NULL,121,-1,-1,0,5,1,4,0,
"C - - 10 - host C - - 10 - user "
"i - 'Int_t' 0 0 nmeth I - 'Int_t' 0 0 authmeth "
"C - - 2 0 details",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THostAuth",900,G__G__Net_132_2_0,105,G__get_linked_tagnum(&G__G__NetLN_THostAuth),-1,0,5,1,1,0,
"C - - 10 - host C - - 10 - user "
"i - 'Int_t' 0 0 nmeth I - 'Int_t' 0 0 authmeth "
"C - - 2 0 details",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THostAuth",900,G__G__Net_132_3_0,105,G__get_linked_tagnum(&G__G__NetLN_THostAuth),-1,0,6,1,1,0,
"C - - 10 - host i - 'Int_t' 0 - server "
"C - - 10 - user i - 'Int_t' 0 0 nmeth "
"I - 'Int_t' 0 0 authmeth C - - 2 0 details",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THostAuth",900,G__G__Net_132_4_0,105,G__get_linked_tagnum(&G__G__NetLN_THostAuth),-1,0,4,1,1,0,
"C - - 10 - host C - - 10 - user "
"i - 'Int_t' 0 - authmeth C - - 10 - details",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THostAuth",900,G__G__Net_132_5_0,105,G__get_linked_tagnum(&G__G__NetLN_THostAuth),-1,0,5,1,1,0,
"C - - 10 - host i - 'Int_t' 0 - server "
"C - - 10 - user i - 'Int_t' 0 - authmeth "
"C - - 10 - details",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THostAuth",900,G__G__Net_132_6_0,105,G__get_linked_tagnum(&G__G__NetLN_THostAuth),-1,0,1,1,1,0,"C - - 10 - asstring",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THostAuth",900,G__G__Net_132_7_0,105,G__get_linked_tagnum(&G__G__NetLN_THostAuth),-1,0,1,1,1,0,"u 'THostAuth' - 1 - ha",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AsString",811,G__G__Net_132_8_0,121,-1,-1,0,1,1,1,0,"u 'TString' - 1 - out",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NumMethods",1028,G__G__Net_132_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMethod",897,G__G__Net_132_0_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HasMethod",893,G__G__Net_132_1_1,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"i - 'Int_t' 0 - level I - 'Int_t' 0 0 pos",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMethod",874,G__G__Net_132_2_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - level C - - 10 0 details",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RemoveMethod",1231,G__G__Net_132_3_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - level",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReOrder",691,G__G__Net_132_4_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - nmet I - 'Int_t' 0 - fmet",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__G__Net_132_5_1,121,-1,-1,0,1,1,1,0,"U 'THostAuth' - 0 - ha",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFirst",820,G__G__Net_132_6_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - level",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddFirst",785,G__G__Net_132_7_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - level C - - 10 0 details",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetLast",704,G__G__Net_132_8_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - level",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CountFailure",1233,G__G__Net_132_9_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - level",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CountSuccess",1250,G__G__Net_132_0_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - level",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFailure",1000,G__G__Net_132_1_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSuccess",1017,G__G__Net_132_2_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsActive",792,G__G__Net_132_3_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeActivate",986,G__G__Net_132_4_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Activate",817,G__G__Net_132_5_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Reset",515,G__G__Net_132_6_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDetails",998,G__G__Net_132_7_2,67,-1,-1,0,1,1,1,1,"i - 'Int_t' 0 - level",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDetailsByIdx",1478,G__G__Net_132_8_2,67,-1,-1,0,1,1,1,9,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetDetails",1010,G__G__Net_132_9_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - level C - - 10 - details",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHost",702,G__G__Net_132_0_3,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetServer",919,G__G__Net_132_1_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUser",703,G__G__Net_132_2_3,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetHost",714,G__G__Net_132_3_3,121,-1,-1,0,1,1,1,0,"C - - 10 - host",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetServer",931,G__G__Net_132_4_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - server",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetUser",715,G__G__Net_132_5_3,121,-1,-1,0,1,1,1,0,"C - - 10 - user",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Established",1128,G__G__Net_132_6_3,85,G__get_linked_tagnum(&G__G__NetLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetEstablished",1428,G__G__Net_132_7_3,121,-1,-1,0,1,1,1,0,"U 'TList' - 0 - nl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Net_132_8_3,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintEstablished",1653,G__G__Net_132_9_3,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateSecContext",1620,G__G__Net_132_0_4,85,G__get_linked_tagnum(&G__G__NetLN_TSecContext),-1,0,9,1,1,0,
"C - - 10 - user C - - 10 - host "
"i - 'Int_t' 0 - meth i - 'Int_t' 0 - offset "
"C - - 10 - details C - - 10 - token "
"u 'TDatime' - 0 kROOTTZERO expdate Y - - 0 0 ctx "
"i - 'Int_t' 0 -1 key",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Net_132_1_4,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&THostAuth::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_132_2_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THostAuth::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_132_3_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&THostAuth::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_132_4_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&THostAuth::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_132_5_4,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_132_6_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_132_7_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_132_8_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_132_9_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THostAuth::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_132_0_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THostAuth::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_132_1_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THostAuth::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_132_2_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THostAuth::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~THostAuth",1026,G__G__Net_132_3_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_132_4_5,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_THostAuth),-1,1,1,1,1,0,"u 'THostAuth' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSocket(void) {
   /* TSocket */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TSocket));
   G__memfunc_setup("TSocket",701,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Authenticate",1247,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,2,0,"C - - 10 - user",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetDescriptor",1355,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"i - 'Int_t' 0 - desc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TSocket' - 11 - -","not implemented",(void*)NULL,0);
   G__memfunc_setup("GetOption",921,(G__InterfaceMethod)NULL,67,-1,G__defined_typename("Option_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RecvHostAuth",1216,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,4,0,
"C - 'Option_t' 10 - opt C - - 10 0 proofconf",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SecureRecv",1015,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,4,0,
"u 'TString' - 1 - out i - 'Int_t' 0 - dec "
"i - 'Int_t' 0 1 key",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SecureSend",1009,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,4,0,
"C - - 10 - in i - 'Int_t' 0 - enc "
"i - 'Int_t' 0 1 keyType",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendHostAuth",1210,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSocket",701,G__G__Net_134_0_1,105,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,3,1,1,0,
"u 'TInetAddress' - 0 - address C - - 10 - service "
"i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSocket",701,G__G__Net_134_1_1,105,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,3,1,1,0,
"u 'TInetAddress' - 0 - address i - 'Int_t' 0 - port "
"i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSocket",701,G__G__Net_134_2_1,105,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,3,1,1,0,
"C - - 10 - host C - - 10 - service "
"i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSocket",701,G__G__Net_134_3_1,105,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,3,1,1,0,
"C - - 10 - host i - 'Int_t' 0 - port "
"i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSocket",701,G__G__Net_134_4_1,105,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,1,1,1,0,"i - 'Int_t' 0 - descriptor",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSocket",701,G__G__Net_134_5_1,105,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,1,1,1,0,"u 'TSocket' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__Net_134_6_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDescriptor",1343,G__G__Net_134_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetInetAddress",1398,G__G__Net_134_8_1,117,G__get_linked_tagnum(&G__G__NetLN_TInetAddress),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLocalInetAddress",1889,G__G__Net_134_9_1,117,G__get_linked_tagnum(&G__G__NetLN_TInetAddress),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPort",709,G__G__Net_134_0_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetService",1009,G__G__Net_134_1_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetServType",1122,G__G__Net_134_2_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLocalPort",1200,G__G__Net_134_3_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBytesSent",1217,G__G__Net_134_4_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBytesRecv",1207,G__G__Net_134_5_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCompressionLevel",1962,G__G__Net_134_6_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetErrorCode",1189,G__G__Net_134_7_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOption",921,G__G__Net_134_8_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i 'ESockOptions' - 0 - opt i - 'Int_t' 1 - val",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRemoteProtocol",1758,G__G__Net_134_9_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSecContext",1312,G__G__Net_134_0_3,85,G__get_linked_tagnum(&G__G__NetLN_TSecContext),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTcpWindowSize",1626,G__G__Net_134_1_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUrl",595,G__G__Net_134_2_3,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsAuthenticated",1535,G__G__Net_134_3_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsValid",684,G__G__Net_134_4_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_134_5_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TMessage' - 1 - mess",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_134_6_3,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 1 - status i - 'Int_t' 1 - kind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_134_7_3,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 0 - mess i - 'Int_t' 0 - max",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_134_8_3,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 0 - mess i - 'Int_t' 0 - max "
"i - 'Int_t' 1 - kind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RecvRaw",698,G__G__Net_134_9_3,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"Y - - 0 - buffer i - 'Int_t' 0 - length "
"i 'ESendRecvOptions' - 0 kDefault opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Select",608,G__G__Net_134_0_4,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 kRead interest l - 'Long_t' 0 -1 timeout",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_134_1_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"u 'TMessage' - 11 - mess",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_134_2_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - kind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_134_3_4,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - status i - 'Int_t' 0 - kind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_134_4_4,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - mess i - 'Int_t' 0 kMESS_STRING kind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SendObject",993,G__G__Net_134_5_4,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"U 'TObject' - 10 - obj i - 'Int_t' 0 kMESS_OBJECT kind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SendRaw",692,G__G__Net_134_6_4,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"Y - - 10 - buffer i - 'Int_t' 0 - length "
"i 'ESendRecvOptions' - 0 kDefault opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetCompressionLevel",1974,G__G__Net_134_7_4,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 level",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOption",933,G__G__Net_134_8_4,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i 'ESockOptions' - 0 - opt i - 'Int_t' 0 - val",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRemoteProtocol",1770,G__G__Net_134_9_4,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - rproto",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSecContext",1324,G__G__Net_134_0_5,121,-1,-1,0,1,1,1,0,"U 'TSecContext' - 0 - ctx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetService",1021,G__G__Net_134_1_5,121,-1,-1,0,1,1,1,0,"C - - 10 - service",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetUrl",607,G__G__Net_134_2_5,121,-1,-1,0,1,1,1,0,"C - - 10 - url",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSocketBytesSent",1834,G__G__Net_134_3_5,109,-1,G__defined_typename("ULong64_t"),0,0,3,1,0,"",(char*)NULL,(void*)(ULong64_t (*)())(&TSocket::GetSocketBytesSent),0);
   G__memfunc_setup("GetSocketBytesRecv",1824,G__G__Net_134_4_5,109,-1,G__defined_typename("ULong64_t"),0,0,3,1,0,"",(char*)NULL,(void*)(ULong64_t (*)())(&TSocket::GetSocketBytesRecv),0);
   G__memfunc_setup("CreateAuthSocket",1615,G__G__Net_134_5_5,85,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,6,3,1,0,
"C - - 10 - user C - - 10 - host "
"i - 'Int_t' 0 - port i - 'Int_t' 0 0 size "
"i - 'Int_t' 0 -1 tcpwindowsize U 'TSocket' - 0 0 s",(char*)NULL,(void*)(TSocket* (*)(const char*,const char*,Int_t,Int_t,Int_t,TSocket*))(&TSocket::CreateAuthSocket),0);
   G__memfunc_setup("CreateAuthSocket",1615,G__G__Net_134_6_5,85,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,4,3,1,0,
"C - - 10 - url i - 'Int_t' 0 0 size "
"i - 'Int_t' 0 -1 tcpwindowsize U 'TSocket' - 0 0 s",(char*)NULL,(void*)(TSocket* (*)(const char*,Int_t,Int_t,TSocket*))(&TSocket::CreateAuthSocket),0);
   G__memfunc_setup("Class",502,G__G__Net_134_7_5,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSocket::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_134_8_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSocket::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_134_9_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSocket::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_134_0_6,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSocket::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_134_1_6,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_134_2_6,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_134_3_6,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_134_4_6,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_134_5_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSocket::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_134_6_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSocket::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_134_7_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSocket::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_134_8_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSocket::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TSocket",827,G__G__Net_134_9_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSecContext(void) {
   /* TSecContext */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TSecContext));
   G__memfunc_setup("TSecContext",1108,G__G__Net_135_1_0,105,G__get_linked_tagnum(&G__G__NetLN_TSecContext),-1,0,8,1,1,0,
"C - - 10 - url i - 'Int_t' 0 - meth "
"i - 'Int_t' 0 - offset C - - 10 - details "
"C - - 10 - token u 'TDatime' - 0 kROOTTZERO expdate "
"Y - - 0 0 ctx i - 'Int_t' 0 1 key",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSecContext",1108,G__G__Net_135_2_0,105,G__get_linked_tagnum(&G__G__NetLN_TSecContext),-1,0,9,1,1,0,
"C - - 10 - user C - - 10 - host "
"i - 'Int_t' 0 - meth i - 'Int_t' 0 - offset "
"C - - 10 - details C - - 10 - token "
"u 'TDatime' - 0 kROOTTZERO expdate Y - - 0 0 ctx "
"i - 'Int_t' 0 1 key",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddForCleanup",1272,G__G__Net_135_3_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - port i - 'Int_t' 0 - proto "
"i - 'Int_t' 0 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AsString",811,G__G__Net_135_4_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Cleanup",712,G__G__Net_135_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeActivate",986,G__G__Net_135_6_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"CR\" opt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetContext",1029,G__G__Net_135_7_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDetails",998,G__G__Net_135_8_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetExpDate",971,G__G__Net_135_9_0,117,G__get_linked_tagnum(&G__G__NetLN_TDatime),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHost",702,G__G__Net_135_0_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMethod",897,G__G__Net_135_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMethodName",1282,G__G__Net_135_2_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOffSet",871,G__G__Net_135_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRSAKey",815,G__G__Net_135_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSecContextCleanup",2024,G__G__Net_135_5_1,85,G__get_linked_tagnum(&G__G__NetLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetToken",801,G__G__Net_135_6_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUser",703,G__G__Net_135_7_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__G__Net_135_8_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"C - - 10 - methodname",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsActive",792,G__G__Net_135_9_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Net_135_0_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"F\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDetails",1010,G__G__Net_135_1_2,121,-1,-1,0,1,1,1,0,"C - - 10 - details",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetExpDate",983,G__G__Net_135_2_2,121,-1,-1,0,1,1,1,0,"u 'TDatime' - 0 - expdate",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOffSet",883,G__G__Net_135_3_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - offset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetUser",715,G__G__Net_135_4_2,121,-1,-1,0,1,1,1,0,"C - - 10 - user",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Net_135_5_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSecContext::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_135_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSecContext::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_135_7_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSecContext::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_135_8_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSecContext::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_135_9_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_135_0_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_135_1_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_135_2_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_135_3_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSecContext::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_135_4_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSecContext::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_135_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSecContext::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_135_6_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSecContext::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TSecContext",1108,G__G__Net_135_7_3,(int)('i'),G__get_linked_tagnum(&G__G__NetLN_TSecContext),-1,0,1,1,1,0,"u 'TSecContext' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TSecContext",1234,G__G__Net_135_8_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_135_9_3,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TSecContext),-1,1,1,1,1,0,"u 'TSecContext' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCache(void) {
   /* TCache */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TCache));
   G__memfunc_setup("SetPageSize",1092,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadPage",761,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__NetLN_TCachecLcLTPage),-1,0,1,1,4,0,"n - 'Long64_t' 0 - offset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("WritePage",904,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"U 'TCache::TPage' - 0 - page",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FlushList",926,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"U 'TList' - 0 - list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FlushNew",812,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Free",386,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"k - 'ULong_t' 0 - upto",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCache",552,G__G__Net_140_7_0,105,G__get_linked_tagnum(&G__G__NetLN_TCache),-1,0,3,1,1,0,
"i - 'Int_t' 0 - maxCacheSize U 'TFile' - 0 - file "
"i - 'Int_t' 0 kDfltPageSize pageSize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaxCacheSize",1461,G__G__Net_140_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetActiveCacheSize",1771,G__G__Net_140_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPageSize",1080,G__G__Net_140_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLowLevel",1098,G__G__Net_140_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Resize",626,G__G__Net_140_2_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - maxCacheSize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetLowLevel",1110,G__G__Net_140_3_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - percentOfHigh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadBuffer",982,G__G__Net_140_4_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"n - 'Long64_t' 0 - offset C - - 0 - buf "
"i - 'Int_t' 0 - len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("WriteBuffer",1125,G__G__Net_140_5_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"n - 'Long64_t' 0 - offset C - - 10 - buf "
"i - 'Int_t' 0 - len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Flush",514,G__G__Net_140_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Net_140_7_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCache::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_140_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCache::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_140_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCache::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_140_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCache::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_140_1_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_140_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_140_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_140_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_140_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCache::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_140_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCache::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_140_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCache::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_140_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCache::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TCache",552,G__G__Net_140_9_2,(int)('i'),G__get_linked_tagnum(&G__G__NetLN_TCache),-1,0,1,1,1,0,"u 'TCache' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TCache",678,G__G__Net_140_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_140_1_3,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TCache),-1,1,1,1,1,0,"u 'TCache' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTUrl(void) {
   /* TUrl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TUrl));
   G__memfunc_setup("TUrl",391,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TUrl),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TUrl",391,G__G__Net_150_2_0,105,G__get_linked_tagnum(&G__G__NetLN_TUrl),-1,0,2,1,1,0,
"C - - 10 - url g - 'Bool_t' 0 kFALSE defaultIsFile",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TUrl",391,G__G__Net_150_3_0,105,G__get_linked_tagnum(&G__G__NetLN_TUrl),-1,0,1,1,1,0,"u 'TUrl' - 11 - url",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Net_150_4_0,117,G__get_linked_tagnum(&G__G__NetLN_TUrl),-1,1,1,1,1,0,"u 'TUrl' - 11 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUrl",595,G__G__Net_150_5_0,67,-1,-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetProtocol",1138,G__G__Net_150_6_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUser",703,G__G__Net_150_7_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPasswd",914,G__G__Net_150_8_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHost",702,G__G__Net_150_9_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFile",672,G__G__Net_150_0_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAnchor",891,G__G__Net_150_1_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOptions",1036,G__G__Net_150_2_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPort",709,G__G__Net_150_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsValid",684,G__G__Net_150_4_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetProtocol",1150,G__G__Net_150_5_1,121,-1,-1,0,1,1,1,0,"C - - 10 - proto",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetUser",715,G__G__Net_150_6_1,121,-1,-1,0,1,1,1,0,"C - - 10 - user",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPasswd",926,G__G__Net_150_7_1,121,-1,-1,0,1,1,1,0,"C - - 10 - pw",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetHost",714,G__G__Net_150_8_1,121,-1,-1,0,1,1,1,0,"C - - 10 - host",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFile",684,G__G__Net_150_9_1,121,-1,-1,0,1,1,1,0,"C - - 10 - file",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetAnchor",903,G__G__Net_150_0_2,121,-1,-1,0,1,1,1,0,"C - - 10 - anchor",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOptions",1048,G__G__Net_150_1_2,121,-1,-1,0,1,1,1,0,"C - - 10 - opt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPort",721,G__G__Net_150_2_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - port",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Net_150_3_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSpecialProtocols",1958,G__G__Net_150_4_2,85,G__get_linked_tagnum(&G__G__NetLN_TObjArray),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TObjArray* (*)())(&TUrl::GetSpecialProtocols),0);
   G__memfunc_setup("Class",502,G__G__Net_150_5_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TUrl::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_150_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TUrl::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_150_7_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TUrl::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_150_8_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TUrl::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_150_9_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_150_0_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_150_1_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_150_2_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_150_3_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TUrl::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_150_4_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TUrl::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_150_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TUrl::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_150_6_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TUrl::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TUrl",517,G__G__Net_150_7_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTServerSocket(void) {
   /* TServerSocket */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TServerSocket));
   G__memfunc_setup("TServerSocket",1332,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TServerSocket),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TServerSocket",1332,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TServerSocket),-1,0,1,1,4,0,"u 'TServerSocket' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TServerSocket' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Authenticate",1247,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,4,0,"U 'TSocket' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TServerSocket",1332,G__G__Net_156_5_0,105,G__get_linked_tagnum(&G__G__NetLN_TServerSocket),-1,0,4,1,1,0,
"i - 'Int_t' 0 - port g - 'Bool_t' 0 kFALSE reuse "
"i - 'Int_t' 0 kDefaultBacklog backlog i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TServerSocket",1332,G__G__Net_156_6_0,105,G__get_linked_tagnum(&G__G__NetLN_TServerSocket),-1,0,4,1,1,0,
"C - - 10 - service g - 'Bool_t' 0 kFALSE reuse "
"i - 'Int_t' 0 kDefaultBacklog backlog i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Accept",592,G__G__Net_156_7_0,85,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,1,1,1,0,"b - 'UChar_t' 0 0 Opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLocalInetAddress",1889,G__G__Net_156_8_0,117,G__get_linked_tagnum(&G__G__NetLN_TInetAddress),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLocalPort",1200,G__G__Net_156_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_156_0_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"u 'TMessage' - 11 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_156_1_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_156_2_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_156_3_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - - i - 'Int_t' 0 kMESS_STRING -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SendObject",993,G__G__Net_156_4_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"U 'TObject' - 10 - - i - 'Int_t' 0 kMESS_OBJECT -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SendRaw",692,G__G__Net_156_5_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"Y - - 10 - - i - 'Int_t' 0 - - "
"i 'ESendRecvOptions' - 0 kDefault -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_156_6_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TMessage' - 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_156_7_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 1 - - i - 'Int_t' 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_156_8_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 0 - - i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_156_9_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RecvRaw",698,G__G__Net_156_0_2,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"Y - - 0 - - i - 'Int_t' 0 - - "
"i 'ESendRecvOptions' - 0 kDefault -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAcceptOptions",1628,G__G__Net_156_1_2,98,-1,G__defined_typename("UChar_t"),0,0,3,1,0,"",(char*)NULL,(void*)(UChar_t (*)())(&TServerSocket::GetAcceptOptions),0);
   G__memfunc_setup("SetAcceptOptions",1640,G__G__Net_156_2_2,121,-1,-1,0,1,3,1,0,"b - 'UChar_t' 0 - Opt",(char*)NULL,(void*)(void (*)(UChar_t))(&TServerSocket::SetAcceptOptions),0);
   G__memfunc_setup("ShowAcceptOptions",1757,G__G__Net_156_3_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TServerSocket::ShowAcceptOptions),0);
   G__memfunc_setup("Class",502,G__G__Net_156_4_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TServerSocket::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_156_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TServerSocket::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_156_6_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TServerSocket::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_156_7_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TServerSocket::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_156_8_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_156_9_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_156_0_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_156_1_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_156_2_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TServerSocket::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_156_3_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TServerSocket::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_156_4_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TServerSocket::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_156_5_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TServerSocket::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TServerSocket",1458,G__G__Net_156_6_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFTP(void) {
   /* TFTP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TFTP));
   G__memfunc_setup("TFTP",318,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TFTP),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TFTP",318,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TFTP),-1,0,1,1,4,0,"u 'TFTP' - 11 - -","not implemented",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TFTP' - 11 - -","idem",(void*)NULL,0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,4,0,
"C - - 10 - url i - 'Int_t' 0 - parallel "
"i - 'Int_t' 0 - wsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PrintError",1047,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,8,
"C - - 10 - where i - 'Int_t' 0 - err",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Recv",400,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,4,8,
"i - 'Int_t' 1 - status i 'EMessageTypes' - 1 - kind",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMode",689,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"i - 'Int_t' 0 - mode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TFTP",318,G__G__Net_208_8_0,105,G__get_linked_tagnum(&G__G__NetLN_TFTP),-1,0,3,1,1,0,
"C - - 10 - url i - 'Int_t' 0 1 parallel "
"i - 'Int_t' 0 kDfltWindowSize wsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBlockSize",1202,G__G__Net_208_9_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - blockSize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBlockSize",1190,G__G__Net_208_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetRestartAt",1222,G__G__Net_208_1_1,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - at",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRestartAt",1210,G__G__Net_208_2_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMode",677,G__G__Net_208_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsOpen",590,G__G__Net_208_4_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Net_208_5_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PutFile",697,G__G__Net_208_6_1,110,-1,G__defined_typename("Long64_t"),0,2,1,1,0,
"C - - 10 - file C - - 10 0 remoteName",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFile",672,G__G__Net_208_7_1,110,-1,G__defined_typename("Long64_t"),0,2,1,1,0,
"C - - 10 - file C - - 10 0 localName",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AccessPathName",1376,G__G__Net_208_8_1,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"C - - 10 - path i 'EAccessMode' - 0 kFileExists mode "
"g - 'Bool_t' 0 kFALSE print",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDirEntry",1105,G__G__Net_208_9_1,67,-1,-1,0,1,1,1,1,"g - 'Bool_t' 0 kFALSE print",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPathInfo",1081,G__G__Net_208_0_2,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - path u 'FileStat_t' - 1 - buf "
"g - 'Bool_t' 0 kFALSE print",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ChangeDirectory",1531,G__G__Net_208_1_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"C - - 10 - dir",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MakeDirectory",1331,G__G__Net_208_2_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,8,
"C - - 10 - dir g - 'Bool_t' 0 kFALSE print",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeleteDirectory",1544,G__G__Net_208_3_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"C - - 10 - dir",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ListDirectory",1361,G__G__Net_208_4_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"C - 'Option_t' 10 \"\" cmd",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FreeDirectory",1335,G__G__Net_208_5_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE print",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("OpenDirectory",1351,G__G__Net_208_6_2,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"C - - 10 - name g - 'Bool_t' 0 kFALSE print",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PrintDirectory",1474,G__G__Net_208_7_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RenameFile",984,G__G__Net_208_8_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,8,
"C - - 10 - file1 C - - 10 - file2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeleteFile",979,G__G__Net_208_9_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"C - - 10 - file",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ChangePermission",1647,G__G__Net_208_0_3,105,-1,G__defined_typename("Int_t"),0,2,1,1,8,
"C - - 10 - file i - 'Int_t' 0 - mode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__Net_208_1_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Binary",613,G__G__Net_208_2_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Ascii",489,G__G__Net_208_3_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSocket",905,G__G__Net_208_4_3,85,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("put",345,G__G__Net_208_5_3,121,-1,-1,0,2,1,1,0,
"C - - 10 - file C - - 10 0 remoteName",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("get",320,G__G__Net_208_6_3,121,-1,-1,0,2,1,1,0,
"C - - 10 - file C - - 10 0 localName",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Net_208_7_3,121,-1,-1,0,1,1,1,8,"C - - 10 - dir",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("mkdir",535,G__G__Net_208_8_3,121,-1,-1,0,1,1,1,8,"C - - 10 - dir",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("rmdir",542,G__G__Net_208_9_3,121,-1,-1,0,1,1,1,8,"C - - 10 - dir",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ls",223,G__G__Net_208_0_4,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" cmd",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("pwd",331,G__G__Net_208_1_4,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("mv",227,G__G__Net_208_2_4,121,-1,-1,0,2,1,1,8,
"C - - 10 - file1 C - - 10 - file2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("rm",223,G__G__Net_208_3_4,121,-1,-1,0,1,1,1,8,"C - - 10 - file",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("chmod",523,G__G__Net_208_4_4,121,-1,-1,0,2,1,1,8,
"C - - 10 - file i - 'Int_t' 0 - mode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("bye",320,G__G__Net_208_5_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("bin",313,G__G__Net_208_6_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ascii",521,G__G__Net_208_7_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Net_208_8_4,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TFTP::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_208_9_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFTP::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_208_0_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TFTP::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_208_1_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TFTP::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_208_2_5,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_208_3_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_208_4_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_208_5_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_208_6_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFTP::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_208_7_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFTP::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_208_8_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFTP::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_208_9_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFTP::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TFTP",444,G__G__Net_208_0_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTNetFile(void) {
   /* TNetFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TNetFile));
   G__memfunc_setup("TNetFile",763,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TNetFile),-1,0,4,1,2,0,
"C - - 10 - url C - - 10 - ftitle "
"i - 'Int_t' 0 - comp g - 'Bool_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ConnectServer",1345,(G__InterfaceMethod)NULL,121,-1,-1,0,6,1,2,0,
"I - 'Int_t' 0 - stat I 'EMessageTypes' - 0 - kind "
"i - 'Int_t' 0 - netopt i - 'Int_t' 0 - tcpwindowsize "
"g - 'Bool_t' 0 - forceOpen g - 'Bool_t' 0 - forceRead",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Create",596,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"C - - 10 - url C - 'Option_t' 10 - option "
"i - 'Int_t' 0 - netopt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Create",596,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"U 'TSocket' - 0 - s C - 'Option_t' 10 - option "
"i - 'Int_t' 0 - netopt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"g - 'Bool_t' 0 - create",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintError",1047,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"C - - 10 - where i - 'Int_t' 0 - err",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Recv",400,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,2,0,
"i - 'Int_t' 1 - status i 'EMessageTypes' - 1 - kind",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SysOpen",721,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,2,0,
"C - - 10 - pathname i - 'Int_t' 0 - flags "
"h - 'UInt_t' 0 - mode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SysClose",821,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"i - 'Int_t' 0 - fd",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SysStat",731,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,5,1,2,0,
"i - 'Int_t' 0 - fd L - 'Long_t' 0 - id "
"N - 'Long64_t' 0 - size L - 'Long_t' 0 - flags "
"L - 'Long_t' 0 - modtime",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TNetFile",763,G__G__Net_210_2_1,105,G__get_linked_tagnum(&G__G__NetLN_TNetFile),-1,0,5,1,1,0,
"C - - 10 - url C - 'Option_t' 10 \"\" option "
"C - - 10 \"\" ftitle i - 'Int_t' 0 1 compress "
"i - 'Int_t' 0 0 netopt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TNetFile",763,G__G__Net_210_3_1,105,G__get_linked_tagnum(&G__G__NetLN_TNetFile),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__Net_210_4_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Flush",514,G__G__Net_210_5_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetErrorCode",1189,G__G__Net_210_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsOpen",590,G__G__Net_210_7_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReOpen",585,G__G__Net_210_8_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - 'Option_t' 10 - mode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBuffer",982,G__G__Net_210_9_1,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"C - - 0 - buf i - 'Int_t' 0 - len",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteBuffer",1125,G__G__Net_210_0_2,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"C - - 10 - buf i - 'Int_t' 0 - len",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Seek",392,G__G__Net_210_1_2,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 - offset i 'TFile::ERelativeTo' - 0 kBeg pos",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Net_210_2_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TNetFile::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_210_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNetFile::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_210_4_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TNetFile::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_210_5_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TNetFile::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_210_6_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_210_7_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_210_8_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_210_9_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_210_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNetFile::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_210_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNetFile::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_210_2_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNetFile::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_210_3_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNetFile::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TNetFile",889,G__G__Net_210_4_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTNetSystem(void) {
   /* TNetSystem */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TNetSystem));
   G__memfunc_setup("GetDirPtr",885,(G__InterfaceMethod)NULL,89,-1,-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TNetSystem",1024,G__G__Net_211_2_0,105,G__get_linked_tagnum(&G__G__NetLN_TNetSystem),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TNetSystem",1024,G__G__Net_211_3_0,105,G__get_linked_tagnum(&G__G__NetLN_TNetSystem),-1,0,1,1,1,0,"C - - 10 - url",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ConsistentWith",1478,G__G__Net_211_4_0,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"C - - 10 - path Y - - 0 - dirptr",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeDirectory",1331,G__G__Net_211_5_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OpenDirectory",1351,G__G__Net_211_6_0,89,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FreeDirectory",1335,G__G__Net_211_7_0,121,-1,-1,0,1,1,1,0,"Y - - 0 0 dirp",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDirEntry",1105,G__G__Net_211_8_0,67,-1,-1,0,1,1,1,1,"Y - - 0 0 dirp",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPathInfo",1081,G__G__Net_211_9_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - path u 'FileStat_t' - 1 - buf",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AccessPathName",1376,G__G__Net_211_0_1,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"C - - 10 - path i 'EAccessMode' - 0 - mode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Net_211_1_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TNetSystem::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_211_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNetSystem::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_211_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TNetSystem::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_211_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TNetSystem::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_211_5_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_211_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_211_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_211_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_211_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNetSystem::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_211_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNetSystem::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_211_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNetSystem::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_211_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNetSystem::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TNetSystem",1024,G__G__Net_211_3_2,(int)('i'),G__get_linked_tagnum(&G__G__NetLN_TNetSystem),-1,0,1,1,1,0,"u 'TNetSystem' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TNetSystem",1150,G__G__Net_211_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_211_5_2,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TNetSystem),-1,1,1,1,1,0,"u 'TNetSystem' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGridResult(void) {
   /* TGridResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TGridResult));
   G__memfunc_setup("TGridResult",1113,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TGridResult),-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGridResult",1113,G__G__Net_212_2_0,105,G__get_linked_tagnum(&G__G__NetLN_TGridResult),-1,0,1,1,1,0,"k - 'Grid_ResultHandle_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__Net_212_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCurrent",1027,G__G__Net_212_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetResultCount",1448,G__G__Net_212_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetValue",797,G__G__Net_212_6_0,67,-1,-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Next",415,G__G__Net_212_7_0,85,G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Net_212_8_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Net_212_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Net_212_0_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGridResult::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_212_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGridResult::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_212_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGridResult::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_212_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGridResult::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_212_4_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_212_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_212_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_212_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_212_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGridResult::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_212_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGridResult::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_212_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGridResult::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_212_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGridResult::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGridResult",1113,G__G__Net_212_2_2,(int)('i'),G__get_linked_tagnum(&G__G__NetLN_TGridResult),-1,0,1,1,1,0,"u 'TGridResult' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGridResult",1239,G__G__Net_212_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_212_4_2,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TGridResult),-1,1,1,1,1,0,"u 'TGridResult' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGridProof(void) {
   /* TGridProof */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TGridProof));
   G__memfunc_setup("ps",227,G__G__Net_213_2_0,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 - sessionId",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ps",227,G__G__Net_213_3_0,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ls",223,G__G__Net_213_4_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("kill",428,G__G__Net_213_5_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"i - 'Int_t' 0 - sessionId",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Request",745,G__G__Net_213_6_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'TDSet' - 0 - dset",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Connect",714,G__G__Net_213_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetSiteBlob",1076,G__G__Net_213_8_0,67,-1,-1,0,0,1,1,9,"","AliEn specific",(void*)NULL,1);
   G__memfunc_setup("PrintSiteBlob",1313,G__G__Net_213_9_0,121,-1,-1,0,0,1,1,0,"","AliEn specific",(void*)NULL,1);
   G__memfunc_setup("DSetMsnExtraction",1727,G__G__Net_213_0_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TDSet' - 0 - -","provide GridProof with the dataset to extract the required daemons",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Net_213_1_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGridProof::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_213_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGridProof::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_213_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGridProof::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_213_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGridProof::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_213_5_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_213_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_213_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_213_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_213_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGridProof::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_213_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGridProof::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_213_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGridProof::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_213_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGridProof::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGridProof",1118,G__G__Net_213_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_213_4_2,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TGridProof),-1,1,1,1,1,0,"u 'TGridProof' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGrid_Result_t(void) {
   /* Grid_Result_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t));
   G__memfunc_setup("Grid_Result_t",1335,G__G__Net_214_1_0,105,G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("Grid_Result_t",1335,G__G__Net_214_2_0,(int)('i'),G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t),-1,0,1,1,1,0,"u 'Grid_Result_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Grid_Result_t",1461,G__G__Net_214_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_214_4_0,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t),-1,1,1,1,1,0,"u 'Grid_Result_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGrid(void) {
   /* TGrid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TGrid));
   G__memfunc_setup("GetGrid",678,G__G__Net_216_2_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHost",702,G__G__Net_216_3_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPort",709,G__G__Net_216_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsConnected",1103,G__G__Net_216_5_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUser",703,G__G__Net_216_6_0,67,-1,-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("OpenDir",689,G__G__Net_216_7_0,107,-1,G__defined_typename("Grid_ResultHandle_t"),0,1,1,1,0,"C - - 10 - ldn",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ReadResult",1019,G__G__Net_216_8_0,85,G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t),-1,0,1,1,1,0,"k - 'Grid_ResultHandle_t' 0 - hResult",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("CloseResult",1141,G__G__Net_216_9_0,121,-1,-1,0,1,1,1,0,"k - 'Grid_ResultHandle_t' 0 - hResult",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ResetResult",1154,G__G__Net_216_0_1,121,-1,-1,0,1,1,1,0,"k - 'Grid_ResultHandle_t' 0 - hResult",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Mkdir",503,G__G__Net_216_1_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - ldn g - 'Bool_t' 0 kFALSE recursive",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Rmdir",510,G__G__Net_216_2_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - dir g - 'Bool_t' 0 kFALSE recursive",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Rm",191,G__G__Net_216_3_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - lfn g - 'Bool_t' 0 kFALSE recursive",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Cp",179,G__G__Net_216_4_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - sourcelfn C - - 10 - targetlfn",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Mv",195,G__G__Net_216_5_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - sourcelfn C - - 10 - targetlfn",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Chmod",491,G__G__Net_216_6_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - lfn h - 'UInt_t' 0 - mode",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Chown",511,G__G__Net_216_7_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - lfn C - - 10 - owner "
"C - - 10 - group",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("AddFile",649,G__G__Net_216_8_1,105,-1,G__defined_typename("Int_t"),0,5,1,1,0,
"C - - 10 - newlfn C - - 10 - pfn "
"i - 'Int_t' 0 -1 size C - - 10 0 msn "
"C - - 0 0 guid",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("AddFileMirror",1284,G__G__Net_216_9_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - lfn C - - 10 - pfn "
"C - - 10 - msn",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("RegisterFile",1221,G__G__Net_216_0_2,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - lfn C - - 10 - pfn "
"C - - 10 \"\" msn",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetFile",672,G__G__Net_216_1_2,67,-1,-1,0,2,1,1,0,
"C - - 10 - lfn C - - 10 0 localdest",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetPhysicalFileNames",2001,G__G__Net_216_2_2,107,-1,G__defined_typename("Grid_ResultHandle_t"),0,1,1,1,0,"C - - 10 - lfn",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Find",385,G__G__Net_216_3_2,107,-1,G__defined_typename("Grid_ResultHandle_t"),0,3,1,1,0,
"C - - 10 - path C - - 10 - file "
"C - - 10 0 conditions",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("FindEx",574,G__G__Net_216_4_2,107,-1,G__defined_typename("Grid_ResultHandle_t"),0,3,1,1,0,
"C - - 10 - path C - - 10 - file "
"C - - 10 0 conditions",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("AddTag",549,G__G__Net_216_5_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - ldn C - - 10 - tagName",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("RemoveTag",906,G__G__Net_216_6_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - ldn C - - 10 - tagName",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetTags",687,G__G__Net_216_7_2,107,-1,G__defined_typename("Grid_ResultHandle_t"),0,1,1,1,0,"C - - 10 - ldn",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("AddAttributes",1328,G__G__Net_216_8_2,105,-1,G__defined_typename("Int_t"),0,3,8,1,0,
"C - - 10 - lfn C - - 10 - tagName "
"i - 'Int_t' 0 - inargs",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("AddAttribute",1213,G__G__Net_216_9_2,105,-1,G__defined_typename("Int_t"),0,4,1,1,0,
"C - - 10 - lfn C - - 10 - tagName "
"C - - 10 - attrname C - - 10 - attrval",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("DeleteAttribute",1543,G__G__Net_216_0_3,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - lfn C - - 10 - tagName "
"C - - 10 - attrname",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetAttributes",1351,G__G__Net_216_1_3,107,-1,G__defined_typename("Grid_ResultHandle_t"),0,2,1,1,0,
"C - - 10 - lfn C - - 10 - tagName",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SubmitJob",911,G__G__Net_216_2_3,105,-1,G__defined_typename("Grid_JobId_t"),0,1,1,1,0,"C - - 10 - jdlFile",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetJobStatus",1215,G__G__Net_216_3_3,89,-1,G__defined_typename("Grid_JobStatus_t"),0,1,1,1,0,"i - 'Grid_JobId_t' 0 - jobId",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("KillJob",679,G__G__Net_216_4_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Grid_JobId_t' 0 - jobId",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ResubmitJob",1126,G__G__Net_216_5_3,105,-1,G__defined_typename("Grid_JobId_t"),0,1,1,1,0,"i - 'Grid_JobId_t' 0 - jobId",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetAccessPath",1279,G__G__Net_216_6_3,89,-1,G__defined_typename("Grid_AccessPath_t"),0,3,1,1,0,
"C - - 10 - lfn g - 'Bool_t' 0 kFALSE mode "
"C - - 10 0 msn",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetFileUrl",979,G__G__Net_216_7_3,67,-1,-1,0,2,1,1,0,
"C - - 10 - msn C - - 10 - path",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridOpen",792,G__G__Net_216_8_3,107,-1,G__defined_typename("Grid_FileHandle_t"),0,3,1,1,0,
"C - - 10 - lfn i - 'Int_t' 0 - flags "
"h - 'UInt_t' 0 0 mode",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridClose",892,G__G__Net_216_9_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"k - 'Grid_FileHandle_t' 0 - handle",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridRead",770,G__G__Net_216_0_4,105,-1,G__defined_typename("Int_t"),0,4,1,1,0,
"k - 'Grid_FileHandle_t' 0 - handle Y - - 0 - buffer "
"l - 'Long_t' 0 - size n - 'Long64_t' 0 - offset",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridWrite",913,G__G__Net_216_1_4,105,-1,G__defined_typename("Int_t"),0,4,1,1,0,
"k - 'Grid_FileHandle_t' 0 - handle Y - - 0 - buffer "
"l - 'Long_t' 0 - size n - 'Long64_t' 0 - offset",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridFstat",904,G__G__Net_216_2_4,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"k - 'Grid_FileHandle_t' 0 - handle U 'TGrid::gridstat_t' - 0 - statbuf",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridFsync",905,G__G__Net_216_3_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"k - 'Grid_FileHandle_t' 0 - handle",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridFchmod",983,G__G__Net_216_4_4,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"k - 'Grid_FileHandle_t' 0 - handle h - 'UInt_t' 0 - mode",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridFchown",1003,G__G__Net_216_5_4,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"k - 'Grid_FileHandle_t' 0 - handle h - 'UInt_t' 0 - owner "
"h - 'UInt_t' 0 - group",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridLink",788,G__G__Net_216_6_4,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - source C - - 10 - target",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridSymlink",1133,G__G__Net_216_7_4,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - source C - - 10 - target",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridReadlink",1200,G__G__Net_216_8_4,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - lfn C - - 0 - buf "
"h - 'size_t' 0 - bufsize",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridStat",802,G__G__Net_216_9_4,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - lfn U 'TGrid::gridstat_t' - 0 - statbuf",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridLstat",910,G__G__Net_216_0_5,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - lfn U 'TGrid::gridstat_t' - 0 - statbuf",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridOpendir",1111,G__G__Net_216_1_5,107,-1,G__defined_typename("Grid_FileHandle_t"),0,1,1,1,0,"C - - 10 - dir",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridReaddir",1089,G__G__Net_216_2_5,85,G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t),G__defined_typename("Grid_FileEntry_t"),0,1,1,1,1,"k - 'Grid_FileHandle_t' 0 - handle",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GridClosedir",1211,G__G__Net_216_3_5,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"k - 'Grid_FileHandle_t' 0 - handle",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetGridProof",1208,G__G__Net_216_4_5,121,-1,-1,0,1,1,1,0,"U 'TGridProof' - 0 - proof",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetGridProof",1196,G__G__Net_216_5_5,85,G__get_linked_tagnum(&G__G__NetLN_TGridProof),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RequestProofSession",2003,G__G__Net_216_6_5,89,-1,G__defined_typename("Grid_ProofSession_t"),0,6,1,1,0,
"C - - 10 - user i - 'Int_t' 0 - nsites "
"Y - - 2 - sites Y - - 2 - ntimes "
"i - - 0 - starttime i - - 0 - duration",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetProofSessionStatus",2190,G__G__Net_216_7_5,108,-1,G__defined_typename("Grid_ProofSessionStatus_t"),0,1,1,1,0,"Y - 'Grid_ProofSession_t' 0 - proofSession",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ListProofDaemons",1641,G__G__Net_216_8_5,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ListProofSessions",1785,G__G__Net_216_9_5,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 sessionId",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("KillProofSession",1654,G__G__Net_216_0_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"i - 'Int_t' 0 - sessionId",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("KillProofSession",1654,G__G__Net_216_1_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"Y - 'Grid_ProofSession_t' 0 - proofSession",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("CreateGridResult",1625,G__G__Net_216_2_6,85,G__get_linked_tagnum(&G__G__NetLN_TGridResult),-1,0,1,1,1,0,"k - 'Grid_ResultHandle_t' 0 - handle",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("CreateGridProof",1504,G__G__Net_216_3_6,85,G__get_linked_tagnum(&G__G__NetLN_TGridProof),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Connect",714,G__G__Net_216_4_6,85,G__get_linked_tagnum(&G__G__NetLN_TGrid),-1,0,4,3,1,0,
"C - - 10 - grid C - - 10 0 uid "
"C - - 10 0 pw C - - 10 0 options",(char*)NULL,(void*)(TGrid* (*)(const char*,const char*,const char*,const char*))(&TGrid::Connect),0);
   G__memfunc_setup("Class",502,G__G__Net_216_5_6,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGrid::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_216_6_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGrid::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_216_7_6,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGrid::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_216_8_6,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGrid::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_216_9_6,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_216_0_7,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_216_1_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_216_2_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_216_3_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGrid::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_216_4_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGrid::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_216_5_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGrid::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_216_6_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGrid::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGrid",600,G__G__Net_216_7_7,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_216_8_7,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TGrid),-1,1,1,1,1,0,"u 'TGrid' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSecContextCleanup(void) {
   /* TSecContextCleanup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TSecContextCleanup));
   G__memfunc_setup("TSecContextCleanup",1820,G__G__Net_223_1_0,105,G__get_linked_tagnum(&G__G__NetLN_TSecContextCleanup),-1,0,3,1,1,0,
"i - 'Int_t' 0 - port i - 'Int_t' 0 - proto "
"i - 'Int_t' 0 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPort",709,G__G__Net_223_2_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetProtocol",1138,G__G__Net_223_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetType",706,G__G__Net_223_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Net_223_5_0,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSecContextCleanup::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_223_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSecContextCleanup::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_223_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSecContextCleanup::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_223_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSecContextCleanup::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_223_9_0,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_223_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_223_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_223_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_223_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSecContextCleanup::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_223_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSecContextCleanup::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_223_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSecContextCleanup::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_223_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSecContextCleanup::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TSecContextCleanup",1820,G__G__Net_223_7_1,(int)('i'),G__get_linked_tagnum(&G__G__NetLN_TSecContextCleanup),-1,0,1,1,1,0,"u 'TSecContextCleanup' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TSecContextCleanup",1946,G__G__Net_223_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_223_9_1,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TSecContextCleanup),-1,1,1,1,1,0,"u 'TSecContextCleanup' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSQLRow(void) {
   /* TSQLRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLRow));
   G__memfunc_setup("Close",502,G__G__Net_225_2_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetFieldLength",1382,G__G__Net_225_3_0,107,-1,G__defined_typename("ULong_t"),0,1,1,1,0,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetField",772,G__G__Net_225_4_0,67,-1,-1,0,1,1,1,1,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("operator[]",1060,G__G__Net_225_5_0,67,-1,-1,0,1,1,1,1,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Net_225_6_0,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSQLRow::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_225_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSQLRow::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_225_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSQLRow::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_225_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSQLRow::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_225_0_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_225_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_225_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_225_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_225_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSQLRow::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_225_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSQLRow::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_225_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSQLRow::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_225_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSQLRow::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TSQLRow",762,G__G__Net_225_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_225_9_1,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TSQLRow),-1,1,1,1,1,0,"u 'TSQLRow' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSQLResult(void) {
   /* TSQLResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLResult));
   G__memfunc_setup("Close",502,G__G__Net_226_2_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetFieldCount",1293,G__G__Net_226_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetFieldName",1157,G__G__Net_226_4_0,67,-1,-1,0,1,1,1,1,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowCount",1121,G__G__Net_226_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Next",415,G__G__Net_226_6_0,85,G__get_linked_tagnum(&G__G__NetLN_TSQLRow),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Class",502,G__G__Net_226_7_0,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSQLResult::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_226_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSQLResult::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_226_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSQLResult::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_226_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSQLResult::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_226_1_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_226_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_226_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_226_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_226_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSQLResult::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_226_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSQLResult::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_226_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSQLResult::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_226_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSQLResult::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TSQLResult",1089,G__G__Net_226_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_226_0_2,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TSQLResult),-1,1,1,1,1,0,"u 'TSQLResult' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMessage(void) {
   /* TMessage */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TMessage));
   G__memfunc_setup("TMessage",793,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TMessage),-1,0,1,1,4,0,"u 'TMessage' - 11 - -","not implemented",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TMessage' - 11 - -","not implemented",(void*)NULL,0);
   G__memfunc_setup("TMessage",793,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TMessage),-1,0,2,1,2,0,
"Y - - 0 - buf i - 'Int_t' 0 - bufsize","only called by T(P)Socket::Recv()",(void*)NULL,0);
   G__memfunc_setup("SetLength",910,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,8,"","only called by T(P)Socket::Send()",(void*)NULL,0);
   G__memfunc_setup("TMessage",793,G__G__Net_229_5_0,105,G__get_linked_tagnum(&G__G__NetLN_TMessage),-1,0,1,1,1,0,"h - 'UInt_t' 0 kMESS_ANY what",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Forward",725,G__G__Net_229_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetClass",790,G__G__Net_229_7_0,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Reset",515,G__G__Net_229_8_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Net_229_9_0,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - what",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("What",404,G__G__Net_229_0_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetWhat",704,G__G__Net_229_1_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - what",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetCompressionLevel",1974,G__G__Net_229_2_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 level",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCompressionLevel",1962,G__G__Net_229_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Compress",844,G__G__Net_229_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Uncompress",1071,G__G__Net_229_5_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CompBuffer",1001,G__G__Net_229_6_1,67,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CompLength",1009,G__G__Net_229_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Net_229_8_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMessage::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_229_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMessage::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_229_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMessage::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_229_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMessage::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_229_2_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_229_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_229_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_229_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_229_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMessage::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_229_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMessage::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_229_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMessage::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_229_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMessage::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMessage",919,G__G__Net_229_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMonitor(void) {
   /* TMonitor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TMonitor));
   G__memfunc_setup("SetReady",801,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TSocket' - 0 - sock",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSender",897,(G__InterfaceMethod)NULL,89,-1,-1,0,0,1,4,0,"","used to get gTQSender",(void*)NULL,1);
   G__memfunc_setup("TMonitor",828,G__G__Net_233_3_0,105,G__get_linked_tagnum(&G__G__NetLN_TMonitor),-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE mainloop",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Net_233_4_0,121,-1,-1,0,2,1,1,0,
"U 'TSocket' - 0 - sock i - 'Int_t' 0 kRead interest",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetInterest",1146,G__G__Net_233_5_0,121,-1,-1,0,2,1,1,0,
"U 'TSocket' - 0 - sock i - 'Int_t' 0 kRead interest",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Remove",622,G__G__Net_233_6_0,121,-1,-1,0,1,1,1,0,"U 'TSocket' - 0 - sock",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RemoveAll",903,G__G__Net_233_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Activate",817,G__G__Net_233_8_0,121,-1,-1,0,1,1,1,0,"U 'TSocket' - 0 - sock",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ActivateAll",1098,G__G__Net_233_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeActivate",986,G__G__Net_233_0_1,121,-1,-1,0,1,1,1,0,"U 'TSocket' - 0 - sock",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeActivateAll",1267,G__G__Net_233_1_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Ready",501,G__G__Net_233_2_1,121,-1,-1,0,1,1,1,0,"U 'TSocket' - 0 - sock","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Select",608,G__G__Net_233_3_1,85,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Select",608,G__G__Net_233_4_1,85,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,1,1,1,0,"l - 'Long_t' 0 - timeout",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Select",608,G__G__Net_233_5_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"U 'TList' - 0 - rdready U 'TList' - 0 - wrready "
"l - 'Long_t' 0 - timeout",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetActive",892,G__G__Net_233_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDeActive",1061,G__G__Net_233_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfActives",1600,G__G__Net_233_8_1,85,G__get_linked_tagnum(&G__G__NetLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfDeActives",1769,G__G__Net_233_9_1,85,G__get_linked_tagnum(&G__G__NetLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Net_233_0_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMonitor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_233_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMonitor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_233_2_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMonitor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_233_3_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMonitor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_233_4_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_233_5_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_233_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_233_7_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_233_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMonitor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_233_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMonitor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_233_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMonitor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_233_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMonitor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMonitor",828,G__G__Net_233_2_3,(int)('i'),G__get_linked_tagnum(&G__G__NetLN_TMonitor),-1,0,1,1,1,0,"u 'TMonitor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMonitor",954,G__G__Net_233_3_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_233_4_3,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TMonitor),-1,1,1,1,1,0,"u 'TMonitor' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPSocket(void) {
   /* TPSocket */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TPSocket));
   G__memfunc_setup("TPSocket",781,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TPSocket),-1,0,2,1,4,0,
"U 'TSocket' - 2 - pSockets i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPSocket",781,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TPSocket),-1,0,1,1,4,0,"u 'TPSocket' - 11 - -","not implemented",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TPSocket' - 11 - -","idem",(void*)NULL,0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,0,
"i - 'Int_t' 0 - tcpwindowsize U 'TSocket' - 0 0 sock",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOption",921,(G__InterfaceMethod)NULL,67,-1,G__defined_typename("Option_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TPSocket",781,G__G__Net_234_6_0,105,G__get_linked_tagnum(&G__G__NetLN_TPSocket),-1,0,4,1,1,0,
"u 'TInetAddress' - 0 - address C - - 10 - service "
"i - 'Int_t' 0 - size i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPSocket",781,G__G__Net_234_7_0,105,G__get_linked_tagnum(&G__G__NetLN_TPSocket),-1,0,4,1,1,0,
"u 'TInetAddress' - 0 - address i - 'Int_t' 0 - port "
"i - 'Int_t' 0 - size i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPSocket",781,G__G__Net_234_8_0,105,G__get_linked_tagnum(&G__G__NetLN_TPSocket),-1,0,4,1,1,0,
"C - - 10 - host C - - 10 - service "
"i - 'Int_t' 0 - size i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPSocket",781,G__G__Net_234_9_0,105,G__get_linked_tagnum(&G__G__NetLN_TPSocket),-1,0,4,1,1,0,
"C - - 10 - host i - 'Int_t' 0 - port "
"i - 'Int_t' 0 - size i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPSocket",781,G__G__Net_234_0_1,105,G__get_linked_tagnum(&G__G__NetLN_TPSocket),-1,0,4,1,1,0,
"C - - 10 - host i - 'Int_t' 0 - port "
"i - 'Int_t' 0 - size U 'TSocket' - 0 - sock",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__Net_234_1_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDescriptor",1343,G__G__Net_234_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLocalInetAddress",1889,G__G__Net_234_3_1,117,G__get_linked_tagnum(&G__G__NetLN_TInetAddress),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_234_4_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"u 'TMessage' - 11 - mess",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_234_5_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - kind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_234_6_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - status i - 'Int_t' 0 - kind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Send",394,G__G__Net_234_7_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - mess i - 'Int_t' 0 kMESS_STRING kind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SendRaw",692,G__G__Net_234_8_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"Y - - 10 - buffer i - 'Int_t' 0 - length "
"i 'ESendRecvOptions' - 0 - opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_234_9_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TMessage' - 1 - mess",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_234_0_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 1 - status i - 'Int_t' 1 - kind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_234_1_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 0 - mess i - 'Int_t' 0 - max",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recv",400,G__G__Net_234_2_2,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 0 - mess i - 'Int_t' 0 - max "
"i - 'Int_t' 1 - kind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RecvRaw",698,G__G__Net_234_3_2,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"Y - - 0 - buffer i - 'Int_t' 0 - length "
"i 'ESendRecvOptions' - 0 - opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsValid",684,G__G__Net_234_4_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetErrorCode",1189,G__G__Net_234_5_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOption",933,G__G__Net_234_6_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i 'ESockOptions' - 0 - opt i - 'Int_t' 0 - val",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOption",921,G__G__Net_234_7_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i 'ESockOptions' - 0 - opt i - 'Int_t' 1 - val",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSize",699,G__G__Net_234_8_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Net_234_9_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPSocket::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_234_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPSocket::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_234_1_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPSocket::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_234_2_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPSocket::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_234_3_3,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_234_4_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_234_5_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_234_6_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_234_7_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPSocket::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_234_8_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPSocket::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_234_9_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPSocket::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_234_0_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPSocket::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TPSocket",907,G__G__Net_234_1_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPServerSocket(void) {
   /* TPServerSocket */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TPServerSocket));
   G__memfunc_setup("TPServerSocket",1412,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TPServerSocket),-1,0,1,1,4,0,"u 'TPServerSocket' - 11 - -","not implemented",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TPServerSocket' - 11 - -","idem",(void*)NULL,0);
   G__memfunc_setup("TPServerSocket",1412,G__G__Net_235_3_0,105,G__get_linked_tagnum(&G__G__NetLN_TPServerSocket),-1,0,4,1,1,0,
"i - 'Int_t' 0 - port g - 'Bool_t' 0 kFALSE reuse "
"i - 'Int_t' 0 kDefaultBacklog backlog i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPServerSocket",1412,G__G__Net_235_4_0,105,G__get_linked_tagnum(&G__G__NetLN_TPServerSocket),-1,0,4,1,1,0,
"C - - 10 - service g - 'Bool_t' 0 kFALSE reuse "
"i - 'Int_t' 0 kDefaultBacklog backlog i - 'Int_t' 0 -1 tcpwindowsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Accept",592,G__G__Net_235_5_0,85,G__get_linked_tagnum(&G__G__NetLN_TSocket),-1,0,1,1,1,0,"b - 'UChar_t' 0 kSrvNoAuth Opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Net_235_6_0,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPServerSocket::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_235_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPServerSocket::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_235_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPServerSocket::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_235_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPServerSocket::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_235_0_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_235_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_235_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_235_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_235_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPServerSocket::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_235_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPServerSocket::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_235_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPServerSocket::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_235_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPServerSocket::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TPServerSocket",1538,G__G__Net_235_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTWebFile(void) {
   /* TWebFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TWebFile));
   G__memfunc_setup("TWebFile",754,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__NetLN_TWebFile),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"g - 'Bool_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TWebFile",754,G__G__Net_236_3_0,105,G__get_linked_tagnum(&G__G__NetLN_TWebFile),-1,0,1,1,1,0,"C - - 10 - url",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TWebFile",754,G__G__Net_236_4_0,105,G__get_linked_tagnum(&G__G__NetLN_TWebFile),-1,0,1,1,1,0,"u 'TUrl' - 0 - url",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSize",699,G__G__Net_236_5_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsOpen",590,G__G__Net_236_6_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReOpen",585,G__G__Net_236_7_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - 'Option_t' 10 - mode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBuffer",982,G__G__Net_236_8_0,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"C - - 0 - buf i - 'Int_t' 0 - len",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Seek",392,G__G__Net_236_9_0,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 - offset i 'TFile::ERelativeTo' - 0 kBeg pos",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Net_236_0_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TWebFile::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_236_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TWebFile::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_236_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TWebFile::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_236_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TWebFile::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_236_4_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_236_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_236_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_236_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_236_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TWebFile::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_236_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TWebFile::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_236_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TWebFile::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_236_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TWebFile::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TWebFile",880,G__G__Net_236_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSQLServer(void) {
   /* TSQLServer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLServer));
   G__memfunc_setup("Close",502,G__G__Net_238_2_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Query",534,G__G__Net_238_3_0,85,G__get_linked_tagnum(&G__G__NetLN_TSQLResult),-1,0,1,1,1,0,"C - - 10 - sql",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SelectDataBase",1365,G__G__Net_238_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - dbname",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetDataBases",1160,G__G__Net_238_5_0,85,G__get_linked_tagnum(&G__G__NetLN_TSQLResult),-1,0,1,1,1,0,"C - - 10 0 wild",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetTables",891,G__G__Net_238_6_0,85,G__get_linked_tagnum(&G__G__NetLN_TSQLResult),-1,0,2,1,1,0,
"C - - 10 - dbname C - - 10 0 wild",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetColumns",1025,G__G__Net_238_7_0,85,G__get_linked_tagnum(&G__G__NetLN_TSQLResult),-1,0,3,1,1,0,
"C - - 10 - dbname C - - 10 - table "
"C - - 10 0 wild",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("CreateDataBase",1353,G__G__Net_238_8_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - dbname",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("DropDataBase",1162,G__G__Net_238_9_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - dbname",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Reload",599,G__G__Net_238_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Shutdown",860,G__G__Net_238_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ServerInfo",1027,G__G__Net_238_2_1,67,-1,-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("IsConnected",1103,G__G__Net_238_3_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDBMS",582,G__G__Net_238_4_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHost",702,G__G__Net_238_5_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPort",709,G__G__Net_238_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Connect",714,G__G__Net_238_7_1,85,G__get_linked_tagnum(&G__G__NetLN_TSQLServer),-1,0,3,3,1,0,
"C - - 10 - db C - - 10 - uid "
"C - - 10 - pw",(char*)NULL,(void*)(TSQLServer* (*)(const char*,const char*,const char*))(&TSQLServer::Connect),0);
   G__memfunc_setup("Class",502,G__G__Net_238_8_1,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSQLServer::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Net_238_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSQLServer::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Net_238_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSQLServer::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Net_238_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSQLServer::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Net_238_2_2,85,G__get_linked_tagnum(&G__G__NetLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Net_238_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Net_238_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Net_238_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Net_238_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSQLServer::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Net_238_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSQLServer::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Net_238_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSQLServer::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Net_238_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSQLServer::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TSQLServer",1081,G__G__Net_238_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Net_238_1_3,(int)('u'),G__get_linked_tagnum(&G__G__NetLN_TSQLServer),-1,1,1,1,1,0,"u 'TSQLServer' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Net() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kMESS_ZIP=536870912",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kMESS_ACK=268435456",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kMESS_ANY=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kMESS_OK=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kMESS_NOTOK=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kMESS_STRING=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kMESS_OBJECT=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kMESS_CINT=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_GROUPVIEW=1000",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_STOP=1001",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_FATAL=1002",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_LOGLEVEL=1003",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_LOGFILE=1004",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_LOGDONE=1005",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_STATUS=1006",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_PING=1007",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_PRINT=1008",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_RESET=1009",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_GETOBJECT=1010",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_GETPACKET=1011",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_CHECKFILE=1012",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_SENDFILE=1013",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_PARALLEL=1014",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_PROCESS=1015",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_OUTPUTLIST=1016",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_AUTOBIN=1017",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_CACHE=1018",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_GETENTRIES=1019",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_PROGRESS=1020",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_FEEDBACK=1021",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_STOPPROCESS=1022",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_HOSTAUTH=1023",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_GETSLAVEINFO=1024",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_GETTREEHEADER=1025",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_GETOUTPUTLIST=1026",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_GETSTATS=1027",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_GETPARALLEL=1028",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_VALIDATE_DSET=1029",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kPROOF_DATA_READY=1030",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_USER=2000",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_PASS=2001",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_AUTH=2002",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_FSTAT=2003",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_OPEN=2004",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_PUT=2005",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_GET=2006",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_FLUSH=2007",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_CLOSE=2008",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_STAT=2009",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_ACK=2010",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_ERR=2011",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_PROTOCOL=2012",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_SRPUSER=2013",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_SRPN=2014",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_SRPG=2015",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_SRPSALT=2016",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_SRPA=2017",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_SRPB=2018",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_SRPRESPONSE=2019",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_PUTFILE=2020",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_GETFILE=2021",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_CHDIR=2022",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_MKDIR=2023",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_RMDIR=2024",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_LSDIR=2025",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_PWD=2026",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_MV=2027",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_RM=2028",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_CHMOD=2029",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_KRB5=2030",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_PROTOCOL2=2031",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_BYE=2032",0,(char*)NULL);
}

static void G__cpp_setup_global5() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_GLOBUS=2033",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_CLEANUP=2034",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_SSH=2035",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_RFIO=2036",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_NEGOTIA=2037",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_RSAKEY=2038",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_ENCRYPT=2039",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_OPENDIR=2040",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_FREEDIR=2041",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_DIRENTRY=2042",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),-1,-1,1,"kROOTD_ACCESS=2043",0,(char*)NULL);
   G__memvar_setup((void*)(&gGrid),85,0,0,G__get_linked_tagnum(&G__G__NetLN_TGrid),-1,-1,1,"gGrid=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESockOptions),-1,-1,1,"kSendBuffer=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESockOptions),-1,-1,1,"kRecvBuffer=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESockOptions),-1,-1,1,"kOobInline=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESockOptions),-1,-1,1,"kKeepAlive=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESockOptions),-1,-1,1,"kReuseAddr=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESockOptions),-1,-1,1,"kNoDelay=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESockOptions),-1,-1,1,"kNoBlock=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESockOptions),-1,-1,1,"kProcessGroup=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESockOptions),-1,-1,1,"kAtMark=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESockOptions),-1,-1,1,"kBytesToRead=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESendRecvOptions),-1,-1,1,"kDefault=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESendRecvOptions),-1,-1,1,"kOob=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESendRecvOptions),-1,-1,1,"kPeek=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__NetLN_ESendRecvOptions),-1,-1,1,"kDontBlock=3",0,(char*)NULL);
   G__memvar_setup((void*)(&kSrvAuth),98,0,1,-1,G__defined_typename("UChar_t"),-1,1,"kSrvAuth=",0,(char*)NULL);
   G__memvar_setup((void*)(&kSrvNoAuth),98,0,1,-1,G__defined_typename("UChar_t"),-1,1,"kSrvNoAuth=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Net() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Net() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__NetLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__NetLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__NetLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__NetLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TInetAddress = { "TInetAddress" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TVirtualProof = { "TVirtualProof" , 99 , -1 };
G__linked_taginfo G__G__NetLN_rsa_NUMBER = { "rsa_NUMBER" , 115 , -1 };
G__linked_taginfo G__G__NetLN_rsa_KEY = { "rsa_KEY" , 115 , -1 };
G__linked_taginfo G__G__NetLN_rsa_KEY_export = { "rsa_KEY_export" , 115 , -1 };
G__linked_taginfo G__G__NetLN_TAuthenticate = { "TAuthenticate" , 99 , -1 };
G__linked_taginfo G__G__NetLN_THostAuth = { "THostAuth" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TSocket = { "TSocket" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TSecContext = { "TSecContext" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TAuthenticatecLcLESecurity = { "TAuthenticate::ESecurity" , 101 , -1 };
G__linked_taginfo G__G__NetLN_TSortedList = { "TSortedList" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TCache = { "TCache" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TCachecLcLTPage = { "TCache::TPage" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TCachecLcLTCacheList = { "TCache::TCacheList" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TCachecLcLdA = { "TCache::$" , 101 , -1 };
G__linked_taginfo G__G__NetLN_TFilecLcLERelativeTo = { "TFile::ERelativeTo" , 101 , -1 };
G__linked_taginfo G__G__NetLN_TUrl = { "TUrl" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TSystem = { "TSystem" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TServerSocket = { "TServerSocket" , 99 , -1 };
G__linked_taginfo G__G__NetLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__NetLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__NetLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__NetLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__NetLN_EAccessMode = { "EAccessMode" , 101 , -1 };
G__linked_taginfo G__G__NetLN_FileStat_t = { "FileStat_t" , 115 , -1 };
G__linked_taginfo G__G__NetLN_EMessageTypes = { "EMessageTypes" , 101 , -1 };
G__linked_taginfo G__G__NetLN_TFTP = { "TFTP" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TFTPcLcLdA = { "TFTP::$" , 101 , -1 };
G__linked_taginfo G__G__NetLN_TNetFile = { "TNetFile" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TNetSystem = { "TNetSystem" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TGridResult = { "TGridResult" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TGridProof = { "TGridProof" , 99 , -1 };
G__linked_taginfo G__G__NetLN_Grid_Result_t = { "Grid_Result_t" , 115 , -1 };
G__linked_taginfo G__G__NetLN_Grid_Result_tcLcLstat = { "Grid_Result_t::stat" , 115 , -1 };
G__linked_taginfo G__G__NetLN_TGrid = { "TGrid" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TGridcLcLgridstat_t = { "TGrid::gridstat_t" , 115 , -1 };
G__linked_taginfo G__G__NetLN_TDSet = { "TDSet" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TSecContextCleanup = { "TSecContextCleanup" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TSQLRow = { "TSQLRow" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TSQLResult = { "TSQLResult" , 99 , -1 };
G__linked_taginfo G__G__NetLN_ESockOptions = { "ESockOptions" , 101 , -1 };
G__linked_taginfo G__G__NetLN_ESendRecvOptions = { "ESendRecvOptions" , 101 , -1 };
G__linked_taginfo G__G__NetLN_TMessage = { "TMessage" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TSocketcLcLEInterest = { "TSocket::EInterest" , 101 , -1 };
G__linked_taginfo G__G__NetLN_TSocketcLcLEServiceType = { "TSocket::EServiceType" , 101 , -1 };
G__linked_taginfo G__G__NetLN_TMonitor = { "TMonitor" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TPSocket = { "TPSocket" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TPServerSocket = { "TPServerSocket" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TWebFile = { "TWebFile" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TServerSocketcLcLdA = { "TServerSocket::$" , 101 , -1 };
G__linked_taginfo G__G__NetLN_TSQLServer = { "TSQLServer" , 99 , -1 };
G__linked_taginfo G__G__NetLN_TMonitorcLcLEInterest = { "TMonitor::EInterest" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Net() {
  G__G__NetLN_TClass.tagnum = -1 ;
  G__G__NetLN_TBuffer.tagnum = -1 ;
  G__G__NetLN_TMemberInspector.tagnum = -1 ;
  G__G__NetLN_TObject.tagnum = -1 ;
  G__G__NetLN_TNamed.tagnum = -1 ;
  G__G__NetLN_string.tagnum = -1 ;
  G__G__NetLN_TList.tagnum = -1 ;
  G__G__NetLN_TObjArray.tagnum = -1 ;
  G__G__NetLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__NetLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__NetLN_TString.tagnum = -1 ;
  G__G__NetLN_TSeqCollection.tagnum = -1 ;
  G__G__NetLN_TDatime.tagnum = -1 ;
  G__G__NetLN_TFile.tagnum = -1 ;
  G__G__NetLN_TDirectory.tagnum = -1 ;
  G__G__NetLN_TInetAddress.tagnum = -1 ;
  G__G__NetLN_TVirtualProof.tagnum = -1 ;
  G__G__NetLN_rsa_NUMBER.tagnum = -1 ;
  G__G__NetLN_rsa_KEY.tagnum = -1 ;
  G__G__NetLN_rsa_KEY_export.tagnum = -1 ;
  G__G__NetLN_TAuthenticate.tagnum = -1 ;
  G__G__NetLN_THostAuth.tagnum = -1 ;
  G__G__NetLN_TSocket.tagnum = -1 ;
  G__G__NetLN_TSecContext.tagnum = -1 ;
  G__G__NetLN_TAuthenticatecLcLESecurity.tagnum = -1 ;
  G__G__NetLN_TSortedList.tagnum = -1 ;
  G__G__NetLN_TCache.tagnum = -1 ;
  G__G__NetLN_TCachecLcLTPage.tagnum = -1 ;
  G__G__NetLN_TCachecLcLTCacheList.tagnum = -1 ;
  G__G__NetLN_TCachecLcLdA.tagnum = -1 ;
  G__G__NetLN_TFilecLcLERelativeTo.tagnum = -1 ;
  G__G__NetLN_TUrl.tagnum = -1 ;
  G__G__NetLN_TSystem.tagnum = -1 ;
  G__G__NetLN_TServerSocket.tagnum = -1 ;
  G__G__NetLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__NetLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__NetLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__NetLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__NetLN_TQObject.tagnum = -1 ;
  G__G__NetLN_EAccessMode.tagnum = -1 ;
  G__G__NetLN_FileStat_t.tagnum = -1 ;
  G__G__NetLN_EMessageTypes.tagnum = -1 ;
  G__G__NetLN_TFTP.tagnum = -1 ;
  G__G__NetLN_TFTPcLcLdA.tagnum = -1 ;
  G__G__NetLN_TNetFile.tagnum = -1 ;
  G__G__NetLN_TNetSystem.tagnum = -1 ;
  G__G__NetLN_TGridResult.tagnum = -1 ;
  G__G__NetLN_TGridProof.tagnum = -1 ;
  G__G__NetLN_Grid_Result_t.tagnum = -1 ;
  G__G__NetLN_Grid_Result_tcLcLstat.tagnum = -1 ;
  G__G__NetLN_TGrid.tagnum = -1 ;
  G__G__NetLN_TGridcLcLgridstat_t.tagnum = -1 ;
  G__G__NetLN_TDSet.tagnum = -1 ;
  G__G__NetLN_TSecContextCleanup.tagnum = -1 ;
  G__G__NetLN_TSQLRow.tagnum = -1 ;
  G__G__NetLN_TSQLResult.tagnum = -1 ;
  G__G__NetLN_ESockOptions.tagnum = -1 ;
  G__G__NetLN_ESendRecvOptions.tagnum = -1 ;
  G__G__NetLN_TMessage.tagnum = -1 ;
  G__G__NetLN_TSocketcLcLEInterest.tagnum = -1 ;
  G__G__NetLN_TSocketcLcLEServiceType.tagnum = -1 ;
  G__G__NetLN_TMonitor.tagnum = -1 ;
  G__G__NetLN_TPSocket.tagnum = -1 ;
  G__G__NetLN_TPServerSocket.tagnum = -1 ;
  G__G__NetLN_TWebFile.tagnum = -1 ;
  G__G__NetLN_TServerSocketcLcLdA.tagnum = -1 ;
  G__G__NetLN_TSQLServer.tagnum = -1 ;
  G__G__NetLN_TMonitorcLcLEInterest.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Net() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__NetLN_TClass);
   G__get_linked_tagnum(&G__G__NetLN_TBuffer);
   G__get_linked_tagnum(&G__G__NetLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__NetLN_TObject);
   G__get_linked_tagnum(&G__G__NetLN_TNamed);
   G__get_linked_tagnum(&G__G__NetLN_string);
   G__get_linked_tagnum(&G__G__NetLN_TList);
   G__get_linked_tagnum(&G__G__NetLN_TObjArray);
   G__get_linked_tagnum(&G__G__NetLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__NetLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__NetLN_TString);
   G__get_linked_tagnum(&G__G__NetLN_TSeqCollection);
   G__get_linked_tagnum(&G__G__NetLN_TDatime);
   G__get_linked_tagnum(&G__G__NetLN_TFile);
   G__get_linked_tagnum(&G__G__NetLN_TDirectory);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TInetAddress),sizeof(TInetAddress),-1,130816,"Represents an Internet Protocol (IP) address",G__setup_memvarTInetAddress,G__setup_memfuncTInetAddress);
   G__get_linked_tagnum(&G__G__NetLN_TVirtualProof);
   G__get_linked_tagnum(&G__G__NetLN_rsa_NUMBER);
   G__get_linked_tagnum(&G__G__NetLN_rsa_KEY);
   G__get_linked_tagnum(&G__G__NetLN_rsa_KEY_export);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TAuthenticate),sizeof(TAuthenticate),-1,62464,"Class providing remote authentication service",G__setup_memvarTAuthenticate,G__setup_memfuncTAuthenticate);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_THostAuth),sizeof(THostAuth),-1,62976,"Class providing host specific authentication information",G__setup_memvarTHostAuth,G__setup_memfuncTHostAuth);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TSocket),sizeof(TSocket),-1,65280,"This class implements client sockets",G__setup_memvarTSocket,G__setup_memfuncTSocket);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TSecContext),sizeof(TSecContext),-1,62464,"Class providing host specific authentication information",G__setup_memvarTSecContext,G__setup_memfuncTSecContext);
   G__get_linked_tagnum(&G__G__NetLN_TAuthenticatecLcLESecurity);
   G__get_linked_tagnum(&G__G__NetLN_TSortedList);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TCache),sizeof(TCache),-1,62464,"Page cache used for remote I/O",G__setup_memvarTCache,G__setup_memfuncTCache);
   G__get_linked_tagnum(&G__G__NetLN_TCachecLcLTPage);
   G__get_linked_tagnum(&G__G__NetLN_TCachecLcLTCacheList);
   G__get_linked_tagnum(&G__G__NetLN_TCachecLcLdA);
   G__get_linked_tagnum(&G__G__NetLN_TFilecLcLERelativeTo);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TUrl),sizeof(TUrl),-1,65280,"Represents an URL",G__setup_memvarTUrl,G__setup_memfuncTUrl);
   G__get_linked_tagnum(&G__G__NetLN_TSystem);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TServerSocket),sizeof(TServerSocket),-1,65280,"This class implements server sockets",G__setup_memvarTServerSocket,G__setup_memfuncTServerSocket);
   G__get_linked_tagnum(&G__G__NetLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum(&G__G__NetLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__NetLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum(&G__G__NetLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__NetLN_TQObject);
   G__get_linked_tagnum(&G__G__NetLN_EAccessMode);
   G__get_linked_tagnum(&G__G__NetLN_FileStat_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_EMessageTypes),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TFTP),sizeof(TFTP),-1,65280,"File Transfer Protocol class using rootd",G__setup_memvarTFTP,G__setup_memfuncTFTP);
   G__get_linked_tagnum(&G__G__NetLN_TFTPcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TNetFile),sizeof(TNetFile),-1,62720,"A ROOT file that reads/writes via a rootd server",G__setup_memvarTNetFile,G__setup_memfuncTNetFile);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TNetSystem),sizeof(TNetSystem),-1,62720,"Directory handler for NetFile",G__setup_memvarTNetSystem,G__setup_memfuncTNetSystem);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TGridResult),sizeof(TGridResult),-1,62720,"ABC defining interface to GRID query result",G__setup_memvarTGridResult,G__setup_memfuncTGridResult);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TGridProof),sizeof(TGridProof),-1,29954,"ABC defining interface to GRID proof services",G__setup_memvarTGridProof,G__setup_memfuncTGridProof);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_Grid_Result_t),sizeof(Grid_Result_t),-1,256,(char*)NULL,G__setup_memvarGrid_Result_t,G__setup_memfuncGrid_Result_t);
   G__get_linked_tagnum(&G__G__NetLN_Grid_Result_tcLcLstat);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TGrid),sizeof(TGrid),-1,30008,"ABC defining interface to GRID services",G__setup_memvarTGrid,G__setup_memfuncTGrid);
   G__get_linked_tagnum(&G__G__NetLN_TGridcLcLgridstat_t);
   G__get_linked_tagnum(&G__G__NetLN_TDSet);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TSecContextCleanup),sizeof(TSecContextCleanup),-1,62464,(char*)NULL,G__setup_memvarTSecContextCleanup,G__setup_memfuncTSecContextCleanup);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLRow),sizeof(TSQLRow),-1,29955,"One row of an SQL query result",G__setup_memvarTSQLRow,G__setup_memfuncTSQLRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLResult),sizeof(TSQLResult),-1,29956,"SQL query result",G__setup_memvarTSQLResult,G__setup_memfuncTSQLResult);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_ESockOptions),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_ESendRecvOptions),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TMessage),sizeof(TMessage),-1,65280,"Message buffer class",G__setup_memvarTMessage,G__setup_memfuncTMessage);
   G__get_linked_tagnum(&G__G__NetLN_TSocketcLcLEInterest);
   G__get_linked_tagnum(&G__G__NetLN_TSocketcLcLEServiceType);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TMonitor),sizeof(TMonitor),-1,29952,"Monitor activity on a set of TSocket objects",G__setup_memvarTMonitor,G__setup_memfuncTMonitor);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TPSocket),sizeof(TPSocket),-1,65024,"Parallel client socket",G__setup_memvarTPSocket,G__setup_memfuncTPSocket);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TPServerSocket),sizeof(TPServerSocket),-1,65024,"Parallel server socket",G__setup_memvarTPServerSocket,G__setup_memfuncTPServerSocket);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TWebFile),sizeof(TWebFile),-1,62720,"A ROOT file that reads via a http server",G__setup_memvarTWebFile,G__setup_memfuncTWebFile);
   G__get_linked_tagnum(&G__G__NetLN_TServerSocketcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__NetLN_TSQLServer),sizeof(TSQLServer),-1,29963,"Connection to SQL server",G__setup_memvarTSQLServer,G__setup_memfuncTSQLServer);
   G__get_linked_tagnum(&G__G__NetLN_TMonitorcLcLEInterest);
}
extern "C" void G__cpp_setupG__Net(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Net()");
  G__set_cpp_environmentG__Net();
  G__cpp_setup_tagtableG__Net();

  G__cpp_setup_inheritanceG__Net();

  G__cpp_setup_typetableG__Net();

  G__cpp_setup_memvarG__Net();

  G__cpp_setup_memfuncG__Net();
  G__cpp_setup_globalG__Net();
  G__cpp_setup_funcG__Net();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Net();
  return;
}
class G__cpp_setup_initG__Net {
  public:
    G__cpp_setup_initG__Net() { G__add_setup_func("G__Net",(G__incsetup)(&G__cpp_setupG__Net)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Net() { G__remove_setup_func("G__Net"); }
};
G__cpp_setup_initG__Net G__cpp_setup_initializerG__Net;

