//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:30:42 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__XML.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TXMLSetup_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TXMLSetup_IsA(const void*);
   static void *new_TXMLSetup(void *p = 0);
   static void *newArray_TXMLSetup(Long_t size);
   static void delete_TXMLSetup(void *p);
   static void deleteArray_TXMLSetup(void *p);
   static void destruct_TXMLSetup(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TXMLSetup*)
   {
      ::TXMLSetup *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TXMLSetup", ::TXMLSetup::Class_Version(), "xml/inc/TXMLSetup.h", 69,
                  typeid(::TXMLSetup), DefineBehavior(ptr, ptr),
                  &::TXMLSetup::Dictionary, &TXMLSetup_IsA, 0,
                  sizeof(::TXMLSetup) );
      instance.SetNew(&new_TXMLSetup);
      instance.SetNewArray(&newArray_TXMLSetup);
      instance.SetDelete(&delete_TXMLSetup);
      instance.SetDeleteArray(&deleteArray_TXMLSetup);
      instance.SetDestructor(&destruct_TXMLSetup);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TXMLSetup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TXMLEngine_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TXMLEngine_IsA(const void*);
   static void *new_TXMLEngine(void *p = 0);
   static void *newArray_TXMLEngine(Long_t size);
   static void delete_TXMLEngine(void *p);
   static void deleteArray_TXMLEngine(void *p);
   static void destruct_TXMLEngine(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TXMLEngine*)
   {
      ::TXMLEngine *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TXMLEngine", ::TXMLEngine::Class_Version(), "xml/inc/TXMLEngine.h", 27,
                  typeid(::TXMLEngine), DefineBehavior(ptr, ptr),
                  &::TXMLEngine::Dictionary, &TXMLEngine_IsA, 0,
                  sizeof(::TXMLEngine) );
      instance.SetNew(&new_TXMLEngine);
      instance.SetNewArray(&newArray_TXMLEngine);
      instance.SetDelete(&delete_TXMLEngine);
      instance.SetDeleteArray(&deleteArray_TXMLEngine);
      instance.SetDestructor(&destruct_TXMLEngine);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TXMLEngine*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TXMLFile_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TXMLFile_IsA(const void*);
   static void *new_TXMLFile(void *p = 0);
   static void *newArray_TXMLFile(Long_t size);
   static void delete_TXMLFile(void *p);
   static void deleteArray_TXMLFile(void *p);
   static void destruct_TXMLFile(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TXMLFile*)
   {
      ::TXMLFile *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TXMLFile", ::TXMLFile::Class_Version(), "xml/inc/TXMLFile.h", 32,
                  typeid(::TXMLFile), DefineBehavior(ptr, ptr),
                  &::TXMLFile::Dictionary, &TXMLFile_IsA, 0,
                  sizeof(::TXMLFile) );
      instance.SetNew(&new_TXMLFile);
      instance.SetNewArray(&newArray_TXMLFile);
      instance.SetDelete(&delete_TXMLFile);
      instance.SetDeleteArray(&deleteArray_TXMLFile);
      instance.SetDestructor(&destruct_TXMLFile);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TXMLFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TXMLBuffer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TXMLBuffer_IsA(const void*);
   static void delete_TXMLBuffer(void *p);
   static void deleteArray_TXMLBuffer(void *p);
   static void destruct_TXMLBuffer(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TXMLBuffer*)
   {
      ::TXMLBuffer *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TXMLBuffer", ::TXMLBuffer::Class_Version(), "xml/inc/TXMLBuffer.h", 41,
                  typeid(::TXMLBuffer), DefineBehavior(ptr, ptr),
                  &::TXMLBuffer::Dictionary, &TXMLBuffer_IsA, 0,
                  sizeof(::TXMLBuffer) );
      instance.SetDelete(&delete_TXMLBuffer);
      instance.SetDeleteArray(&deleteArray_TXMLBuffer);
      instance.SetDestructor(&destruct_TXMLBuffer);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TXMLBuffer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TXMLKey_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TXMLKey_IsA(const void*);
   static void delete_TXMLKey(void *p);
   static void deleteArray_TXMLKey(void *p);
   static void destruct_TXMLKey(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TXMLKey*)
   {
      ::TXMLKey *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TXMLKey", ::TXMLKey::Class_Version(), "xml/inc/TXMLKey.h", 25,
                  typeid(::TXMLKey), DefineBehavior(ptr, ptr),
                  &::TXMLKey::Dictionary, &TXMLKey_IsA, 0,
                  sizeof(::TXMLKey) );
      instance.SetDelete(&delete_TXMLKey);
      instance.SetDeleteArray(&deleteArray_TXMLKey);
      instance.SetDestructor(&destruct_TXMLKey);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TXMLKey*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TXMLPlayer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TXMLPlayer_IsA(const void*);
   static void *new_TXMLPlayer(void *p = 0);
   static void *newArray_TXMLPlayer(Long_t size);
   static void delete_TXMLPlayer(void *p);
   static void deleteArray_TXMLPlayer(void *p);
   static void destruct_TXMLPlayer(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TXMLPlayer*)
   {
      ::TXMLPlayer *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TXMLPlayer", ::TXMLPlayer::Class_Version(), "xml/inc/TXMLPlayer.h", 32,
                  typeid(::TXMLPlayer), DefineBehavior(ptr, ptr),
                  &::TXMLPlayer::Dictionary, &TXMLPlayer_IsA, 0,
                  sizeof(::TXMLPlayer) );
      instance.SetNew(&new_TXMLPlayer);
      instance.SetNewArray(&newArray_TXMLPlayer);
      instance.SetDelete(&delete_TXMLPlayer);
      instance.SetDeleteArray(&deleteArray_TXMLPlayer);
      instance.SetDestructor(&destruct_TXMLPlayer);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TXMLPlayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TXMLSetup::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLSetup::Class_Name()
{
   return "TXMLSetup";
}

//______________________________________________________________________________
const char *TXMLSetup::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLSetup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLSetup::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLSetup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLSetup::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLSetup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLSetup::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLSetup*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXMLEngine::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLEngine::Class_Name()
{
   return "TXMLEngine";
}

//______________________________________________________________________________
const char *TXMLEngine::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLEngine*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLEngine::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLEngine*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLEngine::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLEngine*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLEngine::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLEngine*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXMLFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLFile::Class_Name()
{
   return "TXMLFile";
}

//______________________________________________________________________________
const char *TXMLFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXMLBuffer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLBuffer::Class_Name()
{
   return "TXMLBuffer";
}

//______________________________________________________________________________
const char *TXMLBuffer::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLBuffer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLBuffer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLBuffer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLBuffer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLBuffer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLBuffer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLBuffer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXMLKey::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLKey::Class_Name()
{
   return "TXMLKey";
}

//______________________________________________________________________________
const char *TXMLKey::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLKey*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLKey::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLKey*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLKey::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLKey*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLKey::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLKey*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXMLPlayer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLPlayer::Class_Name()
{
   return "TXMLPlayer";
}

//______________________________________________________________________________
const char *TXMLPlayer::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLPlayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLPlayer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLPlayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLPlayer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLPlayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLPlayer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLPlayer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TXMLEngine::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLEngine.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TXMLEngine::IsA());
   } else {
      R__c = R__b.WriteVersion(TXMLEngine::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TXMLEngine::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLEngine.

      TClass *R__cl = ::TXMLEngine::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TXMLEngine_IsA(const void *obj) {
      return ((::TXMLEngine*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TXMLEngine(void *p) {
      return  p ? new(p) ::TXMLEngine : new ::TXMLEngine;
   }
   static void *newArray_TXMLEngine(Long_t size) {
      return new ::TXMLEngine[size];
   }
   // Wrapper around operator delete
   static void delete_TXMLEngine(void *p) {
      delete ((::TXMLEngine*)p);
   }
   static void deleteArray_TXMLEngine(void *p) {
      delete [] ((::TXMLEngine*)p);
   }
   static void destruct_TXMLEngine(void *p) {
      typedef ::TXMLEngine current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLEngine

//______________________________________________________________________________
void TXMLSetup::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLSetup.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> (Int_t&)fXmlLayout;
      R__b >> fStoreStreamerInfos;
      R__b >> fUseDtd;
      R__b >> fUseNamespaces;
      R__b.CheckByteCount(R__s, R__c, TXMLSetup::IsA());
   } else {
      R__c = R__b.WriteVersion(TXMLSetup::IsA(), kTRUE);
      R__b << (Int_t)fXmlLayout;
      R__b << fStoreStreamerInfos;
      R__b << fUseDtd;
      R__b << fUseNamespaces;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TXMLSetup::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLSetup.

      TClass *R__cl = ::TXMLSetup::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fXmlLayout", &fXmlLayout);
      R__insp.Inspect(R__cl, R__parent, "fStoreStreamerInfos", &fStoreStreamerInfos);
      R__insp.Inspect(R__cl, R__parent, "fUseDtd", &fUseDtd);
      R__insp.Inspect(R__cl, R__parent, "fUseNamespaces", &fUseNamespaces);
      R__insp.Inspect(R__cl, R__parent, "fRefCounter", &fRefCounter);
      R__insp.Inspect(R__cl, R__parent, "fStrBuf", &fStrBuf);
      fStrBuf.ShowMembers(R__insp, strcat(R__parent,"fStrBuf.")); R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TXMLSetup_IsA(const void *obj) {
      return ((::TXMLSetup*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TXMLSetup(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TXMLSetup : new ::TXMLSetup;
   }
   static void *newArray_TXMLSetup(Long_t size) {
      return new ::TXMLSetup[size];
   }
   // Wrapper around operator delete
   static void delete_TXMLSetup(void *p) {
      delete ((::TXMLSetup*)p);
   }
   static void deleteArray_TXMLSetup(void *p) {
      delete [] ((::TXMLSetup*)p);
   }
   static void destruct_TXMLSetup(void *p) {
      typedef ::TXMLSetup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLSetup

//______________________________________________________________________________
void TXMLBuffer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLBuffer.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TBuffer::Streamer(R__b);
      TXMLSetup::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TXMLBuffer::IsA());
   } else {
      R__c = R__b.WriteVersion(TXMLBuffer::IsA(), kTRUE);
      TBuffer::Streamer(R__b);
      TXMLSetup::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TXMLBuffer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLBuffer.

      TClass *R__cl = ::TXMLBuffer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fXML", &fXML);
      R__insp.Inspect(R__cl, R__parent, "fStack", &fStack);
      fStack.ShowMembers(R__insp, strcat(R__parent,"fStack.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fVersionBuf", &fVersionBuf);
      R__insp.Inspect(R__cl, R__parent, "*fObjMap", &fObjMap);
      R__insp.Inspect(R__cl, R__parent, "*fIdArray", &fIdArray);
      R__insp.Inspect(R__cl, R__parent, "fValueBuf", &fValueBuf);
      fValueBuf.ShowMembers(R__insp, strcat(R__parent,"fValueBuf.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fErrorFlag", &fErrorFlag);
      R__insp.Inspect(R__cl, R__parent, "fCanUseCompact", &fCanUseCompact);
      R__insp.Inspect(R__cl, R__parent, "fExpectedChain", &fExpectedChain);
      R__insp.Inspect(R__cl, R__parent, "*fExpectedBaseClass", &fExpectedBaseClass);
      R__insp.Inspect(R__cl, R__parent, "fCompressLevel", &fCompressLevel);
      TBuffer::ShowMembers(R__insp, R__parent);
      TXMLSetup::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TXMLBuffer_IsA(const void *obj) {
      return ((::TXMLBuffer*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TXMLBuffer(void *p) {
      delete ((::TXMLBuffer*)p);
   }
   static void deleteArray_TXMLBuffer(void *p) {
      delete [] ((::TXMLBuffer*)p);
   }
   static void destruct_TXMLBuffer(void *p) {
      typedef ::TXMLBuffer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLBuffer

//______________________________________________________________________________
void TXMLFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLFile.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TFile::Streamer(R__b);
      TXMLSetup::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TXMLFile::IsA());
   } else {
      R__c = R__b.WriteVersion(TXMLFile::IsA(), kTRUE);
      TFile::Streamer(R__b);
      TXMLSetup::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TXMLFile::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLFile.

      TClass *R__cl = ::TXMLFile::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDoc", &fDoc);
      R__insp.Inspect(R__cl, R__parent, "*fStreamerInfoNode", &fStreamerInfoNode);
      R__insp.Inspect(R__cl, R__parent, "*fXML", &fXML);
      TFile::ShowMembers(R__insp, R__parent);
      TXMLSetup::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TXMLFile_IsA(const void *obj) {
      return ((::TXMLFile*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TXMLFile(void *p) {
      return  p ? new(p) ::TXMLFile : new ::TXMLFile;
   }
   static void *newArray_TXMLFile(Long_t size) {
      return new ::TXMLFile[size];
   }
   // Wrapper around operator delete
   static void delete_TXMLFile(void *p) {
      delete ((::TXMLFile*)p);
   }
   static void deleteArray_TXMLFile(void *p) {
      delete [] ((::TXMLFile*)p);
   }
   static void destruct_TXMLFile(void *p) {
      typedef ::TXMLFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLFile

//______________________________________________________________________________
void TXMLKey::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLKey.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TKey::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TXMLKey::IsA());
   } else {
      R__c = R__b.WriteVersion(TXMLKey::IsA(), kTRUE);
      TKey::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TXMLKey::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLKey.

      TClass *R__cl = ::TXMLKey::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__parent, "*fXML", &fXML);
      R__insp.Inspect(R__cl, R__parent, "*fKeyNode", &fKeyNode);
      TKey::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TXMLKey_IsA(const void *obj) {
      return ((::TXMLKey*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TXMLKey(void *p) {
      delete ((::TXMLKey*)p);
   }
   static void deleteArray_TXMLKey(void *p) {
      delete [] ((::TXMLKey*)p);
   }
   static void destruct_TXMLKey(void *p) {
      typedef ::TXMLKey current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLKey

//______________________________________________________________________________
void TXMLPlayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLPlayer.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TXMLPlayer::IsA());
   } else {
      R__c = R__b.WriteVersion(TXMLPlayer::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TXMLPlayer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLPlayer.

      TClass *R__cl = ::TXMLPlayer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fGetterName", &fGetterName);
      fGetterName.ShowMembers(R__insp, strcat(R__parent,"fGetterName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSetterName", &fSetterName);
      fSetterName.ShowMembers(R__insp, strcat(R__parent,"fSetterName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXmlSetup", &fXmlSetup);
      fXmlSetup.ShowMembers(R__insp, strcat(R__parent,"fXmlSetup.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TXMLPlayer_IsA(const void *obj) {
      return ((::TXMLPlayer*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TXMLPlayer(void *p) {
      return  p ? new(p) ::TXMLPlayer : new ::TXMLPlayer;
   }
   static void *newArray_TXMLPlayer(Long_t size) {
      return new ::TXMLPlayer[size];
   }
   // Wrapper around operator delete
   static void delete_TXMLPlayer(void *p) {
      delete ((::TXMLPlayer*)p);
   }
   static void deleteArray_TXMLPlayer(void *p) {
      delete [] ((::TXMLPlayer*)p);
   }
   static void destruct_TXMLPlayer(void *p) {
      typedef ::TXMLPlayer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLPlayer

/********************************************************
* xml/src/G__XML.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__XML();

extern "C" void G__set_cpp_environmentG__XML() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("xml/inc/TXMLSetup.h");
  G__add_compiledheader("xml/inc/TXMLBuffer.h");
  G__add_compiledheader("xml/inc/TXMLFile.h");
  G__add_compiledheader("xml/inc/TXMLKey.h");
  G__add_compiledheader("xml/inc/TXMLPlayer.h");
  G__add_compiledheader("xml/inc/TXMLEngine.h");
  G__cpp_reset_tagtableG__XML();
}
class G__xmldIsrcdIG__XMLdOcxx_tag {};

void* operator new(size_t size,G__xmldIsrcdIG__XMLdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__xmldIsrcdIG__XMLdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_xmldIsrcdIG__XMLdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__XML() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TXMLSetup */
static int G__G__XML_127_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLSetup *p=NULL;
   if(G__getaryconstruct()) p=new TXMLSetup[G__getaryconstruct()];
   else p=::new((G__xmldIsrcdIG__XMLdOcxx_tag*)G__getgvp()) TXMLSetup;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLSetup *p=NULL;
      p=::new((G__xmldIsrcdIG__XMLdOcxx_tag*)G__getgvp()) TXMLSetup((const char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLSetup *p=NULL;
      p=::new((G__xmldIsrcdIG__XMLdOcxx_tag*)G__getgvp()) TXMLSetup(*(TXMLSetup*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TString *pobj,xobj=((TXMLSetup*)(G__getstructoffset()))->GetSetupAsString();
        pobj=new TString(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLSetup*)(G__getstructoffset()))->PrintSetup();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TXMLSetup*)(G__getstructoffset()))->GetXmlLayout());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TXMLSetup*)(G__getstructoffset()))->IsStoreStreamerInfos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TXMLSetup*)(G__getstructoffset()))->IsUseDtd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TXMLSetup*)(G__getstructoffset()))->IsUseNamespaces());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLSetup*)(G__getstructoffset()))->SetXmlLayout((TXMLSetup::EXMLLayout)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXMLSetup*)(G__getstructoffset()))->SetStoreStreamerInfos((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLSetup*)(G__getstructoffset()))->SetStoreStreamerInfos();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXMLSetup*)(G__getstructoffset()))->SetUsedDtd((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLSetup*)(G__getstructoffset()))->SetUsedDtd();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXMLSetup*)(G__getstructoffset()))->SetUseNamespaces((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLSetup*)(G__getstructoffset()))->SetUseNamespaces();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TXMLSetup*)(G__getstructoffset()))->XmlConvertClassName((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TXMLSetup*)(G__getstructoffset()))->XmlClassNameSpaceRef((const TClass*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TXMLSetup*)(G__getstructoffset()))->XmlGetElementName((const TStreamerElement*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLSetup*)(G__getstructoffset()))->GetNextRefCounter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TString *pobj,xobj=TXMLSetup::DefaultXmlSetup();
        pobj=new TString(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TXMLSetup::SetNameSpaceBase((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TXMLSetup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLSetup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TXMLSetup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TXMLSetup::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TXMLSetup*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLSetup*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLSetup*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLSetup*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLSetup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLSetup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLSetup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_127_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLSetup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLSetup G__TTXMLSetup;
static int G__G__XML_127_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TXMLSetup *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TXMLSetup *)((G__getstructoffset())+sizeof(TXMLSetup)*i))->~G__TTXMLSetup();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TXMLSetup *)(G__getstructoffset()))->~G__TTXMLSetup();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__XML_127_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLSetup *dest = (TXMLSetup*)(G__getstructoffset());
   *dest = (*(TXMLSetup*)libp->para[0].ref);
   const TXMLSetup& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXMLEngine */
static int G__G__XML_131_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLEngine *p=NULL;
   if(G__getaryconstruct()) p=new TXMLEngine[G__getaryconstruct()];
   else                    p=new TXMLEngine;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TXMLEngine*)(G__getstructoffset()))->HasAttr((xmlNodePointer)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TXMLEngine*)(G__getstructoffset()))->GetAttr((xmlNodePointer)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLEngine*)(G__getstructoffset()))->GetIntAttr((xmlNodePointer)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->NewAttr((xmlNodePointer)G__int(libp->para[0]),(xmlNsPointer)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->NewIntAttr((xmlNodePointer)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->FreeAttr((xmlNodePointer)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->NewChild((xmlNodePointer)G__int(libp->para[0]),(xmlNsPointer)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->NewChild((xmlNodePointer)G__int(libp->para[0]),(xmlNsPointer)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->NewNS((xmlNodePointer)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->NewNS((xmlNodePointer)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->AddChild((xmlNodePointer)G__int(libp->para[0]),(xmlNodePointer)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->UnlinkNode((xmlNodePointer)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->FreeNode((xmlNodePointer)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->UnlinkFreeNode((xmlNodePointer)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TXMLEngine*)(G__getstructoffset()))->GetNodeName((xmlNodePointer)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TXMLEngine*)(G__getstructoffset()))->GetNodeContent((xmlNodePointer)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->GetChild((xmlNodePointer)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->GetParent((xmlNodePointer)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->GetNext((xmlNodePointer)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->ShiftToNext(libp->para[0].ref?*(xmlNodePointer*)libp->para[0].ref:*(xmlNodePointer*)(&G__Mlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TXMLEngine*)(G__getstructoffset()))->IsEmptyNode((xmlNodePointer)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->SkipEmpty(libp->para[0].ref?*(xmlNodePointer*)libp->para[0].ref:*(xmlNodePointer*)(&G__Mlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->CleanNode((xmlNodePointer)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->NewDoc((const char*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->NewDoc());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->AssignDtd((xmlDocPointer)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->FreeDoc((xmlDocPointer)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->SaveDoc((xmlDocPointer)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->SaveDoc((xmlDocPointer)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->DocSetRootElement((xmlDocPointer)G__int(libp->para[0]),(xmlNodePointer)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->DocGetRootElement((xmlDocPointer)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLEngine*)(G__getstructoffset()))->ParseFile((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,103,(long)((TXMLEngine*)(G__getstructoffset()))->ValidateDocument((xmlDocPointer)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((TXMLEngine*)(G__getstructoffset()))->ValidateDocument((xmlDocPointer)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TXMLEngine::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLEngine::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TXMLEngine::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TXMLEngine::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TXMLEngine*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLEngine*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLEngine::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLEngine::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLEngine::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_131_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLEngine::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__XML_131_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TXMLEngine *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TXMLEngine(*(TXMLEngine*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLEngine G__TTXMLEngine;
static int G__G__XML_131_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TXMLEngine *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TXMLEngine *)((G__getstructoffset())+sizeof(TXMLEngine)*i);
   else  delete (TXMLEngine *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__XML_131_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLEngine *dest = (TXMLEngine*)(G__getstructoffset());
   *dest = (*(TXMLEngine*)libp->para[0].ref);
   const TXMLEngine& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXMLFile */
static int G__G__XML_134_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLFile *p=NULL;
   if(G__getaryconstruct()) p=new TXMLFile[G__getaryconstruct()];
   else                    p=new TXMLFile;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLFile);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLFile *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TXMLFile(
(const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TXMLFile(
(const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TXMLFile((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TXMLFile((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLFile);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->DrawMap((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->DrawMap((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->DrawMap();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->FillBuffer(libp->para[0].ref?*(char**)libp->para[0].ref:*(char**)(&G__Mlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->Flush();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TXMLFile*)(G__getstructoffset()))->GetEND());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TXMLFile*)(G__getstructoffset()))->GetErrno());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TXMLFile*)(G__getstructoffset()))->ResetErrno();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TXMLFile*)(G__getstructoffset()))->GetNfree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TXMLFile*)(G__getstructoffset()))->GetNbytesInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TXMLFile*)(G__getstructoffset()))->GetNbytesFree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TXMLFile*)(G__getstructoffset()))->GetSeekFree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TXMLFile*)(G__getstructoffset()))->GetSeekInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TXMLFile*)(G__getstructoffset()))->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TXMLFile*)(G__getstructoffset()))->GetStreamerInfoList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TXMLFile*)(G__getstructoffset()))->IsOpen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->MakeFree((Long64_t)G__Longlong(libp->para[0]),(Long64_t)G__Longlong(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->MakeProject((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->MakeProject((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->MakeProject((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->Map();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TXMLFile*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TXMLFile*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TXMLFile*)(G__getstructoffset()))->ReadBuffer((char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->ReadFree();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->ReadStreamerInfo();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->Recover());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->ReOpen((Option_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->Seek((Long64_t)G__Longlong(libp->para[0]),(TFile::ERelativeTo)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->Seek((Long64_t)G__Longlong(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->SetEND((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TXMLFile*)(G__getstructoffset()))->Sizeof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->UseCache((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->UseCache((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->UseCache();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TXMLFile*)(G__getstructoffset()))->WriteBuffer((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->Write((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->Write((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->Write((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->Write());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((const TXMLFile*)(G__getstructoffset()))->Write((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((const TXMLFile*)(G__getstructoffset()))->Write((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((const TXMLFile*)(G__getstructoffset()))->Write((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((const TXMLFile*)(G__getstructoffset()))->Write());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->WriteFree();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->WriteHeader();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->WriteTObject((const TObject*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->WriteTObject((const TObject*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->WriteTObject((const TObject*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->WriteObjectAny((const void*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->WriteObjectAny((const void*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->WriteObjectAny((const void*)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TXMLFile*)(G__getstructoffset()))->WriteObjectAny((const void*)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->WriteStreamerInfo();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->SetXmlLayout((TXMLSetup::EXMLLayout)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->SetStoreStreamerInfos((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->SetStoreStreamerInfos();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->SetUsedDtd((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->SetUsedDtd();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->SetUseNamespaces((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->SetUseNamespaces();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TXMLFile*)(G__getstructoffset()))->XML());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TXMLFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TXMLFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TXMLFile::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TXMLFile*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLFile*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_134_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLFile G__TTXMLFile;
static int G__G__XML_134_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TXMLFile *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TXMLFile *)((G__getstructoffset())+sizeof(TXMLFile)*i);
   else  delete (TXMLFile *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXMLBuffer */
static int G__G__XML_136_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLBuffer *p=NULL;
      p = new TXMLBuffer((TBuffer::EMode)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLBuffer *p=NULL;
      p = new TXMLBuffer((TBuffer::EMode)G__int(libp->para[0]),(TXMLFile*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->SetCompressionLevel((int)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->SetXML((TXMLEngine*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->XmlWriteBlock((xmlNodePointer)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLBuffer*)(G__getstructoffset()))->XmlWrite((const TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLBuffer*)(G__getstructoffset()))->XmlWrite((const void*)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->XmlReadBlock((xmlNodePointer)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TXMLBuffer*)(G__getstructoffset()))->XmlRead((xmlNodePointer)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLBuffer*)(G__getstructoffset()))->XmlReadAny((xmlNodePointer)G__int(libp->para[0]),(TClass**)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadClass((const TClass*)G__int(libp->para[0]),(UInt_t*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadClass((const TClass*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadClass());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteClass((const TClass*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->CheckByteCount((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(const TClass*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->CheckByteCount((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->SetByteCount((UInt_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->SetByteCount((UInt_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,115,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadVersion((UInt_t*)G__int(libp->para[0]),(UInt_t*)G__int(libp->para[1])
,(const TClass*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,115,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadVersion((UInt_t*)G__int(libp->para[0]),(UInt_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,115,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadVersion((UInt_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,115,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadVersion());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,104,(long)((TXMLBuffer*)(G__getstructoffset()))->WriteVersion((const TClass*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,104,(long)((TXMLBuffer*)(G__getstructoffset()))->WriteVersion((const TClass*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadObjectAny((const TClass*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->SkipObjectAny();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->IncrementLevel((TStreamerInfo*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->SetStreamerElementNumber((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->DecrementLevel((TStreamerInfo*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteObject((const TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadDouble32((Double_t*)G__int(libp->para[0]),(TStreamerElement*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadDouble32((Double_t*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteDouble32((Double_t*)G__int(libp->para[0]),(TStreamerElement*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteDouble32((Double_t*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(Bool_t**)libp->para[0].ref:*(Bool_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(Char_t**)libp->para[0].ref:*(Char_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(UChar_t**)libp->para[0].ref:*(UChar_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(Short_t**)libp->para[0].ref:*(Short_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(UShort_t**)libp->para[0].ref:*(UShort_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(Int_t**)libp->para[0].ref:*(Int_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(UInt_t**)libp->para[0].ref:*(UInt_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(Long_t**)libp->para[0].ref:*(Long_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(ULong_t**)libp->para[0].ref:*(ULong_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(Long64_t**)libp->para[0].ref:*(Long64_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(ULong64_t**)libp->para[0].ref:*(ULong64_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(Float_t**)libp->para[0].ref:*(Float_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArray(libp->para[0].ref?*(Double_t**)libp->para[0].ref:*(Double_t**)(&G__Mlong(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArrayDouble32(libp->para[0].ref?*(Double_t**)libp->para[0].ref:*(Double_t**)(&G__Mlong(libp->para[0])),(TStreamerElement*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadArrayDouble32(libp->para[0].ref?*(Double_t**)libp->para[0].ref:*(Double_t**)(&G__Mlong(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((Bool_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((Char_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((UChar_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((Short_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((UShort_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((Int_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((UInt_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((Long_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((ULong_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((Long64_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((ULong64_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((Float_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArray((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArrayDouble32((Double_t*)G__int(libp->para[0]),(TStreamerElement*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->ReadStaticArrayDouble32((Double_t*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((Bool_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((Char_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((UChar_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((Short_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((UShort_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((Int_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((UInt_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((Long_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((ULong_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((Long64_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((ULong64_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((Float_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArrayDouble32((Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TStreamerElement*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArrayDouble32((Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const Bool_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const Char_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const UChar_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const Short_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const UShort_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const Int_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const UInt_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const Long_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const ULong_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const Long64_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const ULong64_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const Float_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArray((const Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArrayDouble32((const Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TStreamerElement*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteArrayDouble32((const Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((void*)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TMemberStreamer*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((void*)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((void*)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((void**)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Bool_t)G__int(libp->para[3])
,(TMemberStreamer*)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((void**)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Bool_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((void**)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ReadFastArray((void**)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const Bool_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const Char_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const UChar_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const Short_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const UShort_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const Int_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const UInt_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const Long_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const ULong_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const Long64_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const ULong64_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const Float_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((const Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArrayDouble32((const Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TStreamerElement*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArrayDouble32((const Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((void*)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TMemberStreamer*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((void*)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((void*)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((void**)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Bool_t)G__int(libp->para[3])
,(TMemberStreamer*)G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((void**)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Bool_t)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((void**)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TXMLBuffer*)(G__getstructoffset()))->WriteFastArray((void**)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->StreamObject((void*)G__int(libp->para[0]),*(type_info*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->StreamObject((void*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->StreamObject((void*)G__int(libp->para[0]),(const TClass*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(Bool_t*)G__Boolref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(Char_t*)G__Charref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(UChar_t*)G__UCharref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(Short_t*)G__Shortref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(UShort_t*)G__UShortref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(Int_t*)G__Intref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(UInt_t*)G__UIntref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(Long_t*)G__Longref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(ULong_t*)G__ULongref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(Long64_t*)G__Longlongref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(ULong64_t*)G__ULonglongref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(Float_t*)G__Floatref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>(*(Double_t*)G__Doubleref(&libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator>>((Char_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((Bool_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((Char_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((UChar_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((Short_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((UShort_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((UInt_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((Long_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((ULong_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((Long64_t)G__Longlong(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((ULong64_t)G__ULonglong(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=((TXMLBuffer*)(G__getstructoffset()))->operator<<((const Char_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TXMLBuffer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLBuffer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_7_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TXMLBuffer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_8_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TXMLBuffer::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_9_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TXMLBuffer*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_0_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_1_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_2_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLBuffer*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_3_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLBuffer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_4_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLBuffer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_5_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLBuffer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_136_6_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLBuffer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLBuffer G__TTXMLBuffer;
static int G__G__XML_136_7_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TXMLBuffer *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TXMLBuffer *)((G__getstructoffset())+sizeof(TXMLBuffer)*i);
   else  delete (TXMLBuffer *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXMLKey */
static int G__G__XML_150_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLKey *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TXMLKey(
(TXMLFile*)G__int(libp->para[0]),(const TObject*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TXMLKey((TXMLFile*)G__int(libp->para[0]),(const TObject*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLKey);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLKey *p=NULL;
      p = new TXMLKey(
(TXMLFile*)G__int(libp->para[0]),(const void*)G__int(libp->para[1])
,(const TClass*)G__int(libp->para[2]),(const char*)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLKey);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLKey *p=NULL;
      p = new TXMLKey((TXMLFile*)G__int(libp->para[0]),(xmlNodePointer)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLKey);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->Delete((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->Delete();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->DeleteBuffer();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->FillBuffer(libp->para[0].ref?*(char**)libp->para[0].ref:*(char**)(&G__Mlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TXMLKey*)(G__getstructoffset()))->GetBuffer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TXMLKey*)(G__getstructoffset()))->GetSeekKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TXMLKey*)(G__getstructoffset()))->GetSeekPdir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->Keep();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLKey*)(G__getstructoffset()))->Read((TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TXMLKey*)(G__getstructoffset()))->ReadObj());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((TXMLKey*)(G__getstructoffset()))->ReadObjectAny((const TClass*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->ReadBuffer(libp->para[0].ref?*(char**)libp->para[0].ref:*(char**)(&G__Mlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->ReadFile();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->SetBuffer();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->SetParent((const TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TXMLKey*)(G__getstructoffset()))->Sizeof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((TXMLKey*)(G__getstructoffset()))->WriteFile((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TXMLKey*)(G__getstructoffset()))->WriteFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TXMLKey*)(G__getstructoffset()))->KeyNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->SetXML((TXMLEngine*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TXMLKey::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLKey::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TXMLKey::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TXMLKey::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TXMLKey*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLKey*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLKey::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLKey::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLKey::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_150_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLKey::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__XML_150_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TXMLKey *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TXMLKey(*(TXMLKey*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLKey);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLKey G__TTXMLKey;
static int G__G__XML_150_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TXMLKey *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TXMLKey *)((G__getstructoffset())+sizeof(TXMLKey)*i);
   else  delete (TXMLKey *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__XML_150_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLKey *dest = (TXMLKey*)(G__getstructoffset());
   *dest = (*(TXMLKey*)libp->para[0].ref);
   const TXMLKey& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXMLPlayer */
static int G__G__XML_153_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLPlayer *p=NULL;
   if(G__getaryconstruct()) p=new TXMLPlayer[G__getaryconstruct()];
   else                    p=new TXMLPlayer;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLPlayer);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TXMLPlayer*)(G__getstructoffset()))->ProduceCode((TList*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TXMLPlayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLPlayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TXMLPlayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TXMLPlayer::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TXMLPlayer*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLPlayer*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLPlayer*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLPlayer*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLPlayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLPlayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLPlayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XML_153_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLPlayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__XML_153_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TXMLPlayer *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TXMLPlayer(*(TXMLPlayer*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__XMLLN_TXMLPlayer);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLPlayer G__TTXMLPlayer;
static int G__G__XML_153_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TXMLPlayer *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TXMLPlayer *)((G__getstructoffset())+sizeof(TXMLPlayer)*i);
   else  delete (TXMLPlayer *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__XML_153_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLPlayer *dest = (TXMLPlayer*)(G__getstructoffset());
   *dest = (*(TXMLPlayer*)libp->para[0].ref);
   const TXMLPlayer& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TXMLSetup */

/* TXMLEngine */

/* TXMLFile */

/* TXMLBuffer */

/* TXMLKey */

/* TXMLPlayer */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__XML {
 public:
  G__Sizep2memfuncG__XML() {p=&G__Sizep2memfuncG__XML::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__XML::*p)();
};

size_t G__get_sizep2memfuncG__XML()
{
  G__Sizep2memfuncG__XML a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__XML() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine))) {
     TXMLEngine *G__Lderived;
     G__Lderived=(TXMLEngine*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine),G__get_linked_tagnum(&G__G__XMLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLLN_TXMLFile))) {
     TXMLFile *G__Lderived;
     G__Lderived=(TXMLFile*)0x1000;
     {
       TFile *G__Lpbase=(TFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLFile),G__get_linked_tagnum(&G__G__XMLLN_TFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDirectory *G__Lpbase=(TDirectory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLFile),G__get_linked_tagnum(&G__G__XMLLN_TDirectory),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLFile),G__get_linked_tagnum(&G__G__XMLLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLFile),G__get_linked_tagnum(&G__G__XMLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TXMLSetup *G__Lpbase=(TXMLSetup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLFile),G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer))) {
     TXMLBuffer *G__Lderived;
     G__Lderived=(TXMLBuffer*)0x1000;
     {
       TBuffer *G__Lpbase=(TBuffer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer),G__get_linked_tagnum(&G__G__XMLLN_TBuffer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer),G__get_linked_tagnum(&G__G__XMLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TXMLSetup *G__Lpbase=(TXMLSetup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer),G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLLN_TXMLKey))) {
     TXMLKey *G__Lderived;
     G__Lderived=(TXMLKey*)0x1000;
     {
       TKey *G__Lpbase=(TKey*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLKey),G__get_linked_tagnum(&G__G__XMLLN_TKey),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLKey),G__get_linked_tagnum(&G__G__XMLLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLKey),G__get_linked_tagnum(&G__G__XMLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLLN_TXMLPlayer))) {
     TXMLPlayer *G__Lderived;
     G__Lderived=(TXMLPlayer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLPlayer),G__get_linked_tagnum(&G__G__XMLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__XML() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,
-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,
-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,
-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,
-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__XMLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__XMLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__XMLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__XMLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__XMLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("xmlNodePointer",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("xmlNsPointer",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("xmlAttrPointer",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("xmlDocPointer",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TXMLSetup */
static void G__setup_memvarTXMLSetup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup));
   { TXMLSetup *p; p=(TXMLSetup*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__XMLLN_TXMLSetupcLcLEXMLLayout),-1,-2,1,"kSpecialized=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__XMLLN_TXMLSetupcLcLEXMLLayout),-1,-2,1,"kGeneralized=3",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__G__XMLLN_TXMLSetupcLcLEXMLLayout),-1,-1,2,"fXmlLayout=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fStoreStreamerInfos=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseDtd=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseNamespaces=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRefCounter=",0,"!  counter , used to build id of xml references");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__XMLLN_TString),-1,-1,2,"fStrBuf=",0,"!  buffer, used in XmlDefineClass() function");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__XMLLN_TString),-1,-2,2,"fNameSpaceBase=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXMLEngine */
static void G__setup_memvarTXMLEngine(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine));
   { TXMLEngine *p; p=(TXMLEngine*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXMLFile */
static void G__setup_memvarTXMLFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLFile));
   { TXMLFile *p; p=(TXMLFile*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,89,0,0,-1,G__defined_typename("xmlDocPointer"),-1,2,"fDoc=",0,"!");
   G__memvar_setup((void*)NULL,89,0,0,-1,G__defined_typename("xmlNodePointer"),-1,2,"fStreamerInfoNode=",0,"!  pointer of node with streamer info data");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine),-1,-1,2,"fXML=",0,"! object for interface with xml library");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXMLBuffer */
static void G__setup_memvarTXMLBuffer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer));
   { TXMLBuffer *p; p=(TXMLBuffer*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine),-1,-1,2,"fXML=",0,"!");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__XMLLN_TObjArray),-1,-1,2,"fStack=",0,"!");
   G__memvar_setup((void*)NULL,115,0,0,-1,G__defined_typename("Version_t"),-1,2,"fVersionBuf=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TExMap),-1,-1,2,"fObjMap=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TObjArray),-1,-1,2,"fIdArray=",0,"!");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__XMLLN_TString),-1,-1,2,"fValueBuf=",0,"!");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fErrorFlag=",0,"!");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCanUseCompact=",0,"!   flag indicate that basic type (like Int_t) can be placed in the same tag");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fExpectedChain=",0,"!   flag to resolve situation when several elements of same basic type stored as FastArray");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,-1,2,"fExpectedBaseClass=",0,"!   pointer to class, which should be stored as parent of current");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCompressLevel=",0,"!   compress level used to minimize size of file ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXMLKey */
static void G__setup_memvarTXMLKey(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLKey));
   { TXMLKey *p; p=(TXMLKey*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TXMLFile),-1,-1,2,"fFile=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine),-1,-1,2,"fXML=",0,"!");
   G__memvar_setup((void*)NULL,89,0,0,-1,G__defined_typename("xmlNodePointer"),-1,2,"fKeyNode=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXMLPlayer */
static void G__setup_memvarTXMLPlayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLPlayer));
   { TXMLPlayer *p; p=(TXMLPlayer*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__XMLLN_TString),-1,-1,2,"fGetterName=",0,"!  buffer for name of getter method");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__XMLLN_TString),-1,-1,2,"fSetterName=",0,"!  buffer for name of setter method");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup),-1,-1,2,"fXmlSetup=",0,"!  buffer for xml names convertion");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__XML() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTXMLSetup(void) {
   /* TXMLSetup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup));
   G__memfunc_setup("TXMLSetup",854,G__G__XML_127_1_0,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TXMLSetup",854,G__G__XML_127_2_0,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup),-1,0,1,1,1,0,"C - - 10 - opt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TXMLSetup",854,G__G__XML_127_3_0,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup),-1,0,1,1,1,0,"u 'TXMLSetup' - 11 - src",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSetupAsString",1628,G__G__XML_127_4_0,117,G__get_linked_tagnum(&G__G__XMLLN_TString),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PrintSetup",1054,G__G__XML_127_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetXmlLayout",1231,G__G__XML_127_6_0,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLSetupcLcLEXMLLayout),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsStoreStreamerInfos",2059,G__G__XML_127_7_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsUseDtd",773,G__G__XML_127_8_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsUseNamespaces",1513,G__G__XML_127_9_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetXmlLayout",1243,G__G__XML_127_0_1,121,-1,-1,0,1,1,1,0,"i 'TXMLSetup::EXMLLayout' - 0 - layout",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetStoreStreamerInfos",2171,G__G__XML_127_1_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE iConvert",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetUsedDtd",985,G__G__XML_127_2_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE use",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetUseNamespaces",1625,G__G__XML_127_3_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE iUseNamespaces",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("XmlConvertClassName",1929,G__G__XML_127_4_1,67,-1,-1,0,1,1,1,1,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlClassNameSpaceRef",1969,G__G__XML_127_5_1,67,-1,-1,0,1,1,1,1,"U 'TClass' - 10 - cl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlGetElementName",1692,G__G__XML_127_6_1,67,-1,-1,0,1,1,1,1,"U 'TStreamerElement' - 10 - el",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNextRefCounter",1724,G__G__XML_127_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DefaultXmlSetup",1543,G__G__XML_127_8_1,117,G__get_linked_tagnum(&G__G__XMLLN_TString),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TString (*)())(&TXMLSetup::DefaultXmlSetup),0);
   G__memfunc_setup("SetNameSpaceBase",1556,G__G__XML_127_9_1,121,-1,-1,0,1,3,1,0,"C - - 10 - namespacebase",(char*)NULL,(void*)(void (*)(const char*))(&TXMLSetup::SetNameSpaceBase),0);
   G__memfunc_setup("XmlDefineClass",1394,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,1,1,2,0,"C - - 10 - xmlClassName",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetElItemName",1249,(G__InterfaceMethod)NULL,67,-1,-1,0,1,1,2,1,"U 'TStreamerElement' - 0 - el",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsValidXmlSetup",1518,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,2,0,"C - - 10 - setupstr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadSetupFromStr",1626,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,2,0,"C - - 10 - setupstr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AtoI",365,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,2,0,
"C - - 10 - sbuf i - 'Int_t' 0 0 def "
"C - - 10 0 errinfo",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__XML_127_5_2,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TXMLSetup::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__XML_127_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLSetup::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__XML_127_7_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TXMLSetup::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__XML_127_8_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TXMLSetup::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__XML_127_9_2,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__XML_127_0_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__XML_127_1_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XML_127_2_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__XML_127_3_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLSetup::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XML_127_4_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLSetup::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__XML_127_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLSetup::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XML_127_6_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLSetup::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TXMLSetup",980,G__G__XML_127_7_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__XML_127_8_3,(int)('u'),G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup),-1,1,1,1,1,0,"u 'TXMLSetup' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXMLEngine(void) {
   /* TXMLEngine */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine));
   G__memfunc_setup("TXMLEngine",923,G__G__XML_131_1_0,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HasAttr",695,G__G__XML_131_2_0,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"Y - 'xmlNodePointer' 0 - xmlnode C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAttr",699,G__G__XML_131_3_0,67,-1,-1,0,2,1,1,1,
"Y - 'xmlNodePointer' 0 - xmlnode C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetIntAttr",998,G__G__XML_131_4_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"Y - 'xmlNodePointer' 0 - node C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NewAttr",709,G__G__XML_131_5_0,89,-1,G__defined_typename("xmlAttrPointer"),0,4,1,1,0,
"Y - 'xmlNodePointer' 0 - xmlnode Y - 'xmlNsPointer' 0 - - "
"C - - 10 - name C - - 10 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NewIntAttr",1008,G__G__XML_131_6_0,89,-1,G__defined_typename("xmlAttrPointer"),0,3,1,1,0,
"Y - 'xmlNodePointer' 0 - xmlnode C - - 10 - name "
"i - 'Int_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FreeAttr",797,G__G__XML_131_7_0,121,-1,-1,0,2,1,1,0,
"Y - 'xmlNodePointer' 0 - xmlnode C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NewChild",782,G__G__XML_131_8_0,89,-1,G__defined_typename("xmlNodePointer"),0,4,1,1,0,
"Y - 'xmlNodePointer' 0 - parent Y - 'xmlNsPointer' 0 - ns "
"C - - 10 - name C - - 10 0 content",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NewNS",459,G__G__XML_131_9_0,89,-1,G__defined_typename("xmlNsPointer"),0,3,1,1,0,
"Y - 'xmlNodePointer' 0 - xmlnode C - - 10 - reference "
"C - - 10 0 name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddChild",749,G__G__XML_131_0_1,121,-1,-1,0,2,1,1,0,
"Y - 'xmlNodePointer' 0 - parent Y - 'xmlNodePointer' 0 - child",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UnlinkNode",1015,G__G__XML_131_1_1,121,-1,-1,0,1,1,1,0,"Y - 'xmlNodePointer' 0 - node",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FreeNode",776,G__G__XML_131_2_1,121,-1,-1,0,1,1,1,0,"Y - 'xmlNodePointer' 0 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UnlinkFreeNode",1401,G__G__XML_131_3_1,121,-1,-1,0,1,1,1,0,"Y - 'xmlNodePointer' 0 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNodeName",1063,G__G__XML_131_4_1,67,-1,-1,0,1,1,1,1,"Y - 'xmlNodePointer' 0 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNodeContent",1409,G__G__XML_131_5_1,67,-1,-1,0,1,1,1,1,"Y - 'xmlNodePointer' 0 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetChild",772,G__G__XML_131_6_1,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,1,0,"Y - 'xmlNodePointer' 0 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetParent",906,G__G__XML_131_7_1,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,1,0,"Y - 'xmlNodePointer' 0 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNext",703,G__G__XML_131_8_1,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,1,0,"Y - 'xmlNodePointer' 0 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ShiftToNext",1120,G__G__XML_131_9_1,121,-1,-1,0,1,1,1,0,"Y - 'xmlNodePointer' 1 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsEmptyNode",1105,G__G__XML_131_0_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"Y - 'xmlNodePointer' 0 - -","obsolete, should not be used",(void*)NULL,0);
   G__memfunc_setup("SkipEmpty",934,G__G__XML_131_1_2,121,-1,-1,0,1,1,1,0,"Y - 'xmlNodePointer' 1 - -","obsolete, should not be used",(void*)NULL,0);
   G__memfunc_setup("CleanNode",873,G__G__XML_131_2_2,121,-1,-1,0,1,1,1,0,"Y - 'xmlNodePointer' 0 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NewDoc",576,G__G__XML_131_3_2,89,-1,G__defined_typename("xmlDocPointer"),0,1,1,1,0,"C - - 10 0 version",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AssignDtd",897,G__G__XML_131_4_2,121,-1,-1,0,3,1,1,0,
"Y - 'xmlDocPointer' 0 - xmldoc C - - 10 - dtdname "
"C - - 10 - rootname",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FreeDoc",664,G__G__XML_131_5_2,121,-1,-1,0,1,1,1,0,"Y - 'xmlDocPointer' 0 - xmldoc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SaveDoc",677,G__G__XML_131_6_2,121,-1,-1,0,3,1,1,0,
"Y - 'xmlDocPointer' 0 - xmldoc C - - 10 - filename "
"i - 'Int_t' 0 1 layout",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DocSetRootElement",1712,G__G__XML_131_7_2,121,-1,-1,0,2,1,1,0,
"Y - 'xmlDocPointer' 0 - xmldoc Y - 'xmlNodePointer' 0 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DocGetRootElement",1700,G__G__XML_131_8_2,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,1,0,"Y - 'xmlDocPointer' 0 - xmldoc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ParseFile",891,G__G__XML_131_9_2,89,-1,G__defined_typename("xmlDocPointer"),0,1,1,1,0,"C - - 10 - filename",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ValidateDocument",1641,G__G__XML_131_0_3,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"Y - 'xmlDocPointer' 0 - - g - 'Bool_t' 0 kFALSE -","obsolete",(void*)NULL,0);
   G__memfunc_setup("makestr",759,(G__InterfaceMethod)NULL,67,-1,-1,0,1,1,2,0,"C - - 10 - str",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("makenstr",869,(G__InterfaceMethod)NULL,67,-1,-1,0,2,1,2,0,
"C - - 10 - start i - - 0 - len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AllocateNode",1195,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,2,1,2,0,
"i - - 0 - namelen Y - 'xmlNodePointer' 0 - parent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AllocateAttr",1216,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlAttrPointer"),0,3,1,2,0,
"i - - 0 - namelen i - - 0 - valuelen "
"Y - 'xmlNodePointer' 0 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FindNs",578,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNsPointer"),0,2,1,2,0,
"Y - 'xmlNodePointer' 0 - xmlnode C - - 10 - nsname",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TruncateNsExtension",1988,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"Y - 'xmlNodePointer' 0 - xmlnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UnpackSpecialCharacters",2339,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"C - - 0 - target C - - 10 - source "
"i - - 0 - srclen",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("OutputValue",1166,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"C - 'Char_t' 0 - value U 'TXMLOutputStream' - 0 - out",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SaveNode",789,(G__InterfaceMethod)NULL,121,-1,-1,0,4,1,2,0,
"Y - 'xmlNodePointer' 0 - xmlnode U 'TXMLOutputStream' - 0 - out "
"i - 'Int_t' 0 - layout i - 'Int_t' 0 - level",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadNode",770,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,3,1,2,0,
"Y - 'xmlNodePointer' 0 - xmlparent U 'TXMLInputStream' - 0 - inp "
"i - 'Int_t' 1 - resvalue",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__XML_131_1_4,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TXMLEngine::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__XML_131_2_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLEngine::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__XML_131_3_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TXMLEngine::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__XML_131_4_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TXMLEngine::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__XML_131_5_4,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__XML_131_6_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__XML_131_7_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XML_131_8_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__XML_131_9_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLEngine::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XML_131_0_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLEngine::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__XML_131_1_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLEngine::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XML_131_2_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLEngine::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TXMLEngine",923,G__G__XML_131_3_5,(int)('i'),G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine),-1,0,1,1,1,0,"u 'TXMLEngine' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TXMLEngine",1049,G__G__XML_131_4_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__XML_131_5_5,(int)('u'),G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine),-1,1,1,1,1,0,"u 'TXMLEngine' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXMLFile(void) {
   /* TXMLFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLFile));
   G__memfunc_setup("InitXmlFile",1093,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"g - 'Bool_t' 0 - create",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SysOpen",721,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,2,0,
"C - - 10 - - i - 'Int_t' 0 - - "
"h - 'UInt_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SysClose",821,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SysRead",699,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,2,0,
"i - 'Int_t' 0 - - Y - - 0 - - "
"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SysWrite",842,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,2,0,
"i - 'Int_t' 0 - - Y - - 10 - - "
"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SysSeek",711,(G__InterfaceMethod)NULL,110,-1,G__defined_typename("Long64_t"),0,3,1,2,0,
"i - 'Int_t' 0 - - n - 'Long64_t' 0 - - "
"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SysStat",731,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,5,1,2,0,
"i - 'Int_t' 0 - - L - 'Long_t' 0 - - "
"N - 'Long64_t' 0 - - L - 'Long_t' 0 - - "
"L - 'Long_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SysSync",732,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TXMLFile' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TXMLFile",709,G__G__XML_134_0_1,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLFile),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TXMLFile",709,G__G__XML_134_1_1,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLFile),-1,0,4,1,1,0,
"C - - 10 - filename C - 'Option_t' 10 \"read\" option "
"C - - 10 \"title\" title i - 'Int_t' 0 1 compression",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__XML_134_2_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("DrawMap",684,G__G__XML_134_3_1,121,-1,-1,0,2,1,1,0,
"C - - 10 \"*\" - C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillBuffer",993,G__G__XML_134_4_1,121,-1,-1,0,1,1,1,0,"C - - 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Flush",514,G__G__XML_134_5_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEND",503,G__G__XML_134_6_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetErrno",806,G__G__XML_134_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetErrno",1033,G__G__XML_134_8_1,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNfree",784,G__G__XML_134_9_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNbytesInfo",1313,G__G__XML_134_0_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNbytesFree",1303,G__G__XML_134_1_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSeekFree",1066,G__G__XML_134_2_2,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSeekInfo",1076,G__G__XML_134_3_2,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSize",699,G__G__XML_134_4_2,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStreamerInfoList",1931,G__G__XML_134_5_2,85,G__get_linked_tagnum(&G__G__XMLLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsOpen",590,G__G__XML_134_6_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeFree",768,G__G__XML_134_7_2,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 - - n - 'Long64_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeProject",1109,G__G__XML_134_8_2,121,-1,-1,0,3,1,1,0,
"C - - 10 - - C - - 10 \"*\" - "
"C - 'Option_t' 10 \"new\" -","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Map",286,G__G__XML_134_9_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__XML_134_0_3,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__XML_134_1_3,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBuffer",982,G__G__XML_134_2_3,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"C - - 0 - - i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFree",766,G__G__XML_134_3_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStreamerInfo",1611,G__G__XML_134_4_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Recover",726,G__G__XML_134_5_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReOpen",585,G__G__XML_134_6_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - 'Option_t' 10 - mode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Seek",392,G__G__XML_134_7_3,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 - - i 'TFile::ERelativeTo' - 0 kBeg -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetEND",515,G__G__XML_134_8_3,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sizeof",624,G__G__XML_134_9_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UseCache",769,G__G__XML_134_0_4,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 10 - i - 'Int_t' 0 TCache::kDfltPageSize -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteBuffer",1125,G__G__XML_134_1_4,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"C - - 10 - - i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Write",523,G__G__XML_134_2_4,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 0 - i - 'Int_t' 0 0 - "
"i - 'Int_t' 0 0 -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Write",523,G__G__XML_134_3_4,105,-1,G__defined_typename("Int_t"),0,3,1,1,8,
"C - - 10 0 - i - 'Int_t' 0 0 - "
"i - 'Int_t' 0 0 -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFree",909,G__G__XML_134_4_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteHeader",1108,G__G__XML_134_5_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteTObject",1206,G__G__XML_134_6_4,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"U 'TObject' - 10 - obj C - - 10 0 name "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteObjectAny",1418,G__G__XML_134_7_4,105,-1,G__defined_typename("Int_t"),0,4,1,1,0,
"Y - - 10 - obj C - - 10 - classname "
"C - - 10 - name C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteObjectAny",1418,G__G__XML_134_8_4,105,-1,G__defined_typename("Int_t"),0,4,1,1,0,
"Y - - 10 - obj U 'TClass' - 10 - cl "
"C - - 10 - name C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteStreamerInfo",1754,G__G__XML_134_9_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetXmlLayout",1243,G__G__XML_134_0_5,121,-1,-1,0,1,1,1,0,"i 'TXMLSetup::EXMLLayout' - 0 - layout",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetStoreStreamerInfos",2171,G__G__XML_134_1_5,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE iConvert",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetUsedDtd",985,G__G__XML_134_2_5,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE use",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetUseNamespaces",1625,G__G__XML_134_3_5,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE iUseNamespaces",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("XML",241,G__G__XML_134_4_5,85,G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("StoreStreamerElement",2074,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"Y - 'xmlNodePointer' 0 - node U 'TStreamerElement' - 0 - elem",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadStreamerElement",1929,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"Y - 'xmlNodePointer' 0 - node U 'TStreamerInfo' - 0 - info",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadFromFile",1168,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SaveToFile",978,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ProduceFileNames",1606,(G__InterfaceMethod)NULL,121,-1,-1,0,3,3,2,0,
"C - - 10 - filename u 'TString' - 1 - fname "
"u 'TString' - 1 - dtdname",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__XML_134_0_6,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TXMLFile::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__XML_134_1_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLFile::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__XML_134_2_6,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TXMLFile::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__XML_134_3_6,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TXMLFile::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__XML_134_4_6,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__XML_134_5_6,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__XML_134_6_6,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XML_134_7_6,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__XML_134_8_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLFile::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XML_134_9_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLFile::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__XML_134_0_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLFile::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XML_134_1_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLFile::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TXMLFile",835,G__G__XML_134_2_7,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXMLBuffer(void) {
   /* TXMLBuffer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer));
   G__memfunc_setup("TXMLBuffer",927,G__G__XML_136_1_0,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer),-1,0,1,1,1,0,"i 'TBuffer::EMode' - 0 - mode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TXMLBuffer",927,G__G__XML_136_2_0,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer),-1,0,2,1,1,0,
"i 'TBuffer::EMode' - 0 - mode U 'TXMLFile' - 0 - file",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetCompressionLevel",1974,G__G__XML_136_3_0,121,-1,-1,0,1,1,1,0,"i - - 0 - level",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetXML",541,G__G__XML_136_4_0,121,-1,-1,0,1,1,1,0,"U 'TXMLEngine' - 0 - xml",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBlock",1319,G__G__XML_136_5_0,121,-1,-1,0,1,1,1,0,"Y - 'xmlNodePointer' 0 - node",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWrite",828,G__G__XML_136_6_0,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,1,0,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWrite",828,G__G__XML_136_7_0,89,-1,G__defined_typename("xmlNodePointer"),0,2,1,1,0,
"Y - - 10 - obj U 'TClass' - 10 - cl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBlock",1176,G__G__XML_136_8_0,121,-1,-1,0,1,1,1,0,"Y - 'xmlNodePointer' 0 - node",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlRead",685,G__G__XML_136_9_0,85,G__get_linked_tagnum(&G__G__XMLLN_TObject),-1,0,1,1,1,0,"Y - 'xmlNodePointer' 0 - node",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadAny",981,G__G__XML_136_0_1,89,-1,-1,0,2,1,1,0,
"Y - 'xmlNodePointer' 0 - node U 'TClass' - 2 - cl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadClass",882,G__G__XML_136_1_1,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,2,1,1,0,
"U 'TClass' - 10 0 cl H - 'UInt_t' 0 0 objTag",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteClass",1025,G__G__XML_136_2_1,121,-1,-1,0,1,1,1,0,"U 'TClass' - 10 - cl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CheckByteCount",1403,G__G__XML_136_3_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"h - 'UInt_t' 0 - startpos h - 'UInt_t' 0 - bcnt "
"U 'TClass' - 10 - clss","SL",(void*)NULL,1);
   G__memfunc_setup("CheckByteCount",1403,G__G__XML_136_4_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"h - 'UInt_t' 0 - startpos h - 'UInt_t' 0 - bcnt "
"C - - 10 - classname","SL",(void*)NULL,1);
   G__memfunc_setup("SetByteCount",1225,G__G__XML_136_5_1,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - cntpos g - 'Bool_t' 0 kFALSE packInVersion","SL",(void*)NULL,1);
   G__memfunc_setup("ReadVersion",1122,G__G__XML_136_6_1,115,-1,G__defined_typename("Version_t"),0,3,1,1,0,
"H - 'UInt_t' 0 0 start H - 'UInt_t' 0 0 bcnt "
"U 'TClass' - 10 0 cl","SL",(void*)NULL,1);
   G__memfunc_setup("WriteVersion",1265,G__G__XML_136_7_1,104,-1,G__defined_typename("UInt_t"),0,2,1,1,0,
"U 'TClass' - 10 - cl g - 'Bool_t' 0 kFALSE useBcnt","SL",(void*)NULL,1);
   G__memfunc_setup("ReadObjectAny",1275,G__G__XML_136_8_1,89,-1,-1,0,1,1,1,0,"U 'TClass' - 10 - clCast",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SkipObjectAny",1302,G__G__XML_136_9_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IncrementLevel",1437,G__G__XML_136_0_2,121,-1,-1,0,1,1,1,0,"U 'TStreamerInfo' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetStreamerElementNumber",2466,G__G__XML_136_1_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DecrementLevel",1423,G__G__XML_136_2_2,121,-1,-1,0,1,1,1,0,"U 'TStreamerInfo' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteObject",1122,G__G__XML_136_3_2,121,-1,-1,0,1,1,1,0,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadDouble32",1084,G__G__XML_136_4_2,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - d U 'TStreamerElement' - 0 0 ele",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteDouble32",1227,G__G__XML_136_5_2,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - d U 'TStreamerElement' - 0 0 ele",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_6_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"G - 'Bool_t' 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_7_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - 'Char_t' 1 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_8_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"B - 'UChar_t' 1 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_9_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"S - 'Short_t' 1 - h",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_0_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"R - 'UShort_t' 1 - h",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_1_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"I - 'Int_t' 1 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_2_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"H - 'UInt_t' 1 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_3_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"L - 'Long_t' 1 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_4_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"K - 'ULong_t' 1 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_5_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"N - 'Long64_t' 1 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_6_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"M - 'ULong64_t' 1 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_7_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"F - 'Float_t' 1 - f",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArray",891,G__G__XML_136_8_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"D - 'Double_t' 1 - d",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadArrayDouble32",1595,G__G__XML_136_9_3,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"D - 'Double_t' 1 - d U 'TStreamerElement' - 0 0 ele",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_0_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"G - 'Bool_t' 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_1_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - 'Char_t' 0 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_2_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"B - 'UChar_t' 0 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_3_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"S - 'Short_t' 0 - h",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_4_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"R - 'UShort_t' 0 - h",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_5_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"I - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_6_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"H - 'UInt_t' 0 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_7_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"L - 'Long_t' 0 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_8_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"K - 'ULong_t' 0 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_9_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"N - 'Long64_t' 0 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_0_5,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"M - 'ULong64_t' 0 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_1_5,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"F - 'Float_t' 0 - f",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArray",1507,G__G__XML_136_2_5,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"D - 'Double_t' 0 - d",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadStaticArrayDouble32",2211,G__G__XML_136_3_5,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"D - 'Double_t' 0 - d U 'TStreamerElement' - 0 0 ele",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_4_5,121,-1,-1,0,2,1,1,0,
"G - 'Bool_t' 0 - b i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_5_5,121,-1,-1,0,2,1,1,0,
"C - 'Char_t' 0 - c i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_6_5,121,-1,-1,0,2,1,1,0,
"B - 'UChar_t' 0 - c i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_7_5,121,-1,-1,0,2,1,1,0,
"S - 'Short_t' 0 - h i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_8_5,121,-1,-1,0,2,1,1,0,
"R - 'UShort_t' 0 - h i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_9_5,121,-1,-1,0,2,1,1,0,
"I - 'Int_t' 0 - i i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_0_6,121,-1,-1,0,2,1,1,0,
"H - 'UInt_t' 0 - i i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_1_6,121,-1,-1,0,2,1,1,0,
"L - 'Long_t' 0 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_2_6,121,-1,-1,0,2,1,1,0,
"K - 'ULong_t' 0 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_3_6,121,-1,-1,0,2,1,1,0,
"N - 'Long64_t' 0 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_4_6,121,-1,-1,0,2,1,1,0,
"M - 'ULong64_t' 0 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_5_6,121,-1,-1,0,2,1,1,0,
"F - 'Float_t' 0 - f i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_6_6,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - d i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArrayDouble32",1993,G__G__XML_136_7_6,121,-1,-1,0,3,1,1,0,
"D - 'Double_t' 0 - d i - 'Int_t' 0 - n "
"U 'TStreamerElement' - 0 0 ele",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_8_6,121,-1,-1,0,2,1,1,0,
"G - 'Bool_t' 10 - b i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_9_6,121,-1,-1,0,2,1,1,0,
"C - 'Char_t' 10 - c i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_0_7,121,-1,-1,0,2,1,1,0,
"B - 'UChar_t' 10 - c i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_1_7,121,-1,-1,0,2,1,1,0,
"S - 'Short_t' 10 - h i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_2_7,121,-1,-1,0,2,1,1,0,
"R - 'UShort_t' 10 - h i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_3_7,121,-1,-1,0,2,1,1,0,
"I - 'Int_t' 10 - i i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_4_7,121,-1,-1,0,2,1,1,0,
"H - 'UInt_t' 10 - i i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_5_7,121,-1,-1,0,2,1,1,0,
"L - 'Long_t' 10 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_6_7,121,-1,-1,0,2,1,1,0,
"K - 'ULong_t' 10 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_7_7,121,-1,-1,0,2,1,1,0,
"N - 'Long64_t' 10 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_8_7,121,-1,-1,0,2,1,1,0,
"M - 'ULong64_t' 10 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_9_7,121,-1,-1,0,2,1,1,0,
"F - 'Float_t' 10 - f i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArray",1034,G__G__XML_136_0_8,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 10 - d i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteArrayDouble32",1738,G__G__XML_136_1_8,121,-1,-1,0,3,1,1,0,
"D - 'Double_t' 10 - d i - 'Int_t' 0 - n "
"U 'TStreamerElement' - 0 0 ele",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_2_8,121,-1,-1,0,4,1,1,0,
"Y - - 0 - start U 'TClass' - 10 - cl "
"i - 'Int_t' 0 1 n U 'TMemberStreamer' - 0 0 s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFastArray",1289,G__G__XML_136_3_8,121,-1,-1,0,5,1,1,0,
"Y - - 2 - startp U 'TClass' - 10 - cl "
"i - 'Int_t' 0 1 n g - 'Bool_t' 0 kFALSE isPreAlloc "
"U 'TMemberStreamer' - 0 0 s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_4_8,121,-1,-1,0,2,1,1,0,
"G - 'Bool_t' 10 - b i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_5_8,121,-1,-1,0,2,1,1,0,
"C - 'Char_t' 10 - c i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_6_8,121,-1,-1,0,2,1,1,0,
"B - 'UChar_t' 10 - c i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_7_8,121,-1,-1,0,2,1,1,0,
"S - 'Short_t' 10 - h i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_8_8,121,-1,-1,0,2,1,1,0,
"R - 'UShort_t' 10 - h i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_9_8,121,-1,-1,0,2,1,1,0,
"I - 'Int_t' 10 - i i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_0_9,121,-1,-1,0,2,1,1,0,
"H - 'UInt_t' 10 - i i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_1_9,121,-1,-1,0,2,1,1,0,
"L - 'Long_t' 10 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_2_9,121,-1,-1,0,2,1,1,0,
"K - 'ULong_t' 10 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_3_9,121,-1,-1,0,2,1,1,0,
"N - 'Long64_t' 10 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_4_9,121,-1,-1,0,2,1,1,0,
"M - 'ULong64_t' 10 - l i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_5_9,121,-1,-1,0,2,1,1,0,
"F - 'Float_t' 10 - f i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_6_9,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 10 - d i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArrayDouble32",2136,G__G__XML_136_7_9,121,-1,-1,0,3,1,1,0,
"D - 'Double_t' 10 - d i - 'Int_t' 0 - n "
"U 'TStreamerElement' - 0 0 ele",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_8_9,121,-1,-1,0,4,1,1,0,
"Y - - 0 - start U 'TClass' - 10 - cl "
"i - 'Int_t' 0 1 n U 'TMemberStreamer' - 0 0 s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFastArray",1432,G__G__XML_136_9_9,105,-1,G__defined_typename("Int_t"),0,5,1,1,0,
"Y - - 2 - startp U 'TClass' - 10 - cl "
"i - 'Int_t' 0 1 n g - 'Bool_t' 0 kFALSE isPreAlloc "
"U 'TMemberStreamer' - 0 0 s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamObject",1219,G__G__XML_136_0_10,121,-1,-1,0,2,1,1,0,
"Y - - 0 - obj u 'type_info' - 11 - typeinfo",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamObject",1219,G__G__XML_136_1_10,121,-1,-1,0,2,1,1,0,
"Y - - 0 - obj C - - 10 - className",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamObject",1219,G__G__XML_136_2_10,121,-1,-1,0,2,1,1,0,
"Y - - 0 - obj U 'TClass' - 10 - cl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_3_10,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"g - 'Bool_t' 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_4_10,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"c - 'Char_t' 1 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_5_10,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"b - 'UChar_t' 1 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_6_10,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"s - 'Short_t' 1 - h",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_7_10,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"r - 'UShort_t' 1 - h",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_8_10,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"i - 'Int_t' 1 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_9_10,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"h - 'UInt_t' 1 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_0_11,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"l - 'Long_t' 1 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_1_11,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"k - 'ULong_t' 1 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_2_11,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"n - 'Long64_t' 1 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_3_11,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"m - 'ULong64_t' 1 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_4_11,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"f - 'Float_t' 1 - f",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_5_11,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"d - 'Double_t' 1 - d",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator>>",1000,G__G__XML_136_6_11,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"C - 'Char_t' 0 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_7_11,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"g - 'Bool_t' 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_8_11,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"c - 'Char_t' 0 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_9_11,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"b - 'UChar_t' 0 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_0_12,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"s - 'Short_t' 0 - h",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_1_12,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"r - 'UShort_t' 0 - h",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_2_12,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_3_12,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"h - 'UInt_t' 0 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_4_12,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"l - 'Long_t' 0 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_5_12,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"k - 'ULong_t' 0 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_6_12,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"n - 'Long64_t' 0 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_7_12,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"m - 'ULong64_t' 0 - l",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_8_12,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"f - 'Float_t' 0 - f",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_9_12,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"d - 'Double_t' 0 - d",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator<<",996,G__G__XML_136_0_13,117,G__get_linked_tagnum(&G__G__XMLLN_TBuffer),-1,1,1,1,1,0,"C - 'Char_t' 10 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TXMLBuffer",927,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer),-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("WriteObject",1122,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"Y - - 10 - actualObjStart U 'TClass' - 10 - actualClass",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("XmlFile",689,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__XMLLN_TXMLFile),-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PushStack",918,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__XMLLN_TXMLStackObj),-1,0,2,1,2,0,
"Y - 'xmlNodePointer' 0 - current g - 'Bool_t' 0 kFALSE simple",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PopStack",805,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__XMLLN_TXMLStackObj),-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ShiftStack",1012,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"C - - 10 0 info",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("StackNode",892,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Stack",502,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__XMLLN_TXMLStackObj),-1,0,1,1,2,0,"i - 'Int_t' 0 0 depth",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("VerifyNode",1019,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,3,1,2,0,
"Y - 'xmlNodePointer' 0 - node C - - 10 - name "
"C - - 10 0 errinfo",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("VerifyStackNode",1521,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,2,1,2,0,
"C - - 10 - name C - - 10 0 errinfo",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("VerifyAttr",1040,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,4,1,2,0,
"Y - 'xmlNodePointer' 0 - node C - - 10 - name "
"C - - 10 - value C - - 10 0 errinfo",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("VerifyStackAttr",1542,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,3,1,2,0,
"C - - 10 - name C - - 10 - value "
"C - - 10 0 errinfo",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ProcessPointer",1472,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,2,1,2,0,
"Y - - 10 - ptr Y - 'xmlNodePointer' 0 - node",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RegisterPointer",1574,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"Y - - 10 - ptr Y - 'xmlNodePointer' 0 - node",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ExtractPointer",1468,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,3,1,2,0,
"Y - 'xmlNodePointer' 0 - node Y - - 1 - ptr "
"U 'TClass' - 1 - cl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ExtractReference",1642,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"Y - 'xmlNodePointer' 0 - node Y - - 10 - ptr "
"U 'TClass' - 10 - cl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateItemNode",1385,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("VerifyItemNode",1418,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,2,1,2,0,
"C - - 10 - name C - - 10 0 errinfo",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateElemNode",1373,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"U 'TStreamerElement' - 10 - elem i - 'Int_t' 0 -1 number",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("VerifyElemNode",1406,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,2,1,2,0,
"U 'TStreamerElement' - 10 - elem i - 'Int_t' 0 -1 number",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PerformPreProcessing",2079,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"U 'TStreamerElement' - 10 - elem Y - 'xmlNodePointer' 0 - elemnode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PerformPostProcessing",2206,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"c - 'Char_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"s - 'Short_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"i - 'Int_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"l - 'Long_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"n - 'Long64_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"f - 'Float_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"d - 'Double_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"g - 'Bool_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"b - 'UChar_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"r - 'UShort_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"h - 'UInt_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"k - 'ULong_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteBasic",1310,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,1,1,2,0,"m - 'ULong64_t' 0 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteValue",1337,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,2,1,2,0,
"C - - 10 - value C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"c - 'Char_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"s - 'Short_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"i - 'Int_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"l - 'Long_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"n - 'Long64_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"f - 'Float_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"d - 'Double_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"g - 'Bool_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"b - 'UChar_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"r - 'UShort_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"h - 'UInt_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"k - 'ULong_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadBasic",1167,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"m - 'ULong64_t' 1 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadValue",1194,(G__InterfaceMethod)NULL,67,-1,-1,0,1,1,2,1,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlWriteObject",1427,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,2,1,2,0,
"Y - - 10 - obj U 'TClass' - 10 - objClass",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XmlReadObject",1284,(G__InterfaceMethod)NULL,89,-1,-1,0,2,1,2,0,
"Y - - 0 - obj U 'TClass' - 2 0 cl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BeforeIOoperation",1724,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CheckVersionBuf",1505,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__XML_136_5_18,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TXMLBuffer::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__XML_136_6_18,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLBuffer::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__XML_136_7_18,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TXMLBuffer::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__XML_136_8_18,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TXMLBuffer::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__XML_136_9_18,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__XML_136_0_19,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__XML_136_1_19,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XML_136_2_19,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__XML_136_3_19,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLBuffer::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XML_136_4_19,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLBuffer::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__XML_136_5_19,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLBuffer::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XML_136_6_19,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLBuffer::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TXMLBuffer",1053,G__G__XML_136_7_19,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXMLKey(void) {
   /* TXMLKey */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLKey));
   G__memfunc_setup("TXMLKey",622,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLKey),-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TXMLKey",622,G__G__XML_150_2_0,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLKey),-1,0,3,1,1,0,
"U 'TXMLFile' - 0 - file U 'TObject' - 10 - obj "
"C - - 10 0 name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TXMLKey",622,G__G__XML_150_3_0,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLKey),-1,0,4,1,1,0,
"U 'TXMLFile' - 0 - file Y - - 10 - obj "
"U 'TClass' - 10 - cl C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TXMLKey",622,G__G__XML_150_4_0,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLKey),-1,0,2,1,1,0,
"U 'TXMLFile' - 0 - file Y - 'xmlNodePointer' 0 - keynode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Browse",626,G__G__XML_150_5_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Delete",595,G__G__XML_150_6_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeleteBuffer",1197,G__G__XML_150_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillBuffer",993,G__G__XML_150_8_0,121,-1,-1,0,1,1,1,0,"C - - 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBuffer",890,G__G__XML_150_9_0,67,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSeekKey",977,G__G__XML_150_0_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSeekPdir",1079,G__G__XML_150_1_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Keep",389,G__G__XML_150_2_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Read",380,G__G__XML_150_3_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TObject' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadObj",663,G__G__XML_150_4_1,85,G__get_linked_tagnum(&G__G__XMLLN_TObject),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadObjectAny",1275,G__G__XML_150_5_1,89,-1,-1,0,1,1,1,0,"U 'TClass' - 10 - cl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBuffer",982,G__G__XML_150_6_1,121,-1,-1,0,1,1,1,0,"C - - 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFile",764,G__G__XML_150_7_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBuffer",902,G__G__XML_150_8_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetParent",918,G__G__XML_150_9_1,121,-1,-1,0,1,1,1,0,"U 'TObject' - 10 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sizeof",624,G__G__XML_150_0_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteFile",907,G__G__XML_150_1_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 1 -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("KeyNode",687,G__G__XML_150_2_2,89,-1,G__defined_typename("xmlNodePointer"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetXML",541,G__G__XML_150_3_2,121,-1,-1,0,1,1,1,0,"U 'TXMLEngine' - 0 - xml",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Read",380,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StoreObject",1124,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"Y - - 10 - obj U 'TClass' - 10 - cl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ObjNode",673,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BlockNode",881,(G__InterfaceMethod)NULL,89,-1,G__defined_typename("xmlNodePointer"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__XML_150_8_2,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TXMLKey::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__XML_150_9_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLKey::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__XML_150_0_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TXMLKey::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__XML_150_1_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TXMLKey::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__XML_150_2_3,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__XML_150_3_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__XML_150_4_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XML_150_5_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__XML_150_6_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLKey::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XML_150_7_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLKey::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__XML_150_8_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLKey::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XML_150_9_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLKey::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TXMLKey",622,G__G__XML_150_0_4,(int)('i'),G__get_linked_tagnum(&G__G__XMLLN_TXMLKey),-1,0,1,1,1,0,"u 'TXMLKey' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TXMLKey",748,G__G__XML_150_1_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__XML_150_2_4,(int)('u'),G__get_linked_tagnum(&G__G__XMLLN_TXMLKey),-1,1,1,1,1,0,"u 'TXMLKey' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXMLPlayer(void) {
   /* TXMLPlayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLPlayer));
   G__memfunc_setup("TXMLPlayer",946,G__G__XML_153_1_0,105,G__get_linked_tagnum(&G__G__XMLLN_TXMLPlayer),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ProduceCode",1101,G__G__XML_153_2_0,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"U 'TList' - 0 - cllist C - - 10 - filename",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetStreamerName",1508,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__XMLLN_TString),-1,0,1,1,2,0,"U 'TClass' - 0 - cl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ElementGetter",1333,(G__InterfaceMethod)NULL,67,-1,-1,0,3,1,2,1,
"U 'TClass' - 0 - cl C - - 10 - membername "
"i - - 0 0 specials",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ElementSetter",1345,(G__InterfaceMethod)NULL,67,-1,-1,0,3,1,2,1,
"U 'TClass' - 0 - cl C - - 10 - membername "
"C - - 0 - endch",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMemberTypeName",1691,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__XMLLN_TString),-1,0,1,1,2,0,"U 'TDataMember' - 0 - member",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBasicTypeName",1573,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__XMLLN_TString),-1,0,1,1,2,0,"U 'TStreamerElement' - 0 - el",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBasicTypeReaderMethodName",2777,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__XMLLN_TString),-1,0,2,1,2,0,
"i - 'Int_t' 0 - type C - - 10 - realname",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ProduceStreamerSource",2182,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - fs U 'TClass' - 0 - cl "
"U 'TList' - 0 - cllist",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadSTLarg",937,(G__InterfaceMethod)NULL,121,-1,-1,0,7,1,2,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - fs u 'TString' - 1 - argname "
"i - - 0 - argtyp g - - 0 - isargptr "
"U 'TClass' - 0 - argcl u 'TString' - 1 - tname "
"u 'TString' - 1 - ifcond",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("WriteSTLarg",1080,(G__InterfaceMethod)NULL,121,-1,-1,0,5,1,2,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - fs C - - 10 - accname "
"i - - 0 - argtyp g - - 0 - isargptr "
"U 'TClass' - 0 - argcl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ProduceSTLstreamer",1832,(G__InterfaceMethod)NULL,103,-1,-1,0,4,1,2,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - fs U 'TClass' - 0 - cl "
"U 'TStreamerSTL' - 0 - el g - 'Bool_t' 0 - isWriting",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__XML_153_3_1,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TXMLPlayer::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__XML_153_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLPlayer::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__XML_153_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TXMLPlayer::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__XML_153_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TXMLPlayer::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__XML_153_7_1,85,G__get_linked_tagnum(&G__G__XMLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__XML_153_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__XML_153_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XML_153_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__XML_153_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLPlayer::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XML_153_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLPlayer::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__XML_153_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLPlayer::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XML_153_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLPlayer::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TXMLPlayer",946,G__G__XML_153_5_2,(int)('i'),G__get_linked_tagnum(&G__G__XMLLN_TXMLPlayer),-1,0,1,1,1,0,"u 'TXMLPlayer' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TXMLPlayer",1072,G__G__XML_153_6_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__XML_153_7_2,(int)('u'),G__get_linked_tagnum(&G__G__XMLLN_TXMLPlayer),-1,1,1,1,1,0,"u 'TXMLPlayer' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__XML() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__XML() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__XML() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__XMLLN_type_info = { "type_info" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TMemberStreamer = { "TMemberStreamer" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TStreamerInfo = { "TStreamerInfo" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TStreamerElement = { "TStreamerElement" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TExMap = { "TExMap" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TBuffercLcLEMode = { "TBuffer::EMode" , 101 , -1 };
G__linked_taginfo G__G__XMLLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TKey = { "TKey" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TXMLSetup = { "TXMLSetup" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TXMLSetupcLcLEXMLLayout = { "TXMLSetup::EXMLLayout" , 101 , -1 };
G__linked_taginfo G__G__XMLLN_TXMLInputStream = { "TXMLInputStream" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TXMLOutputStream = { "TXMLOutputStream" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TXMLEngine = { "TXMLEngine" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TXMLFile = { "TXMLFile" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TXMLStackObj = { "TXMLStackObj" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TXMLBuffer = { "TXMLBuffer" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TFilecLcLERelativeTo = { "TFile::ERelativeTo" , 101 , -1 };
G__linked_taginfo G__G__XMLLN_TXMLKey = { "TXMLKey" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TStreamerSTL = { "TStreamerSTL" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TDataMember = { "TDataMember" , 99 , -1 };
G__linked_taginfo G__G__XMLLN_TXMLPlayer = { "TXMLPlayer" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__XML() {
  G__G__XMLLN_type_info.tagnum = -1 ;
  G__G__XMLLN_TClass.tagnum = -1 ;
  G__G__XMLLN_TBuffer.tagnum = -1 ;
  G__G__XMLLN_TMemberInspector.tagnum = -1 ;
  G__G__XMLLN_TObject.tagnum = -1 ;
  G__G__XMLLN_TNamed.tagnum = -1 ;
  G__G__XMLLN_TMemberStreamer.tagnum = -1 ;
  G__G__XMLLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__XMLLN_TList.tagnum = -1 ;
  G__G__XMLLN_TBrowser.tagnum = -1 ;
  G__G__XMLLN_TObjArray.tagnum = -1 ;
  G__G__XMLLN_TStreamerInfo.tagnum = -1 ;
  G__G__XMLLN_TStreamerElement.tagnum = -1 ;
  G__G__XMLLN_TExMap.tagnum = -1 ;
  G__G__XMLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__XMLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__XMLLN_TBuffercLcLEMode.tagnum = -1 ;
  G__G__XMLLN_TString.tagnum = -1 ;
  G__G__XMLLN_TFile.tagnum = -1 ;
  G__G__XMLLN_TDirectory.tagnum = -1 ;
  G__G__XMLLN_TKey.tagnum = -1 ;
  G__G__XMLLN_TXMLSetup.tagnum = -1 ;
  G__G__XMLLN_TXMLSetupcLcLEXMLLayout.tagnum = -1 ;
  G__G__XMLLN_TXMLInputStream.tagnum = -1 ;
  G__G__XMLLN_TXMLOutputStream.tagnum = -1 ;
  G__G__XMLLN_TXMLEngine.tagnum = -1 ;
  G__G__XMLLN_TXMLFile.tagnum = -1 ;
  G__G__XMLLN_TXMLStackObj.tagnum = -1 ;
  G__G__XMLLN_TXMLBuffer.tagnum = -1 ;
  G__G__XMLLN_TFilecLcLERelativeTo.tagnum = -1 ;
  G__G__XMLLN_TXMLKey.tagnum = -1 ;
  G__G__XMLLN_TStreamerSTL.tagnum = -1 ;
  G__G__XMLLN_TDataMember.tagnum = -1 ;
  G__G__XMLLN_TXMLPlayer.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__XML() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__XMLLN_type_info);
   G__get_linked_tagnum(&G__G__XMLLN_TClass);
   G__get_linked_tagnum(&G__G__XMLLN_TBuffer);
   G__get_linked_tagnum(&G__G__XMLLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__XMLLN_TObject);
   G__get_linked_tagnum(&G__G__XMLLN_TNamed);
   G__get_linked_tagnum(&G__G__XMLLN_TMemberStreamer);
   G__get_linked_tagnum(&G__G__XMLLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__G__XMLLN_TList);
   G__get_linked_tagnum(&G__G__XMLLN_TBrowser);
   G__get_linked_tagnum(&G__G__XMLLN_TObjArray);
   G__get_linked_tagnum(&G__G__XMLLN_TStreamerInfo);
   G__get_linked_tagnum(&G__G__XMLLN_TStreamerElement);
   G__get_linked_tagnum(&G__G__XMLLN_TExMap);
   G__get_linked_tagnum(&G__G__XMLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__XMLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__XMLLN_TBuffercLcLEMode);
   G__get_linked_tagnum(&G__G__XMLLN_TString);
   G__get_linked_tagnum(&G__G__XMLLN_TFile);
   G__get_linked_tagnum(&G__G__XMLLN_TDirectory);
   G__get_linked_tagnum(&G__G__XMLLN_TKey);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLSetup),sizeof(TXMLSetup),-1,34560,"settings to be stored in XML files",G__setup_memvarTXMLSetup,G__setup_memfuncTXMLSetup);
   G__get_linked_tagnum(&G__G__XMLLN_TXMLSetupcLcLEXMLLayout);
   G__get_linked_tagnum(&G__G__XMLLN_TXMLInputStream);
   G__get_linked_tagnum(&G__G__XMLLN_TXMLOutputStream);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLEngine),sizeof(TXMLEngine),-1,29952,(char*)NULL,G__setup_memvarTXMLEngine,G__setup_memfuncTXMLEngine);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLFile),sizeof(TXMLFile),-1,64768,"ROOT file in XML format",G__setup_memvarTXMLFile,G__setup_memfuncTXMLFile);
   G__get_linked_tagnum(&G__G__XMLLN_TXMLStackObj);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLBuffer),sizeof(TXMLBuffer),-1,62720,"a specialized TBuffer to read/write to XML files",G__setup_memvarTXMLBuffer,G__setup_memfuncTXMLBuffer);
   G__get_linked_tagnum(&G__G__XMLLN_TFilecLcLERelativeTo);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLKey),sizeof(TXMLKey),-1,62720,"a special TKey for XML files      ",G__setup_memvarTXMLKey,G__setup_memfuncTXMLKey);
   G__get_linked_tagnum(&G__G__XMLLN_TStreamerSTL);
   G__get_linked_tagnum(&G__G__XMLLN_TDataMember);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLLN_TXMLPlayer),sizeof(TXMLPlayer),-1,29952,"Generation of external xml streamers",G__setup_memvarTXMLPlayer,G__setup_memfuncTXMLPlayer);
}
extern "C" void G__cpp_setupG__XML(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__XML()");
  G__set_cpp_environmentG__XML();
  G__cpp_setup_tagtableG__XML();

  G__cpp_setup_inheritanceG__XML();

  G__cpp_setup_typetableG__XML();

  G__cpp_setup_memvarG__XML();

  G__cpp_setup_memfuncG__XML();
  G__cpp_setup_globalG__XML();
  G__cpp_setup_funcG__XML();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__XML();
  return;
}
class G__cpp_setup_initG__XML {
  public:
    G__cpp_setup_initG__XML() { G__add_setup_func("G__XML",(G__incsetup)(&G__cpp_setupG__XML)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__XML() { G__remove_setup_func("G__XML"); }
};
G__cpp_setup_initG__XML G__cpp_setup_initializerG__XML;

