//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:31:59 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__XMLParser.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TXMLParser_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TXMLParser_IsA(const void*);
   static void delete_TXMLParser(void *p);
   static void deleteArray_TXMLParser(void *p);
   static void destruct_TXMLParser(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TXMLParser*)
   {
      ::TXMLParser *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TXMLParser", ::TXMLParser::Class_Version(), "xmlparser/inc/TXMLParser.h", 46,
                  typeid(::TXMLParser), DefineBehavior(ptr, ptr),
                  &::TXMLParser::Dictionary, &TXMLParser_IsA, 0,
                  sizeof(::TXMLParser) );
      instance.SetDelete(&delete_TXMLParser);
      instance.SetDeleteArray(&deleteArray_TXMLParser);
      instance.SetDestructor(&destruct_TXMLParser);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TXMLParser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TXMLAttr_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TXMLAttr_IsA(const void*);
   static void delete_TXMLAttr(void *p);
   static void deleteArray_TXMLAttr(void *p);
   static void destruct_TXMLAttr(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TXMLAttr*)
   {
      ::TXMLAttr *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TXMLAttr", ::TXMLAttr::Class_Version(), "xmlparser/inc/TXMLParser.h", 85,
                  typeid(::TXMLAttr), DefineBehavior(ptr, ptr),
                  &::TXMLAttr::Dictionary, &TXMLAttr_IsA, 0,
                  sizeof(::TXMLAttr) );
      instance.SetDelete(&delete_TXMLAttr);
      instance.SetDeleteArray(&deleteArray_TXMLAttr);
      instance.SetDestructor(&destruct_TXMLAttr);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TXMLAttr*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSAXParser_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSAXParser_IsA(const void*);
   static void *new_TSAXParser(void *p = 0);
   static void *newArray_TSAXParser(Long_t size);
   static void delete_TSAXParser(void *p);
   static void deleteArray_TSAXParser(void *p);
   static void destruct_TSAXParser(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSAXParser*)
   {
      ::TSAXParser *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSAXParser", ::TSAXParser::Class_Version(), "xmlparser/inc/TSAXParser.h", 44,
                  typeid(::TSAXParser), DefineBehavior(ptr, ptr),
                  &::TSAXParser::Dictionary, &TSAXParser_IsA, 0,
                  sizeof(::TSAXParser) );
      instance.SetNew(&new_TSAXParser);
      instance.SetNewArray(&newArray_TSAXParser);
      instance.SetDelete(&delete_TSAXParser);
      instance.SetDeleteArray(&deleteArray_TSAXParser);
      instance.SetDestructor(&destruct_TSAXParser);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSAXParser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TXMLParser::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLParser::Class_Name()
{
   return "TXMLParser";
}

//______________________________________________________________________________
const char *TXMLParser::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLParser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLParser::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLParser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLParser::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLParser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLParser::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLParser*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXMLAttr::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXMLAttr::Class_Name()
{
   return "TXMLAttr";
}

//______________________________________________________________________________
const char *TXMLAttr::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLAttr*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXMLAttr::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TXMLAttr*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXMLAttr::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLAttr*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXMLAttr::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TXMLAttr*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSAXParser::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSAXParser::Class_Name()
{
   return "TSAXParser";
}

//______________________________________________________________________________
const char *TSAXParser::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSAXParser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSAXParser::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSAXParser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSAXParser::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSAXParser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSAXParser::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSAXParser*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TXMLParser::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLParser.

   TObject::Streamer(R__b);
   TQObject::Streamer(R__b);
}

//______________________________________________________________________________
void TXMLParser::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLParser.

      TClass *R__cl = ::TXMLParser::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fContext", &fContext);
      R__insp.Inspect(R__cl, R__parent, "fValidate", &fValidate);
      R__insp.Inspect(R__cl, R__parent, "fStopError", &fStopError);
      R__insp.Inspect(R__cl, R__parent, "fValidateError", &fValidateError);
      fValidateError.ShowMembers(R__insp, strcat(R__parent,"fValidateError.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fValidateWarning", &fValidateWarning);
      fValidateWarning.ShowMembers(R__insp, strcat(R__parent,"fValidateWarning.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fParseCode", &fParseCode);
      TObject::ShowMembers(R__insp, R__parent);
      TQObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TXMLParser_IsA(const void *obj) {
      return ((::TXMLParser*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TXMLParser(void *p) {
      delete ((::TXMLParser*)p);
   }
   static void deleteArray_TXMLParser(void *p) {
      delete [] ((::TXMLParser*)p);
   }
   static void destruct_TXMLParser(void *p) {
      typedef ::TXMLParser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLParser

//______________________________________________________________________________
void TSAXParser::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSAXParser.

   TXMLParser::Streamer(R__b);
}

//______________________________________________________________________________
void TSAXParser::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSAXParser.

      TClass *R__cl = ::TSAXParser::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSAXHandler", &fSAXHandler);
      TXMLParser::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSAXParser_IsA(const void *obj) {
      return ((::TSAXParser*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TSAXParser(void *p) {
      return  p ? new(p) ::TSAXParser : new ::TSAXParser;
   }
   static void *newArray_TSAXParser(Long_t size) {
      return new ::TSAXParser[size];
   }
   // Wrapper around operator delete
   static void delete_TSAXParser(void *p) {
      delete ((::TSAXParser*)p);
   }
   static void deleteArray_TSAXParser(void *p) {
      delete [] ((::TSAXParser*)p);
   }
   static void destruct_TSAXParser(void *p) {
      typedef ::TSAXParser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSAXParser

//______________________________________________________________________________
void TXMLAttr::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXMLAttr.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TXMLAttr::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXMLAttr.

      TClass *R__cl = ::TXMLAttr::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fKey", &fKey);
      R__insp.Inspect(R__cl, R__parent, "*fValue", &fValue);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TXMLAttr_IsA(const void *obj) {
      return ((::TXMLAttr*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TXMLAttr(void *p) {
      delete ((::TXMLAttr*)p);
   }
   static void deleteArray_TXMLAttr(void *p) {
      delete [] ((::TXMLAttr*)p);
   }
   static void destruct_TXMLAttr(void *p) {
      typedef ::TXMLAttr current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXMLAttr

/********************************************************
* xmlparser/src/G__XMLParser.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__XMLParser();

extern "C" void G__set_cpp_environmentG__XMLParser() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("xmlparser/inc/TXMLParser.h");
  G__add_compiledheader("xmlparser/inc/TSAXParser.h");
  G__cpp_reset_tagtableG__XMLParser();
}
class G__xmlparserdIsrcdIG__XMLParserdOcxx_tag {};

void* operator new(size_t size,G__xmlparserdIsrcdIG__XMLParserdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__xmlparserdIsrcdIG__XMLParserdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_xmlparserdIsrcdIG__XMLParserdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__XMLParser() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TXMLParser */
static int G__G__XMLParser_164_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXMLParser*)(G__getstructoffset()))->SetValidate((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLParser*)(G__getstructoffset()))->SetValidate();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TXMLParser*)(G__getstructoffset()))->GetValidate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLParser*)(G__getstructoffset()))->ParseFile((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXMLParser*)(G__getstructoffset()))->ParseBuffer((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TXMLParser*)(G__getstructoffset()))->GetParseCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXMLParser*)(G__getstructoffset()))->SetStopOnError((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXMLParser*)(G__getstructoffset()))->SetStopOnError();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TXMLParser*)(G__getstructoffset()))->GetStopOnError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TXMLParser*)(G__getstructoffset()))->GetValidateError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TXMLParser*)(G__getstructoffset()))->GetValidateWarning());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TXMLParser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLParser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TXMLParser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TXMLParser::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TXMLParser*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLParser*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLParser*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLParser*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLParser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLParser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLParser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_164_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLParser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLParser G__TTXMLParser;
static int G__G__XMLParser_164_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TXMLParser *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TXMLParser *)((G__getstructoffset())+sizeof(TXMLParser)*i);
   else  delete (TXMLParser *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__XMLParser_164_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLParser *dest = (TXMLParser*)(G__getstructoffset());
   *dest = (*(TXMLParser*)libp->para[0].ref);
   const TXMLParser& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXMLAttr */
static int G__G__XMLParser_165_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXMLAttr *p=NULL;
      p = new TXMLAttr((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TXMLAttr*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TXMLAttr*)(G__getstructoffset()))->Key());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TXMLAttr*)(G__getstructoffset()))->Value());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TXMLAttr::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLAttr::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TXMLAttr::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TXMLAttr::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TXMLAttr*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLAttr*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLAttr*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXMLAttr*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLAttr::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLAttr::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXMLAttr::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_165_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXMLAttr::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__XMLParser_165_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TXMLAttr *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TXMLAttr(*(TXMLAttr*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXMLAttr G__TTXMLAttr;
static int G__G__XMLParser_165_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TXMLAttr *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TXMLAttr *)((G__getstructoffset())+sizeof(TXMLAttr)*i);
   else  delete (TXMLAttr *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSAXParser */
static int G__G__XMLParser_168_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSAXParser *p=NULL;
   if(G__getaryconstruct()) p=new TSAXParser[G__getaryconstruct()];
   else                    p=new TSAXParser;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSAXParser*)(G__getstructoffset()))->ParseFile((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSAXParser*)(G__getstructoffset()))->ParseBuffer((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->OnStartDocument();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->OnEndDocument();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->OnStartElement((const char*)G__int(libp->para[0]),(const TList*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->OnEndElement((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->OnCharacters((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->OnComment((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->OnWarning((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSAXParser*)(G__getstructoffset()))->OnError((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSAXParser*)(G__getstructoffset()))->OnFatalError((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->OnCdataBlock((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->ConnectToHandler((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSAXParser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSAXParser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSAXParser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSAXParser::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSAXParser*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSAXParser*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSAXParser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSAXParser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSAXParser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__XMLParser_168_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSAXParser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__XMLParser_168_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TSAXParser *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TSAXParser(*(TSAXParser*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSAXParser G__TTSAXParser;
static int G__G__XMLParser_168_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSAXParser *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSAXParser *)((G__getstructoffset())+sizeof(TSAXParser)*i);
   else  delete (TSAXParser *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__XMLParser_168_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSAXParser *dest = (TSAXParser*)(G__getstructoffset());
   *dest = (*(TSAXParser*)libp->para[0].ref);
   const TSAXParser& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TXMLParser */

/* TXMLAttr */

/* TSAXParser */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__XMLParser {
 public:
  G__Sizep2memfuncG__XMLParser() {p=&G__Sizep2memfuncG__XMLParser::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__XMLParser::*p)();
};

size_t G__get_sizep2memfuncG__XMLParser()
{
  G__Sizep2memfuncG__XMLParser a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__XMLParser() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser))) {
     TXMLParser *G__Lderived;
     G__Lderived=(TXMLParser*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser),G__get_linked_tagnum(&G__G__XMLParserLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser),G__get_linked_tagnum(&G__G__XMLParserLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr))) {
     TXMLAttr *G__Lderived;
     G__Lderived=(TXMLAttr*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr),G__get_linked_tagnum(&G__G__XMLParserLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser))) {
     TSAXParser *G__Lderived;
     G__Lderived=(TSAXParser*)0x1000;
     {
       TXMLParser *G__Lpbase=(TXMLParser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser),G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser),G__get_linked_tagnum(&G__G__XMLParserLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser),G__get_linked_tagnum(&G__G__XMLParserLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__XMLParser() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__XMLParserLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__XMLParserLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__XMLParserLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__XMLParserLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__XMLParserLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TXMLParser */
static void G__setup_memvarTXMLParser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser));
   { TXMLParser *p; p=(TXMLParser*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN__xmlParserCtxt),-1,-1,2,"fContext=",0,"parse the xml file");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fValidate=",0,"to validate the parse context");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fStopError=",0,"stop when parse error occurs");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TString),-1,-1,2,"fValidateError=",0,"parse error");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TString),-1,-1,2,"fValidateWarning=",0,"parse warning");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fParseCode=",0,"to keep track of the errorcodes");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXMLAttr */
static void G__setup_memvarTXMLAttr(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr));
   { TXMLAttr *p; p=(TXMLAttr*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,67,0,1,-1,-1,-1,4,"fKey=",0,"XML attribute key");
   G__memvar_setup((void*)NULL,67,0,1,-1,-1,-1,4,"fValue=",0,"XML attribute value");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSAXParser */
static void G__setup_memvarTSAXParser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser));
   { TSAXParser *p; p=(TSAXParser*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN__xmlSAXHandler),-1,-1,4,"fSAXHandler=",0,"libxml2 SAX handler");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__XMLParser() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTXMLParser(void) {
   /* TXMLParser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser));
   G__memfunc_setup("InitializeContext",1783,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReleaseUnderlying",1762,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnValidateError",1521,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"u 'TString' - 11 - message",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnValidateWarning",1725,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"u 'TString' - 11 - message",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StopParser",1043,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetParseCode",1186,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"i - 'Int_t' 0 - code",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetValidate",1110,G__G__XMLParser_164_8_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE val",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValidate",1098,G__G__XMLParser_164_9_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ParseFile",891,G__G__XMLParser_164_0_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - filename",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ParseBuffer",1109,G__G__XMLParser_164_1_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - contents i - 'Int_t' 0 - len",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetParseCode",1174,G__G__XMLParser_164_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetStopOnError",1433,G__G__XMLParser_164_3_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE stop",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetStopOnError",1421,G__G__XMLParser_164_4_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetValidateError",1620,G__G__XMLParser_164_5_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetValidateWarning",1824,G__G__XMLParser_164_6_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__XMLParser_164_7_1,85,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TXMLParser::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__XMLParser_164_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLParser::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__XMLParser_164_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TXMLParser::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__XMLParser_164_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TXMLParser::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__XMLParser_164_1_2,85,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__XMLParser_164_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__XMLParser_164_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XMLParser_164_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__XMLParser_164_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLParser::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XMLParser_164_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLParser::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__XMLParser_164_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLParser::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XMLParser_164_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLParser::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TXMLParser",1072,G__G__XMLParser_164_9_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__XMLParser_164_0_3,(int)('u'),G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser),-1,1,1,1,1,0,"u 'TXMLParser' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXMLAttr(void) {
   /* TXMLAttr */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr));
   G__memfunc_setup("TXMLAttr",736,G__G__XMLParser_165_1_0,105,G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr),-1,0,2,1,1,0,
"C - - 10 - key C - - 10 - value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetName",673,G__G__XMLParser_165_2_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Key",297,G__G__XMLParser_165_3_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Value",509,G__G__XMLParser_165_4_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__XMLParser_165_5_0,85,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TXMLAttr::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__XMLParser_165_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLAttr::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__XMLParser_165_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TXMLAttr::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__XMLParser_165_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TXMLAttr::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__XMLParser_165_9_0,85,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__XMLParser_165_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__XMLParser_165_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XMLParser_165_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__XMLParser_165_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLAttr::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XMLParser_165_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLAttr::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__XMLParser_165_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXMLAttr::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XMLParser_165_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXMLAttr::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TXMLAttr",736,G__G__XMLParser_165_7_1,(int)('i'),G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr),-1,0,1,1,1,0,"u 'TXMLAttr' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TXMLAttr",862,G__G__XMLParser_165_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSAXParser(void) {
   /* TSAXParser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser));
   G__memfunc_setup("Parse",507,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TSAXParser",941,G__G__XMLParser_168_2_0,105,G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ParseFile",891,G__G__XMLParser_168_3_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - filename",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ParseBuffer",1109,G__G__XMLParser_168_4_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - contents i - 'Int_t' 0 - len",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnStartDocument",1546,G__G__XMLParser_168_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnEndDocument",1299,G__G__XMLParser_168_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnStartElement",1429,G__G__XMLParser_168_7_0,121,-1,-1,0,2,1,1,0,
"C - - 10 - name U 'TList' - 10 - attr",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnEndElement",1182,G__G__XMLParser_168_8_0,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnCharacters",1213,G__G__XMLParser_168_9_0,121,-1,-1,0,1,1,1,0,"C - - 10 - characters",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnComment",912,G__G__XMLParser_168_0_1,121,-1,-1,0,1,1,1,0,"C - - 10 - text",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnWarning",915,G__G__XMLParser_168_1_1,121,-1,-1,0,1,1,1,0,"C - - 10 - text",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnError",711,G__G__XMLParser_168_2_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - text",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnFatalError",1199,G__G__XMLParser_168_3_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - text",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OnCdataBlock",1157,G__G__XMLParser_168_4_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - text i - 'Int_t' 0 - len",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ConnectToHandler",1611,G__G__XMLParser_168_5_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - handlerName Y - - 0 - handler",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__XMLParser_168_6_1,85,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSAXParser::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__XMLParser_168_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSAXParser::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__XMLParser_168_8_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSAXParser::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__XMLParser_168_9_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSAXParser::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__XMLParser_168_0_2,85,G__get_linked_tagnum(&G__G__XMLParserLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__XMLParser_168_1_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__XMLParser_168_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__XMLParser_168_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__XMLParser_168_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSAXParser::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__XMLParser_168_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSAXParser::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__XMLParser_168_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSAXParser::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__XMLParser_168_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSAXParser::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TSAXParser",941,G__G__XMLParser_168_8_2,(int)('i'),G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser),-1,0,1,1,1,0,"u 'TSAXParser' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TSAXParser",1067,G__G__XMLParser_168_9_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__XMLParser_168_0_3,(int)('u'),G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser),-1,1,1,1,1,0,"u 'TSAXParser' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__XMLParser() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__XMLParser() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__XMLParser() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__XMLParserLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN__xmlParserCtxt = { "_xmlParserCtxt" , 115 , -1 };
G__linked_taginfo G__G__XMLParserLN_TXMLParser = { "TXMLParser" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN_TXMLAttr = { "TXMLAttr" , 99 , -1 };
G__linked_taginfo G__G__XMLParserLN__xmlSAXHandler = { "_xmlSAXHandler" , 115 , -1 };
G__linked_taginfo G__G__XMLParserLN_TSAXParser = { "TSAXParser" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__XMLParser() {
  G__G__XMLParserLN_TClass.tagnum = -1 ;
  G__G__XMLParserLN_TBuffer.tagnum = -1 ;
  G__G__XMLParserLN_TMemberInspector.tagnum = -1 ;
  G__G__XMLParserLN_TObject.tagnum = -1 ;
  G__G__XMLParserLN_TList.tagnum = -1 ;
  G__G__XMLParserLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__XMLParserLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__XMLParserLN_TString.tagnum = -1 ;
  G__G__XMLParserLN_TQObject.tagnum = -1 ;
  G__G__XMLParserLN__xmlParserCtxt.tagnum = -1 ;
  G__G__XMLParserLN_TXMLParser.tagnum = -1 ;
  G__G__XMLParserLN_TXMLAttr.tagnum = -1 ;
  G__G__XMLParserLN__xmlSAXHandler.tagnum = -1 ;
  G__G__XMLParserLN_TSAXParser.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__XMLParser() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__XMLParserLN_TClass);
   G__get_linked_tagnum(&G__G__XMLParserLN_TBuffer);
   G__get_linked_tagnum(&G__G__XMLParserLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__XMLParserLN_TObject);
   G__get_linked_tagnum(&G__G__XMLParserLN_TList);
   G__get_linked_tagnum(&G__G__XMLParserLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__XMLParserLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__XMLParserLN_TString);
   G__get_linked_tagnum(&G__G__XMLParserLN_TQObject);
   G__get_linked_tagnum(&G__G__XMLParserLN__xmlParserCtxt);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLParser),sizeof(TXMLParser),-1,29954,(char*)NULL,G__setup_memvarTXMLParser,G__setup_memfuncTXMLParser);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TXMLAttr),sizeof(TXMLAttr),-1,61440,"XML attribute pair",G__setup_memvarTXMLAttr,G__setup_memfuncTXMLAttr);
   G__get_linked_tagnum(&G__G__XMLParserLN__xmlSAXHandler);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__XMLParserLN_TSAXParser),sizeof(TSAXParser),-1,29952,(char*)NULL,G__setup_memvarTSAXParser,G__setup_memfuncTSAXParser);
}
extern "C" void G__cpp_setupG__XMLParser(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__XMLParser()");
  G__set_cpp_environmentG__XMLParser();
  G__cpp_setup_tagtableG__XMLParser();

  G__cpp_setup_inheritanceG__XMLParser();

  G__cpp_setup_typetableG__XMLParser();

  G__cpp_setup_memvarG__XMLParser();

  G__cpp_setup_memfuncG__XMLParser();
  G__cpp_setup_globalG__XMLParser();
  G__cpp_setup_funcG__XMLParser();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__XMLParser();
  return;
}
class G__cpp_setup_initG__XMLParser {
  public:
    G__cpp_setup_initG__XMLParser() { G__add_setup_func("G__XMLParser",(G__incsetup)(&G__cpp_setupG__XMLParser)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__XMLParser() { G__remove_setup_func("G__XMLParser"); }
};
G__cpp_setup_initG__XMLParser G__cpp_setup_initializerG__XMLParser;

