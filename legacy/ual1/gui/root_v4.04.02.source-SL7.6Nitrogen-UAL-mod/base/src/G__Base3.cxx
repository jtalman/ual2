//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:22:51 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__Base3.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< char*, int > pairlEcharmUcOintgR;
      #else
      class pairlEcharmUcOintgR  {
         public:
         //friend XX;
         char* first; //
         int second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< char*, long > pairlEcharmUcOlonggR;
      #else
      class pairlEcharmUcOlonggR  {
         public:
         //friend XX;
         char* first; //
         long second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< char*, float > pairlEcharmUcOfloatgR;
      #else
      class pairlEcharmUcOfloatgR  {
         public:
         //friend XX;
         char* first; //
         float second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< char*, double > pairlEcharmUcOdoublegR;
      #else
      class pairlEcharmUcOdoublegR  {
         public:
         //friend XX;
         char* first; //
         double second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< char*, void* > pairlEcharmUcOvoidmUgR;
      #else
      class pairlEcharmUcOvoidmUgR  {
         public:
         //friend XX;
         char* first; //
         void* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< char*, char* > pairlEcharmUcOcharmUgR;
      #else
      class pairlEcharmUcOcharmUgR  {
         public:
         //friend XX;
         char* first; //
         char* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::string, int > pairlEstringcOintgR;
      #else
      class pairlEstringcOintgR  {
         public:
         //friend XX;
         string first; //
         int second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::string, long > pairlEstringcOlonggR;
      #else
      class pairlEstringcOlonggR  {
         public:
         //friend XX;
         string first; //
         long second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::string, float > pairlEstringcOfloatgR;
      #else
      class pairlEstringcOfloatgR  {
         public:
         //friend XX;
         string first; //
         float second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::string, double > pairlEstringcOdoublegR;
      #else
      class pairlEstringcOdoublegR  {
         public:
         //friend XX;
         string first; //
         double second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::string, void* > pairlEstringcOvoidmUgR;
      #else
      class pairlEstringcOvoidmUgR  {
         public:
         //friend XX;
         string first; //
         void* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< long, int > pairlElongcOintgR;
      #else
      class pairlElongcOintgR  {
         public:
         //friend XX;
         long first; //
         int second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< long, long > pairlElongcOlonggR;
      #else
      class pairlElongcOlonggR  {
         public:
         //friend XX;
         long first; //
         long second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< long, float > pairlElongcOfloatgR;
      #else
      class pairlElongcOfloatgR  {
         public:
         //friend XX;
         long first; //
         float second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< long, double > pairlElongcOdoublegR;
      #else
      class pairlElongcOdoublegR  {
         public:
         //friend XX;
         long first; //
         double second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< long, void* > pairlElongcOvoidmUgR;
      #else
      class pairlElongcOvoidmUgR  {
         public:
         //friend XX;
         long first; //
         void* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< long, char* > pairlElongcOcharmUgR;
      #else
      class pairlElongcOcharmUgR  {
         public:
         //friend XX;
         long first; //
         char* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< double, int > pairlEdoublecOintgR;
      #else
      class pairlEdoublecOintgR  {
         public:
         //friend XX;
         double first; //
         int second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< double, long > pairlEdoublecOlonggR;
      #else
      class pairlEdoublecOlonggR  {
         public:
         //friend XX;
         double first; //
         long second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< double, float > pairlEdoublecOfloatgR;
      #else
      class pairlEdoublecOfloatgR  {
         public:
         //friend XX;
         double first; //
         float second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< double, double > pairlEdoublecOdoublegR;
      #else
      class pairlEdoublecOdoublegR  {
         public:
         //friend XX;
         double first; //
         double second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< double, void* > pairlEdoublecOvoidmUgR;
      #else
      class pairlEdoublecOvoidmUgR  {
         public:
         //friend XX;
         double first; //
         void* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< double, char* > pairlEdoublecOcharmUgR;
      #else
      class pairlEdoublecOcharmUgR  {
         public:
         //friend XX;
         double first; //
         char* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const char*, int > pairlEconstsPcharmUcOintgR;
      #else
      class pairlEconstsPcharmUcOintgR  {
         public:
         //friend XX;
          char* first; //
         int second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const char*, long > pairlEconstsPcharmUcOlonggR;
      #else
      class pairlEconstsPcharmUcOlonggR  {
         public:
         //friend XX;
          char* first; //
         long second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const char*, float > pairlEconstsPcharmUcOfloatgR;
      #else
      class pairlEconstsPcharmUcOfloatgR  {
         public:
         //friend XX;
          char* first; //
         float second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const char*, double > pairlEconstsPcharmUcOdoublegR;
      #else
      class pairlEconstsPcharmUcOdoublegR  {
         public:
         //friend XX;
          char* first; //
         double second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const char*, void* > pairlEconstsPcharmUcOvoidmUgR;
      #else
      class pairlEconstsPcharmUcOvoidmUgR  {
         public:
         //friend XX;
          char* first; //
         void* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const char*, char* > pairlEconstsPcharmUcOcharmUgR;
      #else
      class pairlEconstsPcharmUcOcharmUgR  {
         public:
         //friend XX;
          char* first; //
         char* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const ::string, int > pairlEconstsPstringcOintgR;
      #else
      class pairlEconstsPstringcOintgR  {
         public:
         //friend XX;
          string first; //
         int second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const ::string, long > pairlEconstsPstringcOlonggR;
      #else
      class pairlEconstsPstringcOlonggR  {
         public:
         //friend XX;
          string first; //
         long second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const ::string, float > pairlEconstsPstringcOfloatgR;
      #else
      class pairlEconstsPstringcOfloatgR  {
         public:
         //friend XX;
          string first; //
         float second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const ::string, double > pairlEconstsPstringcOdoublegR;
      #else
      class pairlEconstsPstringcOdoublegR  {
         public:
         //friend XX;
          string first; //
         double second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const ::string, void* > pairlEconstsPstringcOvoidmUgR;
      #else
      class pairlEconstsPstringcOvoidmUgR  {
         public:
         //friend XX;
          string first; //
         void* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const long, int > pairlEconstsPlongcOintgR;
      #else
      class pairlEconstsPlongcOintgR  {
         public:
         //friend XX;
          long first; //
         int second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const long, long > pairlEconstsPlongcOlonggR;
      #else
      class pairlEconstsPlongcOlonggR  {
         public:
         //friend XX;
          long first; //
         long second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const long, float > pairlEconstsPlongcOfloatgR;
      #else
      class pairlEconstsPlongcOfloatgR  {
         public:
         //friend XX;
          long first; //
         float second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const long, double > pairlEconstsPlongcOdoublegR;
      #else
      class pairlEconstsPlongcOdoublegR  {
         public:
         //friend XX;
          long first; //
         double second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const long, void* > pairlEconstsPlongcOvoidmUgR;
      #else
      class pairlEconstsPlongcOvoidmUgR  {
         public:
         //friend XX;
          long first; //
         void* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const long, char* > pairlEconstsPlongcOcharmUgR;
      #else
      class pairlEconstsPlongcOcharmUgR  {
         public:
         //friend XX;
          long first; //
         char* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const double, int > pairlEconstsPdoublecOintgR;
      #else
      class pairlEconstsPdoublecOintgR  {
         public:
         //friend XX;
          double first; //
         int second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const double, long > pairlEconstsPdoublecOlonggR;
      #else
      class pairlEconstsPdoublecOlonggR  {
         public:
         //friend XX;
          double first; //
         long second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const double, float > pairlEconstsPdoublecOfloatgR;
      #else
      class pairlEconstsPdoublecOfloatgR  {
         public:
         //friend XX;
          double first; //
         float second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const double, double > pairlEconstsPdoublecOdoublegR;
      #else
      class pairlEconstsPdoublecOdoublegR  {
         public:
         //friend XX;
          double first; //
         double second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const double, void* > pairlEconstsPdoublecOvoidmUgR;
      #else
      class pairlEconstsPdoublecOvoidmUgR  {
         public:
         //friend XX;
          double first; //
         void* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< const double, char* > pairlEconstsPdoublecOcharmUgR;
      #else
      class pairlEconstsPdoublecOcharmUgR  {
         public:
         //friend XX;
          double first; //
         char* second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TParameter< double > TParameterlEdoublegR;
      #else
      class TParameterlEdoublegR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table.
         virtual ~TParameterlEdoublegR() {};
         ::TString fName; //
         double fVal; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TParameter< long > TParameterlElonggR;
      #else
      class TParameterlElonggR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table.
         virtual ~TParameterlElonggR() {};
         ::TString fName; //
         long fVal; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TParameter< long long > TParameterlElongsPlonggR;
      #else
      class TParameterlElongsPlonggR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table.
         virtual ~TParameterlElongsPlonggR() {};
         ::TString fName; //
         Long64_t fVal; //
      };
      #endif

   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TVirtualProof_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TVirtualProof_IsA(const void*);
   static void delete_TVirtualProof(void *p);
   static void deleteArray_TVirtualProof(void *p);
   static void destruct_TVirtualProof(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TVirtualProof*)
   {
      ::TVirtualProof *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TVirtualProof", ::TVirtualProof::Class_Version(), "base/inc/TVirtualProof.h", 42,
                  typeid(::TVirtualProof), DefineBehavior(ptr, ptr),
                  &::TVirtualProof::Dictionary, &TVirtualProof_IsA, 0,
                  sizeof(::TVirtualProof) );
      instance.SetDelete(&delete_TVirtualProof);
      instance.SetDeleteArray(&deleteArray_TVirtualProof);
      instance.SetDestructor(&destruct_TVirtualProof);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TVirtualProof*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void SetWindowAttributes_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void SetWindowAttributes_t_Dictionary();
   static TClass *SetWindowAttributes_t_IsA(const void*);
   static void *new_SetWindowAttributes_t(void *p = 0);
   static void *newArray_SetWindowAttributes_t(Long_t size);
   static void delete_SetWindowAttributes_t(void *p);
   static void deleteArray_SetWindowAttributes_t(void *p);
   static void destruct_SetWindowAttributes_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::SetWindowAttributes_t*)
   {
      ::SetWindowAttributes_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("SetWindowAttributes_t", "base/inc/GuiTypes.h", 95,
                  typeid(::SetWindowAttributes_t), DefineBehavior(ptr, ptr),
                  0, &SetWindowAttributes_t_Dictionary, &SetWindowAttributes_t_IsA, 0,
                  sizeof(::SetWindowAttributes_t) );
      instance.SetNew(&new_SetWindowAttributes_t);
      instance.SetNewArray(&newArray_SetWindowAttributes_t);
      instance.SetDelete(&delete_SetWindowAttributes_t);
      instance.SetDeleteArray(&deleteArray_SetWindowAttributes_t);
      instance.SetDestructor(&destruct_SetWindowAttributes_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::SetWindowAttributes_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SetWindowAttributes_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::SetWindowAttributes_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void WindowAttributes_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void WindowAttributes_t_Dictionary();
   static TClass *WindowAttributes_t_IsA(const void*);
   static void *new_WindowAttributes_t(void *p = 0);
   static void *newArray_WindowAttributes_t(Long_t size);
   static void delete_WindowAttributes_t(void *p);
   static void deleteArray_WindowAttributes_t(void *p);
   static void destruct_WindowAttributes_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::WindowAttributes_t*)
   {
      ::WindowAttributes_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("WindowAttributes_t", "base/inc/GuiTypes.h", 116,
                  typeid(::WindowAttributes_t), DefineBehavior(ptr, ptr),
                  0, &WindowAttributes_t_Dictionary, &WindowAttributes_t_IsA, 0,
                  sizeof(::WindowAttributes_t) );
      instance.SetNew(&new_WindowAttributes_t);
      instance.SetNewArray(&newArray_WindowAttributes_t);
      instance.SetDelete(&delete_WindowAttributes_t);
      instance.SetDeleteArray(&deleteArray_WindowAttributes_t);
      instance.SetDestructor(&destruct_WindowAttributes_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::WindowAttributes_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void WindowAttributes_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::WindowAttributes_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void Event_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void Event_t_Dictionary();
   static TClass *Event_t_IsA(const void*);
   static void *new_Event_t(void *p = 0);
   static void *newArray_Event_t(Long_t size);
   static void delete_Event_t(void *p);
   static void deleteArray_Event_t(void *p);
   static void destruct_Event_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::Event_t*)
   {
      ::Event_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("Event_t", "base/inc/GuiTypes.h", 176,
                  typeid(::Event_t), DefineBehavior(ptr, ptr),
                  0, &Event_t_Dictionary, &Event_t_IsA, 0,
                  sizeof(::Event_t) );
      instance.SetNew(&new_Event_t);
      instance.SetNewArray(&newArray_Event_t);
      instance.SetDelete(&delete_Event_t);
      instance.SetDeleteArray(&deleteArray_Event_t);
      instance.SetDestructor(&destruct_Event_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::Event_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Event_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::Event_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void GCValues_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void GCValues_t_Dictionary();
   static TClass *GCValues_t_IsA(const void*);
   static void *new_GCValues_t(void *p = 0);
   static void *newArray_GCValues_t(Long_t size);
   static void delete_GCValues_t(void *p);
   static void deleteArray_GCValues_t(void *p);
   static void destruct_GCValues_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::GCValues_t*)
   {
      ::GCValues_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("GCValues_t", "base/inc/GuiTypes.h", 220,
                  typeid(::GCValues_t), DefineBehavior(ptr, ptr),
                  0, &GCValues_t_Dictionary, &GCValues_t_IsA, 0,
                  sizeof(::GCValues_t) );
      instance.SetNew(&new_GCValues_t);
      instance.SetNewArray(&newArray_GCValues_t);
      instance.SetDelete(&delete_GCValues_t);
      instance.SetDeleteArray(&deleteArray_GCValues_t);
      instance.SetDestructor(&destruct_GCValues_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::GCValues_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void GCValues_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::GCValues_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void ColorStruct_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ColorStruct_t_Dictionary();
   static TClass *ColorStruct_t_IsA(const void*);
   static void *new_ColorStruct_t(void *p = 0);
   static void *newArray_ColorStruct_t(Long_t size);
   static void delete_ColorStruct_t(void *p);
   static void deleteArray_ColorStruct_t(void *p);
   static void destruct_ColorStruct_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::ColorStruct_t*)
   {
      ::ColorStruct_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("ColorStruct_t", "base/inc/GuiTypes.h", 305,
                  typeid(::ColorStruct_t), DefineBehavior(ptr, ptr),
                  0, &ColorStruct_t_Dictionary, &ColorStruct_t_IsA, 0,
                  sizeof(::ColorStruct_t) );
      instance.SetNew(&new_ColorStruct_t);
      instance.SetNewArray(&newArray_ColorStruct_t);
      instance.SetDelete(&delete_ColorStruct_t);
      instance.SetDeleteArray(&deleteArray_ColorStruct_t);
      instance.SetDestructor(&destruct_ColorStruct_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::ColorStruct_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ColorStruct_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::ColorStruct_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void PictureAttributes_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void PictureAttributes_t_Dictionary();
   static TClass *PictureAttributes_t_IsA(const void*);
   static void *new_PictureAttributes_t(void *p = 0);
   static void *newArray_PictureAttributes_t(Long_t size);
   static void delete_PictureAttributes_t(void *p);
   static void deleteArray_PictureAttributes_t(void *p);
   static void destruct_PictureAttributes_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::PictureAttributes_t*)
   {
      ::PictureAttributes_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("PictureAttributes_t", "base/inc/GuiTypes.h", 318,
                  typeid(::PictureAttributes_t), DefineBehavior(ptr, ptr),
                  0, &PictureAttributes_t_Dictionary, &PictureAttributes_t_IsA, 0,
                  sizeof(::PictureAttributes_t) );
      instance.SetNew(&new_PictureAttributes_t);
      instance.SetNewArray(&newArray_PictureAttributes_t);
      instance.SetDelete(&delete_PictureAttributes_t);
      instance.SetDeleteArray(&deleteArray_PictureAttributes_t);
      instance.SetDestructor(&destruct_PictureAttributes_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::PictureAttributes_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void PictureAttributes_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::PictureAttributes_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void Segment_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void Segment_t_Dictionary();
   static TClass *Segment_t_IsA(const void*);
   static void *new_Segment_t(void *p = 0);
   static void *newArray_Segment_t(Long_t size);
   static void delete_Segment_t(void *p);
   static void deleteArray_Segment_t(void *p);
   static void destruct_Segment_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::Segment_t*)
   {
      ::Segment_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("Segment_t", "base/inc/GuiTypes.h", 346,
                  typeid(::Segment_t), DefineBehavior(ptr, ptr),
                  0, &Segment_t_Dictionary, &Segment_t_IsA, 0,
                  sizeof(::Segment_t) );
      instance.SetNew(&new_Segment_t);
      instance.SetNewArray(&newArray_Segment_t);
      instance.SetDelete(&delete_Segment_t);
      instance.SetDeleteArray(&deleteArray_Segment_t);
      instance.SetDestructor(&destruct_Segment_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::Segment_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Segment_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::Segment_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void Point_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void Point_t_Dictionary();
   static TClass *Point_t_IsA(const void*);
   static void *new_Point_t(void *p = 0);
   static void *newArray_Point_t(Long_t size);
   static void delete_Point_t(void *p);
   static void deleteArray_Point_t(void *p);
   static void destruct_Point_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::Point_t*)
   {
      ::Point_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("Point_t", "base/inc/GuiTypes.h", 351,
                  typeid(::Point_t), DefineBehavior(ptr, ptr),
                  0, &Point_t_Dictionary, &Point_t_IsA, 0,
                  sizeof(::Point_t) );
      instance.SetNew(&new_Point_t);
      instance.SetNewArray(&newArray_Point_t);
      instance.SetDelete(&delete_Point_t);
      instance.SetDeleteArray(&deleteArray_Point_t);
      instance.SetDestructor(&destruct_Point_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::Point_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Point_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::Point_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void Rectangle_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void Rectangle_t_Dictionary();
   static TClass *Rectangle_t_IsA(const void*);
   static void *new_Rectangle_t(void *p = 0);
   static void *newArray_Rectangle_t(Long_t size);
   static void delete_Rectangle_t(void *p);
   static void deleteArray_Rectangle_t(void *p);
   static void destruct_Rectangle_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::Rectangle_t*)
   {
      ::Rectangle_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("Rectangle_t", "base/inc/GuiTypes.h", 356,
                  typeid(::Rectangle_t), DefineBehavior(ptr, ptr),
                  0, &Rectangle_t_Dictionary, &Rectangle_t_IsA, 0,
                  sizeof(::Rectangle_t) );
      instance.SetNew(&new_Rectangle_t);
      instance.SetNewArray(&newArray_Rectangle_t);
      instance.SetDelete(&delete_Rectangle_t);
      instance.SetDeleteArray(&deleteArray_Rectangle_t);
      instance.SetDestructor(&destruct_Rectangle_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::Rectangle_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Rectangle_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::Rectangle_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void timespec_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void timespec_Dictionary();
   static TClass *timespec_IsA(const void*);
   static void *new_timespec(void *p = 0);
   static void *newArray_timespec(Long_t size);
   static void delete_timespec(void *p);
   static void deleteArray_timespec(void *p);
   static void destruct_timespec(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::timespec*)
   {
      ::timespec *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("timespec", "base/inc/TTimeStamp.h", 61,
                  typeid(::timespec), DefineBehavior(ptr, ptr),
                  0, &timespec_Dictionary, &timespec_IsA, 0,
                  sizeof(::timespec) );
      instance.SetNew(&new_timespec);
      instance.SetNewArray(&newArray_timespec);
      instance.SetDelete(&delete_timespec);
      instance.SetDeleteArray(&deleteArray_timespec);
      instance.SetDestructor(&destruct_timespec);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::timespec*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void timespec_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::timespec*)0x0)->GetClass();
   }

}

namespace ROOT {
   void TTimeStamp_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TTimeStamp_IsA(const void*);
   static void *new_TTimeStamp(void *p = 0);
   static void *newArray_TTimeStamp(Long_t size);
   static void delete_TTimeStamp(void *p);
   static void deleteArray_TTimeStamp(void *p);
   static void destruct_TTimeStamp(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TTimeStamp*)
   {
      ::TTimeStamp *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TTimeStamp", ::TTimeStamp::Class_Version(), "base/inc/TTimeStamp.h", 100,
                  typeid(::TTimeStamp), DefineBehavior(ptr, ptr),
                  &::TTimeStamp::Dictionary, &TTimeStamp_IsA, 4,
                  sizeof(::TTimeStamp) );
      instance.SetNew(&new_TTimeStamp);
      instance.SetNewArray(&newArray_TTimeStamp);
      instance.SetDelete(&delete_TTimeStamp);
      instance.SetDeleteArray(&deleteArray_TTimeStamp);
      instance.SetDestructor(&destruct_TTimeStamp);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TTimeStamp*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TVirtualMutex_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TVirtualMutex_IsA(const void*);
   static void *new_TVirtualMutex(void *p = 0);
   static void *newArray_TVirtualMutex(Long_t size);
   static void delete_TVirtualMutex(void *p);
   static void deleteArray_TVirtualMutex(void *p);
   static void destruct_TVirtualMutex(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TVirtualMutex*)
   {
      ::TVirtualMutex *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TVirtualMutex", ::TVirtualMutex::Class_Version(), "base/inc/TVirtualMutex.h", 30,
                  typeid(::TVirtualMutex), DefineBehavior(ptr, ptr),
                  &::TVirtualMutex::Dictionary, &TVirtualMutex_IsA, 0,
                  sizeof(::TVirtualMutex) );
      instance.SetNew(&new_TVirtualMutex);
      instance.SetNewArray(&newArray_TVirtualMutex);
      instance.SetDelete(&delete_TVirtualMutex);
      instance.SetDeleteArray(&deleteArray_TVirtualMutex);
      instance.SetDestructor(&destruct_TVirtualMutex);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TVirtualMutex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLockGuard_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLockGuard_IsA(const void*);
   static void delete_TLockGuard(void *p);
   static void deleteArray_TLockGuard(void *p);
   static void destruct_TLockGuard(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLockGuard*)
   {
      ::TLockGuard *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLockGuard", ::TLockGuard::Class_Version(), "base/inc/TVirtualMutex.h", 63,
                  typeid(::TLockGuard), DefineBehavior(ptr, ptr),
                  &::TLockGuard::Dictionary, &TLockGuard_IsA, 0,
                  sizeof(::TLockGuard) );
      instance.SetDelete(&delete_TLockGuard);
      instance.SetDeleteArray(&deleteArray_TLockGuard);
      instance.SetDestructor(&destruct_TLockGuard);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLockGuard*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TArchiveFile_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TArchiveFile_IsA(const void*);
   static void delete_TArchiveFile(void *p);
   static void deleteArray_TArchiveFile(void *p);
   static void destruct_TArchiveFile(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TArchiveFile*)
   {
      ::TArchiveFile *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TArchiveFile", ::TArchiveFile::Class_Version(), "base/inc/TArchiveFile.h", 40,
                  typeid(::TArchiveFile), DefineBehavior(ptr, ptr),
                  &::TArchiveFile::Dictionary, &TArchiveFile_IsA, 4,
                  sizeof(::TArchiveFile) );
      instance.SetDelete(&delete_TArchiveFile);
      instance.SetDeleteArray(&deleteArray_TArchiveFile);
      instance.SetDestructor(&destruct_TArchiveFile);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TArchiveFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TVirtualPerfStats_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TVirtualPerfStats_IsA(const void*);
   static void delete_TVirtualPerfStats(void *p);
   static void deleteArray_TVirtualPerfStats(void *p);
   static void destruct_TVirtualPerfStats(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TVirtualPerfStats*)
   {
      ::TVirtualPerfStats *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TVirtualPerfStats", ::TVirtualPerfStats::Class_Version(), "base/inc/TVirtualPerfStats.h", 33,
                  typeid(::TVirtualPerfStats), DefineBehavior(ptr, ptr),
                  &::TVirtualPerfStats::Dictionary, &TVirtualPerfStats_IsA, 0,
                  sizeof(::TVirtualPerfStats) );
      instance.SetDelete(&delete_TVirtualPerfStats);
      instance.SetDeleteArray(&deleteArray_TVirtualPerfStats);
      instance.SetDestructor(&destruct_TVirtualPerfStats);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TVirtualPerfStats*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TArchiveMember_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TArchiveMember_IsA(const void*);
   static void *new_TArchiveMember(void *p = 0);
   static void *newArray_TArchiveMember(Long_t size);
   static void delete_TArchiveMember(void *p);
   static void deleteArray_TArchiveMember(void *p);
   static void destruct_TArchiveMember(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TArchiveMember*)
   {
      ::TArchiveMember *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TArchiveMember", ::TArchiveMember::Class_Version(), "base/inc/TArchiveFile.h", 77,
                  typeid(::TArchiveMember), DefineBehavior(ptr, ptr),
                  &::TArchiveMember::Dictionary, &TArchiveMember_IsA, 4,
                  sizeof(::TArchiveMember) );
      instance.SetNew(&new_TArchiveMember);
      instance.SetNewArray(&newArray_TArchiveMember);
      instance.SetDelete(&delete_TArchiveMember);
      instance.SetDeleteArray(&deleteArray_TArchiveMember);
      instance.SetDestructor(&destruct_TArchiveMember);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TArchiveMember*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TZIPMember_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TZIPMember_IsA(const void*);
   static void *new_TZIPMember(void *p = 0);
   static void *newArray_TZIPMember(Long_t size);
   static void delete_TZIPMember(void *p);
   static void deleteArray_TZIPMember(void *p);
   static void destruct_TZIPMember(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TZIPMember*)
   {
      ::TZIPMember *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TZIPMember", ::TZIPMember::Class_Version(), "base/inc/TZIPFile.h", 140,
                  typeid(::TZIPMember), DefineBehavior(ptr, ptr),
                  &::TZIPMember::Dictionary, &TZIPMember_IsA, 4,
                  sizeof(::TZIPMember) );
      instance.SetNew(&new_TZIPMember);
      instance.SetNewArray(&newArray_TZIPMember);
      instance.SetDelete(&delete_TZIPMember);
      instance.SetDeleteArray(&deleteArray_TZIPMember);
      instance.SetDestructor(&destruct_TZIPMember);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TZIPMember*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TZIPFile_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TZIPFile_IsA(const void*);
   static void *new_TZIPFile(void *p = 0);
   static void *newArray_TZIPFile(Long_t size);
   static void delete_TZIPFile(void *p);
   static void deleteArray_TZIPFile(void *p);
   static void destruct_TZIPFile(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TZIPFile*)
   {
      ::TZIPFile *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TZIPFile", ::TZIPFile::Class_Version(), "base/inc/TZIPFile.h", 41,
                  typeid(::TZIPFile), DefineBehavior(ptr, ptr),
                  &::TZIPFile::Dictionary, &TZIPFile_IsA, 4,
                  sizeof(::TZIPFile) );
      instance.SetNew(&new_TZIPFile);
      instance.SetNewArray(&newArray_TZIPFile);
      instance.SetDelete(&delete_TZIPFile);
      instance.SetDeleteArray(&deleteArray_TZIPFile);
      instance.SetDestructor(&destruct_TZIPFile);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TZIPFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void pairlEcharmUcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEcharmUcOintgR_Dictionary();
   static TClass *pairlEcharmUcOintgR_IsA(const void*);
   static void *new_pairlEcharmUcOintgR(void *p = 0);
   static void *newArray_pairlEcharmUcOintgR(Long_t size);
   static void delete_pairlEcharmUcOintgR(void *p);
   static void deleteArray_pairlEcharmUcOintgR(void *p);
   static void destruct_pairlEcharmUcOintgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<char*,int>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<char*,int> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<char*,int>", "prec_stl/utility", 10,
                  typeid(pair<char*,int>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEcharmUcOintgR_ShowMembers, &pairlEcharmUcOintgR_Dictionary, &pairlEcharmUcOintgR_IsA, 4,
                  sizeof(pair<char*,int>) );
      instance.SetNew(&new_pairlEcharmUcOintgR);
      instance.SetNewArray(&newArray_pairlEcharmUcOintgR);
      instance.SetDelete(&delete_pairlEcharmUcOintgR);
      instance.SetDeleteArray(&deleteArray_pairlEcharmUcOintgR);
      instance.SetDestructor(&destruct_pairlEcharmUcOintgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<char*,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEcharmUcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<char*,int>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEcharmUcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEcharmUcOlonggR_Dictionary();
   static TClass *pairlEcharmUcOlonggR_IsA(const void*);
   static void *new_pairlEcharmUcOlonggR(void *p = 0);
   static void *newArray_pairlEcharmUcOlonggR(Long_t size);
   static void delete_pairlEcharmUcOlonggR(void *p);
   static void deleteArray_pairlEcharmUcOlonggR(void *p);
   static void destruct_pairlEcharmUcOlonggR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<char*,long>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<char*,long> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<char*,long>", "prec_stl/utility", 10,
                  typeid(pair<char*,long>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEcharmUcOlonggR_ShowMembers, &pairlEcharmUcOlonggR_Dictionary, &pairlEcharmUcOlonggR_IsA, 4,
                  sizeof(pair<char*,long>) );
      instance.SetNew(&new_pairlEcharmUcOlonggR);
      instance.SetNewArray(&newArray_pairlEcharmUcOlonggR);
      instance.SetDelete(&delete_pairlEcharmUcOlonggR);
      instance.SetDeleteArray(&deleteArray_pairlEcharmUcOlonggR);
      instance.SetDestructor(&destruct_pairlEcharmUcOlonggR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<char*,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEcharmUcOlonggR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<char*,long>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEcharmUcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEcharmUcOfloatgR_Dictionary();
   static TClass *pairlEcharmUcOfloatgR_IsA(const void*);
   static void *new_pairlEcharmUcOfloatgR(void *p = 0);
   static void *newArray_pairlEcharmUcOfloatgR(Long_t size);
   static void delete_pairlEcharmUcOfloatgR(void *p);
   static void deleteArray_pairlEcharmUcOfloatgR(void *p);
   static void destruct_pairlEcharmUcOfloatgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<char*,float>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<char*,float> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<char*,float>", "prec_stl/utility", 10,
                  typeid(pair<char*,float>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEcharmUcOfloatgR_ShowMembers, &pairlEcharmUcOfloatgR_Dictionary, &pairlEcharmUcOfloatgR_IsA, 4,
                  sizeof(pair<char*,float>) );
      instance.SetNew(&new_pairlEcharmUcOfloatgR);
      instance.SetNewArray(&newArray_pairlEcharmUcOfloatgR);
      instance.SetDelete(&delete_pairlEcharmUcOfloatgR);
      instance.SetDeleteArray(&deleteArray_pairlEcharmUcOfloatgR);
      instance.SetDestructor(&destruct_pairlEcharmUcOfloatgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<char*,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEcharmUcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<char*,float>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEcharmUcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEcharmUcOdoublegR_Dictionary();
   static TClass *pairlEcharmUcOdoublegR_IsA(const void*);
   static void *new_pairlEcharmUcOdoublegR(void *p = 0);
   static void *newArray_pairlEcharmUcOdoublegR(Long_t size);
   static void delete_pairlEcharmUcOdoublegR(void *p);
   static void deleteArray_pairlEcharmUcOdoublegR(void *p);
   static void destruct_pairlEcharmUcOdoublegR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<char*,double>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<char*,double> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<char*,double>", "prec_stl/utility", 10,
                  typeid(pair<char*,double>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEcharmUcOdoublegR_ShowMembers, &pairlEcharmUcOdoublegR_Dictionary, &pairlEcharmUcOdoublegR_IsA, 4,
                  sizeof(pair<char*,double>) );
      instance.SetNew(&new_pairlEcharmUcOdoublegR);
      instance.SetNewArray(&newArray_pairlEcharmUcOdoublegR);
      instance.SetDelete(&delete_pairlEcharmUcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEcharmUcOdoublegR);
      instance.SetDestructor(&destruct_pairlEcharmUcOdoublegR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<char*,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEcharmUcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<char*,double>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEcharmUcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEcharmUcOvoidmUgR_Dictionary();
   static TClass *pairlEcharmUcOvoidmUgR_IsA(const void*);
   static void *new_pairlEcharmUcOvoidmUgR(void *p = 0);
   static void *newArray_pairlEcharmUcOvoidmUgR(Long_t size);
   static void delete_pairlEcharmUcOvoidmUgR(void *p);
   static void deleteArray_pairlEcharmUcOvoidmUgR(void *p);
   static void destruct_pairlEcharmUcOvoidmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<char*,void*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<char*,void*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<char*,void*>", "prec_stl/utility", 10,
                  typeid(pair<char*,void*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEcharmUcOvoidmUgR_ShowMembers, &pairlEcharmUcOvoidmUgR_Dictionary, &pairlEcharmUcOvoidmUgR_IsA, 4,
                  sizeof(pair<char*,void*>) );
      instance.SetNew(&new_pairlEcharmUcOvoidmUgR);
      instance.SetNewArray(&newArray_pairlEcharmUcOvoidmUgR);
      instance.SetDelete(&delete_pairlEcharmUcOvoidmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEcharmUcOvoidmUgR);
      instance.SetDestructor(&destruct_pairlEcharmUcOvoidmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<char*,void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEcharmUcOvoidmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<char*,void*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEcharmUcOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEcharmUcOcharmUgR_Dictionary();
   static TClass *pairlEcharmUcOcharmUgR_IsA(const void*);
   static void *new_pairlEcharmUcOcharmUgR(void *p = 0);
   static void *newArray_pairlEcharmUcOcharmUgR(Long_t size);
   static void delete_pairlEcharmUcOcharmUgR(void *p);
   static void deleteArray_pairlEcharmUcOcharmUgR(void *p);
   static void destruct_pairlEcharmUcOcharmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<char*,char*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<char*,char*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<char*,char*>", "prec_stl/utility", 10,
                  typeid(pair<char*,char*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEcharmUcOcharmUgR_ShowMembers, &pairlEcharmUcOcharmUgR_Dictionary, &pairlEcharmUcOcharmUgR_IsA, 4,
                  sizeof(pair<char*,char*>) );
      instance.SetNew(&new_pairlEcharmUcOcharmUgR);
      instance.SetNewArray(&newArray_pairlEcharmUcOcharmUgR);
      instance.SetDelete(&delete_pairlEcharmUcOcharmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEcharmUcOcharmUgR);
      instance.SetDestructor(&destruct_pairlEcharmUcOcharmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<char*,char*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEcharmUcOcharmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<char*,char*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEstringcOintgR_Dictionary();
   static TClass *pairlEstringcOintgR_IsA(const void*);
   static void *new_pairlEstringcOintgR(void *p = 0);
   static void *newArray_pairlEstringcOintgR(Long_t size);
   static void delete_pairlEstringcOintgR(void *p);
   static void deleteArray_pairlEstringcOintgR(void *p);
   static void destruct_pairlEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<string,int>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<string,int> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<string,int>", "prec_stl/utility", 10,
                  typeid(pair<string,int>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEstringcOintgR_ShowMembers, &pairlEstringcOintgR_Dictionary, &pairlEstringcOintgR_IsA, 4,
                  sizeof(pair<string,int>) );
      instance.SetNew(&new_pairlEstringcOintgR);
      instance.SetNewArray(&newArray_pairlEstringcOintgR);
      instance.SetDelete(&delete_pairlEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_pairlEstringcOintgR);
      instance.SetDestructor(&destruct_pairlEstringcOintgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEstringcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<string,int>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEstringcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEstringcOlonggR_Dictionary();
   static TClass *pairlEstringcOlonggR_IsA(const void*);
   static void *new_pairlEstringcOlonggR(void *p = 0);
   static void *newArray_pairlEstringcOlonggR(Long_t size);
   static void delete_pairlEstringcOlonggR(void *p);
   static void deleteArray_pairlEstringcOlonggR(void *p);
   static void destruct_pairlEstringcOlonggR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<string,long>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<string,long> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<string,long>", "prec_stl/utility", 10,
                  typeid(pair<string,long>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEstringcOlonggR_ShowMembers, &pairlEstringcOlonggR_Dictionary, &pairlEstringcOlonggR_IsA, 4,
                  sizeof(pair<string,long>) );
      instance.SetNew(&new_pairlEstringcOlonggR);
      instance.SetNewArray(&newArray_pairlEstringcOlonggR);
      instance.SetDelete(&delete_pairlEstringcOlonggR);
      instance.SetDeleteArray(&deleteArray_pairlEstringcOlonggR);
      instance.SetDestructor(&destruct_pairlEstringcOlonggR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<string,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEstringcOlonggR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<string,long>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEstringcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEstringcOfloatgR_Dictionary();
   static TClass *pairlEstringcOfloatgR_IsA(const void*);
   static void *new_pairlEstringcOfloatgR(void *p = 0);
   static void *newArray_pairlEstringcOfloatgR(Long_t size);
   static void delete_pairlEstringcOfloatgR(void *p);
   static void deleteArray_pairlEstringcOfloatgR(void *p);
   static void destruct_pairlEstringcOfloatgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<string,float>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<string,float> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<string,float>", "prec_stl/utility", 10,
                  typeid(pair<string,float>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEstringcOfloatgR_ShowMembers, &pairlEstringcOfloatgR_Dictionary, &pairlEstringcOfloatgR_IsA, 4,
                  sizeof(pair<string,float>) );
      instance.SetNew(&new_pairlEstringcOfloatgR);
      instance.SetNewArray(&newArray_pairlEstringcOfloatgR);
      instance.SetDelete(&delete_pairlEstringcOfloatgR);
      instance.SetDeleteArray(&deleteArray_pairlEstringcOfloatgR);
      instance.SetDestructor(&destruct_pairlEstringcOfloatgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<string,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEstringcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<string,float>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEstringcOdoublegR_Dictionary();
   static TClass *pairlEstringcOdoublegR_IsA(const void*);
   static void *new_pairlEstringcOdoublegR(void *p = 0);
   static void *newArray_pairlEstringcOdoublegR(Long_t size);
   static void delete_pairlEstringcOdoublegR(void *p);
   static void deleteArray_pairlEstringcOdoublegR(void *p);
   static void destruct_pairlEstringcOdoublegR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<string,double>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<string,double> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<string,double>", "prec_stl/utility", 10,
                  typeid(pair<string,double>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEstringcOdoublegR_ShowMembers, &pairlEstringcOdoublegR_Dictionary, &pairlEstringcOdoublegR_IsA, 4,
                  sizeof(pair<string,double>) );
      instance.SetNew(&new_pairlEstringcOdoublegR);
      instance.SetNewArray(&newArray_pairlEstringcOdoublegR);
      instance.SetDelete(&delete_pairlEstringcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEstringcOdoublegR);
      instance.SetDestructor(&destruct_pairlEstringcOdoublegR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<string,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEstringcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<string,double>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEstringcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEstringcOvoidmUgR_Dictionary();
   static TClass *pairlEstringcOvoidmUgR_IsA(const void*);
   static void *new_pairlEstringcOvoidmUgR(void *p = 0);
   static void *newArray_pairlEstringcOvoidmUgR(Long_t size);
   static void delete_pairlEstringcOvoidmUgR(void *p);
   static void deleteArray_pairlEstringcOvoidmUgR(void *p);
   static void destruct_pairlEstringcOvoidmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<string,void*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<string,void*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<string,void*>", "prec_stl/utility", 10,
                  typeid(pair<string,void*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEstringcOvoidmUgR_ShowMembers, &pairlEstringcOvoidmUgR_Dictionary, &pairlEstringcOvoidmUgR_IsA, 4,
                  sizeof(pair<string,void*>) );
      instance.SetNew(&new_pairlEstringcOvoidmUgR);
      instance.SetNewArray(&newArray_pairlEstringcOvoidmUgR);
      instance.SetDelete(&delete_pairlEstringcOvoidmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEstringcOvoidmUgR);
      instance.SetDestructor(&destruct_pairlEstringcOvoidmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<string,void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEstringcOvoidmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<string,void*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlElongcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlElongcOintgR_Dictionary();
   static TClass *pairlElongcOintgR_IsA(const void*);
   static void *new_pairlElongcOintgR(void *p = 0);
   static void *newArray_pairlElongcOintgR(Long_t size);
   static void delete_pairlElongcOintgR(void *p);
   static void deleteArray_pairlElongcOintgR(void *p);
   static void destruct_pairlElongcOintgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<long,int>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<long,int> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<long,int>", "prec_stl/utility", 10,
                  typeid(pair<long,int>), DefineBehavior(ptr, ptr),
                  (void*)&pairlElongcOintgR_ShowMembers, &pairlElongcOintgR_Dictionary, &pairlElongcOintgR_IsA, 4,
                  sizeof(pair<long,int>) );
      instance.SetNew(&new_pairlElongcOintgR);
      instance.SetNewArray(&newArray_pairlElongcOintgR);
      instance.SetDelete(&delete_pairlElongcOintgR);
      instance.SetDeleteArray(&deleteArray_pairlElongcOintgR);
      instance.SetDestructor(&destruct_pairlElongcOintgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<long,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlElongcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<long,int>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlElongcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlElongcOlonggR_Dictionary();
   static TClass *pairlElongcOlonggR_IsA(const void*);
   static void *new_pairlElongcOlonggR(void *p = 0);
   static void *newArray_pairlElongcOlonggR(Long_t size);
   static void delete_pairlElongcOlonggR(void *p);
   static void deleteArray_pairlElongcOlonggR(void *p);
   static void destruct_pairlElongcOlonggR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<long,long>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<long,long> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<long,long>", "prec_stl/utility", 10,
                  typeid(pair<long,long>), DefineBehavior(ptr, ptr),
                  (void*)&pairlElongcOlonggR_ShowMembers, &pairlElongcOlonggR_Dictionary, &pairlElongcOlonggR_IsA, 4,
                  sizeof(pair<long,long>) );
      instance.SetNew(&new_pairlElongcOlonggR);
      instance.SetNewArray(&newArray_pairlElongcOlonggR);
      instance.SetDelete(&delete_pairlElongcOlonggR);
      instance.SetDeleteArray(&deleteArray_pairlElongcOlonggR);
      instance.SetDestructor(&destruct_pairlElongcOlonggR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<long,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlElongcOlonggR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<long,long>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlElongcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlElongcOfloatgR_Dictionary();
   static TClass *pairlElongcOfloatgR_IsA(const void*);
   static void *new_pairlElongcOfloatgR(void *p = 0);
   static void *newArray_pairlElongcOfloatgR(Long_t size);
   static void delete_pairlElongcOfloatgR(void *p);
   static void deleteArray_pairlElongcOfloatgR(void *p);
   static void destruct_pairlElongcOfloatgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<long,float>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<long,float> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<long,float>", "prec_stl/utility", 10,
                  typeid(pair<long,float>), DefineBehavior(ptr, ptr),
                  (void*)&pairlElongcOfloatgR_ShowMembers, &pairlElongcOfloatgR_Dictionary, &pairlElongcOfloatgR_IsA, 4,
                  sizeof(pair<long,float>) );
      instance.SetNew(&new_pairlElongcOfloatgR);
      instance.SetNewArray(&newArray_pairlElongcOfloatgR);
      instance.SetDelete(&delete_pairlElongcOfloatgR);
      instance.SetDeleteArray(&deleteArray_pairlElongcOfloatgR);
      instance.SetDestructor(&destruct_pairlElongcOfloatgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<long,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlElongcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<long,float>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlElongcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlElongcOdoublegR_Dictionary();
   static TClass *pairlElongcOdoublegR_IsA(const void*);
   static void *new_pairlElongcOdoublegR(void *p = 0);
   static void *newArray_pairlElongcOdoublegR(Long_t size);
   static void delete_pairlElongcOdoublegR(void *p);
   static void deleteArray_pairlElongcOdoublegR(void *p);
   static void destruct_pairlElongcOdoublegR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<long,double>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<long,double> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<long,double>", "prec_stl/utility", 10,
                  typeid(pair<long,double>), DefineBehavior(ptr, ptr),
                  (void*)&pairlElongcOdoublegR_ShowMembers, &pairlElongcOdoublegR_Dictionary, &pairlElongcOdoublegR_IsA, 4,
                  sizeof(pair<long,double>) );
      instance.SetNew(&new_pairlElongcOdoublegR);
      instance.SetNewArray(&newArray_pairlElongcOdoublegR);
      instance.SetDelete(&delete_pairlElongcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlElongcOdoublegR);
      instance.SetDestructor(&destruct_pairlElongcOdoublegR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<long,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlElongcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<long,double>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlElongcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlElongcOvoidmUgR_Dictionary();
   static TClass *pairlElongcOvoidmUgR_IsA(const void*);
   static void *new_pairlElongcOvoidmUgR(void *p = 0);
   static void *newArray_pairlElongcOvoidmUgR(Long_t size);
   static void delete_pairlElongcOvoidmUgR(void *p);
   static void deleteArray_pairlElongcOvoidmUgR(void *p);
   static void destruct_pairlElongcOvoidmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<long,void*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<long,void*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<long,void*>", "prec_stl/utility", 10,
                  typeid(pair<long,void*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlElongcOvoidmUgR_ShowMembers, &pairlElongcOvoidmUgR_Dictionary, &pairlElongcOvoidmUgR_IsA, 4,
                  sizeof(pair<long,void*>) );
      instance.SetNew(&new_pairlElongcOvoidmUgR);
      instance.SetNewArray(&newArray_pairlElongcOvoidmUgR);
      instance.SetDelete(&delete_pairlElongcOvoidmUgR);
      instance.SetDeleteArray(&deleteArray_pairlElongcOvoidmUgR);
      instance.SetDestructor(&destruct_pairlElongcOvoidmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<long,void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlElongcOvoidmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<long,void*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlElongcOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlElongcOcharmUgR_Dictionary();
   static TClass *pairlElongcOcharmUgR_IsA(const void*);
   static void *new_pairlElongcOcharmUgR(void *p = 0);
   static void *newArray_pairlElongcOcharmUgR(Long_t size);
   static void delete_pairlElongcOcharmUgR(void *p);
   static void deleteArray_pairlElongcOcharmUgR(void *p);
   static void destruct_pairlElongcOcharmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<long,char*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<long,char*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<long,char*>", "prec_stl/utility", 10,
                  typeid(pair<long,char*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlElongcOcharmUgR_ShowMembers, &pairlElongcOcharmUgR_Dictionary, &pairlElongcOcharmUgR_IsA, 4,
                  sizeof(pair<long,char*>) );
      instance.SetNew(&new_pairlElongcOcharmUgR);
      instance.SetNewArray(&newArray_pairlElongcOcharmUgR);
      instance.SetDelete(&delete_pairlElongcOcharmUgR);
      instance.SetDeleteArray(&deleteArray_pairlElongcOcharmUgR);
      instance.SetDestructor(&destruct_pairlElongcOcharmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<long,char*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlElongcOcharmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<long,char*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEdoublecOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEdoublecOintgR_Dictionary();
   static TClass *pairlEdoublecOintgR_IsA(const void*);
   static void *new_pairlEdoublecOintgR(void *p = 0);
   static void *newArray_pairlEdoublecOintgR(Long_t size);
   static void delete_pairlEdoublecOintgR(void *p);
   static void deleteArray_pairlEdoublecOintgR(void *p);
   static void destruct_pairlEdoublecOintgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<double,int>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<double,int> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<double,int>", "prec_stl/utility", 10,
                  typeid(pair<double,int>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEdoublecOintgR_ShowMembers, &pairlEdoublecOintgR_Dictionary, &pairlEdoublecOintgR_IsA, 4,
                  sizeof(pair<double,int>) );
      instance.SetNew(&new_pairlEdoublecOintgR);
      instance.SetNewArray(&newArray_pairlEdoublecOintgR);
      instance.SetDelete(&delete_pairlEdoublecOintgR);
      instance.SetDeleteArray(&deleteArray_pairlEdoublecOintgR);
      instance.SetDestructor(&destruct_pairlEdoublecOintgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<double,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEdoublecOintgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<double,int>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEdoublecOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEdoublecOlonggR_Dictionary();
   static TClass *pairlEdoublecOlonggR_IsA(const void*);
   static void *new_pairlEdoublecOlonggR(void *p = 0);
   static void *newArray_pairlEdoublecOlonggR(Long_t size);
   static void delete_pairlEdoublecOlonggR(void *p);
   static void deleteArray_pairlEdoublecOlonggR(void *p);
   static void destruct_pairlEdoublecOlonggR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<double,long>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<double,long> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<double,long>", "prec_stl/utility", 10,
                  typeid(pair<double,long>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEdoublecOlonggR_ShowMembers, &pairlEdoublecOlonggR_Dictionary, &pairlEdoublecOlonggR_IsA, 4,
                  sizeof(pair<double,long>) );
      instance.SetNew(&new_pairlEdoublecOlonggR);
      instance.SetNewArray(&newArray_pairlEdoublecOlonggR);
      instance.SetDelete(&delete_pairlEdoublecOlonggR);
      instance.SetDeleteArray(&deleteArray_pairlEdoublecOlonggR);
      instance.SetDestructor(&destruct_pairlEdoublecOlonggR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<double,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEdoublecOlonggR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<double,long>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEdoublecOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEdoublecOfloatgR_Dictionary();
   static TClass *pairlEdoublecOfloatgR_IsA(const void*);
   static void *new_pairlEdoublecOfloatgR(void *p = 0);
   static void *newArray_pairlEdoublecOfloatgR(Long_t size);
   static void delete_pairlEdoublecOfloatgR(void *p);
   static void deleteArray_pairlEdoublecOfloatgR(void *p);
   static void destruct_pairlEdoublecOfloatgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<double,float>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<double,float> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<double,float>", "prec_stl/utility", 10,
                  typeid(pair<double,float>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEdoublecOfloatgR_ShowMembers, &pairlEdoublecOfloatgR_Dictionary, &pairlEdoublecOfloatgR_IsA, 4,
                  sizeof(pair<double,float>) );
      instance.SetNew(&new_pairlEdoublecOfloatgR);
      instance.SetNewArray(&newArray_pairlEdoublecOfloatgR);
      instance.SetDelete(&delete_pairlEdoublecOfloatgR);
      instance.SetDeleteArray(&deleteArray_pairlEdoublecOfloatgR);
      instance.SetDestructor(&destruct_pairlEdoublecOfloatgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<double,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEdoublecOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<double,float>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEdoublecOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEdoublecOdoublegR_Dictionary();
   static TClass *pairlEdoublecOdoublegR_IsA(const void*);
   static void *new_pairlEdoublecOdoublegR(void *p = 0);
   static void *newArray_pairlEdoublecOdoublegR(Long_t size);
   static void delete_pairlEdoublecOdoublegR(void *p);
   static void deleteArray_pairlEdoublecOdoublegR(void *p);
   static void destruct_pairlEdoublecOdoublegR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<double,double>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<double,double> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<double,double>", "prec_stl/utility", 10,
                  typeid(pair<double,double>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEdoublecOdoublegR_ShowMembers, &pairlEdoublecOdoublegR_Dictionary, &pairlEdoublecOdoublegR_IsA, 4,
                  sizeof(pair<double,double>) );
      instance.SetNew(&new_pairlEdoublecOdoublegR);
      instance.SetNewArray(&newArray_pairlEdoublecOdoublegR);
      instance.SetDelete(&delete_pairlEdoublecOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEdoublecOdoublegR);
      instance.SetDestructor(&destruct_pairlEdoublecOdoublegR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<double,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEdoublecOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<double,double>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEdoublecOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEdoublecOvoidmUgR_Dictionary();
   static TClass *pairlEdoublecOvoidmUgR_IsA(const void*);
   static void *new_pairlEdoublecOvoidmUgR(void *p = 0);
   static void *newArray_pairlEdoublecOvoidmUgR(Long_t size);
   static void delete_pairlEdoublecOvoidmUgR(void *p);
   static void deleteArray_pairlEdoublecOvoidmUgR(void *p);
   static void destruct_pairlEdoublecOvoidmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<double,void*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<double,void*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<double,void*>", "prec_stl/utility", 10,
                  typeid(pair<double,void*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEdoublecOvoidmUgR_ShowMembers, &pairlEdoublecOvoidmUgR_Dictionary, &pairlEdoublecOvoidmUgR_IsA, 4,
                  sizeof(pair<double,void*>) );
      instance.SetNew(&new_pairlEdoublecOvoidmUgR);
      instance.SetNewArray(&newArray_pairlEdoublecOvoidmUgR);
      instance.SetDelete(&delete_pairlEdoublecOvoidmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEdoublecOvoidmUgR);
      instance.SetDestructor(&destruct_pairlEdoublecOvoidmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<double,void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEdoublecOvoidmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<double,void*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEdoublecOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEdoublecOcharmUgR_Dictionary();
   static TClass *pairlEdoublecOcharmUgR_IsA(const void*);
   static void *new_pairlEdoublecOcharmUgR(void *p = 0);
   static void *newArray_pairlEdoublecOcharmUgR(Long_t size);
   static void delete_pairlEdoublecOcharmUgR(void *p);
   static void deleteArray_pairlEdoublecOcharmUgR(void *p);
   static void destruct_pairlEdoublecOcharmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<double,char*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<double,char*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<double,char*>", "prec_stl/utility", 10,
                  typeid(pair<double,char*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEdoublecOcharmUgR_ShowMembers, &pairlEdoublecOcharmUgR_Dictionary, &pairlEdoublecOcharmUgR_IsA, 4,
                  sizeof(pair<double,char*>) );
      instance.SetNew(&new_pairlEdoublecOcharmUgR);
      instance.SetNewArray(&newArray_pairlEdoublecOcharmUgR);
      instance.SetDelete(&delete_pairlEdoublecOcharmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEdoublecOcharmUgR);
      instance.SetDestructor(&destruct_pairlEdoublecOcharmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<double,char*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEdoublecOcharmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<double,char*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPcharmUcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPcharmUcOintgR_Dictionary();
   static TClass *pairlEconstsPcharmUcOintgR_IsA(const void*);
   static void *new_pairlEconstsPcharmUcOintgR(void *p = 0);
   static void *newArray_pairlEconstsPcharmUcOintgR(Long_t size);
   static void delete_pairlEconstsPcharmUcOintgR(void *p);
   static void deleteArray_pairlEconstsPcharmUcOintgR(void *p);
   static void destruct_pairlEconstsPcharmUcOintgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const char*,int>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const char*,int> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const char*,int>", "prec_stl/utility", 10,
                  typeid(pair<const char*,int>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPcharmUcOintgR_ShowMembers, &pairlEconstsPcharmUcOintgR_Dictionary, &pairlEconstsPcharmUcOintgR_IsA, 4,
                  sizeof(pair<const char*,int>) );
      instance.SetNew(&new_pairlEconstsPcharmUcOintgR);
      instance.SetNewArray(&newArray_pairlEconstsPcharmUcOintgR);
      instance.SetDelete(&delete_pairlEconstsPcharmUcOintgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPcharmUcOintgR);
      instance.SetDestructor(&destruct_pairlEconstsPcharmUcOintgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const char*,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPcharmUcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const char*,int>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPcharmUcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPcharmUcOlonggR_Dictionary();
   static TClass *pairlEconstsPcharmUcOlonggR_IsA(const void*);
   static void *new_pairlEconstsPcharmUcOlonggR(void *p = 0);
   static void *newArray_pairlEconstsPcharmUcOlonggR(Long_t size);
   static void delete_pairlEconstsPcharmUcOlonggR(void *p);
   static void deleteArray_pairlEconstsPcharmUcOlonggR(void *p);
   static void destruct_pairlEconstsPcharmUcOlonggR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const char*,long>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const char*,long> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const char*,long>", "prec_stl/utility", 10,
                  typeid(pair<const char*,long>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPcharmUcOlonggR_ShowMembers, &pairlEconstsPcharmUcOlonggR_Dictionary, &pairlEconstsPcharmUcOlonggR_IsA, 4,
                  sizeof(pair<const char*,long>) );
      instance.SetNew(&new_pairlEconstsPcharmUcOlonggR);
      instance.SetNewArray(&newArray_pairlEconstsPcharmUcOlonggR);
      instance.SetDelete(&delete_pairlEconstsPcharmUcOlonggR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPcharmUcOlonggR);
      instance.SetDestructor(&destruct_pairlEconstsPcharmUcOlonggR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const char*,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPcharmUcOlonggR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const char*,long>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPcharmUcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPcharmUcOfloatgR_Dictionary();
   static TClass *pairlEconstsPcharmUcOfloatgR_IsA(const void*);
   static void *new_pairlEconstsPcharmUcOfloatgR(void *p = 0);
   static void *newArray_pairlEconstsPcharmUcOfloatgR(Long_t size);
   static void delete_pairlEconstsPcharmUcOfloatgR(void *p);
   static void deleteArray_pairlEconstsPcharmUcOfloatgR(void *p);
   static void destruct_pairlEconstsPcharmUcOfloatgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const char*,float>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const char*,float> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const char*,float>", "prec_stl/utility", 10,
                  typeid(pair<const char*,float>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPcharmUcOfloatgR_ShowMembers, &pairlEconstsPcharmUcOfloatgR_Dictionary, &pairlEconstsPcharmUcOfloatgR_IsA, 4,
                  sizeof(pair<const char*,float>) );
      instance.SetNew(&new_pairlEconstsPcharmUcOfloatgR);
      instance.SetNewArray(&newArray_pairlEconstsPcharmUcOfloatgR);
      instance.SetDelete(&delete_pairlEconstsPcharmUcOfloatgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPcharmUcOfloatgR);
      instance.SetDestructor(&destruct_pairlEconstsPcharmUcOfloatgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const char*,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPcharmUcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const char*,float>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPcharmUcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPcharmUcOdoublegR_Dictionary();
   static TClass *pairlEconstsPcharmUcOdoublegR_IsA(const void*);
   static void *new_pairlEconstsPcharmUcOdoublegR(void *p = 0);
   static void *newArray_pairlEconstsPcharmUcOdoublegR(Long_t size);
   static void delete_pairlEconstsPcharmUcOdoublegR(void *p);
   static void deleteArray_pairlEconstsPcharmUcOdoublegR(void *p);
   static void destruct_pairlEconstsPcharmUcOdoublegR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const char*,double>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const char*,double> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const char*,double>", "prec_stl/utility", 10,
                  typeid(pair<const char*,double>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPcharmUcOdoublegR_ShowMembers, &pairlEconstsPcharmUcOdoublegR_Dictionary, &pairlEconstsPcharmUcOdoublegR_IsA, 4,
                  sizeof(pair<const char*,double>) );
      instance.SetNew(&new_pairlEconstsPcharmUcOdoublegR);
      instance.SetNewArray(&newArray_pairlEconstsPcharmUcOdoublegR);
      instance.SetDelete(&delete_pairlEconstsPcharmUcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPcharmUcOdoublegR);
      instance.SetDestructor(&destruct_pairlEconstsPcharmUcOdoublegR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const char*,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPcharmUcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const char*,double>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPcharmUcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPcharmUcOvoidmUgR_Dictionary();
   static TClass *pairlEconstsPcharmUcOvoidmUgR_IsA(const void*);
   static void *new_pairlEconstsPcharmUcOvoidmUgR(void *p = 0);
   static void *newArray_pairlEconstsPcharmUcOvoidmUgR(Long_t size);
   static void delete_pairlEconstsPcharmUcOvoidmUgR(void *p);
   static void deleteArray_pairlEconstsPcharmUcOvoidmUgR(void *p);
   static void destruct_pairlEconstsPcharmUcOvoidmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const char*,void*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const char*,void*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const char*,void*>", "prec_stl/utility", 10,
                  typeid(pair<const char*,void*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPcharmUcOvoidmUgR_ShowMembers, &pairlEconstsPcharmUcOvoidmUgR_Dictionary, &pairlEconstsPcharmUcOvoidmUgR_IsA, 4,
                  sizeof(pair<const char*,void*>) );
      instance.SetNew(&new_pairlEconstsPcharmUcOvoidmUgR);
      instance.SetNewArray(&newArray_pairlEconstsPcharmUcOvoidmUgR);
      instance.SetDelete(&delete_pairlEconstsPcharmUcOvoidmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPcharmUcOvoidmUgR);
      instance.SetDestructor(&destruct_pairlEconstsPcharmUcOvoidmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const char*,void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPcharmUcOvoidmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const char*,void*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPcharmUcOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPcharmUcOcharmUgR_Dictionary();
   static TClass *pairlEconstsPcharmUcOcharmUgR_IsA(const void*);
   static void *new_pairlEconstsPcharmUcOcharmUgR(void *p = 0);
   static void *newArray_pairlEconstsPcharmUcOcharmUgR(Long_t size);
   static void delete_pairlEconstsPcharmUcOcharmUgR(void *p);
   static void deleteArray_pairlEconstsPcharmUcOcharmUgR(void *p);
   static void destruct_pairlEconstsPcharmUcOcharmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const char*,char*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const char*,char*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const char*,char*>", "prec_stl/utility", 10,
                  typeid(pair<const char*,char*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPcharmUcOcharmUgR_ShowMembers, &pairlEconstsPcharmUcOcharmUgR_Dictionary, &pairlEconstsPcharmUcOcharmUgR_IsA, 4,
                  sizeof(pair<const char*,char*>) );
      instance.SetNew(&new_pairlEconstsPcharmUcOcharmUgR);
      instance.SetNewArray(&newArray_pairlEconstsPcharmUcOcharmUgR);
      instance.SetDelete(&delete_pairlEconstsPcharmUcOcharmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPcharmUcOcharmUgR);
      instance.SetDestructor(&destruct_pairlEconstsPcharmUcOcharmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const char*,char*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPcharmUcOcharmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const char*,char*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPstringcOintgR_Dictionary();
   static TClass *pairlEconstsPstringcOintgR_IsA(const void*);
   static void *new_pairlEconstsPstringcOintgR(void *p = 0);
   static void *newArray_pairlEconstsPstringcOintgR(Long_t size);
   static void delete_pairlEconstsPstringcOintgR(void *p);
   static void deleteArray_pairlEconstsPstringcOintgR(void *p);
   static void destruct_pairlEconstsPstringcOintgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const string,int>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const string,int> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const string,int>", "prec_stl/utility", 10,
                  typeid(pair<const string,int>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPstringcOintgR_ShowMembers, &pairlEconstsPstringcOintgR_Dictionary, &pairlEconstsPstringcOintgR_IsA, 4,
                  sizeof(pair<const string,int>) );
      instance.SetNew(&new_pairlEconstsPstringcOintgR);
      instance.SetNewArray(&newArray_pairlEconstsPstringcOintgR);
      instance.SetDelete(&delete_pairlEconstsPstringcOintgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPstringcOintgR);
      instance.SetDestructor(&destruct_pairlEconstsPstringcOintgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPstringcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const string,int>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPstringcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPstringcOlonggR_Dictionary();
   static TClass *pairlEconstsPstringcOlonggR_IsA(const void*);
   static void *new_pairlEconstsPstringcOlonggR(void *p = 0);
   static void *newArray_pairlEconstsPstringcOlonggR(Long_t size);
   static void delete_pairlEconstsPstringcOlonggR(void *p);
   static void deleteArray_pairlEconstsPstringcOlonggR(void *p);
   static void destruct_pairlEconstsPstringcOlonggR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const string,long>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const string,long> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const string,long>", "prec_stl/utility", 10,
                  typeid(pair<const string,long>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPstringcOlonggR_ShowMembers, &pairlEconstsPstringcOlonggR_Dictionary, &pairlEconstsPstringcOlonggR_IsA, 4,
                  sizeof(pair<const string,long>) );
      instance.SetNew(&new_pairlEconstsPstringcOlonggR);
      instance.SetNewArray(&newArray_pairlEconstsPstringcOlonggR);
      instance.SetDelete(&delete_pairlEconstsPstringcOlonggR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPstringcOlonggR);
      instance.SetDestructor(&destruct_pairlEconstsPstringcOlonggR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const string,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPstringcOlonggR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const string,long>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPstringcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPstringcOfloatgR_Dictionary();
   static TClass *pairlEconstsPstringcOfloatgR_IsA(const void*);
   static void *new_pairlEconstsPstringcOfloatgR(void *p = 0);
   static void *newArray_pairlEconstsPstringcOfloatgR(Long_t size);
   static void delete_pairlEconstsPstringcOfloatgR(void *p);
   static void deleteArray_pairlEconstsPstringcOfloatgR(void *p);
   static void destruct_pairlEconstsPstringcOfloatgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const string,float>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const string,float> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const string,float>", "prec_stl/utility", 10,
                  typeid(pair<const string,float>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPstringcOfloatgR_ShowMembers, &pairlEconstsPstringcOfloatgR_Dictionary, &pairlEconstsPstringcOfloatgR_IsA, 4,
                  sizeof(pair<const string,float>) );
      instance.SetNew(&new_pairlEconstsPstringcOfloatgR);
      instance.SetNewArray(&newArray_pairlEconstsPstringcOfloatgR);
      instance.SetDelete(&delete_pairlEconstsPstringcOfloatgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPstringcOfloatgR);
      instance.SetDestructor(&destruct_pairlEconstsPstringcOfloatgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const string,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPstringcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const string,float>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPstringcOdoublegR_Dictionary();
   static TClass *pairlEconstsPstringcOdoublegR_IsA(const void*);
   static void *new_pairlEconstsPstringcOdoublegR(void *p = 0);
   static void *newArray_pairlEconstsPstringcOdoublegR(Long_t size);
   static void delete_pairlEconstsPstringcOdoublegR(void *p);
   static void deleteArray_pairlEconstsPstringcOdoublegR(void *p);
   static void destruct_pairlEconstsPstringcOdoublegR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const string,double>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const string,double> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const string,double>", "prec_stl/utility", 10,
                  typeid(pair<const string,double>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPstringcOdoublegR_ShowMembers, &pairlEconstsPstringcOdoublegR_Dictionary, &pairlEconstsPstringcOdoublegR_IsA, 4,
                  sizeof(pair<const string,double>) );
      instance.SetNew(&new_pairlEconstsPstringcOdoublegR);
      instance.SetNewArray(&newArray_pairlEconstsPstringcOdoublegR);
      instance.SetDelete(&delete_pairlEconstsPstringcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPstringcOdoublegR);
      instance.SetDestructor(&destruct_pairlEconstsPstringcOdoublegR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const string,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPstringcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const string,double>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPstringcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPstringcOvoidmUgR_Dictionary();
   static TClass *pairlEconstsPstringcOvoidmUgR_IsA(const void*);
   static void *new_pairlEconstsPstringcOvoidmUgR(void *p = 0);
   static void *newArray_pairlEconstsPstringcOvoidmUgR(Long_t size);
   static void delete_pairlEconstsPstringcOvoidmUgR(void *p);
   static void deleteArray_pairlEconstsPstringcOvoidmUgR(void *p);
   static void destruct_pairlEconstsPstringcOvoidmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const string,void*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const string,void*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const string,void*>", "prec_stl/utility", 10,
                  typeid(pair<const string,void*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPstringcOvoidmUgR_ShowMembers, &pairlEconstsPstringcOvoidmUgR_Dictionary, &pairlEconstsPstringcOvoidmUgR_IsA, 4,
                  sizeof(pair<const string,void*>) );
      instance.SetNew(&new_pairlEconstsPstringcOvoidmUgR);
      instance.SetNewArray(&newArray_pairlEconstsPstringcOvoidmUgR);
      instance.SetDelete(&delete_pairlEconstsPstringcOvoidmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPstringcOvoidmUgR);
      instance.SetDestructor(&destruct_pairlEconstsPstringcOvoidmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const string,void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPstringcOvoidmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const string,void*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPlongcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPlongcOintgR_Dictionary();
   static TClass *pairlEconstsPlongcOintgR_IsA(const void*);
   static void *new_pairlEconstsPlongcOintgR(void *p = 0);
   static void *newArray_pairlEconstsPlongcOintgR(Long_t size);
   static void delete_pairlEconstsPlongcOintgR(void *p);
   static void deleteArray_pairlEconstsPlongcOintgR(void *p);
   static void destruct_pairlEconstsPlongcOintgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const long,int>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const long,int> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const long,int>", "prec_stl/utility", 10,
                  typeid(pair<const long,int>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPlongcOintgR_ShowMembers, &pairlEconstsPlongcOintgR_Dictionary, &pairlEconstsPlongcOintgR_IsA, 4,
                  sizeof(pair<const long,int>) );
      instance.SetNew(&new_pairlEconstsPlongcOintgR);
      instance.SetNewArray(&newArray_pairlEconstsPlongcOintgR);
      instance.SetDelete(&delete_pairlEconstsPlongcOintgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPlongcOintgR);
      instance.SetDestructor(&destruct_pairlEconstsPlongcOintgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const long,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPlongcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const long,int>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPlongcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPlongcOlonggR_Dictionary();
   static TClass *pairlEconstsPlongcOlonggR_IsA(const void*);
   static void *new_pairlEconstsPlongcOlonggR(void *p = 0);
   static void *newArray_pairlEconstsPlongcOlonggR(Long_t size);
   static void delete_pairlEconstsPlongcOlonggR(void *p);
   static void deleteArray_pairlEconstsPlongcOlonggR(void *p);
   static void destruct_pairlEconstsPlongcOlonggR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const long,long>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const long,long> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const long,long>", "prec_stl/utility", 10,
                  typeid(pair<const long,long>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPlongcOlonggR_ShowMembers, &pairlEconstsPlongcOlonggR_Dictionary, &pairlEconstsPlongcOlonggR_IsA, 4,
                  sizeof(pair<const long,long>) );
      instance.SetNew(&new_pairlEconstsPlongcOlonggR);
      instance.SetNewArray(&newArray_pairlEconstsPlongcOlonggR);
      instance.SetDelete(&delete_pairlEconstsPlongcOlonggR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPlongcOlonggR);
      instance.SetDestructor(&destruct_pairlEconstsPlongcOlonggR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const long,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPlongcOlonggR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const long,long>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPlongcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPlongcOfloatgR_Dictionary();
   static TClass *pairlEconstsPlongcOfloatgR_IsA(const void*);
   static void *new_pairlEconstsPlongcOfloatgR(void *p = 0);
   static void *newArray_pairlEconstsPlongcOfloatgR(Long_t size);
   static void delete_pairlEconstsPlongcOfloatgR(void *p);
   static void deleteArray_pairlEconstsPlongcOfloatgR(void *p);
   static void destruct_pairlEconstsPlongcOfloatgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const long,float>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const long,float> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const long,float>", "prec_stl/utility", 10,
                  typeid(pair<const long,float>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPlongcOfloatgR_ShowMembers, &pairlEconstsPlongcOfloatgR_Dictionary, &pairlEconstsPlongcOfloatgR_IsA, 4,
                  sizeof(pair<const long,float>) );
      instance.SetNew(&new_pairlEconstsPlongcOfloatgR);
      instance.SetNewArray(&newArray_pairlEconstsPlongcOfloatgR);
      instance.SetDelete(&delete_pairlEconstsPlongcOfloatgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPlongcOfloatgR);
      instance.SetDestructor(&destruct_pairlEconstsPlongcOfloatgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const long,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPlongcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const long,float>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPlongcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPlongcOdoublegR_Dictionary();
   static TClass *pairlEconstsPlongcOdoublegR_IsA(const void*);
   static void *new_pairlEconstsPlongcOdoublegR(void *p = 0);
   static void *newArray_pairlEconstsPlongcOdoublegR(Long_t size);
   static void delete_pairlEconstsPlongcOdoublegR(void *p);
   static void deleteArray_pairlEconstsPlongcOdoublegR(void *p);
   static void destruct_pairlEconstsPlongcOdoublegR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const long,double>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const long,double> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const long,double>", "prec_stl/utility", 10,
                  typeid(pair<const long,double>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPlongcOdoublegR_ShowMembers, &pairlEconstsPlongcOdoublegR_Dictionary, &pairlEconstsPlongcOdoublegR_IsA, 4,
                  sizeof(pair<const long,double>) );
      instance.SetNew(&new_pairlEconstsPlongcOdoublegR);
      instance.SetNewArray(&newArray_pairlEconstsPlongcOdoublegR);
      instance.SetDelete(&delete_pairlEconstsPlongcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPlongcOdoublegR);
      instance.SetDestructor(&destruct_pairlEconstsPlongcOdoublegR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const long,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPlongcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const long,double>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPlongcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPlongcOvoidmUgR_Dictionary();
   static TClass *pairlEconstsPlongcOvoidmUgR_IsA(const void*);
   static void *new_pairlEconstsPlongcOvoidmUgR(void *p = 0);
   static void *newArray_pairlEconstsPlongcOvoidmUgR(Long_t size);
   static void delete_pairlEconstsPlongcOvoidmUgR(void *p);
   static void deleteArray_pairlEconstsPlongcOvoidmUgR(void *p);
   static void destruct_pairlEconstsPlongcOvoidmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const long,void*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const long,void*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const long,void*>", "prec_stl/utility", 10,
                  typeid(pair<const long,void*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPlongcOvoidmUgR_ShowMembers, &pairlEconstsPlongcOvoidmUgR_Dictionary, &pairlEconstsPlongcOvoidmUgR_IsA, 4,
                  sizeof(pair<const long,void*>) );
      instance.SetNew(&new_pairlEconstsPlongcOvoidmUgR);
      instance.SetNewArray(&newArray_pairlEconstsPlongcOvoidmUgR);
      instance.SetDelete(&delete_pairlEconstsPlongcOvoidmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPlongcOvoidmUgR);
      instance.SetDestructor(&destruct_pairlEconstsPlongcOvoidmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const long,void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPlongcOvoidmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const long,void*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPlongcOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPlongcOcharmUgR_Dictionary();
   static TClass *pairlEconstsPlongcOcharmUgR_IsA(const void*);
   static void *new_pairlEconstsPlongcOcharmUgR(void *p = 0);
   static void *newArray_pairlEconstsPlongcOcharmUgR(Long_t size);
   static void delete_pairlEconstsPlongcOcharmUgR(void *p);
   static void deleteArray_pairlEconstsPlongcOcharmUgR(void *p);
   static void destruct_pairlEconstsPlongcOcharmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const long,char*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const long,char*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const long,char*>", "prec_stl/utility", 10,
                  typeid(pair<const long,char*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPlongcOcharmUgR_ShowMembers, &pairlEconstsPlongcOcharmUgR_Dictionary, &pairlEconstsPlongcOcharmUgR_IsA, 4,
                  sizeof(pair<const long,char*>) );
      instance.SetNew(&new_pairlEconstsPlongcOcharmUgR);
      instance.SetNewArray(&newArray_pairlEconstsPlongcOcharmUgR);
      instance.SetDelete(&delete_pairlEconstsPlongcOcharmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPlongcOcharmUgR);
      instance.SetDestructor(&destruct_pairlEconstsPlongcOcharmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const long,char*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPlongcOcharmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const long,char*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPdoublecOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPdoublecOintgR_Dictionary();
   static TClass *pairlEconstsPdoublecOintgR_IsA(const void*);
   static void *new_pairlEconstsPdoublecOintgR(void *p = 0);
   static void *newArray_pairlEconstsPdoublecOintgR(Long_t size);
   static void delete_pairlEconstsPdoublecOintgR(void *p);
   static void deleteArray_pairlEconstsPdoublecOintgR(void *p);
   static void destruct_pairlEconstsPdoublecOintgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const double,int>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const double,int> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const double,int>", "prec_stl/utility", 10,
                  typeid(pair<const double,int>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPdoublecOintgR_ShowMembers, &pairlEconstsPdoublecOintgR_Dictionary, &pairlEconstsPdoublecOintgR_IsA, 4,
                  sizeof(pair<const double,int>) );
      instance.SetNew(&new_pairlEconstsPdoublecOintgR);
      instance.SetNewArray(&newArray_pairlEconstsPdoublecOintgR);
      instance.SetDelete(&delete_pairlEconstsPdoublecOintgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPdoublecOintgR);
      instance.SetDestructor(&destruct_pairlEconstsPdoublecOintgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const double,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPdoublecOintgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const double,int>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPdoublecOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPdoublecOlonggR_Dictionary();
   static TClass *pairlEconstsPdoublecOlonggR_IsA(const void*);
   static void *new_pairlEconstsPdoublecOlonggR(void *p = 0);
   static void *newArray_pairlEconstsPdoublecOlonggR(Long_t size);
   static void delete_pairlEconstsPdoublecOlonggR(void *p);
   static void deleteArray_pairlEconstsPdoublecOlonggR(void *p);
   static void destruct_pairlEconstsPdoublecOlonggR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const double,long>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const double,long> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const double,long>", "prec_stl/utility", 10,
                  typeid(pair<const double,long>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPdoublecOlonggR_ShowMembers, &pairlEconstsPdoublecOlonggR_Dictionary, &pairlEconstsPdoublecOlonggR_IsA, 4,
                  sizeof(pair<const double,long>) );
      instance.SetNew(&new_pairlEconstsPdoublecOlonggR);
      instance.SetNewArray(&newArray_pairlEconstsPdoublecOlonggR);
      instance.SetDelete(&delete_pairlEconstsPdoublecOlonggR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPdoublecOlonggR);
      instance.SetDestructor(&destruct_pairlEconstsPdoublecOlonggR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const double,long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPdoublecOlonggR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const double,long>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPdoublecOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPdoublecOfloatgR_Dictionary();
   static TClass *pairlEconstsPdoublecOfloatgR_IsA(const void*);
   static void *new_pairlEconstsPdoublecOfloatgR(void *p = 0);
   static void *newArray_pairlEconstsPdoublecOfloatgR(Long_t size);
   static void delete_pairlEconstsPdoublecOfloatgR(void *p);
   static void deleteArray_pairlEconstsPdoublecOfloatgR(void *p);
   static void destruct_pairlEconstsPdoublecOfloatgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const double,float>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const double,float> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const double,float>", "prec_stl/utility", 10,
                  typeid(pair<const double,float>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPdoublecOfloatgR_ShowMembers, &pairlEconstsPdoublecOfloatgR_Dictionary, &pairlEconstsPdoublecOfloatgR_IsA, 4,
                  sizeof(pair<const double,float>) );
      instance.SetNew(&new_pairlEconstsPdoublecOfloatgR);
      instance.SetNewArray(&newArray_pairlEconstsPdoublecOfloatgR);
      instance.SetDelete(&delete_pairlEconstsPdoublecOfloatgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPdoublecOfloatgR);
      instance.SetDestructor(&destruct_pairlEconstsPdoublecOfloatgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const double,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPdoublecOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const double,float>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPdoublecOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPdoublecOdoublegR_Dictionary();
   static TClass *pairlEconstsPdoublecOdoublegR_IsA(const void*);
   static void *new_pairlEconstsPdoublecOdoublegR(void *p = 0);
   static void *newArray_pairlEconstsPdoublecOdoublegR(Long_t size);
   static void delete_pairlEconstsPdoublecOdoublegR(void *p);
   static void deleteArray_pairlEconstsPdoublecOdoublegR(void *p);
   static void destruct_pairlEconstsPdoublecOdoublegR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const double,double>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const double,double> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const double,double>", "prec_stl/utility", 10,
                  typeid(pair<const double,double>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPdoublecOdoublegR_ShowMembers, &pairlEconstsPdoublecOdoublegR_Dictionary, &pairlEconstsPdoublecOdoublegR_IsA, 4,
                  sizeof(pair<const double,double>) );
      instance.SetNew(&new_pairlEconstsPdoublecOdoublegR);
      instance.SetNewArray(&newArray_pairlEconstsPdoublecOdoublegR);
      instance.SetDelete(&delete_pairlEconstsPdoublecOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPdoublecOdoublegR);
      instance.SetDestructor(&destruct_pairlEconstsPdoublecOdoublegR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const double,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPdoublecOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const double,double>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPdoublecOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPdoublecOvoidmUgR_Dictionary();
   static TClass *pairlEconstsPdoublecOvoidmUgR_IsA(const void*);
   static void *new_pairlEconstsPdoublecOvoidmUgR(void *p = 0);
   static void *newArray_pairlEconstsPdoublecOvoidmUgR(Long_t size);
   static void delete_pairlEconstsPdoublecOvoidmUgR(void *p);
   static void deleteArray_pairlEconstsPdoublecOvoidmUgR(void *p);
   static void destruct_pairlEconstsPdoublecOvoidmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const double,void*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const double,void*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const double,void*>", "prec_stl/utility", 10,
                  typeid(pair<const double,void*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPdoublecOvoidmUgR_ShowMembers, &pairlEconstsPdoublecOvoidmUgR_Dictionary, &pairlEconstsPdoublecOvoidmUgR_IsA, 4,
                  sizeof(pair<const double,void*>) );
      instance.SetNew(&new_pairlEconstsPdoublecOvoidmUgR);
      instance.SetNewArray(&newArray_pairlEconstsPdoublecOvoidmUgR);
      instance.SetDelete(&delete_pairlEconstsPdoublecOvoidmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPdoublecOvoidmUgR);
      instance.SetDestructor(&destruct_pairlEconstsPdoublecOvoidmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const double,void*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPdoublecOvoidmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const double,void*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void pairlEconstsPdoublecOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void pairlEconstsPdoublecOcharmUgR_Dictionary();
   static TClass *pairlEconstsPdoublecOcharmUgR_IsA(const void*);
   static void *new_pairlEconstsPdoublecOcharmUgR(void *p = 0);
   static void *newArray_pairlEconstsPdoublecOcharmUgR(Long_t size);
   static void delete_pairlEconstsPdoublecOcharmUgR(void *p);
   static void deleteArray_pairlEconstsPdoublecOcharmUgR(void *p);
   static void destruct_pairlEconstsPdoublecOcharmUgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const pair<const double,char*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<const double,char*> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("pair<const double,char*>", "prec_stl/utility", 10,
                  typeid(pair<const double,char*>), DefineBehavior(ptr, ptr),
                  (void*)&pairlEconstsPdoublecOcharmUgR_ShowMembers, &pairlEconstsPdoublecOcharmUgR_Dictionary, &pairlEconstsPdoublecOcharmUgR_IsA, 4,
                  sizeof(pair<const double,char*>) );
      instance.SetNew(&new_pairlEconstsPdoublecOcharmUgR);
      instance.SetNewArray(&newArray_pairlEconstsPdoublecOcharmUgR);
      instance.SetDelete(&delete_pairlEconstsPdoublecOcharmUgR);
      instance.SetDeleteArray(&deleteArray_pairlEconstsPdoublecOcharmUgR);
      instance.SetDestructor(&destruct_pairlEconstsPdoublecOcharmUgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const pair<const double,char*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEconstsPdoublecOcharmUgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const pair<const double,char*>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void TParameterlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void TParameterlEdoublegR_Dictionary();
   static TClass *TParameterlEdoublegR_IsA(const void*);
   static void *new_TParameterlEdoublegR(void *p = 0);
   static void *newArray_TParameterlEdoublegR(Long_t size);
   static void delete_TParameterlEdoublegR(void *p);
   static void deleteArray_TParameterlEdoublegR(void *p);
   static void destruct_TParameterlEdoublegR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TParameter<double>*)
   {
      // Make sure the shadow class has the right sizeof
      Assert(sizeof(::TParameter<double>) == sizeof(::ROOT::Shadow::TParameterlEdoublegR));
      ::TParameter<double> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TParameter<double>", ::TParameter<double>::Class_Version(), "base/inc/TParameter.h", 35,
                  typeid(::TParameter<double>), DefineBehavior(ptr, ptr),
                  (void*)&TParameterlEdoublegR_ShowMembers, &TParameterlEdoublegR_Dictionary, &TParameterlEdoublegR_IsA, 4,
                  sizeof(::TParameter<double>) );
      instance.SetNew(&new_TParameterlEdoublegR);
      instance.SetNewArray(&newArray_TParameterlEdoublegR);
      instance.SetDelete(&delete_TParameterlEdoublegR);
      instance.SetDeleteArray(&deleteArray_TParameterlEdoublegR);
      instance.SetDestructor(&destruct_TParameterlEdoublegR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TParameter<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TParameterlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::TParameter<double>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void TParameterlElonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void TParameterlElonggR_Dictionary();
   static TClass *TParameterlElonggR_IsA(const void*);
   static void *new_TParameterlElonggR(void *p = 0);
   static void *newArray_TParameterlElonggR(Long_t size);
   static void delete_TParameterlElonggR(void *p);
   static void deleteArray_TParameterlElonggR(void *p);
   static void destruct_TParameterlElonggR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TParameter<long>*)
   {
      // Make sure the shadow class has the right sizeof
      Assert(sizeof(::TParameter<long>) == sizeof(::ROOT::Shadow::TParameterlElonggR));
      ::TParameter<long> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TParameter<long>", ::TParameter<long>::Class_Version(), "base/inc/TParameter.h", 35,
                  typeid(::TParameter<long>), DefineBehavior(ptr, ptr),
                  (void*)&TParameterlElonggR_ShowMembers, &TParameterlElonggR_Dictionary, &TParameterlElonggR_IsA, 4,
                  sizeof(::TParameter<long>) );
      instance.SetNew(&new_TParameterlElonggR);
      instance.SetNewArray(&newArray_TParameterlElonggR);
      instance.SetDelete(&delete_TParameterlElonggR);
      instance.SetDeleteArray(&deleteArray_TParameterlElonggR);
      instance.SetDestructor(&destruct_TParameterlElonggR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TParameter<long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TParameterlElonggR_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::TParameter<long>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void TParameterlELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void TParameterlELong64_tgR_Dictionary();
   static TClass *TParameterlELong64_tgR_IsA(const void*);
   static void *new_TParameterlELong64_tgR(void *p = 0);
   static void *newArray_TParameterlELong64_tgR(Long_t size);
   static void delete_TParameterlELong64_tgR(void *p);
   static void deleteArray_TParameterlELong64_tgR(void *p);
   static void destruct_TParameterlELong64_tgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TParameter<Long64_t>*)
   {
      // Make sure the shadow class has the right sizeof
      Assert(sizeof(::TParameter<Long64_t>) == sizeof(::ROOT::Shadow::TParameterlElongsPlonggR));
      ::TParameter<Long64_t> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TParameter<Long64_t>", ::TParameter<Long64_t>::Class_Version(), "base/inc/TParameter.h", 35,
                  typeid(::TParameter<Long64_t>), DefineBehavior(ptr, ptr),
                  (void*)&TParameterlELong64_tgR_ShowMembers, &TParameterlELong64_tgR_Dictionary, &TParameterlELong64_tgR_IsA, 4,
                  sizeof(::TParameter<Long64_t>) );
      instance.SetNew(&new_TParameterlELong64_tgR);
      instance.SetNewArray(&newArray_TParameterlELong64_tgR);
      instance.SetDelete(&delete_TParameterlELong64_tgR);
      instance.SetDeleteArray(&deleteArray_TParameterlELong64_tgR);
      instance.SetDestructor(&destruct_TParameterlELong64_tgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TParameter<Long64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TParameterlELong64_tgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::TParameter<Long64_t>*)0x0)->GetClass();
   }

}

//______________________________________________________________________________
TClass *TVirtualProof::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVirtualProof::Class_Name()
{
   return "TVirtualProof";
}

//______________________________________________________________________________
const char *TVirtualProof::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualProof*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVirtualProof::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualProof*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVirtualProof::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualProof*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVirtualProof::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualProof*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTimeStamp::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTimeStamp::Class_Name()
{
   return "TTimeStamp";
}

//______________________________________________________________________________
const char *TTimeStamp::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TTimeStamp*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTimeStamp::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TTimeStamp*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTimeStamp::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TTimeStamp*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTimeStamp::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TTimeStamp*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVirtualMutex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVirtualMutex::Class_Name()
{
   return "TVirtualMutex";
}

//______________________________________________________________________________
const char *TVirtualMutex::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualMutex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVirtualMutex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualMutex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVirtualMutex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualMutex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVirtualMutex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualMutex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLockGuard::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLockGuard::Class_Name()
{
   return "TLockGuard";
}

//______________________________________________________________________________
const char *TLockGuard::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLockGuard*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLockGuard::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLockGuard*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLockGuard::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLockGuard*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLockGuard::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLockGuard*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArchiveFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArchiveFile::Class_Name()
{
   return "TArchiveFile";
}

//______________________________________________________________________________
const char *TArchiveFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TArchiveFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArchiveFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TArchiveFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArchiveFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TArchiveFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArchiveFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TArchiveFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVirtualPerfStats::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVirtualPerfStats::Class_Name()
{
   return "TVirtualPerfStats";
}

//______________________________________________________________________________
const char *TVirtualPerfStats::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualPerfStats*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVirtualPerfStats::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualPerfStats*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVirtualPerfStats::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualPerfStats*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVirtualPerfStats::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualPerfStats*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArchiveMember::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArchiveMember::Class_Name()
{
   return "TArchiveMember";
}

//______________________________________________________________________________
const char *TArchiveMember::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TArchiveMember*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArchiveMember::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TArchiveMember*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArchiveMember::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TArchiveMember*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArchiveMember::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TArchiveMember*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TZIPMember::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TZIPMember::Class_Name()
{
   return "TZIPMember";
}

//______________________________________________________________________________
const char *TZIPMember::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TZIPMember*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TZIPMember::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TZIPMember*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TZIPMember::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TZIPMember*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TZIPMember::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TZIPMember*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TZIPFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TZIPFile::Class_Name()
{
   return "TZIPFile";
}

//______________________________________________________________________________
const char *TZIPFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TZIPFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TZIPFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TZIPFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TZIPFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TZIPFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TZIPFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TZIPFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TParameter<double>::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TParameter<double>::Class_Name()
{
   return "TParameter<double>";
}

//______________________________________________________________________________
template <> const char *TParameter<double>::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TParameter<double>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TParameter<double>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TParameter<double>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void TParameter<double>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TParameter<double>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *TParameter<double>::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TParameter<double>*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TParameter<long>::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TParameter<long>::Class_Name()
{
   return "TParameter<long>";
}

//______________________________________________________________________________
template <> const char *TParameter<long>::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TParameter<long>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TParameter<long>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TParameter<long>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void TParameter<long>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TParameter<long>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *TParameter<long>::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TParameter<long>*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TParameter<long long>::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TParameter<long long>::Class_Name()
{
   return "TParameter<long long>";
}

//______________________________________________________________________________
template <> const char *TParameter<long long>::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TParameter<long long>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TParameter<long long>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TParameter<long long>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void TParameter<long long>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TParameter<long long>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *TParameter<long long>::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TParameter<long long>*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TArchiveFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArchiveFile.

   if (R__b.IsReading()) {
      TArchiveFile::Class()->ReadBuffer(R__b, this);
   } else {
      TArchiveFile::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TArchiveFile::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TArchiveFile.

      TClass *R__cl = ::TArchiveFile::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fArchiveName", &fArchiveName);
      fArchiveName.ShowMembers(R__insp, strcat(R__parent,"fArchiveName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMemberName", &fMemberName);
      fMemberName.ShowMembers(R__insp, strcat(R__parent,"fMemberName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMemberIndex", &fMemberIndex);
      R__insp.Inspect(R__cl, R__parent, "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__parent, "*fMembers", &fMembers);
      R__insp.Inspect(R__cl, R__parent, "*fCurMember", &fCurMember);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TArchiveFile_IsA(const void *obj) {
      return ((::TArchiveFile*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TArchiveFile(void *p) {
      delete ((::TArchiveFile*)p);
   }
   static void deleteArray_TArchiveFile(void *p) {
      delete [] ((::TArchiveFile*)p);
   }
   static void destruct_TArchiveFile(void *p) {
      typedef ::TArchiveFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArchiveFile

//______________________________________________________________________________
void TArchiveMember::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArchiveMember.

   if (R__b.IsReading()) {
      TArchiveMember::Class()->ReadBuffer(R__b, this);
   } else {
      TArchiveMember::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TArchiveMember::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TArchiveMember.

      TClass *R__cl = ::TArchiveMember::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fComment", &fComment);
      fComment.ShowMembers(R__insp, strcat(R__parent,"fComment.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fModTime", &fModTime);
      fModTime.ShowMembers(R__insp, strcat(R__parent,"fModTime.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPosition", &fPosition);
      R__insp.Inspect(R__cl, R__parent, "fFilePosition", &fFilePosition);
      R__insp.Inspect(R__cl, R__parent, "fCsize", &fCsize);
      R__insp.Inspect(R__cl, R__parent, "fDsize", &fDsize);
      R__insp.Inspect(R__cl, R__parent, "fDirectory", &fDirectory);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TArchiveMember_IsA(const void *obj) {
      return ((::TArchiveMember*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TArchiveMember(void *p) {
      return  p ? new(p) ::TArchiveMember : new ::TArchiveMember;
   }
   static void *newArray_TArchiveMember(Long_t size) {
      return new ::TArchiveMember[size];
   }
   // Wrapper around operator delete
   static void delete_TArchiveMember(void *p) {
      delete ((::TArchiveMember*)p);
   }
   static void deleteArray_TArchiveMember(void *p) {
      delete [] ((::TArchiveMember*)p);
   }
   static void destruct_TArchiveMember(void *p) {
      typedef ::TArchiveMember current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArchiveMember

//______________________________________________________________________________
void TZIPFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TZIPFile.

   if (R__b.IsReading()) {
      TZIPFile::Class()->ReadBuffer(R__b, this);
   } else {
      TZIPFile::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TZIPFile::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TZIPFile.

      TClass *R__cl = ::TZIPFile::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDirPos", &fDirPos);
      R__insp.Inspect(R__cl, R__parent, "fDirSize", &fDirSize);
      R__insp.Inspect(R__cl, R__parent, "fDirOffset", &fDirOffset);
      R__insp.Inspect(R__cl, R__parent, "fComment", &fComment);
      fComment.ShowMembers(R__insp, strcat(R__parent,"fComment.")); R__parent[R__ncp] = 0;
      TArchiveFile::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TZIPFile_IsA(const void *obj) {
      return ((::TZIPFile*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TZIPFile(void *p) {
      return  p ? new(p) ::TZIPFile : new ::TZIPFile;
   }
   static void *newArray_TZIPFile(Long_t size) {
      return new ::TZIPFile[size];
   }
   // Wrapper around operator delete
   static void delete_TZIPFile(void *p) {
      delete ((::TZIPFile*)p);
   }
   static void deleteArray_TZIPFile(void *p) {
      delete [] ((::TZIPFile*)p);
   }
   static void destruct_TZIPFile(void *p) {
      typedef ::TZIPFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TZIPFile

//______________________________________________________________________________
void TZIPMember::Streamer(TBuffer &R__b)
{
   // Stream an object of class TZIPMember.

   if (R__b.IsReading()) {
      TZIPMember::Class()->ReadBuffer(R__b, this);
   } else {
      TZIPMember::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TZIPMember::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TZIPMember.

      TClass *R__cl = ::TZIPMember::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fLocal", &fLocal);
      R__insp.Inspect(R__cl, R__parent, "fLocalLen", &fLocalLen);
      R__insp.Inspect(R__cl, R__parent, "*fGlobal", &fGlobal);
      R__insp.Inspect(R__cl, R__parent, "fGlobalLen", &fGlobalLen);
      R__insp.Inspect(R__cl, R__parent, "fCRC32", &fCRC32);
      R__insp.Inspect(R__cl, R__parent, "fAttrInt", &fAttrInt);
      R__insp.Inspect(R__cl, R__parent, "fAttrExt", &fAttrExt);
      R__insp.Inspect(R__cl, R__parent, "fMethod", &fMethod);
      R__insp.Inspect(R__cl, R__parent, "fLevel", &fLevel);
      TArchiveMember::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TZIPMember_IsA(const void *obj) {
      return ((::TZIPMember*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TZIPMember(void *p) {
      return  p ? new(p) ::TZIPMember : new ::TZIPMember;
   }
   static void *newArray_TZIPMember(Long_t size) {
      return new ::TZIPMember[size];
   }
   // Wrapper around operator delete
   static void delete_TZIPMember(void *p) {
      delete ((::TZIPMember*)p);
   }
   static void deleteArray_TZIPMember(void *p) {
      delete [] ((::TZIPMember*)p);
   }
   static void destruct_TZIPMember(void *p) {
      typedef ::TZIPMember current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TZIPMember

//______________________________________________________________________________
void TTimeStamp::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTimeStamp.

   if (R__b.IsReading()) {
      TTimeStamp::Class()->ReadBuffer(R__b, this);
   } else {
      TTimeStamp::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TTimeStamp::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTimeStamp.

      TClass *R__cl = ::TTimeStamp::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fSec", &fSec);
      R__insp.Inspect(R__cl, R__parent, "fNanoSec", &fNanoSec);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TTimeStamp_IsA(const void *obj) {
      return ((::TTimeStamp*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TTimeStamp(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TTimeStamp : new ::TTimeStamp;
   }
   static void *newArray_TTimeStamp(Long_t size) {
      return new ::TTimeStamp[size];
   }
   // Wrapper around operator delete
   static void delete_TTimeStamp(void *p) {
      delete ((::TTimeStamp*)p);
   }
   static void deleteArray_TTimeStamp(void *p) {
      delete [] ((::TTimeStamp*)p);
   }
   static void destruct_TTimeStamp(void *p) {
      typedef ::TTimeStamp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTimeStamp

//______________________________________________________________________________
void TVirtualMutex::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVirtualMutex.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TVirtualMutex::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVirtualMutex.

      TClass *R__cl = ::TVirtualMutex::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TVirtualMutex_IsA(const void *obj) {
      return ((::TVirtualMutex*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TVirtualMutex(void *p) {
      return  p ? new(p) ::TVirtualMutex : new ::TVirtualMutex;
   }
   static void *newArray_TVirtualMutex(Long_t size) {
      return new ::TVirtualMutex[size];
   }
   // Wrapper around operator delete
   static void delete_TVirtualMutex(void *p) {
      delete ((::TVirtualMutex*)p);
   }
   static void deleteArray_TVirtualMutex(void *p) {
      delete [] ((::TVirtualMutex*)p);
   }
   static void destruct_TVirtualMutex(void *p) {
      typedef ::TVirtualMutex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVirtualMutex

//______________________________________________________________________________
void TLockGuard::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLockGuard.

   ::Error("TLockGuard::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TLockGuard::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLockGuard.

      TClass *R__cl = ::TLockGuard::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMutex", &fMutex);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLockGuard_IsA(const void *obj) {
      return ((::TLockGuard*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TLockGuard(void *p) {
      delete ((::TLockGuard*)p);
   }
   static void deleteArray_TLockGuard(void *p) {
      delete [] ((::TLockGuard*)p);
   }
   static void destruct_TLockGuard(void *p) {
      typedef ::TLockGuard current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLockGuard

//______________________________________________________________________________
void TVirtualProof::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVirtualProof.

   TObject::Streamer(R__b);
   TQObject::Streamer(R__b);
}

//______________________________________________________________________________
void TVirtualProof::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVirtualProof.

      TClass *R__cl = ::TVirtualProof::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
      TQObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TVirtualProof_IsA(const void *obj) {
      return ((::TVirtualProof*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TVirtualProof(void *p) {
      delete ((::TVirtualProof*)p);
   }
   static void deleteArray_TVirtualProof(void *p) {
      delete [] ((::TVirtualProof*)p);
   }
   static void destruct_TVirtualProof(void *p) {
      typedef ::TVirtualProof current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVirtualProof

//______________________________________________________________________________
void TVirtualPerfStats::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVirtualPerfStats.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TVirtualPerfStats::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVirtualPerfStats.

      TClass *R__cl = ::TVirtualPerfStats::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TVirtualPerfStats_IsA(const void *obj) {
      return ((::TVirtualPerfStats*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TVirtualPerfStats(void *p) {
      delete ((::TVirtualPerfStats*)p);
   }
   static void deleteArray_TVirtualPerfStats(void *p) {
      delete [] ((::TVirtualPerfStats*)p);
   }
   static void destruct_TVirtualPerfStats(void *p) {
      typedef ::TVirtualPerfStats current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVirtualPerfStats

//______________________________________________________________________________
namespace ROOT {
   void pairlEcharmUcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<char*,int>.

      typedef ::ROOT::Shadow::pairlEcharmUcOintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<char*,int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEcharmUcOintgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<char*,int>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEcharmUcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<char*,int> : new pair<char*,int>;
   }
   static void *newArray_pairlEcharmUcOintgR(Long_t size) {
      return new pair<char*,int>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEcharmUcOintgR(void *p) {
      delete ((pair<char*,int>*)p);
   }
   static void deleteArray_pairlEcharmUcOintgR(void *p) {
      delete [] ((pair<char*,int>*)p);
   }
   static void destruct_pairlEcharmUcOintgR(void *p) {
      typedef pair<char*,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<char*,int>

//______________________________________________________________________________
namespace ROOT {
   void pairlEcharmUcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<char*,long>.

      typedef ::ROOT::Shadow::pairlEcharmUcOlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<char*,long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEcharmUcOlonggR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<char*,long>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEcharmUcOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<char*,long> : new pair<char*,long>;
   }
   static void *newArray_pairlEcharmUcOlonggR(Long_t size) {
      return new pair<char*,long>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEcharmUcOlonggR(void *p) {
      delete ((pair<char*,long>*)p);
   }
   static void deleteArray_pairlEcharmUcOlonggR(void *p) {
      delete [] ((pair<char*,long>*)p);
   }
   static void destruct_pairlEcharmUcOlonggR(void *p) {
      typedef pair<char*,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<char*,long>

//______________________________________________________________________________
namespace ROOT {
   void pairlEcharmUcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<char*,float>.

      typedef ::ROOT::Shadow::pairlEcharmUcOfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<char*,float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEcharmUcOfloatgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<char*,float>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEcharmUcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<char*,float> : new pair<char*,float>;
   }
   static void *newArray_pairlEcharmUcOfloatgR(Long_t size) {
      return new pair<char*,float>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEcharmUcOfloatgR(void *p) {
      delete ((pair<char*,float>*)p);
   }
   static void deleteArray_pairlEcharmUcOfloatgR(void *p) {
      delete [] ((pair<char*,float>*)p);
   }
   static void destruct_pairlEcharmUcOfloatgR(void *p) {
      typedef pair<char*,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<char*,float>

//______________________________________________________________________________
namespace ROOT {
   void pairlEcharmUcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<char*,double>.

      typedef ::ROOT::Shadow::pairlEcharmUcOdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<char*,double>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEcharmUcOdoublegR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<char*,double>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEcharmUcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<char*,double> : new pair<char*,double>;
   }
   static void *newArray_pairlEcharmUcOdoublegR(Long_t size) {
      return new pair<char*,double>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEcharmUcOdoublegR(void *p) {
      delete ((pair<char*,double>*)p);
   }
   static void deleteArray_pairlEcharmUcOdoublegR(void *p) {
      delete [] ((pair<char*,double>*)p);
   }
   static void destruct_pairlEcharmUcOdoublegR(void *p) {
      typedef pair<char*,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<char*,double>

//______________________________________________________________________________
namespace ROOT {
   void pairlEcharmUcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<char*,void*>.

      typedef ::ROOT::Shadow::pairlEcharmUcOvoidmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<char*,void*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEcharmUcOvoidmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<char*,void*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEcharmUcOvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<char*,void*> : new pair<char*,void*>;
   }
   static void *newArray_pairlEcharmUcOvoidmUgR(Long_t size) {
      return new pair<char*,void*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEcharmUcOvoidmUgR(void *p) {
      delete ((pair<char*,void*>*)p);
   }
   static void deleteArray_pairlEcharmUcOvoidmUgR(void *p) {
      delete [] ((pair<char*,void*>*)p);
   }
   static void destruct_pairlEcharmUcOvoidmUgR(void *p) {
      typedef pair<char*,void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<char*,void*>

//______________________________________________________________________________
namespace ROOT {
   void pairlEcharmUcOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<char*,char*>.

      typedef ::ROOT::Shadow::pairlEcharmUcOcharmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<char*,char*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEcharmUcOcharmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<char*,char*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEcharmUcOcharmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<char*,char*> : new pair<char*,char*>;
   }
   static void *newArray_pairlEcharmUcOcharmUgR(Long_t size) {
      return new pair<char*,char*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEcharmUcOcharmUgR(void *p) {
      delete ((pair<char*,char*>*)p);
   }
   static void deleteArray_pairlEcharmUcOcharmUgR(void *p) {
      delete [] ((pair<char*,char*>*)p);
   }
   static void destruct_pairlEcharmUcOcharmUgR(void *p) {
      typedef pair<char*,char*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<char*,char*>

//______________________________________________________________________________
namespace ROOT {
   void pairlEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<string,int>.

      typedef ::ROOT::Shadow::pairlEstringcOintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<string,int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEstringcOintgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<string,int>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,int> : new pair<string,int>;
   }
   static void *newArray_pairlEstringcOintgR(Long_t size) {
      return new pair<string,int>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEstringcOintgR(void *p) {
      delete ((pair<string,int>*)p);
   }
   static void deleteArray_pairlEstringcOintgR(void *p) {
      delete [] ((pair<string,int>*)p);
   }
   static void destruct_pairlEstringcOintgR(void *p) {
      typedef pair<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<string,int>

//______________________________________________________________________________
namespace ROOT {
   void pairlEstringcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<string,long>.

      typedef ::ROOT::Shadow::pairlEstringcOlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<string,long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEstringcOlonggR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<string,long>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEstringcOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,long> : new pair<string,long>;
   }
   static void *newArray_pairlEstringcOlonggR(Long_t size) {
      return new pair<string,long>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEstringcOlonggR(void *p) {
      delete ((pair<string,long>*)p);
   }
   static void deleteArray_pairlEstringcOlonggR(void *p) {
      delete [] ((pair<string,long>*)p);
   }
   static void destruct_pairlEstringcOlonggR(void *p) {
      typedef pair<string,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<string,long>

//______________________________________________________________________________
namespace ROOT {
   void pairlEstringcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<string,float>.

      typedef ::ROOT::Shadow::pairlEstringcOfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<string,float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEstringcOfloatgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<string,float>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEstringcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,float> : new pair<string,float>;
   }
   static void *newArray_pairlEstringcOfloatgR(Long_t size) {
      return new pair<string,float>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEstringcOfloatgR(void *p) {
      delete ((pair<string,float>*)p);
   }
   static void deleteArray_pairlEstringcOfloatgR(void *p) {
      delete [] ((pair<string,float>*)p);
   }
   static void destruct_pairlEstringcOfloatgR(void *p) {
      typedef pair<string,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<string,float>

//______________________________________________________________________________
namespace ROOT {
   void pairlEstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<string,double>.

      typedef ::ROOT::Shadow::pairlEstringcOdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<string,double>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEstringcOdoublegR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<string,double>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEstringcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,double> : new pair<string,double>;
   }
   static void *newArray_pairlEstringcOdoublegR(Long_t size) {
      return new pair<string,double>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEstringcOdoublegR(void *p) {
      delete ((pair<string,double>*)p);
   }
   static void deleteArray_pairlEstringcOdoublegR(void *p) {
      delete [] ((pair<string,double>*)p);
   }
   static void destruct_pairlEstringcOdoublegR(void *p) {
      typedef pair<string,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<string,double>

//______________________________________________________________________________
namespace ROOT {
   void pairlEstringcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<string,void*>.

      typedef ::ROOT::Shadow::pairlEstringcOvoidmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<string,void*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEstringcOvoidmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<string,void*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEstringcOvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,void*> : new pair<string,void*>;
   }
   static void *newArray_pairlEstringcOvoidmUgR(Long_t size) {
      return new pair<string,void*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEstringcOvoidmUgR(void *p) {
      delete ((pair<string,void*>*)p);
   }
   static void deleteArray_pairlEstringcOvoidmUgR(void *p) {
      delete [] ((pair<string,void*>*)p);
   }
   static void destruct_pairlEstringcOvoidmUgR(void *p) {
      typedef pair<string,void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<string,void*>

//______________________________________________________________________________
namespace ROOT {
   void pairlElongcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<long,int>.

      typedef ::ROOT::Shadow::pairlElongcOintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<long,int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlElongcOintgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<long,int>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlElongcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<long,int> : new pair<long,int>;
   }
   static void *newArray_pairlElongcOintgR(Long_t size) {
      return new pair<long,int>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlElongcOintgR(void *p) {
      delete ((pair<long,int>*)p);
   }
   static void deleteArray_pairlElongcOintgR(void *p) {
      delete [] ((pair<long,int>*)p);
   }
   static void destruct_pairlElongcOintgR(void *p) {
      typedef pair<long,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<long,int>

//______________________________________________________________________________
namespace ROOT {
   void pairlElongcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<long,long>.

      typedef ::ROOT::Shadow::pairlElongcOlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<long,long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlElongcOlonggR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<long,long>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlElongcOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<long,long> : new pair<long,long>;
   }
   static void *newArray_pairlElongcOlonggR(Long_t size) {
      return new pair<long,long>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlElongcOlonggR(void *p) {
      delete ((pair<long,long>*)p);
   }
   static void deleteArray_pairlElongcOlonggR(void *p) {
      delete [] ((pair<long,long>*)p);
   }
   static void destruct_pairlElongcOlonggR(void *p) {
      typedef pair<long,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<long,long>

//______________________________________________________________________________
namespace ROOT {
   void pairlElongcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<long,float>.

      typedef ::ROOT::Shadow::pairlElongcOfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<long,float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlElongcOfloatgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<long,float>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlElongcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<long,float> : new pair<long,float>;
   }
   static void *newArray_pairlElongcOfloatgR(Long_t size) {
      return new pair<long,float>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlElongcOfloatgR(void *p) {
      delete ((pair<long,float>*)p);
   }
   static void deleteArray_pairlElongcOfloatgR(void *p) {
      delete [] ((pair<long,float>*)p);
   }
   static void destruct_pairlElongcOfloatgR(void *p) {
      typedef pair<long,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<long,float>

//______________________________________________________________________________
namespace ROOT {
   void pairlElongcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<long,double>.

      typedef ::ROOT::Shadow::pairlElongcOdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<long,double>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlElongcOdoublegR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<long,double>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlElongcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<long,double> : new pair<long,double>;
   }
   static void *newArray_pairlElongcOdoublegR(Long_t size) {
      return new pair<long,double>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlElongcOdoublegR(void *p) {
      delete ((pair<long,double>*)p);
   }
   static void deleteArray_pairlElongcOdoublegR(void *p) {
      delete [] ((pair<long,double>*)p);
   }
   static void destruct_pairlElongcOdoublegR(void *p) {
      typedef pair<long,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<long,double>

//______________________________________________________________________________
namespace ROOT {
   void pairlElongcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<long,void*>.

      typedef ::ROOT::Shadow::pairlElongcOvoidmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<long,void*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlElongcOvoidmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<long,void*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlElongcOvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<long,void*> : new pair<long,void*>;
   }
   static void *newArray_pairlElongcOvoidmUgR(Long_t size) {
      return new pair<long,void*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlElongcOvoidmUgR(void *p) {
      delete ((pair<long,void*>*)p);
   }
   static void deleteArray_pairlElongcOvoidmUgR(void *p) {
      delete [] ((pair<long,void*>*)p);
   }
   static void destruct_pairlElongcOvoidmUgR(void *p) {
      typedef pair<long,void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<long,void*>

//______________________________________________________________________________
namespace ROOT {
   void pairlElongcOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<long,char*>.

      typedef ::ROOT::Shadow::pairlElongcOcharmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<long,char*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlElongcOcharmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<long,char*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlElongcOcharmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<long,char*> : new pair<long,char*>;
   }
   static void *newArray_pairlElongcOcharmUgR(Long_t size) {
      return new pair<long,char*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlElongcOcharmUgR(void *p) {
      delete ((pair<long,char*>*)p);
   }
   static void deleteArray_pairlElongcOcharmUgR(void *p) {
      delete [] ((pair<long,char*>*)p);
   }
   static void destruct_pairlElongcOcharmUgR(void *p) {
      typedef pair<long,char*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<long,char*>

//______________________________________________________________________________
namespace ROOT {
   void pairlEdoublecOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<double,int>.

      typedef ::ROOT::Shadow::pairlEdoublecOintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<double,int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEdoublecOintgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<double,int>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEdoublecOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<double,int> : new pair<double,int>;
   }
   static void *newArray_pairlEdoublecOintgR(Long_t size) {
      return new pair<double,int>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEdoublecOintgR(void *p) {
      delete ((pair<double,int>*)p);
   }
   static void deleteArray_pairlEdoublecOintgR(void *p) {
      delete [] ((pair<double,int>*)p);
   }
   static void destruct_pairlEdoublecOintgR(void *p) {
      typedef pair<double,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<double,int>

//______________________________________________________________________________
namespace ROOT {
   void pairlEdoublecOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<double,long>.

      typedef ::ROOT::Shadow::pairlEdoublecOlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<double,long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEdoublecOlonggR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<double,long>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEdoublecOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<double,long> : new pair<double,long>;
   }
   static void *newArray_pairlEdoublecOlonggR(Long_t size) {
      return new pair<double,long>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEdoublecOlonggR(void *p) {
      delete ((pair<double,long>*)p);
   }
   static void deleteArray_pairlEdoublecOlonggR(void *p) {
      delete [] ((pair<double,long>*)p);
   }
   static void destruct_pairlEdoublecOlonggR(void *p) {
      typedef pair<double,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<double,long>

//______________________________________________________________________________
namespace ROOT {
   void pairlEdoublecOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<double,float>.

      typedef ::ROOT::Shadow::pairlEdoublecOfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<double,float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEdoublecOfloatgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<double,float>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEdoublecOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<double,float> : new pair<double,float>;
   }
   static void *newArray_pairlEdoublecOfloatgR(Long_t size) {
      return new pair<double,float>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEdoublecOfloatgR(void *p) {
      delete ((pair<double,float>*)p);
   }
   static void deleteArray_pairlEdoublecOfloatgR(void *p) {
      delete [] ((pair<double,float>*)p);
   }
   static void destruct_pairlEdoublecOfloatgR(void *p) {
      typedef pair<double,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<double,float>

//______________________________________________________________________________
namespace ROOT {
   void pairlEdoublecOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<double,double>.

      typedef ::ROOT::Shadow::pairlEdoublecOdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<double,double>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEdoublecOdoublegR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<double,double>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEdoublecOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<double,double> : new pair<double,double>;
   }
   static void *newArray_pairlEdoublecOdoublegR(Long_t size) {
      return new pair<double,double>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEdoublecOdoublegR(void *p) {
      delete ((pair<double,double>*)p);
   }
   static void deleteArray_pairlEdoublecOdoublegR(void *p) {
      delete [] ((pair<double,double>*)p);
   }
   static void destruct_pairlEdoublecOdoublegR(void *p) {
      typedef pair<double,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<double,double>

//______________________________________________________________________________
namespace ROOT {
   void pairlEdoublecOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<double,void*>.

      typedef ::ROOT::Shadow::pairlEdoublecOvoidmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<double,void*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEdoublecOvoidmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<double,void*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEdoublecOvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<double,void*> : new pair<double,void*>;
   }
   static void *newArray_pairlEdoublecOvoidmUgR(Long_t size) {
      return new pair<double,void*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEdoublecOvoidmUgR(void *p) {
      delete ((pair<double,void*>*)p);
   }
   static void deleteArray_pairlEdoublecOvoidmUgR(void *p) {
      delete [] ((pair<double,void*>*)p);
   }
   static void destruct_pairlEdoublecOvoidmUgR(void *p) {
      typedef pair<double,void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<double,void*>

//______________________________________________________________________________
namespace ROOT {
   void pairlEdoublecOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<double,char*>.

      typedef ::ROOT::Shadow::pairlEdoublecOcharmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<double,char*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEdoublecOcharmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<double,char*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEdoublecOcharmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<double,char*> : new pair<double,char*>;
   }
   static void *newArray_pairlEdoublecOcharmUgR(Long_t size) {
      return new pair<double,char*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEdoublecOcharmUgR(void *p) {
      delete ((pair<double,char*>*)p);
   }
   static void deleteArray_pairlEdoublecOcharmUgR(void *p) {
      delete [] ((pair<double,char*>*)p);
   }
   static void destruct_pairlEdoublecOcharmUgR(void *p) {
      typedef pair<double,char*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<double,char*>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPcharmUcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const char*,int>.

      typedef ::ROOT::Shadow::pairlEconstsPcharmUcOintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const char*,int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPcharmUcOintgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const char*,int>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPcharmUcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const char*,int> : new pair<const char*,int>;
   }
   static void *newArray_pairlEconstsPcharmUcOintgR(Long_t size) {
      return new pair<const char*,int>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPcharmUcOintgR(void *p) {
      delete ((pair<const char*,int>*)p);
   }
   static void deleteArray_pairlEconstsPcharmUcOintgR(void *p) {
      delete [] ((pair<const char*,int>*)p);
   }
   static void destruct_pairlEconstsPcharmUcOintgR(void *p) {
      typedef pair<const char*,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const char*,int>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPcharmUcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const char*,long>.

      typedef ::ROOT::Shadow::pairlEconstsPcharmUcOlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const char*,long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPcharmUcOlonggR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const char*,long>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPcharmUcOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const char*,long> : new pair<const char*,long>;
   }
   static void *newArray_pairlEconstsPcharmUcOlonggR(Long_t size) {
      return new pair<const char*,long>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPcharmUcOlonggR(void *p) {
      delete ((pair<const char*,long>*)p);
   }
   static void deleteArray_pairlEconstsPcharmUcOlonggR(void *p) {
      delete [] ((pair<const char*,long>*)p);
   }
   static void destruct_pairlEconstsPcharmUcOlonggR(void *p) {
      typedef pair<const char*,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const char*,long>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPcharmUcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const char*,float>.

      typedef ::ROOT::Shadow::pairlEconstsPcharmUcOfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const char*,float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPcharmUcOfloatgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const char*,float>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPcharmUcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const char*,float> : new pair<const char*,float>;
   }
   static void *newArray_pairlEconstsPcharmUcOfloatgR(Long_t size) {
      return new pair<const char*,float>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPcharmUcOfloatgR(void *p) {
      delete ((pair<const char*,float>*)p);
   }
   static void deleteArray_pairlEconstsPcharmUcOfloatgR(void *p) {
      delete [] ((pair<const char*,float>*)p);
   }
   static void destruct_pairlEconstsPcharmUcOfloatgR(void *p) {
      typedef pair<const char*,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const char*,float>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPcharmUcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const char*,double>.

      typedef ::ROOT::Shadow::pairlEconstsPcharmUcOdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const char*,double>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPcharmUcOdoublegR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const char*,double>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPcharmUcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const char*,double> : new pair<const char*,double>;
   }
   static void *newArray_pairlEconstsPcharmUcOdoublegR(Long_t size) {
      return new pair<const char*,double>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPcharmUcOdoublegR(void *p) {
      delete ((pair<const char*,double>*)p);
   }
   static void deleteArray_pairlEconstsPcharmUcOdoublegR(void *p) {
      delete [] ((pair<const char*,double>*)p);
   }
   static void destruct_pairlEconstsPcharmUcOdoublegR(void *p) {
      typedef pair<const char*,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const char*,double>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPcharmUcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const char*,void*>.

      typedef ::ROOT::Shadow::pairlEconstsPcharmUcOvoidmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const char*,void*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPcharmUcOvoidmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const char*,void*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPcharmUcOvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const char*,void*> : new pair<const char*,void*>;
   }
   static void *newArray_pairlEconstsPcharmUcOvoidmUgR(Long_t size) {
      return new pair<const char*,void*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPcharmUcOvoidmUgR(void *p) {
      delete ((pair<const char*,void*>*)p);
   }
   static void deleteArray_pairlEconstsPcharmUcOvoidmUgR(void *p) {
      delete [] ((pair<const char*,void*>*)p);
   }
   static void destruct_pairlEconstsPcharmUcOvoidmUgR(void *p) {
      typedef pair<const char*,void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const char*,void*>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPcharmUcOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const char*,char*>.

      typedef ::ROOT::Shadow::pairlEconstsPcharmUcOcharmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const char*,char*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPcharmUcOcharmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const char*,char*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPcharmUcOcharmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const char*,char*> : new pair<const char*,char*>;
   }
   static void *newArray_pairlEconstsPcharmUcOcharmUgR(Long_t size) {
      return new pair<const char*,char*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPcharmUcOcharmUgR(void *p) {
      delete ((pair<const char*,char*>*)p);
   }
   static void deleteArray_pairlEconstsPcharmUcOcharmUgR(void *p) {
      delete [] ((pair<const char*,char*>*)p);
   }
   static void destruct_pairlEconstsPcharmUcOcharmUgR(void *p) {
      typedef pair<const char*,char*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const char*,char*>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const string,int>.

      typedef ::ROOT::Shadow::pairlEconstsPstringcOintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const string,int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", (void*)&sobj->first);
      ::ROOT::GenericShowMembers("const string", (void*)&sobj->first, R__insp, strcat(R__parent,"first."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPstringcOintgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const string,int>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const string,int> : new pair<const string,int>;
   }
   static void *newArray_pairlEconstsPstringcOintgR(Long_t size) {
      return new pair<const string,int>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPstringcOintgR(void *p) {
      delete ((pair<const string,int>*)p);
   }
   static void deleteArray_pairlEconstsPstringcOintgR(void *p) {
      delete [] ((pair<const string,int>*)p);
   }
   static void destruct_pairlEconstsPstringcOintgR(void *p) {
      typedef pair<const string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const string,int>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPstringcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const string,long>.

      typedef ::ROOT::Shadow::pairlEconstsPstringcOlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const string,long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", (void*)&sobj->first);
      ::ROOT::GenericShowMembers("const string", (void*)&sobj->first, R__insp, strcat(R__parent,"first."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPstringcOlonggR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const string,long>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPstringcOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const string,long> : new pair<const string,long>;
   }
   static void *newArray_pairlEconstsPstringcOlonggR(Long_t size) {
      return new pair<const string,long>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPstringcOlonggR(void *p) {
      delete ((pair<const string,long>*)p);
   }
   static void deleteArray_pairlEconstsPstringcOlonggR(void *p) {
      delete [] ((pair<const string,long>*)p);
   }
   static void destruct_pairlEconstsPstringcOlonggR(void *p) {
      typedef pair<const string,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const string,long>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPstringcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const string,float>.

      typedef ::ROOT::Shadow::pairlEconstsPstringcOfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const string,float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", (void*)&sobj->first);
      ::ROOT::GenericShowMembers("const string", (void*)&sobj->first, R__insp, strcat(R__parent,"first."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPstringcOfloatgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const string,float>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPstringcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const string,float> : new pair<const string,float>;
   }
   static void *newArray_pairlEconstsPstringcOfloatgR(Long_t size) {
      return new pair<const string,float>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPstringcOfloatgR(void *p) {
      delete ((pair<const string,float>*)p);
   }
   static void deleteArray_pairlEconstsPstringcOfloatgR(void *p) {
      delete [] ((pair<const string,float>*)p);
   }
   static void destruct_pairlEconstsPstringcOfloatgR(void *p) {
      typedef pair<const string,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const string,float>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const string,double>.

      typedef ::ROOT::Shadow::pairlEconstsPstringcOdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const string,double>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", (void*)&sobj->first);
      ::ROOT::GenericShowMembers("const string", (void*)&sobj->first, R__insp, strcat(R__parent,"first."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPstringcOdoublegR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const string,double>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPstringcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const string,double> : new pair<const string,double>;
   }
   static void *newArray_pairlEconstsPstringcOdoublegR(Long_t size) {
      return new pair<const string,double>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPstringcOdoublegR(void *p) {
      delete ((pair<const string,double>*)p);
   }
   static void deleteArray_pairlEconstsPstringcOdoublegR(void *p) {
      delete [] ((pair<const string,double>*)p);
   }
   static void destruct_pairlEconstsPstringcOdoublegR(void *p) {
      typedef pair<const string,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const string,double>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPstringcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const string,void*>.

      typedef ::ROOT::Shadow::pairlEconstsPstringcOvoidmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const string,void*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", (void*)&sobj->first);
      ::ROOT::GenericShowMembers("const string", (void*)&sobj->first, R__insp, strcat(R__parent,"first."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPstringcOvoidmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const string,void*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPstringcOvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const string,void*> : new pair<const string,void*>;
   }
   static void *newArray_pairlEconstsPstringcOvoidmUgR(Long_t size) {
      return new pair<const string,void*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPstringcOvoidmUgR(void *p) {
      delete ((pair<const string,void*>*)p);
   }
   static void deleteArray_pairlEconstsPstringcOvoidmUgR(void *p) {
      delete [] ((pair<const string,void*>*)p);
   }
   static void destruct_pairlEconstsPstringcOvoidmUgR(void *p) {
      typedef pair<const string,void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const string,void*>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPlongcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const long,int>.

      typedef ::ROOT::Shadow::pairlEconstsPlongcOintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const long,int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPlongcOintgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const long,int>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPlongcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const long,int> : new pair<const long,int>;
   }
   static void *newArray_pairlEconstsPlongcOintgR(Long_t size) {
      return new pair<const long,int>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPlongcOintgR(void *p) {
      delete ((pair<const long,int>*)p);
   }
   static void deleteArray_pairlEconstsPlongcOintgR(void *p) {
      delete [] ((pair<const long,int>*)p);
   }
   static void destruct_pairlEconstsPlongcOintgR(void *p) {
      typedef pair<const long,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const long,int>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPlongcOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const long,long>.

      typedef ::ROOT::Shadow::pairlEconstsPlongcOlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const long,long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPlongcOlonggR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const long,long>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPlongcOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const long,long> : new pair<const long,long>;
   }
   static void *newArray_pairlEconstsPlongcOlonggR(Long_t size) {
      return new pair<const long,long>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPlongcOlonggR(void *p) {
      delete ((pair<const long,long>*)p);
   }
   static void deleteArray_pairlEconstsPlongcOlonggR(void *p) {
      delete [] ((pair<const long,long>*)p);
   }
   static void destruct_pairlEconstsPlongcOlonggR(void *p) {
      typedef pair<const long,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const long,long>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPlongcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const long,float>.

      typedef ::ROOT::Shadow::pairlEconstsPlongcOfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const long,float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPlongcOfloatgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const long,float>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPlongcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const long,float> : new pair<const long,float>;
   }
   static void *newArray_pairlEconstsPlongcOfloatgR(Long_t size) {
      return new pair<const long,float>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPlongcOfloatgR(void *p) {
      delete ((pair<const long,float>*)p);
   }
   static void deleteArray_pairlEconstsPlongcOfloatgR(void *p) {
      delete [] ((pair<const long,float>*)p);
   }
   static void destruct_pairlEconstsPlongcOfloatgR(void *p) {
      typedef pair<const long,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const long,float>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPlongcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const long,double>.

      typedef ::ROOT::Shadow::pairlEconstsPlongcOdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const long,double>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPlongcOdoublegR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const long,double>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPlongcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const long,double> : new pair<const long,double>;
   }
   static void *newArray_pairlEconstsPlongcOdoublegR(Long_t size) {
      return new pair<const long,double>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPlongcOdoublegR(void *p) {
      delete ((pair<const long,double>*)p);
   }
   static void deleteArray_pairlEconstsPlongcOdoublegR(void *p) {
      delete [] ((pair<const long,double>*)p);
   }
   static void destruct_pairlEconstsPlongcOdoublegR(void *p) {
      typedef pair<const long,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const long,double>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPlongcOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const long,void*>.

      typedef ::ROOT::Shadow::pairlEconstsPlongcOvoidmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const long,void*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPlongcOvoidmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const long,void*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPlongcOvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const long,void*> : new pair<const long,void*>;
   }
   static void *newArray_pairlEconstsPlongcOvoidmUgR(Long_t size) {
      return new pair<const long,void*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPlongcOvoidmUgR(void *p) {
      delete ((pair<const long,void*>*)p);
   }
   static void deleteArray_pairlEconstsPlongcOvoidmUgR(void *p) {
      delete [] ((pair<const long,void*>*)p);
   }
   static void destruct_pairlEconstsPlongcOvoidmUgR(void *p) {
      typedef pair<const long,void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const long,void*>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPlongcOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const long,char*>.

      typedef ::ROOT::Shadow::pairlEconstsPlongcOcharmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const long,char*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPlongcOcharmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const long,char*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPlongcOcharmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const long,char*> : new pair<const long,char*>;
   }
   static void *newArray_pairlEconstsPlongcOcharmUgR(Long_t size) {
      return new pair<const long,char*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPlongcOcharmUgR(void *p) {
      delete ((pair<const long,char*>*)p);
   }
   static void deleteArray_pairlEconstsPlongcOcharmUgR(void *p) {
      delete [] ((pair<const long,char*>*)p);
   }
   static void destruct_pairlEconstsPlongcOcharmUgR(void *p) {
      typedef pair<const long,char*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const long,char*>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPdoublecOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const double,int>.

      typedef ::ROOT::Shadow::pairlEconstsPdoublecOintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const double,int>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPdoublecOintgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const double,int>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPdoublecOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const double,int> : new pair<const double,int>;
   }
   static void *newArray_pairlEconstsPdoublecOintgR(Long_t size) {
      return new pair<const double,int>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPdoublecOintgR(void *p) {
      delete ((pair<const double,int>*)p);
   }
   static void deleteArray_pairlEconstsPdoublecOintgR(void *p) {
      delete [] ((pair<const double,int>*)p);
   }
   static void destruct_pairlEconstsPdoublecOintgR(void *p) {
      typedef pair<const double,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const double,int>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPdoublecOlonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const double,long>.

      typedef ::ROOT::Shadow::pairlEconstsPdoublecOlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const double,long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPdoublecOlonggR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const double,long>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPdoublecOlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const double,long> : new pair<const double,long>;
   }
   static void *newArray_pairlEconstsPdoublecOlonggR(Long_t size) {
      return new pair<const double,long>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPdoublecOlonggR(void *p) {
      delete ((pair<const double,long>*)p);
   }
   static void deleteArray_pairlEconstsPdoublecOlonggR(void *p) {
      delete [] ((pair<const double,long>*)p);
   }
   static void destruct_pairlEconstsPdoublecOlonggR(void *p) {
      typedef pair<const double,long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const double,long>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPdoublecOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const double,float>.

      typedef ::ROOT::Shadow::pairlEconstsPdoublecOfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const double,float>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPdoublecOfloatgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const double,float>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPdoublecOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const double,float> : new pair<const double,float>;
   }
   static void *newArray_pairlEconstsPdoublecOfloatgR(Long_t size) {
      return new pair<const double,float>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPdoublecOfloatgR(void *p) {
      delete ((pair<const double,float>*)p);
   }
   static void deleteArray_pairlEconstsPdoublecOfloatgR(void *p) {
      delete [] ((pair<const double,float>*)p);
   }
   static void destruct_pairlEconstsPdoublecOfloatgR(void *p) {
      typedef pair<const double,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const double,float>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPdoublecOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const double,double>.

      typedef ::ROOT::Shadow::pairlEconstsPdoublecOdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const double,double>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPdoublecOdoublegR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const double,double>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPdoublecOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const double,double> : new pair<const double,double>;
   }
   static void *newArray_pairlEconstsPdoublecOdoublegR(Long_t size) {
      return new pair<const double,double>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPdoublecOdoublegR(void *p) {
      delete ((pair<const double,double>*)p);
   }
   static void deleteArray_pairlEconstsPdoublecOdoublegR(void *p) {
      delete [] ((pair<const double,double>*)p);
   }
   static void destruct_pairlEconstsPdoublecOdoublegR(void *p) {
      typedef pair<const double,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const double,double>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPdoublecOvoidmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const double,void*>.

      typedef ::ROOT::Shadow::pairlEconstsPdoublecOvoidmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const double,void*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPdoublecOvoidmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const double,void*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPdoublecOvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const double,void*> : new pair<const double,void*>;
   }
   static void *newArray_pairlEconstsPdoublecOvoidmUgR(Long_t size) {
      return new pair<const double,void*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPdoublecOvoidmUgR(void *p) {
      delete ((pair<const double,void*>*)p);
   }
   static void deleteArray_pairlEconstsPdoublecOvoidmUgR(void *p) {
      delete [] ((pair<const double,void*>*)p);
   }
   static void destruct_pairlEconstsPdoublecOvoidmUgR(void *p) {
      typedef pair<const double,void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const double,void*>

//______________________________________________________________________________
namespace ROOT {
   void pairlEconstsPdoublecOcharmUgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class pair<const double,char*>.

      typedef ::ROOT::Shadow::pairlEconstsPdoublecOcharmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const pair<const double,char*>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "first", &sobj->first);
      R__insp.Inspect(R__cl, R__parent, "*second", &sobj->second);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *pairlEconstsPdoublecOcharmUgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(pair<const double,char*>*)obj));
   }
   // Wrappers around operator new
   static void *new_pairlEconstsPdoublecOcharmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<const double,char*> : new pair<const double,char*>;
   }
   static void *newArray_pairlEconstsPdoublecOcharmUgR(Long_t size) {
      return new pair<const double,char*>[size];
   }
   // Wrapper around operator delete
   static void delete_pairlEconstsPdoublecOcharmUgR(void *p) {
      delete ((pair<const double,char*>*)p);
   }
   static void deleteArray_pairlEconstsPdoublecOcharmUgR(void *p) {
      delete [] ((pair<const double,char*>*)p);
   }
   static void destruct_pairlEconstsPdoublecOcharmUgR(void *p) {
      typedef pair<const double,char*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<const double,char*>

//______________________________________________________________________________
template <> void TParameter<double>::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParameter<double>.

   if (R__b.IsReading()) {
      TParameter<double>::Class()->ReadBuffer(R__b, this);
   } else {
      TParameter<double>::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
namespace ROOT {
   void TParameterlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class TParameter<double>.

      typedef ::ROOT::Shadow::TParameterlEdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const ::TParameter<double>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fName", &sobj->fName);
      sobj->fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fVal", &sobj->fVal);
      sobj->TObject::ShowMembers(R__insp, R__parent);
   }

}

template <> void TParameter<double>::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   ::ROOT::TParameterlEdoublegR_ShowMembers(this, R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TParameterlEdoublegR_IsA(const void *obj) {
      return ((::TParameter<double>*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TParameterlEdoublegR(void *p) {
      return  p ? new(p) ::TParameter<double> : new ::TParameter<double>;
   }
   static void *newArray_TParameterlEdoublegR(Long_t size) {
      return new ::TParameter<double>[size];
   }
   // Wrapper around operator delete
   static void delete_TParameterlEdoublegR(void *p) {
      delete ((::TParameter<double>*)p);
   }
   static void deleteArray_TParameterlEdoublegR(void *p) {
      delete [] ((::TParameter<double>*)p);
   }
   static void destruct_TParameterlEdoublegR(void *p) {
      typedef ::TParameter<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParameter<double>

//______________________________________________________________________________
template <> void TParameter<long>::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParameter<long>.

   if (R__b.IsReading()) {
      TParameter<long>::Class()->ReadBuffer(R__b, this);
   } else {
      TParameter<long>::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
namespace ROOT {
   void TParameterlElonggR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class TParameter<long>.

      typedef ::ROOT::Shadow::TParameterlElonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const ::TParameter<long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fName", &sobj->fName);
      sobj->fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fVal", &sobj->fVal);
      sobj->TObject::ShowMembers(R__insp, R__parent);
   }

}

template <> void TParameter<long>::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   ::ROOT::TParameterlElonggR_ShowMembers(this, R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TParameterlElonggR_IsA(const void *obj) {
      return ((::TParameter<long>*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TParameterlElonggR(void *p) {
      return  p ? new(p) ::TParameter<long> : new ::TParameter<long>;
   }
   static void *newArray_TParameterlElonggR(Long_t size) {
      return new ::TParameter<long>[size];
   }
   // Wrapper around operator delete
   static void delete_TParameterlElonggR(void *p) {
      delete ((::TParameter<long>*)p);
   }
   static void deleteArray_TParameterlElonggR(void *p) {
      delete [] ((::TParameter<long>*)p);
   }
   static void destruct_TParameterlElonggR(void *p) {
      typedef ::TParameter<long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParameter<long>

//______________________________________________________________________________
template <> void TParameter<long long>::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParameter<long long>.

   if (R__b.IsReading()) {
      TParameter<long long>::Class()->ReadBuffer(R__b, this);
   } else {
      TParameter<long long>::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
namespace ROOT {
   void TParameterlELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class TParameter<long long>.

      typedef ::ROOT::Shadow::TParameterlElongsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const ::TParameter<long long>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fName", &sobj->fName);
      sobj->fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fVal", &sobj->fVal);
      sobj->TObject::ShowMembers(R__insp, R__parent);
   }

}

template <> void TParameter<long long>::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   ::ROOT::TParameterlELong64_tgR_ShowMembers(this, R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TParameterlELong64_tgR_IsA(const void *obj) {
      return ((::TParameter<Long64_t>*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TParameterlELong64_tgR(void *p) {
      return  p ? new(p) ::TParameter<Long64_t> : new ::TParameter<Long64_t>;
   }
   static void *newArray_TParameterlELong64_tgR(Long_t size) {
      return new ::TParameter<Long64_t>[size];
   }
   // Wrapper around operator delete
   static void delete_TParameterlELong64_tgR(void *p) {
      delete ((::TParameter<Long64_t>*)p);
   }
   static void deleteArray_TParameterlELong64_tgR(void *p) {
      delete [] ((::TParameter<Long64_t>*)p);
   }
   static void destruct_TParameterlELong64_tgR(void *p) {
      typedef ::TParameter<Long64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParameter<Long64_t>

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *SetWindowAttributes_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::SetWindowAttributes_t*)obj));
   }
   // Wrappers around operator new
   static void *new_SetWindowAttributes_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SetWindowAttributes_t : new ::SetWindowAttributes_t;
   }
   static void *newArray_SetWindowAttributes_t(Long_t size) {
      return new ::SetWindowAttributes_t[size];
   }
   // Wrapper around operator delete
   static void delete_SetWindowAttributes_t(void *p) {
      delete ((::SetWindowAttributes_t*)p);
   }
   static void deleteArray_SetWindowAttributes_t(void *p) {
      delete [] ((::SetWindowAttributes_t*)p);
   }
   static void destruct_SetWindowAttributes_t(void *p) {
      typedef ::SetWindowAttributes_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SetWindowAttributes_t

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *WindowAttributes_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::WindowAttributes_t*)obj));
   }
   // Wrappers around operator new
   static void *new_WindowAttributes_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WindowAttributes_t : new ::WindowAttributes_t;
   }
   static void *newArray_WindowAttributes_t(Long_t size) {
      return new ::WindowAttributes_t[size];
   }
   // Wrapper around operator delete
   static void delete_WindowAttributes_t(void *p) {
      delete ((::WindowAttributes_t*)p);
   }
   static void deleteArray_WindowAttributes_t(void *p) {
      delete [] ((::WindowAttributes_t*)p);
   }
   static void destruct_WindowAttributes_t(void *p) {
      typedef ::WindowAttributes_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WindowAttributes_t

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *Event_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::Event_t*)obj));
   }
   // Wrappers around operator new
   static void *new_Event_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Event_t : new ::Event_t;
   }
   static void *newArray_Event_t(Long_t size) {
      return new ::Event_t[size];
   }
   // Wrapper around operator delete
   static void delete_Event_t(void *p) {
      delete ((::Event_t*)p);
   }
   static void deleteArray_Event_t(void *p) {
      delete [] ((::Event_t*)p);
   }
   static void destruct_Event_t(void *p) {
      typedef ::Event_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Event_t

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *GCValues_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::GCValues_t*)obj));
   }
   // Wrappers around operator new
   static void *new_GCValues_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::GCValues_t : new ::GCValues_t;
   }
   static void *newArray_GCValues_t(Long_t size) {
      return new ::GCValues_t[size];
   }
   // Wrapper around operator delete
   static void delete_GCValues_t(void *p) {
      delete ((::GCValues_t*)p);
   }
   static void deleteArray_GCValues_t(void *p) {
      delete [] ((::GCValues_t*)p);
   }
   static void destruct_GCValues_t(void *p) {
      typedef ::GCValues_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GCValues_t

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *ColorStruct_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::ColorStruct_t*)obj));
   }
   // Wrappers around operator new
   static void *new_ColorStruct_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ColorStruct_t : new ::ColorStruct_t;
   }
   static void *newArray_ColorStruct_t(Long_t size) {
      return new ::ColorStruct_t[size];
   }
   // Wrapper around operator delete
   static void delete_ColorStruct_t(void *p) {
      delete ((::ColorStruct_t*)p);
   }
   static void deleteArray_ColorStruct_t(void *p) {
      delete [] ((::ColorStruct_t*)p);
   }
   static void destruct_ColorStruct_t(void *p) {
      typedef ::ColorStruct_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ColorStruct_t

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *PictureAttributes_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::PictureAttributes_t*)obj));
   }
   // Wrappers around operator new
   static void *new_PictureAttributes_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PictureAttributes_t : new ::PictureAttributes_t;
   }
   static void *newArray_PictureAttributes_t(Long_t size) {
      return new ::PictureAttributes_t[size];
   }
   // Wrapper around operator delete
   static void delete_PictureAttributes_t(void *p) {
      delete ((::PictureAttributes_t*)p);
   }
   static void deleteArray_PictureAttributes_t(void *p) {
      delete [] ((::PictureAttributes_t*)p);
   }
   static void destruct_PictureAttributes_t(void *p) {
      typedef ::PictureAttributes_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PictureAttributes_t

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *Segment_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::Segment_t*)obj));
   }
   // Wrappers around operator new
   static void *new_Segment_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Segment_t : new ::Segment_t;
   }
   static void *newArray_Segment_t(Long_t size) {
      return new ::Segment_t[size];
   }
   // Wrapper around operator delete
   static void delete_Segment_t(void *p) {
      delete ((::Segment_t*)p);
   }
   static void deleteArray_Segment_t(void *p) {
      delete [] ((::Segment_t*)p);
   }
   static void destruct_Segment_t(void *p) {
      typedef ::Segment_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Segment_t

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *Point_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::Point_t*)obj));
   }
   // Wrappers around operator new
   static void *new_Point_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Point_t : new ::Point_t;
   }
   static void *newArray_Point_t(Long_t size) {
      return new ::Point_t[size];
   }
   // Wrapper around operator delete
   static void delete_Point_t(void *p) {
      delete ((::Point_t*)p);
   }
   static void deleteArray_Point_t(void *p) {
      delete [] ((::Point_t*)p);
   }
   static void destruct_Point_t(void *p) {
      typedef ::Point_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Point_t

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *Rectangle_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::Rectangle_t*)obj));
   }
   // Wrappers around operator new
   static void *new_Rectangle_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Rectangle_t : new ::Rectangle_t;
   }
   static void *newArray_Rectangle_t(Long_t size) {
      return new ::Rectangle_t[size];
   }
   // Wrapper around operator delete
   static void delete_Rectangle_t(void *p) {
      delete ((::Rectangle_t*)p);
   }
   static void deleteArray_Rectangle_t(void *p) {
      delete [] ((::Rectangle_t*)p);
   }
   static void destruct_Rectangle_t(void *p) {
      typedef ::Rectangle_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Rectangle_t

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *timespec_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::timespec*)obj));
   }
   // Wrappers around operator new
   static void *new_timespec(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::timespec : new ::timespec;
   }
   static void *newArray_timespec(Long_t size) {
      return new ::timespec[size];
   }
   // Wrapper around operator delete
   static void delete_timespec(void *p) {
      delete ((::timespec*)p);
   }
   static void deleteArray_timespec(void *p) {
      delete [] ((::timespec*)p);
   }
   static void destruct_timespec(void *p) {
      typedef ::timespec current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::timespec

/********************************************************
* base/src/G__Base3.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__Base3();

extern "C" void G__set_cpp_environmentG__Base3() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("base/inc/GuiTypes.h");
  G__add_compiledheader("base/inc/KeySymbols.h");
  G__add_compiledheader("base/inc/Buttons.h");
  G__add_compiledheader("base/inc/TTimeStamp.h");
  G__add_compiledheader("base/inc/TVirtualMutex.h");
  G__add_compiledheader("base/inc/TVirtualProof.h");
  G__add_compiledheader("base/inc/TVirtualPerfStats.h");
  G__add_compiledheader("base/inc/TVirtualX.h");
  G__add_compiledheader("base/inc/TParameter.h");
  G__add_compiledheader("base/inc/TArchiveFile.h");
  G__add_compiledheader("base/inc/TZIPFile.h");
  G__cpp_reset_tagtableG__Base3();
}
class G__basedIsrcdIG__Base3dOcxx_tag {};

void* operator new(size_t size,G__basedIsrcdIG__Base3dOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__basedIsrcdIG__Base3dOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_basedIsrcdIG__Base3dOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__Base3() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TVirtualProof */
static int G__G__Base3_115_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->Ping());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->Exec((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(TEventList*)G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->StopProcess((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->AddInput((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->ClearInput();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TVirtualProof*)(G__getstructoffset()))->GetOutput((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TVirtualProof*)(G__getstructoffset()))->GetOutputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->SetParallel((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->SetParallel());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->SetLogLevel((Int_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->SetLogLevel((Int_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TVirtualProof*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TVirtualProof*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->ShowCache((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->ShowCache();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->ClearCache();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->ShowPackages((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->ShowPackages();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->ShowEnabledPackages((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->ShowEnabledPackages();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->ClearPackages());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->ClearPackage((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->EnablePackage((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->UploadPackage((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TVirtualProof*)(G__getstructoffset()))->UploadPackage((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TVirtualProof*)(G__getstructoffset()))->GetMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TVirtualProof*)(G__getstructoffset()))->GetConfDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TVirtualProof*)(G__getstructoffset()))->GetConfFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TVirtualProof*)(G__getstructoffset()))->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TVirtualProof*)(G__getstructoffset()))->GetWorkDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TVirtualProof*)(G__getstructoffset()))->GetImage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVirtualProof*)(G__getstructoffset()))->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVirtualProof*)(G__getstructoffset()))->GetRemoteProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVirtualProof*)(G__getstructoffset()))->GetClientProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVirtualProof*)(G__getstructoffset()))->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVirtualProof*)(G__getstructoffset()))->GetLogLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVirtualProof*)(G__getstructoffset()))->GetParallel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TVirtualProof*)(G__getstructoffset()))->GetSlaveInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TVirtualProof*)(G__getstructoffset()))->GetBytesRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TVirtualProof*)(G__getstructoffset()))->GetRealTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TVirtualProof*)(G__getstructoffset()))->GetCpuTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVirtualProof*)(G__getstructoffset()))->IsMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVirtualProof*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVirtualProof*)(G__getstructoffset()))->IsParallel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TVirtualProof*)(G__getstructoffset()))->IsDataReady(*(Long64_t*)G__Longlongref(&libp->para[0]),*(Long64_t*)G__Longlongref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->AddFeedback((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->RemoveFeedback((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->ClearFeedback();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TVirtualProof*)(G__getstructoffset()))->ShowFeedback();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualProof*)(G__getstructoffset()))->GetFeedbackList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->SetActive((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->SetActive();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->Progress((Long64_t)G__Longlong(libp->para[0]),(Long64_t)G__Longlong(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->Feedback((TList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TVirtualProof*)(G__getstructoffset()))->GetTreeHeader((TDSet*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TVirtualProof*)(G__getstructoffset()))->GetOutputNames());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->AddChain((TChain*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->RemoveChain((TChain*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TVirtualProof*)(G__getstructoffset()))->CreateDrawFeedback());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->SetDrawFeedbackOption((TDrawFeedback*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->DeleteDrawFeedback((TDrawFeedback*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVirtualProof::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualProof::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TVirtualProof::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TVirtualProof::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualProof*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualProof*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualProof::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualProof::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualProof::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_115_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualProof::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVirtualProof G__TTVirtualProof;
static int G__G__Base3_115_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TVirtualProof *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TVirtualProof *)((G__getstructoffset())+sizeof(TVirtualProof)*i);
   else  delete (TVirtualProof *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_115_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVirtualProof *dest = (TVirtualProof*)(G__getstructoffset());
   *dest = (*(TVirtualProof*)libp->para[0].ref);
   const TVirtualProof& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SetWindowAttributes_t */
// automatic default constructor
static int G__G__Base3_131_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   SetWindowAttributes_t *p;
   if(G__getaryconstruct()) p=new SetWindowAttributes_t[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) SetWindowAttributes_t;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_SetWindowAttributes_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_131_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   SetWindowAttributes_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new SetWindowAttributes_t(*(SetWindowAttributes_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_SetWindowAttributes_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SetWindowAttributes_t G__TSetWindowAttributes_t;
static int G__G__Base3_131_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (SetWindowAttributes_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((SetWindowAttributes_t *)((G__getstructoffset())+sizeof(SetWindowAttributes_t)*i))->~G__TSetWindowAttributes_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((SetWindowAttributes_t *)(G__getstructoffset()))->~G__TSetWindowAttributes_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_131_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   SetWindowAttributes_t *dest = (SetWindowAttributes_t*)(G__getstructoffset());
   *dest = (*(SetWindowAttributes_t*)libp->para[0].ref);
   const SetWindowAttributes_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WindowAttributes_t */
// automatic default constructor
static int G__G__Base3_132_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   WindowAttributes_t *p;
   if(G__getaryconstruct()) p=new WindowAttributes_t[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) WindowAttributes_t;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_WindowAttributes_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_132_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   WindowAttributes_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new WindowAttributes_t(*(WindowAttributes_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_WindowAttributes_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WindowAttributes_t G__TWindowAttributes_t;
static int G__G__Base3_132_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (WindowAttributes_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((WindowAttributes_t *)((G__getstructoffset())+sizeof(WindowAttributes_t)*i))->~G__TWindowAttributes_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((WindowAttributes_t *)(G__getstructoffset()))->~G__TWindowAttributes_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_132_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   WindowAttributes_t *dest = (WindowAttributes_t*)(G__getstructoffset());
   *dest = (*(WindowAttributes_t*)libp->para[0].ref);
   const WindowAttributes_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Event_t */
// automatic default constructor
static int G__G__Base3_133_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Event_t *p;
   if(G__getaryconstruct()) p=new Event_t[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) Event_t;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_Event_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_133_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   Event_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new Event_t(*(Event_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_Event_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Event_t G__TEvent_t;
static int G__G__Base3_133_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (Event_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((Event_t *)((G__getstructoffset())+sizeof(Event_t)*i))->~G__TEvent_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((Event_t *)(G__getstructoffset()))->~G__TEvent_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_133_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Event_t *dest = (Event_t*)(G__getstructoffset());
   *dest = (*(Event_t*)libp->para[0].ref);
   const Event_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GCValues_t */
static int G__G__Base3_136_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   GCValues_t *p=NULL;
   if(G__getaryconstruct()) p=new GCValues_t[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) GCValues_t;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_GCValues_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_136_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   GCValues_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new GCValues_t(*(GCValues_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_GCValues_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GCValues_t G__TGCValues_t;
static int G__G__Base3_136_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (GCValues_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((GCValues_t *)((G__getstructoffset())+sizeof(GCValues_t)*i))->~G__TGCValues_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((GCValues_t *)(G__getstructoffset()))->~G__TGCValues_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_136_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   GCValues_t *dest = (GCValues_t*)(G__getstructoffset());
   *dest = (*(GCValues_t*)libp->para[0].ref);
   const GCValues_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ColorStruct_t */
// automatic default constructor
static int G__G__Base3_137_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   ColorStruct_t *p;
   if(G__getaryconstruct()) p=new ColorStruct_t[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) ColorStruct_t;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_ColorStruct_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_137_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   ColorStruct_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new ColorStruct_t(*(ColorStruct_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_ColorStruct_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ColorStruct_t G__TColorStruct_t;
static int G__G__Base3_137_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (ColorStruct_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((ColorStruct_t *)((G__getstructoffset())+sizeof(ColorStruct_t)*i))->~G__TColorStruct_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((ColorStruct_t *)(G__getstructoffset()))->~G__TColorStruct_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_137_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   ColorStruct_t *dest = (ColorStruct_t*)(G__getstructoffset());
   *dest = (*(ColorStruct_t*)libp->para[0].ref);
   const ColorStruct_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PictureAttributes_t */
// automatic default constructor
static int G__G__Base3_138_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   PictureAttributes_t *p;
   if(G__getaryconstruct()) p=new PictureAttributes_t[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) PictureAttributes_t;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_PictureAttributes_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_138_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   PictureAttributes_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new PictureAttributes_t(*(PictureAttributes_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_PictureAttributes_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PictureAttributes_t G__TPictureAttributes_t;
static int G__G__Base3_138_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (PictureAttributes_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((PictureAttributes_t *)((G__getstructoffset())+sizeof(PictureAttributes_t)*i))->~G__TPictureAttributes_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((PictureAttributes_t *)(G__getstructoffset()))->~G__TPictureAttributes_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_138_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   PictureAttributes_t *dest = (PictureAttributes_t*)(G__getstructoffset());
   *dest = (*(PictureAttributes_t*)libp->para[0].ref);
   const PictureAttributes_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Segment_t */
// automatic default constructor
static int G__G__Base3_140_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Segment_t *p;
   if(G__getaryconstruct()) p=new Segment_t[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) Segment_t;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_Segment_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_140_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   Segment_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new Segment_t(*(Segment_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_Segment_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Segment_t G__TSegment_t;
static int G__G__Base3_140_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (Segment_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((Segment_t *)((G__getstructoffset())+sizeof(Segment_t)*i))->~G__TSegment_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((Segment_t *)(G__getstructoffset()))->~G__TSegment_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_140_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Segment_t *dest = (Segment_t*)(G__getstructoffset());
   *dest = (*(Segment_t*)libp->para[0].ref);
   const Segment_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Point_t */
// automatic default constructor
static int G__G__Base3_141_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Point_t *p;
   if(G__getaryconstruct()) p=new Point_t[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) Point_t;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_Point_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_141_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   Point_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new Point_t(*(Point_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_Point_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Point_t G__TPoint_t;
static int G__G__Base3_141_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (Point_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((Point_t *)((G__getstructoffset())+sizeof(Point_t)*i))->~G__TPoint_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((Point_t *)(G__getstructoffset()))->~G__TPoint_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_141_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Point_t *dest = (Point_t*)(G__getstructoffset());
   *dest = (*(Point_t*)libp->para[0].ref);
   const Point_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Rectangle_t */
// automatic default constructor
static int G__G__Base3_142_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Rectangle_t *p;
   if(G__getaryconstruct()) p=new Rectangle_t[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) Rectangle_t;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_Rectangle_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_142_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   Rectangle_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new Rectangle_t(*(Rectangle_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_Rectangle_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Rectangle_t G__TRectangle_t;
static int G__G__Base3_142_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (Rectangle_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((Rectangle_t *)((G__getstructoffset())+sizeof(Rectangle_t)*i))->~G__TRectangle_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((Rectangle_t *)(G__getstructoffset()))->~G__TRectangle_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_142_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Rectangle_t *dest = (Rectangle_t*)(G__getstructoffset());
   *dest = (*(Rectangle_t*)libp->para[0].ref);
   const Rectangle_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* timespec */
// automatic default constructor
static int G__G__Base3_150_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   timespec *p;
   if(G__getaryconstruct()) p=new timespec[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) timespec;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_timespec);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_150_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   timespec *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new timespec(*(timespec*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_timespec);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef timespec G__Ttimespec;
static int G__G__Base3_150_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (timespec *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((timespec *)((G__getstructoffset())+sizeof(timespec)*i))->~G__Ttimespec();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((timespec *)(G__getstructoffset()))->~G__Ttimespec();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_150_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   timespec *dest = (timespec*)(G__getstructoffset());
   *dest = (*(timespec*)libp->para[0].ref);
   const timespec& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTimeStamp */
static int G__G__Base3_151_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTimeStamp *p=NULL;
   if(G__getaryconstruct()) p=new TTimeStamp[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTimeStamp *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp(*(timespec_t*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTimeStamp *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp((time_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTimeStamp *p=NULL;
   switch(libp->paran) {
   case 9:
      p = ::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp(
(UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(UInt_t)G__int(libp->para[5])
,(UInt_t)G__int(libp->para[6]),(Bool_t)G__int(libp->para[7])
,(Int_t)G__int(libp->para[8]));
      break;
   case 8:
      p = ::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp(
(UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(UInt_t)G__int(libp->para[5])
,(UInt_t)G__int(libp->para[6]),(Bool_t)G__int(libp->para[7]));
      break;
   case 7:
      p = ::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp(
(UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(UInt_t)G__int(libp->para[5])
,(UInt_t)G__int(libp->para[6]));
      break;
   case 6:
      p = ::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp(
(UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(UInt_t)G__int(libp->para[5]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTimeStamp *p=NULL;
   switch(libp->paran) {
   case 5:
      p = ::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp(
(UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(Bool_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      p = ::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp(
(UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(Bool_t)G__int(libp->para[3]));
      break;
   case 3:
      p = ::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp(
(UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTimeStamp *p=NULL;
   switch(libp->paran) {
   case 4:
      p = ::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp(
(UInt_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Bool_t)G__int(libp->para[3]));
      break;
   case 3:
      p = ::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp(
(UInt_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = ::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp((UInt_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      p = ::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TTimeStamp((UInt_t)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTimeStamp*)(G__getstructoffset()))->Set();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTimeStamp*)(G__getstructoffset()))->Set(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])
,(Int_t)G__int(libp->para[6]),(Bool_t)G__int(libp->para[7])
,(Int_t)G__int(libp->para[8]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTimeStamp*)(G__getstructoffset()))->Set((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Bool_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTimeStamp*)(G__getstructoffset()))->Set((UInt_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Bool_t)G__int(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         timespec_t *pobj,xobj=((const TTimeStamp*)(G__getstructoffset()))->GetTimeSpec();
        pobj=new timespec_t(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,108,(long)((const TTimeStamp*)(G__getstructoffset()))->GetSec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetNanoSec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,67,(long)((const TTimeStamp*)(G__getstructoffset()))->AsString((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,67,(long)((const TTimeStamp*)(G__getstructoffset()))->AsString());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TTimeStamp*)(G__getstructoffset()))->Copy(*(TTimeStamp*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDate((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(UInt_t*)G__int(libp->para[2]),(UInt_t*)G__int(libp->para[3])
,(UInt_t*)G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDate((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(UInt_t*)G__int(libp->para[2]),(UInt_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDate((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(UInt_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDate((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDate((Bool_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDate());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetTime((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(UInt_t*)G__int(libp->para[2]),(UInt_t*)G__int(libp->para[3])
,(UInt_t*)G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetTime((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(UInt_t*)G__int(libp->para[2]),(UInt_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetTime((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(UInt_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetTime((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetTime((Bool_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,104,(long)((const TTimeStamp*)(G__getstructoffset()))->GetTime());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDayOfYear((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDayOfYear((Bool_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDayOfYear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDayOfWeek((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDayOfWeek((Bool_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetDayOfWeek());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetMonth((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetMonth((Bool_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetMonth());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetWeek((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetWeek((Bool_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((const TTimeStamp*)(G__getstructoffset()))->GetWeek());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,103,(long)((const TTimeStamp*)(G__getstructoffset()))->IsLeapYear((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((const TTimeStamp*)(G__getstructoffset()))->IsLeapYear((Bool_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,103,(long)((const TTimeStamp*)(G__getstructoffset()))->IsLeapYear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTimeStamp*)(G__getstructoffset()))->Add(*(TTimeStamp*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TTimeStamp*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TTimeStamp*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TTimeStamp*)(G__getstructoffset()))->operator double());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTimeStamp::GetZoneOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,108,(long)TTimeStamp::MktimeFromUTC((tm_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TTimeStamp::DumpTMStruct(*(tm_t*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTimeStamp::GetDayOfYear((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTimeStamp::GetDayOfWeek((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTimeStamp::GetWeek((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)TTimeStamp::IsLeapYear((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TTimeStamp::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTimeStamp::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TTimeStamp::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TTimeStamp::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTimeStamp*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTimeStamp*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTimeStamp*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTimeStamp*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTimeStamp::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTimeStamp::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTimeStamp::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_151_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTimeStamp::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_151_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TTimeStamp *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TTimeStamp(*(TTimeStamp*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTimeStamp G__TTTimeStamp;
static int G__G__Base3_151_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TTimeStamp *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TTimeStamp *)((G__getstructoffset())+sizeof(TTimeStamp)*i))->~G__TTTimeStamp();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TTimeStamp *)(G__getstructoffset()))->~G__TTTimeStamp();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_151_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTimeStamp *dest = (TTimeStamp*)(G__getstructoffset());
   *dest = (*(TTimeStamp*)libp->para[0].ref);
   const TTimeStamp& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVirtualMutex */
static int G__G__Base3_152_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVirtualMutex *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TVirtualMutex((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TVirtualMutex[G__getaryconstruct()];
   else                    p=new TVirtualMutex;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TVirtualMutex);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualMutex*)(G__getstructoffset()))->Lock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualMutex*)(G__getstructoffset()))->TryLock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualMutex*)(G__getstructoffset()))->UnLock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualMutex*)(G__getstructoffset()))->CleanUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualMutex*)(G__getstructoffset()))->Acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualMutex*)(G__getstructoffset()))->Release());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVirtualMutex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualMutex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TVirtualMutex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TVirtualMutex::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualMutex*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualMutex*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualMutex*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualMutex*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualMutex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualMutex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualMutex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_152_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualMutex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_152_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TVirtualMutex *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TVirtualMutex(*(TVirtualMutex*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TVirtualMutex);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVirtualMutex G__TTVirtualMutex;
static int G__G__Base3_152_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TVirtualMutex *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TVirtualMutex *)((G__getstructoffset())+sizeof(TVirtualMutex)*i);
   else  delete (TVirtualMutex *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_152_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVirtualMutex *dest = (TVirtualMutex*)(G__getstructoffset());
   *dest = (*(TVirtualMutex*)libp->para[0].ref);
   const TVirtualMutex& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLockGuard */
static int G__G__Base3_153_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLockGuard *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) TLockGuard((TVirtualMutex*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TLockGuard);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLockGuard::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLockGuard::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLockGuard::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLockGuard::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLockGuard*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLockGuard*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLockGuard*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLockGuard*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLockGuard::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLockGuard::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLockGuard::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_153_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLockGuard::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_153_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLockGuard *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLockGuard(*(TLockGuard*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TLockGuard);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLockGuard G__TTLockGuard;
static int G__G__Base3_153_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLockGuard *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TLockGuard *)((G__getstructoffset())+sizeof(TLockGuard)*i))->~G__TTLockGuard();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TLockGuard *)(G__getstructoffset()))->~G__TTLockGuard();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_153_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLockGuard *dest = (TLockGuard*)(G__getstructoffset());
   *dest = (*(TLockGuard*)libp->para[0].ref);
   const TLockGuard& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArchiveFile */
static int G__G__Base3_169_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TArchiveFile*)(G__getstructoffset()))->OpenArchive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TArchiveFile*)(G__getstructoffset()))->SetCurrentMember());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TArchiveFile*)(G__getstructoffset()))->SetMember((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TArchiveFile*)(G__getstructoffset()))->SetMember((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TArchiveFile*)(G__getstructoffset()))->GetMemberFilePosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TArchiveFile*)(G__getstructoffset()))->GetMember());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TArchiveFile*)(G__getstructoffset()))->GetMembers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TArchiveFile*)(G__getstructoffset()))->GetNumberOfMembers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TArchiveFile*)(G__getstructoffset()))->GetArchiveName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TArchiveFile*)(G__getstructoffset()))->GetMemberName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TArchiveFile*)(G__getstructoffset()))->GetMemberIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TArchiveFile::Open((const char*)G__int(libp->para[0]),(TFile*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TArchiveFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArchiveFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TArchiveFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TArchiveFile::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TArchiveFile*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArchiveFile*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArchiveFile*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArchiveFile*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArchiveFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TArchiveFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArchiveFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_169_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TArchiveFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArchiveFile G__TTArchiveFile;
static int G__G__Base3_169_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TArchiveFile *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TArchiveFile *)((G__getstructoffset())+sizeof(TArchiveFile)*i);
   else  delete (TArchiveFile *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_169_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TArchiveFile *dest = (TArchiveFile*)(G__getstructoffset());
   *dest = (*(TArchiveFile*)libp->para[0].ref);
   const TArchiveFile& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVirtualPerfStats */
static int G__G__Base3_195_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPerfStats*)(G__getstructoffset()))->SimpleEvent((TVirtualPerfStats::EEventType)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPerfStats*)(G__getstructoffset()))->PacketEvent(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]),(Long64_t)G__Longlong(libp->para[7]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPerfStats*)(G__getstructoffset()))->FileEvent((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPerfStats*)(G__getstructoffset()))->FileOpenEvent((TFile*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPerfStats*)(G__getstructoffset()))->FileReadEvent((TFile*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPerfStats*)(G__getstructoffset()))->SetBytesRead((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TVirtualPerfStats*)(G__getstructoffset()))->GetBytesRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualPerfStats::EventType((TVirtualPerfStats::EEventType)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVirtualPerfStats::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualPerfStats::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TVirtualPerfStats::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TVirtualPerfStats::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualPerfStats*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPerfStats*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPerfStats*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPerfStats*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualPerfStats::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualPerfStats::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualPerfStats::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_195_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualPerfStats::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVirtualPerfStats G__TTVirtualPerfStats;
static int G__G__Base3_195_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TVirtualPerfStats *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TVirtualPerfStats *)((G__getstructoffset())+sizeof(TVirtualPerfStats)*i);
   else  delete (TVirtualPerfStats *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_195_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVirtualPerfStats *dest = (TVirtualPerfStats*)(G__getstructoffset());
   *dest = (*(TVirtualPerfStats*)libp->para[0].ref);
   const TVirtualPerfStats& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArchiveMember */
static int G__G__Base3_213_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TArchiveMember *p=NULL;
   if(G__getaryconstruct()) p=new TArchiveMember[G__getaryconstruct()];
   else                    p=new TArchiveMember;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TArchiveMember *p=NULL;
      p = new TArchiveMember((const char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TArchiveMember *p=NULL;
      p = new TArchiveMember(*(TArchiveMember*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TArchiveMember& obj=((TArchiveMember*)(G__getstructoffset()))->operator=(*(TArchiveMember*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TArchiveMember*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TArchiveMember*)(G__getstructoffset()))->GetComment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TDatime *pobj,xobj=((const TArchiveMember*)(G__getstructoffset()))->GetModTime();
        pobj=new TDatime(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TArchiveMember*)(G__getstructoffset()))->GetPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TArchiveMember*)(G__getstructoffset()))->GetFilePosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TArchiveMember*)(G__getstructoffset()))->GetCompressedSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TArchiveMember*)(G__getstructoffset()))->GetDecompressedSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TArchiveMember*)(G__getstructoffset()))->IsDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TArchiveMember::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArchiveMember::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TArchiveMember::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TArchiveMember::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TArchiveMember*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArchiveMember*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArchiveMember*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArchiveMember*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArchiveMember::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TArchiveMember::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArchiveMember::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_213_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TArchiveMember::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArchiveMember G__TTArchiveMember;
static int G__G__Base3_213_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TArchiveMember *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TArchiveMember *)((G__getstructoffset())+sizeof(TArchiveMember)*i);
   else  delete (TArchiveMember *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TZIPMember */
static int G__G__Base3_214_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TZIPMember *p=NULL;
   if(G__getaryconstruct()) p=new TZIPMember[G__getaryconstruct()];
   else                    p=new TZIPMember;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TZIPMember);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TZIPMember *p=NULL;
      p = new TZIPMember((const char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TZIPMember);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TZIPMember *p=NULL;
      p = new TZIPMember(*(TZIPMember*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TZIPMember);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TZIPMember& obj=((TZIPMember*)(G__getstructoffset()))->operator=(*(TZIPMember*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TZIPMember*)(G__getstructoffset()))->GetLocal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TZIPMember*)(G__getstructoffset()))->GetLocalLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TZIPMember*)(G__getstructoffset()))->GetGlobal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TZIPMember*)(G__getstructoffset()))->GetGlobalLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TZIPMember*)(G__getstructoffset()))->GetCRC32());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TZIPMember*)(G__getstructoffset()))->GetAttrInt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TZIPMember*)(G__getstructoffset()))->GetAttrExt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TZIPMember*)(G__getstructoffset()))->GetMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TZIPMember*)(G__getstructoffset()))->GetLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TZIPMember*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TZIPMember*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TZIPMember::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TZIPMember::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TZIPMember::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TZIPMember::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TZIPMember*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TZIPMember*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TZIPMember*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TZIPMember*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TZIPMember::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TZIPMember::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TZIPMember::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_214_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TZIPMember::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TZIPMember G__TTZIPMember;
static int G__G__Base3_214_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TZIPMember *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TZIPMember *)((G__getstructoffset())+sizeof(TZIPMember)*i);
   else  delete (TZIPMember *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TZIPFile */
static int G__G__Base3_215_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TZIPFile *p=NULL;
   if(G__getaryconstruct()) p=new TZIPFile[G__getaryconstruct()];
   else                    p=new TZIPFile;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TZIPFile);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TZIPFile *p=NULL;
      p = new TZIPFile(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(TFile*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TZIPFile);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TZIPFile*)(G__getstructoffset()))->OpenArchive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TZIPFile*)(G__getstructoffset()))->SetCurrentMember());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TZIPFile*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TZIPFile*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TZIPFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TZIPFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TZIPFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TZIPFile::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TZIPFile*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TZIPFile*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TZIPFile*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TZIPFile*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TZIPFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TZIPFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TZIPFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_215_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TZIPFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_215_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TZIPFile *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TZIPFile(*(TZIPFile*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TZIPFile);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TZIPFile G__TTZIPFile;
static int G__G__Base3_215_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TZIPFile *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TZIPFile *)((G__getstructoffset())+sizeof(TZIPFile)*i);
   else  delete (TZIPFile *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_215_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TZIPFile *dest = (TZIPFile*)(G__getstructoffset());
   *dest = (*(TZIPFile*)libp->para[0].ref);
   const TZIPFile& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<char*,int> */
static int G__G__Base3_217_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,int> *p=NULL;
   if(G__getaryconstruct()) p=new pair<char*,int>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,int>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_217_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,int> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,int>(libp->para[0].ref?*(char**)libp->para[0].ref:*(char**)(&G__Mlong(libp->para[0])),*(int*)G__Intref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_217_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<char*,int> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<char*,int>(*(pair<char*,int>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<char*,int> G__TpairlEcharmUcOintgR;
static int G__G__Base3_217_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<char*,int> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<char*,int> *)((G__getstructoffset())+sizeof(pair<char*,int>)*i))->~G__TpairlEcharmUcOintgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<char*,int> *)(G__getstructoffset()))->~G__TpairlEcharmUcOintgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<char*,long> */
static int G__G__Base3_218_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,long> *p=NULL;
   if(G__getaryconstruct()) p=new pair<char*,long>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,long>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_218_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,long> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,long>(libp->para[0].ref?*(char**)libp->para[0].ref:*(char**)(&G__Mlong(libp->para[0])),*(long*)G__Longref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_218_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<char*,long> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<char*,long>(*(pair<char*,long>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<char*,long> G__TpairlEcharmUcOlonggR;
static int G__G__Base3_218_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<char*,long> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<char*,long> *)((G__getstructoffset())+sizeof(pair<char*,long>)*i))->~G__TpairlEcharmUcOlonggR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<char*,long> *)(G__getstructoffset()))->~G__TpairlEcharmUcOlonggR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<char*,float> */
static int G__G__Base3_219_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,float> *p=NULL;
   if(G__getaryconstruct()) p=new pair<char*,float>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,float>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_219_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,float> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,float>(libp->para[0].ref?*(char**)libp->para[0].ref:*(char**)(&G__Mlong(libp->para[0])),*(float*)G__Floatref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_219_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<char*,float> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<char*,float>(*(pair<char*,float>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<char*,float> G__TpairlEcharmUcOfloatgR;
static int G__G__Base3_219_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<char*,float> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<char*,float> *)((G__getstructoffset())+sizeof(pair<char*,float>)*i))->~G__TpairlEcharmUcOfloatgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<char*,float> *)(G__getstructoffset()))->~G__TpairlEcharmUcOfloatgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<char*,double> */
static int G__G__Base3_220_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,double> *p=NULL;
   if(G__getaryconstruct()) p=new pair<char*,double>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,double>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_220_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,double> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,double>(libp->para[0].ref?*(char**)libp->para[0].ref:*(char**)(&G__Mlong(libp->para[0])),*(double*)G__Doubleref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_220_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<char*,double> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<char*,double>(*(pair<char*,double>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<char*,double> G__TpairlEcharmUcOdoublegR;
static int G__G__Base3_220_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<char*,double> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<char*,double> *)((G__getstructoffset())+sizeof(pair<char*,double>)*i))->~G__TpairlEcharmUcOdoublegR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<char*,double> *)(G__getstructoffset()))->~G__TpairlEcharmUcOdoublegR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<char*,void*> */
static int G__G__Base3_221_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,void*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<char*,void*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,void*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_221_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,void*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,void*>(libp->para[0].ref?*(char**)libp->para[0].ref:*(char**)(&G__Mlong(libp->para[0])),libp->para[1].ref?*(void**)libp->para[1].ref:*(void**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_221_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<char*,void*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<char*,void*>(*(pair<char*,void*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<char*,void*> G__TpairlEcharmUcOvoidmUgR;
static int G__G__Base3_221_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<char*,void*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<char*,void*> *)((G__getstructoffset())+sizeof(pair<char*,void*>)*i))->~G__TpairlEcharmUcOvoidmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<char*,void*> *)(G__getstructoffset()))->~G__TpairlEcharmUcOvoidmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<char*,char*> */
static int G__G__Base3_222_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,char*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<char*,char*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,char*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_222_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<char*,char*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<char*,char*>(libp->para[0].ref?*(char**)libp->para[0].ref:*(char**)(&G__Mlong(libp->para[0])),libp->para[1].ref?*(char**)libp->para[1].ref:*(char**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_222_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<char*,char*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<char*,char*>(*(pair<char*,char*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<char*,char*> G__TpairlEcharmUcOcharmUgR;
static int G__G__Base3_222_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<char*,char*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<char*,char*> *)((G__getstructoffset())+sizeof(pair<char*,char*>)*i))->~G__TpairlEcharmUcOcharmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<char*,char*> *)(G__getstructoffset()))->~G__TpairlEcharmUcOcharmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<string,int> */
static int G__G__Base3_223_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<string,int> *p=NULL;
   if(G__getaryconstruct()) p=new pair<string,int>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<string,int>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_223_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<string,int> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<string,int>(*(string*)libp->para[0].ref,*(int*)G__Intref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_223_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<string,int> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<string,int>(*(pair<string,int>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<string,int> G__TpairlEstringcOintgR;
static int G__G__Base3_223_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<string,int> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<string,int> *)((G__getstructoffset())+sizeof(pair<string,int>)*i))->~G__TpairlEstringcOintgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<string,int> *)(G__getstructoffset()))->~G__TpairlEstringcOintgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<string,long> */
static int G__G__Base3_224_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<string,long> *p=NULL;
   if(G__getaryconstruct()) p=new pair<string,long>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<string,long>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_224_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<string,long> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<string,long>(*(string*)libp->para[0].ref,*(long*)G__Longref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_224_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<string,long> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<string,long>(*(pair<string,long>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<string,long> G__TpairlEstringcOlonggR;
static int G__G__Base3_224_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<string,long> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<string,long> *)((G__getstructoffset())+sizeof(pair<string,long>)*i))->~G__TpairlEstringcOlonggR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<string,long> *)(G__getstructoffset()))->~G__TpairlEstringcOlonggR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<string,float> */
static int G__G__Base3_225_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<string,float> *p=NULL;
   if(G__getaryconstruct()) p=new pair<string,float>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<string,float>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_225_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<string,float> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<string,float>(*(string*)libp->para[0].ref,*(float*)G__Floatref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_225_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<string,float> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<string,float>(*(pair<string,float>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<string,float> G__TpairlEstringcOfloatgR;
static int G__G__Base3_225_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<string,float> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<string,float> *)((G__getstructoffset())+sizeof(pair<string,float>)*i))->~G__TpairlEstringcOfloatgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<string,float> *)(G__getstructoffset()))->~G__TpairlEstringcOfloatgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<string,double> */
static int G__G__Base3_226_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<string,double> *p=NULL;
   if(G__getaryconstruct()) p=new pair<string,double>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<string,double>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_226_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<string,double> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<string,double>(*(string*)libp->para[0].ref,*(double*)G__Doubleref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_226_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<string,double> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<string,double>(*(pair<string,double>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<string,double> G__TpairlEstringcOdoublegR;
static int G__G__Base3_226_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<string,double> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<string,double> *)((G__getstructoffset())+sizeof(pair<string,double>)*i))->~G__TpairlEstringcOdoublegR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<string,double> *)(G__getstructoffset()))->~G__TpairlEstringcOdoublegR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<string,void*> */
static int G__G__Base3_227_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<string,void*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<string,void*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<string,void*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_227_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<string,void*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<string,void*>(*(string*)libp->para[0].ref,libp->para[1].ref?*(void**)libp->para[1].ref:*(void**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_227_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<string,void*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<string,void*>(*(pair<string,void*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<string,void*> G__TpairlEstringcOvoidmUgR;
static int G__G__Base3_227_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<string,void*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<string,void*> *)((G__getstructoffset())+sizeof(pair<string,void*>)*i))->~G__TpairlEstringcOvoidmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<string,void*> *)(G__getstructoffset()))->~G__TpairlEstringcOvoidmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<long,int> */
static int G__G__Base3_228_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,int> *p=NULL;
   if(G__getaryconstruct()) p=new pair<long,int>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,int>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_228_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,int> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,int>(*(long*)G__Longref(&libp->para[0]),*(int*)G__Intref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_228_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<long,int> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<long,int>(*(pair<long,int>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<long,int> G__TpairlElongcOintgR;
static int G__G__Base3_228_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<long,int> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<long,int> *)((G__getstructoffset())+sizeof(pair<long,int>)*i))->~G__TpairlElongcOintgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<long,int> *)(G__getstructoffset()))->~G__TpairlElongcOintgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<long,long> */
static int G__G__Base3_229_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,long> *p=NULL;
   if(G__getaryconstruct()) p=new pair<long,long>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,long>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_229_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,long> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,long>(*(long*)G__Longref(&libp->para[0]),*(long*)G__Longref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_229_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<long,long> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<long,long>(*(pair<long,long>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<long,long> G__TpairlElongcOlonggR;
static int G__G__Base3_229_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<long,long> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<long,long> *)((G__getstructoffset())+sizeof(pair<long,long>)*i))->~G__TpairlElongcOlonggR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<long,long> *)(G__getstructoffset()))->~G__TpairlElongcOlonggR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<long,float> */
static int G__G__Base3_230_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,float> *p=NULL;
   if(G__getaryconstruct()) p=new pair<long,float>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,float>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_230_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,float> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,float>(*(long*)G__Longref(&libp->para[0]),*(float*)G__Floatref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_230_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<long,float> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<long,float>(*(pair<long,float>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<long,float> G__TpairlElongcOfloatgR;
static int G__G__Base3_230_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<long,float> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<long,float> *)((G__getstructoffset())+sizeof(pair<long,float>)*i))->~G__TpairlElongcOfloatgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<long,float> *)(G__getstructoffset()))->~G__TpairlElongcOfloatgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<long,double> */
static int G__G__Base3_231_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,double> *p=NULL;
   if(G__getaryconstruct()) p=new pair<long,double>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,double>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_231_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,double> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,double>(*(long*)G__Longref(&libp->para[0]),*(double*)G__Doubleref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_231_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<long,double> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<long,double>(*(pair<long,double>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<long,double> G__TpairlElongcOdoublegR;
static int G__G__Base3_231_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<long,double> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<long,double> *)((G__getstructoffset())+sizeof(pair<long,double>)*i))->~G__TpairlElongcOdoublegR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<long,double> *)(G__getstructoffset()))->~G__TpairlElongcOdoublegR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<long,void*> */
static int G__G__Base3_232_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,void*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<long,void*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,void*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_232_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,void*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,void*>(*(long*)G__Longref(&libp->para[0]),libp->para[1].ref?*(void**)libp->para[1].ref:*(void**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_232_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<long,void*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<long,void*>(*(pair<long,void*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<long,void*> G__TpairlElongcOvoidmUgR;
static int G__G__Base3_232_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<long,void*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<long,void*> *)((G__getstructoffset())+sizeof(pair<long,void*>)*i))->~G__TpairlElongcOvoidmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<long,void*> *)(G__getstructoffset()))->~G__TpairlElongcOvoidmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<long,char*> */
static int G__G__Base3_233_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,char*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<long,char*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,char*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_233_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<long,char*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<long,char*>(*(long*)G__Longref(&libp->para[0]),libp->para[1].ref?*(char**)libp->para[1].ref:*(char**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_233_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<long,char*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<long,char*>(*(pair<long,char*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<long,char*> G__TpairlElongcOcharmUgR;
static int G__G__Base3_233_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<long,char*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<long,char*> *)((G__getstructoffset())+sizeof(pair<long,char*>)*i))->~G__TpairlElongcOcharmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<long,char*> *)(G__getstructoffset()))->~G__TpairlElongcOcharmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<double,int> */
static int G__G__Base3_234_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,int> *p=NULL;
   if(G__getaryconstruct()) p=new pair<double,int>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,int>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_234_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,int> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,int>(*(double*)G__Doubleref(&libp->para[0]),*(int*)G__Intref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_234_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<double,int> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<double,int>(*(pair<double,int>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<double,int> G__TpairlEdoublecOintgR;
static int G__G__Base3_234_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<double,int> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<double,int> *)((G__getstructoffset())+sizeof(pair<double,int>)*i))->~G__TpairlEdoublecOintgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<double,int> *)(G__getstructoffset()))->~G__TpairlEdoublecOintgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<double,long> */
static int G__G__Base3_235_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,long> *p=NULL;
   if(G__getaryconstruct()) p=new pair<double,long>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,long>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_235_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,long> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,long>(*(double*)G__Doubleref(&libp->para[0]),*(long*)G__Longref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_235_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<double,long> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<double,long>(*(pair<double,long>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<double,long> G__TpairlEdoublecOlonggR;
static int G__G__Base3_235_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<double,long> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<double,long> *)((G__getstructoffset())+sizeof(pair<double,long>)*i))->~G__TpairlEdoublecOlonggR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<double,long> *)(G__getstructoffset()))->~G__TpairlEdoublecOlonggR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<double,float> */
static int G__G__Base3_236_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,float> *p=NULL;
   if(G__getaryconstruct()) p=new pair<double,float>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,float>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_236_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,float> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,float>(*(double*)G__Doubleref(&libp->para[0]),*(float*)G__Floatref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_236_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<double,float> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<double,float>(*(pair<double,float>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<double,float> G__TpairlEdoublecOfloatgR;
static int G__G__Base3_236_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<double,float> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<double,float> *)((G__getstructoffset())+sizeof(pair<double,float>)*i))->~G__TpairlEdoublecOfloatgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<double,float> *)(G__getstructoffset()))->~G__TpairlEdoublecOfloatgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<double,double> */
static int G__G__Base3_237_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,double> *p=NULL;
   if(G__getaryconstruct()) p=new pair<double,double>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,double>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_237_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,double> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,double>(*(double*)G__Doubleref(&libp->para[0]),*(double*)G__Doubleref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_237_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<double,double> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<double,double>(*(pair<double,double>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<double,double> G__TpairlEdoublecOdoublegR;
static int G__G__Base3_237_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<double,double> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<double,double> *)((G__getstructoffset())+sizeof(pair<double,double>)*i))->~G__TpairlEdoublecOdoublegR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<double,double> *)(G__getstructoffset()))->~G__TpairlEdoublecOdoublegR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<double,void*> */
static int G__G__Base3_238_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,void*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<double,void*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,void*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_238_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,void*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,void*>(*(double*)G__Doubleref(&libp->para[0]),libp->para[1].ref?*(void**)libp->para[1].ref:*(void**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_238_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<double,void*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<double,void*>(*(pair<double,void*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<double,void*> G__TpairlEdoublecOvoidmUgR;
static int G__G__Base3_238_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<double,void*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<double,void*> *)((G__getstructoffset())+sizeof(pair<double,void*>)*i))->~G__TpairlEdoublecOvoidmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<double,void*> *)(G__getstructoffset()))->~G__TpairlEdoublecOvoidmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<double,char*> */
static int G__G__Base3_239_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,char*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<double,char*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,char*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_239_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<double,char*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<double,char*>(*(double*)G__Doubleref(&libp->para[0]),libp->para[1].ref?*(char**)libp->para[1].ref:*(char**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_239_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<double,char*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<double,char*>(*(pair<double,char*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<double,char*> G__TpairlEdoublecOcharmUgR;
static int G__G__Base3_239_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<double,char*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<double,char*> *)((G__getstructoffset())+sizeof(pair<double,char*>)*i))->~G__TpairlEdoublecOcharmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<double,char*> *)(G__getstructoffset()))->~G__TpairlEdoublecOcharmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const char*,int> */
static int G__G__Base3_240_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,int> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const char*,int>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,int>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_240_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,int> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,int>(libp->para[0].ref?*(const char**)libp->para[0].ref:*(const char**)(&G__Mlong(libp->para[0])),*(int*)G__Intref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_240_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const char*,int> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const char*,int>(*(pair<const char*,int>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const char*,int> G__TpairlEconstsPcharmUcOintgR;
static int G__G__Base3_240_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const char*,int> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const char*,int> *)((G__getstructoffset())+sizeof(pair<const char*,int>)*i))->~G__TpairlEconstsPcharmUcOintgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const char*,int> *)(G__getstructoffset()))->~G__TpairlEconstsPcharmUcOintgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const char*,long> */
static int G__G__Base3_241_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,long> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const char*,long>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,long>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_241_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,long> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,long>(libp->para[0].ref?*(const char**)libp->para[0].ref:*(const char**)(&G__Mlong(libp->para[0])),*(long*)G__Longref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_241_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const char*,long> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const char*,long>(*(pair<const char*,long>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const char*,long> G__TpairlEconstsPcharmUcOlonggR;
static int G__G__Base3_241_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const char*,long> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const char*,long> *)((G__getstructoffset())+sizeof(pair<const char*,long>)*i))->~G__TpairlEconstsPcharmUcOlonggR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const char*,long> *)(G__getstructoffset()))->~G__TpairlEconstsPcharmUcOlonggR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const char*,float> */
static int G__G__Base3_242_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,float> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const char*,float>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,float>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_242_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,float> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,float>(libp->para[0].ref?*(const char**)libp->para[0].ref:*(const char**)(&G__Mlong(libp->para[0])),*(float*)G__Floatref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_242_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const char*,float> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const char*,float>(*(pair<const char*,float>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const char*,float> G__TpairlEconstsPcharmUcOfloatgR;
static int G__G__Base3_242_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const char*,float> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const char*,float> *)((G__getstructoffset())+sizeof(pair<const char*,float>)*i))->~G__TpairlEconstsPcharmUcOfloatgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const char*,float> *)(G__getstructoffset()))->~G__TpairlEconstsPcharmUcOfloatgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const char*,double> */
static int G__G__Base3_243_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,double> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const char*,double>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,double>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_243_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,double> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,double>(libp->para[0].ref?*(const char**)libp->para[0].ref:*(const char**)(&G__Mlong(libp->para[0])),*(double*)G__Doubleref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_243_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const char*,double> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const char*,double>(*(pair<const char*,double>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const char*,double> G__TpairlEconstsPcharmUcOdoublegR;
static int G__G__Base3_243_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const char*,double> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const char*,double> *)((G__getstructoffset())+sizeof(pair<const char*,double>)*i))->~G__TpairlEconstsPcharmUcOdoublegR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const char*,double> *)(G__getstructoffset()))->~G__TpairlEconstsPcharmUcOdoublegR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const char*,void*> */
static int G__G__Base3_244_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,void*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const char*,void*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,void*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_244_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,void*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,void*>(libp->para[0].ref?*(const char**)libp->para[0].ref:*(const char**)(&G__Mlong(libp->para[0])),libp->para[1].ref?*(void**)libp->para[1].ref:*(void**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_244_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const char*,void*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const char*,void*>(*(pair<const char*,void*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const char*,void*> G__TpairlEconstsPcharmUcOvoidmUgR;
static int G__G__Base3_244_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const char*,void*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const char*,void*> *)((G__getstructoffset())+sizeof(pair<const char*,void*>)*i))->~G__TpairlEconstsPcharmUcOvoidmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const char*,void*> *)(G__getstructoffset()))->~G__TpairlEconstsPcharmUcOvoidmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const char*,char*> */
static int G__G__Base3_245_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,char*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const char*,char*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,char*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_245_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const char*,char*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const char*,char*>(libp->para[0].ref?*(const char**)libp->para[0].ref:*(const char**)(&G__Mlong(libp->para[0])),libp->para[1].ref?*(char**)libp->para[1].ref:*(char**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_245_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const char*,char*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const char*,char*>(*(pair<const char*,char*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const char*,char*> G__TpairlEconstsPcharmUcOcharmUgR;
static int G__G__Base3_245_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const char*,char*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const char*,char*> *)((G__getstructoffset())+sizeof(pair<const char*,char*>)*i))->~G__TpairlEconstsPcharmUcOcharmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const char*,char*> *)(G__getstructoffset()))->~G__TpairlEconstsPcharmUcOcharmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const string,int> */
static int G__G__Base3_246_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const string,int> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const string,int>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const string,int>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_246_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const string,int> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const string,int>(*(string*)libp->para[0].ref,*(int*)G__Intref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_246_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const string,int> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const string,int>(*(pair<const string,int>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const string,int> G__TpairlEconstsPstringcOintgR;
static int G__G__Base3_246_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const string,int> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const string,int> *)((G__getstructoffset())+sizeof(pair<const string,int>)*i))->~G__TpairlEconstsPstringcOintgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const string,int> *)(G__getstructoffset()))->~G__TpairlEconstsPstringcOintgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const string,long> */
static int G__G__Base3_247_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const string,long> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const string,long>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const string,long>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_247_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const string,long> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const string,long>(*(string*)libp->para[0].ref,*(long*)G__Longref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_247_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const string,long> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const string,long>(*(pair<const string,long>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const string,long> G__TpairlEconstsPstringcOlonggR;
static int G__G__Base3_247_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const string,long> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const string,long> *)((G__getstructoffset())+sizeof(pair<const string,long>)*i))->~G__TpairlEconstsPstringcOlonggR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const string,long> *)(G__getstructoffset()))->~G__TpairlEconstsPstringcOlonggR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const string,float> */
static int G__G__Base3_248_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const string,float> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const string,float>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const string,float>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_248_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const string,float> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const string,float>(*(string*)libp->para[0].ref,*(float*)G__Floatref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_248_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const string,float> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const string,float>(*(pair<const string,float>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const string,float> G__TpairlEconstsPstringcOfloatgR;
static int G__G__Base3_248_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const string,float> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const string,float> *)((G__getstructoffset())+sizeof(pair<const string,float>)*i))->~G__TpairlEconstsPstringcOfloatgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const string,float> *)(G__getstructoffset()))->~G__TpairlEconstsPstringcOfloatgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const string,double> */
static int G__G__Base3_249_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const string,double> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const string,double>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const string,double>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_249_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const string,double> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const string,double>(*(string*)libp->para[0].ref,*(double*)G__Doubleref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_249_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const string,double> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const string,double>(*(pair<const string,double>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const string,double> G__TpairlEconstsPstringcOdoublegR;
static int G__G__Base3_249_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const string,double> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const string,double> *)((G__getstructoffset())+sizeof(pair<const string,double>)*i))->~G__TpairlEconstsPstringcOdoublegR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const string,double> *)(G__getstructoffset()))->~G__TpairlEconstsPstringcOdoublegR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const string,void*> */
static int G__G__Base3_250_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const string,void*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const string,void*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const string,void*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_250_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const string,void*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const string,void*>(*(string*)libp->para[0].ref,libp->para[1].ref?*(void**)libp->para[1].ref:*(void**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_250_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const string,void*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const string,void*>(*(pair<const string,void*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const string,void*> G__TpairlEconstsPstringcOvoidmUgR;
static int G__G__Base3_250_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const string,void*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const string,void*> *)((G__getstructoffset())+sizeof(pair<const string,void*>)*i))->~G__TpairlEconstsPstringcOvoidmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const string,void*> *)(G__getstructoffset()))->~G__TpairlEconstsPstringcOvoidmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const long,int> */
static int G__G__Base3_251_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,int> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const long,int>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,int>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_251_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,int> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,int>(*(long*)G__Longref(&libp->para[0]),*(int*)G__Intref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_251_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const long,int> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const long,int>(*(pair<const long,int>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const long,int> G__TpairlEconstsPlongcOintgR;
static int G__G__Base3_251_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const long,int> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const long,int> *)((G__getstructoffset())+sizeof(pair<const long,int>)*i))->~G__TpairlEconstsPlongcOintgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const long,int> *)(G__getstructoffset()))->~G__TpairlEconstsPlongcOintgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const long,long> */
static int G__G__Base3_252_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,long> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const long,long>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,long>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_252_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,long> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,long>(*(long*)G__Longref(&libp->para[0]),*(long*)G__Longref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_252_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const long,long> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const long,long>(*(pair<const long,long>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const long,long> G__TpairlEconstsPlongcOlonggR;
static int G__G__Base3_252_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const long,long> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const long,long> *)((G__getstructoffset())+sizeof(pair<const long,long>)*i))->~G__TpairlEconstsPlongcOlonggR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const long,long> *)(G__getstructoffset()))->~G__TpairlEconstsPlongcOlonggR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const long,float> */
static int G__G__Base3_253_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,float> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const long,float>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,float>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_253_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,float> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,float>(*(long*)G__Longref(&libp->para[0]),*(float*)G__Floatref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_253_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const long,float> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const long,float>(*(pair<const long,float>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const long,float> G__TpairlEconstsPlongcOfloatgR;
static int G__G__Base3_253_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const long,float> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const long,float> *)((G__getstructoffset())+sizeof(pair<const long,float>)*i))->~G__TpairlEconstsPlongcOfloatgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const long,float> *)(G__getstructoffset()))->~G__TpairlEconstsPlongcOfloatgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const long,double> */
static int G__G__Base3_254_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,double> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const long,double>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,double>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_254_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,double> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,double>(*(long*)G__Longref(&libp->para[0]),*(double*)G__Doubleref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_254_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const long,double> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const long,double>(*(pair<const long,double>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const long,double> G__TpairlEconstsPlongcOdoublegR;
static int G__G__Base3_254_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const long,double> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const long,double> *)((G__getstructoffset())+sizeof(pair<const long,double>)*i))->~G__TpairlEconstsPlongcOdoublegR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const long,double> *)(G__getstructoffset()))->~G__TpairlEconstsPlongcOdoublegR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const long,void*> */
static int G__G__Base3_255_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,void*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const long,void*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,void*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_255_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,void*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,void*>(*(long*)G__Longref(&libp->para[0]),libp->para[1].ref?*(void**)libp->para[1].ref:*(void**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_255_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const long,void*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const long,void*>(*(pair<const long,void*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const long,void*> G__TpairlEconstsPlongcOvoidmUgR;
static int G__G__Base3_255_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const long,void*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const long,void*> *)((G__getstructoffset())+sizeof(pair<const long,void*>)*i))->~G__TpairlEconstsPlongcOvoidmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const long,void*> *)(G__getstructoffset()))->~G__TpairlEconstsPlongcOvoidmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const long,char*> */
static int G__G__Base3_256_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,char*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const long,char*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,char*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_256_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const long,char*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const long,char*>(*(long*)G__Longref(&libp->para[0]),libp->para[1].ref?*(char**)libp->para[1].ref:*(char**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_256_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const long,char*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const long,char*>(*(pair<const long,char*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const long,char*> G__TpairlEconstsPlongcOcharmUgR;
static int G__G__Base3_256_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const long,char*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const long,char*> *)((G__getstructoffset())+sizeof(pair<const long,char*>)*i))->~G__TpairlEconstsPlongcOcharmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const long,char*> *)(G__getstructoffset()))->~G__TpairlEconstsPlongcOcharmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const double,int> */
static int G__G__Base3_257_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,int> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const double,int>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,int>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_257_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,int> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,int>(*(double*)G__Doubleref(&libp->para[0]),*(int*)G__Intref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_257_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const double,int> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const double,int>(*(pair<const double,int>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOintgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const double,int> G__TpairlEconstsPdoublecOintgR;
static int G__G__Base3_257_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const double,int> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const double,int> *)((G__getstructoffset())+sizeof(pair<const double,int>)*i))->~G__TpairlEconstsPdoublecOintgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const double,int> *)(G__getstructoffset()))->~G__TpairlEconstsPdoublecOintgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const double,long> */
static int G__G__Base3_258_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,long> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const double,long>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,long>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_258_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,long> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,long>(*(double*)G__Doubleref(&libp->para[0]),*(long*)G__Longref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_258_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const double,long> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const double,long>(*(pair<const double,long>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const double,long> G__TpairlEconstsPdoublecOlonggR;
static int G__G__Base3_258_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const double,long> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const double,long> *)((G__getstructoffset())+sizeof(pair<const double,long>)*i))->~G__TpairlEconstsPdoublecOlonggR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const double,long> *)(G__getstructoffset()))->~G__TpairlEconstsPdoublecOlonggR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const double,float> */
static int G__G__Base3_259_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,float> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const double,float>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,float>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_259_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,float> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,float>(*(double*)G__Doubleref(&libp->para[0]),*(float*)G__Floatref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_259_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const double,float> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const double,float>(*(pair<const double,float>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOfloatgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const double,float> G__TpairlEconstsPdoublecOfloatgR;
static int G__G__Base3_259_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const double,float> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const double,float> *)((G__getstructoffset())+sizeof(pair<const double,float>)*i))->~G__TpairlEconstsPdoublecOfloatgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const double,float> *)(G__getstructoffset()))->~G__TpairlEconstsPdoublecOfloatgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const double,double> */
static int G__G__Base3_260_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,double> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const double,double>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,double>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_260_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,double> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,double>(*(double*)G__Doubleref(&libp->para[0]),*(double*)G__Doubleref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_260_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const double,double> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const double,double>(*(pair<const double,double>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const double,double> G__TpairlEconstsPdoublecOdoublegR;
static int G__G__Base3_260_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const double,double> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const double,double> *)((G__getstructoffset())+sizeof(pair<const double,double>)*i))->~G__TpairlEconstsPdoublecOdoublegR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const double,double> *)(G__getstructoffset()))->~G__TpairlEconstsPdoublecOdoublegR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const double,void*> */
static int G__G__Base3_261_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,void*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const double,void*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,void*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_261_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,void*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,void*>(*(double*)G__Doubleref(&libp->para[0]),libp->para[1].ref?*(void**)libp->para[1].ref:*(void**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_261_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const double,void*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const double,void*>(*(pair<const double,void*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const double,void*> G__TpairlEconstsPdoublecOvoidmUgR;
static int G__G__Base3_261_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const double,void*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const double,void*> *)((G__getstructoffset())+sizeof(pair<const double,void*>)*i))->~G__TpairlEconstsPdoublecOvoidmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const double,void*> *)(G__getstructoffset()))->~G__TpairlEconstsPdoublecOvoidmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<const double,char*> */
static int G__G__Base3_262_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,char*> *p=NULL;
   if(G__getaryconstruct()) p=new pair<const double,char*>[G__getaryconstruct()];
   else p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,char*>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_262_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   pair<const double,char*> *p=NULL;
      p=::new((G__basedIsrcdIG__Base3dOcxx_tag*)G__getgvp()) pair<const double,char*>(*(double*)G__Doubleref(&libp->para[0]),libp->para[1].ref?*(char**)libp->para[1].ref:*(char**)(&G__Mlong(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_262_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   pair<const double,char*> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new pair<const double,char*>(*(pair<const double,char*>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOcharmUgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<const double,char*> G__TpairlEconstsPdoublecOcharmUgR;
static int G__G__Base3_262_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (pair<const double,char*> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((pair<const double,char*> *)((G__getstructoffset())+sizeof(pair<const double,char*>)*i))->~G__TpairlEconstsPdoublecOcharmUgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((pair<const double,char*> *)(G__getstructoffset()))->~G__TpairlEconstsPdoublecOcharmUgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParameter<double> */
static int G__G__Base3_263_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TParameter<double> *p=NULL;
   if(G__getaryconstruct()) p=new TParameter<double>[G__getaryconstruct()];
   else                    p=new TParameter<double>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TParameter<double> *p=NULL;
      p = new TParameter<double>((const char*)G__int(libp->para[0]),*(double*)G__Doubleref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TParameter<double>*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const double& obj=((const TParameter<double>*)(G__getstructoffset()))->GetVal();
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<double>*)(G__getstructoffset()))->SetVal(*(double*)G__Doubleref(&libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TParameter<double>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TParameter<double>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TParameter<double>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TParameter<double>::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TParameter<double>*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<double>*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<double>*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<double>*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TParameter<double>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TParameter<double>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TParameter<double>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_263_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TParameter<double>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_263_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TParameter<double> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TParameter<double>(*(TParameter<double>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParameter<double> G__TTParameterlEdoublegR;
static int G__G__Base3_263_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TParameter<double> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TParameter<double> *)((G__getstructoffset())+sizeof(TParameter<double>)*i);
   else  delete (TParameter<double> *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_263_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TParameter<double> *dest = (TParameter<double>*)(G__getstructoffset());
   *dest = (*(TParameter<double>*)libp->para[0].ref);
   const TParameter<double>& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParameter<long> */
static int G__G__Base3_264_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TParameter<long> *p=NULL;
   if(G__getaryconstruct()) p=new TParameter<long>[G__getaryconstruct()];
   else                    p=new TParameter<long>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TParameter<long> *p=NULL;
      p = new TParameter<long>((const char*)G__int(libp->para[0]),*(long*)G__Longref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TParameter<long>*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const long& obj=((const TParameter<long>*)(G__getstructoffset()))->GetVal();
         result7->ref=(long)(&obj); result7->obj.i=(long)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<long>*)(G__getstructoffset()))->SetVal(*(long*)G__Longref(&libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TParameter<long>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TParameter<long>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TParameter<long>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TParameter<long>::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TParameter<long>*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<long>*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<long>*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<long>*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TParameter<long>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TParameter<long>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TParameter<long>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_264_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TParameter<long>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_264_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TParameter<long> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TParameter<long>(*(TParameter<long>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParameter<long> G__TTParameterlElonggR;
static int G__G__Base3_264_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TParameter<long> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TParameter<long> *)((G__getstructoffset())+sizeof(TParameter<long>)*i);
   else  delete (TParameter<long> *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_264_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TParameter<long> *dest = (TParameter<long>*)(G__getstructoffset());
   *dest = (*(TParameter<long>*)libp->para[0].ref);
   const TParameter<long>& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParameter<long long> */
static int G__G__Base3_265_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TParameter<long long> *p=NULL;
   if(G__getaryconstruct()) p=new TParameter<long long>[G__getaryconstruct()];
   else                    p=new TParameter<long long>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TParameter<long long> *p=NULL;
      p = new TParameter<long long>((const char*)G__int(libp->para[0]),*(long long*)G__Longlongref(&libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TParameter<long long>*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const long long& obj=((const TParameter<long long>*)(G__getstructoffset()))->GetVal();
         result7->ref=(long)(&obj); result7->obj.i=(long)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<long long>*)(G__getstructoffset()))->SetVal(*(long long*)G__Longlongref(&libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TParameter<long long>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TParameter<long long>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TParameter<long long>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TParameter<long long>::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TParameter<long long>*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<long long>*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<long long>*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TParameter<long long>*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TParameter<long long>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TParameter<long long>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TParameter<long long>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3_265_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TParameter<long long>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Base3_265_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TParameter<long long> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TParameter<long long>(*(TParameter<long long>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParameter<long long> G__TTParameterlElongsPlonggR;
static int G__G__Base3_265_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TParameter<long long> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TParameter<long long> *)((G__getstructoffset())+sizeof(TParameter<long long>)*i);
   else  delete (TParameter<long long> *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Base3_265_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TParameter<long long> *dest = (TParameter<long long>*)(G__getstructoffset());
   *dest = (*(TParameter<long long>*)libp->para[0].ref);
   const TParameter<long long>& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__G__Base3__4_31(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const ostream& obj=operator<<(*(ostream*)libp->para[0].ref,*(TTimeStamp*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3__5_31(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=operator<<(*(TBuffer*)libp->para[0].ref,*(TTimeStamp*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3__6_31(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer& obj=operator>>(*(TBuffer*)libp->para[0].ref,*(TTimeStamp*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3__7_31(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator==(*(TTimeStamp*)libp->para[0].ref,*(TTimeStamp*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3__8_31(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator!=(*(TTimeStamp*)libp->para[0].ref,*(TTimeStamp*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3__9_31(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator<(*(TTimeStamp*)libp->para[0].ref,*(TTimeStamp*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3__0_32(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator<=(*(TTimeStamp*)libp->para[0].ref,*(TTimeStamp*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3__1_32(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator>(*(TTimeStamp*)libp->para[0].ref,*(TTimeStamp*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Base3__2_32(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator>=(*(TTimeStamp*)libp->para[0].ref,*(TTimeStamp*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* TVirtualProof */

/* SetWindowAttributes_t */

/* WindowAttributes_t */

/* Event_t */

/* GCValues_t */

/* ColorStruct_t */

/* PictureAttributes_t */

/* Segment_t */

/* Point_t */

/* Rectangle_t */

/* timespec */

/* TTimeStamp */

/* TVirtualMutex */

/* TLockGuard */

/* TArchiveFile */

/* TVirtualPerfStats */

/* TArchiveMember */

/* TZIPMember */

/* TZIPFile */

/* pair<char*,int> */

/* pair<char*,long> */

/* pair<char*,float> */

/* pair<char*,double> */

/* pair<char*,void*> */

/* pair<char*,char*> */

/* pair<string,int> */

/* pair<string,long> */

/* pair<string,float> */

/* pair<string,double> */

/* pair<string,void*> */

/* pair<long,int> */

/* pair<long,long> */

/* pair<long,float> */

/* pair<long,double> */

/* pair<long,void*> */

/* pair<long,char*> */

/* pair<double,int> */

/* pair<double,long> */

/* pair<double,float> */

/* pair<double,double> */

/* pair<double,void*> */

/* pair<double,char*> */

/* pair<const char*,int> */

/* pair<const char*,long> */

/* pair<const char*,float> */

/* pair<const char*,double> */

/* pair<const char*,void*> */

/* pair<const char*,char*> */

/* pair<const string,int> */

/* pair<const string,long> */

/* pair<const string,float> */

/* pair<const string,double> */

/* pair<const string,void*> */

/* pair<const long,int> */

/* pair<const long,long> */

/* pair<const long,float> */

/* pair<const long,double> */

/* pair<const long,void*> */

/* pair<const long,char*> */

/* pair<const double,int> */

/* pair<const double,long> */

/* pair<const double,float> */

/* pair<const double,double> */

/* pair<const double,void*> */

/* pair<const double,char*> */

/* TParameter<double> */

/* TParameter<long> */

/* TParameter<long long> */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Base3 {
 public:
  G__Sizep2memfuncG__Base3() {p=&G__Sizep2memfuncG__Base3::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Base3::*p)();
};

size_t G__get_sizep2memfuncG__Base3()
{
  G__Sizep2memfuncG__Base3 a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Base3() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Base3LN_TVirtualProof))) {
     TVirtualProof *G__Lderived;
     G__Lderived=(TVirtualProof*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualProof),G__get_linked_tagnum(&G__G__Base3LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualProof),G__get_linked_tagnum(&G__G__Base3LN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Base3LN_TVirtualMutex))) {
     TVirtualMutex *G__Lderived;
     G__Lderived=(TVirtualMutex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualMutex),G__get_linked_tagnum(&G__G__Base3LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Base3LN_TArchiveFile))) {
     TArchiveFile *G__Lderived;
     G__Lderived=(TArchiveFile*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TArchiveFile),G__get_linked_tagnum(&G__G__Base3LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStats))) {
     TVirtualPerfStats *G__Lderived;
     G__Lderived=(TVirtualPerfStats*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStats),G__get_linked_tagnum(&G__G__Base3LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember))) {
     TArchiveMember *G__Lderived;
     G__Lderived=(TArchiveMember*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember),G__get_linked_tagnum(&G__G__Base3LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Base3LN_TZIPMember))) {
     TZIPMember *G__Lderived;
     G__Lderived=(TZIPMember*)0x1000;
     {
       TArchiveMember *G__Lpbase=(TArchiveMember*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TZIPMember),G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TZIPMember),G__get_linked_tagnum(&G__G__Base3LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Base3LN_TZIPFile))) {
     TZIPFile *G__Lderived;
     G__Lderived=(TZIPFile*)0x1000;
     {
       TArchiveFile *G__Lpbase=(TArchiveFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TZIPFile),G__get_linked_tagnum(&G__G__Base3LN_TArchiveFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TZIPFile),G__get_linked_tagnum(&G__G__Base3LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR))) {
     TParameter<double> *G__Lderived;
     G__Lderived=(TParameter<double>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR),G__get_linked_tagnum(&G__G__Base3LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR))) {
     TParameter<long> *G__Lderived;
     G__Lderived=(TParameter<long>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR),G__get_linked_tagnum(&G__G__Base3LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR))) {
     TParameter<long long> *G__Lderived;
     G__Lderived=(TParameter<long long>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR),G__get_linked_tagnum(&G__G__Base3LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Base3() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,
-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__Base3LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Base3LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Base3LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Base3LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Base3LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("Handle_t",107,-1,0,
-1);
   G__setnewtype(-1,"Generic resource handle",0);
   G__search_typename2("Display_t",107,-1,0,
-1);
   G__setnewtype(-1,"Display handle",0);
   G__search_typename2("Visual_t",107,-1,0,
-1);
   G__setnewtype(-1,"Visual handle",0);
   G__search_typename2("Window_t",107,-1,0,
-1);
   G__setnewtype(-1,"Window handle",0);
   G__search_typename2("Pixmap_t",107,-1,0,
-1);
   G__setnewtype(-1,"Pixmap handle",0);
   G__search_typename2("Drawable_t",107,-1,0,
-1);
   G__setnewtype(-1,"Drawable handle",0);
   G__search_typename2("Region_t",107,-1,0,
-1);
   G__setnewtype(-1,"Region handle",0);
   G__search_typename2("Colormap_t",107,-1,0,
-1);
   G__setnewtype(-1,"Colormap handle",0);
   G__search_typename2("Cursor_t",107,-1,0,
-1);
   G__setnewtype(-1,"Cursor handle",0);
   G__search_typename2("FontH_t",107,-1,0,
-1);
   G__setnewtype(-1,"Font handle (as opposed to Font_t which is an index)",0);
   G__search_typename2("KeySym_t",107,-1,0,
-1);
   G__setnewtype(-1,"Key symbol handle",0);
   G__search_typename2("Atom_t",107,-1,0,
-1);
   G__setnewtype(-1,"WM token",0);
   G__search_typename2("GContext_t",107,-1,0,
-1);
   G__setnewtype(-1,"Graphics context handle",0);
   G__search_typename2("FontStruct_t",107,-1,0,
-1);
   G__setnewtype(-1,"Pointer to font structure",0);
   G__search_typename2("Mask_t",104,-1,0,
-1);
   G__setnewtype(-1,"Structure mask type",0);
   G__search_typename2("Time_t",107,-1,0,
-1);
   G__setnewtype(-1,"Event time",0);
   G__search_typename2("time_t",108,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("timespec_t",117,G__get_linked_tagnum(&G__G__Base3LN_timespec),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("tm_t",117,G__get_linked_tagnum(&G__G__Base3LN_tm),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,int>",117,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("TParameter<Double_t>",117,G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("TParameter<Long_t>",117,G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("TParameter<Long64_t>",117,G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TVirtualProof */
static void G__setup_memvarTVirtualProof(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualProof));
   { TVirtualProof *p; p=(TVirtualProof*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EGuiConstants */

   /* EGEventType */

   /* EGraphicsFunction */

   /* SetWindowAttributes_t */
static void G__setup_memvarSetWindowAttributes_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_SetWindowAttributes_t));
   { SetWindowAttributes_t *p; p=(SetWindowAttributes_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fBackgroundPixmap)-(long)(p)),107,0,0,-1,G__defined_typename("Pixmap_t"),-1,1,"fBackgroundPixmap=",0,"background or kNone or kParentRelative");
   G__memvar_setup((void*)((long)(&p->fBackgroundPixel)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fBackgroundPixel=",0,"background pixel");
   G__memvar_setup((void*)((long)(&p->fBorderPixmap)-(long)(p)),107,0,0,-1,G__defined_typename("Pixmap_t"),-1,1,"fBorderPixmap=",0,"border of the window");
   G__memvar_setup((void*)((long)(&p->fBorderPixel)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fBorderPixel=",0,"border pixel value");
   G__memvar_setup((void*)((long)(&p->fBorderWidth)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fBorderWidth=",0,"border width in pixels");
   G__memvar_setup((void*)((long)(&p->fBitGravity)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fBitGravity=",0,"one of bit gravity values");
   G__memvar_setup((void*)((long)(&p->fWinGravity)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fWinGravity=",0,"one of the window gravity values");
   G__memvar_setup((void*)((long)(&p->fBackingStore)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fBackingStore=",0,"kNotUseful, kWhenMapped, kAlways");
   G__memvar_setup((void*)((long)(&p->fBackingPlanes)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fBackingPlanes=",0,"planes to be preseved if possible");
   G__memvar_setup((void*)((long)(&p->fBackingPixel)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fBackingPixel=",0,"value to use in restoring planes");
   G__memvar_setup((void*)((long)(&p->fSaveUnder)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fSaveUnder=",0,"should bits under be saved (popups)?");
   G__memvar_setup((void*)((long)(&p->fEventMask)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"fEventMask=",0,"set of events that should be saved");
   G__memvar_setup((void*)((long)(&p->fDoNotPropagateMask)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"fDoNotPropagateMask=",0,"set of events that should not propagate");
   G__memvar_setup((void*)((long)(&p->fOverrideRedirect)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fOverrideRedirect=",0,"boolean value for override-redirect");
   G__memvar_setup((void*)((long)(&p->fColormap)-(long)(p)),107,0,0,-1,G__defined_typename("Colormap_t"),-1,1,"fColormap=",0,"color map to be associated with window");
   G__memvar_setup((void*)((long)(&p->fCursor)-(long)(p)),107,0,0,-1,G__defined_typename("Cursor_t"),-1,1,"fCursor=",0,"cursor to be displayed (or kNone)");
   G__memvar_setup((void*)((long)(&p->fMask)-(long)(p)),104,0,0,-1,G__defined_typename("Mask_t"),-1,1,"fMask=",0,"bit mask specifying which fields are valid");
   }
   G__tag_memvar_reset();
}


   /* WindowAttributes_t */
static void G__setup_memvarWindowAttributes_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_WindowAttributes_t));
   { WindowAttributes_t *p; p=(WindowAttributes_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fY=",0,"location of window");
   G__memvar_setup((void*)((long)(&p->fWidth)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHeight)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fHeight=",0,"width and height of window");
   G__memvar_setup((void*)((long)(&p->fBorderWidth)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fBorderWidth=",0,"border width of window");
   G__memvar_setup((void*)((long)(&p->fDepth)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fDepth=",0,"depth of window");
   G__memvar_setup((void*)((long)(&p->fVisual)-(long)(p)),89,0,0,-1,-1,-1,1,"fVisual=",0,"the associated visual structure");
   G__memvar_setup((void*)((long)(&p->fRoot)-(long)(p)),107,0,0,-1,G__defined_typename("Window_t"),-1,1,"fRoot=",0,"root of screen containing window");
   G__memvar_setup((void*)((long)(&p->fClass)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fClass=",0,"kInputOutput, kInputOnly");
   G__memvar_setup((void*)((long)(&p->fBitGravity)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fBitGravity=",0,"one of bit gravity values");
   G__memvar_setup((void*)((long)(&p->fWinGravity)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fWinGravity=",0,"one of the window gravity values");
   G__memvar_setup((void*)((long)(&p->fBackingStore)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fBackingStore=",0,"kNotUseful, kWhenMapped, kAlways");
   G__memvar_setup((void*)((long)(&p->fBackingPlanes)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fBackingPlanes=",0,"planes to be preserved if possible");
   G__memvar_setup((void*)((long)(&p->fBackingPixel)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fBackingPixel=",0,"value to be used when restoring planes");
   G__memvar_setup((void*)((long)(&p->fSaveUnder)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fSaveUnder=",0,"boolean, should bits under be saved?");
   G__memvar_setup((void*)((long)(&p->fColormap)-(long)(p)),107,0,0,-1,G__defined_typename("Colormap_t"),-1,1,"fColormap=",0,"color map to be associated with window");
   G__memvar_setup((void*)((long)(&p->fMapInstalled)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fMapInstalled=",0,"boolean, is color map currently installed");
   G__memvar_setup((void*)((long)(&p->fMapState)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMapState=",0,"kIsUnmapped, kIsUnviewable, kIsViewable");
   G__memvar_setup((void*)((long)(&p->fAllEventMasks)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"fAllEventMasks=",0,"set of events all people have interest in");
   G__memvar_setup((void*)((long)(&p->fYourEventMask)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"fYourEventMask=",0,"my event mask");
   G__memvar_setup((void*)((long)(&p->fDoNotPropagateMask)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"fDoNotPropagateMask=",0,"set of events that should not propagate");
   G__memvar_setup((void*)((long)(&p->fOverrideRedirect)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fOverrideRedirect=",0,"boolean value for override-redirect");
   G__memvar_setup((void*)((long)(&p->fScreen)-(long)(p)),89,0,0,-1,-1,-1,1,"fScreen=",0,"back pointer to correct screen");
   }
   G__tag_memvar_reset();
}


   /* Event_t */
static void G__setup_memvarEvent_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_Event_t));
   { Event_t *p; p=(Event_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fType)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"fType=",0,"of event (see EGEventTypes)");
   G__memvar_setup((void*)((long)(&p->fWindow)-(long)(p)),107,0,0,-1,G__defined_typename("Window_t"),-1,1,"fWindow=",0,"window reported event is relative to");
   G__memvar_setup((void*)((long)(&p->fTime)-(long)(p)),107,0,0,-1,G__defined_typename("Time_t"),-1,1,"fTime=",0,"time event event occured in ms");
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fY=",0,"pointer x, y coordinates in event window");
   G__memvar_setup((void*)((long)(&p->fXRoot)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fXRoot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fYRoot)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fYRoot=",0,"coordinates relative to root");
   G__memvar_setup((void*)((long)(&p->fCode)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fCode=",0,"key or button code");
   G__memvar_setup((void*)((long)(&p->fState)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fState=",0,"key or button mask");
   G__memvar_setup((void*)((long)(&p->fWidth)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHeight)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fHeight=",0,"width and height of exposed area");
   G__memvar_setup((void*)((long)(&p->fCount)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCount=",0,"if non-zero, at least this many more exposes");
   G__memvar_setup((void*)((long)(&p->fSendEvent)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fSendEvent=",0,"true if event came from SendEvent");
   G__memvar_setup((void*)((long)(&p->fHandle)-(long)(p)),107,0,0,-1,G__defined_typename("Handle_t"),-1,1,"fHandle=",0,"general resource handle (used for atoms or windows)");
   G__memvar_setup((void*)((long)(&p->fFormat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fFormat=",0,"Next fields only used by kClientMessageEvent");
   G__memvar_setup((void*)((long)(&p->fUser)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"fUser[5]=",0,"5 longs can be used by client message events");
   }
   G__tag_memvar_reset();
}


   /* EMouseButton */

   /* EXMagic */

   /* GCValues_t */
static void G__setup_memvarGCValues_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_GCValues_t));
   { GCValues_t *p; p=(GCValues_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fFunction)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"fFunction=",0,"logical operation");
   G__memvar_setup((void*)((long)(&p->fPlaneMask)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fPlaneMask=",0,"plane mask");
   G__memvar_setup((void*)((long)(&p->fForeground)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fForeground=",0,"foreground pixel");
   G__memvar_setup((void*)((long)(&p->fBackground)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fBackground=",0,"background pixel");
   G__memvar_setup((void*)((long)(&p->fLineWidth)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fLineWidth=",0,"line width");
   G__memvar_setup((void*)((long)(&p->fLineStyle)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fLineStyle=",0,"kLineSolid, kLineOnOffDash, kLineDoubleDash");
   G__memvar_setup((void*)((long)(&p->fCapStyle)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCapStyle=",0,"kCapNotLast, kCapButt,");
   G__memvar_setup((void*)((long)(&p->fJoinStyle)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fJoinStyle=",0,"kJoinMiter, kJoinRound, kJoinBevel");
   G__memvar_setup((void*)((long)(&p->fFillStyle)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fFillStyle=",0,"kFillSolid, kFillTiled,");
   G__memvar_setup((void*)((long)(&p->fFillRule)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fFillRule=",0,"kEvenOddRule, kWindingRule");
   G__memvar_setup((void*)((long)(&p->fArcMode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fArcMode=",0,"kArcChord, kArcPieSlice");
   G__memvar_setup((void*)((long)(&p->fTile)-(long)(p)),107,0,0,-1,G__defined_typename("Pixmap_t"),-1,1,"fTile=",0,"tile pixmap for tiling operations");
   G__memvar_setup((void*)((long)(&p->fStipple)-(long)(p)),107,0,0,-1,G__defined_typename("Pixmap_t"),-1,1,"fStipple=",0,"stipple 1 plane pixmap for stipping");
   G__memvar_setup((void*)((long)(&p->fTsXOrigin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTsXOrigin=",0,"offset for tile or stipple operations");
   G__memvar_setup((void*)((long)(&p->fTsYOrigin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTsYOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFont)-(long)(p)),107,0,0,-1,G__defined_typename("FontH_t"),-1,1,"fFont=",0,"default text font for text operations");
   G__memvar_setup((void*)((long)(&p->fSubwindowMode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fSubwindowMode=",0,"kClipByChildren, kIncludeInferiors");
   G__memvar_setup((void*)((long)(&p->fGraphicsExposures)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fGraphicsExposures=",0,"boolean, should exposures be generated");
   G__memvar_setup((void*)((long)(&p->fClipXOrigin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fClipXOrigin=",0,"origin for clipping");
   G__memvar_setup((void*)((long)(&p->fClipYOrigin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fClipYOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fClipMask)-(long)(p)),107,0,0,-1,G__defined_typename("Pixmap_t"),-1,1,"fClipMask=",0,"bitmap clipping; other calls for rects");
   G__memvar_setup((void*)((long)(&p->fDashOffset)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fDashOffset=",0,"patterned/dashed line information");
   G__memvar_setup((void*)((long)(&p->fDashes)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"fDashes[8]=",0,"dash pattern list (dash length per byte)");
   G__memvar_setup((void*)((long)(&p->fDashLen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fDashLen=",0,"number of dashes in fDashes");
   G__memvar_setup((void*)((long)(&p->fMask)-(long)(p)),104,0,0,-1,G__defined_typename("Mask_t"),-1,1,"fMask=",0,"bit mask specifying which fields are valid");
   }
   G__tag_memvar_reset();
}


   /* ColorStruct_t */
static void G__setup_memvarColorStruct_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_ColorStruct_t));
   { ColorStruct_t *p; p=(ColorStruct_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fPixel)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fPixel=",0,"color pixel value (index in color table)");
   G__memvar_setup((void*)((long)(&p->fRed)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fRed=",0,"red component (0..65535)");
   G__memvar_setup((void*)((long)(&p->fGreen)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fGreen=",0,"green component (0..65535)");
   G__memvar_setup((void*)((long)(&p->fBlue)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fBlue=",0,"blue component (0..65535)");
   G__memvar_setup((void*)((long)(&p->fMask)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fMask=",0,"mask telling which color components are valid");
   }
   G__tag_memvar_reset();
}


   /* PictureAttributes_t */
static void G__setup_memvarPictureAttributes_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_PictureAttributes_t));
   { PictureAttributes_t *p; p=(PictureAttributes_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fColormap)-(long)(p)),107,0,0,-1,G__defined_typename("Colormap_t"),-1,1,"fColormap=",0,"colormap to use");
   G__memvar_setup((void*)((long)(&p->fDepth)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fDepth=",0,"depth of window");
   G__memvar_setup((void*)((long)(&p->fWidth)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fWidth=",0,"width of picture");
   G__memvar_setup((void*)((long)(&p->fHeight)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fHeight=",0,"height of picture");
   G__memvar_setup((void*)((long)(&p->fXHotspot)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fXHotspot=",0,"picture x hotspot coordinate");
   G__memvar_setup((void*)((long)(&p->fYHotspot)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fYHotspot=",0,"picture y hotspot coordinate");
   G__memvar_setup((void*)((long)(&p->fPixels)-(long)(p)),75,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fPixels=",0,"list of used color pixels (if set use delete[])");
   G__memvar_setup((void*)((long)(&p->fNpixels)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fNpixels=",0,"number of used color pixels");
   G__memvar_setup((void*)((long)(&p->fCloseness)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fCloseness=",0,"allowable RGB deviation");
   G__memvar_setup((void*)((long)(&p->fMask)-(long)(p)),104,0,0,-1,G__defined_typename("Mask_t"),-1,1,"fMask=",0,"mask specifying which attributes are defined");
   }
   G__tag_memvar_reset();
}


   /* EInitialState */

   /* Segment_t */
static void G__setup_memvarSegment_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_Segment_t));
   { Segment_t *p; p=(Segment_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fX1)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fX1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY1)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fY1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fX2)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fX2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY2)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fY2=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Point_t */
static void G__setup_memvarPoint_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_Point_t));
   { Point_t *p; p=(Point_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fY=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Rectangle_t */
static void G__setup_memvarRectangle_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_Rectangle_t));
   { Rectangle_t *p; p=(Rectangle_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWidth)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHeight)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fHeight=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EKeySym */

   /* EEventType */

   /* timespec */
static void G__setup_memvartimespec(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_timespec));
   { timespec *p; p=(timespec*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tv_sec)-(long)(p)),108,0,0,-1,G__defined_typename("time_t"),-1,1,"tv_sec=",0,"seconds");
   G__memvar_setup((void*)((long)(&p->tv_nsec)-(long)(p)),108,0,0,-1,-1,-1,1,"tv_nsec=",0,"nanoseconds");
   }
   G__tag_memvar_reset();
}


   /* TTimeStamp */
static void G__setup_memvarTTimeStamp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp));
   { TTimeStamp *p; p=(TTimeStamp*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSec=",0,"seconds");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNanoSec=",0,"nanoseconds");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVirtualMutex */
static void G__setup_memvarTVirtualMutex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualMutex));
   { TVirtualMutex *p; p=(TVirtualMutex*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLockGuard */
static void G__setup_memvarTLockGuard(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TLockGuard));
   { TLockGuard *p; p=(TLockGuard*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TVirtualMutex),-1,-1,4,"fMutex=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArchiveFile */
static void G__setup_memvarTArchiveFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TArchiveFile));
   { TArchiveFile *p; p=(TArchiveFile*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__Base3LN_TString),-1,-1,2,"fArchiveName=",0,"Archive file name");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__Base3LN_TString),-1,-1,2,"fMemberName=",0,"Sub-file name");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMemberIndex=",0,"Index of sub-file in archive");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TFile),-1,-1,2,"fFile=",0,"File stream used to access the archive");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TObjArray),-1,-1,2,"fMembers=",0,"Members in this archive");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember),-1,-1,2,"fCurMember=",0,"Current archive member");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVirtualPerfStats */
static void G__setup_memvarTVirtualPerfStats(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStats));
   { TVirtualPerfStats *p; p=(TVirtualPerfStats*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStatscLcLEEventType),-1,-2,1,"kUnDefined=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStatscLcLEEventType),-1,-2,1,"kPacket=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStatscLcLEEventType),-1,-2,1,"kStart=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStatscLcLEEventType),-1,-2,1,"kStop=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStatscLcLEEventType),-1,-2,1,"kFile=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStatscLcLEEventType),-1,-2,1,"kFileOpen=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStatscLcLEEventType),-1,-2,1,"kFileRead=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStatscLcLEEventType),-1,-2,1,"kNumEventType=7",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVirtualPerfStats::EEventType */

   /* ECursor */

   /* TArchiveMember */
static void G__setup_memvarTArchiveMember(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember));
   { TArchiveMember *p; p=(TArchiveMember*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__Base3LN_TString),-1,-1,2,"fName=",0,"Name of member");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__Base3LN_TString),-1,-1,2,"fComment=",0,"Comment field");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__Base3LN_TDatime),-1,-1,2,"fModTime=",0,"Modification time");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fPosition=",0,"Byte position in archive");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fFilePosition=",0,"Byte position in archive where member data starts");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fCsize=",0,"Compressed size");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fDsize=",0,"Decompressed size");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDirectory=",0,"Flag indicating this is a directory");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TZIPMember */
static void G__setup_memvarTZIPMember(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TZIPMember));
   { TZIPMember *p; p=(TZIPMember*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,89,0,0,-1,-1,-1,4,"fLocal=",0,"Extra file header data");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fLocalLen=",0,"Length of extra file header data");
   G__memvar_setup((void*)NULL,89,0,0,-1,-1,-1,4,"fGlobal=",0,"Extra directory data");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fGlobalLen=",0,"Length of extra directory data");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fCRC32=",0,"CRC-32 for all decompressed data");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fAttrInt=",0,"Internal file attributes");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fAttrExt=",0,"External file attributes");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMethod=",0,"Compression type");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fLevel=",0,"Compression level");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TZIPFile */
static void G__setup_memvarTZIPFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TZIPFile));
   { TZIPFile *p; p=(TZIPFile*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fDirPos=",0,"Central directory position");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fDirSize=",0,"Central directory size");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fDirOffset=",0,"Central directory offset (from the beginning of the archive)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__Base3LN_TString),-1,-1,2,"fComment=",0,"Archive comment");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kARCHIVE_VERSION=20",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_HEADER_MAGIC=33639248",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_HEADER_MAGIC=67324752",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_HEADER_MAGIC=101010256",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kZIP_MAGIC_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kMAX_VAR_LEN=65535",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kMAX_SIZE=-1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_MAGIC_OFF=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_VMADE_OFF=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_VMADE_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_VREQD_OFF=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_VREQD_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_FLAG_OFF=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_FLAG_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_METHOD_OFF=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_METHOD_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_DATE_OFF=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_DATE_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_CRC32_OFF=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_CRC32_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_CSIZE_OFF=20",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_CSIZE_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_USIZE_OFF=24",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_USIZE_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_NAMELEN_OFF=28",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_NAMELEN_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_EXTRALEN_OFF=30",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_EXTRALEN_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_COMMENTLEN_OFF=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_COMMENTLEN_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_DISK_START_OFF=34",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_DISK_START_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_INT_ATTR_OFF=36",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_INT_ATTR_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_EXT_ATTR_OFF=38",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_EXT_ATTR_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_ENTRY_POS_OFF=42",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_ENTRY_POS_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDIR_HEADER_SIZE=46",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_MAGIC_OFF=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_DISK_OFF=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_DISK_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_DIR_DISK_OFF=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_DIR_DISK_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_DISK_HDRS_OFF=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_DISK_HDRS_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_TOTAL_HDRS_OFF=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_TOTAL_HDRS_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_DIR_SIZE_OFF=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_DIR_SIZE_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_DIR_OFFSET_OFF=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_DIR_OFFSET_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_COMMENTLEN_OFF=20",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_COMMENTLEN_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kEND_HEADER_SIZE=22",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_MAGIC_OFF=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_VREQD_OFF=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_VREQD_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_FLAG_OFF=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_FLAG_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_METHOD_OFF=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_METHOD_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_DATE_OFF=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_DATE_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_CRC32_OFF=14",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_CRC32_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_CSIZE_OFF=18",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_CSIZE_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_USIZE_OFF=22",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_USIZE_LEN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_NAMELEN_OFF=26",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_NAMELEN_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_EXTRALEN_OFF=28",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_EXTRALEN_LEN=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kENTRY_HEADER_SIZE=30",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kSTORED=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants),-1,-2,1,"kDEFLATED=8",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<char*,int> */
static void G__setup_memvarpairlEcharmUcOintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOintgR));
   { pair<char*,int> *p; p=(pair<char*,int>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),105,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<char*,long> */
static void G__setup_memvarpairlEcharmUcOlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOlonggR));
   { pair<char*,long> *p; p=(pair<char*,long>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),108,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<char*,float> */
static void G__setup_memvarpairlEcharmUcOfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOfloatgR));
   { pair<char*,float> *p; p=(pair<char*,float>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),102,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<char*,double> */
static void G__setup_memvarpairlEcharmUcOdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOdoublegR));
   { pair<char*,double> *p; p=(pair<char*,double>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),100,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<char*,void*> */
static void G__setup_memvarpairlEcharmUcOvoidmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOvoidmUgR));
   { pair<char*,void*> *p; p=(pair<char*,void*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),89,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<char*,char*> */
static void G__setup_memvarpairlEcharmUcOcharmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOcharmUgR));
   { pair<char*,char*> *p; p=(pair<char*,char*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),67,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<string,int> */
static void G__setup_memvarpairlEstringcOintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOintgR));
   { pair<string,int> *p; p=(pair<string,int>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Base3LN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),105,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<string,long> */
static void G__setup_memvarpairlEstringcOlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOlonggR));
   { pair<string,long> *p; p=(pair<string,long>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Base3LN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),108,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<string,float> */
static void G__setup_memvarpairlEstringcOfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOfloatgR));
   { pair<string,float> *p; p=(pair<string,float>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Base3LN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),102,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<string,double> */
static void G__setup_memvarpairlEstringcOdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOdoublegR));
   { pair<string,double> *p; p=(pair<string,double>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Base3LN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),100,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<string,void*> */
static void G__setup_memvarpairlEstringcOvoidmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOvoidmUgR));
   { pair<string,void*> *p; p=(pair<string,void*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__Base3LN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),89,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<long,int> */
static void G__setup_memvarpairlElongcOintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOintgR));
   { pair<long,int> *p; p=(pair<long,int>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),105,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<long,long> */
static void G__setup_memvarpairlElongcOlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOlonggR));
   { pair<long,long> *p; p=(pair<long,long>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),108,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<long,float> */
static void G__setup_memvarpairlElongcOfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOfloatgR));
   { pair<long,float> *p; p=(pair<long,float>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),102,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<long,double> */
static void G__setup_memvarpairlElongcOdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOdoublegR));
   { pair<long,double> *p; p=(pair<long,double>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),100,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<long,void*> */
static void G__setup_memvarpairlElongcOvoidmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOvoidmUgR));
   { pair<long,void*> *p; p=(pair<long,void*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),89,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<long,char*> */
static void G__setup_memvarpairlElongcOcharmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOcharmUgR));
   { pair<long,char*> *p; p=(pair<long,char*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),67,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<double,int> */
static void G__setup_memvarpairlEdoublecOintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOintgR));
   { pair<double,int> *p; p=(pair<double,int>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),105,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<double,long> */
static void G__setup_memvarpairlEdoublecOlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOlonggR));
   { pair<double,long> *p; p=(pair<double,long>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),108,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<double,float> */
static void G__setup_memvarpairlEdoublecOfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOfloatgR));
   { pair<double,float> *p; p=(pair<double,float>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),102,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<double,double> */
static void G__setup_memvarpairlEdoublecOdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOdoublegR));
   { pair<double,double> *p; p=(pair<double,double>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),100,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<double,void*> */
static void G__setup_memvarpairlEdoublecOvoidmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOvoidmUgR));
   { pair<double,void*> *p; p=(pair<double,void*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),89,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<double,char*> */
static void G__setup_memvarpairlEdoublecOcharmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOcharmUgR));
   { pair<double,char*> *p; p=(pair<double,char*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),67,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const char*,int> */
static void G__setup_memvarpairlEconstsPcharmUcOintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOintgR));
   { pair<const char*,int> *p; p=(pair<const char*,int>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),105,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const char*,long> */
static void G__setup_memvarpairlEconstsPcharmUcOlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOlonggR));
   { pair<const char*,long> *p; p=(pair<const char*,long>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),108,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const char*,float> */
static void G__setup_memvarpairlEconstsPcharmUcOfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOfloatgR));
   { pair<const char*,float> *p; p=(pair<const char*,float>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),102,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const char*,double> */
static void G__setup_memvarpairlEconstsPcharmUcOdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOdoublegR));
   { pair<const char*,double> *p; p=(pair<const char*,double>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),100,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const char*,void*> */
static void G__setup_memvarpairlEconstsPcharmUcOvoidmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR));
   { pair<const char*,void*> *p; p=(pair<const char*,void*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),89,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const char*,char*> */
static void G__setup_memvarpairlEconstsPcharmUcOcharmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR));
   { pair<const char*,char*> *p; p=(pair<const char*,char*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),67,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),67,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const string,int> */
static void G__setup_memvarpairlEconstsPstringcOintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOintgR));
   { pair<const string,int> *p; p=(pair<const string,int>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,1,G__get_linked_tagnum(&G__G__Base3LN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),105,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const string,long> */
static void G__setup_memvarpairlEconstsPstringcOlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOlonggR));
   { pair<const string,long> *p; p=(pair<const string,long>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,1,G__get_linked_tagnum(&G__G__Base3LN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),108,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const string,float> */
static void G__setup_memvarpairlEconstsPstringcOfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOfloatgR));
   { pair<const string,float> *p; p=(pair<const string,float>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,1,G__get_linked_tagnum(&G__G__Base3LN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),102,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const string,double> */
static void G__setup_memvarpairlEconstsPstringcOdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOdoublegR));
   { pair<const string,double> *p; p=(pair<const string,double>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,1,G__get_linked_tagnum(&G__G__Base3LN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),100,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const string,void*> */
static void G__setup_memvarpairlEconstsPstringcOvoidmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOvoidmUgR));
   { pair<const string,void*> *p; p=(pair<const string,void*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,1,G__get_linked_tagnum(&G__G__Base3LN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),89,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const long,int> */
static void G__setup_memvarpairlEconstsPlongcOintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOintgR));
   { pair<const long,int> *p; p=(pair<const long,int>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),105,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const long,long> */
static void G__setup_memvarpairlEconstsPlongcOlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOlonggR));
   { pair<const long,long> *p; p=(pair<const long,long>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),108,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const long,float> */
static void G__setup_memvarpairlEconstsPlongcOfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOfloatgR));
   { pair<const long,float> *p; p=(pair<const long,float>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),102,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const long,double> */
static void G__setup_memvarpairlEconstsPlongcOdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOdoublegR));
   { pair<const long,double> *p; p=(pair<const long,double>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),100,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const long,void*> */
static void G__setup_memvarpairlEconstsPlongcOvoidmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOvoidmUgR));
   { pair<const long,void*> *p; p=(pair<const long,void*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),89,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const long,char*> */
static void G__setup_memvarpairlEconstsPlongcOcharmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOcharmUgR));
   { pair<const long,char*> *p; p=(pair<const long,char*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),108,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),67,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const double,int> */
static void G__setup_memvarpairlEconstsPdoublecOintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOintgR));
   { pair<const double,int> *p; p=(pair<const double,int>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),105,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const double,long> */
static void G__setup_memvarpairlEconstsPdoublecOlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOlonggR));
   { pair<const double,long> *p; p=(pair<const double,long>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),108,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const double,float> */
static void G__setup_memvarpairlEconstsPdoublecOfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOfloatgR));
   { pair<const double,float> *p; p=(pair<const double,float>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),102,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const double,double> */
static void G__setup_memvarpairlEconstsPdoublecOdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOdoublegR));
   { pair<const double,double> *p; p=(pair<const double,double>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),100,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const double,void*> */
static void G__setup_memvarpairlEconstsPdoublecOvoidmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR));
   { pair<const double,void*> *p; p=(pair<const double,void*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),89,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<const double,char*> */
static void G__setup_memvarpairlEconstsPdoublecOcharmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOcharmUgR));
   { pair<const double,char*> *p; p=(pair<const double,char*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),100,0,1,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),67,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParameter<double> */
static void G__setup_memvarTParameterlEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR));
   { TParameter<double> *p; p=(TParameter<double>*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__Base3LN_TString),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,-1,-1,4,"fVal=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParameter<long> */
static void G__setup_memvarTParameterlElonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR));
   { TParameter<long> *p; p=(TParameter<long>*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__Base3LN_TString),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"fVal=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParameter<long long> */
static void G__setup_memvarTParameterlElongsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR));
   { TParameter<long long> *p; p=(TParameter<long long>*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__Base3LN_TString),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,110,0,0,-1,-1,-1,4,"fVal=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Base3() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTVirtualProof(void) {
   /* TVirtualProof */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualProof));
   G__memfunc_setup("Ping",398,G__G__Base3_115_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Exec",389,G__G__Base3_115_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - cmd",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Process",735,G__G__Base3_115_5_0,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 -1 nentries "
"n - 'Long64_t' 0 0 firstentry U 'TEventList' - 0 0 evl",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("DrawSelect",1006,G__G__Base3_115_6_0,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"U 'TDSet' - 0 - set C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 -1 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("StopProcess",1157,G__G__Base3_115_7_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - abort",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("AddInput",793,G__G__Base3_115_8_0,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ClearInput",1015,G__G__Base3_115_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetOutput",945,G__G__Base3_115_0_1,85,G__get_linked_tagnum(&G__G__Base3LN_TObject),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetOutputList",1357,G__G__Base3_115_1_1,85,G__get_linked_tagnum(&G__G__Base3LN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetParallel",1113,G__G__Base3_115_2_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 99999 nodes",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetLogLevel",1094,G__G__Base3_115_3_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - level h - 'UInt_t' 0 0xFFFFFFFF mask",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Close",502,G__G__Base3_115_4_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Print",525,G__G__Base3_115_5_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ShowCache",885,G__G__Base3_115_6_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE all",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ClearCache",955,G__G__Base3_115_7_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ShowPackages",1216,G__G__Base3_115_8_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE all",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ShowEnabledPackages",1899,G__G__Base3_115_9_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE all",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ClearPackages",1286,G__G__Base3_115_0_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ClearPackage",1171,G__G__Base3_115_1_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - package",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("EnablePackage",1267,G__G__Base3_115_2_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - package",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("UploadPackage",1297,G__G__Base3_115_3_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - par i - 'Int_t' 0 1 parallel",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetMaster",908,G__G__Base3_115_4_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetConfDir",965,G__G__Base3_115_5_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetConfFile",1062,G__G__Base3_115_6_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetUser",703,G__G__Base3_115_7_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetWorkDir",994,G__G__Base3_115_8_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetImage",771,G__G__Base3_115_9_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetPort",709,G__G__Base3_115_0_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRemoteProtocol",1758,G__G__Base3_115_1_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetClientProtocol",1745,G__G__Base3_115_2_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetStatus",932,G__G__Base3_115_3_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetLogLevel",1082,G__G__Base3_115_4_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetParallel",1101,G__G__Base3_115_5_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetSlaveInfo",1191,G__G__Base3_115_6_3,85,G__get_linked_tagnum(&G__G__Base3LN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetBytesRead",1187,G__G__Base3_115_7_3,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRealTime",1075,G__G__Base3_115_8_3,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetCpuTime",983,G__G__Base3_115_9_3,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("IsMaster",808,G__G__Base3_115_0_4,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("IsValid",684,G__G__Base3_115_1_4,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("IsParallel",1001,G__G__Base3_115_2_4,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("IsDataReady",1067,G__G__Base3_115_3_4,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"n - 'Long64_t' 1 - totalbytes n - 'Long64_t' 1 - bytesready",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("AddFeedback",1038,G__G__Base3_115_4_4,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("RemoveFeedback",1395,G__G__Base3_115_5_4,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ClearFeedback",1260,G__G__Base3_115_6_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ShowFeedback",1190,G__G__Base3_115_7_4,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetFeedbackList",1473,G__G__Base3_115_8_4,85,G__get_linked_tagnum(&G__G__Base3LN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetActive",904,G__G__Base3_115_9_4,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE active",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Progress",853,G__G__Base3_115_0_5,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed","*SIGNAL*",(void*)NULL,3);
   G__memfunc_setup("Feedback",773,G__G__Base3_115_1_5,121,-1,-1,0,1,1,1,0,"U 'TList' - 0 - objs","*SIGNAL*",(void*)NULL,3);
   G__memfunc_setup("GetTreeHeader",1273,G__G__Base3_115_2_5,85,G__get_linked_tagnum(&G__G__Base3LN_TTree),-1,0,1,1,1,0,"U 'TDSet' - 0 - dset",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetOutputNames",1445,G__G__Base3_115_3_5,85,G__get_linked_tagnum(&G__G__Base3LN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("AddChain",748,G__G__Base3_115_4_5,121,-1,-1,0,1,1,1,0,"U 'TChain' - 0 - chain",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("RemoveChain",1105,G__G__Base3_115_5_5,121,-1,-1,0,1,1,1,0,"U 'TChain' - 0 - chain",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("CreateDrawFeedback",1767,G__G__Base3_115_6_5,85,G__get_linked_tagnum(&G__G__Base3LN_TDrawFeedback),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetDrawFeedbackOption",2104,G__G__Base3_115_7_5,121,-1,-1,0,2,1,1,0,
"U 'TDrawFeedback' - 0 - f C - 'Option_t' 10 - opt",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("DeleteDrawFeedback",1766,G__G__Base3_115_8_5,121,-1,-1,0,1,1,1,0,"U 'TDrawFeedback' - 0 - f",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Class",502,G__G__Base3_115_9_5,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TVirtualProof::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_115_0_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualProof::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_115_1_6,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TVirtualProof::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_115_2_6,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TVirtualProof::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_115_3_6,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_115_4_6,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_115_5_6,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_115_6_6,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_115_7_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualProof::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_115_8_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualProof::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_115_9_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualProof::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_115_0_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualProof::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TVirtualProof",1471,G__G__Base3_115_1_7,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_115_2_7,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_TVirtualProof),-1,1,1,1,1,0,"u 'TVirtualProof' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSetWindowAttributes_t(void) {
   /* SetWindowAttributes_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_SetWindowAttributes_t));
   // automatic default constructor
   G__memfunc_setup("SetWindowAttributes_t",2206,G__G__Base3_131_1_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_SetWindowAttributes_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("SetWindowAttributes_t",2206,G__G__Base3_131_2_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_SetWindowAttributes_t),-1,0,1,1,1,0,"u 'SetWindowAttributes_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~SetWindowAttributes_t",2332,G__G__Base3_131_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_131_4_0,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_SetWindowAttributes_t),-1,1,1,1,1,0,"u 'SetWindowAttributes_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWindowAttributes_t(void) {
   /* WindowAttributes_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_WindowAttributes_t));
   // automatic default constructor
   G__memfunc_setup("WindowAttributes_t",1906,G__G__Base3_132_1_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_WindowAttributes_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("WindowAttributes_t",1906,G__G__Base3_132_2_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_WindowAttributes_t),-1,0,1,1,1,0,"u 'WindowAttributes_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~WindowAttributes_t",2032,G__G__Base3_132_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_132_4_0,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_WindowAttributes_t),-1,1,1,1,1,0,"u 'WindowAttributes_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvent_t(void) {
   /* Event_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_Event_t));
   // automatic default constructor
   G__memfunc_setup("Event_t",725,G__G__Base3_133_1_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_Event_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("Event_t",725,G__G__Base3_133_2_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_Event_t),-1,0,1,1,1,0,"u 'Event_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Event_t",851,G__G__Base3_133_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_133_4_0,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_Event_t),-1,1,1,1,1,0,"u 'Event_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGCValues_t(void) {
   /* GCValues_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_GCValues_t));
   G__memfunc_setup("GCValues_t",973,G__G__Base3_136_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_GCValues_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("GCValues_t",973,G__G__Base3_136_2_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_GCValues_t),-1,0,1,1,1,0,"u 'GCValues_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~GCValues_t",1099,G__G__Base3_136_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_136_4_0,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_GCValues_t),-1,1,1,1,1,0,"u 'GCValues_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncColorStruct_t(void) {
   /* ColorStruct_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_ColorStruct_t));
   // automatic default constructor
   G__memfunc_setup("ColorStruct_t",1367,G__G__Base3_137_1_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_ColorStruct_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("ColorStruct_t",1367,G__G__Base3_137_2_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_ColorStruct_t),-1,0,1,1,1,0,"u 'ColorStruct_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~ColorStruct_t",1493,G__G__Base3_137_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_137_4_0,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_ColorStruct_t),-1,1,1,1,1,0,"u 'ColorStruct_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPictureAttributes_t(void) {
   /* PictureAttributes_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_PictureAttributes_t));
   // automatic default constructor
   G__memfunc_setup("PictureAttributes_t",2006,G__G__Base3_138_1_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_PictureAttributes_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("PictureAttributes_t",2006,G__G__Base3_138_2_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_PictureAttributes_t),-1,0,1,1,1,0,"u 'PictureAttributes_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~PictureAttributes_t",2132,G__G__Base3_138_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_138_4_0,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_PictureAttributes_t),-1,1,1,1,1,0,"u 'PictureAttributes_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSegment_t(void) {
   /* Segment_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_Segment_t));
   // automatic default constructor
   G__memfunc_setup("Segment_t",934,G__G__Base3_140_1_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_Segment_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("Segment_t",934,G__G__Base3_140_2_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_Segment_t),-1,0,1,1,1,0,"u 'Segment_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Segment_t",1060,G__G__Base3_140_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_140_4_0,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_Segment_t),-1,1,1,1,1,0,"u 'Segment_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPoint_t(void) {
   /* Point_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_Point_t));
   // automatic default constructor
   G__memfunc_setup("Point_t",733,G__G__Base3_141_1_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_Point_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("Point_t",733,G__G__Base3_141_2_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_Point_t),-1,0,1,1,1,0,"u 'Point_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Point_t",859,G__G__Base3_141_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_141_4_0,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_Point_t),-1,1,1,1,1,0,"u 'Point_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRectangle_t(void) {
   /* Rectangle_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_Rectangle_t));
   // automatic default constructor
   G__memfunc_setup("Rectangle_t",1128,G__G__Base3_142_1_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_Rectangle_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("Rectangle_t",1128,G__G__Base3_142_2_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_Rectangle_t),-1,0,1,1,1,0,"u 'Rectangle_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Rectangle_t",1254,G__G__Base3_142_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_142_4_0,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_Rectangle_t),-1,1,1,1,1,0,"u 'Rectangle_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunctimespec(void) {
   /* timespec */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_timespec));
   // automatic default constructor
   G__memfunc_setup("timespec",858,G__G__Base3_150_1_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_timespec),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("timespec",858,G__G__Base3_150_2_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_timespec),-1,0,1,1,1,0,"u 'timespec' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~timespec",984,G__G__Base3_150_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_150_4_0,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_timespec),-1,1,1,1,1,0,"u 'timespec' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTimeStamp(void) {
   /* TTimeStamp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp));
   G__memfunc_setup("NormalizeNanoSec",1624,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTimeStamp",1000,G__G__Base3_151_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTimeStamp",1000,G__G__Base3_151_3_0,105,G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp),-1,0,1,1,1,0,"u 'timespec' 'timespec_t' 11 - ts",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTimeStamp",1000,G__G__Base3_151_4_0,105,G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp),-1,0,2,1,1,0,
"l - 'time_t' 0 - t i - 'Int_t' 0 - nsec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTimeStamp",1000,G__G__Base3_151_5_0,105,G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp),-1,0,9,1,1,0,
"h - 'UInt_t' 0 - year h - 'UInt_t' 0 - month "
"h - 'UInt_t' 0 - day h - 'UInt_t' 0 - hour "
"h - 'UInt_t' 0 - min h - 'UInt_t' 0 - sec "
"h - 'UInt_t' 0 0 nsec g - 'Bool_t' 0 kTRUE isUTC "
"i - 'Int_t' 0 0 secOffset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTimeStamp",1000,G__G__Base3_151_6_0,105,G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp),-1,0,5,1,1,0,
"h - 'UInt_t' 0 - date h - 'UInt_t' 0 - time "
"h - 'UInt_t' 0 - nsec g - 'Bool_t' 0 kTRUE isUTC "
"i - 'Int_t' 0 0 secOffset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTimeStamp",1000,G__G__Base3_151_7_0,105,G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp),-1,0,4,1,1,0,
"h - 'UInt_t' 0 - tloc g - 'Bool_t' 0 kTRUE isUTC "
"i - 'Int_t' 0 0 secOffset g - 'Bool_t' 0 kFALSE dosDate",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Set",300,G__G__Base3_151_8_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Set",300,G__G__Base3_151_9_0,121,-1,-1,0,9,1,1,0,
"i - 'Int_t' 0 - year i - 'Int_t' 0 - month "
"i - 'Int_t' 0 - day i - 'Int_t' 0 - hour "
"i - 'Int_t' 0 - min i - 'Int_t' 0 - sec "
"i - 'Int_t' 0 - nsec g - 'Bool_t' 0 - isUTC "
"i - 'Int_t' 0 - secOffset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Set",300,G__G__Base3_151_0_1,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 - date i - 'Int_t' 0 - time "
"i - 'Int_t' 0 - nsec g - 'Bool_t' 0 - isUTC "
"i - 'Int_t' 0 - secOffset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Set",300,G__G__Base3_151_1_1,121,-1,-1,0,4,1,1,0,
"h - 'UInt_t' 0 - tloc g - 'Bool_t' 0 - isUTC "
"i - 'Int_t' 0 - secOffset g - 'Bool_t' 0 - dosDate",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTimeSpec",1082,G__G__Base3_151_2_1,117,G__get_linked_tagnum(&G__G__Base3LN_timespec),G__defined_typename("timespec_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSec",571,G__G__Base3_151_3_1,108,-1,G__defined_typename("time_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNanoSec",967,G__G__Base3_151_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AsString",811,G__G__Base3_151_5_1,67,-1,-1,0,1,1,1,9,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Copy",411,G__G__Base3_151_6_1,121,-1,-1,0,1,1,1,8,"u 'TTimeStamp' - 1 - ts",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDate",670,G__G__Base3_151_7_1,104,-1,G__defined_typename("UInt_t"),0,5,1,1,8,
"g - 'Bool_t' 0 kTRUE inUTC i - 'Int_t' 0 0 secOffset "
"H - 'UInt_t' 0 0 year H - 'UInt_t' 0 0 month "
"H - 'UInt_t' 0 0 day",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTime",687,G__G__Base3_151_8_1,104,-1,G__defined_typename("UInt_t"),0,5,1,1,8,
"g - 'Bool_t' 0 kTRUE inUTC i - 'Int_t' 0 0 secOffset "
"H - 'UInt_t' 0 0 hour H - 'UInt_t' 0 0 min "
"H - 'UInt_t' 0 0 sec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDayOfYear",1156,G__G__Base3_151_9_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,8,
"g - 'Bool_t' 0 kTRUE inUTC i - 'Int_t' 0 0 secOffset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDayOfWeek",1151,G__G__Base3_151_0_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,8,
"g - 'Bool_t' 0 kTRUE inUTC i - 'Int_t' 0 0 secOffset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMonth",806,G__G__Base3_151_1_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,8,
"g - 'Bool_t' 0 kTRUE inUTC i - 'Int_t' 0 0 secOffset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWeek",684,G__G__Base3_151_2_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,8,
"g - 'Bool_t' 0 kTRUE inUTC i - 'Int_t' 0 0 secOffset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsLeapYear",975,G__G__Base3_151_3_2,103,-1,G__defined_typename("Bool_t"),0,2,1,1,8,
"g - 'Bool_t' 0 kTRUE inUTC i - 'Int_t' 0 0 secOffset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Base3_151_4_2,121,-1,-1,0,1,1,1,0,"u 'TTimeStamp' - 11 - offset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Base3_151_5_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator double",1543,G__G__Base3_151_6_2,100,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetZoneOffset",1315,G__G__Base3_151_7_2,105,-1,G__defined_typename("Int_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Int_t (*)())(&TTimeStamp::GetZoneOffset),0);
   G__memfunc_setup("MktimeFromUTC",1255,G__G__Base3_151_8_2,108,-1,G__defined_typename("time_t"),0,1,3,1,0,"U 'tm' 'tm_t' 0 - tmstruct",(char*)NULL,(void*)(time_t (*)(tm_t*))(&TTimeStamp::MktimeFromUTC),0);
   G__memfunc_setup("DumpTMStruct",1212,G__G__Base3_151_9_2,121,-1,-1,0,1,3,1,0,"u 'tm' 'tm_t' 11 - tmstruct",(char*)NULL,(void*)(void (*)(const tm_t&))(&TTimeStamp::DumpTMStruct),0);
   G__memfunc_setup("GetDayOfYear",1156,G__G__Base3_151_0_3,105,-1,G__defined_typename("Int_t"),0,3,3,1,0,
"i - 'Int_t' 0 - day i - 'Int_t' 0 - month "
"i - 'Int_t' 0 - year",(char*)NULL,(void*)(Int_t (*)(Int_t,Int_t,Int_t))(&TTimeStamp::GetDayOfYear),0);
   G__memfunc_setup("GetDayOfWeek",1151,G__G__Base3_151_1_3,105,-1,G__defined_typename("Int_t"),0,3,3,1,0,
"i - 'Int_t' 0 - day i - 'Int_t' 0 - month "
"i - 'Int_t' 0 - year",(char*)NULL,(void*)(Int_t (*)(Int_t,Int_t,Int_t))(&TTimeStamp::GetDayOfWeek),0);
   G__memfunc_setup("GetWeek",684,G__G__Base3_151_2_3,105,-1,G__defined_typename("Int_t"),0,3,3,1,0,
"i - 'Int_t' 0 - day i - 'Int_t' 0 - month "
"i - 'Int_t' 0 - year",(char*)NULL,(void*)(Int_t (*)(Int_t,Int_t,Int_t))(&TTimeStamp::GetWeek),0);
   G__memfunc_setup("IsLeapYear",975,G__G__Base3_151_3_3,103,-1,G__defined_typename("Bool_t"),0,1,3,1,0,"i - 'Int_t' 0 - year",(char*)NULL,(void*)(Bool_t (*)(Int_t))(&TTimeStamp::IsLeapYear),0);
   G__memfunc_setup("Class",502,G__G__Base3_151_4_3,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TTimeStamp::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_151_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTimeStamp::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_151_6_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TTimeStamp::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_151_7_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TTimeStamp::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_151_8_3,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_151_9_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_151_0_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_151_1_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_151_2_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTimeStamp::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_151_3_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTimeStamp::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_151_4_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTimeStamp::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_151_5_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTimeStamp::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TTimeStamp",1000,G__G__Base3_151_6_4,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp),-1,0,1,1,1,0,"u 'TTimeStamp' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TTimeStamp",1126,G__G__Base3_151_7_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_151_8_4,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp),-1,1,1,1,1,0,"u 'TTimeStamp' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVirtualMutex(void) {
   /* TVirtualMutex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualMutex));
   G__memfunc_setup("TVirtualMutex",1358,G__G__Base3_152_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_TVirtualMutex),-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Lock",393,G__G__Base3_152_2_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TryLock",712,G__G__Base3_152_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UnLock",588,G__G__Base3_152_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CleanUp",680,G__G__Base3_152_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Acquire",714,G__G__Base3_152_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Release",705,G__G__Base3_152_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Base3_152_8_0,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TVirtualMutex::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_152_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualMutex::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_152_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TVirtualMutex::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_152_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TVirtualMutex::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_152_2_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_152_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_152_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_152_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_152_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualMutex::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_152_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualMutex::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_152_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualMutex::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_152_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualMutex::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TVirtualMutex",1358,G__G__Base3_152_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_TVirtualMutex),-1,0,1,1,1,0,"u 'TVirtualMutex' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TVirtualMutex",1484,G__G__Base3_152_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_152_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_TVirtualMutex),-1,1,1,1,1,0,"u 'TVirtualMutex' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLockGuard(void) {
   /* TLockGuard */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TLockGuard));
   G__memfunc_setup("TLockGuard",976,G__G__Base3_153_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_TLockGuard),-1,0,1,1,1,0,"U 'TVirtualMutex' - 0 - mutex",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Base3_153_2_0,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLockGuard::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_153_3_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLockGuard::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_153_4_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLockGuard::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_153_5_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLockGuard::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_153_6_0,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_153_7_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_153_8_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_153_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_153_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLockGuard::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_153_1_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLockGuard::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_153_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLockGuard::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_153_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLockGuard::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLockGuard",976,G__G__Base3_153_4_1,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_TLockGuard),-1,0,1,1,1,0,"u 'TLockGuard' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLockGuard",1102,G__G__Base3_153_5_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_153_6_1,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_TLockGuard),-1,1,1,1,1,0,"u 'TLockGuard' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArchiveFile(void) {
   /* TArchiveFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TArchiveFile));
   G__memfunc_setup("ParseUrl",814,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,3,3,2,0,
"C - - 10 - url u 'TString' - 1 - archive "
"u 'TString' - 1 - member",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("OpenArchive",1108,G__G__Base3_169_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetCurrentMember",1639,G__G__Base3_169_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetMember",900,G__G__Base3_169_6_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - member",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMember",900,G__G__Base3_169_7_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMemberFilePosition",2125,G__G__Base3_169_8_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMember",888,G__G__Base3_169_9_0,85,G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMembers",1003,G__G__Base3_169_0_1,85,G__get_linked_tagnum(&G__G__Base3LN_TObjArray),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumberOfMembers",1801,G__G__Base3_169_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetArchiveName",1379,G__G__Base3_169_2_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMemberName",1273,G__G__Base3_169_3_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMemberIndex",1392,G__G__Base3_169_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Open",402,G__G__Base3_169_5_1,85,G__get_linked_tagnum(&G__G__Base3LN_TArchiveFile),-1,0,2,3,1,0,
"C - - 10 - url U 'TFile' - 0 - file",(char*)NULL,(void*)(TArchiveFile* (*)(const char*,TFile*))(&TArchiveFile::Open),0);
   G__memfunc_setup("Class",502,G__G__Base3_169_6_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TArchiveFile::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_169_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArchiveFile::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_169_8_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TArchiveFile::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_169_9_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TArchiveFile::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_169_0_2,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_169_1_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_169_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_169_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_169_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArchiveFile::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_169_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TArchiveFile::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_169_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArchiveFile::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_169_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TArchiveFile::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TArchiveFile",1300,G__G__Base3_169_8_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_169_9_2,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_TArchiveFile),-1,1,1,1,1,0,"u 'TArchiveFile' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVirtualPerfStats(void) {
   /* TVirtualPerfStats */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStats));
   G__memfunc_setup("SimpleEvent",1132,G__G__Base3_195_1_0,121,-1,-1,0,1,1,1,0,"i 'TVirtualPerfStats::EEventType' - 0 - type",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("PacketEvent",1114,G__G__Base3_195_2_0,121,-1,-1,0,8,1,1,0,
"C - - 10 - slave C - - 10 - slavename "
"C - - 10 - filename n - 'Long64_t' 0 - eventsprocessed "
"d - 'Double_t' 0 - latency d - 'Double_t' 0 - proctime "
"d - 'Double_t' 0 - cputime n - 'Long64_t' 0 - bytesRead",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("FileEvent",898,G__G__Base3_195_3_0,121,-1,-1,0,5,1,1,0,
"C - - 10 - slave C - - 10 - slavename "
"C - - 10 - nodename C - - 10 - filename "
"g - 'Bool_t' 0 - isStart",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("FileOpenEvent",1300,G__G__Base3_195_4_0,121,-1,-1,0,3,1,1,0,
"U 'TFile' - 0 - file C - - 10 - filename "
"d - 'Double_t' 0 - proctime",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("FileReadEvent",1278,G__G__Base3_195_5_0,121,-1,-1,0,3,1,1,0,
"U 'TFile' - 0 - file i - 'Int_t' 0 - len "
"d - 'Double_t' 0 - proctime",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetBytesRead",1199,G__G__Base3_195_6_0,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - num",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetBytesRead",1187,G__G__Base3_195_7_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("EventType",932,G__G__Base3_195_8_0,67,-1,-1,0,1,3,1,1,"i 'TVirtualPerfStats::EEventType' - 0 - type",(char*)NULL,(void*)(const char* (*)(TVirtualPerfStats::EEventType))(&TVirtualPerfStats::EventType),0);
   G__memfunc_setup("Class",502,G__G__Base3_195_9_0,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TVirtualPerfStats::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_195_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualPerfStats::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_195_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TVirtualPerfStats::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_195_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TVirtualPerfStats::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_195_3_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_195_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_195_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_195_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_195_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualPerfStats::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_195_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualPerfStats::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_195_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualPerfStats::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_195_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualPerfStats::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TVirtualPerfStats",1877,G__G__Base3_195_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_195_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStats),-1,1,1,1,1,0,"u 'TVirtualPerfStats' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArchiveMember(void) {
   /* TArchiveMember */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember));
   G__memfunc_setup("TArchiveMember",1390,G__G__Base3_213_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TArchiveMember",1390,G__G__Base3_213_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TArchiveMember",1390,G__G__Base3_213_3_0,105,G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember),-1,0,1,1,1,0,"u 'TArchiveMember' - 11 - member",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Base3_213_4_0,117,G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember),-1,1,1,1,1,0,"u 'TArchiveMember' - 11 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetName",673,G__G__Base3_213_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetComment",1011,G__G__Base3_213_6_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetModTime",975,G__G__Base3_213_7_0,117,G__get_linked_tagnum(&G__G__Base3LN_TDatime),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPosition",1141,G__G__Base3_213_8_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFilePosition",1525,G__G__Base3_213_9_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCompressedSize",1744,G__G__Base3_213_0_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDecompressedSize",1945,G__G__Base3_213_1_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsDirectory",1137,G__G__Base3_213_2_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Base3_213_3_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TArchiveMember::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_213_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArchiveMember::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_213_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TArchiveMember::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_213_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TArchiveMember::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_213_7_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_213_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_213_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_213_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_213_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArchiveMember::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_213_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TArchiveMember::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_213_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArchiveMember::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_213_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TArchiveMember::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TArchiveMember",1516,G__G__Base3_213_5_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTZIPMember(void) {
   /* TZIPMember */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TZIPMember));
   G__memfunc_setup("TZIPMember",927,G__G__Base3_214_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_TZIPMember),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TZIPMember",927,G__G__Base3_214_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_TZIPMember),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TZIPMember",927,G__G__Base3_214_3_0,105,G__get_linked_tagnum(&G__G__Base3LN_TZIPMember),-1,0,1,1,1,0,"u 'TZIPMember' - 11 - member",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Base3_214_4_0,117,G__get_linked_tagnum(&G__G__Base3LN_TZIPMember),-1,1,1,1,1,0,"u 'TZIPMember' - 11 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLocal",779,G__G__Base3_214_5_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLocalLen",1066,G__G__Base3_214_6_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetGlobal",881,G__G__Base3_214_7_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetGlobalLen",1168,G__G__Base3_214_8_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCRC32",605,G__G__Base3_214_9_0,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAttrInt",998,G__G__Base3_214_0_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAttrExt",1004,G__G__Base3_214_1_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMethod",897,G__G__Base3_214_2_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLevel",792,G__G__Base3_214_3_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Base3_214_4_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Base3_214_5_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TZIPMember::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_214_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TZIPMember::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_214_7_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TZIPMember::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_214_8_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TZIPMember::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_214_9_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_214_0_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_214_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_214_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_214_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TZIPMember::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_214_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TZIPMember::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_214_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TZIPMember::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_214_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TZIPMember::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TZIPMember",1053,G__G__Base3_214_7_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTZIPFile(void) {
   /* TZIPFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TZIPFile));
   G__memfunc_setup("FindEndHeader",1249,(G__InterfaceMethod)NULL,110,-1,G__defined_typename("Long64_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadEndHeader",1244,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"n - 'Long64_t' 0 - pos",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadDirectory",1329,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadMemberHeader",1565,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"U 'TZIPMember' - 0 - member",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Get",288,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("UInt_t"),0,2,1,2,0,
"Y - - 10 - buffer i - 'Int_t' 0 - bytes",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TZIPFile",711,G__G__Base3_215_6_0,105,G__get_linked_tagnum(&G__G__Base3LN_TZIPFile),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TZIPFile",711,G__G__Base3_215_7_0,105,G__get_linked_tagnum(&G__G__Base3LN_TZIPFile),-1,0,3,1,1,0,
"C - - 10 - archive C - - 10 - member "
"U 'TFile' - 0 - file",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("OpenArchive",1108,G__G__Base3_215_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetCurrentMember",1639,G__G__Base3_215_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Base3_215_0_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Base3_215_1_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TZIPFile::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_215_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TZIPFile::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_215_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TZIPFile::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_215_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TZIPFile::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_215_5_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_215_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_215_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_215_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_215_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TZIPFile::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_215_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TZIPFile::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_215_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TZIPFile::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_215_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TZIPFile::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TZIPFile",711,G__G__Base3_215_3_2,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_TZIPFile),-1,0,1,1,1,0,"u 'TZIPFile' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TZIPFile",837,G__G__Base3_215_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_215_5_2,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_TZIPFile),-1,1,1,1,1,0,"u 'TZIPFile' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEcharmUcOintgR(void) {
   /* pair<char*,int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOintgR));
   G__memfunc_setup("pair<char*,int>",1381,G__G__Base3_217_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOintgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<char*,int>",1381,G__G__Base3_217_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOintgR),-1,0,2,1,1,0,
"C - - 41 - a i - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOintgR),-1,1,1,1,4,0,"u 'pair<char*,int>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<char*,int>",1381,G__G__Base3_217_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOintgR),-1,0,1,1,1,0,"u 'pair<char*,int>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<char*,int>",1507,G__G__Base3_217_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEcharmUcOlonggR(void) {
   /* pair<char*,long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOlonggR));
   G__memfunc_setup("pair<char*,long>",1482,G__G__Base3_218_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOlonggR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<char*,long>",1482,G__G__Base3_218_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOlonggR),-1,0,2,1,1,0,
"C - - 41 - a l - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOlonggR),-1,1,1,1,4,0,"u 'pair<char*,long>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<char*,long>",1482,G__G__Base3_218_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOlonggR),-1,0,1,1,1,0,"u 'pair<char*,long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<char*,long>",1608,G__G__Base3_218_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEcharmUcOfloatgR(void) {
   /* pair<char*,float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOfloatgR));
   G__memfunc_setup("pair<char*,float>",1584,G__G__Base3_219_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOfloatgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<char*,float>",1584,G__G__Base3_219_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOfloatgR),-1,0,2,1,1,0,
"C - - 41 - a f - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOfloatgR),-1,1,1,1,4,0,"u 'pair<char*,float>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<char*,float>",1584,G__G__Base3_219_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOfloatgR),-1,0,1,1,1,0,"u 'pair<char*,float>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<char*,float>",1710,G__G__Base3_219_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEcharmUcOdoublegR(void) {
   /* pair<char*,double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOdoublegR));
   G__memfunc_setup("pair<char*,double>",1685,G__G__Base3_220_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOdoublegR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<char*,double>",1685,G__G__Base3_220_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOdoublegR),-1,0,2,1,1,0,
"C - - 41 - a d - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOdoublegR),-1,1,1,1,4,0,"u 'pair<char*,double>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<char*,double>",1685,G__G__Base3_220_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOdoublegR),-1,0,1,1,1,0,"u 'pair<char*,double>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<char*,double>",1811,G__G__Base3_220_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEcharmUcOvoidmUgR(void) {
   /* pair<char*,void*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOvoidmUgR));
   G__memfunc_setup("pair<char*,void*>",1526,G__G__Base3_221_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOvoidmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<char*,void*>",1526,G__G__Base3_221_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOvoidmUgR),-1,0,2,1,1,0,
"C - - 41 - a Y - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOvoidmUgR),-1,1,1,1,4,0,"u 'pair<char*,void*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<char*,void*>",1526,G__G__Base3_221_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOvoidmUgR),-1,0,1,1,1,0,"u 'pair<char*,void*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<char*,void*>",1652,G__G__Base3_221_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEcharmUcOcharmUgR(void) {
   /* pair<char*,char*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOcharmUgR));
   G__memfunc_setup("pair<char*,char*>",1506,G__G__Base3_222_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOcharmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<char*,char*>",1506,G__G__Base3_222_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOcharmUgR),-1,0,2,1,1,0,
"C - - 41 - a C - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOcharmUgR),-1,1,1,1,4,0,"u 'pair<char*,char*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<char*,char*>",1506,G__G__Base3_222_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOcharmUgR),-1,0,1,1,1,0,"u 'pair<char*,char*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<char*,char*>",1632,G__G__Base3_222_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEstringcOintgR(void) {
   /* pair<string,int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOintgR));
   G__memfunc_setup("pair<string,int>",1588,G__G__Base3_223_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOintgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<string,int>",1588,G__G__Base3_223_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOintgR),-1,0,2,1,1,0,
"u 'string' - 11 - a i - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOintgR),-1,1,1,1,4,0,"u 'pair<string,int>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<string,int>",1588,G__G__Base3_223_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOintgR),-1,0,1,1,1,0,"u 'pair<string,int>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<string,int>",1714,G__G__Base3_223_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEstringcOlonggR(void) {
   /* pair<string,long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOlonggR));
   G__memfunc_setup("pair<string,long>",1689,G__G__Base3_224_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOlonggR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<string,long>",1689,G__G__Base3_224_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOlonggR),-1,0,2,1,1,0,
"u 'string' - 11 - a l - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOlonggR),-1,1,1,1,4,0,"u 'pair<string,long>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<string,long>",1689,G__G__Base3_224_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOlonggR),-1,0,1,1,1,0,"u 'pair<string,long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<string,long>",1815,G__G__Base3_224_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEstringcOfloatgR(void) {
   /* pair<string,float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOfloatgR));
   G__memfunc_setup("pair<string,float>",1791,G__G__Base3_225_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOfloatgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<string,float>",1791,G__G__Base3_225_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOfloatgR),-1,0,2,1,1,0,
"u 'string' - 11 - a f - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOfloatgR),-1,1,1,1,4,0,"u 'pair<string,float>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<string,float>",1791,G__G__Base3_225_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOfloatgR),-1,0,1,1,1,0,"u 'pair<string,float>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<string,float>",1917,G__G__Base3_225_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEstringcOdoublegR(void) {
   /* pair<string,double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOdoublegR));
   G__memfunc_setup("pair<string,double>",1892,G__G__Base3_226_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOdoublegR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<string,double>",1892,G__G__Base3_226_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOdoublegR),-1,0,2,1,1,0,
"u 'string' - 11 - a d - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOdoublegR),-1,1,1,1,4,0,"u 'pair<string,double>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<string,double>",1892,G__G__Base3_226_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOdoublegR),-1,0,1,1,1,0,"u 'pair<string,double>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<string,double>",2018,G__G__Base3_226_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEstringcOvoidmUgR(void) {
   /* pair<string,void*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOvoidmUgR));
   G__memfunc_setup("pair<string,void*>",1733,G__G__Base3_227_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOvoidmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<string,void*>",1733,G__G__Base3_227_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOvoidmUgR),-1,0,2,1,1,0,
"u 'string' - 11 - a Y - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOvoidmUgR),-1,1,1,1,4,0,"u 'pair<string,void*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<string,void*>",1733,G__G__Base3_227_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOvoidmUgR),-1,0,1,1,1,0,"u 'pair<string,void*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<string,void*>",1859,G__G__Base3_227_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlElongcOintgR(void) {
   /* pair<long,int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOintgR));
   G__memfunc_setup("pair<long,int>",1357,G__G__Base3_228_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOintgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<long,int>",1357,G__G__Base3_228_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOintgR),-1,0,2,1,1,0,
"l - - 11 - a i - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOintgR),-1,1,1,1,4,0,"u 'pair<long,int>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<long,int>",1357,G__G__Base3_228_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOintgR),-1,0,1,1,1,0,"u 'pair<long,int>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<long,int>",1483,G__G__Base3_228_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlElongcOlonggR(void) {
   /* pair<long,long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOlonggR));
   G__memfunc_setup("pair<long,long>",1458,G__G__Base3_229_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOlonggR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<long,long>",1458,G__G__Base3_229_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOlonggR),-1,0,2,1,1,0,
"l - - 11 - a l - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOlonggR),-1,1,1,1,4,0,"u 'pair<long,long>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<long,long>",1458,G__G__Base3_229_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOlonggR),-1,0,1,1,1,0,"u 'pair<long,long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<long,long>",1584,G__G__Base3_229_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlElongcOfloatgR(void) {
   /* pair<long,float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOfloatgR));
   G__memfunc_setup("pair<long,float>",1560,G__G__Base3_230_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOfloatgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<long,float>",1560,G__G__Base3_230_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOfloatgR),-1,0,2,1,1,0,
"l - - 11 - a f - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOfloatgR),-1,1,1,1,4,0,"u 'pair<long,float>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<long,float>",1560,G__G__Base3_230_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOfloatgR),-1,0,1,1,1,0,"u 'pair<long,float>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<long,float>",1686,G__G__Base3_230_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlElongcOdoublegR(void) {
   /* pair<long,double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOdoublegR));
   G__memfunc_setup("pair<long,double>",1661,G__G__Base3_231_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOdoublegR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<long,double>",1661,G__G__Base3_231_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOdoublegR),-1,0,2,1,1,0,
"l - - 11 - a d - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOdoublegR),-1,1,1,1,4,0,"u 'pair<long,double>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<long,double>",1661,G__G__Base3_231_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOdoublegR),-1,0,1,1,1,0,"u 'pair<long,double>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<long,double>",1787,G__G__Base3_231_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlElongcOvoidmUgR(void) {
   /* pair<long,void*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOvoidmUgR));
   G__memfunc_setup("pair<long,void*>",1502,G__G__Base3_232_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOvoidmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<long,void*>",1502,G__G__Base3_232_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOvoidmUgR),-1,0,2,1,1,0,
"l - - 11 - a Y - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOvoidmUgR),-1,1,1,1,4,0,"u 'pair<long,void*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<long,void*>",1502,G__G__Base3_232_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOvoidmUgR),-1,0,1,1,1,0,"u 'pair<long,void*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<long,void*>",1628,G__G__Base3_232_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlElongcOcharmUgR(void) {
   /* pair<long,char*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOcharmUgR));
   G__memfunc_setup("pair<long,char*>",1482,G__G__Base3_233_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOcharmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<long,char*>",1482,G__G__Base3_233_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOcharmUgR),-1,0,2,1,1,0,
"l - - 11 - a C - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOcharmUgR),-1,1,1,1,4,0,"u 'pair<long,char*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<long,char*>",1482,G__G__Base3_233_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOcharmUgR),-1,0,1,1,1,0,"u 'pair<long,char*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<long,char*>",1608,G__G__Base3_233_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEdoublecOintgR(void) {
   /* pair<double,int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOintgR));
   G__memfunc_setup("pair<double,int>",1560,G__G__Base3_234_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOintgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<double,int>",1560,G__G__Base3_234_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOintgR),-1,0,2,1,1,0,
"d - - 11 - a i - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOintgR),-1,1,1,1,4,0,"u 'pair<double,int>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<double,int>",1560,G__G__Base3_234_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOintgR),-1,0,1,1,1,0,"u 'pair<double,int>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<double,int>",1686,G__G__Base3_234_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEdoublecOlonggR(void) {
   /* pair<double,long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOlonggR));
   G__memfunc_setup("pair<double,long>",1661,G__G__Base3_235_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOlonggR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<double,long>",1661,G__G__Base3_235_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOlonggR),-1,0,2,1,1,0,
"d - - 11 - a l - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOlonggR),-1,1,1,1,4,0,"u 'pair<double,long>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<double,long>",1661,G__G__Base3_235_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOlonggR),-1,0,1,1,1,0,"u 'pair<double,long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<double,long>",1787,G__G__Base3_235_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEdoublecOfloatgR(void) {
   /* pair<double,float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOfloatgR));
   G__memfunc_setup("pair<double,float>",1763,G__G__Base3_236_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOfloatgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<double,float>",1763,G__G__Base3_236_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOfloatgR),-1,0,2,1,1,0,
"d - - 11 - a f - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOfloatgR),-1,1,1,1,4,0,"u 'pair<double,float>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<double,float>",1763,G__G__Base3_236_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOfloatgR),-1,0,1,1,1,0,"u 'pair<double,float>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<double,float>",1889,G__G__Base3_236_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEdoublecOdoublegR(void) {
   /* pair<double,double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOdoublegR));
   G__memfunc_setup("pair<double,double>",1864,G__G__Base3_237_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOdoublegR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<double,double>",1864,G__G__Base3_237_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOdoublegR),-1,0,2,1,1,0,
"d - - 11 - a d - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOdoublegR),-1,1,1,1,4,0,"u 'pair<double,double>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<double,double>",1864,G__G__Base3_237_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOdoublegR),-1,0,1,1,1,0,"u 'pair<double,double>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<double,double>",1990,G__G__Base3_237_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEdoublecOvoidmUgR(void) {
   /* pair<double,void*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOvoidmUgR));
   G__memfunc_setup("pair<double,void*>",1705,G__G__Base3_238_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOvoidmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<double,void*>",1705,G__G__Base3_238_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOvoidmUgR),-1,0,2,1,1,0,
"d - - 11 - a Y - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOvoidmUgR),-1,1,1,1,4,0,"u 'pair<double,void*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<double,void*>",1705,G__G__Base3_238_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOvoidmUgR),-1,0,1,1,1,0,"u 'pair<double,void*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<double,void*>",1831,G__G__Base3_238_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEdoublecOcharmUgR(void) {
   /* pair<double,char*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOcharmUgR));
   G__memfunc_setup("pair<double,char*>",1685,G__G__Base3_239_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOcharmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<double,char*>",1685,G__G__Base3_239_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOcharmUgR),-1,0,2,1,1,0,
"d - - 11 - a C - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOcharmUgR),-1,1,1,1,4,0,"u 'pair<double,char*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<double,char*>",1685,G__G__Base3_239_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOcharmUgR),-1,0,1,1,1,0,"u 'pair<double,char*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<double,char*>",1811,G__G__Base3_239_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPcharmUcOintgR(void) {
   /* pair<const char*,int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOintgR));
   G__memfunc_setup("pair<const char*,int>",1964,G__G__Base3_240_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOintgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const char*,int>",1964,G__G__Base3_240_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOintgR),-1,0,2,1,1,0,
"C - - 51 - a i - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOintgR),-1,1,1,1,4,0,"u 'pair<const char*,int>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const char*,int>",1964,G__G__Base3_240_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOintgR),-1,0,1,1,1,0,"u 'pair<const char*,int>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const char*,int>",2090,G__G__Base3_240_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPcharmUcOlonggR(void) {
   /* pair<const char*,long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOlonggR));
   G__memfunc_setup("pair<const char*,long>",2065,G__G__Base3_241_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOlonggR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const char*,long>",2065,G__G__Base3_241_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOlonggR),-1,0,2,1,1,0,
"C - - 51 - a l - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOlonggR),-1,1,1,1,4,0,"u 'pair<const char*,long>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const char*,long>",2065,G__G__Base3_241_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOlonggR),-1,0,1,1,1,0,"u 'pair<const char*,long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const char*,long>",2191,G__G__Base3_241_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPcharmUcOfloatgR(void) {
   /* pair<const char*,float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOfloatgR));
   G__memfunc_setup("pair<const char*,float>",2167,G__G__Base3_242_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOfloatgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const char*,float>",2167,G__G__Base3_242_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOfloatgR),-1,0,2,1,1,0,
"C - - 51 - a f - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOfloatgR),-1,1,1,1,4,0,"u 'pair<const char*,float>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const char*,float>",2167,G__G__Base3_242_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOfloatgR),-1,0,1,1,1,0,"u 'pair<const char*,float>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const char*,float>",2293,G__G__Base3_242_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPcharmUcOdoublegR(void) {
   /* pair<const char*,double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOdoublegR));
   G__memfunc_setup("pair<const char*,double>",2268,G__G__Base3_243_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOdoublegR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const char*,double>",2268,G__G__Base3_243_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOdoublegR),-1,0,2,1,1,0,
"C - - 51 - a d - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOdoublegR),-1,1,1,1,4,0,"u 'pair<const char*,double>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const char*,double>",2268,G__G__Base3_243_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOdoublegR),-1,0,1,1,1,0,"u 'pair<const char*,double>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const char*,double>",2394,G__G__Base3_243_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPcharmUcOvoidmUgR(void) {
   /* pair<const char*,void*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR));
   G__memfunc_setup("pair<const char*,void*>",2109,G__G__Base3_244_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const char*,void*>",2109,G__G__Base3_244_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR),-1,0,2,1,1,0,
"C - - 51 - a Y - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR),-1,1,1,1,4,0,"u 'pair<const char*,void*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const char*,void*>",2109,G__G__Base3_244_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR),-1,0,1,1,1,0,"u 'pair<const char*,void*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const char*,void*>",2235,G__G__Base3_244_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPcharmUcOcharmUgR(void) {
   /* pair<const char*,char*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR));
   G__memfunc_setup("pair<const char*,char*>",2089,G__G__Base3_245_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const char*,char*>",2089,G__G__Base3_245_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR),-1,0,2,1,1,0,
"C - - 51 - a C - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR),-1,1,1,1,4,0,"u 'pair<const char*,char*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const char*,char*>",2089,G__G__Base3_245_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR),-1,0,1,1,1,0,"u 'pair<const char*,char*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const char*,char*>",2215,G__G__Base3_245_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPstringcOintgR(void) {
   /* pair<const string,int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOintgR));
   G__memfunc_setup("pair<const string,int>",2171,G__G__Base3_246_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOintgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const string,int>",2171,G__G__Base3_246_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOintgR),-1,0,2,1,1,0,
"u 'string' - 11 - a i - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOintgR),-1,1,1,1,4,0,"u 'pair<const string,int>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const string,int>",2171,G__G__Base3_246_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOintgR),-1,0,1,1,1,0,"u 'pair<const string,int>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const string,int>",2297,G__G__Base3_246_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPstringcOlonggR(void) {
   /* pair<const string,long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOlonggR));
   G__memfunc_setup("pair<const string,long>",2272,G__G__Base3_247_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOlonggR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const string,long>",2272,G__G__Base3_247_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOlonggR),-1,0,2,1,1,0,
"u 'string' - 11 - a l - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOlonggR),-1,1,1,1,4,0,"u 'pair<const string,long>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const string,long>",2272,G__G__Base3_247_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOlonggR),-1,0,1,1,1,0,"u 'pair<const string,long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const string,long>",2398,G__G__Base3_247_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPstringcOfloatgR(void) {
   /* pair<const string,float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOfloatgR));
   G__memfunc_setup("pair<const string,float>",2374,G__G__Base3_248_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOfloatgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const string,float>",2374,G__G__Base3_248_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOfloatgR),-1,0,2,1,1,0,
"u 'string' - 11 - a f - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOfloatgR),-1,1,1,1,4,0,"u 'pair<const string,float>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const string,float>",2374,G__G__Base3_248_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOfloatgR),-1,0,1,1,1,0,"u 'pair<const string,float>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const string,float>",2500,G__G__Base3_248_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPstringcOdoublegR(void) {
   /* pair<const string,double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOdoublegR));
   G__memfunc_setup("pair<const string,double>",2475,G__G__Base3_249_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOdoublegR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const string,double>",2475,G__G__Base3_249_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOdoublegR),-1,0,2,1,1,0,
"u 'string' - 11 - a d - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOdoublegR),-1,1,1,1,4,0,"u 'pair<const string,double>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const string,double>",2475,G__G__Base3_249_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOdoublegR),-1,0,1,1,1,0,"u 'pair<const string,double>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const string,double>",2601,G__G__Base3_249_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPstringcOvoidmUgR(void) {
   /* pair<const string,void*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOvoidmUgR));
   G__memfunc_setup("pair<const string,void*>",2316,G__G__Base3_250_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOvoidmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const string,void*>",2316,G__G__Base3_250_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOvoidmUgR),-1,0,2,1,1,0,
"u 'string' - 11 - a Y - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOvoidmUgR),-1,1,1,1,4,0,"u 'pair<const string,void*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const string,void*>",2316,G__G__Base3_250_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOvoidmUgR),-1,0,1,1,1,0,"u 'pair<const string,void*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const string,void*>",2442,G__G__Base3_250_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPlongcOintgR(void) {
   /* pair<const long,int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOintgR));
   G__memfunc_setup("pair<const long,int>",1940,G__G__Base3_251_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOintgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const long,int>",1940,G__G__Base3_251_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOintgR),-1,0,2,1,1,0,
"l - - 11 - a i - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOintgR),-1,1,1,1,4,0,"u 'pair<const long,int>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const long,int>",1940,G__G__Base3_251_4_0,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOintgR),-1,0,1,1,1,0,"u 'pair<const long,int>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const long,int>",2066,G__G__Base3_251_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPlongcOlonggR(void) {
   /* pair<const long,long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOlonggR));
   G__memfunc_setup("pair<const long,long>",2041,G__G__Base3_252_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOlonggR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const long,long>",2041,G__G__Base3_252_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOlonggR),-1,0,2,1,1,0,
"l - - 11 - a l - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOlonggR),-1,1,1,1,4,0,"u 'pair<const long,long>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const long,long>",2041,G__G__Base3_252_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOlonggR),-1,0,1,1,1,0,"u 'pair<const long,long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const long,long>",2167,G__G__Base3_252_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPlongcOfloatgR(void) {
   /* pair<const long,float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOfloatgR));
   G__memfunc_setup("pair<const long,float>",2143,G__G__Base3_253_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOfloatgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const long,float>",2143,G__G__Base3_253_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOfloatgR),-1,0,2,1,1,0,
"l - - 11 - a f - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOfloatgR),-1,1,1,1,4,0,"u 'pair<const long,float>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const long,float>",2143,G__G__Base3_253_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOfloatgR),-1,0,1,1,1,0,"u 'pair<const long,float>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const long,float>",2269,G__G__Base3_253_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPlongcOdoublegR(void) {
   /* pair<const long,double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOdoublegR));
   G__memfunc_setup("pair<const long,double>",2244,G__G__Base3_254_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOdoublegR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const long,double>",2244,G__G__Base3_254_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOdoublegR),-1,0,2,1,1,0,
"l - - 11 - a d - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOdoublegR),-1,1,1,1,4,0,"u 'pair<const long,double>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const long,double>",2244,G__G__Base3_254_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOdoublegR),-1,0,1,1,1,0,"u 'pair<const long,double>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const long,double>",2370,G__G__Base3_254_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPlongcOvoidmUgR(void) {
   /* pair<const long,void*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOvoidmUgR));
   G__memfunc_setup("pair<const long,void*>",2085,G__G__Base3_255_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOvoidmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const long,void*>",2085,G__G__Base3_255_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOvoidmUgR),-1,0,2,1,1,0,
"l - - 11 - a Y - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOvoidmUgR),-1,1,1,1,4,0,"u 'pair<const long,void*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const long,void*>",2085,G__G__Base3_255_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOvoidmUgR),-1,0,1,1,1,0,"u 'pair<const long,void*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const long,void*>",2211,G__G__Base3_255_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPlongcOcharmUgR(void) {
   /* pair<const long,char*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOcharmUgR));
   G__memfunc_setup("pair<const long,char*>",2065,G__G__Base3_256_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOcharmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const long,char*>",2065,G__G__Base3_256_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOcharmUgR),-1,0,2,1,1,0,
"l - - 11 - a C - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOcharmUgR),-1,1,1,1,4,0,"u 'pair<const long,char*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const long,char*>",2065,G__G__Base3_256_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOcharmUgR),-1,0,1,1,1,0,"u 'pair<const long,char*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const long,char*>",2191,G__G__Base3_256_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPdoublecOintgR(void) {
   /* pair<const double,int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOintgR));
   G__memfunc_setup("pair<const double,int>",2143,G__G__Base3_257_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOintgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const double,int>",2143,G__G__Base3_257_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOintgR),-1,0,2,1,1,0,
"d - - 11 - a i - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOintgR),-1,1,1,1,4,0,"u 'pair<const double,int>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const double,int>",2143,G__G__Base3_257_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOintgR),-1,0,1,1,1,0,"u 'pair<const double,int>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const double,int>",2269,G__G__Base3_257_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPdoublecOlonggR(void) {
   /* pair<const double,long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOlonggR));
   G__memfunc_setup("pair<const double,long>",2244,G__G__Base3_258_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOlonggR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const double,long>",2244,G__G__Base3_258_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOlonggR),-1,0,2,1,1,0,
"d - - 11 - a l - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOlonggR),-1,1,1,1,4,0,"u 'pair<const double,long>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const double,long>",2244,G__G__Base3_258_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOlonggR),-1,0,1,1,1,0,"u 'pair<const double,long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const double,long>",2370,G__G__Base3_258_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPdoublecOfloatgR(void) {
   /* pair<const double,float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOfloatgR));
   G__memfunc_setup("pair<const double,float>",2346,G__G__Base3_259_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOfloatgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const double,float>",2346,G__G__Base3_259_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOfloatgR),-1,0,2,1,1,0,
"d - - 11 - a f - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOfloatgR),-1,1,1,1,4,0,"u 'pair<const double,float>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const double,float>",2346,G__G__Base3_259_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOfloatgR),-1,0,1,1,1,0,"u 'pair<const double,float>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const double,float>",2472,G__G__Base3_259_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPdoublecOdoublegR(void) {
   /* pair<const double,double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOdoublegR));
   G__memfunc_setup("pair<const double,double>",2447,G__G__Base3_260_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOdoublegR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const double,double>",2447,G__G__Base3_260_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOdoublegR),-1,0,2,1,1,0,
"d - - 11 - a d - - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOdoublegR),-1,1,1,1,4,0,"u 'pair<const double,double>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const double,double>",2447,G__G__Base3_260_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOdoublegR),-1,0,1,1,1,0,"u 'pair<const double,double>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const double,double>",2573,G__G__Base3_260_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPdoublecOvoidmUgR(void) {
   /* pair<const double,void*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR));
   G__memfunc_setup("pair<const double,void*>",2288,G__G__Base3_261_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const double,void*>",2288,G__G__Base3_261_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR),-1,0,2,1,1,0,
"d - - 11 - a Y - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR),-1,1,1,1,4,0,"u 'pair<const double,void*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const double,void*>",2288,G__G__Base3_261_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR),-1,0,1,1,1,0,"u 'pair<const double,void*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const double,void*>",2414,G__G__Base3_261_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEconstsPdoublecOcharmUgR(void) {
   /* pair<const double,char*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOcharmUgR));
   G__memfunc_setup("pair<const double,char*>",2268,G__G__Base3_262_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOcharmUgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pair<const double,char*>",2268,G__G__Base3_262_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOcharmUgR),-1,0,2,1,1,0,
"d - - 11 - a C - - 41 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOcharmUgR),-1,1,1,1,4,0,"u 'pair<const double,char*>' - 11 - x",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("pair<const double,char*>",2268,G__G__Base3_262_4_0,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOcharmUgR),-1,0,1,1,1,0,"u 'pair<const double,char*>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~pair<const double,char*>",2394,G__G__Base3_262_5_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParameterlEdoublegR(void) {
   /* TParameter<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR));
   G__memfunc_setup("TParameter<double>",1770,G__G__Base3_263_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TParameter<double>",1770,G__G__Base3_263_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR),-1,0,2,1,1,0,
"C - - 10 - name d - - 11 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetName",673,G__G__Base3_263_3_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetVal",579,G__G__Base3_263_4_0,100,-1,-1,1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetVal",591,G__G__Base3_263_5_0,121,-1,-1,0,1,1,1,0,"d - - 11 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Base3_263_6_0,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TParameter<double>::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_263_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TParameter<double>::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_263_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TParameter<double>::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_263_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TParameter<double>::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_263_0_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_263_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_263_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_263_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_263_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TParameter<double>::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_263_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TParameter<double>::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_263_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TParameter<double>::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_263_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TParameter<double>::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TParameter<double>",1770,G__G__Base3_263_8_1,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR),-1,0,1,1,1,0,"u 'TParameter<double>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TParameter<double>",1896,G__G__Base3_263_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_263_0_2,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR),-1,1,1,1,1,0,"u 'TParameter<double>' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParameterlElonggR(void) {
   /* TParameter<long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR));
   G__memfunc_setup("TParameter<long>",1567,G__G__Base3_264_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TParameter<long>",1567,G__G__Base3_264_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR),-1,0,2,1,1,0,
"C - - 10 - name l - - 11 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetName",673,G__G__Base3_264_3_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetVal",579,G__G__Base3_264_4_0,108,-1,-1,1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetVal",591,G__G__Base3_264_5_0,121,-1,-1,0,1,1,1,0,"l - - 11 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Base3_264_6_0,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TParameter<long>::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_264_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TParameter<long>::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_264_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TParameter<long>::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_264_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TParameter<long>::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_264_0_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_264_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_264_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_264_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_264_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TParameter<long>::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_264_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TParameter<long>::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_264_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TParameter<long>::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_264_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TParameter<long>::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TParameter<long>",1567,G__G__Base3_264_8_1,(int)('i'),G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR),-1,0,1,1,1,0,"u 'TParameter<long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TParameter<long>",1693,G__G__Base3_264_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_264_0_2,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR),-1,1,1,1,1,0,"u 'TParameter<long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParameterlElongsPlonggR(void) {
   /* TParameter<long long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR));
   G__memfunc_setup("TParameter<long long>",2031,G__G__Base3_265_1_0,105,G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TParameter<long long>",2031,G__G__Base3_265_2_0,105,G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR),-1,0,2,1,1,0,
"C - - 10 - name n - - 11 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetName",673,G__G__Base3_265_3_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetVal",579,G__G__Base3_265_4_0,110,-1,-1,1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetVal",591,G__G__Base3_265_5_0,121,-1,-1,0,1,1,1,0,"n - - 11 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Base3_265_6_0,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TParameter<long long>::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Base3_265_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TParameter<long long>::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Base3_265_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TParameter<long long>::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Base3_265_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TParameter<long long>::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Base3_265_0_1,85,G__get_linked_tagnum(&G__G__Base3LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Base3_265_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Base3_265_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Base3_265_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Base3_265_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TParameter<long long>::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Base3_265_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TParameter<long long>::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Base3_265_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TParameter<long long>::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Base3_265_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TParameter<long long>::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TParameter<long long>",2031,G__G__Base3_265_8_1,(int)('i'),
G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR),-1,0,1,1,1,0,"u 'TParameter<long long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TParameter<long long>",2157,G__G__Base3_265_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Base3_265_0_2,(int)('u'),G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR),-1,1,1,1,1,0,"u 'TParameter<long long>' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Base3() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kNotUseful=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kWhenMapped=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kAlways=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kIsUnmapped=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kIsUnviewable=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kIsViewable=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kInputOutput=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kInputOnly=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kLineSolid=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kLineOnOffDash=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kLineDoubleDash=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kCapNotLast=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kCapButt=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kCapRound=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kCapProjecting=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kJoinMiter=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kJoinRound=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kJoinBevel=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kFillSolid=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kFillTiled=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kFillStippled=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kFillOpaqueStippled=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kEvenOddRule=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kWindingRule=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kClipByChildren=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kIncludeInferiors=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kArcChord=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),-1,-1,1,"kArcPieSlice=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kGKeyPress=0",0,(char*)NULL);
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kKeyRelease=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kButtonPress=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kButtonRelease=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kMotionNotify=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kEnterNotify=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kLeaveNotify=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kFocusIn=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kFocusOut=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kExpose=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kConfigureNotify=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kMapNotify=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kUnmapNotify=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kDestroyNotify=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kClientMessage=14",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kSelectionClear=15",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kSelectionRequest=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kSelectionNotify=17",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kColormapNotify=18",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kButtonDoubleClick=19",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGEventType),-1,-1,1,"kOtherEvent=20",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXclear=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXand=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXandReverse=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXcopy=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXandInverted=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXnoop=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXxor=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXor=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXnor=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXequiv=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXinvert=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXorReverse=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXcopyInverted=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXorInverted=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXnand=14",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),-1,-1,1,"kGXset=15",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_dA),-1,-1,1,"kDefaultScrollBarWidth=16",0,(char*)NULL);
   G__memvar_setup((void*)(&kNone),107,0,1,-1,G__defined_typename("Handle_t"),-1,1,"kNone=",0,(char*)NULL);
   G__memvar_setup((void*)(&kCopyFromParent),107,0,1,-1,G__defined_typename("Handle_t"),-1,1,"kCopyFromParent=",0,(char*)NULL);
   G__memvar_setup((void*)(&kParentRelative),107,0,1,-1,G__defined_typename("Handle_t"),-1,1,"kParentRelative=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWABackPixmap),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWABackPixmap=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWABackPixel),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWABackPixel=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWABorderPixmap),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWABorderPixmap=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWABorderPixel),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWABorderPixel=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWABorderWidth),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWABorderWidth=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWABitGravity),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWABitGravity=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWAWinGravity),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWAWinGravity=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWABackingStore),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWABackingStore=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWABackingPlanes),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWABackingPlanes=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWABackingPixel),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWABackingPixel=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWAOverrideRedirect),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWAOverrideRedirect=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWASaveUnder),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWASaveUnder=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWAEventMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWAEventMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWADontPropagate),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWADontPropagate=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWAColormap),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWAColormap=",0,(char*)NULL);
   G__memvar_setup((void*)(&kWACursor),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kWACursor=",0,(char*)NULL);
   G__memvar_setup((void*)(&kNoEventMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kNoEventMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kKeyPressMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kKeyPressMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kKeyReleaseMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kKeyReleaseMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kButtonPressMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kButtonPressMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kButtonReleaseMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kButtonReleaseMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kPointerMotionMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kPointerMotionMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kButtonMotionMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kButtonMotionMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kExposureMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kExposureMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kStructureNotifyMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kStructureNotifyMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kEnterWindowMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kEnterWindowMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kLeaveWindowMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kLeaveWindowMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kFocusChangeMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kFocusChangeMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kOwnerGrabButtonMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kOwnerGrabButtonMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kColormapChangeMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kColormapChangeMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kKeyShiftMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kKeyShiftMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kKeyLockMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kKeyLockMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kKeyControlMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kKeyControlMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kKeyMod1Mask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kKeyMod1Mask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kButton1Mask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kButton1Mask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kButton2Mask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kButton2Mask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kButton3Mask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kButton3Mask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kButton4Mask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kButton4Mask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kButton5Mask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kButton5Mask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kAnyModifier),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kAnyModifier=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EMouseButton),-1,-1,1,"kAnyButton=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EMouseButton),-1,-1,1,"kButton1=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EMouseButton),-1,-1,1,"kButton2=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EMouseButton),-1,-1,1,"kButton3=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EMouseButton),-1,-1,1,"kButton4=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EMouseButton),-1,-1,1,"kButton5=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EXMagic),-1,-1,1,"kNotifyNormal=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EXMagic),-1,-1,1,"kNotifyGrab=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EXMagic),-1,-1,1,"kNotifyUngrab=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EXMagic),-1,-1,1,"kNotifyPointer=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EXMagic),-1,-1,1,"kColormapUninstalled=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EXMagic),-1,-1,1,"kColormapInstalled=1",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCFunction),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCFunction=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCPlaneMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCPlaneMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCForeground),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCForeground=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCBackground),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCBackground=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCLineWidth),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCLineWidth=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCLineStyle),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCLineStyle=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCCapStyle),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCCapStyle=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCJoinStyle),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCJoinStyle=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCFillStyle),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCFillStyle=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCFillRule),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCFillRule=",0,(char*)NULL);
}

static void G__cpp_setup_global3() {
   G__memvar_setup((void*)(&kGCTile),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCTile=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCStipple),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCStipple=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCTileStipXOrigin),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCTileStipXOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCTileStipYOrigin),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCTileStipYOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCFont),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCFont=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCSubwindowMode),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCSubwindowMode=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCGraphicsExposures),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCGraphicsExposures=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCClipXOrigin),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCClipXOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCClipYOrigin),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCClipYOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCClipMask),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCClipMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCDashOffset),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCDashOffset=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCDashList),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCDashList=",0,(char*)NULL);
   G__memvar_setup((void*)(&kGCArcMode),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kGCArcMode=",0,(char*)NULL);
   G__memvar_setup((void*)(&kDoRed),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kDoRed=",0,(char*)NULL);
   G__memvar_setup((void*)(&kDoGreen),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kDoGreen=",0,(char*)NULL);
   G__memvar_setup((void*)(&kDoBlue),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kDoBlue=",0,(char*)NULL);
   G__memvar_setup((void*)(&kPAColormap),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kPAColormap=",0,(char*)NULL);
   G__memvar_setup((void*)(&kPADepth),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kPADepth=",0,(char*)NULL);
   G__memvar_setup((void*)(&kPASize),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kPASize=",0,(char*)NULL);
   G__memvar_setup((void*)(&kPAHotspot),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kPAHotspot=",0,(char*)NULL);
   G__memvar_setup((void*)(&kPAReturnPixels),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kPAReturnPixels=",0,(char*)NULL);
   G__memvar_setup((void*)(&kPACloseness),104,0,1,-1,G__defined_typename("Mask_t"),-1,1,"kPACloseness=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EInitialState),-1,-1,1,"kNormalState=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EInitialState),-1,-1,1,"kIconicState=2",0,(char*)NULL);
   G__memvar_setup((void*)(&kPrimarySelection),107,0,1,-1,G__defined_typename("Atom_t"),-1,1,"kPrimarySelection=",0,(char*)NULL);
   G__memvar_setup((void*)(&kCutBuffer),107,0,1,-1,G__defined_typename("Atom_t"),-1,1,"kCutBuffer=",0,(char*)NULL);
   G__memvar_setup((void*)(&kMaxPixel),105,0,1,-1,G__defined_typename("Int_t"),-1,1,"kMaxPixel=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Escape=4096",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Tab=4097",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Backtab=4098",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Backspace=4099",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Return=4100",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Enter=4101",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Insert=4102",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Delete=4103",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Pause=4104",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Print=4105",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_SysReq=4106",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Home=4112",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_End=4113",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Left=4114",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Up=4115",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Right=4116",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Down=4117",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Prior=4118",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_PageUp=4118",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Next=4119",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_PageDown=4119",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Shift=4128",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Control=4129",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Meta=4130",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Alt=4131",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_CapsLock=4132",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_NumLock=4133",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_ScrollLock=4134",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F1=4144",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F2=4145",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F3=4146",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F4=4147",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F5=4148",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F6=4149",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F7=4150",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F8=4151",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F9=4152",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F10=4153",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F11=4154",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F12=4155",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F13=4156",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F14=4157",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F15=4158",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F16=4159",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F17=4160",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F18=4161",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F19=4162",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F20=4163",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F21=4164",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F22=4165",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F23=4166",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F24=4167",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F25=4168",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F26=4169",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F27=4170",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F28=4171",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F29=4172",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F30=4173",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F31=4174",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F32=4175",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F33=4176",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F34=4177",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F35=4178",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Space=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Exclam=33",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_QuoteDbl=34",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_NumberSign=35",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Dollar=36",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Percent=37",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Ampersand=38",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Apostrophe=39",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_ParenLeft=40",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_ParenRight=41",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Asterisk=42",0,(char*)NULL);
}

static void G__cpp_setup_global4() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Plus=43",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Comma=44",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Minus=45",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Period=46",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Slash=47",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_0=48",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_1=49",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_2=50",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_3=51",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_4=52",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_5=53",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_6=54",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_7=55",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_8=56",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_9=57",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Colon=58",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Semicolon=59",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Less=60",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Equal=61",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Greater=62",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Question=63",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_At=64",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_A=65",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_B=66",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_C=67",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_D=68",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_E=69",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_F=70",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_G=71",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_H=72",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_I=73",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_J=74",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_K=75",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_L=76",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_M=77",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_N=78",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_O=79",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_P=80",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Q=81",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_R=82",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_S=83",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_T=84",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_U=85",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_V=86",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_W=87",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_X=88",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Y=89",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Z=90",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_BracketLeft=91",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Backslash=92",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_BracketRight=93",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_AsciiCircum=94",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Underscore=95",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_QuoteLeft=96",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_a=97",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_b=98",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_c=99",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_d=100",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_e=101",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_f=102",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_g=103",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_h=104",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_i=105",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_j=106",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_k=107",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_l=108",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_m=109",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_n=110",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_o=111",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_p=112",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_q=113",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_r=114",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_s=115",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_t=116",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_u=117",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_v=118",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_w=119",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_x=120",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_y=121",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_z=122",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_BraceLeft=123",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Bar=124",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_BraceRight=125",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_AsciiTilde=126",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kKey_Unknown=65535",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EKeySym),-1,-1,1,"kAnyKey=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kNoEvent=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton1Down=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton2Down=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton3Down=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kKeyDown=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton1Up=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton2Up=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton3Up=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kKeyUp=14",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton1Motion=21",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton2Motion=22",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton3Motion=23",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kKeyPress=24",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton1Locate=41",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton2Locate=42",0,(char*)NULL);
}

static void G__cpp_setup_global5() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton3Locate=43",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kMouseMotion=51",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kMouseEnter=52",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kMouseLeave=53",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton1Double=61",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton2Double=62",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_EEventType),-1,-1,1,"kButton3Double=63",0,(char*)NULL);
}

static void G__cpp_setup_global6() {
   G__memvar_setup((void*)(&gProof),85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TVirtualProof),-1,-1,1,"gProof=",0,(char*)NULL);
   G__memvar_setup((void*)(&gPerfStats),85,0,0,G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStats),-1,-1,1,"gPerfStats=",0,(char*)NULL);
   G__memvar_setup((void*)(&kNumCursors),105,0,1,-1,-1,-1,1,"kNumCursors=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kBottomLeft=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kBottomRight=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kTopLeft=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kTopRight=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kBottomSide=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kLeftSide=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kTopSide=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kRightSide=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kMove=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kCross=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kArrowHor=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kArrowVer=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kHand=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kRotate=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kPointer=14",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kArrowRight=15",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kCaret=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__Base3LN_ECursor),-1,-1,1,"kWatch=17",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Base3() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
   G__memfunc_setup("operator<<",996,G__G__Base3__4_31,117,G__get_linked_tagnum(&G__G__Base3LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),1,2,1,1,0,
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os u 'TTimeStamp' - 11 - ts",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<<",996,G__G__Base3__5_31,117,G__get_linked_tagnum(&G__G__Base3LN_TBuffer),-1,1,2,1,1,0,
"u 'TBuffer' - 1 - buf u 'TTimeStamp' - 11 - ts",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator>>",1000,G__G__Base3__6_31,117,G__get_linked_tagnum(&G__G__Base3LN_TBuffer),-1,1,2,1,1,0,
"u 'TBuffer' - 1 - buf u 'TTimeStamp' - 1 - ts",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator==",998,G__G__Base3__7_31,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TTimeStamp' - 11 - lhs u 'TTimeStamp' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator!=",970,G__G__Base3__8_31,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TTimeStamp' - 11 - lhs u 'TTimeStamp' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<",936,G__G__Base3__9_31,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TTimeStamp' - 11 - lhs u 'TTimeStamp' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator<=",997,G__G__Base3__0_32,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TTimeStamp' - 11 - lhs u 'TTimeStamp' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator>",938,G__G__Base3__1_32,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TTimeStamp' - 11 - lhs u 'TTimeStamp' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator>=",999,G__G__Base3__2_32,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TTimeStamp' - 11 - lhs u 'TTimeStamp' - 11 - rhs",(char*)NULL
,(void*)NULL,0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Base3() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__Base3LN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TVirtualProof = { "TVirtualProof" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_EGuiConstants = { "EGuiConstants" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_EGEventType = { "EGEventType" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_EGraphicsFunction = { "EGraphicsFunction" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_dA = { "$" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_SetWindowAttributes_t = { "SetWindowAttributes_t" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_WindowAttributes_t = { "WindowAttributes_t" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_EMouseButton = { "EMouseButton" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_EXMagic = { "EXMagic" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_GCValues_t = { "GCValues_t" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_ColorStruct_t = { "ColorStruct_t" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_PictureAttributes_t = { "PictureAttributes_t" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_EInitialState = { "EInitialState" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_Segment_t = { "Segment_t" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_Point_t = { "Point_t" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_Rectangle_t = { "Rectangle_t" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_EKeySym = { "EKeySym" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_EEventType = { "EEventType" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_tm = { "tm" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_timespec = { "timespec" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_TTimeStamp = { "TTimeStamp" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TVirtualMutex = { "TVirtualMutex" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TLockGuard = { "TLockGuard" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TArchiveFile = { "TArchiveFile" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TDSet = { "TDSet" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TEventList = { "TEventList" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TDrawFeedback = { "TDrawFeedback" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TVirtualPerfStats = { "TVirtualPerfStats" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TVirtualPerfStatscLcLEEventType = { "TVirtualPerfStats::EEventType" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_ECursor = { "ECursor" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_TArchiveMember = { "TArchiveMember" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TZIPMember = { "TZIPMember" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TZIPFile = { "TZIPFile" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TZIPFilecLcLEZIPConstants = { "TZIPFile::EZIPConstants" , 101 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEcharmUcOintgR = { "pair<char*,int>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEcharmUcOlonggR = { "pair<char*,long>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEcharmUcOfloatgR = { "pair<char*,float>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEcharmUcOdoublegR = { "pair<char*,double>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEcharmUcOvoidmUgR = { "pair<char*,void*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEcharmUcOcharmUgR = { "pair<char*,char*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEstringcOintgR = { "pair<string,int>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEstringcOlonggR = { "pair<string,long>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEstringcOfloatgR = { "pair<string,float>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEstringcOdoublegR = { "pair<string,double>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEstringcOvoidmUgR = { "pair<string,void*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlElongcOintgR = { "pair<long,int>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlElongcOlonggR = { "pair<long,long>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlElongcOfloatgR = { "pair<long,float>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlElongcOdoublegR = { "pair<long,double>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlElongcOvoidmUgR = { "pair<long,void*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlElongcOcharmUgR = { "pair<long,char*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEdoublecOintgR = { "pair<double,int>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEdoublecOlonggR = { "pair<double,long>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEdoublecOfloatgR = { "pair<double,float>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEdoublecOvoidmUgR = { "pair<double,void*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEdoublecOcharmUgR = { "pair<double,char*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPcharmUcOintgR = { "pair<const char*,int>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPcharmUcOlonggR = { "pair<const char*,long>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPcharmUcOfloatgR = { "pair<const char*,float>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPcharmUcOdoublegR = { "pair<const char*,double>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR = { "pair<const char*,void*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR = { "pair<const char*,char*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPstringcOintgR = { "pair<const string,int>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPstringcOlonggR = { "pair<const string,long>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPstringcOfloatgR = { "pair<const string,float>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPstringcOdoublegR = { "pair<const string,double>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPstringcOvoidmUgR = { "pair<const string,void*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPlongcOintgR = { "pair<const long,int>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPlongcOlonggR = { "pair<const long,long>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPlongcOfloatgR = { "pair<const long,float>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPlongcOdoublegR = { "pair<const long,double>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPlongcOvoidmUgR = { "pair<const long,void*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPlongcOcharmUgR = { "pair<const long,char*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPdoublecOintgR = { "pair<const double,int>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPdoublecOlonggR = { "pair<const double,long>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPdoublecOfloatgR = { "pair<const double,float>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPdoublecOdoublegR = { "pair<const double,double>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR = { "pair<const double,void*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_pairlEconstsPdoublecOcharmUgR = { "pair<const double,char*>" , 115 , -1 };
G__linked_taginfo G__G__Base3LN_TParameterlEdoublegR = { "TParameter<double>" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TParameterlElonggR = { "TParameter<long>" , 99 , -1 };
G__linked_taginfo G__G__Base3LN_TParameterlElongsPlonggR = { "TParameter<long long>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Base3() {
  G__G__Base3LN_TClass.tagnum = -1 ;
  G__G__Base3LN_TBuffer.tagnum = -1 ;
  G__G__Base3LN_TMemberInspector.tagnum = -1 ;
  G__G__Base3LN_TObject.tagnum = -1 ;
  G__G__Base3LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__Base3LN_string.tagnum = -1 ;
  G__G__Base3LN_TList.tagnum = -1 ;
  G__G__Base3LN_TObjArray.tagnum = -1 ;
  G__G__Base3LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__Base3LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Base3LN_TString.tagnum = -1 ;
  G__G__Base3LN_TDatime.tagnum = -1 ;
  G__G__Base3LN_TFile.tagnum = -1 ;
  G__G__Base3LN_TVirtualProof.tagnum = -1 ;
  G__G__Base3LN_EGuiConstants.tagnum = -1 ;
  G__G__Base3LN_EGEventType.tagnum = -1 ;
  G__G__Base3LN_EGraphicsFunction.tagnum = -1 ;
  G__G__Base3LN_dA.tagnum = -1 ;
  G__G__Base3LN_SetWindowAttributes_t.tagnum = -1 ;
  G__G__Base3LN_WindowAttributes_t.tagnum = -1 ;
  G__G__Base3LN_Event_t.tagnum = -1 ;
  G__G__Base3LN_EMouseButton.tagnum = -1 ;
  G__G__Base3LN_EXMagic.tagnum = -1 ;
  G__G__Base3LN_GCValues_t.tagnum = -1 ;
  G__G__Base3LN_ColorStruct_t.tagnum = -1 ;
  G__G__Base3LN_PictureAttributes_t.tagnum = -1 ;
  G__G__Base3LN_EInitialState.tagnum = -1 ;
  G__G__Base3LN_Segment_t.tagnum = -1 ;
  G__G__Base3LN_Point_t.tagnum = -1 ;
  G__G__Base3LN_Rectangle_t.tagnum = -1 ;
  G__G__Base3LN_EKeySym.tagnum = -1 ;
  G__G__Base3LN_EEventType.tagnum = -1 ;
  G__G__Base3LN_tm.tagnum = -1 ;
  G__G__Base3LN_timespec.tagnum = -1 ;
  G__G__Base3LN_TTimeStamp.tagnum = -1 ;
  G__G__Base3LN_TVirtualMutex.tagnum = -1 ;
  G__G__Base3LN_TLockGuard.tagnum = -1 ;
  G__G__Base3LN_TArchiveFile.tagnum = -1 ;
  G__G__Base3LN_TQObject.tagnum = -1 ;
  G__G__Base3LN_TDSet.tagnum = -1 ;
  G__G__Base3LN_TEventList.tagnum = -1 ;
  G__G__Base3LN_TTree.tagnum = -1 ;
  G__G__Base3LN_TDrawFeedback.tagnum = -1 ;
  G__G__Base3LN_TChain.tagnum = -1 ;
  G__G__Base3LN_TVirtualPerfStats.tagnum = -1 ;
  G__G__Base3LN_TVirtualPerfStatscLcLEEventType.tagnum = -1 ;
  G__G__Base3LN_ECursor.tagnum = -1 ;
  G__G__Base3LN_TArchiveMember.tagnum = -1 ;
  G__G__Base3LN_TZIPMember.tagnum = -1 ;
  G__G__Base3LN_TZIPFile.tagnum = -1 ;
  G__G__Base3LN_TZIPFilecLcLEZIPConstants.tagnum = -1 ;
  G__G__Base3LN_pairlEcharmUcOintgR.tagnum = -1 ;
  G__G__Base3LN_pairlEcharmUcOlonggR.tagnum = -1 ;
  G__G__Base3LN_pairlEcharmUcOfloatgR.tagnum = -1 ;
  G__G__Base3LN_pairlEcharmUcOdoublegR.tagnum = -1 ;
  G__G__Base3LN_pairlEcharmUcOvoidmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlEcharmUcOcharmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlEstringcOintgR.tagnum = -1 ;
  G__G__Base3LN_pairlEstringcOlonggR.tagnum = -1 ;
  G__G__Base3LN_pairlEstringcOfloatgR.tagnum = -1 ;
  G__G__Base3LN_pairlEstringcOdoublegR.tagnum = -1 ;
  G__G__Base3LN_pairlEstringcOvoidmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlElongcOintgR.tagnum = -1 ;
  G__G__Base3LN_pairlElongcOlonggR.tagnum = -1 ;
  G__G__Base3LN_pairlElongcOfloatgR.tagnum = -1 ;
  G__G__Base3LN_pairlElongcOdoublegR.tagnum = -1 ;
  G__G__Base3LN_pairlElongcOvoidmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlElongcOcharmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlEdoublecOintgR.tagnum = -1 ;
  G__G__Base3LN_pairlEdoublecOlonggR.tagnum = -1 ;
  G__G__Base3LN_pairlEdoublecOfloatgR.tagnum = -1 ;
  G__G__Base3LN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__G__Base3LN_pairlEdoublecOvoidmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlEdoublecOcharmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPcharmUcOintgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPcharmUcOlonggR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPcharmUcOfloatgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPcharmUcOdoublegR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPstringcOintgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPstringcOlonggR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPstringcOfloatgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPstringcOdoublegR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPstringcOvoidmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPlongcOintgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPlongcOlonggR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPlongcOfloatgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPlongcOdoublegR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPlongcOvoidmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPlongcOcharmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPdoublecOintgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPdoublecOlonggR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPdoublecOfloatgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPdoublecOdoublegR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR.tagnum = -1 ;
  G__G__Base3LN_pairlEconstsPdoublecOcharmUgR.tagnum = -1 ;
  G__G__Base3LN_TParameterlEdoublegR.tagnum = -1 ;
  G__G__Base3LN_TParameterlElonggR.tagnum = -1 ;
  G__G__Base3LN_TParameterlElongsPlonggR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Base3() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__Base3LN_TClass);
   G__get_linked_tagnum(&G__G__Base3LN_TBuffer);
   G__get_linked_tagnum(&G__G__Base3LN_TMemberInspector);
   G__get_linked_tagnum(&G__G__Base3LN_TObject);
   G__get_linked_tagnum(&G__G__Base3LN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__G__Base3LN_string);
   G__get_linked_tagnum(&G__G__Base3LN_TList);
   G__get_linked_tagnum(&G__G__Base3LN_TObjArray);
   G__get_linked_tagnum(&G__G__Base3LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__Base3LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__Base3LN_TString);
   G__get_linked_tagnum(&G__G__Base3LN_TDatime);
   G__get_linked_tagnum(&G__G__Base3LN_TFile);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualProof),sizeof(TVirtualProof),-1,62776,"Abstract PROOF interface",G__setup_memvarTVirtualProof,G__setup_memfuncTVirtualProof);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_EGuiConstants),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_EGEventType),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_EGraphicsFunction),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum(&G__G__Base3LN_dA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_SetWindowAttributes_t),sizeof(SetWindowAttributes_t),-1,0,(char*)NULL,G__setup_memvarSetWindowAttributes_t,G__setup_memfuncSetWindowAttributes_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_WindowAttributes_t),sizeof(WindowAttributes_t),-1,0,(char*)NULL,G__setup_memvarWindowAttributes_t,G__setup_memfuncWindowAttributes_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_Event_t),sizeof(Event_t),-1,0,(char*)NULL,G__setup_memvarEvent_t,G__setup_memfuncEvent_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_EMouseButton),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_EXMagic),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_GCValues_t),sizeof(GCValues_t),-1,256,(char*)NULL,G__setup_memvarGCValues_t,G__setup_memfuncGCValues_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_ColorStruct_t),sizeof(ColorStruct_t),-1,0,(char*)NULL,G__setup_memvarColorStruct_t,G__setup_memfuncColorStruct_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_PictureAttributes_t),sizeof(PictureAttributes_t),-1,0,(char*)NULL,G__setup_memvarPictureAttributes_t,G__setup_memfuncPictureAttributes_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_EInitialState),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_Segment_t),sizeof(Segment_t),-1,0,(char*)NULL,G__setup_memvarSegment_t,G__setup_memfuncSegment_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_Point_t),sizeof(Point_t),-1,0,(char*)NULL,G__setup_memvarPoint_t,G__setup_memfuncPoint_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_Rectangle_t),sizeof(Rectangle_t),-1,0,(char*)NULL,G__setup_memvarRectangle_t,G__setup_memfuncRectangle_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_EKeySym),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_EEventType),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum(&G__G__Base3LN_tm);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_timespec),sizeof(timespec),-1,0,(char*)NULL,G__setup_memvartimespec,G__setup_memfunctimespec);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TTimeStamp),sizeof(TTimeStamp),-1,296192,"Encapsulates seconds and ns since EPOCH",G__setup_memvarTTimeStamp,G__setup_memfuncTTimeStamp);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualMutex),sizeof(TVirtualMutex),-1,29952,"Virtual mutex lock class",G__setup_memvarTVirtualMutex,G__setup_memfuncTVirtualMutex);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TLockGuard),sizeof(TLockGuard),-1,33792,"Exception safe locking/unlocking of mutex",G__setup_memvarTLockGuard,G__setup_memfuncTLockGuard);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TArchiveFile),sizeof(TArchiveFile),-1,324866,"An archive file containing multiple sub-files (like a ZIP archive)",G__setup_memvarTArchiveFile,G__setup_memfuncTArchiveFile);
   G__get_linked_tagnum(&G__G__Base3LN_TQObject);
   G__get_linked_tagnum(&G__G__Base3LN_TDSet);
   G__get_linked_tagnum(&G__G__Base3LN_TEventList);
   G__get_linked_tagnum(&G__G__Base3LN_TTree);
   G__get_linked_tagnum(&G__G__Base3LN_TDrawFeedback);
   G__get_linked_tagnum(&G__G__Base3LN_TChain);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStats),sizeof(TVirtualPerfStats),-1,29703,"ABC for collecting PROOF statistics",G__setup_memvarTVirtualPerfStats,G__setup_memfuncTVirtualPerfStats);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TVirtualPerfStatscLcLEEventType),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_ECursor),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TArchiveMember),sizeof(TArchiveMember),-1,327424,"An archive member file",G__setup_memvarTArchiveMember,G__setup_memfuncTArchiveMember);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TZIPMember),sizeof(TZIPMember),-1,327424,"A ZIP archive member file",G__setup_memvarTZIPMember,G__setup_memfuncTZIPMember);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TZIPFile),sizeof(TZIPFile),-1,324864,"A ZIP archive file",G__setup_memvarTZIPFile,G__setup_memfuncTZIPFile);
   G__get_linked_tagnum(&G__G__Base3LN_TZIPFilecLcLEZIPConstants);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOintgR),sizeof(pair<char*,int>),-1,297216,(char*)NULL,G__setup_memvarpairlEcharmUcOintgR,G__setup_memfuncpairlEcharmUcOintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOlonggR),sizeof(pair<char*,long>),-1,297216,(char*)NULL,G__setup_memvarpairlEcharmUcOlonggR,G__setup_memfuncpairlEcharmUcOlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOfloatgR),sizeof(pair<char*,float>),-1,297216,(char*)NULL,G__setup_memvarpairlEcharmUcOfloatgR,G__setup_memfuncpairlEcharmUcOfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOdoublegR),sizeof(pair<char*,double>),-1,297216,(char*)NULL,G__setup_memvarpairlEcharmUcOdoublegR,G__setup_memfuncpairlEcharmUcOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOvoidmUgR),sizeof(pair<char*,void*>),-1,297216,(char*)NULL,G__setup_memvarpairlEcharmUcOvoidmUgR,G__setup_memfuncpairlEcharmUcOvoidmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEcharmUcOcharmUgR),sizeof(pair<char*,char*>),-1,297216,(char*)NULL,G__setup_memvarpairlEcharmUcOcharmUgR,G__setup_memfuncpairlEcharmUcOcharmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOintgR),sizeof(pair<string,int>),-1,297216,(char*)NULL,G__setup_memvarpairlEstringcOintgR,G__setup_memfuncpairlEstringcOintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOlonggR),sizeof(pair<string,long>),-1,297216,(char*)NULL,G__setup_memvarpairlEstringcOlonggR,G__setup_memfuncpairlEstringcOlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOfloatgR),sizeof(pair<string,float>),-1,297216,(char*)NULL,G__setup_memvarpairlEstringcOfloatgR,G__setup_memfuncpairlEstringcOfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOdoublegR),sizeof(pair<string,double>),-1,297216,(char*)NULL,G__setup_memvarpairlEstringcOdoublegR,G__setup_memfuncpairlEstringcOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEstringcOvoidmUgR),sizeof(pair<string,void*>),-1,297216,(char*)NULL,G__setup_memvarpairlEstringcOvoidmUgR,G__setup_memfuncpairlEstringcOvoidmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOintgR),sizeof(pair<long,int>),-1,297216,(char*)NULL,G__setup_memvarpairlElongcOintgR,G__setup_memfuncpairlElongcOintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOlonggR),sizeof(pair<long,long>),-1,297216,(char*)NULL,G__setup_memvarpairlElongcOlonggR,G__setup_memfuncpairlElongcOlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOfloatgR),sizeof(pair<long,float>),-1,297216,(char*)NULL,G__setup_memvarpairlElongcOfloatgR,G__setup_memfuncpairlElongcOfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOdoublegR),sizeof(pair<long,double>),-1,297216,(char*)NULL,G__setup_memvarpairlElongcOdoublegR,G__setup_memfuncpairlElongcOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOvoidmUgR),sizeof(pair<long,void*>),-1,297216,(char*)NULL,G__setup_memvarpairlElongcOvoidmUgR,G__setup_memfuncpairlElongcOvoidmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlElongcOcharmUgR),sizeof(pair<long,char*>),-1,297216,(char*)NULL,G__setup_memvarpairlElongcOcharmUgR,G__setup_memfuncpairlElongcOcharmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOintgR),sizeof(pair<double,int>),-1,297216,(char*)NULL,G__setup_memvarpairlEdoublecOintgR,G__setup_memfuncpairlEdoublecOintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOlonggR),sizeof(pair<double,long>),-1,297216,(char*)NULL,G__setup_memvarpairlEdoublecOlonggR,G__setup_memfuncpairlEdoublecOlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOfloatgR),sizeof(pair<double,float>),-1,297216,(char*)NULL,G__setup_memvarpairlEdoublecOfloatgR,G__setup_memfuncpairlEdoublecOfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOdoublegR),sizeof(pair<double,double>),-1,297216,(char*)NULL,G__setup_memvarpairlEdoublecOdoublegR,G__setup_memfuncpairlEdoublecOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOvoidmUgR),sizeof(pair<double,void*>),-1,297216,(char*)NULL,G__setup_memvarpairlEdoublecOvoidmUgR,G__setup_memfuncpairlEdoublecOvoidmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEdoublecOcharmUgR),sizeof(pair<double,char*>),-1,297216,(char*)NULL,G__setup_memvarpairlEdoublecOcharmUgR,G__setup_memfuncpairlEdoublecOcharmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOintgR),sizeof(pair<const char*,int>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPcharmUcOintgR,G__setup_memfuncpairlEconstsPcharmUcOintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOlonggR),sizeof(pair<const char*,long>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPcharmUcOlonggR,G__setup_memfuncpairlEconstsPcharmUcOlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOfloatgR),sizeof(pair<const char*,float>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPcharmUcOfloatgR,G__setup_memfuncpairlEconstsPcharmUcOfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOdoublegR),sizeof(pair<const char*,double>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPcharmUcOdoublegR,G__setup_memfuncpairlEconstsPcharmUcOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOvoidmUgR),sizeof(pair<const char*,void*>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPcharmUcOvoidmUgR,G__setup_memfuncpairlEconstsPcharmUcOvoidmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPcharmUcOcharmUgR),sizeof(pair<const char*,char*>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPcharmUcOcharmUgR,G__setup_memfuncpairlEconstsPcharmUcOcharmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOintgR),sizeof(pair<const string,int>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPstringcOintgR,G__setup_memfuncpairlEconstsPstringcOintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOlonggR),sizeof(pair<const string,long>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPstringcOlonggR,G__setup_memfuncpairlEconstsPstringcOlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOfloatgR),sizeof(pair<const string,float>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPstringcOfloatgR,G__setup_memfuncpairlEconstsPstringcOfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOdoublegR),sizeof(pair<const string,double>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPstringcOdoublegR,G__setup_memfuncpairlEconstsPstringcOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPstringcOvoidmUgR),sizeof(pair<const string,void*>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPstringcOvoidmUgR,G__setup_memfuncpairlEconstsPstringcOvoidmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOintgR),sizeof(pair<const long,int>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPlongcOintgR,G__setup_memfuncpairlEconstsPlongcOintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOlonggR),sizeof(pair<const long,long>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPlongcOlonggR,G__setup_memfuncpairlEconstsPlongcOlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOfloatgR),sizeof(pair<const long,float>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPlongcOfloatgR,G__setup_memfuncpairlEconstsPlongcOfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOdoublegR),sizeof(pair<const long,double>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPlongcOdoublegR,G__setup_memfuncpairlEconstsPlongcOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOvoidmUgR),sizeof(pair<const long,void*>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPlongcOvoidmUgR,G__setup_memfuncpairlEconstsPlongcOvoidmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPlongcOcharmUgR),sizeof(pair<const long,char*>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPlongcOcharmUgR,G__setup_memfuncpairlEconstsPlongcOcharmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOintgR),sizeof(pair<const double,int>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPdoublecOintgR,G__setup_memfuncpairlEconstsPdoublecOintgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOlonggR),sizeof(pair<const double,long>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPdoublecOlonggR,G__setup_memfuncpairlEconstsPdoublecOlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOfloatgR),sizeof(pair<const double,float>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPdoublecOfloatgR,G__setup_memfuncpairlEconstsPdoublecOfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOdoublegR),sizeof(pair<const double,double>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPdoublecOdoublegR,G__setup_memfuncpairlEconstsPdoublecOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOvoidmUgR),sizeof(pair<const double,void*>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPdoublecOvoidmUgR,G__setup_memfuncpairlEconstsPdoublecOvoidmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_pairlEconstsPdoublecOcharmUgR),sizeof(pair<const double,char*>),-1,297216,(char*)NULL,G__setup_memvarpairlEconstsPdoublecOcharmUgR,G__setup_memfuncpairlEconstsPdoublecOcharmUgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlEdoublegR),sizeof(TParameter<double>),-1,324864,"Named templated parameter type",G__setup_memvarTParameterlEdoublegR,G__setup_memfuncTParameterlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlElonggR),sizeof(TParameter<long>),-1,324864,"Named templated parameter type",G__setup_memvarTParameterlElonggR,G__setup_memfuncTParameterlElonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Base3LN_TParameterlElongsPlonggR),sizeof(TParameter<long long>),-1,324864,"Named templated parameter type",G__setup_memvarTParameterlElongsPlonggR,G__setup_memfuncTParameterlElongsPlonggR);
}
extern "C" void G__cpp_setupG__Base3(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Base3()");
  G__set_cpp_environmentG__Base3();
  G__cpp_setup_tagtableG__Base3();

  G__cpp_setup_inheritanceG__Base3();

  G__cpp_setup_typetableG__Base3();

  G__cpp_setup_memvarG__Base3();

  G__cpp_setup_memfuncG__Base3();
  G__cpp_setup_globalG__Base3();
  G__cpp_setup_funcG__Base3();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Base3();
  return;
}
class G__cpp_setup_initG__Base3 {
  public:
    G__cpp_setup_initG__Base3() { G__add_setup_func("G__Base3",(G__incsetup)(&G__cpp_setupG__Base3)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Base3() { G__remove_setup_func("G__Base3"); }
};
G__cpp_setup_initG__Base3 G__cpp_setup_initializerG__Base3;

