//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:30:12 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__Ged.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TGedFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedFrame_IsA(const void*);
   static void delete_TGedFrame(void *p);
   static void deleteArray_TGedFrame(void *p);
   static void destruct_TGedFrame(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedFrame*)
   {
      ::TGedFrame *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedFrame", ::TGedFrame::Class_Version(), "ged/inc/TGedFrame.h", 37,
                  typeid(::TGedFrame), DefineBehavior(ptr, ptr),
                  &::TGedFrame::Dictionary, &TGedFrame_IsA, 0,
                  sizeof(::TGedFrame) );
      instance.SetDelete(&delete_TGedFrame);
      instance.SetDeleteArray(&deleteArray_TGedFrame);
      instance.SetDestructor(&destruct_TGedFrame);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedElement_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedElement_IsA(const void*);
   static void *new_TGedElement(void *p = 0);
   static void *newArray_TGedElement(Long_t size);
   static void delete_TGedElement(void *p);
   static void deleteArray_TGedElement(void *p);
   static void destruct_TGedElement(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedElement*)
   {
      ::TGedElement *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedElement", ::TGedElement::Class_Version(), "ged/inc/TGedFrame.h", 69,
                  typeid(::TGedElement), DefineBehavior(ptr, ptr),
                  &::TGedElement::Dictionary, &TGedElement_IsA, 0,
                  sizeof(::TGedElement) );
      instance.SetNew(&new_TGedElement);
      instance.SetNewArray(&newArray_TGedElement);
      instance.SetDelete(&delete_TGedElement);
      instance.SetDeleteArray(&deleteArray_TGedElement);
      instance.SetDestructor(&destruct_TGedElement);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedElement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedNameFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedNameFrame_IsA(const void*);
   static void delete_TGedNameFrame(void *p);
   static void deleteArray_TGedNameFrame(void *p);
   static void destruct_TGedNameFrame(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedNameFrame*)
   {
      ::TGedNameFrame *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedNameFrame", ::TGedNameFrame::Class_Version(), "ged/inc/TGedFrame.h", 78,
                  typeid(::TGedNameFrame), DefineBehavior(ptr, ptr),
                  &::TGedNameFrame::Dictionary, &TGedNameFrame_IsA, 0,
                  sizeof(::TGedNameFrame) );
      instance.SetDelete(&delete_TGedNameFrame);
      instance.SetDeleteArray(&deleteArray_TGedNameFrame);
      instance.SetDestructor(&destruct_TGedNameFrame);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedNameFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedPatternSelect_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedPatternSelect_IsA(const void*);
   static void delete_TGedPatternSelect(void *p);
   static void deleteArray_TGedPatternSelect(void *p);
   static void destruct_TGedPatternSelect(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedPatternSelect*)
   {
      ::TGedPatternSelect *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedPatternSelect", ::TGedPatternSelect::Class_Version(), "ged/inc/TGedPatternSelect.h", 151,
                  typeid(::TGedPatternSelect), DefineBehavior(ptr, ptr),
                  &::TGedPatternSelect::Dictionary, &TGedPatternSelect_IsA, 0,
                  sizeof(::TGedPatternSelect) );
      instance.SetDelete(&delete_TGedPatternSelect);
      instance.SetDeleteArray(&deleteArray_TGedPatternSelect);
      instance.SetDestructor(&destruct_TGedPatternSelect);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedPatternSelect*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAttFillEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAttFillEditor_IsA(const void*);
   static void delete_TAttFillEditor(void *p);
   static void deleteArray_TAttFillEditor(void *p);
   static void destruct_TAttFillEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAttFillEditor*)
   {
      ::TAttFillEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAttFillEditor", ::TAttFillEditor::Class_Version(), "ged/inc/TAttFillEditor.h", 35,
                  typeid(::TAttFillEditor), DefineBehavior(ptr, ptr),
                  &::TAttFillEditor::Dictionary, &TAttFillEditor_IsA, 0,
                  sizeof(::TAttFillEditor) );
      instance.SetDelete(&delete_TAttFillEditor);
      instance.SetDeleteArray(&deleteArray_TAttFillEditor);
      instance.SetDestructor(&destruct_TAttFillEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAttFillEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedPopup_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedPopup_IsA(const void*);
   static void delete_TGedPopup(void *p);
   static void deleteArray_TGedPopup(void *p);
   static void destruct_TGedPopup(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedPopup*)
   {
      ::TGedPopup *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedPopup", ::TGedPopup::Class_Version(), "ged/inc/TGedPatternSelect.h", 51,
                  typeid(::TGedPopup), DefineBehavior(ptr, ptr),
                  &::TGedPopup::Dictionary, &TGedPopup_IsA, 0,
                  sizeof(::TGedPopup) );
      instance.SetDelete(&delete_TGedPopup);
      instance.SetDeleteArray(&deleteArray_TGedPopup);
      instance.SetDestructor(&destruct_TGedPopup);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedPopup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedPatternFrame_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedPatternFrame_IsA(const void*);
   static void delete_TGedPatternFrame(void *p);
   static void deleteArray_TGedPatternFrame(void *p);
   static void destruct_TGedPatternFrame(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedPatternFrame*)
   {
      ::TGedPatternFrame *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedPatternFrame", ::TGedPatternFrame::Class_Version(), "ged/inc/TGedPatternSelect.h", 69,
                  typeid(::TGedPatternFrame), DefineBehavior(ptr, ptr),
                  &::TGedPatternFrame::Dictionary, &TGedPatternFrame_IsA, 0,
                  sizeof(::TGedPatternFrame) );
      instance.SetDelete(&delete_TGedPatternFrame);
      instance.SetDeleteArray(&deleteArray_TGedPatternFrame);
      instance.SetDestructor(&destruct_TGedPatternFrame);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedPatternFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedPatternSelector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedPatternSelector_IsA(const void*);
   static void delete_TGedPatternSelector(void *p);
   static void deleteArray_TGedPatternSelector(void *p);
   static void destruct_TGedPatternSelector(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedPatternSelector*)
   {
      ::TGedPatternSelector *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedPatternSelector", ::TGedPatternSelector::Class_Version(), "ged/inc/TGedPatternSelect.h", 97,
                  typeid(::TGedPatternSelector), DefineBehavior(ptr, ptr),
                  &::TGedPatternSelector::Dictionary, &TGedPatternSelector_IsA, 0,
                  sizeof(::TGedPatternSelector) );
      instance.SetDelete(&delete_TGedPatternSelector);
      instance.SetDeleteArray(&deleteArray_TGedPatternSelector);
      instance.SetDestructor(&destruct_TGedPatternSelector);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedPatternSelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedPatternPopup_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedPatternPopup_IsA(const void*);
   static void delete_TGedPatternPopup(void *p);
   static void deleteArray_TGedPatternPopup(void *p);
   static void destruct_TGedPatternPopup(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedPatternPopup*)
   {
      ::TGedPatternPopup *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedPatternPopup", ::TGedPatternPopup::Class_Version(), "ged/inc/TGedPatternSelect.h", 115,
                  typeid(::TGedPatternPopup), DefineBehavior(ptr, ptr),
                  &::TGedPatternPopup::Dictionary, &TGedPatternPopup_IsA, 0,
                  sizeof(::TGedPatternPopup) );
      instance.SetDelete(&delete_TGedPatternPopup);
      instance.SetDeleteArray(&deleteArray_TGedPatternPopup);
      instance.SetDestructor(&destruct_TGedPatternPopup);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedPatternPopup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedSelect_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedSelect_IsA(const void*);
   static void delete_TGedSelect(void *p);
   static void deleteArray_TGedSelect(void *p);
   static void destruct_TGedSelect(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedSelect*)
   {
      ::TGedSelect *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedSelect", ::TGedSelect::Class_Version(), "ged/inc/TGedPatternSelect.h", 129,
                  typeid(::TGedSelect), DefineBehavior(ptr, ptr),
                  &::TGedSelect::Dictionary, &TGedSelect_IsA, 0,
                  sizeof(::TGedSelect) );
      instance.SetDelete(&delete_TGedSelect);
      instance.SetDeleteArray(&deleteArray_TGedSelect);
      instance.SetDestructor(&destruct_TGedSelect);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedSelect*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedMarkerPopup_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedMarkerPopup_IsA(const void*);
   static void delete_TGedMarkerPopup(void *p);
   static void deleteArray_TGedMarkerPopup(void *p);
   static void destruct_TGedMarkerPopup(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedMarkerPopup*)
   {
      ::TGedMarkerPopup *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedMarkerPopup", ::TGedMarkerPopup::Class_Version(), "ged/inc/TGedMarkerSelect.h", 44,
                  typeid(::TGedMarkerPopup), DefineBehavior(ptr, ptr),
                  &::TGedMarkerPopup::Dictionary, &TGedMarkerPopup_IsA, 0,
                  sizeof(::TGedMarkerPopup) );
      instance.SetDelete(&delete_TGedMarkerPopup);
      instance.SetDeleteArray(&deleteArray_TGedMarkerPopup);
      instance.SetDestructor(&destruct_TGedMarkerPopup);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedMarkerPopup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedMarkerSelect_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedMarkerSelect_IsA(const void*);
   static void delete_TGedMarkerSelect(void *p);
   static void deleteArray_TGedMarkerSelect(void *p);
   static void destruct_TGedMarkerSelect(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedMarkerSelect*)
   {
      ::TGedMarkerSelect *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedMarkerSelect", ::TGedMarkerSelect::Class_Version(), "ged/inc/TGedMarkerSelect.h", 59,
                  typeid(::TGedMarkerSelect), DefineBehavior(ptr, ptr),
                  &::TGedMarkerSelect::Dictionary, &TGedMarkerSelect_IsA, 0,
                  sizeof(::TGedMarkerSelect) );
      instance.SetDelete(&delete_TGedMarkerSelect);
      instance.SetDeleteArray(&deleteArray_TGedMarkerSelect);
      instance.SetDestructor(&destruct_TGedMarkerSelect);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedMarkerSelect*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGraphEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGraphEditor_IsA(const void*);
   static void delete_TGraphEditor(void *p);
   static void deleteArray_TGraphEditor(void *p);
   static void destruct_TGraphEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGraphEditor*)
   {
      ::TGraphEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGraphEditor", ::TGraphEditor::Class_Version(), "ged/inc/TGraphEditor.h", 39,
                  typeid(::TGraphEditor), DefineBehavior(ptr, ptr),
                  &::TGraphEditor::Dictionary, &TGraphEditor_IsA, 0,
                  sizeof(::TGraphEditor) );
      instance.SetDelete(&delete_TGraphEditor);
      instance.SetDeleteArray(&deleteArray_TGraphEditor);
      instance.SetDestructor(&destruct_TGraphEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGraphEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TH2Editor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TH2Editor_IsA(const void*);
   static void delete_TH2Editor(void *p);
   static void deleteArray_TH2Editor(void *p);
   static void destruct_TH2Editor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TH2Editor*)
   {
      ::TH2Editor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TH2Editor", ::TH2Editor::Class_Version(), "ged/inc/TH2Editor.h", 52,
                  typeid(::TH2Editor), DefineBehavior(ptr, ptr),
                  &::TH2Editor::Dictionary, &TH2Editor_IsA, 0,
                  sizeof(::TH2Editor) );
      instance.SetDelete(&delete_TH2Editor);
      instance.SetDeleteArray(&deleteArray_TH2Editor);
      instance.SetDestructor(&destruct_TH2Editor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TH2Editor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAttLineEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAttLineEditor_IsA(const void*);
   static void delete_TAttLineEditor(void *p);
   static void deleteArray_TAttLineEditor(void *p);
   static void destruct_TAttLineEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAttLineEditor*)
   {
      ::TAttLineEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAttLineEditor", ::TAttLineEditor::Class_Version(), "ged/inc/TAttLineEditor.h", 35,
                  typeid(::TAttLineEditor), DefineBehavior(ptr, ptr),
                  &::TAttLineEditor::Dictionary, &TAttLineEditor_IsA, 0,
                  sizeof(::TAttLineEditor) );
      instance.SetDelete(&delete_TAttLineEditor);
      instance.SetDeleteArray(&deleteArray_TAttLineEditor);
      instance.SetDestructor(&destruct_TAttLineEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAttLineEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAxisEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAxisEditor_IsA(const void*);
   static void delete_TAxisEditor(void *p);
   static void deleteArray_TAxisEditor(void *p);
   static void destruct_TAxisEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAxisEditor*)
   {
      ::TAxisEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAxisEditor", ::TAxisEditor::Class_Version(), "ged/inc/TAxisEditor.h", 42,
                  typeid(::TAxisEditor), DefineBehavior(ptr, ptr),
                  &::TAxisEditor::Dictionary, &TAxisEditor_IsA, 0,
                  sizeof(::TAxisEditor) );
      instance.SetDelete(&delete_TAxisEditor);
      instance.SetDeleteArray(&deleteArray_TAxisEditor);
      instance.SetDestructor(&destruct_TAxisEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAxisEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAttMarkerEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAttMarkerEditor_IsA(const void*);
   static void delete_TAttMarkerEditor(void *p);
   static void deleteArray_TAttMarkerEditor(void *p);
   static void destruct_TAttMarkerEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAttMarkerEditor*)
   {
      ::TAttMarkerEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAttMarkerEditor", ::TAttMarkerEditor::Class_Version(), "ged/inc/TAttMarkerEditor.h", 36,
                  typeid(::TAttMarkerEditor), DefineBehavior(ptr, ptr),
                  &::TAttMarkerEditor::Dictionary, &TAttMarkerEditor_IsA, 0,
                  sizeof(::TAttMarkerEditor) );
      instance.SetDelete(&delete_TAttMarkerEditor);
      instance.SetDeleteArray(&deleteArray_TAttMarkerEditor);
      instance.SetDestructor(&destruct_TAttMarkerEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAttMarkerEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPaveStatsEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPaveStatsEditor_IsA(const void*);
   static void delete_TPaveStatsEditor(void *p);
   static void deleteArray_TPaveStatsEditor(void *p);
   static void destruct_TPaveStatsEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPaveStatsEditor*)
   {
      ::TPaveStatsEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPaveStatsEditor", ::TPaveStatsEditor::Class_Version(), "ged/inc/TPaveStatsEditor.h", 37,
                  typeid(::TPaveStatsEditor), DefineBehavior(ptr, ptr),
                  &::TPaveStatsEditor::Dictionary, &TPaveStatsEditor_IsA, 0,
                  sizeof(::TPaveStatsEditor) );
      instance.SetDelete(&delete_TPaveStatsEditor);
      instance.SetDeleteArray(&deleteArray_TPaveStatsEditor);
      instance.SetDestructor(&destruct_TPaveStatsEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPaveStatsEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TFrameEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TFrameEditor_IsA(const void*);
   static void delete_TFrameEditor(void *p);
   static void deleteArray_TFrameEditor(void *p);
   static void destruct_TFrameEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TFrameEditor*)
   {
      ::TFrameEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TFrameEditor", ::TFrameEditor::Class_Version(), "ged/inc/TFrameEditor.h", 38,
                  typeid(::TFrameEditor), DefineBehavior(ptr, ptr),
                  &::TFrameEditor::Dictionary, &TFrameEditor_IsA, 0,
                  sizeof(::TFrameEditor) );
      instance.SetDelete(&delete_TFrameEditor);
      instance.SetDeleteArray(&deleteArray_TFrameEditor);
      instance.SetDestructor(&destruct_TFrameEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TFrameEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TCurlyArcEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCurlyArcEditor_IsA(const void*);
   static void delete_TCurlyArcEditor(void *p);
   static void deleteArray_TCurlyArcEditor(void *p);
   static void destruct_TCurlyArcEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCurlyArcEditor*)
   {
      ::TCurlyArcEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCurlyArcEditor", ::TCurlyArcEditor::Class_Version(), "ged/inc/TCurlyArcEditor.h", 34,
                  typeid(::TCurlyArcEditor), DefineBehavior(ptr, ptr),
                  &::TCurlyArcEditor::Dictionary, &TCurlyArcEditor_IsA, 0,
                  sizeof(::TCurlyArcEditor) );
      instance.SetDelete(&delete_TCurlyArcEditor);
      instance.SetDeleteArray(&deleteArray_TCurlyArcEditor);
      instance.SetDestructor(&destruct_TCurlyArcEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCurlyArcEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAttTextEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAttTextEditor_IsA(const void*);
   static void delete_TAttTextEditor(void *p);
   static void deleteArray_TAttTextEditor(void *p);
   static void destruct_TAttTextEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAttTextEditor*)
   {
      ::TAttTextEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAttTextEditor", ::TAttTextEditor::Class_Version(), "ged/inc/TAttTextEditor.h", 36,
                  typeid(::TAttTextEditor), DefineBehavior(ptr, ptr),
                  &::TAttTextEditor::Dictionary, &TAttTextEditor_IsA, 0,
                  sizeof(::TAttTextEditor) );
      instance.SetDelete(&delete_TAttTextEditor);
      instance.SetDeleteArray(&deleteArray_TAttTextEditor);
      instance.SetDestructor(&destruct_TAttTextEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAttTextEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TCurlyLineEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCurlyLineEditor_IsA(const void*);
   static void delete_TCurlyLineEditor(void *p);
   static void deleteArray_TCurlyLineEditor(void *p);
   static void destruct_TCurlyLineEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCurlyLineEditor*)
   {
      ::TCurlyLineEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCurlyLineEditor", ::TCurlyLineEditor::Class_Version(), "ged/inc/TCurlyLineEditor.h", 35,
                  typeid(::TCurlyLineEditor), DefineBehavior(ptr, ptr),
                  &::TCurlyLineEditor::Dictionary, &TCurlyLineEditor_IsA, 0,
                  sizeof(::TCurlyLineEditor) );
      instance.SetDelete(&delete_TCurlyLineEditor);
      instance.SetDeleteArray(&deleteArray_TCurlyLineEditor);
      instance.SetDestructor(&destruct_TCurlyLineEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCurlyLineEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedEditor_IsA(const void*);
   static void *new_TGedEditor(void *p = 0);
   static void *newArray_TGedEditor(Long_t size);
   static void delete_TGedEditor(void *p);
   static void deleteArray_TGedEditor(void *p);
   static void destruct_TGedEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedEditor*)
   {
      ::TGedEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedEditor", ::TGedEditor::Class_Version(), "ged/inc/TGedEditor.h", 40,
                  typeid(::TGedEditor), DefineBehavior(ptr, ptr),
                  &::TGedEditor::Dictionary, &TGedEditor_IsA, 0,
                  sizeof(::TGedEditor) );
      instance.SetNew(&new_TGedEditor);
      instance.SetNewArray(&newArray_TGedEditor);
      instance.SetDelete(&delete_TGedEditor);
      instance.SetDeleteArray(&deleteArray_TGedEditor);
      instance.SetDestructor(&destruct_TGedEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TH1Editor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TH1Editor_IsA(const void*);
   static void delete_TH1Editor(void *p);
   static void deleteArray_TH1Editor(void *p);
   static void destruct_TH1Editor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TH1Editor*)
   {
      ::TH1Editor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TH1Editor", ::TH1Editor::Class_Version(), "ged/inc/TH1Editor.h", 50,
                  typeid(::TH1Editor), DefineBehavior(ptr, ptr),
                  &::TH1Editor::Dictionary, &TH1Editor_IsA, 0,
                  sizeof(::TH1Editor) );
      instance.SetDelete(&delete_TH1Editor);
      instance.SetDeleteArray(&deleteArray_TH1Editor);
      instance.SetDestructor(&destruct_TH1Editor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TH1Editor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TArrowEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TArrowEditor_IsA(const void*);
   static void delete_TArrowEditor(void *p);
   static void deleteArray_TArrowEditor(void *p);
   static void destruct_TArrowEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TArrowEditor*)
   {
      ::TArrowEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TArrowEditor", ::TArrowEditor::Class_Version(), "ged/inc/TArrowEditor.h", 34,
                  typeid(::TArrowEditor), DefineBehavior(ptr, ptr),
                  &::TArrowEditor::Dictionary, &TArrowEditor_IsA, 0,
                  sizeof(::TArrowEditor) );
      instance.SetDelete(&delete_TArrowEditor);
      instance.SetDeleteArray(&deleteArray_TArrowEditor);
      instance.SetDestructor(&destruct_TArrowEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TArrowEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGedToolBox_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGedToolBox_IsA(const void*);
   static void delete_TGedToolBox(void *p);
   static void deleteArray_TGedToolBox(void *p);
   static void destruct_TGedToolBox(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGedToolBox*)
   {
      ::TGedToolBox *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGedToolBox", ::TGedToolBox::Class_Version(), "ged/inc/TGedToolBox.h", 29,
                  typeid(::TGedToolBox), DefineBehavior(ptr, ptr),
                  &::TGedToolBox::Dictionary, &TGedToolBox_IsA, 0,
                  sizeof(::TGedToolBox) );
      instance.SetDelete(&delete_TGedToolBox);
      instance.SetDeleteArray(&deleteArray_TGedToolBox);
      instance.SetDestructor(&destruct_TGedToolBox);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGedToolBox*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPadEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPadEditor_IsA(const void*);
   static void delete_TPadEditor(void *p);
   static void deleteArray_TPadEditor(void *p);
   static void destruct_TPadEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPadEditor*)
   {
      ::TPadEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPadEditor", ::TPadEditor::Class_Version(), "ged/inc/TPadEditor.h", 37,
                  typeid(::TPadEditor), DefineBehavior(ptr, ptr),
                  &::TPadEditor::Dictionary, &TPadEditor_IsA, 0,
                  sizeof(::TPadEditor) );
      instance.SetDelete(&delete_TPadEditor);
      instance.SetDeleteArray(&deleteArray_TPadEditor);
      instance.SetDestructor(&destruct_TPadEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPadEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TGedFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedFrame::Class_Name()
{
   return "TGedFrame";
}

//______________________________________________________________________________
const char *TGedFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedElement::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedElement::Class_Name()
{
   return "TGedElement";
}

//______________________________________________________________________________
const char *TGedElement::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedElement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedElement::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedElement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedElement::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedElement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedElement::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedElement*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedNameFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedNameFrame::Class_Name()
{
   return "TGedNameFrame";
}

//______________________________________________________________________________
const char *TGedNameFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedNameFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedNameFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedNameFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedNameFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedNameFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedNameFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedNameFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedPatternSelect::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedPatternSelect::Class_Name()
{
   return "TGedPatternSelect";
}

//______________________________________________________________________________
const char *TGedPatternSelect::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedPatternSelect*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedPatternSelect::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedPatternSelect*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedPatternSelect::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedPatternSelect*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedPatternSelect::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedPatternSelect*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAttFillEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttFillEditor::Class_Name()
{
   return "TAttFillEditor";
}

//______________________________________________________________________________
const char *TAttFillEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAttFillEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttFillEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAttFillEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttFillEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAttFillEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttFillEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAttFillEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedPopup::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedPopup::Class_Name()
{
   return "TGedPopup";
}

//______________________________________________________________________________
const char *TGedPopup::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedPopup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedPopup::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedPopup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedPopup::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedPopup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedPopup::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedPopup*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedPatternFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedPatternFrame::Class_Name()
{
   return "TGedPatternFrame";
}

//______________________________________________________________________________
const char *TGedPatternFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedPatternFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedPatternFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedPatternFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedPatternFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedPatternFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedPatternFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedPatternFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedPatternSelector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedPatternSelector::Class_Name()
{
   return "TGedPatternSelector";
}

//______________________________________________________________________________
const char *TGedPatternSelector::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedPatternSelector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedPatternSelector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedPatternSelector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedPatternSelector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedPatternSelector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedPatternSelector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedPatternSelector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedPatternPopup::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedPatternPopup::Class_Name()
{
   return "TGedPatternPopup";
}

//______________________________________________________________________________
const char *TGedPatternPopup::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedPatternPopup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedPatternPopup::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedPatternPopup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedPatternPopup::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedPatternPopup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedPatternPopup::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedPatternPopup*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedSelect::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedSelect::Class_Name()
{
   return "TGedSelect";
}

//______________________________________________________________________________
const char *TGedSelect::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedSelect*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedSelect::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedSelect*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedSelect::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedSelect*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedSelect::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedSelect*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedMarkerPopup::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedMarkerPopup::Class_Name()
{
   return "TGedMarkerPopup";
}

//______________________________________________________________________________
const char *TGedMarkerPopup::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedMarkerPopup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedMarkerPopup::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedMarkerPopup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedMarkerPopup::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedMarkerPopup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedMarkerPopup::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedMarkerPopup*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedMarkerSelect::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedMarkerSelect::Class_Name()
{
   return "TGedMarkerSelect";
}

//______________________________________________________________________________
const char *TGedMarkerSelect::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedMarkerSelect*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedMarkerSelect::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedMarkerSelect*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedMarkerSelect::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedMarkerSelect*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedMarkerSelect::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedMarkerSelect*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGraphEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGraphEditor::Class_Name()
{
   return "TGraphEditor";
}

//______________________________________________________________________________
const char *TGraphEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGraphEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGraphEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGraphEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGraphEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGraphEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGraphEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGraphEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TH2Editor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TH2Editor::Class_Name()
{
   return "TH2Editor";
}

//______________________________________________________________________________
const char *TH2Editor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TH2Editor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TH2Editor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TH2Editor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TH2Editor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TH2Editor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TH2Editor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TH2Editor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAttLineEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttLineEditor::Class_Name()
{
   return "TAttLineEditor";
}

//______________________________________________________________________________
const char *TAttLineEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAttLineEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttLineEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAttLineEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttLineEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAttLineEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttLineEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAttLineEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAxisEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAxisEditor::Class_Name()
{
   return "TAxisEditor";
}

//______________________________________________________________________________
const char *TAxisEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAxisEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAxisEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAxisEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAxisEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAxisEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAxisEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAxisEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAttMarkerEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttMarkerEditor::Class_Name()
{
   return "TAttMarkerEditor";
}

//______________________________________________________________________________
const char *TAttMarkerEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAttMarkerEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttMarkerEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAttMarkerEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttMarkerEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAttMarkerEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttMarkerEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAttMarkerEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPaveStatsEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPaveStatsEditor::Class_Name()
{
   return "TPaveStatsEditor";
}

//______________________________________________________________________________
const char *TPaveStatsEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPaveStatsEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPaveStatsEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPaveStatsEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPaveStatsEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPaveStatsEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPaveStatsEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPaveStatsEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFrameEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFrameEditor::Class_Name()
{
   return "TFrameEditor";
}

//______________________________________________________________________________
const char *TFrameEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TFrameEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFrameEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TFrameEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFrameEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TFrameEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFrameEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TFrameEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCurlyArcEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCurlyArcEditor::Class_Name()
{
   return "TCurlyArcEditor";
}

//______________________________________________________________________________
const char *TCurlyArcEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCurlyArcEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCurlyArcEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCurlyArcEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCurlyArcEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCurlyArcEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCurlyArcEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCurlyArcEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAttTextEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttTextEditor::Class_Name()
{
   return "TAttTextEditor";
}

//______________________________________________________________________________
const char *TAttTextEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAttTextEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttTextEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAttTextEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttTextEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAttTextEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttTextEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAttTextEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCurlyLineEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCurlyLineEditor::Class_Name()
{
   return "TCurlyLineEditor";
}

//______________________________________________________________________________
const char *TCurlyLineEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCurlyLineEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCurlyLineEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCurlyLineEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCurlyLineEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCurlyLineEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCurlyLineEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCurlyLineEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedEditor::Class_Name()
{
   return "TGedEditor";
}

//______________________________________________________________________________
const char *TGedEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TH1Editor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TH1Editor::Class_Name()
{
   return "TH1Editor";
}

//______________________________________________________________________________
const char *TH1Editor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TH1Editor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TH1Editor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TH1Editor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TH1Editor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TH1Editor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TH1Editor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TH1Editor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArrowEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArrowEditor::Class_Name()
{
   return "TArrowEditor";
}

//______________________________________________________________________________
const char *TArrowEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TArrowEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArrowEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TArrowEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArrowEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TArrowEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArrowEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TArrowEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGedToolBox::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGedToolBox::Class_Name()
{
   return "TGedToolBox";
}

//______________________________________________________________________________
const char *TGedToolBox::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGedToolBox*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGedToolBox::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGedToolBox*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGedToolBox::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGedToolBox*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGedToolBox::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGedToolBox*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPadEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPadEditor::Class_Name()
{
   return "TPadEditor";
}

//______________________________________________________________________________
const char *TPadEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPadEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPadEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPadEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPadEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPadEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPadEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPadEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TGedElement::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedElement.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TGedElement::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedElement.

      TClass *R__cl = ::TGedElement::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fGedFrame", &fGedFrame);
      R__insp.Inspect(R__cl, R__parent, "*fCanvas", &fCanvas);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedElement_IsA(const void *obj) {
      return ((::TGedElement*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGedElement(void *p) {
      return  p ? new(p) ::TGedElement : new ::TGedElement;
   }
   static void *newArray_TGedElement(Long_t size) {
      return new ::TGedElement[size];
   }
   // Wrapper around operator delete
   static void delete_TGedElement(void *p) {
      delete ((::TGedElement*)p);
   }
   static void deleteArray_TGedElement(void *p) {
      delete [] ((::TGedElement*)p);
   }
   static void destruct_TGedElement(void *p) {
      typedef ::TGedElement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedElement

//______________________________________________________________________________
void TGedFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedFrame.

   TGCompositeFrame::Streamer(R__b);
   TGWidget::Streamer(R__b);
}

//______________________________________________________________________________
void TGedFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedFrame.

      TClass *R__cl = ::TGedFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fModel", &fModel);
      R__insp.Inspect(R__cl, R__parent, "*fPad", &fPad);
      R__insp.Inspect(R__cl, R__parent, "fInit", &fInit);
      R__insp.Inspect(R__cl, R__parent, "*fTab", &fTab);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
      TGWidget::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedFrame_IsA(const void *obj) {
      return ((::TGedFrame*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGedFrame(void *p) {
      delete ((::TGedFrame*)p);
   }
   static void deleteArray_TGedFrame(void *p) {
      delete [] ((::TGedFrame*)p);
   }
   static void destruct_TGedFrame(void *p) {
      typedef ::TGedFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedFrame

//______________________________________________________________________________
void TGedNameFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedNameFrame.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGedNameFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedNameFrame.

      TClass *R__cl = ::TGedNameFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fLabel", &fLabel);
      R__insp.Inspect(R__cl, R__parent, "*f1", &f1);
      R__insp.Inspect(R__cl, R__parent, "*f2", &f2);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedNameFrame_IsA(const void *obj) {
      return ((::TGedNameFrame*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGedNameFrame(void *p) {
      delete ((::TGedNameFrame*)p);
   }
   static void deleteArray_TGedNameFrame(void *p) {
      delete [] ((::TGedNameFrame*)p);
   }
   static void destruct_TGedNameFrame(void *p) {
      typedef ::TGedNameFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedNameFrame

//______________________________________________________________________________
void TArrowEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArrowEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TArrowEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TArrowEditor.

      TClass *R__cl = ::TArrowEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fArrow", &fArrow);
      R__insp.Inspect(R__cl, R__parent, "*fOptionCombo", &fOptionCombo);
      R__insp.Inspect(R__cl, R__parent, "*fAngleEntry", &fAngleEntry);
      R__insp.Inspect(R__cl, R__parent, "*fSizeEntry", &fSizeEntry);
      R__insp.Inspect(R__cl, R__parent, "*fStartPointXEntry", &fStartPointXEntry);
      R__insp.Inspect(R__cl, R__parent, "*fEndPointXEntry", &fEndPointXEntry);
      R__insp.Inspect(R__cl, R__parent, "*fStartPointYEntry", &fStartPointYEntry);
      R__insp.Inspect(R__cl, R__parent, "*fEndPointYEntry", &fEndPointYEntry);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TArrowEditor_IsA(const void *obj) {
      return ((::TArrowEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TArrowEditor(void *p) {
      delete ((::TArrowEditor*)p);
   }
   static void deleteArray_TArrowEditor(void *p) {
      delete [] ((::TArrowEditor*)p);
   }
   static void destruct_TArrowEditor(void *p) {
      typedef ::TArrowEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArrowEditor

//______________________________________________________________________________
void TAttFillEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttFillEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TAttFillEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAttFillEditor.

      TClass *R__cl = ::TAttFillEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fAttFill", &fAttFill);
      R__insp.Inspect(R__cl, R__parent, "*fColorSelect", &fColorSelect);
      R__insp.Inspect(R__cl, R__parent, "*fPatternSelect", &fPatternSelect);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAttFillEditor_IsA(const void *obj) {
      return ((::TAttFillEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TAttFillEditor(void *p) {
      delete ((::TAttFillEditor*)p);
   }
   static void deleteArray_TAttFillEditor(void *p) {
      delete [] ((::TAttFillEditor*)p);
   }
   static void destruct_TAttFillEditor(void *p) {
      typedef ::TAttFillEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttFillEditor

//______________________________________________________________________________
void TAttLineEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttLineEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TAttLineEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAttLineEditor.

      TClass *R__cl = ::TAttLineEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fAttLine", &fAttLine);
      R__insp.Inspect(R__cl, R__parent, "*fStyleCombo", &fStyleCombo);
      R__insp.Inspect(R__cl, R__parent, "*fWidthCombo", &fWidthCombo);
      R__insp.Inspect(R__cl, R__parent, "*fColorSelect", &fColorSelect);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAttLineEditor_IsA(const void *obj) {
      return ((::TAttLineEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TAttLineEditor(void *p) {
      delete ((::TAttLineEditor*)p);
   }
   static void deleteArray_TAttLineEditor(void *p) {
      delete [] ((::TAttLineEditor*)p);
   }
   static void destruct_TAttLineEditor(void *p) {
      typedef ::TAttLineEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttLineEditor

//______________________________________________________________________________
void TAttMarkerEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttMarkerEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TAttMarkerEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAttMarkerEditor.

      TClass *R__cl = ::TAttMarkerEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fAttMarker", &fAttMarker);
      R__insp.Inspect(R__cl, R__parent, "*fTypeCombo", &fTypeCombo);
      R__insp.Inspect(R__cl, R__parent, "*fSizeCombo", &fSizeCombo);
      R__insp.Inspect(R__cl, R__parent, "*fColorSelect", &fColorSelect);
      R__insp.Inspect(R__cl, R__parent, "*fMarkerSelect", &fMarkerSelect);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAttMarkerEditor_IsA(const void *obj) {
      return ((::TAttMarkerEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TAttMarkerEditor(void *p) {
      delete ((::TAttMarkerEditor*)p);
   }
   static void deleteArray_TAttMarkerEditor(void *p) {
      delete [] ((::TAttMarkerEditor*)p);
   }
   static void destruct_TAttMarkerEditor(void *p) {
      typedef ::TAttMarkerEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttMarkerEditor

//______________________________________________________________________________
void TAttTextEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttTextEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TAttTextEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAttTextEditor.

      TClass *R__cl = ::TAttTextEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fAttText", &fAttText);
      R__insp.Inspect(R__cl, R__parent, "*fTypeCombo", &fTypeCombo);
      R__insp.Inspect(R__cl, R__parent, "*fSizeCombo", &fSizeCombo);
      R__insp.Inspect(R__cl, R__parent, "*fAlignCombo", &fAlignCombo);
      R__insp.Inspect(R__cl, R__parent, "*fColorSelect", &fColorSelect);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAttTextEditor_IsA(const void *obj) {
      return ((::TAttTextEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TAttTextEditor(void *p) {
      delete ((::TAttTextEditor*)p);
   }
   static void deleteArray_TAttTextEditor(void *p) {
      delete [] ((::TAttTextEditor*)p);
   }
   static void destruct_TAttTextEditor(void *p) {
      typedef ::TAttTextEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttTextEditor

//______________________________________________________________________________
void TAxisEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAxisEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TAxisEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAxisEditor.

      TClass *R__cl = ::TAxisEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fAxis", &fAxis);
      R__insp.Inspect(R__cl, R__parent, "*fAxisColor", &fAxisColor);
      R__insp.Inspect(R__cl, R__parent, "*fLogAxis", &fLogAxis);
      R__insp.Inspect(R__cl, R__parent, "*fTickLength", &fTickLength);
      R__insp.Inspect(R__cl, R__parent, "*fDiv1", &fDiv1);
      R__insp.Inspect(R__cl, R__parent, "*fDiv2", &fDiv2);
      R__insp.Inspect(R__cl, R__parent, "*fDiv3", &fDiv3);
      R__insp.Inspect(R__cl, R__parent, "*fOptimize", &fOptimize);
      R__insp.Inspect(R__cl, R__parent, "*fTicksBoth", &fTicksBoth);
      R__insp.Inspect(R__cl, R__parent, "*fMoreLog", &fMoreLog);
      R__insp.Inspect(R__cl, R__parent, "fTicksFlag", &fTicksFlag);
      R__insp.Inspect(R__cl, R__parent, "*fTitle", &fTitle);
      R__insp.Inspect(R__cl, R__parent, "*fTitleColor", &fTitleColor);
      R__insp.Inspect(R__cl, R__parent, "*fTitleFont", &fTitleFont);
      R__insp.Inspect(R__cl, R__parent, "fTitlePrec", &fTitlePrec);
      R__insp.Inspect(R__cl, R__parent, "*fTitleSize", &fTitleSize);
      R__insp.Inspect(R__cl, R__parent, "*fTitleOffset", &fTitleOffset);
      R__insp.Inspect(R__cl, R__parent, "*fCentered", &fCentered);
      R__insp.Inspect(R__cl, R__parent, "*fRotated", &fRotated);
      R__insp.Inspect(R__cl, R__parent, "*fLabelColor", &fLabelColor);
      R__insp.Inspect(R__cl, R__parent, "*fLabelFont", &fLabelFont);
      R__insp.Inspect(R__cl, R__parent, "fLabelPrec", &fLabelPrec);
      R__insp.Inspect(R__cl, R__parent, "*fLabelSize", &fLabelSize);
      R__insp.Inspect(R__cl, R__parent, "*fLabelOffset", &fLabelOffset);
      R__insp.Inspect(R__cl, R__parent, "*fNoExponent", &fNoExponent);
      R__insp.Inspect(R__cl, R__parent, "*fDecimal", &fDecimal);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAxisEditor_IsA(const void *obj) {
      return ((::TAxisEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TAxisEditor(void *p) {
      delete ((::TAxisEditor*)p);
   }
   static void deleteArray_TAxisEditor(void *p) {
      delete [] ((::TAxisEditor*)p);
   }
   static void destruct_TAxisEditor(void *p) {
      typedef ::TAxisEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAxisEditor

//______________________________________________________________________________
void TFrameEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFrameEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TFrameEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFrameEditor.

      TClass *R__cl = ::TFrameEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fFrame", &fFrame);
      R__insp.Inspect(R__cl, R__parent, "*fBmode", &fBmode);
      R__insp.Inspect(R__cl, R__parent, "*fBmode0", &fBmode0);
      R__insp.Inspect(R__cl, R__parent, "*fBmode1", &fBmode1);
      R__insp.Inspect(R__cl, R__parent, "*fBsize", &fBsize);
      R__insp.Inspect(R__cl, R__parent, "fInit", &fInit);
      R__insp.Inspect(R__cl, R__parent, "*f3", &f3);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TFrameEditor_IsA(const void *obj) {
      return ((::TFrameEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TFrameEditor(void *p) {
      delete ((::TFrameEditor*)p);
   }
   static void deleteArray_TFrameEditor(void *p) {
      delete [] ((::TFrameEditor*)p);
   }
   static void destruct_TFrameEditor(void *p) {
      typedef ::TFrameEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFrameEditor

//______________________________________________________________________________
void TGraphEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGraphEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGraphEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGraphEditor.

      TClass *R__cl = ::TGraphEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDrawShape", &fDrawShape);
      R__insp.Inspect(R__cl, R__parent, "*fTitle", &fTitle);
      R__insp.Inspect(R__cl, R__parent, "fTitlePrec", &fTitlePrec);
      R__insp.Inspect(R__cl, R__parent, "*fGraph", &fGraph);
      R__insp.Inspect(R__cl, R__parent, "*fgr", &fgr);
      R__insp.Inspect(R__cl, R__parent, "*fShape", &fShape);
      R__insp.Inspect(R__cl, R__parent, "*fShape0", &fShape0);
      R__insp.Inspect(R__cl, R__parent, "*fShape1", &fShape1);
      R__insp.Inspect(R__cl, R__parent, "*fShape2", &fShape2);
      R__insp.Inspect(R__cl, R__parent, "*fShape3", &fShape3);
      R__insp.Inspect(R__cl, R__parent, "*fMarkerOnOff", &fMarkerOnOff);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGraphEditor_IsA(const void *obj) {
      return ((::TGraphEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGraphEditor(void *p) {
      delete ((::TGraphEditor*)p);
   }
   static void deleteArray_TGraphEditor(void *p) {
      delete [] ((::TGraphEditor*)p);
   }
   static void destruct_TGraphEditor(void *p) {
      typedef ::TGraphEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGraphEditor

//______________________________________________________________________________
void TH1Editor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TH1Editor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TH1Editor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TH1Editor.

      TClass *R__cl = ::TH1Editor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fHist", &fHist);
      R__insp.Inspect(R__cl, R__parent, "*fTab", &fTab);
      R__insp.Inspect(R__cl, R__parent, "*fBin", &fBin);
      R__insp.Inspect(R__cl, R__parent, "*fFit", &fFit);
      R__insp.Inspect(R__cl, R__parent, "*fStyle", &fStyle);
      R__insp.Inspect(R__cl, R__parent, "*fBinContainer", &fBinContainer);
      R__insp.Inspect(R__cl, R__parent, "*fFitContainer", &fFitContainer);
      R__insp.Inspect(R__cl, R__parent, "fTitlePrec", &fTitlePrec);
      R__insp.Inspect(R__cl, R__parent, "*fTitle", &fTitle);
      R__insp.Inspect(R__cl, R__parent, "*fDimGroup", &fDimGroup);
      R__insp.Inspect(R__cl, R__parent, "*fDim", &fDim);
      R__insp.Inspect(R__cl, R__parent, "*fDim0", &fDim0);
      R__insp.Inspect(R__cl, R__parent, "*fTypeCombo", &fTypeCombo);
      R__insp.Inspect(R__cl, R__parent, "*fCoordsCombo", &fCoordsCombo);
      R__insp.Inspect(R__cl, R__parent, "*fErrorCombo", &fErrorCombo);
      R__insp.Inspect(R__cl, R__parent, "*fHistOnOff", &fHistOnOff);
      R__insp.Inspect(R__cl, R__parent, "*fAddMarker", &fAddMarker);
      R__insp.Inspect(R__cl, R__parent, "*fAddB", &fAddB);
      R__insp.Inspect(R__cl, R__parent, "*fAddBar", &fAddBar);
      R__insp.Inspect(R__cl, R__parent, "*fAdd", &fAdd);
      R__insp.Inspect(R__cl, R__parent, "*fMakeHBar", &fMakeHBar);
      R__insp.Inspect(R__cl, R__parent, "*fAddSimple", &fAddSimple);
      R__insp.Inspect(R__cl, R__parent, "*fBarWidth", &fBarWidth);
      R__insp.Inspect(R__cl, R__parent, "*fBarOffset", &fBarOffset);
      R__insp.Inspect(R__cl, R__parent, "*fAddCombo", &fAddCombo);
      R__insp.Inspect(R__cl, R__parent, "*fPercentCombo", &fPercentCombo);
      R__insp.Inspect(R__cl, R__parent, "*f3", &f3);
      R__insp.Inspect(R__cl, R__parent, "*f4", &f4);
      R__insp.Inspect(R__cl, R__parent, "*f6", &f6);
      R__insp.Inspect(R__cl, R__parent, "*f7", &f7);
      R__insp.Inspect(R__cl, R__parent, "*f8", &f8);
      R__insp.Inspect(R__cl, R__parent, "*f9", &f9);
      R__insp.Inspect(R__cl, R__parent, "*f10", &f10);
      R__insp.Inspect(R__cl, R__parent, "*f11", &f11);
      R__insp.Inspect(R__cl, R__parent, "*f12", &f12);
      R__insp.Inspect(R__cl, R__parent, "*f15", &f15);
      R__insp.Inspect(R__cl, R__parent, "*fBinCont", &fBinCont);
      R__insp.Inspect(R__cl, R__parent, "*fBinCont1", &fBinCont1);
      R__insp.Inspect(R__cl, R__parent, "*fBinSlider", &fBinSlider);
      R__insp.Inspect(R__cl, R__parent, "*fBinSlider1", &fBinSlider1);
      R__insp.Inspect(R__cl, R__parent, "*fBinNumberEntry", &fBinNumberEntry);
      R__insp.Inspect(R__cl, R__parent, "*fBinNumberEntry1", &fBinNumberEntry1);
      R__insp.Inspect(R__cl, R__parent, "*fBinOffsetSld", &fBinOffsetSld);
      R__insp.Inspect(R__cl, R__parent, "*fOffsetNumberEntry", &fOffsetNumberEntry);
      R__insp.Inspect(R__cl, R__parent, "*fSlider", &fSlider);
      R__insp.Inspect(R__cl, R__parent, "*fSldMin", &fSldMin);
      R__insp.Inspect(R__cl, R__parent, "*fSldMax", &fSldMax);
      R__insp.Inspect(R__cl, R__parent, "*fDelaydraw", &fDelaydraw);
      R__insp.Inspect(R__cl, R__parent, "*fApply", &fApply);
      R__insp.Inspect(R__cl, R__parent, "*fCancel", &fCancel);
      R__insp.Inspect(R__cl, R__parent, "fMake", &fMake);
      R__insp.Inspect(R__cl, R__parent, "fMakeB", &fMakeB);
      R__insp.Inspect(R__cl, R__parent, "fPx1old", &fPx1old);
      R__insp.Inspect(R__cl, R__parent, "fPy1old", &fPy1old);
      R__insp.Inspect(R__cl, R__parent, "fPx2old", &fPx2old);
      R__insp.Inspect(R__cl, R__parent, "fPy2old", &fPy2old);
      R__insp.Inspect(R__cl, R__parent, "fP1NDCold[3]", fP1NDCold);
      R__insp.Inspect(R__cl, R__parent, "fP2NDCold[3]", fP2NDCold);
      R__insp.Inspect(R__cl, R__parent, "fP3NDCold[3]", fP3NDCold);
      R__insp.Inspect(R__cl, R__parent, "fP4NDCold[3]", fP4NDCold);
      R__insp.Inspect(R__cl, R__parent, "fP1old[3]", fP1old);
      R__insp.Inspect(R__cl, R__parent, "fP2old[3]", fP2old);
      R__insp.Inspect(R__cl, R__parent, "fP3old[3]", fP3old);
      R__insp.Inspect(R__cl, R__parent, "fP4old[3]", fP4old);
      R__insp.Inspect(R__cl, R__parent, "fP5old[3]", fP5old);
      R__insp.Inspect(R__cl, R__parent, "fP6old[3]", fP6old);
      R__insp.Inspect(R__cl, R__parent, "fP7old[3]", fP7old);
      R__insp.Inspect(R__cl, R__parent, "fP8old[3]", fP8old);
      R__insp.Inspect(R__cl, R__parent, "*fBinHist", &fBinHist);
      R__insp.Inspect(R__cl, R__parent, "fOldOffset", &fOldOffset);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TH1Editor_IsA(const void *obj) {
      return ((::TH1Editor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TH1Editor(void *p) {
      delete ((::TH1Editor*)p);
   }
   static void deleteArray_TH1Editor(void *p) {
      delete [] ((::TH1Editor*)p);
   }
   static void destruct_TH1Editor(void *p) {
      typedef ::TH1Editor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TH1Editor

//______________________________________________________________________________
void TH2Editor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TH2Editor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TH2Editor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TH2Editor.

      TClass *R__cl = ::TH2Editor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fHist", &fHist);
      R__insp.Inspect(R__cl, R__parent, "*fTab", &fTab);
      R__insp.Inspect(R__cl, R__parent, "*fBin", &fBin);
      R__insp.Inspect(R__cl, R__parent, "*fFit", &fFit);
      R__insp.Inspect(R__cl, R__parent, "*fBinContainer", &fBinContainer);
      R__insp.Inspect(R__cl, R__parent, "*fTitle", &fTitle);
      R__insp.Inspect(R__cl, R__parent, "*fTypeCombo", &fTypeCombo);
      R__insp.Inspect(R__cl, R__parent, "*fCoordsCombo", &fCoordsCombo);
      R__insp.Inspect(R__cl, R__parent, "*fContCombo", &fContCombo);
      R__insp.Inspect(R__cl, R__parent, "*fColContLbl", &fColContLbl);
      R__insp.Inspect(R__cl, R__parent, "*fColContLbl1", &fColContLbl1);
      R__insp.Inspect(R__cl, R__parent, "fTitlePrec", &fTitlePrec);
      R__insp.Inspect(R__cl, R__parent, "*fDimGroup", &fDimGroup);
      R__insp.Inspect(R__cl, R__parent, "*fDim", &fDim);
      R__insp.Inspect(R__cl, R__parent, "*fDim0", &fDim0);
      R__insp.Inspect(R__cl, R__parent, "*f3", &f3);
      R__insp.Inspect(R__cl, R__parent, "*f4", &f4);
      R__insp.Inspect(R__cl, R__parent, "*f5", &f5);
      R__insp.Inspect(R__cl, R__parent, "*f6", &f6);
      R__insp.Inspect(R__cl, R__parent, "*f9", &f9);
      R__insp.Inspect(R__cl, R__parent, "*f12", &f12);
      R__insp.Inspect(R__cl, R__parent, "*f13", &f13);
      R__insp.Inspect(R__cl, R__parent, "*f16", &f16);
      R__insp.Inspect(R__cl, R__parent, "*f19", &f19);
      R__insp.Inspect(R__cl, R__parent, "*f38", &f38);
      R__insp.Inspect(R__cl, R__parent, "*fAddError", &fAddError);
      R__insp.Inspect(R__cl, R__parent, "*fAddPalette", &fAddPalette);
      R__insp.Inspect(R__cl, R__parent, "*fAddPalette1", &fAddPalette1);
      R__insp.Inspect(R__cl, R__parent, "*fAddArr", &fAddArr);
      R__insp.Inspect(R__cl, R__parent, "*fAddBox", &fAddBox);
      R__insp.Inspect(R__cl, R__parent, "*fAddScat", &fAddScat);
      R__insp.Inspect(R__cl, R__parent, "*fAddCol", &fAddCol);
      R__insp.Inspect(R__cl, R__parent, "*fAddFB", &fAddFB);
      R__insp.Inspect(R__cl, R__parent, "*fAddBB", &fAddBB);
      R__insp.Inspect(R__cl, R__parent, "*fAddText", &fAddText);
      R__insp.Inspect(R__cl, R__parent, "*fContLevels", &fContLevels);
      R__insp.Inspect(R__cl, R__parent, "*fContLevels1", &fContLevels1);
      R__insp.Inspect(R__cl, R__parent, "*fBarWidth", &fBarWidth);
      R__insp.Inspect(R__cl, R__parent, "*fBarOffset", &fBarOffset);
      R__insp.Inspect(R__cl, R__parent, "*fBinXCont", &fBinXCont);
      R__insp.Inspect(R__cl, R__parent, "*fBinXSlider", &fBinXSlider);
      R__insp.Inspect(R__cl, R__parent, "*fBinXNumberEntry", &fBinXNumberEntry);
      R__insp.Inspect(R__cl, R__parent, "*fBinYSlider", &fBinYSlider);
      R__insp.Inspect(R__cl, R__parent, "*fBinYNumberEntry", &fBinYNumberEntry);
      R__insp.Inspect(R__cl, R__parent, "*fApply", &fApply);
      R__insp.Inspect(R__cl, R__parent, "*fCancel", &fCancel);
      R__insp.Inspect(R__cl, R__parent, "*fBinXCont1", &fBinXCont1);
      R__insp.Inspect(R__cl, R__parent, "*fBinXSlider1", &fBinXSlider1);
      R__insp.Inspect(R__cl, R__parent, "*fBinXNumberEntry1", &fBinXNumberEntry1);
      R__insp.Inspect(R__cl, R__parent, "*fXOffsetNumberEntry", &fXOffsetNumberEntry);
      R__insp.Inspect(R__cl, R__parent, "*fXBinOffsetSld", &fXBinOffsetSld);
      R__insp.Inspect(R__cl, R__parent, "*fBinYCont1", &fBinYCont1);
      R__insp.Inspect(R__cl, R__parent, "*fBinYSlider1", &fBinYSlider1);
      R__insp.Inspect(R__cl, R__parent, "*fBinYNumberEntry1", &fBinYNumberEntry1);
      R__insp.Inspect(R__cl, R__parent, "*fYOffsetNumberEntry", &fYOffsetNumberEntry);
      R__insp.Inspect(R__cl, R__parent, "*fYBinOffsetSld", &fYBinOffsetSld);
      R__insp.Inspect(R__cl, R__parent, "*fSliderX", &fSliderX);
      R__insp.Inspect(R__cl, R__parent, "*fSldXMin", &fSldXMin);
      R__insp.Inspect(R__cl, R__parent, "*fSldXMax", &fSldXMax);
      R__insp.Inspect(R__cl, R__parent, "*fSliderY", &fSliderY);
      R__insp.Inspect(R__cl, R__parent, "*fSldYMin", &fSldYMin);
      R__insp.Inspect(R__cl, R__parent, "*fSldYMax", &fSldYMax);
      R__insp.Inspect(R__cl, R__parent, "*fDelaydraw", &fDelaydraw);
      R__insp.Inspect(R__cl, R__parent, "*fFrameColor", &fFrameColor);
      R__insp.Inspect(R__cl, R__parent, "*fFramePattern", &fFramePattern);
      R__insp.Inspect(R__cl, R__parent, "fPx1old", &fPx1old);
      R__insp.Inspect(R__cl, R__parent, "fPy1old", &fPy1old);
      R__insp.Inspect(R__cl, R__parent, "fPx2old", &fPx2old);
      R__insp.Inspect(R__cl, R__parent, "fPy2old", &fPy2old);
      R__insp.Inspect(R__cl, R__parent, "fP1oldx[3]", fP1oldx);
      R__insp.Inspect(R__cl, R__parent, "fP2oldx[3]", fP2oldx);
      R__insp.Inspect(R__cl, R__parent, "fP3oldx[3]", fP3oldx);
      R__insp.Inspect(R__cl, R__parent, "fP4oldx[3]", fP4oldx);
      R__insp.Inspect(R__cl, R__parent, "fP5oldx[3]", fP5oldx);
      R__insp.Inspect(R__cl, R__parent, "fP6oldx[3]", fP6oldx);
      R__insp.Inspect(R__cl, R__parent, "fP7oldx[3]", fP7oldx);
      R__insp.Inspect(R__cl, R__parent, "fP8oldx[3]", fP8oldx);
      R__insp.Inspect(R__cl, R__parent, "fP1oldy[3]", fP1oldy);
      R__insp.Inspect(R__cl, R__parent, "fP2oldy[3]", fP2oldy);
      R__insp.Inspect(R__cl, R__parent, "fP3oldy[3]", fP3oldy);
      R__insp.Inspect(R__cl, R__parent, "fP4oldy[3]", fP4oldy);
      R__insp.Inspect(R__cl, R__parent, "fP5oldy[3]", fP5oldy);
      R__insp.Inspect(R__cl, R__parent, "fP6oldy[3]", fP6oldy);
      R__insp.Inspect(R__cl, R__parent, "fP7oldy[3]", fP7oldy);
      R__insp.Inspect(R__cl, R__parent, "fP8oldy[3]", fP8oldy);
      R__insp.Inspect(R__cl, R__parent, "*fBinHist", &fBinHist);
      R__insp.Inspect(R__cl, R__parent, "fOldXOffset", &fOldXOffset);
      R__insp.Inspect(R__cl, R__parent, "fOldYOffset", &fOldYOffset);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TH2Editor_IsA(const void *obj) {
      return ((::TH2Editor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TH2Editor(void *p) {
      delete ((::TH2Editor*)p);
   }
   static void deleteArray_TH2Editor(void *p) {
      delete [] ((::TH2Editor*)p);
   }
   static void destruct_TH2Editor(void *p) {
      typedef ::TH2Editor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TH2Editor

//______________________________________________________________________________
void TPaveStatsEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPaveStatsEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TPaveStatsEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPaveStatsEditor.

      TClass *R__cl = ::TPaveStatsEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPaveStats", &fPaveStats);
      R__insp.Inspect(R__cl, R__parent, "*fHistoName", &fHistoName);
      R__insp.Inspect(R__cl, R__parent, "*fEntries", &fEntries);
      R__insp.Inspect(R__cl, R__parent, "*fMean", &fMean);
      R__insp.Inspect(R__cl, R__parent, "*fRMS", &fRMS);
      R__insp.Inspect(R__cl, R__parent, "*fUnderflow", &fUnderflow);
      R__insp.Inspect(R__cl, R__parent, "*fOverflow", &fOverflow);
      R__insp.Inspect(R__cl, R__parent, "*fIntegral", &fIntegral);
      R__insp.Inspect(R__cl, R__parent, "*fNameValues", &fNameValues);
      R__insp.Inspect(R__cl, R__parent, "*fErrors", &fErrors);
      R__insp.Inspect(R__cl, R__parent, "*fChisquare", &fChisquare);
      R__insp.Inspect(R__cl, R__parent, "*fProbability", &fProbability);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPaveStatsEditor_IsA(const void *obj) {
      return ((::TPaveStatsEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TPaveStatsEditor(void *p) {
      delete ((::TPaveStatsEditor*)p);
   }
   static void deleteArray_TPaveStatsEditor(void *p) {
      delete [] ((::TPaveStatsEditor*)p);
   }
   static void destruct_TPaveStatsEditor(void *p) {
      typedef ::TPaveStatsEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPaveStatsEditor

//______________________________________________________________________________
void TPadEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPadEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TPadEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPadEditor.

      TClass *R__cl = ::TPadEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPadPointer", &fPadPointer);
      R__insp.Inspect(R__cl, R__parent, "*fEditable", &fEditable);
      R__insp.Inspect(R__cl, R__parent, "*fCrosshair", &fCrosshair);
      R__insp.Inspect(R__cl, R__parent, "*fFixedAR", &fFixedAR);
      R__insp.Inspect(R__cl, R__parent, "*fGridX", &fGridX);
      R__insp.Inspect(R__cl, R__parent, "*fGridY", &fGridY);
      R__insp.Inspect(R__cl, R__parent, "*fLogX", &fLogX);
      R__insp.Inspect(R__cl, R__parent, "*fLogY", &fLogY);
      R__insp.Inspect(R__cl, R__parent, "*fLogZ", &fLogZ);
      R__insp.Inspect(R__cl, R__parent, "*fTickX", &fTickX);
      R__insp.Inspect(R__cl, R__parent, "*fTickY", &fTickY);
      R__insp.Inspect(R__cl, R__parent, "*fBmode", &fBmode);
      R__insp.Inspect(R__cl, R__parent, "*fBmode0", &fBmode0);
      R__insp.Inspect(R__cl, R__parent, "*fBmode1", &fBmode1);
      R__insp.Inspect(R__cl, R__parent, "*fBsize", &fBsize);
      R__insp.Inspect(R__cl, R__parent, "fInit", &fInit);
      R__insp.Inspect(R__cl, R__parent, "*f7", &f7);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPadEditor_IsA(const void *obj) {
      return ((::TPadEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TPadEditor(void *p) {
      delete ((::TPadEditor*)p);
   }
   static void deleteArray_TPadEditor(void *p) {
      delete [] ((::TPadEditor*)p);
   }
   static void destruct_TPadEditor(void *p) {
      typedef ::TPadEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPadEditor

//______________________________________________________________________________
void TGedToolBox::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedToolBox.

   TGToolBar::Streamer(R__b);
}

//______________________________________________________________________________
void TGedToolBox::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedToolBox.

      TClass *R__cl = ::TGedToolBox::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGToolBar::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedToolBox_IsA(const void *obj) {
      return ((::TGedToolBox*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGedToolBox(void *p) {
      delete ((::TGedToolBox*)p);
   }
   static void deleteArray_TGedToolBox(void *p) {
      delete [] ((::TGedToolBox*)p);
   }
   static void destruct_TGedToolBox(void *p) {
      typedef ::TGedToolBox current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedToolBox

//______________________________________________________________________________
void TGedEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedEditor.

   TVirtualPadEditor::Streamer(R__b);
   TGMainFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGedEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedEditor.

      TClass *R__cl = ::TGedEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fCan", &fCan);
      R__insp.Inspect(R__cl, R__parent, "*fTab", &fTab);
      R__insp.Inspect(R__cl, R__parent, "*fTabContainer", &fTabContainer);
      R__insp.Inspect(R__cl, R__parent, "*fStyle", &fStyle);
      R__insp.Inspect(R__cl, R__parent, "*fModel", &fModel);
      R__insp.Inspect(R__cl, R__parent, "*fPad", &fPad);
      R__insp.Inspect(R__cl, R__parent, "*fCanvas", &fCanvas);
      R__insp.Inspect(R__cl, R__parent, "*fClass", &fClass);
      R__insp.Inspect(R__cl, R__parent, "fWid", &fWid);
      R__insp.Inspect(R__cl, R__parent, "fGlobal", &fGlobal);
      TVirtualPadEditor::ShowMembers(R__insp, R__parent);
      TGMainFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedEditor_IsA(const void *obj) {
      return ((::TGedEditor*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGedEditor(void *p) {
      return  p ? new(p) ::TGedEditor : new ::TGedEditor;
   }
   static void *newArray_TGedEditor(Long_t size) {
      return new ::TGedEditor[size];
   }
   // Wrapper around operator delete
   static void delete_TGedEditor(void *p) {
      delete ((::TGedEditor*)p);
   }
   static void deleteArray_TGedEditor(void *p) {
      delete [] ((::TGedEditor*)p);
   }
   static void destruct_TGedEditor(void *p) {
      typedef ::TGedEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedEditor

//______________________________________________________________________________
void TCurlyArcEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCurlyArcEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TCurlyArcEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCurlyArcEditor.

      TClass *R__cl = ::TCurlyArcEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fCurlyArc", &fCurlyArc);
      R__insp.Inspect(R__cl, R__parent, "*fRadiusEntry", &fRadiusEntry);
      R__insp.Inspect(R__cl, R__parent, "*fPhiminEntry", &fPhiminEntry);
      R__insp.Inspect(R__cl, R__parent, "*fPhimaxEntry", &fPhimaxEntry);
      R__insp.Inspect(R__cl, R__parent, "*fCenterXEntry", &fCenterXEntry);
      R__insp.Inspect(R__cl, R__parent, "*fCenterYEntry", &fCenterYEntry);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCurlyArcEditor_IsA(const void *obj) {
      return ((::TCurlyArcEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TCurlyArcEditor(void *p) {
      delete ((::TCurlyArcEditor*)p);
   }
   static void deleteArray_TCurlyArcEditor(void *p) {
      delete [] ((::TCurlyArcEditor*)p);
   }
   static void destruct_TCurlyArcEditor(void *p) {
      typedef ::TCurlyArcEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCurlyArcEditor

//______________________________________________________________________________
void TCurlyLineEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCurlyLineEditor.

   TGedFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TCurlyLineEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCurlyLineEditor.

      TClass *R__cl = ::TCurlyLineEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fCurlyLine", &fCurlyLine);
      R__insp.Inspect(R__cl, R__parent, "*fStartXEntry", &fStartXEntry);
      R__insp.Inspect(R__cl, R__parent, "*fEndXEntry", &fEndXEntry);
      R__insp.Inspect(R__cl, R__parent, "*fStartYEntry", &fStartYEntry);
      R__insp.Inspect(R__cl, R__parent, "*fEndYEntry", &fEndYEntry);
      R__insp.Inspect(R__cl, R__parent, "*fAmplitudeEntry", &fAmplitudeEntry);
      R__insp.Inspect(R__cl, R__parent, "*fWaveLengthEntry", &fWaveLengthEntry);
      R__insp.Inspect(R__cl, R__parent, "*fIsWavy", &fIsWavy);
      R__insp.Inspect(R__cl, R__parent, "*fStartXFrame", &fStartXFrame);
      R__insp.Inspect(R__cl, R__parent, "*fStartYFrame", &fStartYFrame);
      R__insp.Inspect(R__cl, R__parent, "*fEndXFrame", &fEndXFrame);
      R__insp.Inspect(R__cl, R__parent, "*fEndYFrame", &fEndYFrame);
      TGedFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCurlyLineEditor_IsA(const void *obj) {
      return ((::TCurlyLineEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TCurlyLineEditor(void *p) {
      delete ((::TCurlyLineEditor*)p);
   }
   static void deleteArray_TCurlyLineEditor(void *p) {
      delete [] ((::TCurlyLineEditor*)p);
   }
   static void destruct_TCurlyLineEditor(void *p) {
      typedef ::TCurlyLineEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCurlyLineEditor

//______________________________________________________________________________
void TGedPopup::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedPopup.

   TGCompositeFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGedPopup::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedPopup.

      TClass *R__cl = ::TGedPopup::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMsgWindow", &fMsgWindow);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedPopup_IsA(const void *obj) {
      return ((::TGedPopup*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGedPopup(void *p) {
      delete ((::TGedPopup*)p);
   }
   static void deleteArray_TGedPopup(void *p) {
      delete [] ((::TGedPopup*)p);
   }
   static void destruct_TGedPopup(void *p) {
      typedef ::TGedPopup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedPopup

//______________________________________________________________________________
void TGedSelect::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedSelect.

   TGCheckButton::Streamer(R__b);
}

//______________________________________________________________________________
void TGedSelect::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedSelect.

      TClass *R__cl = ::TGedSelect::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDrawGC", &fDrawGC);
      R__insp.Inspect(R__cl, R__parent, "*fPopup", &fPopup);
      TGCheckButton::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedSelect_IsA(const void *obj) {
      return ((::TGedSelect*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGedSelect(void *p) {
      delete ((::TGedSelect*)p);
   }
   static void deleteArray_TGedSelect(void *p) {
      delete [] ((::TGedSelect*)p);
   }
   static void destruct_TGedSelect(void *p) {
      typedef ::TGedSelect current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedSelect

//______________________________________________________________________________
void TGedPatternFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedPatternFrame.

   TGFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGedPatternFrame::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedPatternFrame.

      TClass *R__cl = ::TGedPatternFrame::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMsgWindow", &fMsgWindow);
      R__insp.Inspect(R__cl, R__parent, "fActive", &fActive);
      R__insp.Inspect(R__cl, R__parent, "fPattern", &fPattern);
      R__insp.Inspect(R__cl, R__parent, "*fTip", &fTip);
      R__insp.Inspect(R__cl, R__parent, "fTipText[5]", fTipText);
      TGFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedPatternFrame_IsA(const void *obj) {
      return ((::TGedPatternFrame*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGedPatternFrame(void *p) {
      delete ((::TGedPatternFrame*)p);
   }
   static void deleteArray_TGedPatternFrame(void *p) {
      delete [] ((::TGedPatternFrame*)p);
   }
   static void destruct_TGedPatternFrame(void *p) {
      typedef ::TGedPatternFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedPatternFrame

//______________________________________________________________________________
void TGedPatternSelector::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedPatternSelector.

   TGCompositeFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGedPatternSelector::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedPatternSelector.

      TClass *R__cl = ::TGedPatternSelector::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fActive", &fActive);
      R__insp.Inspect(R__cl, R__parent, "*fMsgWindow", &fMsgWindow);
      R__insp.Inspect(R__cl, R__parent, "*fCe[27]", &fCe);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedPatternSelector_IsA(const void *obj) {
      return ((::TGedPatternSelector*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGedPatternSelector(void *p) {
      delete ((::TGedPatternSelector*)p);
   }
   static void deleteArray_TGedPatternSelector(void *p) {
      delete [] ((::TGedPatternSelector*)p);
   }
   static void destruct_TGedPatternSelector(void *p) {
      typedef ::TGedPatternSelector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedPatternSelector

//______________________________________________________________________________
void TGedPatternPopup::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedPatternPopup.

   TGedPopup::Streamer(R__b);
}

//______________________________________________________________________________
void TGedPatternPopup::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedPatternPopup.

      TClass *R__cl = ::TGedPatternPopup::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCurrentPattern", &fCurrentPattern);
      TGedPopup::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedPatternPopup_IsA(const void *obj) {
      return ((::TGedPatternPopup*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGedPatternPopup(void *p) {
      delete ((::TGedPatternPopup*)p);
   }
   static void deleteArray_TGedPatternPopup(void *p) {
      delete [] ((::TGedPatternPopup*)p);
   }
   static void destruct_TGedPatternPopup(void *p) {
      typedef ::TGedPatternPopup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedPatternPopup

//______________________________________________________________________________
void TGedPatternSelect::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedPatternSelect.

   TGedSelect::Streamer(R__b);
}

//______________________________________________________________________________
void TGedPatternSelect::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedPatternSelect.

      TClass *R__cl = ::TGedPatternSelect::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPattern", &fPattern);
      TGedSelect::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedPatternSelect_IsA(const void *obj) {
      return ((::TGedPatternSelect*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGedPatternSelect(void *p) {
      delete ((::TGedPatternSelect*)p);
   }
   static void deleteArray_TGedPatternSelect(void *p) {
      delete [] ((::TGedPatternSelect*)p);
   }
   static void destruct_TGedPatternSelect(void *p) {
      typedef ::TGedPatternSelect current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedPatternSelect

//______________________________________________________________________________
void TGedMarkerSelect::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedMarkerSelect.

   TGedSelect::Streamer(R__b);
}

//______________________________________________________________________________
void TGedMarkerSelect::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedMarkerSelect.

      TClass *R__cl = ::TGedMarkerSelect::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMarkerStyle", &fMarkerStyle);
      R__insp.Inspect(R__cl, R__parent, "*fPicture", &fPicture);
      TGedSelect::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedMarkerSelect_IsA(const void *obj) {
      return ((::TGedMarkerSelect*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGedMarkerSelect(void *p) {
      delete ((::TGedMarkerSelect*)p);
   }
   static void deleteArray_TGedMarkerSelect(void *p) {
      delete [] ((::TGedMarkerSelect*)p);
   }
   static void destruct_TGedMarkerSelect(void *p) {
      typedef ::TGedMarkerSelect current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedMarkerSelect

//______________________________________________________________________________
void TGedMarkerPopup::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGedMarkerPopup.

   TGedPopup::Streamer(R__b);
}

//______________________________________________________________________________
void TGedMarkerPopup::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGedMarkerPopup.

      TClass *R__cl = ::TGedMarkerPopup::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCurrentStyle", &fCurrentStyle);
      TGedPopup::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGedMarkerPopup_IsA(const void *obj) {
      return ((::TGedMarkerPopup*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGedMarkerPopup(void *p) {
      delete ((::TGedMarkerPopup*)p);
   }
   static void deleteArray_TGedMarkerPopup(void *p) {
      delete [] ((::TGedMarkerPopup*)p);
   }
   static void destruct_TGedMarkerPopup(void *p) {
      typedef ::TGedMarkerPopup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGedMarkerPopup

/********************************************************
* ged/src/G__Ged.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__Ged();

extern "C" void G__set_cpp_environmentG__Ged() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("ged/inc/TAttFillEditor.h");
  G__add_compiledheader("ged/inc/TGedFrame.h");
  G__add_compiledheader("ged/inc/TGedMarkerSelect.h");
  G__add_compiledheader("ged/inc/TGraphEditor.h");
  G__add_compiledheader("ged/inc/TH2Editor.h");
  G__add_compiledheader("ged/inc/TAttLineEditor.h");
  G__add_compiledheader("ged/inc/TAxisEditor.h");
  G__add_compiledheader("ged/inc/TAttMarkerEditor.h");
  G__add_compiledheader("ged/inc/TPaveStatsEditor.h");
  G__add_compiledheader("ged/inc/TFrameEditor.h");
  G__add_compiledheader("ged/inc/TCurlyArcEditor.h");
  G__add_compiledheader("ged/inc/TAttTextEditor.h");
  G__add_compiledheader("ged/inc/TCurlyLineEditor.h");
  G__add_compiledheader("ged/inc/TGedEditor.h");
  G__add_compiledheader("ged/inc/TH1Editor.h");
  G__add_compiledheader("ged/inc/TGedPatternSelect.h");
  G__add_compiledheader("ged/inc/TArrowEditor.h");
  G__add_compiledheader("ged/inc/TGedToolBox.h");
  G__add_compiledheader("ged/inc/TPadEditor.h");
  G__cpp_reset_tagtableG__Ged();
}
class G__geddIsrcdIG__GeddOcxx_tag {};

void* operator new(size_t size,G__geddIsrcdIG__GeddOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__geddIsrcdIG__GeddOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_geddIsrcdIG__GeddOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__Ged() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TGedFrame */
static int G__G__Ged_251_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedFrame*)(G__getstructoffset()))->GetModel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedFrame*)(G__getstructoffset()))->GetPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TGedFrame*)(G__getstructoffset()))->GetDrawOption());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedFrame*)(G__getstructoffset()))->RecursiveRemove((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedFrame*)(G__getstructoffset()))->Refresh();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGedFrame*)(G__getstructoffset()))->SetActive((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGedFrame*)(G__getstructoffset()))->SetActive();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGedFrame*)(G__getstructoffset()))->SetDrawOption((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGedFrame*)(G__getstructoffset()))->SetDrawOption();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedFrame*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedFrame*)(G__getstructoffset()))->Update();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedFrame::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedFrame*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedFrame*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedFrame*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedFrame*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_251_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedFrame G__TTGedFrame;
static int G__G__Ged_251_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedFrame *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedFrame *)((G__getstructoffset())+sizeof(TGedFrame)*i);
   else  delete (TGedFrame *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedElement */
static int G__G__Ged_252_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedElement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_252_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedElement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_252_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedElement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_252_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedElement::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_252_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedElement*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_252_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedElement*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_252_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedElement*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_252_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedElement*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_252_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedElement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_252_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedElement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_252_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedElement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_252_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedElement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Ged_252_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedElement *p;
   if(G__getaryconstruct()) p=new TGedElement[G__getaryconstruct()];
   else                    p=new TGedElement;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedElement);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_252_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedElement *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedElement(*(TGedElement*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedElement);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedElement G__TTGedElement;
static int G__G__Ged_252_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedElement *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedElement *)((G__getstructoffset())+sizeof(TGedElement)*i);
   else  delete (TGedElement *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Ged_252_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedElement *dest = (TGedElement*)(G__getstructoffset());
   *dest = (*(TGedElement*)libp->para[0].ref);
   const TGedElement& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedNameFrame */
static int G__G__Ged_253_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedNameFrame *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TGedNameFrame(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TGedNameFrame(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TGedNameFrame(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TGedNameFrame(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TGedNameFrame((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedNameFrame*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedNameFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedNameFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedNameFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedNameFrame::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedNameFrame*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedNameFrame*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedNameFrame*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedNameFrame*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedNameFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedNameFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedNameFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_253_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedNameFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_253_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedNameFrame *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedNameFrame(*(TGedNameFrame*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedNameFrame G__TTGedNameFrame;
static int G__G__Ged_253_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedNameFrame *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedNameFrame *)((G__getstructoffset())+sizeof(TGedNameFrame)*i);
   else  delete (TGedNameFrame *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedPatternSelect */
static int G__G__Ged_255_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedPatternSelect *p=NULL;
      p = new TGedPatternSelect(
(const TGWindow*)G__int(libp->para[0]),(Style_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternSelect*)(G__getstructoffset()))->SetPattern((Style_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((const TGedPatternSelect*)(G__getstructoffset()))->GetPattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TGDimension *pobj,xobj=((const TGedPatternSelect*)(G__getstructoffset()))->GetDefaultSize();
        pobj=new TGDimension(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGedPatternSelect*)(G__getstructoffset()))->PatternSelected((Style_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGedPatternSelect*)(G__getstructoffset()))->PatternSelected();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGedPatternSelect*)(G__getstructoffset()))->ProcessMessage((Long_t)G__int(libp->para[0]),(Long_t)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternSelect*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedPatternSelect::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternSelect::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedPatternSelect::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedPatternSelect::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedPatternSelect*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternSelect*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternSelect*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternSelect*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternSelect::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedPatternSelect::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternSelect::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_255_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedPatternSelect::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_255_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedPatternSelect *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedPatternSelect(*(TGedPatternSelect*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedPatternSelect G__TTGedPatternSelect;
static int G__G__Ged_255_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedPatternSelect *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedPatternSelect *)((G__getstructoffset())+sizeof(TGedPatternSelect)*i);
   else  delete (TGedPatternSelect *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAttFillEditor */
static int G__G__Ged_256_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttFillEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TAttFillEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TAttFillEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TAttFillEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TAttFillEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TAttFillEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttFillEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttFillEditor*)(G__getstructoffset()))->DoFillColor((Pixel_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttFillEditor*)(G__getstructoffset()))->DoFillPattern((Style_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAttFillEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttFillEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAttFillEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAttFillEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAttFillEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttFillEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttFillEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttFillEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttFillEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttFillEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttFillEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_256_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttFillEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_256_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TAttFillEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TAttFillEditor(*(TAttFillEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttFillEditor G__TTAttFillEditor;
static int G__G__Ged_256_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAttFillEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TAttFillEditor *)((G__getstructoffset())+sizeof(TAttFillEditor)*i);
   else  delete (TAttFillEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedPopup */
static int G__G__Ged_266_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedPopup *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TGedPopup(
(const TGWindow*)G__int(libp->para[0]),(const TGWindow*)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TGedPopup(
(const TGWindow*)G__int(libp->para[0]),(const TGWindow*)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TGedPopup(
(const TGWindow*)G__int(libp->para[0]),(const TGWindow*)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedPopup);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGedPopup*)(G__getstructoffset()))->HandleButton((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGedPopup*)(G__getstructoffset()))->ProcessMessage((Long_t)G__int(libp->para[0]),(Long_t)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPopup*)(G__getstructoffset()))->PlacePopup((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPopup*)(G__getstructoffset()))->EndPopup();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedPopup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPopup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedPopup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedPopup::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedPopup*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPopup*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPopup*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPopup*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPopup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedPopup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPopup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_266_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedPopup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_266_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedPopup *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedPopup(*(TGedPopup*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedPopup);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedPopup G__TTGedPopup;
static int G__G__Ged_266_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedPopup *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedPopup *)((G__getstructoffset())+sizeof(TGedPopup)*i);
   else  delete (TGedPopup *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedPatternFrame */
static int G__G__Ged_267_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedPatternFrame *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TGedPatternFrame(
(const TGWindow*)G__int(libp->para[0]),(Style_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TGedPatternFrame(
(const TGWindow*)G__int(libp->para[0]),(Style_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TGedPatternFrame((const TGWindow*)G__int(libp->para[0]),(Style_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGedPatternFrame*)(G__getstructoffset()))->HandleButton((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGedPatternFrame*)(G__getstructoffset()))->HandleCrossing((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternFrame*)(G__getstructoffset()))->DrawBorder();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternFrame*)(G__getstructoffset()))->SetActive((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((const TGedPatternFrame*)(G__getstructoffset()))->GetPattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedPatternFrame::SetFillStyle((TGGC*)G__int(libp->para[0]),(Style_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedPatternFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedPatternFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedPatternFrame::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedPatternFrame*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternFrame*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternFrame*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternFrame*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedPatternFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_267_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedPatternFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_267_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedPatternFrame *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedPatternFrame(*(TGedPatternFrame*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedPatternFrame G__TTGedPatternFrame;
static int G__G__Ged_267_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedPatternFrame *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedPatternFrame *)((G__getstructoffset())+sizeof(TGedPatternFrame)*i);
   else  delete (TGedPatternFrame *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedPatternSelector */
static int G__G__Ged_268_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedPatternSelector *p=NULL;
      p = new TGedPatternSelector((const TGWindow*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGedPatternSelector*)(G__getstructoffset()))->ProcessMessage((Long_t)G__int(libp->para[0]),(Long_t)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternSelector*)(G__getstructoffset()))->SetActive((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGedPatternSelector*)(G__getstructoffset()))->GetActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedPatternSelector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternSelector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedPatternSelector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedPatternSelector::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedPatternSelector*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternSelector*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternSelector*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternSelector*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternSelector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedPatternSelector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternSelector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_268_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedPatternSelector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_268_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedPatternSelector *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedPatternSelector(*(TGedPatternSelector*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedPatternSelector G__TTGedPatternSelector;
static int G__G__Ged_268_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedPatternSelector *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedPatternSelector *)((G__getstructoffset())+sizeof(TGedPatternSelector)*i);
   else  delete (TGedPatternSelector *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedPatternPopup */
static int G__G__Ged_269_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedPatternPopup *p=NULL;
      p = new TGedPatternPopup(
(const TGWindow*)G__int(libp->para[0]),(const TGWindow*)G__int(libp->para[1])
,(Style_t)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGedPatternPopup*)(G__getstructoffset()))->ProcessMessage((Long_t)G__int(libp->para[0]),(Long_t)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedPatternPopup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternPopup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedPatternPopup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedPatternPopup::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedPatternPopup*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternPopup*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternPopup*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedPatternPopup*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternPopup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedPatternPopup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedPatternPopup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_269_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedPatternPopup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_269_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedPatternPopup *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedPatternPopup(*(TGedPatternPopup*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedPatternPopup G__TTGedPatternPopup;
static int G__G__Ged_269_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedPatternPopup *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedPatternPopup *)((G__getstructoffset())+sizeof(TGedPatternPopup)*i);
   else  delete (TGedPatternPopup *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedSelect */
static int G__G__Ged_270_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedSelect *p=NULL;
      p = new TGedSelect((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedSelect);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGedSelect*)(G__getstructoffset()))->HandleButton((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedSelect*)(G__getstructoffset()))->Enable();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedSelect*)(G__getstructoffset()))->Disable();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedSelect*)(G__getstructoffset()))->SetPopup((TGedPopup*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedSelect::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedSelect::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedSelect::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedSelect::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedSelect*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedSelect*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedSelect*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedSelect*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedSelect::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedSelect::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedSelect::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_270_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedSelect::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_270_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedSelect *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedSelect(*(TGedSelect*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedSelect);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedSelect G__TTGedSelect;
static int G__G__Ged_270_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedSelect *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedSelect *)((G__getstructoffset())+sizeof(TGedSelect)*i);
   else  delete (TGedSelect *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedMarkerPopup */
static int G__G__Ged_271_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedMarkerPopup *p=NULL;
      p = new TGedMarkerPopup(
(const TGWindow*)G__int(libp->para[0]),(const TGWindow*)G__int(libp->para[1])
,(Style_t)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGedMarkerPopup*)(G__getstructoffset()))->ProcessMessage((Long_t)G__int(libp->para[0]),(Long_t)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedMarkerPopup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedMarkerPopup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedMarkerPopup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedMarkerPopup::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedMarkerPopup*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedMarkerPopup*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedMarkerPopup*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedMarkerPopup*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedMarkerPopup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedMarkerPopup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedMarkerPopup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_271_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedMarkerPopup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_271_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedMarkerPopup *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedMarkerPopup(*(TGedMarkerPopup*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedMarkerPopup G__TTGedMarkerPopup;
static int G__G__Ged_271_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedMarkerPopup *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedMarkerPopup *)((G__getstructoffset())+sizeof(TGedMarkerPopup)*i);
   else  delete (TGedMarkerPopup *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedMarkerSelect */
static int G__G__Ged_272_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedMarkerSelect *p=NULL;
      p = new TGedMarkerSelect(
(const TGWindow*)G__int(libp->para[0]),(Style_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGedMarkerSelect*)(G__getstructoffset()))->ProcessMessage((Long_t)G__int(libp->para[0]),(Long_t)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedMarkerSelect*)(G__getstructoffset()))->SetMarkerStyle((Style_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((const TGedMarkerSelect*)(G__getstructoffset()))->GetMarkerStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedMarkerSelect*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TGDimension *pobj,xobj=((const TGedMarkerSelect*)(G__getstructoffset()))->GetDefaultSize();
        pobj=new TGDimension(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGedMarkerSelect*)(G__getstructoffset()))->MarkerSelected((Style_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGedMarkerSelect*)(G__getstructoffset()))->MarkerSelected();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedMarkerSelect::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedMarkerSelect::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedMarkerSelect::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedMarkerSelect::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedMarkerSelect*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedMarkerSelect*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedMarkerSelect*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedMarkerSelect*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedMarkerSelect::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedMarkerSelect::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedMarkerSelect::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_272_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedMarkerSelect::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_272_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedMarkerSelect *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedMarkerSelect(*(TGedMarkerSelect*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedMarkerSelect G__TTGedMarkerSelect;
static int G__G__Ged_272_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedMarkerSelect *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedMarkerSelect *)((G__getstructoffset())+sizeof(TGedMarkerSelect)*i);
   else  delete (TGedMarkerSelect *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGraphEditor */
static int G__G__Ged_298_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGraphEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TGraphEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TGraphEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TGraphEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TGraphEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TGraphEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGraphEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGraphEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGraphEditor*)(G__getstructoffset()))->DoShape((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGraphEditor*)(G__getstructoffset()))->DoMarkerOnOff((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGraphEditor*)(G__getstructoffset()))->DoTitle((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGraphEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGraphEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGraphEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGraphEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGraphEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGraphEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGraphEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGraphEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGraphEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGraphEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGraphEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_298_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGraphEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_298_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGraphEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGraphEditor(*(TGraphEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGraphEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGraphEditor G__TTGraphEditor;
static int G__G__Ged_298_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGraphEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGraphEditor *)((G__getstructoffset())+sizeof(TGraphEditor)*i);
   else  delete (TGraphEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TH2Editor */
static int G__G__Ged_314_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TH2Editor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TH2Editor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TH2Editor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TH2Editor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TH2Editor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TH2Editor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TH2Editor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoTitle((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoHistSimple();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoHistComplex();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoHistChanges();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoAddArr((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoAddBox((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoAddCol((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoAddScat((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoAddText((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoAddError((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoAddPalette((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoAddFB();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoAddBB();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoContLevel();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoContLevel1();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoBarWidth();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoBarOffset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoBinPressed();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoBinMoved();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoBinReleased();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoBinLabel();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoApply();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoCancel();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoBinReleased1();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoBinMoved1();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoBinLabel1();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoOffsetMoved();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoOffsetReleased();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoOffsetPressed();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoBinOffset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoSliderXMoved();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoSliderXPressed();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoSliderXReleased();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoXAxisRange();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoSliderYMoved();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoSliderYPressed();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoSliderYReleased();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoYAxisRange();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoFillColor((Pixel_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->DoFillPattern((Style_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TH2Editor*)(G__getstructoffset()))->Dividers((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TH2Editor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TH2Editor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TH2Editor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TH2Editor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TH2Editor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH2Editor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TH2Editor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TH2Editor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TH2Editor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_314_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TH2Editor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_314_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TH2Editor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TH2Editor(*(TH2Editor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TH2Editor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TH2Editor G__TTH2Editor;
static int G__G__Ged_314_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TH2Editor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TH2Editor *)((G__getstructoffset())+sizeof(TH2Editor)*i);
   else  delete (TH2Editor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAttLineEditor */
static int G__G__Ged_317_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttLineEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TAttLineEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TAttLineEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TAttLineEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TAttLineEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TAttLineEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttLineEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttLineEditor*)(G__getstructoffset()))->DoLineColor((Pixel_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttLineEditor*)(G__getstructoffset()))->DoLineStyle((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttLineEditor*)(G__getstructoffset()))->DoLineWidth((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAttLineEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttLineEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAttLineEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAttLineEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAttLineEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttLineEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttLineEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttLineEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttLineEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttLineEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttLineEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_317_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttLineEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_317_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TAttLineEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TAttLineEditor(*(TAttLineEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttLineEditor G__TTAttLineEditor;
static int G__G__Ged_317_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAttLineEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TAttLineEditor *)((G__getstructoffset())+sizeof(TAttLineEditor)*i);
   else  delete (TAttLineEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAxisEditor */
static int G__G__Ged_319_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAxisEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TAxisEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TAxisEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TAxisEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TAxisEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TAxisEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TAxisEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoTickLength();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoAxisColor((Pixel_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoTicks();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoDivisions();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoLogAxis();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoMoreLog();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoTitleColor((Pixel_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoTitle((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoTitleSize();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoTitleFont((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoTitleOffset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoTitleCentered();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoTitleRotated();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoLabelColor((Pixel_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoLabelSize();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoLabelFont((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoLabelOffset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoNoExponent();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->DoDecimal((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAxisEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAxisEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAxisEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAxisEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAxisEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxisEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAxisEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAxisEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAxisEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_319_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAxisEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_319_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TAxisEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TAxisEditor(*(TAxisEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TAxisEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAxisEditor G__TTAxisEditor;
static int G__G__Ged_319_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAxisEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TAxisEditor *)((G__getstructoffset())+sizeof(TAxisEditor)*i);
   else  delete (TAxisEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAttMarkerEditor */
static int G__G__Ged_320_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttMarkerEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TAttMarkerEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TAttMarkerEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TAttMarkerEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TAttMarkerEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TAttMarkerEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttMarkerEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttMarkerEditor*)(G__getstructoffset()))->DoMarkerColor((Pixel_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttMarkerEditor*)(G__getstructoffset()))->DoMarkerSize((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttMarkerEditor*)(G__getstructoffset()))->DoMarkerStyle((Style_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAttMarkerEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttMarkerEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAttMarkerEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAttMarkerEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAttMarkerEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttMarkerEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttMarkerEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttMarkerEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttMarkerEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttMarkerEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttMarkerEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_320_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttMarkerEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_320_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TAttMarkerEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TAttMarkerEditor(*(TAttMarkerEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttMarkerEditor G__TTAttMarkerEditor;
static int G__G__Ged_320_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAttMarkerEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TAttMarkerEditor *)((G__getstructoffset())+sizeof(TAttMarkerEditor)*i);
   else  delete (TAttMarkerEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPaveStatsEditor */
static int G__G__Ged_330_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPaveStatsEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TPaveStatsEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TPaveStatsEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TPaveStatsEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TPaveStatsEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TPaveStatsEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveStatsEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveStatsEditor*)(G__getstructoffset()))->DoStatOptions();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveStatsEditor*)(G__getstructoffset()))->DoFitOptions();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveStatsEditor*)(G__getstructoffset()))->SetValuesON((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPaveStatsEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPaveStatsEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPaveStatsEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPaveStatsEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPaveStatsEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveStatsEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveStatsEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveStatsEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPaveStatsEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPaveStatsEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPaveStatsEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_330_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPaveStatsEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_330_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TPaveStatsEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TPaveStatsEditor(*(TPaveStatsEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPaveStatsEditor G__TTPaveStatsEditor;
static int G__G__Ged_330_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPaveStatsEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPaveStatsEditor *)((G__getstructoffset())+sizeof(TPaveStatsEditor)*i);
   else  delete (TPaveStatsEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFrameEditor */
static int G__G__Ged_332_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFrameEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TFrameEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TFrameEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TFrameEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TFrameEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TFrameEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TFrameEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFrameEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFrameEditor*)(G__getstructoffset()))->DoBorderMode();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFrameEditor*)(G__getstructoffset()))->DoBorderSize((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TFrameEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFrameEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TFrameEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TFrameEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TFrameEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFrameEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFrameEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFrameEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFrameEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFrameEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFrameEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_332_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFrameEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_332_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TFrameEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TFrameEditor(*(TFrameEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TFrameEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFrameEditor G__TTFrameEditor;
static int G__G__Ged_332_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TFrameEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TFrameEditor *)((G__getstructoffset())+sizeof(TFrameEditor)*i);
   else  delete (TFrameEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCurlyArcEditor */
static int G__G__Ged_334_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCurlyArcEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TCurlyArcEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TCurlyArcEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TCurlyArcEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TCurlyArcEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TCurlyArcEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyArcEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyArcEditor*)(G__getstructoffset()))->DoRadius();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyArcEditor*)(G__getstructoffset()))->DoPhimin();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyArcEditor*)(G__getstructoffset()))->DoPhimax();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyArcEditor*)(G__getstructoffset()))->DoCenterXY();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCurlyArcEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCurlyArcEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCurlyArcEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCurlyArcEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCurlyArcEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyArcEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyArcEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyArcEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCurlyArcEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCurlyArcEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCurlyArcEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_334_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCurlyArcEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_334_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TCurlyArcEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TCurlyArcEditor(*(TCurlyArcEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCurlyArcEditor G__TTCurlyArcEditor;
static int G__G__Ged_334_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCurlyArcEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCurlyArcEditor *)((G__getstructoffset())+sizeof(TCurlyArcEditor)*i);
   else  delete (TCurlyArcEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAttTextEditor */
static int G__G__Ged_335_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttTextEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TAttTextEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TAttTextEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TAttTextEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TAttTextEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TAttTextEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttTextEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TAttTextEditor*)(G__getstructoffset()))->ProcessMessage((Long_t)G__int(libp->para[0]),(Long_t)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAttTextEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttTextEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAttTextEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAttTextEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAttTextEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttTextEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttTextEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttTextEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttTextEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttTextEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttTextEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_335_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttTextEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_335_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TAttTextEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TAttTextEditor(*(TAttTextEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttTextEditor G__TTAttTextEditor;
static int G__G__Ged_335_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAttTextEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TAttTextEditor *)((G__getstructoffset())+sizeof(TAttTextEditor)*i);
   else  delete (TAttTextEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCurlyLineEditor */
static int G__G__Ged_337_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCurlyLineEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TCurlyLineEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TCurlyLineEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TCurlyLineEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TCurlyLineEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TCurlyLineEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyLineEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyLineEditor*)(G__getstructoffset()))->DoStartXY();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyLineEditor*)(G__getstructoffset()))->DoEndXY();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyLineEditor*)(G__getstructoffset()))->DoAmplitude();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyLineEditor*)(G__getstructoffset()))->DoWaveLength();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyLineEditor*)(G__getstructoffset()))->DoWavy();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCurlyLineEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCurlyLineEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCurlyLineEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCurlyLineEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCurlyLineEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyLineEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyLineEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCurlyLineEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCurlyLineEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCurlyLineEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCurlyLineEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_337_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCurlyLineEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_337_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TCurlyLineEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TCurlyLineEditor(*(TCurlyLineEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCurlyLineEditor G__TTCurlyLineEditor;
static int G__G__Ged_337_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCurlyLineEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCurlyLineEditor *)((G__getstructoffset())+sizeof(TCurlyLineEditor)*i);
   else  delete (TCurlyLineEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedEditor */
static int G__G__Ged_340_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedEditor *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TGedEditor((TCanvas*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TGedEditor[G__getaryconstruct()];
   else                    p=new TGedEditor;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->CloseWindow();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->ConnectToCanvas((TCanvas*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->DeleteEditors();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->DisconnectEditors((TCanvas*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedEditor*)(G__getstructoffset()))->GetCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGedEditor*)(G__getstructoffset()))->IsGlobal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->Hide();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->SetCanvas((TCanvas*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->SetGlobal((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->Show();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->RecursiveRemove((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_340_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_340_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedEditor(*(TGedEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedEditor G__TTGedEditor;
static int G__G__Ged_340_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedEditor *)((G__getstructoffset())+sizeof(TGedEditor)*i);
   else  delete (TGedEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TH1Editor */
static int G__G__Ged_342_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TH1Editor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TH1Editor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TH1Editor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TH1Editor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TH1Editor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TH1Editor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TH1Editor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoTitle((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoAddMarker((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoAddBar((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoAddB((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoAddSimple((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoHistSimple();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoHistComplex();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoHistChanges();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoBarOffset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoBarWidth();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoPercent();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoHBar((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoSliderMoved();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoSliderPressed();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoSliderReleased();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoAxisRange();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoBinMoved((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoBinReleased();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoBinPressed();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoBinLabel();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoBinReleased1();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoBinMoved1();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoBinLabel1();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoOffsetMoved((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoOffsetReleased();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoOffsetPressed();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoBinOffset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoApply();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->DoCancel();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->PaintBox3D((Float_t*)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]),(Float_t*)G__int(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TH1Editor*)(G__getstructoffset()))->Dividers((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TH1Editor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TH1Editor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TH1Editor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TH1Editor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TH1Editor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TH1Editor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TH1Editor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TH1Editor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TH1Editor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_342_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TH1Editor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_342_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TH1Editor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TH1Editor(*(TH1Editor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TH1Editor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TH1Editor G__TTH1Editor;
static int G__G__Ged_342_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TH1Editor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TH1Editor *)((G__getstructoffset())+sizeof(TH1Editor)*i);
   else  delete (TH1Editor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArrowEditor */
static int G__G__Ged_344_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TArrowEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TArrowEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TArrowEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TArrowEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TArrowEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TArrowEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TArrowEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArrowEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArrowEditor*)(G__getstructoffset()))->DoAngle();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArrowEditor*)(G__getstructoffset()))->DoOption((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArrowEditor*)(G__getstructoffset()))->DoSize();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArrowEditor*)(G__getstructoffset()))->DoStartPoint();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArrowEditor*)(G__getstructoffset()))->DoEndPoint();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TArrowEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArrowEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TArrowEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TArrowEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TArrowEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArrowEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArrowEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArrowEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArrowEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TArrowEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArrowEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_344_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TArrowEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_344_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TArrowEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TArrowEditor(*(TArrowEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TArrowEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArrowEditor G__TTArrowEditor;
static int G__G__Ged_344_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TArrowEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TArrowEditor *)((G__getstructoffset())+sizeof(TArrowEditor)*i);
   else  delete (TArrowEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGedToolBox */
static int G__G__Ged_348_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGedToolBox *p=NULL;
   switch(libp->paran) {
   case 5:
      p = new TGedToolBox(
(const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])
,(Pixel_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TGedToolBox(
(const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TGedToolBox(
(const TGWindow*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedToolBox);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGedToolBox*)(G__getstructoffset()))->ProcessMessage((Long_t)G__int(libp->para[0]),(Long_t)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedToolBox*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGedToolBox::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedToolBox::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGedToolBox::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGedToolBox::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGedToolBox*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedToolBox*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedToolBox*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGedToolBox*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedToolBox::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedToolBox::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGedToolBox::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_348_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGedToolBox::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_348_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGedToolBox *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGedToolBox(*(TGedToolBox*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TGedToolBox);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGedToolBox G__TTGedToolBox;
static int G__G__Ged_348_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGedToolBox *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGedToolBox *)((G__getstructoffset())+sizeof(TGedToolBox)*i);
   else  delete (TGedToolBox *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPadEditor */
static int G__G__Ged_349_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPadEditor *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TPadEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(Pixel_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TPadEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TPadEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TPadEditor(
(const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TPadEditor((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TPadEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->SetModel((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoEditable((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoCrosshair((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoFixedAspectRatio((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoGridX((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoGridY((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoLogX((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoLogY((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoLogZ((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoTickX((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoTickY((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoBorderMode();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->DoBorderSize((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPadEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPadEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPadEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPadEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPadEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPadEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPadEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPadEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPadEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Ged_349_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPadEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Ged_349_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TPadEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TPadEditor(*(TPadEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GedLN_TPadEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPadEditor G__TTPadEditor;
static int G__G__Ged_349_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPadEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPadEditor *)((G__getstructoffset())+sizeof(TPadEditor)*i);
   else  delete (TPadEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TGedFrame */

/* TGedElement */

/* TGedNameFrame */

/* TGedPatternSelect */

/* TAttFillEditor */

/* TGedPopup */

/* TGedPatternFrame */

/* TGedPatternSelector */

/* TGedPatternPopup */

/* TGedSelect */

/* TGedMarkerPopup */

/* TGedMarkerSelect */

/* TGraphEditor */

/* TH2Editor */

/* TAttLineEditor */

/* TAxisEditor */

/* TAttMarkerEditor */

/* TPaveStatsEditor */

/* TFrameEditor */

/* TCurlyArcEditor */

/* TAttTextEditor */

/* TCurlyLineEditor */

/* TGedEditor */

/* TH1Editor */

/* TArrowEditor */

/* TGedToolBox */

/* TPadEditor */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Ged {
 public:
  G__Sizep2memfuncG__Ged() {p=&G__Sizep2memfuncG__Ged::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Ged::*p)();
};

size_t G__get_sizep2memfuncG__Ged()
{
  G__Sizep2memfuncG__Ged a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Ged() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedFrame))) {
     TGedFrame *G__Lderived;
     G__Lderived=(TGedFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedFrame),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedFrame),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedFrame),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedFrame),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedFrame),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedFrame),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedFrame),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedElement))) {
     TGedElement *G__Lderived;
     G__Lderived=(TGedElement*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedElement),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame))) {
     TGedNameFrame *G__Lderived;
     G__Lderived=(TGedNameFrame*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect))) {
     TGedPatternSelect *G__Lderived;
     G__Lderived=(TGedPatternSelect*)0x1000;
     {
       TGedSelect *G__Lpbase=(TGedSelect*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),G__get_linked_tagnum(&G__G__GedLN_TGedSelect),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCheckButton *G__Lpbase=(TGCheckButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGTextButton *G__Lpbase=(TGTextButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),G__get_linked_tagnum(&G__G__GedLN_TGTextButton),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGButton *G__Lpbase=(TGButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),G__get_linked_tagnum(&G__G__GedLN_TGButton),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor))) {
     TAttFillEditor *G__Lderived;
     G__Lderived=(TAttFillEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGButton))) {
     TGButton *G__Lderived;
     G__Lderived=(TGButton*)0x1000;
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGButton),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGButton),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGButton),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGButton),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGButton),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGButton),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGTextButton))) {
     TGTextButton *G__Lderived;
     G__Lderived=(TGTextButton*)0x1000;
     {
       TGButton *G__Lpbase=(TGButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGTextButton),G__get_linked_tagnum(&G__G__GedLN_TGButton),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGTextButton),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGTextButton),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGTextButton),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGTextButton),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGTextButton),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGTextButton),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGCheckButton))) {
     TGCheckButton *G__Lderived;
     G__Lderived=(TGCheckButton*)0x1000;
     {
       TGTextButton *G__Lpbase=(TGTextButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),G__get_linked_tagnum(&G__G__GedLN_TGTextButton),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGButton *G__Lpbase=(TGButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),G__get_linked_tagnum(&G__G__GedLN_TGButton),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedPopup))) {
     TGedPopup *G__Lderived;
     G__Lderived=(TGedPopup*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPopup),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPopup),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPopup),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPopup),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPopup),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPopup),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame))) {
     TGedPatternFrame *G__Lderived;
     G__Lderived=(TGedPatternFrame*)0x1000;
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector))) {
     TGedPatternSelector *G__Lderived;
     G__Lderived=(TGedPatternSelector*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup))) {
     TGedPatternPopup *G__Lderived;
     G__Lderived=(TGedPatternPopup*)0x1000;
     {
       TGedPopup *G__Lpbase=(TGedPopup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup),G__get_linked_tagnum(&G__G__GedLN_TGedPopup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedSelect))) {
     TGedSelect *G__Lderived;
     G__Lderived=(TGedSelect*)0x1000;
     {
       TGCheckButton *G__Lpbase=(TGCheckButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect),G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGTextButton *G__Lpbase=(TGTextButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect),G__get_linked_tagnum(&G__G__GedLN_TGTextButton),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGButton *G__Lpbase=(TGButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect),G__get_linked_tagnum(&G__G__GedLN_TGButton),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup))) {
     TGedMarkerPopup *G__Lderived;
     G__Lderived=(TGedMarkerPopup*)0x1000;
     {
       TGedPopup *G__Lpbase=(TGedPopup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup),G__get_linked_tagnum(&G__G__GedLN_TGedPopup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect))) {
     TGedMarkerSelect *G__Lderived;
     G__Lderived=(TGedMarkerSelect*)0x1000;
     {
       TGedSelect *G__Lpbase=(TGedSelect*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),G__get_linked_tagnum(&G__G__GedLN_TGedSelect),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCheckButton *G__Lpbase=(TGCheckButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGTextButton *G__Lpbase=(TGTextButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),G__get_linked_tagnum(&G__G__GedLN_TGTextButton),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGButton *G__Lpbase=(TGButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),G__get_linked_tagnum(&G__G__GedLN_TGButton),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor))) {
     TGraphEditor *G__Lderived;
     G__Lderived=(TGraphEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TH2Editor))) {
     TH2Editor *G__Lderived;
     G__Lderived=(TH2Editor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH2Editor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH2Editor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH2Editor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH2Editor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH2Editor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH2Editor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH2Editor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH2Editor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor))) {
     TAttLineEditor *G__Lderived;
     G__Lderived=(TAttLineEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor))) {
     TAxisEditor *G__Lderived;
     G__Lderived=(TAxisEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor))) {
     TAttMarkerEditor *G__Lderived;
     G__Lderived=(TAttMarkerEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor))) {
     TPaveStatsEditor *G__Lderived;
     G__Lderived=(TPaveStatsEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor))) {
     TFrameEditor *G__Lderived;
     G__Lderived=(TFrameEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor))) {
     TCurlyArcEditor *G__Lderived;
     G__Lderived=(TCurlyArcEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor))) {
     TAttTextEditor *G__Lderived;
     G__Lderived=(TAttTextEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor))) {
     TCurlyLineEditor *G__Lderived;
     G__Lderived=(TCurlyLineEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedEditor))) {
     TGedEditor *G__Lderived;
     G__Lderived=(TGedEditor*)0x1000;
     {
       TVirtualPadEditor *G__Lpbase=(TVirtualPadEditor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedEditor),G__get_linked_tagnum(&G__G__GedLN_TVirtualPadEditor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedEditor),G__get_linked_tagnum(&G__G__GedLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TH1Editor))) {
     TH1Editor *G__Lderived;
     G__Lderived=(TH1Editor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH1Editor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH1Editor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH1Editor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH1Editor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH1Editor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH1Editor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH1Editor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TH1Editor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor))) {
     TArrowEditor *G__Lderived;
     G__Lderived=(TArrowEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TGedToolBox))) {
     TGedToolBox *G__Lderived;
     G__Lderived=(TGedToolBox*)0x1000;
     {
       TGToolBar *G__Lpbase=(TGToolBar*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedToolBox),G__get_linked_tagnum(&G__G__GedLN_TGToolBar),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedToolBox),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedToolBox),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedToolBox),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedToolBox),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedToolBox),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TGedToolBox),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GedLN_TPadEditor))) {
     TPadEditor *G__Lderived;
     G__Lderived=(TPadEditor*)0x1000;
     {
       TGedFrame *G__Lpbase=(TGedFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPadEditor),G__get_linked_tagnum(&G__G__GedLN_TGedFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPadEditor),G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPadEditor),G__get_linked_tagnum(&G__G__GedLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPadEditor),G__get_linked_tagnum(&G__G__GedLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPadEditor),G__get_linked_tagnum(&G__G__GedLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPadEditor),G__get_linked_tagnum(&G__G__GedLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPadEditor),G__get_linked_tagnum(&G__G__GedLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GedLN_TPadEditor),G__get_linked_tagnum(&G__G__GedLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Ged() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__GedLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GedLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GedLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GedLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GedLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("Pixel_t",107,-1,0,
-1);
   G__setnewtype(-1,"Pixel value",0);
   G__search_typename2("Style_t",115,-1,0,
-1);
   G__setnewtype(-1,"Style number (short)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TGedFrame */
static void G__setup_memvarTGedFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedFrame));
   { TGedFrame *p; p=(TGedFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TObject),-1,-1,2,"fModel=",0,"selected object, if exists");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TVirtualPad),-1,-1,2,"fPad=",0,"selected pad, if exists");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fInit=",0,"init flag for setting signals/slots");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTab),-1,-1,2,"fTab=",0,"Pointer to the parent tab          ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedElement */
static void G__setup_memvarTGedElement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedElement));
   { TGedElement *p; p=(TGedElement*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fGedFrame)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGedFrame),-1,-1,1,"fGedFrame=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCanvas)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__GedLN_TObject),-1,-1,1,"fCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedNameFrame */
static void G__setup_memvarTGedNameFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame));
   { TGedNameFrame *p; p=(TGedNameFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGLabel),-1,-1,2,"fLabel=",0,"label of attribute frame");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedPatternSelect */
static void G__setup_memvarTGedPatternSelect(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect));
   { TGedPatternSelect *p; p=(TGedPatternSelect*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,115,0,0,-1,G__defined_typename("Style_t"),-1,2,"fPattern=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAttFillEditor */
static void G__setup_memvarTAttFillEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor));
   { TAttFillEditor *p; p=(TAttFillEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TAttFill),-1,-1,2,"fAttFill=",0,"fill attribute object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGColorSelect),-1,-1,2,"fColorSelect=",0,"fill color widget");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),-1,-1,2,"fPatternSelect=",0,"fill pattern widget");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedPopup */
static void G__setup_memvarTGedPopup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPopup));
   { TGedPopup *p; p=(TGedPopup*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__GedLN_TGWindow),-1,-1,2,"fMsgWindow=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedPatternFrame */
static void G__setup_memvarTGedPatternFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame));
   { TGedPatternFrame *p; p=(TGedPatternFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__GedLN_TGWindow),-1,-1,2,"fMsgWindow=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fActive=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,115,0,0,-1,G__defined_typename("Style_t"),-1,2,"fPattern=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGGC),-1,-2,2,"fgGC=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGToolTip),-1,-1,2,"fTip=",0,"tool tip associated with a button");
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,2,"fTipText[5]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedPatternSelector */
static void G__setup_memvarTGedPatternSelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector));
   { TGedPatternSelector *p; p=(TGedPatternSelector*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fActive=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__GedLN_TGWindow),-1,-1,2,"fMsgWindow=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame),-1,-1,2,"fCe[27]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedPatternPopup */
static void G__setup_memvarTGedPatternPopup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup));
   { TGedPatternPopup *p; p=(TGedPatternPopup*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,115,0,0,-1,G__defined_typename("Style_t"),-1,2,"fCurrentPattern=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedSelect */
static void G__setup_memvarTGedSelect(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect));
   { TGedSelect *p; p=(TGedSelect*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGGC),-1,-1,2,"fDrawGC=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGedPopup),-1,-1,2,"fPopup=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedMarkerPopup */
static void G__setup_memvarTGedMarkerPopup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup));
   { TGedMarkerPopup *p; p=(TGedMarkerPopup*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,115,0,0,-1,G__defined_typename("Style_t"),-1,2,"fCurrentStyle=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedMarkerSelect */
static void G__setup_memvarTGedMarkerSelect(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect));
   { TGedMarkerSelect *p; p=(TGedMarkerSelect*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,115,0,0,-1,G__defined_typename("Style_t"),-1,2,"fMarkerStyle=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__GedLN_TGPicture),-1,-1,2,"fPicture=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGraphEditor */
static void G__setup_memvarTGraphEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor));
   { TGraphEditor *p; p=(TGraphEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,2,"fDrawShape=",0,"Shape of the Graph (simple, smooth, bar)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTextEntry),-1,-1,2,"fTitle=",0,"Contains the title of the graph");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTitlePrec=",0,"font precision level");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGraph),-1,-1,2,"fGraph=",0,"Graph object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGButtonGroup),-1,-1,2,"fgr=",0,"Group the Radiobuttons:");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fShape=",0,"just draw unconnected points");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fShape0=",0,"set smooth graph curve");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fShape1=",0,"set simple poly-line between every graph point");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fShape2=",0,"set graph draw mode to bar chart");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fShape3=",0,"set graph draw mode to fill area");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fMarkerOnOff=",0,"set Marker visible/unvisible   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TH2Editor */
static void G__setup_memvarTH2Editor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TH2Editor));
   { TH2Editor *p; p=(TH2Editor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TH2),-1,-1,2,"fHist=",0,"histogram object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTab),-1,-1,2,"fTab=",0,"Pointer to the Tab Parent");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fBin=",0,"Contains the Binning Widgets");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fFit=",0,"Contains the Fitting Widgets");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fBinContainer=",0,"Container for fBin");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTextEntry),-1,-1,2,"fTitle=",0,"histogram title input field");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fTypeCombo=",0,"histogram type combo box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fCoordsCombo=",0,"Coordinate System combo box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fContCombo=",0,"Contour selecting combo box ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGLabel),-1,-1,2,"fColContLbl=",0,"No. of Contours Label 1");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGLabel),-1,-1,2,"fColContLbl1=",0,"No. of Contours Label 2   ");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTitlePrec=",0,"font precision level");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGHButtonGroup),-1,-1,2,"fDimGroup=",0,"Radiobuttongroup to change 2D <-> 3D-Plot");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fDim=",0,"2D-Plot RadioButton");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fDim0=",0,"3D-Plot RadioButton");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f3=",0,"Frame that contains Histogram Type-ComboBox");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f4=",0,"Frame that contains Histogram Coord-ComboBox");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f5=",0,"Frame that contains Histogram Contour-ComboBox");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f6=",0,"Frame that contains the 2D CheckBox DrawOptions");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f9=",0,"Frame that contains the 3D CheckBox DrawOptions   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f12=",0,"Frame that contains the Bar-Title");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f13=",0,"Frame that contains the Bar Width/Offset NumberEntries");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f16=",0,"Frame that contains the ColorLevel NumberEnrtry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f19=",0,"Frame that contains the ColorLevel NumberEnrtry   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f38=",0,"Frame that contains the Frame Fill widgets");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddError=",0,"CheckBox connected to error bars");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddPalette=",0,"CheckBox connected to Z option (2D)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddPalette1=",0,"CheckBox connected to Z option (3D) ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddArr=",0,"CheckBox connected to Arr-Option ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddBox=",0,"CheckBox connected to Box-Option");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddScat=",0,"CheckBox connected to Scat-Option");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddCol=",0,"CheckBox connected to Col-Option  ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddFB=",0,"Draw front box (or not)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddBB=",0,"Draw back box (or not)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddText=",0,"Draw bin contents as text");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fContLevels=",0,"Set number of contour levels");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fContLevels1=",0,"Set number of contour levels   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fBarWidth=",0,"Set bar width of histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fBarOffset=",0,"Set bar offset of histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fBinXCont=",0,"Contains the rebin widgets for case 1");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGHSlider),-1,-1,2,"fBinXSlider=",0,"Slider to set rebinning x integer value ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fBinXNumberEntry=",0,"Label which shows the rebinned bin number");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGHSlider),-1,-1,2,"fBinYSlider=",0,"Slider to set rebinning y integer value ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fBinYNumberEntry=",0,"Label which shows the rebinned bin number");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTextButton),-1,-1,2,"fApply=",0,"Apply-Button to accept the rebinned histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTextButton),-1,-1,2,"fCancel=",0,"Cancel-Button to reprobate the rebinned histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fBinXCont1=",0,"Contains the X Rebin Widgets for case 2 ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGHSlider),-1,-1,2,"fBinXSlider1=",0,"Slider to set x rebinning integer value ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fBinXNumberEntry1=",0,"Label which shows the rebinned x bin number");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fXOffsetNumberEntry=",0,"Shows the offset to the x origin of the histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGHSlider),-1,-1,2,"fXBinOffsetSld=",0,"Add an x-offset to the origin of the histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fBinYCont1=",0,"Contains the Y Rebin Widgets for case 2 ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGHSlider),-1,-1,2,"fBinYSlider1=",0,"Slider to set y rebinning integer value ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fBinYNumberEntry1=",0,"Label which shows the rebinned y bin number");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fYOffsetNumberEntry=",0,"Shows the offset to the y origin of the histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGHSlider),-1,-1,2,"fYBinOffsetSld=",0,"Add an y-offset to the origin of the histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGDoubleHSlider),-1,-1,2,"fSliderX=",0,"Slider to set x-axis range");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fSldXMin=",0,"Contains the minimum value of the x-Axis");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fSldXMax=",0,"Contains the maximum value of the x-Axis  ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGDoubleHSlider),-1,-1,2,"fSliderY=",0,"Slider to set y-axis range   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fSldYMin=",0,"Contains the minimum value of the y-Axis");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fSldYMax=",0,"Contains the maximum value of the y-Axis  ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fDelaydraw=",0,"Delayed drawing of the new axis range");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGColorSelect),-1,-1,2,"fFrameColor=",0,"Select the Frame Color");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),-1,-1,2,"fFramePattern=",0,"Select the Frame Pattern Style");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPx1old=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPy1old=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPx2old=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPy2old=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP1oldx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP2oldx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP3oldx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP4oldx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP5oldx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP6oldx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP7oldx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP8oldx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP1oldy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP2oldy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP3oldy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP4oldy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP5oldy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP6oldy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP7oldy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP8oldy[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TH2),-1,-1,4,"fBinHist=",0,"Cloned histogram for rebin");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fOldXOffset=",0,"saves the old x offset of the histogram");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fOldYOffset=",0,"saves the old y offset of the histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAttLineEditor */
static void G__setup_memvarTAttLineEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor));
   { TAttLineEditor *p; p=(TAttLineEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TAttLine),-1,-1,2,"fAttLine=",0,"line attribute object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGLineStyleComboBox),-1,-1,2,"fStyleCombo=",0,"line style combo box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGLineWidthComboBox),-1,-1,2,"fWidthCombo=",0,"line width combo box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGColorSelect),-1,-1,2,"fColorSelect=",0,"line color widget");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAxisEditor */
static void G__setup_memvarTAxisEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor));
   { TAxisEditor *p; p=(TAxisEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TAxis),-1,-1,2,"fAxis=",0,"axis object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGColorSelect),-1,-1,2,"fAxisColor=",0,"color selection widget");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fLogAxis=",0,"logarithmic check box    ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fTickLength=",0,"tick length number entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fDiv1=",0,"primary axis division number entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fDiv2=",0,"secondary axis division number entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fDiv3=",0,"tertiary axis division number entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fOptimize=",0,"tick optimization check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fTicksBoth=",0,"check box setting ticks on both axis sides");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fMoreLog=",0,"more logarithmic labels check box");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTicksFlag=",0,"positive/negative ticks' flag");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTextEntry),-1,-1,2,"fTitle=",0,"axis title input field");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGColorSelect),-1,-1,2,"fTitleColor=",0,"color selection widget");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGFontTypeComboBox),-1,-1,2,"fTitleFont=",0,"title font combo box");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTitlePrec=",0,"font precision level");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fTitleSize=",0,"title size number entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fTitleOffset=",0,"title offset number entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fCentered=",0,"check button for centered title");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fRotated=",0,"check button for rotated title");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGColorSelect),-1,-1,2,"fLabelColor=",0,"color selection widget");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGFontTypeComboBox),-1,-1,2,"fLabelFont=",0,"label font combo box");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLabelPrec=",0,"font precision level");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fLabelSize=",0,"label size number entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fLabelOffset=",0,"label offset number entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fNoExponent=",0,"check box for No exponent choice");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fDecimal=",0,"decimal part check box    ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAttMarkerEditor */
static void G__setup_memvarTAttMarkerEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor));
   { TAttMarkerEditor *p; p=(TAttMarkerEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TAttMarker),-1,-1,2,"fAttMarker=",0,"marker attribute object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGFontTypeComboBox),-1,-1,2,"fTypeCombo=",0,"font style combo box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fSizeCombo=",0,"font size combo box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGColorSelect),-1,-1,2,"fColorSelect=",0,"color selection widget");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),-1,-1,2,"fMarkerSelect=",0,"marker selection widget");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPaveStatsEditor */
static void G__setup_memvarTPaveStatsEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor));
   { TPaveStatsEditor *p; p=(TPaveStatsEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TPaveStats),-1,-1,2,"fPaveStats=",0,"TPaveStats object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fHistoName=",0,"histo name check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fEntries=",0,"entries' number check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fMean=",0,"mean value check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fRMS=",0,"RMS check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fUnderflow=",0,"underflow number check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fOverflow=",0,"overflow number check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fIntegral=",0,"integral of bins check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fNameValues=",0,"parameters' name/values check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fErrors=",0,"error check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fChisquare=",0,"Chisquare check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fProbability=",0,"probability check box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFrameEditor */
static void G__setup_memvarTFrameEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor));
   { TFrameEditor *p; p=(TFrameEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TFrame),-1,-1,2,"fFrame=",0,"TFrame object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fBmode=",0,"set sinken frame border mode");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fBmode0=",0,"set no border");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fBmode1=",0,"set raised frame border mode");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGLineWidthComboBox),-1,-1,2,"fBsize=",0,"set frame border size");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fInit=",0,"init flag ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f3=",0,"container frame;  ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCurlyArcEditor */
static void G__setup_memvarTCurlyArcEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor));
   { TCurlyArcEditor *p; p=(TCurlyArcEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TCurlyArc),-1,-1,2,"fCurlyArc=",0,"CurlyArc object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fRadiusEntry=",0,"radius entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fPhiminEntry=",0,"Phimin entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fPhimaxEntry=",0,"Phimax entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fCenterXEntry=",0,"center x entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fCenterYEntry=",0,"center y entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAttTextEditor */
static void G__setup_memvarTAttTextEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor));
   { TAttTextEditor *p; p=(TAttTextEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TAttText),-1,-1,2,"fAttText=",0,"text attribute object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGFontTypeComboBox),-1,-1,2,"fTypeCombo=",0,"font style combo box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fSizeCombo=",0,"font size combo box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fAlignCombo=",0,"font aligh combo box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGColorSelect),-1,-1,2,"fColorSelect=",0,"color selection widget");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCurlyLineEditor */
static void G__setup_memvarTCurlyLineEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor));
   { TCurlyLineEditor *p; p=(TCurlyLineEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TCurlyLine),-1,-1,2,"fCurlyLine=",0,"CurlyLineobject");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fStartXEntry=",0,"start  x entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fEndXEntry=",0,"end  x entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fStartYEntry=",0,"start  y entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fEndYEntry=",0,"end  y entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fAmplitudeEntry=",0,"ampl entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fWaveLengthEntry=",0,"wavelength entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fIsWavy=",0,"toggle wavy / curly");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fStartXFrame=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fStartYFrame=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fEndXFrame=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fEndYFrame=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedEditor */
static void G__setup_memvarTGedEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedEditor));
   { TGedEditor *p; p=(TGedEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCanvas),-1,-1,2,"fCan=",0,"provides scroll bars");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTab),-1,-1,2,"fTab=",0,"tab widget holding the editor");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fTabContainer=",0,"main tab container");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fStyle=",0,"style tab container frame");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TObject),-1,-1,2,"fModel=",0,"selected object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TVirtualPad),-1,-1,2,"fPad=",0,"selected pad");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TCanvas),-1,-1,2,"fCanvas=",0,"canvas related to the editor");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-1,2,"fClass=",0,"class of the selected object");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWid=",0,"widget id ");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fGlobal=",0,"true if editor is global");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TH1Editor */
static void G__setup_memvarTH1Editor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TH1Editor));
   { TH1Editor *p; p=(TH1Editor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TH1),-1,-1,2,"fHist=",0,"histogram object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTab),-1,-1,2,"fTab=",0,"Pointer to the Tab Parent");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fBin=",0,"Contains the Binning Widgets");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fFit=",0,"Contains the Fitting Widgets");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fStyle=",0,"Contains the Style Widgets  ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fBinContainer=",0,"Container for fBin");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fFitContainer=",0,"Container for fFit");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTitlePrec=",0,"font precision level");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTextEntry),-1,-1,2,"fTitle=",0,"histogram title input field");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGHButtonGroup),-1,-1,2,"fDimGroup=",0,"Radiobuttongroup to change 2D <-> 3D-Plot");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fDim=",0,"2D-Plot RadioButton             ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fDim0=",0,"3D-Plot RadioButton    ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fTypeCombo=",0,"histogram type combo box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fCoordsCombo=",0,"Coordinate System combo box   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fErrorCombo=",0,"Error combo box   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fHistOnOff=",0,"Draw a simple histogram with default options ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddMarker=",0,"Draw a Marker on top of each bin");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddB=",0,"Draw a Bar Chart   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddBar=",0,"Bar Option");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAdd=",0,"Activate more Options");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fMakeHBar=",0,"Draw Horizontal Bar Chart");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fAddSimple=",0,"Draw a simple histogram  (==HIST draw option)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fBarWidth=",0,"Change the Bar Width ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fBarOffset=",0,"Change the Bar Offset    ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fAddCombo=",0,"Add Lines, Bars, Fill");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fPercentCombo=",0,"Percentage of the Bar which is drawn in a different color");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f3=",0,"Contains Histogram Type");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f4=",0,"Contains Histogram Coordinate Type");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f6=",0,"Contains the Add-ComboBox (Style)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f7=",0,"Contains the Marker OnOff CheckBox");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f8=",0,"Contains the Bar Chart CheckBox");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f9=",0,"Contains the Bar Option CheckBox");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f10=",0,"Contains the Bar Option Title   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f11=",0,"Contains the Bar Width/Offset NumberEntries    ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f12=",0,"Contains fPercentCombo, fMakeHBar");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f15=",0,"Contains outer line CheckBox   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fBinCont=",0,"Contains the Rebin Widgets for case 1         ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"fBinCont1=",0,"Contains the Rebin Widgets for case 2            ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGHSlider),-1,-1,2,"fBinSlider=",0,"Slider to set rebinning integer value ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGHSlider),-1,-1,2,"fBinSlider1=",0,"Slider to set rebinning integer value for ntuple histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fBinNumberEntry=",0,"Label which shows the rebinned bin number   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fBinNumberEntry1=",0,"Label which shows the rebinned bin number for ntuple histogram      ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGHSlider),-1,-1,2,"fBinOffsetSld=",0,"Add an offset to the origin of the histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fOffsetNumberEntry=",0,"Shows the offset to the origin of the histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGDoubleHSlider),-1,-1,2,"fSlider=",0,"Slider to set x-axis range");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fSldMin=",0,"Contains the minimum value of the x-Axis");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField),-1,-1,2,"fSldMax=",0,"Contains the maximum value of the x-Axis  ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fDelaydraw=",0,"Delayed drawing of the new axis range");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTextButton),-1,-1,2,"fApply=",0,"Apply-Button to accept the rebinned histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGTextButton),-1,-1,2,"fCancel=",0,"Cancel-Button to reprobate the rebinned histogram");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMake=",0,"Veto Variable");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMakeB=",0,"avoid execution of Bar Slots");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPx1old=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPy1old=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPx2old=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPy2old=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP1NDCold[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP2NDCold[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP3NDCold[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP4NDCold[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP1old[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP2old[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP3old[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP4old[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP5old[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP6old[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP7old[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP8old[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TH1),-1,-1,4,"fBinHist=",0,"Cloned histogram for rebin");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fOldOffset=",0,"save the old offset of the histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArrowEditor */
static void G__setup_memvarTArrowEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor));
   { TArrowEditor *p; p=(TArrowEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TArrow),-1,-1,2,"fArrow=",0,"arrow object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,-1,2,"fOptionCombo=",0,"arrow shapes combo box");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fAngleEntry=",0,"opening angle entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fSizeEntry=",0,"size entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fStartPointXEntry=",0,"start point x entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fEndPointXEntry=",0,"end point x entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fStartPointYEntry=",0,"start point y entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry),-1,-1,2,"fEndPointYEntry=",0,"end point y entry");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGedToolBox */
static void G__setup_memvarTGedToolBox(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TGedToolBox));
   { TGedToolBox *p; p=(TGedToolBox*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPadEditor */
static void G__setup_memvarTPadEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GedLN_TPadEditor));
   { TPadEditor *p; p=(TPadEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TPad),-1,-1,2,"fPadPointer=",0,"TPad object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fEditable=",0,"set pad editable");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fCrosshair=",0,"set crosshair   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fFixedAR=",0,"set fixed aspect ratio");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fGridX=",0,"set grid on X");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fGridY=",0,"set grid on Y");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fLogX=",0,"set log scale on X");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fLogY=",0,"set log scale on Y");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fLogZ=",0,"set log scale on Z");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fTickX=",0,"set ticks on X");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCheckButton),-1,-1,2,"fTickY=",0,"set ticks on Y");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fBmode=",0,"set sinken pad border mode");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fBmode0=",0,"set no pad border");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGRadioButton),-1,-1,2,"fBmode1=",0,"set raised pad border mode");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGLineWidthComboBox),-1,-1,2,"fBsize=",0,"set pad border size");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fInit=",0,"init flag ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame),-1,-1,2,"f7=",0,"container frame;  ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Ged() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTGedFrame(void) {
   /* TGedFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedFrame));
   G__memfunc_setup("MakeTitle",896,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"C - - 10 - title",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetModel",785,G__G__Ged_251_3_0,85,G__get_linked_tagnum(&G__G__GedLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPad",565,G__G__Ged_251_4_0,85,G__get_linked_tagnum(&G__G__GedLN_TVirtualPad),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDrawOption",1319,G__G__Ged_251_5_0,67,-1,G__defined_typename("Option_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RecursiveRemove",1574,G__G__Ged_251_6_0,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Refresh",719,G__G__Ged_251_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetActive",904,G__G__Ged_251_8_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE active",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDrawOption",1331,G__G__Ged_251_9_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetModel",797,G__G__Ged_251_0_1,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Update",611,G__G__Ged_251_1_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_251_2_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedFrame::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_251_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedFrame::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_251_4_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedFrame::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_251_5_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedFrame::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_251_6_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_251_7_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_251_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_251_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_251_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedFrame::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_251_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedFrame::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_251_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedFrame::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_251_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedFrame::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGedFrame",973,G__G__Ged_251_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedElement(void) {
   /* TGedElement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedElement));
   G__memfunc_setup("Class",502,G__G__Ged_252_1_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedElement::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_252_2_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedElement::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_252_3_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedElement::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_252_4_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedElement::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_252_5_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_252_6_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_252_7_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_252_8_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_252_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedElement::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_252_0_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedElement::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_252_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedElement::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_252_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedElement::DeclFileLine),0);
   // automatic default constructor
   G__memfunc_setup("TGedElement",1070,G__G__Ged_252_3_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedElement),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TGedElement",1070,G__G__Ged_252_4_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedElement),-1,0,1,1,1,0,"u 'TGedElement' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedElement",1196,G__G__Ged_252_5_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Ged_252_6_1,(int)('u'),G__get_linked_tagnum(&G__G__GedLN_TGedElement),-1,1,1,1,1,0,"u 'TGedElement' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedNameFrame(void) {
   /* TGedNameFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame));
   G__memfunc_setup("TGedNameFrame",1232,G__G__Ged_253_1_0,105,G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_253_2_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_253_3_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedNameFrame::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_253_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedNameFrame::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_253_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedNameFrame::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_253_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedNameFrame::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_253_7_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_253_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_253_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_253_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_253_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedNameFrame::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_253_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedNameFrame::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_253_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedNameFrame::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_253_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedNameFrame::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGedNameFrame",1232,G__G__Ged_253_5_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame),-1,0,1,1,1,0,"u 'TGedNameFrame' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedNameFrame",1358,G__G__Ged_253_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedPatternSelect(void) {
   /* TGedPatternSelect */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect));
   G__memfunc_setup("DoRedraw",792,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TGedPatternSelect",1698,G__G__Ged_255_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),-1,0,3,1,1,0,
"U 'TGWindow' - 10 - p s - 'Style_t' 0 - pattern "
"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPattern",1034,G__G__Ged_255_3_0,121,-1,-1,0,1,1,1,0,"s - 'Style_t' 0 - pattern",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPattern",1022,G__G__Ged_255_4_0,115,-1,G__defined_typename("Style_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDefaultSize",1408,G__G__Ged_255_5_0,117,G__get_linked_tagnum(&G__G__GedLN_TGDimension),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PatternSelected",1543,G__G__Ged_255_6_0,121,-1,-1,0,1,1,1,0,"s - 'Style_t' 0 0 pattern","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("ProcessMessage",1444,G__G__Ged_255_7_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Ged_255_8_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_255_9_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedPatternSelect::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_255_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternSelect::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_255_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedPatternSelect::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_255_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedPatternSelect::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_255_3_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_255_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_255_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_255_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_255_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternSelect::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_255_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedPatternSelect::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_255_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternSelect::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_255_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedPatternSelect::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGedPatternSelect",1698,G__G__Ged_255_1_2,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),-1,0,1,1,1,0,"u 'TGedPatternSelect' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedPatternSelect",1824,G__G__Ged_255_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAttFillEditor(void) {
   /* TAttFillEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor));
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TAttFillEditor",1387,G__G__Ged_256_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_256_3_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoFillColor",1081,G__G__Ged_256_4_0,121,-1,-1,0,1,1,1,0,"k - 'Pixel_t' 0 - color",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoFillPattern",1304,G__G__Ged_256_5_0,121,-1,-1,0,1,1,1,0,"s - 'Style_t' 0 - color",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_256_6_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAttFillEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_256_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttFillEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_256_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAttFillEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_256_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAttFillEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_256_0_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_256_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_256_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_256_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_256_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttFillEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_256_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttFillEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_256_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttFillEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_256_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttFillEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TAttFillEditor",1387,G__G__Ged_256_8_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor),-1,0,1,1,1,0,"u 'TAttFillEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TAttFillEditor",1513,G__G__Ged_256_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedPopup(void) {
   /* TGedPopup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPopup));
   G__memfunc_setup("TGedPopup",888,G__G__Ged_266_1_0,105,G__get_linked_tagnum(&G__G__GedLN_TGedPopup),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p U 'TGWindow' - 10 - m "
"h - 'UInt_t' 0 - w h - 'UInt_t' 0 - h "
"h - 'UInt_t' 0 0 options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleButton",1224,G__G__Ged_266_2_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ProcessMessage",1444,G__G__Ged_266_3_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PlacePopup",1017,G__G__Ged_266_4_0,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y "
"h - 'UInt_t' 0 - w h - 'UInt_t' 0 - h",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("EndPopup",811,G__G__Ged_266_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Ged_266_6_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedPopup::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_266_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPopup::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_266_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedPopup::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_266_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedPopup::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_266_0_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_266_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_266_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_266_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_266_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPopup::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_266_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedPopup::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_266_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPopup::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_266_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedPopup::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGedPopup",888,G__G__Ged_266_8_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedPopup),-1,0,1,1,1,0,"u 'TGedPopup' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedPopup",1014,G__G__Ged_266_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedPatternFrame(void) {
   /* TGedPatternFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame));
   G__memfunc_setup("DoRedraw",792,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TGedPatternFrame",1581,G__G__Ged_267_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame),-1,0,4,1,1,0,
"U 'TGWindow' - 10 - p s - 'Style_t' 0 - pattern "
"i - 'Int_t' 0 40 width i - 'Int_t' 0 20 height",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleButton",1224,G__G__Ged_267_3_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleCrossing",1428,G__G__Ged_267_4_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawBorder",1004,G__G__Ged_267_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetActive",904,G__G__Ged_267_6_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - in",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPattern",1022,G__G__Ged_267_7_0,115,-1,G__defined_typename("Style_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFillStyle",1220,G__G__Ged_267_8_0,121,-1,-1,0,2,3,1,0,
"U 'TGGC' - 0 - gc s - 'Style_t' 0 - fstyle","set fill style for given GC",(void*)(void (*)(TGGC*,Style_t))(&TGedPatternFrame::SetFillStyle),0);
   G__memfunc_setup("Class",502,G__G__Ged_267_9_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedPatternFrame::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_267_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternFrame::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_267_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedPatternFrame::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_267_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedPatternFrame::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_267_3_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_267_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_267_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_267_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_267_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternFrame::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_267_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedPatternFrame::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_267_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternFrame::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_267_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedPatternFrame::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGedPatternFrame",1581,G__G__Ged_267_1_2,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame),-1,0,1,1,1,0,"u 'TGedPatternFrame' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedPatternFrame",1707,G__G__Ged_267_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedPatternSelector(void) {
   /* TGedPatternSelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector));
   G__memfunc_setup("TGedPatternSelector",1923,G__G__Ged_268_1_0,105,G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector),-1,0,1,1,1,0,"U 'TGWindow' - 10 - p",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ProcessMessage",1444,G__G__Ged_268_2_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetActive",904,G__G__Ged_268_3_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - newat",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetActive",892,G__G__Ged_268_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Ged_268_5_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedPatternSelector::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_268_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternSelector::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_268_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedPatternSelector::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_268_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedPatternSelector::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_268_9_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_268_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_268_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_268_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_268_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternSelector::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_268_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedPatternSelector::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_268_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternSelector::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_268_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedPatternSelector::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGedPatternSelector",1923,G__G__Ged_268_7_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector),-1,0,1,1,1,0,"u 'TGedPatternSelector' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedPatternSelector",2049,G__G__Ged_268_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedPatternPopup(void) {
   /* TGedPatternPopup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup));
   G__memfunc_setup("TGedPatternPopup",1622,G__G__Ged_269_1_0,105,G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup),-1,0,3,1,1,0,
"U 'TGWindow' - 10 - p U 'TGWindow' - 10 - m "
"s - 'Style_t' 0 - pattern",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ProcessMessage",1444,G__G__Ged_269_2_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_269_3_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedPatternPopup::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_269_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternPopup::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_269_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedPatternPopup::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_269_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedPatternPopup::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_269_7_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_269_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_269_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_269_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_269_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternPopup::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_269_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedPatternPopup::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_269_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedPatternPopup::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_269_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedPatternPopup::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGedPatternPopup",1622,G__G__Ged_269_5_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup),-1,0,1,1,1,0,"u 'TGedPatternPopup' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedPatternPopup",1748,G__G__Ged_269_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedSelect(void) {
   /* TGedSelect */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect));
   G__memfunc_setup("DoRedraw",792,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawTriangle",1220,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"k - 'GContext_t' 0 - gc i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGedSelect",964,G__G__Ged_270_3_0,105,G__get_linked_tagnum(&G__G__GedLN_TGedSelect),-1,0,2,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleButton",1224,G__G__Ged_270_4_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Enable",583,G__G__Ged_270_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Disable",692,G__G__Ged_270_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPopup",832,G__G__Ged_270_7_0,121,-1,-1,0,1,1,1,0,"U 'TGedPopup' - 0 - p","popup will be deleted in destructor.",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_270_8_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedSelect::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_270_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedSelect::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_270_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedSelect::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_270_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedSelect::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_270_2_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_270_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_270_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_270_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_270_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedSelect::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_270_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedSelect::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_270_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedSelect::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_270_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedSelect::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGedSelect",964,G__G__Ged_270_0_2,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedSelect),-1,0,1,1,1,0,"u 'TGedSelect' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedSelect",1090,G__G__Ged_270_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedMarkerPopup(void) {
   /* TGedMarkerPopup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup));
   G__memfunc_setup("TGedMarkerPopup",1498,G__G__Ged_271_1_0,105,G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup),-1,0,3,1,1,0,
"U 'TGWindow' - 10 - p U 'TGWindow' - 10 - m "
"s - 'Style_t' 0 - markerStyle",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ProcessMessage",1444,G__G__Ged_271_2_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_271_3_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedMarkerPopup::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_271_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedMarkerPopup::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_271_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedMarkerPopup::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_271_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedMarkerPopup::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_271_7_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_271_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_271_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_271_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_271_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedMarkerPopup::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_271_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedMarkerPopup::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_271_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedMarkerPopup::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_271_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedMarkerPopup::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGedMarkerPopup",1498,G__G__Ged_271_5_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup),-1,0,1,1,1,0,"u 'TGedMarkerPopup' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedMarkerPopup",1624,G__G__Ged_271_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedMarkerSelect(void) {
   /* TGedMarkerSelect */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect));
   G__memfunc_setup("DoRedraw",792,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TGedMarkerSelect",1574,G__G__Ged_272_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),-1,0,3,1,1,0,
"U 'TGWindow' - 10 - p s - 'Style_t' 0 - markerStyle "
"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ProcessMessage",1444,G__G__Ged_272_3_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMarkerStyle",1439,G__G__Ged_272_4_0,121,-1,-1,0,1,1,1,0,"s - 'Style_t' 0 - pattern",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMarkerStyle",1427,G__G__Ged_272_5_0,115,-1,G__defined_typename("Style_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SavePrimitive",1352,G__G__Ged_272_6_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDefaultSize",1408,G__G__Ged_272_7_0,117,G__get_linked_tagnum(&G__G__GedLN_TGDimension),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MarkerSelected",1419,G__G__Ged_272_8_0,121,-1,-1,0,1,1,1,0,"s - 'Style_t' 0 0 marker","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_272_9_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedMarkerSelect::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_272_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedMarkerSelect::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_272_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedMarkerSelect::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_272_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedMarkerSelect::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_272_3_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_272_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_272_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_272_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_272_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedMarkerSelect::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_272_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedMarkerSelect::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_272_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedMarkerSelect::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_272_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedMarkerSelect::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGedMarkerSelect",1574,G__G__Ged_272_1_2,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),-1,0,1,1,1,0,"u 'TGedMarkerSelect' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedMarkerSelect",1700,G__G__Ged_272_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGraphEditor(void) {
   /* TGraphEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor));
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TGraphEditor",1197,G__G__Ged_298_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TGraphEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_298_3_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoShape",676,G__G__Ged_298_4_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoMarkerOnOff",1261,G__G__Ged_298_5_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTitle",693,G__G__Ged_298_6_0,121,-1,-1,0,1,1,1,0,"C - - 10 - text",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_298_7_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGraphEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_298_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGraphEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_298_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGraphEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_298_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGraphEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_298_1_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_298_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_298_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_298_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_298_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGraphEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_298_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGraphEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_298_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGraphEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_298_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGraphEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGraphEditor",1197,G__G__Ged_298_9_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGraphEditor),-1,0,1,1,1,0,"u 'TGraphEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGraphEditor",1323,G__G__Ged_298_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTH2Editor(void) {
   /* TH2Editor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TH2Editor));
   G__memfunc_setup("BuildHistTypeComboBox",2115,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,3,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BuildHistCoordsComboBox",2315,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,3,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BuildHistContComboBox",2101,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,3,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintBox3D",924,(G__InterfaceMethod)NULL,121,-1,-1,0,4,1,4,0,
"F - 'Float_t' 0 - p1 F - 'Float_t' 0 - p2 "
"F - 'Float_t' 0 - p3 F - 'Float_t' 0 - p4",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHistTypeLabel",1594,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GedLN_TString),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHistCoordsLabel",1794,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GedLN_TString),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHistContLabel",1580,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GedLN_TString),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHistAdditiveLabel",1986,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GedLN_TString),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TH2Editor",821,G__G__Ged_314_0_1,105,G__get_linked_tagnum(&G__G__GedLN_TH2Editor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_314_1_1,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTitle",693,G__G__Ged_314_2_1,121,-1,-1,0,1,1,1,0,"C - - 10 - text",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoHistSimple",1205,G__G__Ged_314_3_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoHistComplex",1315,G__G__Ged_314_4_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoHistChanges",1284,G__G__Ged_314_5_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddArr",737,G__G__Ged_314_6_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddBox",741,G__G__Ged_314_7_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddCol",730,G__G__Ged_314_8_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddScat",839,G__G__Ged_314_9_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddText",865,G__G__Ged_314_0_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddError",966,G__G__Ged_314_1_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddPalette",1163,G__G__Ged_314_2_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddFB",580,G__G__Ged_314_3_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddBB",576,G__G__Ged_314_4_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoContLevel",1087,G__G__Ged_314_5_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoContLevel1",1136,G__G__Ged_314_6_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBarWidth",968,G__G__Ged_314_7_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBarOffset",1071,G__G__Ged_314_8_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinPressed",1186,G__G__Ged_314_9_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinMoved",967,G__G__Ged_314_0_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinReleased",1265,G__G__Ged_314_1_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinLabel",940,G__G__Ged_314_2_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoApply",697,G__G__Ged_314_3_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoCancel",761,G__G__Ged_314_4_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinReleased1",1314,G__G__Ged_314_5_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinMoved1",1016,G__G__Ged_314_6_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinLabel1",989,G__G__Ged_314_7_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoOffsetMoved",1301,G__G__Ged_314_8_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoOffsetReleased",1599,G__G__Ged_314_9_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoOffsetPressed",1520,G__G__Ged_314_0_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinOffset",1075,G__G__Ged_314_1_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoSliderXMoved",1385,G__G__Ged_314_2_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoSliderXPressed",1604,G__G__Ged_314_3_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoSliderXReleased",1683,G__G__Ged_314_4_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoXAxisRange",1165,G__G__Ged_314_5_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoSliderYMoved",1386,G__G__Ged_314_6_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoSliderYPressed",1605,G__G__Ged_314_7_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoSliderYReleased",1684,G__G__Ged_314_8_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoYAxisRange",1166,G__G__Ged_314_9_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoFillColor",1081,G__G__Ged_314_0_5,121,-1,-1,0,1,1,1,0,"k - 'Pixel_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoFillPattern",1304,G__G__Ged_314_1_5,121,-1,-1,0,1,1,1,0,"s - 'Style_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Dividers",826,G__G__Ged_314_2_5,73,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Ged_314_3_5,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TH2Editor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_314_4_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TH2Editor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_314_5_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TH2Editor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_314_6_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TH2Editor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_314_7_5,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_314_8_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_314_9_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_314_0_6,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_314_1_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TH2Editor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_314_2_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TH2Editor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_314_3_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TH2Editor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_314_4_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TH2Editor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TH2Editor",821,G__G__Ged_314_5_6,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TH2Editor),-1,0,1,1,1,0,"u 'TH2Editor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TH2Editor",947,G__G__Ged_314_6_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAttLineEditor(void) {
   /* TAttLineEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor));
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TAttLineEditor",1388,G__G__Ged_317_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_317_3_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoLineColor",1082,G__G__Ged_317_4_0,121,-1,-1,0,1,1,1,0,"k - 'Pixel_t' 0 - color",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoLineStyle",1100,G__G__Ged_317_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - style",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoLineWidth",1083,G__G__Ged_317_6_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - width",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_317_7_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAttLineEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_317_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttLineEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_317_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAttLineEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_317_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAttLineEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_317_1_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_317_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_317_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_317_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_317_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttLineEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_317_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttLineEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_317_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttLineEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_317_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttLineEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TAttLineEditor",1388,G__G__Ged_317_9_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor),-1,0,1,1,1,0,"u 'TAttLineEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TAttLineEditor",1514,G__G__Ged_317_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAxisEditor(void) {
   /* TAxisEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor));
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TAxisEditor",1104,G__G__Ged_319_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TAxisEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_319_3_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTickLength",1184,G__G__Ged_319_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAxisColor",1095,G__G__Ged_319_5_0,121,-1,-1,0,1,1,1,0,"k - 'Pixel_t' 0 - color",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTicks",689,G__G__Ged_319_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoDivisions",1131,G__G__Ged_319_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoLogAxis",874,G__G__Ged_319_8_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoMoreLog",872,G__G__Ged_319_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTitleColor",1204,G__G__Ged_319_0_1,121,-1,-1,0,1,1,1,0,"k - 'Pixel_t' 0 - color",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTitle",693,G__G__Ged_319_1_1,121,-1,-1,0,1,1,1,0,"C - - 10 - text",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTitleSize",1104,G__G__Ged_319_2_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTitleFont",1100,G__G__Ged_319_3_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - font",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTitleOffset",1308,G__G__Ged_319_4_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTitleCentered",1503,G__G__Ged_319_5_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTitleRotated",1416,G__G__Ged_319_6_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoLabelColor",1170,G__G__Ged_319_7_1,121,-1,-1,0,1,1,1,0,"k - 'Pixel_t' 0 - color",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoLabelSize",1070,G__G__Ged_319_8_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoLabelFont",1066,G__G__Ged_319_9_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - font",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoLabelOffset",1274,G__G__Ged_319_0_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoNoExponent",1217,G__G__Ged_319_1_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoDecimal",866,G__G__Ged_319_2_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_319_3_2,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAxisEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_319_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAxisEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_319_5_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAxisEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_319_6_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAxisEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_319_7_2,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_319_8_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_319_9_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_319_0_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_319_1_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAxisEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_319_2_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAxisEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_319_3_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAxisEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_319_4_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAxisEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TAxisEditor",1104,G__G__Ged_319_5_3,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TAxisEditor),-1,0,1,1,1,0,"u 'TAxisEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TAxisEditor",1230,G__G__Ged_319_6_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAttMarkerEditor(void) {
   /* TAttMarkerEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor));
   G__memfunc_setup("BuildMarkerSizeComboBox",2310,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,3,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TAttMarkerEditor",1606,G__G__Ged_320_3_0,105,G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_320_4_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoMarkerColor",1300,G__G__Ged_320_5_0,121,-1,-1,0,1,1,1,0,"k - 'Pixel_t' 0 - color",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoMarkerSize",1200,G__G__Ged_320_6_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoMarkerStyle",1318,G__G__Ged_320_7_0,121,-1,-1,0,1,1,1,0,"s - 'Style_t' 0 - style",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_320_8_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAttMarkerEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_320_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttMarkerEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_320_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAttMarkerEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_320_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAttMarkerEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_320_2_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_320_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_320_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_320_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_320_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttMarkerEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_320_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttMarkerEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_320_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttMarkerEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_320_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttMarkerEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TAttMarkerEditor",1606,G__G__Ged_320_0_2,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor),-1,0,1,1,1,0,"u 'TAttMarkerEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TAttMarkerEditor",1732,G__G__Ged_320_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPaveStatsEditor(void) {
   /* TPaveStatsEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor));
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TPaveStatsEditor",1622,G__G__Ged_330_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_330_3_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoStatOptions",1339,G__G__Ged_330_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoFitOptions",1218,G__G__Ged_330_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetValuesON",1081,G__G__Ged_330_6_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_330_7_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPaveStatsEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_330_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPaveStatsEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_330_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPaveStatsEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_330_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPaveStatsEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_330_1_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_330_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_330_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_330_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_330_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPaveStatsEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_330_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPaveStatsEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_330_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPaveStatsEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_330_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPaveStatsEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TPaveStatsEditor",1622,G__G__Ged_330_9_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor),-1,0,1,1,1,0,"u 'TPaveStatsEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TPaveStatsEditor",1748,G__G__Ged_330_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFrameEditor(void) {
   /* TFrameEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor));
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TFrameEditor",1190,G__G__Ged_332_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TFrameEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_332_3_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBorderMode",1174,G__G__Ged_332_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBorderSize",1196,G__G__Ged_332_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_332_6_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TFrameEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_332_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFrameEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_332_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TFrameEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_332_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TFrameEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_332_0_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_332_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_332_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_332_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_332_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFrameEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_332_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFrameEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_332_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFrameEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_332_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFrameEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TFrameEditor",1190,G__G__Ged_332_8_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TFrameEditor),-1,0,1,1,1,0,"u 'TFrameEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TFrameEditor",1316,G__G__Ged_332_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCurlyArcEditor(void) {
   /* TCurlyArcEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor));
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildOptionComboBox",1922,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,1,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCurlyArcEditor",1504,G__G__Ged_334_3_0,105,G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_334_4_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoRadius",795,G__G__Ged_334_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoPhimin",792,G__G__Ged_334_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoPhimax",794,G__G__Ged_334_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoCenterXY",965,G__G__Ged_334_8_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_334_9_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCurlyArcEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_334_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCurlyArcEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_334_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCurlyArcEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_334_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCurlyArcEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_334_3_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_334_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_334_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_334_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_334_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCurlyArcEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_334_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCurlyArcEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_334_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCurlyArcEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_334_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCurlyArcEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TCurlyArcEditor",1504,G__G__Ged_334_1_2,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor),-1,0,1,1,1,0,"u 'TCurlyArcEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TCurlyArcEditor",1630,G__G__Ged_334_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAttTextEditor(void) {
   /* TAttTextEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor));
   G__memfunc_setup("BuildFontSizeComboBox",2107,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,3,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BuildTextAlignComboBox",2201,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,3,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TAttTextEditor",1417,G__G__Ged_335_3_0,105,G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_335_4_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ProcessMessage",1444,G__G__Ged_335_5_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_335_6_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAttTextEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_335_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttTextEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_335_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAttTextEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_335_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAttTextEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_335_0_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_335_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_335_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_335_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_335_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttTextEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_335_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttTextEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_335_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttTextEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_335_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttTextEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TAttTextEditor",1417,G__G__Ged_335_8_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor),-1,0,1,1,1,0,"u 'TAttTextEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TAttTextEditor",1543,G__G__Ged_335_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCurlyLineEditor(void) {
   /* TCurlyLineEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor));
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TCurlyLineEditor",1618,G__G__Ged_337_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_337_3_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoStartXY",882,G__G__Ged_337_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoEndXY",635,G__G__Ged_337_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAmplitude",1112,G__G__Ged_337_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoWaveLength",1192,G__G__Ged_337_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoWavy",602,G__G__Ged_337_8_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_337_9_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCurlyLineEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_337_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCurlyLineEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_337_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCurlyLineEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_337_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCurlyLineEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_337_3_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_337_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_337_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_337_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_337_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCurlyLineEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_337_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCurlyLineEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_337_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCurlyLineEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_337_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCurlyLineEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TCurlyLineEditor",1618,G__G__Ged_337_1_2,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor),-1,0,1,1,1,0,"u 'TCurlyLineEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TCurlyLineEditor",1744,G__G__Ged_337_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedEditor(void) {
   /* TGedEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedEditor));
   G__memfunc_setup("GetEditors",1018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetClassEditor",1405,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TClass' - 0 - cl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBaseClassEditor",1784,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TClass' - 0 - cl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TGedEditor",971,G__G__Ged_340_4_0,105,G__get_linked_tagnum(&G__G__GedLN_TGedEditor),-1,0,1,1,1,0,"U 'TCanvas' - 0 0 canvas",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CloseWindow",1134,G__G__Ged_340_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ConnectToCanvas",1513,G__G__Ged_340_6_0,121,-1,-1,0,1,1,1,0,"U 'TCanvas' - 0 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeleteEditors",1325,G__G__Ged_340_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DisconnectEditors",1764,G__G__Ged_340_8_0,121,-1,-1,0,1,1,1,0,"U 'TCanvas' - 0 - canvas",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCanvas",892,G__G__Ged_340_9_0,85,G__get_linked_tagnum(&G__G__GedLN_TCanvas),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsGlobal",781,G__G__Ged_340_0_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Hide",378,G__G__Ged_340_1_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetCanvas",904,G__G__Ged_340_2_1,121,-1,-1,0,1,1,1,0,"U 'TCanvas' - 0 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetGlobal",893,G__G__Ged_340_3_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - global",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetModel",797,G__G__Ged_340_4_1,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Show",417,G__G__Ged_340_5_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RecursiveRemove",1574,G__G__Ged_340_6_1,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_340_7_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_340_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_340_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_340_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_340_1_2,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_340_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_340_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_340_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_340_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_340_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_340_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_340_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGedEditor",971,G__G__Ged_340_9_2,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedEditor),-1,0,1,1,1,0,"u 'TGedEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedEditor",1097,G__G__Ged_340_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTH1Editor(void) {
   /* TH1Editor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TH1Editor));
   G__memfunc_setup("BuildHistTypeComboBox",2115,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,3,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id","builts the Type ComboBox",(void*)NULL,0);
   G__memfunc_setup("BuildHistCoordsComboBox",2315,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,3,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id","builts the Coordinate ComboBox",(void*)NULL,0);
   G__memfunc_setup("BuildHistErrorComboBox",2219,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,3,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id","builts the Error ComboBox",(void*)NULL,0);
   G__memfunc_setup("BuildHistAddComboBox",1962,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,3,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id","builts the Add ComboBox",(void*)NULL,0);
   G__memfunc_setup("BuildPercentComboBox",2010,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,3,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id","builts the ComboBox for setting the Bar options bar1,..., bar4",(void*)NULL,0);
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"","connect the signals to the slots",(void*)NULL,1);
   G__memfunc_setup("GetHistTypeLabel",1594,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GedLN_TString),-1,0,0,1,4,0,"","Get the Histogram Type = String which contains the Histogram Draw Option",(void*)NULL,0);
   G__memfunc_setup("GetHistCoordsLabel",1794,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GedLN_TString),-1,0,0,1,4,0,"","Get the histogram coordinate system (CYL, SPH, PSR, ..)",(void*)NULL,0);
   G__memfunc_setup("GetHistErrorLabel",1698,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GedLN_TString),-1,0,0,1,4,0,"","Get the histogram Error type (E1, .., E4)",(void*)NULL,0);
   G__memfunc_setup("GetHistAddLabel",1441,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GedLN_TString),-1,0,0,1,4,0,"","Get the histogram addon (smooth line, simple line, ..)",(void*)NULL,0);
   G__memfunc_setup("ChangeErrorCombo",1600,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateBinTab",1156,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"","Creates the Bin Tab (part of the constructor)",(void*)NULL,0);
   G__memfunc_setup("CreateFitTab",1166,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"","Creates the Fit Tab (part of the constructor)",(void*)NULL,0);
   G__memfunc_setup("TH1Editor",820,G__G__Ged_342_4_1,105,G__get_linked_tagnum(&G__G__GedLN_TH1Editor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_342_5_1,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTitle",693,G__G__Ged_342_6_1,121,-1,-1,0,1,1,1,0,"C - - 10 - text",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddMarker",1054,G__G__Ged_342_7_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddBar",721,G__G__Ged_342_8_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddB",510,G__G__Ged_342_9_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAddSimple",1062,G__G__Ged_342_0_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoHistSimple",1205,G__G__Ged_342_1_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoHistComplex",1315,G__G__Ged_342_2_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoHistChanges",1284,G__G__Ged_342_3_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBarOffset",1071,G__G__Ged_342_4_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBarWidth",968,G__G__Ged_342_5_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoPercent",900,G__G__Ged_342_6_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoHBar",528,G__G__Ged_342_7_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoSliderMoved",1297,G__G__Ged_342_8_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoSliderPressed",1516,G__G__Ged_342_9_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoSliderReleased",1595,G__G__Ged_342_0_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAxisRange",1077,G__G__Ged_342_1_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinMoved",967,G__G__Ged_342_2_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - number",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinReleased",1265,G__G__Ged_342_3_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinPressed",1186,G__G__Ged_342_4_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinLabel",940,G__G__Ged_342_5_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinReleased1",1314,G__G__Ged_342_6_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinMoved1",1016,G__G__Ged_342_7_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinLabel1",989,G__G__Ged_342_8_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoOffsetMoved",1301,G__G__Ged_342_9_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - num",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoOffsetReleased",1599,G__G__Ged_342_0_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoOffsetPressed",1520,G__G__Ged_342_1_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBinOffset",1075,G__G__Ged_342_2_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoApply",697,G__G__Ged_342_3_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoCancel",761,G__G__Ged_342_4_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintBox3D",924,G__G__Ged_342_5_4,121,-1,-1,0,4,1,1,0,
"F - 'Float_t' 0 - p1 F - 'Float_t' 0 - p2 "
"F - 'Float_t' 0 - p3 F - 'Float_t' 0 - p4",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Dividers",826,G__G__Ged_342_6_4,73,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Ged_342_7_4,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TH1Editor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_342_8_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TH1Editor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_342_9_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TH1Editor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_342_0_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TH1Editor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_342_1_5,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_342_2_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_342_3_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_342_4_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_342_5_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TH1Editor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_342_6_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TH1Editor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_342_7_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TH1Editor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_342_8_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TH1Editor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TH1Editor",820,G__G__Ged_342_9_5,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TH1Editor),-1,0,1,1,1,0,"u 'TH1Editor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TH1Editor",946,G__G__Ged_342_0_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArrowEditor(void) {
   /* TArrowEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor));
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildOptionComboBox",1922,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GedLN_TGComboBox),-1,0,2,1,2,0,
"U 'TGFrame' - 0 - parent i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetShapeEntry",1315,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"C - 'Option_t' 10 - opt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TArrowEditor",1222,G__G__Ged_344_4_0,105,G__get_linked_tagnum(&G__G__GedLN_TArrowEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_344_5_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoAngle",666,G__G__Ged_344_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoOption",812,G__G__Ged_344_7_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoSize",590,G__G__Ged_344_8_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoStartPoint",1227,G__G__Ged_344_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoEndPoint",980,G__G__Ged_344_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_344_1_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TArrowEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_344_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArrowEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_344_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TArrowEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_344_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TArrowEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_344_5_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_344_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_344_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_344_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_344_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArrowEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_344_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TArrowEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_344_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArrowEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_344_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TArrowEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TArrowEditor",1222,G__G__Ged_344_3_2,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TArrowEditor),-1,0,1,1,1,0,"u 'TArrowEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TArrowEditor",1348,G__G__Ged_344_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGedToolBox(void) {
   /* TGedToolBox */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TGedToolBox));
   G__memfunc_setup("CreateButtons",1347,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'ToolBarData_t' - 0 - buttons","adds buttons by *buttons",(void*)NULL,0);
   G__memfunc_setup("TGedToolBox",1067,G__G__Ged_348_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TGedToolBox),-1,0,5,1,1,0,
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h h - 'UInt_t' 0 kHorizontalFrame options "
"k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ProcessMessage",1444,G__G__Ged_348_3_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Ged_348_4_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_348_5_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGedToolBox::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_348_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedToolBox::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_348_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGedToolBox::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_348_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGedToolBox::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_348_9_0,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_348_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_348_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_348_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_348_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedToolBox::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_348_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedToolBox::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_348_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGedToolBox::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_348_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGedToolBox::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGedToolBox",1067,G__G__Ged_348_7_1,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TGedToolBox),-1,0,1,1,1,0,"u 'TGedToolBox' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGedToolBox",1193,G__G__Ged_348_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPadEditor(void) {
   /* TPadEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GedLN_TPadEditor));
   G__memfunc_setup("ConnectSignals2Slots",2018,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TPadEditor",976,G__G__Ged_349_2_0,105,G__get_linked_tagnum(&G__G__GedLN_TPadEditor),-1,0,6,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id "
"i - 'Int_t' 0 140 width i - 'Int_t' 0 30 height "
"h - 'UInt_t' 0 kChildFrame options k - 'Pixel_t' 0 GetDefaultFrameBackground() back",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetModel",797,G__G__Ged_349_3_0,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoEditable",973,G__G__Ged_349_4_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoCrosshair",1121,G__G__Ged_349_5_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoFixedAspectRatio",1794,G__G__Ged_349_6_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoGridX",657,G__G__Ged_349_7_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoGridY",658,G__G__Ged_349_8_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoLogX",557,G__G__Ged_349_9_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoLogY",558,G__G__Ged_349_0_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoLogZ",559,G__G__Ged_349_1_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTickX",662,G__G__Ged_349_2_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoTickY",663,G__G__Ged_349_3_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBorderMode",1174,G__G__Ged_349_4_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoBorderSize",1196,G__G__Ged_349_5_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Ged_349_6_1,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPadEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Ged_349_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPadEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Ged_349_8_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPadEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Ged_349_9_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPadEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Ged_349_0_2,85,G__get_linked_tagnum(&G__G__GedLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Ged_349_1_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Ged_349_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Ged_349_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Ged_349_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPadEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Ged_349_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPadEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Ged_349_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPadEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Ged_349_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPadEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TPadEditor",976,G__G__Ged_349_8_2,(int)('i'),G__get_linked_tagnum(&G__G__GedLN_TPadEditor),-1,0,1,1,1,0,"u 'TPadEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TPadEditor",1102,G__G__Ged_349_9_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Ged() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Ged() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Ged() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__GedLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__GedLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__GedLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__GedLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TVirtualPad = { "TVirtualPad" , 99 , -1 };
G__linked_taginfo G__G__GedLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__G__GedLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGWidget = { "TGWidget" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGPicture = { "TGPicture" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGGC = { "TGGC" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TAttText = { "TAttText" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGDimension = { "TGDimension" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGTab = { "TGTab" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedFrame = { "TGedFrame" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedElement = { "TGedElement" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedNameFrame = { "TGedNameFrame" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGColorSelect = { "TGColorSelect" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedPatternSelect = { "TGedPatternSelect" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TAttFillEditor = { "TAttFillEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGToolTip = { "TGToolTip" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGButtonGroup = { "TGButtonGroup" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGButton = { "TGButton" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGRadioButton = { "TGRadioButton" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedPopup = { "TGedPopup" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedPatternFrame = { "TGedPatternFrame" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedPatternSelector = { "TGedPatternSelector" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedPatternPopup = { "TGedPatternPopup" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedSelect = { "TGedSelect" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedMarkerPopup = { "TGedMarkerPopup" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedMarkerSelect = { "TGedMarkerSelect" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TAxis = { "TAxis" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGraphEditor = { "TGraphEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGComboBox = { "TGComboBox" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGDoubleHSlider = { "TGDoubleHSlider" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGHSlider = { "TGHSlider" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGHButtonGroup = { "TGHButtonGroup" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGNumberEntryField = { "TGNumberEntryField" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TH2Editor = { "TH2Editor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGLineStyleComboBox = { "TGLineStyleComboBox" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGLineWidthComboBox = { "TGLineWidthComboBox" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TAttLineEditor = { "TAttLineEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGFontTypeComboBox = { "TGFontTypeComboBox" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TAxisEditor = { "TAxisEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TAttMarkerEditor = { "TAttMarkerEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TPaveStats = { "TPaveStats" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TPaveStatsEditor = { "TPaveStatsEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TFrame = { "TFrame" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TFrameEditor = { "TFrameEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TCurlyArc = { "TCurlyArc" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TCurlyArcEditor = { "TCurlyArcEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TAttTextEditor = { "TAttTextEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TCurlyLine = { "TCurlyLine" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TCurlyLineEditor = { "TCurlyLineEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TVirtualPadEditor = { "TVirtualPadEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGCanvas = { "TGCanvas" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedEditor = { "TGedEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TH1Editor = { "TH1Editor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TArrow = { "TArrow" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TArrowEditor = { "TArrowEditor" , 99 , -1 };
G__linked_taginfo G__G__GedLN_ToolBarData_t = { "ToolBarData_t" , 115 , -1 };
G__linked_taginfo G__G__GedLN_TGToolBar = { "TGToolBar" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TGedToolBox = { "TGedToolBox" , 99 , -1 };
G__linked_taginfo G__G__GedLN_TPadEditor = { "TPadEditor" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Ged() {
  G__G__GedLN_TClass.tagnum = -1 ;
  G__G__GedLN_TBuffer.tagnum = -1 ;
  G__G__GedLN_TMemberInspector.tagnum = -1 ;
  G__G__GedLN_TObject.tagnum = -1 ;
  G__G__GedLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__GedLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__GedLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GedLN_TString.tagnum = -1 ;
  G__G__GedLN_TVirtualPad.tagnum = -1 ;
  G__G__GedLN_Event_t.tagnum = -1 ;
  G__G__GedLN_TGWindow.tagnum = -1 ;
  G__G__GedLN_TGWidget.tagnum = -1 ;
  G__G__GedLN_TGObject.tagnum = -1 ;
  G__G__GedLN_TGPicture.tagnum = -1 ;
  G__G__GedLN_TGGC.tagnum = -1 ;
  G__G__GedLN_TAttLine.tagnum = -1 ;
  G__G__GedLN_TAttFill.tagnum = -1 ;
  G__G__GedLN_TAttText.tagnum = -1 ;
  G__G__GedLN_TAttMarker.tagnum = -1 ;
  G__G__GedLN_TQObject.tagnum = -1 ;
  G__G__GedLN_TGDimension.tagnum = -1 ;
  G__G__GedLN_TGFrame.tagnum = -1 ;
  G__G__GedLN_TGCompositeFrame.tagnum = -1 ;
  G__G__GedLN_TGMainFrame.tagnum = -1 ;
  G__G__GedLN_TCanvas.tagnum = -1 ;
  G__G__GedLN_TGLabel.tagnum = -1 ;
  G__G__GedLN_TGTab.tagnum = -1 ;
  G__G__GedLN_TGedFrame.tagnum = -1 ;
  G__G__GedLN_TGedElement.tagnum = -1 ;
  G__G__GedLN_TGedNameFrame.tagnum = -1 ;
  G__G__GedLN_TGColorSelect.tagnum = -1 ;
  G__G__GedLN_TGedPatternSelect.tagnum = -1 ;
  G__G__GedLN_TAttFillEditor.tagnum = -1 ;
  G__G__GedLN_TGToolTip.tagnum = -1 ;
  G__G__GedLN_TGButtonGroup.tagnum = -1 ;
  G__G__GedLN_TGButton.tagnum = -1 ;
  G__G__GedLN_TGTextButton.tagnum = -1 ;
  G__G__GedLN_TGCheckButton.tagnum = -1 ;
  G__G__GedLN_TGRadioButton.tagnum = -1 ;
  G__G__GedLN_TGedPopup.tagnum = -1 ;
  G__G__GedLN_TGedPatternFrame.tagnum = -1 ;
  G__G__GedLN_TGedPatternSelector.tagnum = -1 ;
  G__G__GedLN_TGedPatternPopup.tagnum = -1 ;
  G__G__GedLN_TGedSelect.tagnum = -1 ;
  G__G__GedLN_TGedMarkerPopup.tagnum = -1 ;
  G__G__GedLN_TGedMarkerSelect.tagnum = -1 ;
  G__G__GedLN_TH1.tagnum = -1 ;
  G__G__GedLN_TAxis.tagnum = -1 ;
  G__G__GedLN_TGraph.tagnum = -1 ;
  G__G__GedLN_TGTextEntry.tagnum = -1 ;
  G__G__GedLN_TGraphEditor.tagnum = -1 ;
  G__G__GedLN_TH2.tagnum = -1 ;
  G__G__GedLN_TGComboBox.tagnum = -1 ;
  G__G__GedLN_TGDoubleHSlider.tagnum = -1 ;
  G__G__GedLN_TGHSlider.tagnum = -1 ;
  G__G__GedLN_TGNumberEntry.tagnum = -1 ;
  G__G__GedLN_TGHButtonGroup.tagnum = -1 ;
  G__G__GedLN_TGNumberEntryField.tagnum = -1 ;
  G__G__GedLN_TH2Editor.tagnum = -1 ;
  G__G__GedLN_TGLineStyleComboBox.tagnum = -1 ;
  G__G__GedLN_TGLineWidthComboBox.tagnum = -1 ;
  G__G__GedLN_TAttLineEditor.tagnum = -1 ;
  G__G__GedLN_TGFontTypeComboBox.tagnum = -1 ;
  G__G__GedLN_TAxisEditor.tagnum = -1 ;
  G__G__GedLN_TAttMarkerEditor.tagnum = -1 ;
  G__G__GedLN_TPaveStats.tagnum = -1 ;
  G__G__GedLN_TPaveStatsEditor.tagnum = -1 ;
  G__G__GedLN_TFrame.tagnum = -1 ;
  G__G__GedLN_TFrameEditor.tagnum = -1 ;
  G__G__GedLN_TCurlyArc.tagnum = -1 ;
  G__G__GedLN_TCurlyArcEditor.tagnum = -1 ;
  G__G__GedLN_TAttTextEditor.tagnum = -1 ;
  G__G__GedLN_TCurlyLine.tagnum = -1 ;
  G__G__GedLN_TCurlyLineEditor.tagnum = -1 ;
  G__G__GedLN_TVirtualPadEditor.tagnum = -1 ;
  G__G__GedLN_TGCanvas.tagnum = -1 ;
  G__G__GedLN_TGedEditor.tagnum = -1 ;
  G__G__GedLN_TPad.tagnum = -1 ;
  G__G__GedLN_TH1Editor.tagnum = -1 ;
  G__G__GedLN_TArrow.tagnum = -1 ;
  G__G__GedLN_TArrowEditor.tagnum = -1 ;
  G__G__GedLN_ToolBarData_t.tagnum = -1 ;
  G__G__GedLN_TGToolBar.tagnum = -1 ;
  G__G__GedLN_TGedToolBox.tagnum = -1 ;
  G__G__GedLN_TPadEditor.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Ged() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__GedLN_TClass);
   G__get_linked_tagnum(&G__G__GedLN_TBuffer);
   G__get_linked_tagnum(&G__G__GedLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__GedLN_TObject);
   G__get_linked_tagnum(&G__G__GedLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__G__GedLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__GedLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__GedLN_TString);
   G__get_linked_tagnum(&G__G__GedLN_TVirtualPad);
   G__get_linked_tagnum(&G__G__GedLN_Event_t);
   G__get_linked_tagnum(&G__G__GedLN_TGWindow);
   G__get_linked_tagnum(&G__G__GedLN_TGWidget);
   G__get_linked_tagnum(&G__G__GedLN_TGObject);
   G__get_linked_tagnum(&G__G__GedLN_TGPicture);
   G__get_linked_tagnum(&G__G__GedLN_TGGC);
   G__get_linked_tagnum(&G__G__GedLN_TAttLine);
   G__get_linked_tagnum(&G__G__GedLN_TAttFill);
   G__get_linked_tagnum(&G__G__GedLN_TAttText);
   G__get_linked_tagnum(&G__G__GedLN_TAttMarker);
   G__get_linked_tagnum(&G__G__GedLN_TQObject);
   G__get_linked_tagnum(&G__G__GedLN_TGDimension);
   G__get_linked_tagnum(&G__G__GedLN_TGFrame);
   G__get_linked_tagnum(&G__G__GedLN_TGCompositeFrame);
   G__get_linked_tagnum(&G__G__GedLN_TGMainFrame);
   G__get_linked_tagnum(&G__G__GedLN_TCanvas);
   G__get_linked_tagnum(&G__G__GedLN_TGLabel);
   G__get_linked_tagnum(&G__G__GedLN_TGTab);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedFrame),sizeof(TGedFrame),-1,62465,"base editor's frame",G__setup_memvarTGedFrame,G__setup_memfuncTGedFrame);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedElement),sizeof(TGedElement),-1,28672,"editor element",G__setup_memvarTGedElement,G__setup_memfuncTGedElement);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedNameFrame),sizeof(TGedNameFrame),-1,62464,"frame showing the selected object name",G__setup_memvarTGedNameFrame,G__setup_memfuncTGedNameFrame);
   G__get_linked_tagnum(&G__G__GedLN_TGColorSelect);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelect),sizeof(TGedPatternSelect),-1,62464,"pattern selection check-button",G__setup_memvarTGedPatternSelect,G__setup_memfuncTGedPatternSelect);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TAttFillEditor),sizeof(TAttFillEditor),-1,62464,"GUI for editing fill attributes",G__setup_memvarTAttFillEditor,G__setup_memfuncTAttFillEditor);
   G__get_linked_tagnum(&G__G__GedLN_TGToolTip);
   G__get_linked_tagnum(&G__G__GedLN_TGButtonGroup);
   G__get_linked_tagnum(&G__G__GedLN_TGButton);
   G__get_linked_tagnum(&G__G__GedLN_TGTextButton);
   G__get_linked_tagnum(&G__G__GedLN_TGCheckButton);
   G__get_linked_tagnum(&G__G__GedLN_TGRadioButton);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPopup),sizeof(TGedPopup),-1,62464,"popup window",G__setup_memvarTGedPopup,G__setup_memfuncTGedPopup);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternFrame),sizeof(TGedPatternFrame),-1,62464,"pattern frame",G__setup_memvarTGedPatternFrame,G__setup_memfuncTGedPatternFrame);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternSelector),sizeof(TGedPatternSelector),-1,62464,"select pattern frame",G__setup_memvarTGedPatternSelector,G__setup_memfuncTGedPatternSelector);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedPatternPopup),sizeof(TGedPatternPopup),-1,62464,"Color selector popup",G__setup_memvarTGedPatternPopup,G__setup_memfuncTGedPatternPopup);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedSelect),sizeof(TGedSelect),-1,62464,"selection check-button",G__setup_memvarTGedSelect,G__setup_memfuncTGedSelect);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerPopup),sizeof(TGedMarkerPopup),-1,62464,"marker select popup",G__setup_memvarTGedMarkerPopup,G__setup_memfuncTGedMarkerPopup);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedMarkerSelect),sizeof(TGedMarkerSelect),-1,62464,"Marker selection button",G__setup_memvarTGedMarkerSelect,G__setup_memfuncTGedMarkerSelect);
   G__get_linked_tagnum(&G__G__GedLN_TH1);
   G__get_linked_tagnum(&G__G__GedLN_TAxis);
   G__get_linked_tagnum(&G__G__GedLN_TGraph);
   G__get_linked_tagnum(&G__G__GedLN_TGTextEntry);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGraphEditor),sizeof(TGraphEditor),-1,62464,"graph editor",G__setup_memvarTGraphEditor,G__setup_memfuncTGraphEditor);
   G__get_linked_tagnum(&G__G__GedLN_TH2);
   G__get_linked_tagnum(&G__G__GedLN_TGComboBox);
   G__get_linked_tagnum(&G__G__GedLN_TGDoubleHSlider);
   G__get_linked_tagnum(&G__G__GedLN_TGHSlider);
   G__get_linked_tagnum(&G__G__GedLN_TGNumberEntry);
   G__get_linked_tagnum(&G__G__GedLN_TGHButtonGroup);
   G__get_linked_tagnum(&G__G__GedLN_TGNumberEntryField);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TH2Editor),sizeof(TH2Editor),-1,62464,"TH2 editor",G__setup_memvarTH2Editor,G__setup_memfuncTH2Editor);
   G__get_linked_tagnum(&G__G__GedLN_TGLineStyleComboBox);
   G__get_linked_tagnum(&G__G__GedLN_TGLineWidthComboBox);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TAttLineEditor),sizeof(TAttLineEditor),-1,62464,"GUI for editing line attributes",G__setup_memvarTAttLineEditor,G__setup_memfuncTAttLineEditor);
   G__get_linked_tagnum(&G__G__GedLN_TGFontTypeComboBox);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TAxisEditor),sizeof(TAxisEditor),-1,62464,"axis editor",G__setup_memvarTAxisEditor,G__setup_memfuncTAxisEditor);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TAttMarkerEditor),sizeof(TAttMarkerEditor),-1,62464,"GUI for editing marker attributes",G__setup_memvarTAttMarkerEditor,G__setup_memfuncTAttMarkerEditor);
   G__get_linked_tagnum(&G__G__GedLN_TPaveStats);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TPaveStatsEditor),sizeof(TPaveStatsEditor),-1,62464,"GUI for editing TPaveStats",G__setup_memvarTPaveStatsEditor,G__setup_memfuncTPaveStatsEditor);
   G__get_linked_tagnum(&G__G__GedLN_TFrame);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TFrameEditor),sizeof(TFrameEditor),-1,62464,"editor of TFrame objects",G__setup_memvarTFrameEditor,G__setup_memfuncTFrameEditor);
   G__get_linked_tagnum(&G__G__GedLN_TCurlyArc);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyArcEditor),sizeof(TCurlyArcEditor),-1,62464,"GUI for editing arrow attributes",G__setup_memvarTCurlyArcEditor,G__setup_memfuncTCurlyArcEditor);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TAttTextEditor),sizeof(TAttTextEditor),-1,62464,"GUI for editing text attributes",G__setup_memvarTAttTextEditor,G__setup_memfuncTAttTextEditor);
   G__get_linked_tagnum(&G__G__GedLN_TCurlyLine);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TCurlyLineEditor),sizeof(TCurlyLineEditor),-1,62464,"GUI for editing arrow attributes",G__setup_memvarTCurlyLineEditor,G__setup_memfuncTCurlyLineEditor);
   G__get_linked_tagnum(&G__G__GedLN_TVirtualPadEditor);
   G__get_linked_tagnum(&G__G__GedLN_TGCanvas);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedEditor),sizeof(TGedEditor),-1,62720,"new editor ",G__setup_memvarTGedEditor,G__setup_memfuncTGedEditor);
   G__get_linked_tagnum(&G__G__GedLN_TPad);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TH1Editor),sizeof(TH1Editor),-1,62464,"TH1 editor",G__setup_memvarTH1Editor,G__setup_memfuncTH1Editor);
   G__get_linked_tagnum(&G__G__GedLN_TArrow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TArrowEditor),sizeof(TArrowEditor),-1,62464,"GUI for editing arrow attributes",G__setup_memvarTArrowEditor,G__setup_memfuncTArrowEditor);
   G__get_linked_tagnum(&G__G__GedLN_ToolBarData_t);
   G__get_linked_tagnum(&G__G__GedLN_TGToolBar);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TGedToolBox),sizeof(TGedToolBox),-1,61440,"a bar with picture buttons",G__setup_memvarTGedToolBox,G__setup_memfuncTGedToolBox);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GedLN_TPadEditor),sizeof(TPadEditor),-1,62464,"editor of TPad objects",G__setup_memvarTPadEditor,G__setup_memfuncTPadEditor);
}
extern "C" void G__cpp_setupG__Ged(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Ged()");
  G__set_cpp_environmentG__Ged();
  G__cpp_setup_tagtableG__Ged();

  G__cpp_setup_inheritanceG__Ged();

  G__cpp_setup_typetableG__Ged();

  G__cpp_setup_memvarG__Ged();

  G__cpp_setup_memfuncG__Ged();
  G__cpp_setup_globalG__Ged();
  G__cpp_setup_funcG__Ged();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Ged();
  return;
}
class G__cpp_setup_initG__Ged {
  public:
    G__cpp_setup_initG__Ged() { G__add_setup_func("G__Ged",(G__incsetup)(&G__cpp_setupG__Ged)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Ged() { G__remove_setup_func("G__Ged"); }
};
G__cpp_setup_initG__Ged G__cpp_setup_initializerG__Ged;

