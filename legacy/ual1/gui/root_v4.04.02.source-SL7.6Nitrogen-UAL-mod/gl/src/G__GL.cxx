//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:31:29 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__GL.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TGLSceneObject_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGLSceneObject_IsA(const void*);
   static void delete_TGLSceneObject(void *p);
   static void deleteArray_TGLSceneObject(void *p);
   static void destruct_TGLSceneObject(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGLSceneObject*)
   {
      ::TGLSceneObject *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGLSceneObject", ::TGLSceneObject::Class_Version(), "gl/inc/TGLSceneObject.h", 60,
                  typeid(::TGLSceneObject), DefineBehavior(ptr, ptr),
                  &::TGLSceneObject::Dictionary, &TGLSceneObject_IsA, 0,
                  sizeof(::TGLSceneObject) );
      instance.SetDelete(&delete_TGLSceneObject);
      instance.SetDeleteArray(&deleteArray_TGLSceneObject);
      instance.SetDestructor(&destruct_TGLSceneObject);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGLSceneObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGLCamera_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGLCamera_IsA(const void*);
   static void delete_TGLCamera(void *p);
   static void deleteArray_TGLCamera(void *p);
   static void destruct_TGLCamera(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGLCamera*)
   {
      ::TGLCamera *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGLCamera", ::TGLCamera::Class_Version(), "gl/inc/TGLCamera.h", 20,
                  typeid(::TGLCamera), DefineBehavior(ptr, ptr),
                  &::TGLCamera::Dictionary, &TGLCamera_IsA, 0,
                  sizeof(::TGLCamera) );
      instance.SetDelete(&delete_TGLCamera);
      instance.SetDeleteArray(&deleteArray_TGLCamera);
      instance.SetDestructor(&destruct_TGLCamera);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGLCamera*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGLGeometryEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGLGeometryEditor_IsA(const void*);
   static void delete_TGLGeometryEditor(void *p);
   static void deleteArray_TGLGeometryEditor(void *p);
   static void destruct_TGLGeometryEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGLGeometryEditor*)
   {
      ::TGLGeometryEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGLGeometryEditor", ::TGLGeometryEditor::Class_Version(), "gl/inc/TGLEditor.h", 105,
                  typeid(::TGLGeometryEditor), DefineBehavior(ptr, ptr),
                  &::TGLGeometryEditor::Dictionary, &TGLGeometryEditor_IsA, 0,
                  sizeof(::TGLGeometryEditor) );
      instance.SetDelete(&delete_TGLGeometryEditor);
      instance.SetDeleteArray(&deleteArray_TGLGeometryEditor);
      instance.SetDestructor(&destruct_TGLGeometryEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGLGeometryEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGLRenderArea_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGLRenderArea_IsA(const void*);
   static void *new_TGLRenderArea(void *p = 0);
   static void *newArray_TGLRenderArea(Long_t size);
   static void delete_TGLRenderArea(void *p);
   static void deleteArray_TGLRenderArea(void *p);
   static void destruct_TGLRenderArea(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGLRenderArea*)
   {
      ::TGLRenderArea *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGLRenderArea", ::TGLRenderArea::Class_Version(), "gl/inc/TGLRenderArea.h", 39,
                  typeid(::TGLRenderArea), DefineBehavior(ptr, ptr),
                  &::TGLRenderArea::Dictionary, &TGLRenderArea_IsA, 0,
                  sizeof(::TGLRenderArea) );
      instance.SetNew(&new_TGLRenderArea);
      instance.SetNewArray(&newArray_TGLRenderArea);
      instance.SetDelete(&delete_TGLRenderArea);
      instance.SetDeleteArray(&deleteArray_TGLRenderArea);
      instance.SetDestructor(&destruct_TGLRenderArea);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGLRenderArea*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGLColorEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGLColorEditor_IsA(const void*);
   static void delete_TGLColorEditor(void *p);
   static void deleteArray_TGLColorEditor(void *p);
   static void destruct_TGLColorEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGLColorEditor*)
   {
      ::TGLColorEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGLColorEditor", ::TGLColorEditor::Class_Version(), "gl/inc/TGLEditor.h", 49,
                  typeid(::TGLColorEditor), DefineBehavior(ptr, ptr),
                  &::TGLColorEditor::Dictionary, &TGLColorEditor_IsA, 0,
                  sizeof(::TGLColorEditor) );
      instance.SetDelete(&delete_TGLColorEditor);
      instance.SetDeleteArray(&deleteArray_TGLColorEditor);
      instance.SetDestructor(&destruct_TGLColorEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGLColorEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGLSceneEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGLSceneEditor_IsA(const void*);
   static void delete_TGLSceneEditor(void *p);
   static void deleteArray_TGLSceneEditor(void *p);
   static void destruct_TGLSceneEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGLSceneEditor*)
   {
      ::TGLSceneEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGLSceneEditor", ::TGLSceneEditor::Class_Version(), "gl/inc/TGLEditor.h", 145,
                  typeid(::TGLSceneEditor), DefineBehavior(ptr, ptr),
                  &::TGLSceneEditor::Dictionary, &TGLSceneEditor_IsA, 0,
                  sizeof(::TGLSceneEditor) );
      instance.SetDelete(&delete_TGLSceneEditor);
      instance.SetDeleteArray(&deleteArray_TGLSceneEditor);
      instance.SetDestructor(&destruct_TGLSceneEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGLSceneEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGLLightEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGLLightEditor_IsA(const void*);
   static void delete_TGLLightEditor(void *p);
   static void deleteArray_TGLLightEditor(void *p);
   static void destruct_TGLLightEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGLLightEditor*)
   {
      ::TGLLightEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGLLightEditor", ::TGLLightEditor::Class_Version(), "gl/inc/TGLEditor.h", 179,
                  typeid(::TGLLightEditor), DefineBehavior(ptr, ptr),
                  &::TGLLightEditor::Dictionary, &TGLLightEditor_IsA, 0,
                  sizeof(::TGLLightEditor) );
      instance.SetDelete(&delete_TGLLightEditor);
      instance.SetDeleteArray(&deleteArray_TGLLightEditor);
      instance.SetDestructor(&destruct_TGLLightEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGLLightEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TArcBall_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TArcBall_IsA(const void*);
   static void delete_TArcBall(void *p);
   static void deleteArray_TArcBall(void *p);
   static void destruct_TArcBall(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TArcBall*)
   {
      ::TArcBall *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TArcBall", ::TArcBall::Class_Version(), "gl/inc/TArcBall.h", 21,
                  typeid(::TArcBall), DefineBehavior(ptr, ptr),
                  &::TArcBall::Dictionary, &TArcBall_IsA, 0,
                  sizeof(::TArcBall) );
      instance.SetDelete(&delete_TArcBall);
      instance.SetDeleteArray(&deleteArray_TArcBall);
      instance.SetDestructor(&destruct_TArcBall);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TArcBall*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TViewerOpenGL_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TViewerOpenGL_IsA(const void*);
   static void delete_TViewerOpenGL(void *p);
   static void deleteArray_TViewerOpenGL(void *p);
   static void destruct_TViewerOpenGL(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TViewerOpenGL*)
   {
      ::TViewerOpenGL *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TViewerOpenGL", ::TViewerOpenGL::Class_Version(), "gl/inc/TViewerOpenGL.h", 54,
                  typeid(::TViewerOpenGL), DefineBehavior(ptr, ptr),
                  &::TViewerOpenGL::Dictionary, &TViewerOpenGL_IsA, 0,
                  sizeof(::TViewerOpenGL) );
      instance.SetDelete(&delete_TViewerOpenGL);
      instance.SetDeleteArray(&deleteArray_TViewerOpenGL);
      instance.SetDestructor(&destruct_TViewerOpenGL);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TViewerOpenGL*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGLWindow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGLWindow_IsA(const void*);
   static void delete_TGLWindow(void *p);
   static void deleteArray_TGLWindow(void *p);
   static void destruct_TGLWindow(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGLWindow*)
   {
      ::TGLWindow *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGLWindow", ::TGLWindow::Class_Version(), "gl/inc/TGLRenderArea.h", 19,
                  typeid(::TGLWindow), DefineBehavior(ptr, ptr),
                  &::TGLWindow::Dictionary, &TGLWindow_IsA, 0,
                  sizeof(::TGLWindow) );
      instance.SetDelete(&delete_TGLWindow);
      instance.SetDeleteArray(&deleteArray_TGLWindow);
      instance.SetDestructor(&destruct_TGLWindow);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGLWindow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TX11GL_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TX11GL_IsA(const void*);
   static void *new_TX11GL(void *p = 0);
   static void *newArray_TX11GL(Long_t size);
   static void delete_TX11GL(void *p);
   static void deleteArray_TX11GL(void *p);
   static void destruct_TX11GL(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TX11GL*)
   {
      ::TX11GL *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TX11GL", ::TX11GL::Class_Version(), "gl/inc/TX11GL.h", 36,
                  typeid(::TX11GL), DefineBehavior(ptr, ptr),
                  &::TX11GL::Dictionary, &TX11GL_IsA, 0,
                  sizeof(::TX11GL) );
      instance.SetNew(&new_TX11GL);
      instance.SetNewArray(&newArray_TX11GL);
      instance.SetDelete(&delete_TX11GL);
      instance.SetDeleteArray(&deleteArray_TX11GL);
      instance.SetDestructor(&destruct_TX11GL);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TX11GL*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TGLSceneObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGLSceneObject::Class_Name()
{
   return "TGLSceneObject";
}

//______________________________________________________________________________
const char *TGLSceneObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGLSceneObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGLSceneObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGLSceneObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGLSceneObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGLSceneObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGLSceneObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGLSceneObject*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGLCamera::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGLCamera::Class_Name()
{
   return "TGLCamera";
}

//______________________________________________________________________________
const char *TGLCamera::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGLCamera*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGLCamera::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGLCamera*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGLCamera::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGLCamera*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGLCamera::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGLCamera*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGLGeometryEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGLGeometryEditor::Class_Name()
{
   return "TGLGeometryEditor";
}

//______________________________________________________________________________
const char *TGLGeometryEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGLGeometryEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGLGeometryEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGLGeometryEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGLGeometryEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGLGeometryEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGLGeometryEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGLGeometryEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGLRenderArea::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGLRenderArea::Class_Name()
{
   return "TGLRenderArea";
}

//______________________________________________________________________________
const char *TGLRenderArea::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGLRenderArea*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGLRenderArea::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGLRenderArea*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGLRenderArea::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGLRenderArea*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGLRenderArea::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGLRenderArea*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGLColorEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGLColorEditor::Class_Name()
{
   return "TGLColorEditor";
}

//______________________________________________________________________________
const char *TGLColorEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGLColorEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGLColorEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGLColorEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGLColorEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGLColorEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGLColorEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGLColorEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGLSceneEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGLSceneEditor::Class_Name()
{
   return "TGLSceneEditor";
}

//______________________________________________________________________________
const char *TGLSceneEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGLSceneEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGLSceneEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGLSceneEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGLSceneEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGLSceneEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGLSceneEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGLSceneEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGLLightEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGLLightEditor::Class_Name()
{
   return "TGLLightEditor";
}

//______________________________________________________________________________
const char *TGLLightEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGLLightEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGLLightEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGLLightEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGLLightEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGLLightEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGLLightEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGLLightEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArcBall::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArcBall::Class_Name()
{
   return "TArcBall";
}

//______________________________________________________________________________
const char *TArcBall::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TArcBall*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArcBall::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TArcBall*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArcBall::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TArcBall*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArcBall::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TArcBall*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TViewerOpenGL::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TViewerOpenGL::Class_Name()
{
   return "TViewerOpenGL";
}

//______________________________________________________________________________
const char *TViewerOpenGL::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TViewerOpenGL*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TViewerOpenGL::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TViewerOpenGL*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TViewerOpenGL::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TViewerOpenGL*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TViewerOpenGL::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TViewerOpenGL*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGLWindow::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGLWindow::Class_Name()
{
   return "TGLWindow";
}

//______________________________________________________________________________
const char *TGLWindow::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGLWindow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGLWindow::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGLWindow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGLWindow::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGLWindow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGLWindow::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGLWindow*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TX11GL::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TX11GL::Class_Name()
{
   return "TX11GL";
}

//______________________________________________________________________________
const char *TX11GL::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TX11GL*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TX11GL::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TX11GL*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TX11GL::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TX11GL*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TX11GL::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TX11GL*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TViewerOpenGL::Streamer(TBuffer &R__b)
{
   // Stream an object of class TViewerOpenGL.

   TVirtualViewer3D::Streamer(R__b);
   TGMainFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TViewerOpenGL::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TViewerOpenGL.

      TClass *R__cl = ::TViewerOpenGL::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMainFrame", &fMainFrame);
      R__insp.Inspect(R__cl, R__parent, "*fV1", &fV1);
      R__insp.Inspect(R__cl, R__parent, "*fV2", &fV2);
      R__insp.Inspect(R__cl, R__parent, "*fColorEditor", &fColorEditor);
      R__insp.Inspect(R__cl, R__parent, "*fGeomEditor", &fGeomEditor);
      R__insp.Inspect(R__cl, R__parent, "*fSceneEditor", &fSceneEditor);
      R__insp.Inspect(R__cl, R__parent, "*fLightEditor", &fLightEditor);
      R__insp.Inspect(R__cl, R__parent, "*fCanvasWindow", &fCanvasWindow);
      R__insp.Inspect(R__cl, R__parent, "*fCanvasContainer", &fCanvasContainer);
      R__insp.Inspect(R__cl, R__parent, "*fRender", &fRender);
      R__insp.Inspect(R__cl, R__parent, "*fShutter", &fShutter);
      R__insp.Inspect(R__cl, R__parent, "*fShutItem1", &fShutItem1);
      R__insp.Inspect(R__cl, R__parent, "*fShutItem2", &fShutItem2);
      R__insp.Inspect(R__cl, R__parent, "*fShutItem3", &fShutItem3);
      R__insp.Inspect(R__cl, R__parent, "*fShutItem4", &fShutItem4);
      R__insp.Inspect(R__cl, R__parent, "*fL1", &fL1);
      R__insp.Inspect(R__cl, R__parent, "*fL2", &fL2);
      R__insp.Inspect(R__cl, R__parent, "*fL3", &fL3);
      R__insp.Inspect(R__cl, R__parent, "*fL4", &fL4);
      R__insp.Inspect(R__cl, R__parent, "*fCanvasLayout", &fCanvasLayout);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__parent, "*fFileMenu", &fFileMenu);
      R__insp.Inspect(R__cl, R__parent, "*fViewMenu", &fViewMenu);
      R__insp.Inspect(R__cl, R__parent, "*fHelpMenu", &fHelpMenu);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarLayout", &fMenuBarLayout);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarItemLayout", &fMenuBarItemLayout);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarHelpLayout", &fMenuBarHelpLayout);
      R__insp.Inspect(R__cl, R__parent, "*fCamera[4]", &fCamera);
      R__insp.Inspect(R__cl, R__parent, "fViewVolume[4]", fViewVolume);
      R__insp.Inspect(R__cl, R__parent, "fZoom[4]", fZoom);
      R__insp.Inspect(R__cl, R__parent, "fActiveViewport[4]", fActiveViewport);
      R__insp.Inspect(R__cl, R__parent, "fLightMask", &fLightMask);
      R__insp.Inspect(R__cl, R__parent, "fRangeX", (void*)&fRangeX);
      ::ROOT::GenericShowMembers("TViewerOpenGL::PDD_t", (void*)&fRangeX, R__insp, strcat(R__parent,"fRangeX."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRangeY", (void*)&fRangeY);
      ::ROOT::GenericShowMembers("TViewerOpenGL::PDD_t", (void*)&fRangeY, R__insp, strcat(R__parent,"fRangeY."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRangeZ", (void*)&fRangeZ);
      ::ROOT::GenericShowMembers("TViewerOpenGL::PDD_t", (void*)&fRangeZ, R__insp, strcat(R__parent,"fRangeZ."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLastPosRot", (void*)&fLastPosRot);
      ::ROOT::GenericShowMembers("TViewerOpenGL::PDD_t", (void*)&fLastPosRot, R__insp, strcat(R__parent,"fLastPosRot."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXc", &fXc);
      R__insp.Inspect(R__cl, R__parent, "fYc", &fYc);
      R__insp.Inspect(R__cl, R__parent, "fZc", &fZc);
      R__insp.Inspect(R__cl, R__parent, "fRad", &fRad);
      R__insp.Inspect(R__cl, R__parent, "fPressed", &fPressed);
      R__insp.Inspect(R__cl, R__parent, "*fArcBall", &fArcBall);
      R__insp.Inspect(R__cl, R__parent, "fNbShapes", &fNbShapes);
      R__insp.Inspect(R__cl, R__parent, "fLastPos", (void*)&fLastPos);
      ::ROOT::GenericShowMembers("TPoint", (void*)&fLastPos, R__insp, strcat(R__parent,"fLastPos."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fConf", &fConf);
      R__insp.Inspect(R__cl, R__parent, "*fContextMenu", &fContextMenu);
      R__insp.Inspect(R__cl, R__parent, "*fSelectedObj", &fSelectedObj);
      R__insp.Inspect(R__cl, R__parent, "fAction", &fAction);
      R__insp.Inspect(R__cl, R__parent, "fBuildingScene", &fBuildingScene);
      R__insp.Inspect(R__cl, R__parent, "*fPad", &fPad);
      R__insp.Inspect(R__cl, R__parent, "fFirstScene", &fFirstScene);
      R__insp.Inspect(R__cl, R__parent, "fInsideComposite", &fInsideComposite);
      R__insp.Inspect(R__cl, R__parent, "fCSLevel", &fCSLevel);
      R__insp.Inspect(R__cl, R__parent, "fCSTokens", (void*)&fCSTokens);
      ::ROOT::GenericShowMembers("vector<CSPART_t>", (void*)&fCSTokens, R__insp, strcat(R__parent,"fCSTokens."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNewComposite", (void*)&fNewComposite);
      TVirtualViewer3D::ShowMembers(R__insp, R__parent);
      TGMainFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TViewerOpenGL_IsA(const void *obj) {
      return ((::TViewerOpenGL*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TViewerOpenGL(void *p) {
      delete ((::TViewerOpenGL*)p);
   }
   static void deleteArray_TViewerOpenGL(void *p) {
      delete [] ((::TViewerOpenGL*)p);
   }
   static void destruct_TViewerOpenGL(void *p) {
      typedef ::TViewerOpenGL current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TViewerOpenGL

//______________________________________________________________________________
void TGLRenderArea::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGLRenderArea.

   ::Error("TGLRenderArea::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TGLRenderArea::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGLRenderArea.

      TClass *R__cl = ::TGLRenderArea::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fArea", &fArea);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGLRenderArea_IsA(const void *obj) {
      return ((::TGLRenderArea*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGLRenderArea(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGLRenderArea : new ::TGLRenderArea;
   }
   static void *newArray_TGLRenderArea(Long_t size) {
      return new ::TGLRenderArea[size];
   }
   // Wrapper around operator delete
   static void delete_TGLRenderArea(void *p) {
      delete ((::TGLRenderArea*)p);
   }
   static void deleteArray_TGLRenderArea(void *p) {
      delete [] ((::TGLRenderArea*)p);
   }
   static void destruct_TGLRenderArea(void *p) {
      typedef ::TGLRenderArea current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGLRenderArea

//______________________________________________________________________________
void TGLWindow::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGLWindow.

   TGCompositeFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGLWindow::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGLWindow.

      TClass *R__cl = ::TGLWindow::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCtx", &fCtx);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGLWindow_IsA(const void *obj) {
      return ((::TGLWindow*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGLWindow(void *p) {
      delete ((::TGLWindow*)p);
   }
   static void deleteArray_TGLWindow(void *p) {
      delete [] ((::TGLWindow*)p);
   }
   static void destruct_TGLWindow(void *p) {
      typedef ::TGLWindow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGLWindow

//______________________________________________________________________________
void TGLColorEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGLColorEditor.

   TGCompositeFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGLColorEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGLColorEditor.

      TClass *R__cl = ::TGLColorEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "*fMatView", &fMatView);
      R__insp.Inspect(R__cl, R__parent, "*fFrameLayout", &fFrameLayout);
      R__insp.Inspect(R__cl, R__parent, "fLMode", &fLMode);
      R__insp.Inspect(R__cl, R__parent, "*fLightTypes[4]", &fLightTypes);
      R__insp.Inspect(R__cl, R__parent, "*fRedSlider", &fRedSlider);
      R__insp.Inspect(R__cl, R__parent, "*fGreenSlider", &fGreenSlider);
      R__insp.Inspect(R__cl, R__parent, "*fBlueSlider", &fBlueSlider);
      R__insp.Inspect(R__cl, R__parent, "*fAlphaSlider", &fAlphaSlider);
      R__insp.Inspect(R__cl, R__parent, "*fShineSlider", &fShineSlider);
      R__insp.Inspect(R__cl, R__parent, "*fApplyButton", &fApplyButton);
      R__insp.Inspect(R__cl, R__parent, "*fApplyFamily", &fApplyFamily);
      R__insp.Inspect(R__cl, R__parent, "fIsActive", &fIsActive);
      R__insp.Inspect(R__cl, R__parent, "fIsLight", &fIsLight);
      R__insp.Inspect(R__cl, R__parent, "fRGBA[17]", fRGBA);
      R__insp.Inspect(R__cl, R__parent, "fGLWin", &fGLWin);
      R__insp.Inspect(R__cl, R__parent, "fCtx", &fCtx);
      R__insp.Inspect(R__cl, R__parent, "fTrash", &fTrash);
      fTrash.ShowMembers(R__insp, strcat(R__parent,"fTrash.")); R__parent[R__ncp] = 0;
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGLColorEditor_IsA(const void *obj) {
      return ((::TGLColorEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGLColorEditor(void *p) {
      delete ((::TGLColorEditor*)p);
   }
   static void deleteArray_TGLColorEditor(void *p) {
      delete [] ((::TGLColorEditor*)p);
   }
   static void destruct_TGLColorEditor(void *p) {
      typedef ::TGLColorEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGLColorEditor

//______________________________________________________________________________
void TGLGeometryEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGLGeometryEditor.

   TGCompositeFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGLGeometryEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGLGeometryEditor.

      TClass *R__cl = ::TGLGeometryEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "fTrash", &fTrash);
      fTrash.ShowMembers(R__insp, strcat(R__parent,"fTrash.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fL1", &fL1);
      R__insp.Inspect(R__cl, R__parent, "*fL2", &fL2);
      R__insp.Inspect(R__cl, R__parent, "*fGeomData[6]", &fGeomData);
      R__insp.Inspect(R__cl, R__parent, "*fApplyButton", &fApplyButton);
      R__insp.Inspect(R__cl, R__parent, "fIsActive", &fIsActive);
      R__insp.Inspect(R__cl, R__parent, "fCenter[3]", fCenter);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGLGeometryEditor_IsA(const void *obj) {
      return ((::TGLGeometryEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGLGeometryEditor(void *p) {
      delete ((::TGLGeometryEditor*)p);
   }
   static void deleteArray_TGLGeometryEditor(void *p) {
      delete [] ((::TGLGeometryEditor*)p);
   }
   static void destruct_TGLGeometryEditor(void *p) {
      typedef ::TGLGeometryEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGLGeometryEditor

//______________________________________________________________________________
void TGLSceneEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGLSceneEditor.

   TGCompositeFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGLSceneEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGLSceneEditor.

      TClass *R__cl = ::TGLSceneEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "fTrash", &fTrash);
      fTrash.ShowMembers(R__insp, strcat(R__parent,"fTrash.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fL1", &fL1);
      R__insp.Inspect(R__cl, R__parent, "*fL2", &fL2);
      R__insp.Inspect(R__cl, R__parent, "*fGeomData[4]", &fGeomData);
      R__insp.Inspect(R__cl, R__parent, "*fApplyButton", &fApplyButton);
      R__insp.Inspect(R__cl, R__parent, "*fClipActivate", &fClipActivate);
      R__insp.Inspect(R__cl, R__parent, "*fAxesCheck", &fAxesCheck);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGLSceneEditor_IsA(const void *obj) {
      return ((::TGLSceneEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGLSceneEditor(void *p) {
      delete ((::TGLSceneEditor*)p);
   }
   static void deleteArray_TGLSceneEditor(void *p) {
      delete [] ((::TGLSceneEditor*)p);
   }
   static void destruct_TGLSceneEditor(void *p) {
      typedef ::TGLSceneEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGLSceneEditor

//______________________________________________________________________________
void TGLLightEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGLLightEditor.

   TGCompositeFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGLLightEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGLLightEditor.

      TClass *R__cl = ::TGLLightEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fLights[5]", &fLights);
      R__insp.Inspect(R__cl, R__parent, "*fViewer", &fViewer);
      R__insp.Inspect(R__cl, R__parent, "fTrash", &fTrash);
      fTrash.ShowMembers(R__insp, strcat(R__parent,"fTrash.")); R__parent[R__ncp] = 0;
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGLLightEditor_IsA(const void *obj) {
      return ((::TGLLightEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGLLightEditor(void *p) {
      delete ((::TGLLightEditor*)p);
   }
   static void deleteArray_TGLLightEditor(void *p) {
      delete [] ((::TGLLightEditor*)p);
   }
   static void destruct_TGLLightEditor(void *p) {
      typedef ::TGLLightEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGLLightEditor

//______________________________________________________________________________
void TArcBall::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArcBall.

   ::Error("TArcBall::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TArcBall::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TArcBall.

      TClass *R__cl = ::TArcBall::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fThisRot[9]", fThisRot);
      R__insp.Inspect(R__cl, R__parent, "fLastRot[9]", fLastRot);
      R__insp.Inspect(R__cl, R__parent, "fTransform[16]", fTransform);
      R__insp.Inspect(R__cl, R__parent, "fStVec[3]", fStVec);
      R__insp.Inspect(R__cl, R__parent, "fEnVec[3]", fEnVec);
      R__insp.Inspect(R__cl, R__parent, "fAdjustWidth", &fAdjustWidth);
      R__insp.Inspect(R__cl, R__parent, "fAdjustHeight", &fAdjustHeight);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TArcBall_IsA(const void *obj) {
      return ((::TArcBall*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TArcBall(void *p) {
      delete ((::TArcBall*)p);
   }
   static void deleteArray_TArcBall(void *p) {
      delete [] ((::TArcBall*)p);
   }
   static void destruct_TArcBall(void *p) {
      typedef ::TArcBall current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArcBall

//______________________________________________________________________________
void TGLCamera::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGLCamera.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TGLCamera::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGLCamera.

      TClass *R__cl = ::TGLCamera::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fViewVolume", &fViewVolume);
      R__insp.Inspect(R__cl, R__parent, "*fViewPort", &fViewPort);
      R__insp.Inspect(R__cl, R__parent, "fZoom", &fZoom);
      R__insp.Inspect(R__cl, R__parent, "fDrawFrame", &fDrawFrame);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGLCamera_IsA(const void *obj) {
      return ((::TGLCamera*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGLCamera(void *p) {
      delete ((::TGLCamera*)p);
   }
   static void deleteArray_TGLCamera(void *p) {
      delete [] ((::TGLCamera*)p);
   }
   static void destruct_TGLCamera(void *p) {
      typedef ::TGLCamera current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGLCamera

//______________________________________________________________________________
void TGLSceneObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGLSceneObject.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TGLSceneObject::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGLSceneObject.

      TClass *R__cl = ::TGLSceneObject::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fVertices", (void*)&fVertices);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&fVertices, R__insp, strcat(R__parent,"fVertices."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fColor[17]", fColor);
      R__insp.Inspect(R__cl, R__parent, "fSelectionBox", (void*)&fSelectionBox);
      ::ROOT::GenericShowMembers("TGLSelection", (void*)&fSelectionBox, R__insp, strcat(R__parent,"fSelectionBox."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIsSelected", &fIsSelected);
      R__insp.Inspect(R__cl, R__parent, "fGLName", &fGLName);
      R__insp.Inspect(R__cl, R__parent, "*fNextT", &fNextT);
      R__insp.Inspect(R__cl, R__parent, "*fRealObject", &fRealObject);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGLSceneObject_IsA(const void *obj) {
      return ((::TGLSceneObject*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGLSceneObject(void *p) {
      delete ((::TGLSceneObject*)p);
   }
   static void deleteArray_TGLSceneObject(void *p) {
      delete [] ((::TGLSceneObject*)p);
   }
   static void destruct_TGLSceneObject(void *p) {
      typedef ::TGLSceneObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGLSceneObject

//______________________________________________________________________________
void TX11GL::Streamer(TBuffer &R__b)
{
   // Stream an object of class TX11GL.

   TVirtualGLImp::Streamer(R__b);
}

//______________________________________________________________________________
void TX11GL::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TX11GL.

      TClass *R__cl = ::TX11GL::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDpy", &fDpy);
      R__insp.Inspect(R__cl, R__parent, "*fVisInfo", &fVisInfo);
      TVirtualGLImp::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TX11GL_IsA(const void *obj) {
      return ((::TX11GL*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TX11GL(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TX11GL : new ::TX11GL;
   }
   static void *newArray_TX11GL(Long_t size) {
      return new ::TX11GL[size];
   }
   // Wrapper around operator delete
   static void delete_TX11GL(void *p) {
      delete ((::TX11GL*)p);
   }
   static void deleteArray_TX11GL(void *p) {
      delete [] ((::TX11GL*)p);
   }
   static void destruct_TX11GL(void *p) {
      typedef ::TX11GL current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TX11GL

/********************************************************
* gl/src/G__GL.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__GL();

extern "C" void G__set_cpp_environmentG__GL() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("gl/inc/TViewerOpenGL.h");
  G__add_compiledheader("gl/inc/TGLRenderArea.h");
  G__add_compiledheader("gl/inc/TGLEditor.h");
  G__add_compiledheader("gl/inc/TArcBall.h");
  G__add_compiledheader("gl/inc/TGLCamera.h");
  G__add_compiledheader("gl/inc/TGLSceneObject.h");
  G__add_compiledheader("gl/inc/TX11GL.h");
  G__cpp_reset_tagtableG__GL();
}
class G__gldIsrcdIG__GLdOcxx_tag {};

void* operator new(size_t size,G__gldIsrcdIG__GLdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__gldIsrcdIG__GLdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_gldIsrcdIG__GLdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__GL() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TGLSceneObject */
static int G__G__GL_246_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGLSceneObject*)(G__getstructoffset()))->IsTransparent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGLSceneObject*)(G__getstructoffset()))->GLDraw((const TGLFrustum*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneObject*)(G__getstructoffset()))->Shift((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneObject*)(G__getstructoffset()))->Stretch((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGLSceneObject*)(G__getstructoffset()))->GetBBox());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLSceneObject*)(G__getstructoffset()))->GetBBox());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneObject*)(G__getstructoffset()))->SetNextT((TGLSceneObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLSceneObject*)(G__getstructoffset()))->GetNextT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TGLSceneObject*)(G__getstructoffset()))->GetGLName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLSceneObject*)(G__getstructoffset()))->GetRealObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TGLSceneObject*)(G__getstructoffset()))->GetColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TGLSceneObject*)(G__getstructoffset()))->SetColor((const Float_t*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TGLSceneObject*)(G__getstructoffset()))->SetColor((const Float_t*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGLSceneObject*)(G__getstructoffset()))->Select((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGLSceneObject*)(G__getstructoffset()))->Select();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneObject*)(G__getstructoffset()))->SetBBox();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGLSceneObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLSceneObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGLSceneObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGLSceneObject::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLSceneObject*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneObject*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneObject*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneObject*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLSceneObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLSceneObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLSceneObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_246_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLSceneObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGLSceneObject G__TTGLSceneObject;
static int G__G__GL_246_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGLSceneObject *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGLSceneObject *)((G__getstructoffset())+sizeof(TGLSceneObject)*i);
   else  delete (TGLSceneObject *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGLCamera */
static int G__G__GL_252_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TGLCamera*)(G__getstructoffset()))->GetViewport());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGLCamera*)(G__getstructoffset()))->TurnOn();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGLCamera*)(G__getstructoffset()))->TurnOn((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLCamera*)(G__getstructoffset()))->Zoom((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLCamera*)(G__getstructoffset()))->Select();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGLCamera::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLCamera::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGLCamera::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGLCamera::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLCamera*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLCamera*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLCamera*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLCamera*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLCamera::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLCamera::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLCamera::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_252_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLCamera::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGLCamera G__TTGLCamera;
static int G__G__GL_252_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGLCamera *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGLCamera *)((G__getstructoffset())+sizeof(TGLCamera)*i);
   else  delete (TGLCamera *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGLGeometryEditor */
static int G__G__GL_257_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGLGeometryEditor *p=NULL;
      p = new TGLGeometryEditor((const TGWindow*)G__int(libp->para[0]),(TViewerOpenGL*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLGeometryEditor*)(G__getstructoffset()))->SetCenter((const Double_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLGeometryEditor*)(G__getstructoffset()))->Disable();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLGeometryEditor*)(G__getstructoffset()))->DoButton();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLGeometryEditor*)(G__getstructoffset()))->GetObjectData((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLGeometryEditor*)(G__getstructoffset()))->ValueSet((Long_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGLGeometryEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLGeometryEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGLGeometryEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGLGeometryEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLGeometryEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLGeometryEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLGeometryEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLGeometryEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLGeometryEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLGeometryEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLGeometryEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_257_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLGeometryEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGLGeometryEditor G__TTGLGeometryEditor;
static int G__G__GL_257_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGLGeometryEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGLGeometryEditor *)((G__getstructoffset())+sizeof(TGLGeometryEditor)*i);
   else  delete (TGLGeometryEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGLRenderArea */
static int G__G__GL_260_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGLRenderArea *p=NULL;
   if(G__getaryconstruct()) p=new TGLRenderArea[G__getaryconstruct()];
   else p=::new((G__gldIsrcdIG__GLdOcxx_tag*)G__getgvp()) TGLRenderArea;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GLLN_TGLRenderArea);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGLRenderArea *p=NULL;
      p=::new((G__gldIsrcdIG__GLdOcxx_tag*)G__getgvp()) TGLRenderArea((Window_t)G__int(libp->para[0]),(const TGWindow*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GLLN_TGLRenderArea);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLRenderArea*)(G__getstructoffset()))->GetGLWindow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGLRenderArea::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLRenderArea::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGLRenderArea::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGLRenderArea::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLRenderArea*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLRenderArea*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLRenderArea*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLRenderArea*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLRenderArea::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLRenderArea::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLRenderArea::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_260_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLRenderArea::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGLRenderArea G__TTGLRenderArea;
static int G__G__GL_260_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGLRenderArea *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGLRenderArea *)((G__getstructoffset())+sizeof(TGLRenderArea)*i))->~G__TTGLRenderArea();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGLRenderArea *)(G__getstructoffset()))->~G__TTGLRenderArea();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGLColorEditor */
static int G__G__GL_263_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGLColorEditor *p=NULL;
      p = new TGLColorEditor((const TGWindow*)G__int(libp->para[0]),(TViewerOpenGL*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLColorEditor*)(G__getstructoffset()))->SetRGBA((const Float_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TGLColorEditor*)(G__getstructoffset()))->GetRGBA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLColorEditor*)(G__getstructoffset()))->DoSlider((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLColorEditor*)(G__getstructoffset()))->DoButton();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLColorEditor*)(G__getstructoffset()))->Disable();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGLColorEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLColorEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGLColorEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGLColorEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLColorEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLColorEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLColorEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLColorEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLColorEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLColorEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLColorEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_263_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLColorEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGLColorEditor G__TTGLColorEditor;
static int G__G__GL_263_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGLColorEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGLColorEditor *)((G__getstructoffset())+sizeof(TGLColorEditor)*i);
   else  delete (TGLColorEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGLSceneEditor */
static int G__G__GL_264_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGLSceneEditor *p=NULL;
      p = new TGLSceneEditor((const TGWindow*)G__int(libp->para[0]),(TViewerOpenGL*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneEditor*)(G__getstructoffset()))->GetPlaneEqn((Double_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneEditor*)(G__getstructoffset()))->DoButton();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneEditor*)(G__getstructoffset()))->ValueSet((Long_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGLSceneEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLSceneEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGLSceneEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGLSceneEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLSceneEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLSceneEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLSceneEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLSceneEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLSceneEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_264_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLSceneEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGLSceneEditor G__TTGLSceneEditor;
static int G__G__GL_264_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGLSceneEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGLSceneEditor *)((G__getstructoffset())+sizeof(TGLSceneEditor)*i);
   else  delete (TGLSceneEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGLLightEditor */
static int G__G__GL_265_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGLLightEditor *p=NULL;
      p = new TGLLightEditor((const TGWindow*)G__int(libp->para[0]),(TViewerOpenGL*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLLightEditor*)(G__getstructoffset()))->DoButton();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGLLightEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLLightEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGLLightEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGLLightEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLLightEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLLightEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLLightEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLLightEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLLightEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLLightEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLLightEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_265_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLLightEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGLLightEditor G__TTGLLightEditor;
static int G__G__GL_265_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGLLightEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGLLightEditor *)((G__getstructoffset())+sizeof(TGLLightEditor)*i);
   else  delete (TGLLightEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArcBall */
static int G__G__GL_268_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TArcBall *p=NULL;
      p=::new((G__gldIsrcdIG__GLdOcxx_tag*)G__getgvp()) TArcBall((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GLLN_TArcBall);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArcBall*)(G__getstructoffset()))->SetBounds((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArcBall*)(G__getstructoffset()))->Click(*(TPoint*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArcBall*)(G__getstructoffset()))->Drag(*(TPoint*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TArcBall*)(G__getstructoffset()))->GetRotMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TArcBall::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArcBall::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TArcBall::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TArcBall::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TArcBall*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArcBall*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArcBall*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TArcBall*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArcBall::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TArcBall::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TArcBall::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_268_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TArcBall::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArcBall G__TTArcBall;
static int G__G__GL_268_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TArcBall *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TArcBall *)((G__getstructoffset())+sizeof(TArcBall)*i))->~G__TTArcBall();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TArcBall *)(G__getstructoffset()))->~G__TTArcBall();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TViewerOpenGL */
static int G__G__GL_269_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TViewerOpenGL *p=NULL;
      p = new TViewerOpenGL((TVirtualPad*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TViewerOpenGL*)(G__getstructoffset()))->PreferLocalFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewerOpenGL*)(G__getstructoffset()))->BeginScene();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TViewerOpenGL*)(G__getstructoffset()))->BuildingScene());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewerOpenGL*)(G__getstructoffset()))->EndScene();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TViewerOpenGL*)(G__getstructoffset()))->AddObject(*(TBuffer3D*)libp->para[0].ref,(Bool_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TViewerOpenGL*)(G__getstructoffset()))->AddObject(*(TBuffer3D*)libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TViewerOpenGL*)(G__getstructoffset()))->AddObject((UInt_t)G__int(libp->para[0]),*(TBuffer3D*)libp->para[1].ref
,(Bool_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TViewerOpenGL*)(G__getstructoffset()))->AddObject((UInt_t)G__int(libp->para[0]),*(TBuffer3D*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TViewerOpenGL*)(G__getstructoffset()))->OpenComposite(*(TBuffer3D*)libp->para[0].ref,(Bool_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TViewerOpenGL*)(G__getstructoffset()))->OpenComposite(*(TBuffer3D*)libp->para[0].ref);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewerOpenGL*)(G__getstructoffset()))->CloseComposite();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewerOpenGL*)(G__getstructoffset()))->AddCompositeOp((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TViewerOpenGL*)(G__getstructoffset()))->HandleContainerButton((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TViewerOpenGL*)(G__getstructoffset()))->HandleContainerConfigure((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TViewerOpenGL*)(G__getstructoffset()))->HandleContainerKey((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TViewerOpenGL*)(G__getstructoffset()))->HandleContainerMotion((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TViewerOpenGL*)(G__getstructoffset()))->HandleContainerExpose((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewerOpenGL*)(G__getstructoffset()))->ModifyScene((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TViewerOpenGL::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TViewerOpenGL::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TViewerOpenGL::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TViewerOpenGL::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TViewerOpenGL*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewerOpenGL*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewerOpenGL*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewerOpenGL*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TViewerOpenGL::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TViewerOpenGL::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TViewerOpenGL::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_269_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TViewerOpenGL::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TViewerOpenGL G__TTViewerOpenGL;
static int G__G__GL_269_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TViewerOpenGL *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TViewerOpenGL *)((G__getstructoffset())+sizeof(TViewerOpenGL)*i);
   else  delete (TViewerOpenGL *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGLWindow */
static int G__G__GL_278_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGLWindow *p=NULL;
      p = new TGLWindow((Window_t)G__int(libp->para[0]),(const TGWindow*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GLLN_TGLWindow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGLWindow*)(G__getstructoffset()))->HandleConfigureNotify((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGLWindow*)(G__getstructoffset()))->HandleButton((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGLWindow*)(G__getstructoffset()))->HandleKey((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGLWindow*)(G__getstructoffset()))->HandleMotion((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGLWindow*)(G__getstructoffset()))->HandleExpose((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLWindow*)(G__getstructoffset()))->Refresh();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLWindow*)(G__getstructoffset()))->MakeCurrent();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGLWindow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLWindow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGLWindow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGLWindow::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGLWindow*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLWindow*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLWindow*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGLWindow*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLWindow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLWindow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGLWindow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_278_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGLWindow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGLWindow G__TTGLWindow;
static int G__G__GL_278_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGLWindow *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGLWindow *)((G__getstructoffset())+sizeof(TGLWindow)*i);
   else  delete (TGLWindow *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TX11GL */
static int G__G__GL_322_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TX11GL *p=NULL;
   if(G__getaryconstruct()) p=new TX11GL[G__getaryconstruct()];
   else p=::new((G__gldIsrcdIG__GLdOcxx_tag*)G__getgvp()) TX11GL;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GLLN_TX11GL);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((TX11GL*)(G__getstructoffset()))->CreateGLWindow((Window_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((TX11GL*)(G__getstructoffset()))->CreateContext((Window_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TX11GL*)(G__getstructoffset()))->DeleteContext((ULong_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TX11GL*)(G__getstructoffset()))->MakeCurrent((Window_t)G__int(libp->para[0]),(ULong_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TX11GL*)(G__getstructoffset()))->SwapBuffers((Window_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TX11GL::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TX11GL::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TX11GL::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TX11GL::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TX11GL*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TX11GL*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TX11GL*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TX11GL*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TX11GL::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TX11GL::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TX11GL::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GL_322_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TX11GL::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GL_322_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TX11GL *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TX11GL(*(TX11GL*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GLLN_TX11GL);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TX11GL G__TTX11GL;
static int G__G__GL_322_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TX11GL *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TX11GL *)((G__getstructoffset())+sizeof(TX11GL)*i))->~G__TTX11GL();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TX11GL *)(G__getstructoffset()))->~G__TTX11GL();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GL_322_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TX11GL *dest = (TX11GL*)(G__getstructoffset());
   *dest = (*(TX11GL*)libp->para[0].ref);
   const TX11GL& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TGLSceneObject */

/* TGLCamera */

/* TGLGeometryEditor */

/* TGLRenderArea */

/* TGLColorEditor */

/* TGLSceneEditor */

/* TGLLightEditor */

/* TArcBall */

/* TViewerOpenGL */

/* TGLWindow */

/* TX11GL */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__GL {
 public:
  G__Sizep2memfuncG__GL() {p=&G__Sizep2memfuncG__GL::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__GL::*p)();
};

size_t G__get_sizep2memfuncG__GL()
{
  G__Sizep2memfuncG__GL a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__GL() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GLLN_TGLSceneObject))) {
     TGLSceneObject *G__Lderived;
     G__Lderived=(TGLSceneObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneObject),G__get_linked_tagnum(&G__G__GLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GLLN_TGLCamera))) {
     TGLCamera *G__Lderived;
     G__Lderived=(TGLCamera*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLCamera),G__get_linked_tagnum(&G__G__GLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor))) {
     TGLGeometryEditor *G__Lderived;
     G__Lderived=(TGLGeometryEditor*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor),G__get_linked_tagnum(&G__G__GLLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor),G__get_linked_tagnum(&G__G__GLLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor),G__get_linked_tagnum(&G__G__GLLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor),G__get_linked_tagnum(&G__G__GLLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor),G__get_linked_tagnum(&G__G__GLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor),G__get_linked_tagnum(&G__G__GLLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor))) {
     TGLColorEditor *G__Lderived;
     G__Lderived=(TGLColorEditor*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor),G__get_linked_tagnum(&G__G__GLLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor),G__get_linked_tagnum(&G__G__GLLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor),G__get_linked_tagnum(&G__G__GLLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor),G__get_linked_tagnum(&G__G__GLLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor),G__get_linked_tagnum(&G__G__GLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor),G__get_linked_tagnum(&G__G__GLLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor))) {
     TGLSceneEditor *G__Lderived;
     G__Lderived=(TGLSceneEditor*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor),G__get_linked_tagnum(&G__G__GLLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor),G__get_linked_tagnum(&G__G__GLLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor),G__get_linked_tagnum(&G__G__GLLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor),G__get_linked_tagnum(&G__G__GLLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor),G__get_linked_tagnum(&G__G__GLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor),G__get_linked_tagnum(&G__G__GLLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor))) {
     TGLLightEditor *G__Lderived;
     G__Lderived=(TGLLightEditor*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor),G__get_linked_tagnum(&G__G__GLLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor),G__get_linked_tagnum(&G__G__GLLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor),G__get_linked_tagnum(&G__G__GLLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor),G__get_linked_tagnum(&G__G__GLLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor),G__get_linked_tagnum(&G__G__GLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor),G__get_linked_tagnum(&G__G__GLLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL))) {
     TViewerOpenGL *G__Lderived;
     G__Lderived=(TViewerOpenGL*)0x1000;
     {
       TVirtualViewer3D *G__Lpbase=(TVirtualViewer3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),G__get_linked_tagnum(&G__G__GLLN_TVirtualViewer3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),G__get_linked_tagnum(&G__G__GLLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),G__get_linked_tagnum(&G__G__GLLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),G__get_linked_tagnum(&G__G__GLLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),G__get_linked_tagnum(&G__G__GLLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),G__get_linked_tagnum(&G__G__GLLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),G__get_linked_tagnum(&G__G__GLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),G__get_linked_tagnum(&G__G__GLLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GLLN_TGLWindow))) {
     TGLWindow *G__Lderived;
     G__Lderived=(TGLWindow*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLWindow),G__get_linked_tagnum(&G__G__GLLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLWindow),G__get_linked_tagnum(&G__G__GLLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLWindow),G__get_linked_tagnum(&G__G__GLLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLWindow),G__get_linked_tagnum(&G__G__GLLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLWindow),G__get_linked_tagnum(&G__G__GLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TGLWindow),G__get_linked_tagnum(&G__G__GLLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GLLN_TX11GL))) {
     TX11GL *G__Lderived;
     G__Lderived=(TX11GL*)0x1000;
     {
       TVirtualGLImp *G__Lpbase=(TVirtualGLImp*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GLLN_TX11GL),G__get_linked_tagnum(&G__G__GLLN_TVirtualGLImp),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__GL() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__GLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("Window_t",107,-1,0,
-1);
   G__setnewtype(-1,"Window handle",0);
   G__search_typename2("pair<Double_t,Double_t>",117,G__get_linked_tagnum(&G__G__GLLN_pairlEdoublecOdoublegR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("PDD_t",117,G__get_linked_tagnum(&G__G__GLLN_pairlEdoublecOdoublegR),0,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,RootCsg::BaseMesh*>",117,G__get_linked_tagnum(&G__G__GLLN_pairlEunsignedsPintcORootCsgcLcLBaseMeshmUgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("CSPART_t",117,G__get_linked_tagnum(&G__G__GLLN_pairlEunsignedsPintcORootCsgcLcLBaseMeshmUgR),0,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CSPART_t>",117,G__get_linked_tagnum(&G__G__GLLN_vectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GLLN_vectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GLLN_vectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<pair<unsigned int,RootCsg::BaseMesh*>>",117,G__get_linked_tagnum(&G__G__GLLN_vectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__G__GLLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GLLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GLLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<double>",117,G__get_linked_tagnum(&G__G__GLLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__G__GLLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GLLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GLLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G__GLLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<TGLMesh*>",117,G__get_linked_tagnum(&G__G__GLLN_vectorlETGLMeshmUcOallocatorlETGLMeshmUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlETGLMeshmUcOallocatorlETGLMeshmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GLLN_vectorlETGLMeshmUcOallocatorlETGLMeshmUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlETGLMeshmUcOallocatorlETGLMeshmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GLLN_vectorlETGLMeshmUcOallocatorlETGLMeshmUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TGLSceneObject */
static void G__setup_memvarTGLSceneObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneObject));
   { TGLSceneObject *p; p=(TGLSceneObject*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,2,"fVertices=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fColor[17]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLSelection),-1,-1,2,"fSelectionBox=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsSelected=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fGLName=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLSceneObject),-1,-1,4,"fNextT=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TObject),-1,-1,4,"fRealObject=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGLCamera */
static void G__setup_memvarTGLCamera(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GLLN_TGLCamera));
   { TGLCamera *p; p=(TGLCamera*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,68,0,1,-1,G__defined_typename("Double_t"),-1,2,"fViewVolume=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,73,0,1,-1,G__defined_typename("Int_t"),-1,2,"fViewPort=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZoom=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDrawFrame=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGLGeometryEditor */
static void G__setup_memvarTGLGeometryEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor));
   { TGLGeometryEditor *p; p=(TGLGeometryEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditorcLcLdA),-1,-2,1,"kCenterX=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditorcLcLdA),-1,-2,1,"kCenterY=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditorcLcLdA),-1,-2,1,"kCenterZ=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditorcLcLdA),-1,-2,1,"kScaleX=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditorcLcLdA),-1,-2,1,"kScaleY=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditorcLcLdA),-1,-2,1,"kScaleZ=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditorcLcLdA),-1,-2,1,"kTot=6",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),-1,-1,4,"fViewer=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_TList),-1,-1,4,"fTrash=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fL1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fL2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGNumberEntry),-1,-1,4,"fGeomData[6]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGButton),-1,-1,4,"fApplyButton=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsActive=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCenter[3]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGLRenderArea */
static void G__setup_memvarTGLRenderArea(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GLLN_TGLRenderArea));
   { TGLRenderArea *p; p=(TGLRenderArea*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLWindow),-1,-1,4,"fArea=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGLColorEditor */
static void G__setup_memvarTGLColorEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor));
   { TGLColorEditor *p; p=(TGLColorEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),-1,-1,4,"fViewer=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLMatView),-1,-1,4,"fMatView=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fFrameLayout=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLColorEditorcLcLELightMode),-1,-2,1,"kDiffuse=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLColorEditorcLcLELightMode),-1,-2,1,"kAmbient=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLColorEditorcLcLELightMode),-1,-2,1,"kSpecular=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLColorEditorcLcLELightMode),-1,-2,1,"kEmission=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLColorEditorcLcLELightMode),-1,-2,1,"kTot=4",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLColorEditorcLcLELightMode),-1,-1,4,"fLMode=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGButton),-1,-1,4,"fLightTypes[4]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGHSlider),-1,-1,4,"fRedSlider=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGHSlider),-1,-1,4,"fGreenSlider=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGHSlider),-1,-1,4,"fBlueSlider=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGHSlider),-1,-1,4,"fAlphaSlider=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGHSlider),-1,-1,4,"fShineSlider=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGButton),-1,-1,4,"fApplyButton=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGButton),-1,-1,4,"fApplyFamily=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsActive=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsLight=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRGBA[17]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,107,0,0,-1,G__defined_typename("Window_t"),-1,4,"fGLWin=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fCtx=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_TList),-1,-1,4,"fTrash=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGLSceneEditor */
static void G__setup_memvarTGLSceneEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor));
   { TGLSceneEditor *p; p=(TGLSceneEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditorcLcLdA),-1,-2,1,"kPlaneA=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditorcLcLdA),-1,-2,1,"kPlaneB=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditorcLcLdA),-1,-2,1,"kPlaneC=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditorcLcLdA),-1,-2,1,"kPlaneD=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditorcLcLdA),-1,-2,1,"kTot=4",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),-1,-1,4,"fViewer=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_TList),-1,-1,4,"fTrash=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fL1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fL2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGNumberEntry),-1,-1,4,"fGeomData[4]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGButton),-1,-1,4,"fApplyButton=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGCheckButton),-1,-1,4,"fClipActivate=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGCheckButton),-1,-1,4,"fAxesCheck=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGLLightEditor */
static void G__setup_memvarTGLLightEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor));
   { TGLLightEditor *p; p=(TGLLightEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLLightEditorcLcLEBuiltInLight),-1,-2,1,"kTop=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLLightEditorcLcLEBuiltInLight),-1,-2,1,"kRight=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLLightEditorcLcLEBuiltInLight),-1,-2,1,"kBottom=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLLightEditorcLcLEBuiltInLight),-1,-2,1,"kLeft=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLLightEditorcLcLEBuiltInLight),-1,-2,1,"kFront=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TGLLightEditorcLcLEBuiltInLight),-1,-2,1,"kTot=5",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGButton),-1,-1,4,"fLights[5]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),-1,-1,4,"fViewer=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_TList),-1,-1,4,"fTrash=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArcBall */
static void G__setup_memvarTArcBall(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GLLN_TArcBall));
   { TArcBall *p; p=(TArcBall*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fThisRot[9]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLastRot[9]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTransform[16]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fStVec[3]=",0,"Saved click vector");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnVec[3]=",0,"Saved drag vector");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAdjustWidth=",0,"Mouse bounds width");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAdjustHeight=",0,"Mouse bounds height");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TViewerOpenGL */
static void G__setup_memvarTViewerOpenGL(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL));
   { TViewerOpenGL *p; p=(TViewerOpenGL*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGCompositeFrame),-1,-1,4,"fMainFrame=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGVerticalFrame),-1,-1,4,"fV1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGVerticalFrame),-1,-1,4,"fV2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor),-1,-1,4,"fColorEditor=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor),-1,-1,4,"fGeomEditor=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor),-1,-1,4,"fSceneEditor=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor),-1,-1,4,"fLightEditor=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGCanvas),-1,-1,4,"fCanvasWindow=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLRenderArea),-1,-1,4,"fCanvasContainer=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLRender),-1,-1,4,"fRender=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGShutter),-1,-1,4,"fShutter=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGShutterItem),-1,-1,4,"fShutItem1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGShutterItem),-1,-1,4,"fShutItem2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGShutterItem),-1,-1,4,"fShutItem3=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGShutterItem),-1,-1,4,"fShutItem4=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fL1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fL2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fL3=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fL4=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fCanvasLayout=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGMenuBar),-1,-1,4,"fMenuBar=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGPopupMenu),-1,-1,4,"fFileMenu=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGPopupMenu),-1,-1,4,"fViewMenu=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGPopupMenu),-1,-1,4,"fHelpMenu=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fMenuBarLayout=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fMenuBarItemLayout=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints),-1,-1,4,"fMenuBarHelpLayout=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLCamera),-1,-1,4,"fCamera[4]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fViewVolume[4]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZoom[4]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fActiveViewport[4]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLightMask=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_pairlEdoublecOdoublegR),G__defined_typename("PDD_t"),-1,4,"fRangeX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_pairlEdoublecOdoublegR),G__defined_typename("PDD_t"),-1,4,"fRangeY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_pairlEdoublecOdoublegR),G__defined_typename("PDD_t"),-1,4,"fRangeZ=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_pairlEdoublecOdoublegR),G__defined_typename("PDD_t"),-1,4,"fLastPosRot=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXc=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYc=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZc=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRad=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPressed=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TArcBall),-1,-1,4,"fArcBall=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNbShapes=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_TPoint),-1,-1,4,"fLastPos=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEViews),-1,-2,1,"kXOY=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEViews),-1,-2,1,"kXOZ=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEViews),-1,-2,1,"kYOZ=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEViews),-1,-2,1,"kPERSP=3",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEViews),-1,-1,4,"fConf=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TContextMenu),-1,-1,4,"fContextMenu=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TGLSceneObject),-1,-1,4,"fSelectedObj=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEAction),-1,-2,1,"kNoAction=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEAction),-1,-2,1,"kRotating=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEAction),-1,-2,1,"kPicking=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEAction),-1,-2,1,"kZooming=3",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEAction),-1,-1,4,"fAction=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fBuildingScene=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TVirtualPad),-1,-1,4,"fPad=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFirstScene=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fInsideComposite=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fCSLevel=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_vectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgR),G__defined_typename("vector<CSPART_t>"),-1,4,"fCSTokens=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcL277),-1,-1,4,"fNewComposite=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"fgInitX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"fgInitY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"fgInitW=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"fgInitH=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGLWindow */
static void G__setup_memvarTGLWindow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GLLN_TGLWindow));
   { TGLWindow *p; p=(TGLWindow*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fCtx=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TX11GL */
static void G__setup_memvarTX11GL(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GLLN_TX11GL));
   { TX11GL *p; p=(TX11GL*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_Display),-1,-1,4,"fDpy=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_XVisualInfo),-1,-1,4,"fVisInfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__GL() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTGLSceneObject(void) {
   /* TGLSceneObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneObject));
   G__memfunc_setup("IsTransparent",1358,G__G__GL_246_4_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GLDraw",545,G__G__GL_246_5_0,121,-1,-1,0,1,1,1,8,"U 'TGLFrustum' - 10 - fr",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Shift",510,G__G__GL_246_6_0,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Stretch",733,G__G__GL_246_7_0,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - xs d - 'Double_t' 0 - ys "
"d - 'Double_t' 0 - zs",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBBox",651,G__G__GL_246_8_0,85,G__get_linked_tagnum(&G__G__GLLN_TGLSelection),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBBox",651,G__G__GL_246_9_0,85,G__get_linked_tagnum(&G__G__GLLN_TGLSelection),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNextT",799,G__G__GL_246_0_1,121,-1,-1,0,1,1,1,0,"U 'TGLSceneObject' - 0 - next",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNextT",787,G__G__GL_246_1_1,85,G__get_linked_tagnum(&G__G__GLLN_TGLSceneObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetGLName",820,G__G__GL_246_2_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRealObject",1275,G__G__GL_246_3_1,85,G__get_linked_tagnum(&G__G__GLLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColor",799,G__G__GL_246_4_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetColor",811,G__G__GL_246_5_1,121,-1,-1,0,2,1,1,0,
"F - 'Float_t' 10 - newColor g - 'Bool_t' 0 kFALSE fromCtor",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Select",608,G__G__GL_246_6_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE select",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBBox",663,G__G__GL_246_7_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GLLN_TGLSceneObject),-1,1,1,1,4,0,"u 'TGLSceneObject' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBBox",663,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TBuffer3D' - 11 - buffer",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GL_246_1_2,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGLSceneObject::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GL_246_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLSceneObject::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GL_246_3_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGLSceneObject::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GL_246_4_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGLSceneObject::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GL_246_5_2,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GL_246_6_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GL_246_7_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GL_246_8_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GL_246_9_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLSceneObject::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GL_246_0_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLSceneObject::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GL_246_1_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLSceneObject::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GL_246_2_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLSceneObject::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGLSceneObject",1450,G__G__GL_246_3_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGLCamera(void) {
   /* TGLCamera */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GLLN_TGLCamera));
   G__memfunc_setup("GetViewport",1152,G__G__GL_252_2_0,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TurnOn",614,G__G__GL_252_3_0,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("TurnOn",614,G__G__GL_252_4_0,121,-1,-1,0,2,1,1,8,
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Zoom",421,G__G__GL_252_5_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - zoom",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Select",608,G__G__GL_252_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GLLN_TGLCamera),-1,1,1,1,4,0,"u 'TGLCamera' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GL_252_9_0,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGLCamera::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GL_252_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLCamera::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GL_252_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGLCamera::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GL_252_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGLCamera::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GL_252_3_1,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GL_252_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GL_252_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GL_252_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GL_252_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLCamera::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GL_252_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLCamera::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GL_252_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLCamera::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GL_252_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLCamera::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGLCamera",942,G__G__GL_252_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGLGeometryEditor(void) {
   /* TGLGeometryEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor));
   G__memfunc_setup("TGLGeometryEditor",1690,G__G__GL_257_1_0,105,G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor),-1,0,2,1,1,0,
"U 'TGWindow' - 10 - parent U 'TViewerOpenGL' - 0 - viewer",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetCenter",909,G__G__GL_257_2_0,121,-1,-1,0,1,1,1,0,"D - 'Double_t' 10 - center",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Disable",692,G__G__GL_257_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DoButton",815,G__G__GL_257_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetObjectData",1265,G__G__GL_257_5_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - shift D - 'Double_t' 0 - scale",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ValueSet",809,G__G__GL_257_6_0,121,-1,-1,0,1,1,1,0,"l - 'Long_t' 0 - unusedVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateCenterControls",2057,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateStretchControls",2181,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGLGeometryEditor",1690,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor),-1,0,1,1,4,0,"u 'TGLGeometryEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor),-1,1,1,1,4,0,"u 'TGLGeometryEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GL_257_1_1,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGLGeometryEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GL_257_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLGeometryEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GL_257_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGLGeometryEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GL_257_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGLGeometryEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GL_257_5_1,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GL_257_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GL_257_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GL_257_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GL_257_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLGeometryEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GL_257_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLGeometryEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GL_257_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLGeometryEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GL_257_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLGeometryEditor::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGLGeometryEditor",1816,G__G__GL_257_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGLRenderArea(void) {
   /* TGLRenderArea */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GLLN_TGLRenderArea));
   G__memfunc_setup("TGLRenderArea",1216,G__G__GL_260_1_0,105,G__get_linked_tagnum(&G__G__GLLN_TGLRenderArea),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGLRenderArea",1216,G__G__GL_260_2_0,105,G__get_linked_tagnum(&G__G__GLLN_TGLRenderArea),-1,0,2,1,1,0,
"k - 'Window_t' 0 - wid U 'TGWindow' - 10 - parent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetGLWindow",1067,G__G__GL_260_3_0,85,G__get_linked_tagnum(&G__G__GLLN_TGLWindow),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGLRenderArea",1216,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GLLN_TGLRenderArea),-1,0,1,1,4,0,"u 'TGLRenderArea' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GLLN_TGLRenderArea),-1,1,1,1,4,0,"u 'TGLRenderArea' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GL_260_6_0,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGLRenderArea::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GL_260_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLRenderArea::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GL_260_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGLRenderArea::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GL_260_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGLRenderArea::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GL_260_0_1,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GL_260_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GL_260_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GL_260_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GL_260_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLRenderArea::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GL_260_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLRenderArea::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GL_260_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLRenderArea::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GL_260_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLRenderArea::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGLRenderArea",1342,G__G__GL_260_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGLColorEditor(void) {
   /* TGLColorEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor));
   G__memfunc_setup("TGLColorEditor",1357,G__G__GL_263_1_0,105,G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor),-1,0,2,1,1,0,
"U 'TGWindow' - 10 - parent U 'TViewerOpenGL' - 0 - viewer",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetRGBA",584,G__G__GL_263_2_0,121,-1,-1,0,1,1,1,0,"F - 'Float_t' 10 - rgba",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRGBA",572,G__G__GL_263_3_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DoSlider",790,G__G__GL_263_4_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DoButton",815,G__G__GL_263_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Disable",692,G__G__GL_263_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateRadioButtons",1842,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateSliders",1322,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSlidersPos",1332,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleContainerNotify",2152,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,4,0,"U 'Event_t' - 0 - event",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleContainerExpose",2147,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,4,0,"U 'Event_t' - 0 - event",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawSphere",1013,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SwapBuffers",1128,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MakeCurrent",1121,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGLColorEditor",1357,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor),-1,0,1,1,4,0,"u 'TGLColorEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor),-1,1,1,1,4,0,"u 'TGLColorEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GL_263_7_1,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGLColorEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GL_263_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLColorEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GL_263_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGLColorEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GL_263_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGLColorEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GL_263_1_2,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GL_263_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GL_263_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GL_263_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GL_263_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLColorEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GL_263_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLColorEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GL_263_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLColorEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GL_263_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLColorEditor::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGLColorEditor",1483,G__G__GL_263_9_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGLSceneEditor(void) {
   /* TGLSceneEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor));
   G__memfunc_setup("TGLSceneEditor",1340,G__G__GL_264_1_0,105,G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor),-1,0,2,1,1,0,
"U 'TGWindow' - 10 - parent U 'TViewerOpenGL' - 0 - viewer",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPlaneEqn",1076,G__G__GL_264_2_0,121,-1,-1,0,1,1,1,0,"D - 'Double_t' 0 - eqn",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DoButton",815,G__G__GL_264_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ValueSet",809,G__G__GL_264_4_0,121,-1,-1,0,1,1,1,0,"l - 'Long_t' 0 - unusedVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateControls",1448,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGLSceneEditor",1340,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor),-1,0,1,1,4,0,"u 'TGLSceneEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor),-1,1,1,1,4,0,"u 'TGLSceneEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GL_264_8_0,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGLSceneEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GL_264_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLSceneEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GL_264_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGLSceneEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GL_264_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGLSceneEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GL_264_2_1,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GL_264_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GL_264_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GL_264_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GL_264_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLSceneEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GL_264_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLSceneEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GL_264_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLSceneEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GL_264_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLSceneEditor::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGLSceneEditor",1466,G__G__GL_264_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGLLightEditor(void) {
   /* TGLLightEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor));
   G__memfunc_setup("TGLLightEditor",1350,G__G__GL_265_1_0,105,G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor),-1,0,2,1,1,0,
"U 'TGWindow' - 10 - parent U 'TViewerOpenGL' - 0 - viewer",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DoButton",815,G__G__GL_265_2_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GL_265_3_0,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGLLightEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GL_265_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLLightEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GL_265_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGLLightEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GL_265_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGLLightEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GL_265_7_0,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GL_265_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GL_265_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GL_265_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GL_265_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLLightEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GL_265_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLLightEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GL_265_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLLightEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GL_265_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLLightEditor::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGLLightEditor",1476,G__G__GL_265_5_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArcBall(void) {
   /* TArcBall */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GLLN_TArcBall));
   G__memfunc_setup("TArcBall",741,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GLLN_TArcBall),-1,0,1,1,4,0,"u 'TArcBall' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GLLN_TArcBall),-1,1,1,1,4,0,"u 'TArcBall' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ResetMatrices",1339,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MapToSphere",1096,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,8,
"u 'TPoint' - 11 - NewPt D - 'Double_t' 0 - NewVec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TArcBall",741,G__G__GL_268_5_0,105,G__get_linked_tagnum(&G__G__GLLN_TArcBall),-1,0,2,1,1,0,
"h - 'UInt_t' 0 - NewWidth h - 'UInt_t' 0 - NewHeight",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBounds",919,G__G__GL_268_6_0,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - NewWidth h - 'UInt_t' 0 - NewHeight",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Click",486,G__G__GL_268_7_0,121,-1,-1,0,1,1,1,0,"u 'TPoint' - 11 - NewPt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Drag",382,G__G__GL_268_8_0,121,-1,-1,0,1,1,1,0,"u 'TPoint' - 11 - NewPt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRotMatrix",1226,G__G__GL_268_9_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GL_268_0_1,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TArcBall::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GL_268_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArcBall::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GL_268_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TArcBall::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GL_268_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TArcBall::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GL_268_4_1,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GL_268_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GL_268_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GL_268_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GL_268_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArcBall::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GL_268_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TArcBall::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GL_268_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TArcBall::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GL_268_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TArcBall::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TArcBall",867,G__G__GL_268_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTViewerOpenGL(void) {
   /* TViewerOpenGL */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL));
   G__memfunc_setup("BuildComposite",1443,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GLLN_RootCsgcLcLBaseMesh),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TViewerOpenGL",1259,G__G__GL_269_2_0,105,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),-1,0,1,1,1,0,"U 'TVirtualPad' - 0 - pad",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PreferLocalFrame",1594,G__G__GL_269_3_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BeginScene",979,G__G__GL_269_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildingScene",1308,G__G__GL_269_5_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("EndScene",773,G__G__GL_269_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddObject",864,G__G__GL_269_7_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"u 'TBuffer3D' - 11 - buffer G - 'Bool_t' 0 0 addChildren",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddObject",864,G__G__GL_269_8_0,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"h - 'UInt_t' 0 - placedID u 'TBuffer3D' - 11 - buffer "
"G - 'Bool_t' 0 0 addChildren",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OpenComposite",1349,G__G__GL_269_9_0,121,-1,-1,0,2,1,1,0,
"u 'TBuffer3D' - 11 - buffer G - 'Bool_t' 0 0 addChildren",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CloseComposite",1449,G__G__GL_269_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddCompositeOp",1403,G__G__GL_269_1_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - operation",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleContainerButton",2155,G__G__GL_269_2_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - ev",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleContainerConfigure",2449,G__G__GL_269_3_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - ev",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleContainerKey",1816,G__G__GL_269_4_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - ev",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleContainerMotion",2149,G__G__GL_269_5_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - ev",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleContainerExpose",2147,G__G__GL_269_6_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - ev",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ModifyScene",1110,G__G__GL_269_7_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddValidatedObject",1774,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,4,0,
"h - 'UInt_t' 0 - placedID u 'TBuffer3D' - 11 - buffer "
"G - 'Bool_t' 0 - addChildren",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateViewer",1222,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawObjects",1112,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PrintObjects",1239,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MakeCurrent",1121,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SwapBuffers",1128,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Show",417,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UpdateRange",1104,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TGLSelection' - 10 - box",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TestSelection",1350,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GLLN_TGLSceneObject),-1,0,1,1,4,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CalculateViewports",1889,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CalculateViewvolumes",2100,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateCameras",1296,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MoveCenter",1016,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"i - 'Int_t' 0 - key",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,3,1,4,0,
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TViewerOpenGL",1259,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),-1,0,1,1,4,0,"u 'TViewerOpenGL' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),-1,1,1,1,4,0,"u 'TViewerOpenGL' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GL_269_5_3,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TViewerOpenGL::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GL_269_6_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TViewerOpenGL::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GL_269_7_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TViewerOpenGL::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GL_269_8_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TViewerOpenGL::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GL_269_9_3,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GL_269_0_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GL_269_1_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GL_269_2_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GL_269_3_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TViewerOpenGL::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GL_269_4_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TViewerOpenGL::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GL_269_5_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TViewerOpenGL::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GL_269_6_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TViewerOpenGL::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TViewerOpenGL",1385,G__G__GL_269_7_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGLWindow(void) {
   /* TGLWindow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GLLN_TGLWindow));
   G__memfunc_setup("TGLWindow",863,G__G__GL_278_1_0,105,G__get_linked_tagnum(&G__G__GLLN_TGLWindow),-1,0,2,1,1,0,
"k - 'Window_t' 0 - id U 'TGWindow' - 10 - parent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleConfigureNotify",2151,G__G__GL_278_2_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - event","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("HandleButton",1224,G__G__GL_278_3_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - event","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("HandleKey",885,G__G__GL_278_4_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - event","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("HandleMotion",1218,G__G__GL_278_5_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - event","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("HandleExpose",1216,G__G__GL_278_6_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - event","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Refresh",719,G__G__GL_278_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MakeCurrent",1121,G__G__GL_278_8_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGLWindow",863,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GLLN_TGLWindow),-1,0,1,1,4,0,"u 'TGLWindow' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GLLN_TGLWindow),-1,1,1,1,4,0,"u 'TGLWindow' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GL_278_1_1,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGLWindow::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GL_278_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLWindow::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GL_278_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGLWindow::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GL_278_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGLWindow::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GL_278_5_1,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GL_278_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GL_278_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GL_278_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GL_278_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLWindow::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GL_278_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLWindow::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GL_278_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGLWindow::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GL_278_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGLWindow::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGLWindow",989,G__G__GL_278_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTX11GL(void) {
   /* TX11GL */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GLLN_TX11GL));
   G__memfunc_setup("TX11GL",417,G__G__GL_322_1_0,105,G__get_linked_tagnum(&G__G__GLLN_TX11GL),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateGLWindow",1375,G__G__GL_322_2_0,107,-1,G__defined_typename("Window_t"),0,1,1,1,0,"k - 'Window_t' 0 - wind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CreateContext",1337,G__G__GL_322_3_0,107,-1,G__defined_typename("ULong_t"),0,1,1,1,0,"k - 'Window_t' 0 - wind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeleteContext",1336,G__G__GL_322_4_0,121,-1,-1,0,1,1,1,0,"k - 'ULong_t' 0 - ctx",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeCurrent",1121,G__G__GL_322_5_0,121,-1,-1,0,2,1,1,0,
"k - 'Window_t' 0 - wind k - 'ULong_t' 0 - ctx",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SwapBuffers",1128,G__G__GL_322_6_0,121,-1,-1,0,1,1,1,0,"k - 'Window_t' 0 - wind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GL_322_7_0,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TX11GL::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GL_322_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TX11GL::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GL_322_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TX11GL::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GL_322_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TX11GL::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GL_322_1_1,85,G__get_linked_tagnum(&G__G__GLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GL_322_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GL_322_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GL_322_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GL_322_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TX11GL::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GL_322_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TX11GL::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GL_322_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TX11GL::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GL_322_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TX11GL::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TX11GL",417,G__G__GL_322_9_1,(int)('i'),G__get_linked_tagnum(&G__G__GLLN_TX11GL),-1,0,1,1,1,0,"u 'TX11GL' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TX11GL",543,G__G__GL_322_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__GL_322_1_2,(int)('u'),G__get_linked_tagnum(&G__G__GLLN_TX11GL),-1,1,1,1,1,0,"u 'TX11GL' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__GL() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__GL() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__GL() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__GLLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__GLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__GLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TVirtualPad = { "TVirtualPad" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TBuffer3D = { "TBuffer3D" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TVirtualViewer3D = { "TVirtualViewer3D" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__GLLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__G__GLLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TPoint = { "TPoint" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TContextMenu = { "TContextMenu" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLSceneObject = { "TGLSceneObject" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLFrustum = { "TGLFrustum" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLSelection = { "TGLSelection" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLCamera = { "TGLCamera" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLRender = { "TGLRender" , 99 , -1 };
G__linked_taginfo G__G__GLLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__G__GLLN_RootCsg = { "RootCsg" , 110 , -1 };
G__linked_taginfo G__G__GLLN_RootCsgcLcLBaseMesh = { "RootCsg::BaseMesh" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLGeometryEditor = { "TGLGeometryEditor" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGShutterItem = { "TGShutterItem" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGShutter = { "TGShutter" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLRenderArea = { "TGLRenderArea" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLColorEditor = { "TGLColorEditor" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLSceneEditor = { "TGLSceneEditor" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLLightEditor = { "TGLLightEditor" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGMenuBar = { "TGMenuBar" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGCanvas = { "TGCanvas" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TArcBall = { "TArcBall" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TViewerOpenGL = { "TViewerOpenGL" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TViewerOpenGLcLcLEViews = { "TViewerOpenGL::EViews" , 101 , -1 };
G__linked_taginfo G__G__GLLN_TViewerOpenGLcLcLEAction = { "TViewerOpenGL::EAction" , 101 , -1 };
G__linked_taginfo G__G__GLLN_pairlEunsignedsPintcORootCsgcLcLBaseMeshmUgR = { "pair<unsigned int,RootCsg::BaseMesh*>" , 115 , -1 };
G__linked_taginfo G__G__GLLN_vectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgR = { "vector<pair<unsigned int,RootCsg::BaseMesh*>,allocator<pair<unsigned int,RootCsg::BaseMesh*> > >" , 99 , -1 };
G__linked_taginfo G__G__GLLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,RootCsg::BaseMesh*>,allocator<pair<unsigned int,RootCsg::BaseMesh*> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TViewerOpenGLcLcL277 = { "TViewerOpenGL::" , 115 , -1 };
G__linked_taginfo G__G__GLLN_TGLWindow = { "TGLWindow" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLMatView = { "TGLMatView" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGHSlider = { "TGHSlider" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGButton = { "TGButton" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TGLColorEditorcLcLELightMode = { "TGLColorEditor::ELightMode" , 101 , -1 };
G__linked_taginfo G__G__GLLN_TGLGeometryEditorcLcLdA = { "TGLGeometryEditor::$" , 101 , -1 };
G__linked_taginfo G__G__GLLN_TGLSceneEditorcLcLdA = { "TGLSceneEditor::$" , 101 , -1 };
G__linked_taginfo G__G__GLLN_TGLLightEditorcLcLEBuiltInLight = { "TGLLightEditor::EBuiltInLight" , 101 , -1 };
G__linked_taginfo G__G__GLLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__G__GLLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double,allocator<double> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GLLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G__GLLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GLLN_vectorlETGLMeshmUcOallocatorlETGLMeshmUgRsPgR = { "vector<TGLMesh*,allocator<TGLMesh*> >" , 99 , -1 };
G__linked_taginfo G__G__GLLN_reverse_iteratorlEvectorlETGLMeshmUcOallocatorlETGLMeshmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGLMesh*,allocator<TGLMesh*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GLLN_TVirtualGLImp = { "TVirtualGLImp" , 99 , -1 };
G__linked_taginfo G__G__GLLN_Display = { "Display" , 115 , -1 };
G__linked_taginfo G__G__GLLN_XVisualInfo = { "XVisualInfo" , 115 , -1 };
G__linked_taginfo G__G__GLLN_TX11GL = { "TX11GL" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__GL() {
  G__G__GLLN_TClass.tagnum = -1 ;
  G__G__GLLN_TBuffer.tagnum = -1 ;
  G__G__GLLN_TMemberInspector.tagnum = -1 ;
  G__G__GLLN_TObject.tagnum = -1 ;
  G__G__GLLN_TList.tagnum = -1 ;
  G__G__GLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__GLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GLLN_TVirtualPad.tagnum = -1 ;
  G__G__GLLN_TBuffer3D.tagnum = -1 ;
  G__G__GLLN_TVirtualViewer3D.tagnum = -1 ;
  G__G__GLLN_TQObject.tagnum = -1 ;
  G__G__GLLN_Event_t.tagnum = -1 ;
  G__G__GLLN_TGObject.tagnum = -1 ;
  G__G__GLLN_TGWindow.tagnum = -1 ;
  G__G__GLLN_TPoint.tagnum = -1 ;
  G__G__GLLN_TGFrame.tagnum = -1 ;
  G__G__GLLN_TGCompositeFrame.tagnum = -1 ;
  G__G__GLLN_TGLayoutHints.tagnum = -1 ;
  G__G__GLLN_TContextMenu.tagnum = -1 ;
  G__G__GLLN_TGVerticalFrame.tagnum = -1 ;
  G__G__GLLN_TGMainFrame.tagnum = -1 ;
  G__G__GLLN_TGLSceneObject.tagnum = -1 ;
  G__G__GLLN_TGLFrustum.tagnum = -1 ;
  G__G__GLLN_TGLSelection.tagnum = -1 ;
  G__G__GLLN_TGLCamera.tagnum = -1 ;
  G__G__GLLN_TGLRender.tagnum = -1 ;
  G__G__GLLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__G__GLLN_RootCsg.tagnum = -1 ;
  G__G__GLLN_RootCsgcLcLBaseMesh.tagnum = -1 ;
  G__G__GLLN_TGLGeometryEditor.tagnum = -1 ;
  G__G__GLLN_TGShutterItem.tagnum = -1 ;
  G__G__GLLN_TGShutter.tagnum = -1 ;
  G__G__GLLN_TGLRenderArea.tagnum = -1 ;
  G__G__GLLN_TGPopupMenu.tagnum = -1 ;
  G__G__GLLN_TGLColorEditor.tagnum = -1 ;
  G__G__GLLN_TGLSceneEditor.tagnum = -1 ;
  G__G__GLLN_TGLLightEditor.tagnum = -1 ;
  G__G__GLLN_TGMenuBar.tagnum = -1 ;
  G__G__GLLN_TGCanvas.tagnum = -1 ;
  G__G__GLLN_TArcBall.tagnum = -1 ;
  G__G__GLLN_TViewerOpenGL.tagnum = -1 ;
  G__G__GLLN_TViewerOpenGLcLcLEViews.tagnum = -1 ;
  G__G__GLLN_TViewerOpenGLcLcLEAction.tagnum = -1 ;
  G__G__GLLN_pairlEunsignedsPintcORootCsgcLcLBaseMeshmUgR.tagnum = -1 ;
  G__G__GLLN_vectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgR.tagnum = -1 ;
  G__G__GLLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GLLN_TViewerOpenGLcLcL277.tagnum = -1 ;
  G__G__GLLN_TGLWindow.tagnum = -1 ;
  G__G__GLLN_TGCheckButton.tagnum = -1 ;
  G__G__GLLN_TGNumberEntry.tagnum = -1 ;
  G__G__GLLN_TGLMatView.tagnum = -1 ;
  G__G__GLLN_TGHSlider.tagnum = -1 ;
  G__G__GLLN_TGButton.tagnum = -1 ;
  G__G__GLLN_TGLColorEditorcLcLELightMode.tagnum = -1 ;
  G__G__GLLN_TGLGeometryEditorcLcLdA.tagnum = -1 ;
  G__G__GLLN_TGLSceneEditorcLcLdA.tagnum = -1 ;
  G__G__GLLN_TGLLightEditorcLcLEBuiltInLight.tagnum = -1 ;
  G__G__GLLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__G__GLLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GLLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G__GLLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GLLN_vectorlETGLMeshmUcOallocatorlETGLMeshmUgRsPgR.tagnum = -1 ;
  G__G__GLLN_reverse_iteratorlEvectorlETGLMeshmUcOallocatorlETGLMeshmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GLLN_TVirtualGLImp.tagnum = -1 ;
  G__G__GLLN_Display.tagnum = -1 ;
  G__G__GLLN_XVisualInfo.tagnum = -1 ;
  G__G__GLLN_TX11GL.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__GL() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__GLLN_TClass);
   G__get_linked_tagnum(&G__G__GLLN_TBuffer);
   G__get_linked_tagnum(&G__G__GLLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__GLLN_TObject);
   G__get_linked_tagnum(&G__G__GLLN_TList);
   G__get_linked_tagnum(&G__G__GLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__GLLN_TVirtualPad);
   G__get_linked_tagnum(&G__G__GLLN_TBuffer3D);
   G__get_linked_tagnum(&G__G__GLLN_TVirtualViewer3D);
   G__get_linked_tagnum(&G__G__GLLN_TQObject);
   G__get_linked_tagnum(&G__G__GLLN_Event_t);
   G__get_linked_tagnum(&G__G__GLLN_TGObject);
   G__get_linked_tagnum(&G__G__GLLN_TGWindow);
   G__get_linked_tagnum(&G__G__GLLN_TPoint);
   G__get_linked_tagnum(&G__G__GLLN_TGFrame);
   G__get_linked_tagnum(&G__G__GLLN_TGCompositeFrame);
   G__get_linked_tagnum(&G__G__GLLN_TGLayoutHints);
   G__get_linked_tagnum(&G__G__GLLN_TContextMenu);
   G__get_linked_tagnum(&G__G__GLLN_TGVerticalFrame);
   G__get_linked_tagnum(&G__G__GLLN_TGMainFrame);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneObject),sizeof(TGLSceneObject),-1,64001,(char*)NULL,G__setup_memvarTGLSceneObject,G__setup_memfuncTGLSceneObject);
   G__get_linked_tagnum(&G__G__GLLN_TGLFrustum);
   G__get_linked_tagnum(&G__G__GLLN_TGLSelection);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GLLN_TGLCamera),sizeof(TGLCamera),-1,64002,(char*)NULL,G__setup_memvarTGLCamera,G__setup_memfuncTGLCamera);
   G__get_linked_tagnum(&G__G__GLLN_TGLRender);
   G__get_linked_tagnum(&G__G__GLLN_pairlEdoublecOdoublegR);
   G__get_linked_tagnum(&G__G__GLLN_RootCsg);
   G__get_linked_tagnum(&G__G__GLLN_RootCsgcLcLBaseMesh);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditor),sizeof(TGLGeometryEditor),-1,64000,(char*)NULL,G__setup_memvarTGLGeometryEditor,G__setup_memfuncTGLGeometryEditor);
   G__get_linked_tagnum(&G__G__GLLN_TGShutterItem);
   G__get_linked_tagnum(&G__G__GLLN_TGShutter);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GLLN_TGLRenderArea),sizeof(TGLRenderArea),-1,36608,(char*)NULL,G__setup_memvarTGLRenderArea,G__setup_memfuncTGLRenderArea);
   G__get_linked_tagnum(&G__G__GLLN_TGPopupMenu);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GLLN_TGLColorEditor),sizeof(TGLColorEditor),-1,65024,(char*)NULL,G__setup_memvarTGLColorEditor,G__setup_memfuncTGLColorEditor);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditor),sizeof(TGLSceneEditor),-1,64000,(char*)NULL,G__setup_memvarTGLSceneEditor,G__setup_memfuncTGLSceneEditor);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GLLN_TGLLightEditor),sizeof(TGLLightEditor),-1,61440,(char*)NULL,G__setup_memvarTGLLightEditor,G__setup_memfuncTGLLightEditor);
   G__get_linked_tagnum(&G__G__GLLN_TGMenuBar);
   G__get_linked_tagnum(&G__G__GLLN_TGCanvas);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GLLN_TArcBall),sizeof(TArcBall),-1,36352,(char*)NULL,G__setup_memvarTArcBall,G__setup_memfuncTArcBall);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGL),sizeof(TViewerOpenGL),-1,65024,(char*)NULL,G__setup_memvarTViewerOpenGL,G__setup_memfuncTViewerOpenGL);
   G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEViews);
   G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcLEAction);
   G__get_linked_tagnum(&G__G__GLLN_pairlEunsignedsPintcORootCsgcLcLBaseMeshmUgR);
   G__get_linked_tagnum(&G__G__GLLN_vectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgR);
   G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRcOallocatorlEpairlEunsignedsPintcORootCsgcLcLBaseMeshmUgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__GLLN_TViewerOpenGLcLcL277);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GLLN_TGLWindow),sizeof(TGLWindow),-1,65024,(char*)NULL,G__setup_memvarTGLWindow,G__setup_memfuncTGLWindow);
   G__get_linked_tagnum(&G__G__GLLN_TGCheckButton);
   G__get_linked_tagnum(&G__G__GLLN_TGNumberEntry);
   G__get_linked_tagnum(&G__G__GLLN_TGLMatView);
   G__get_linked_tagnum(&G__G__GLLN_TGHSlider);
   G__get_linked_tagnum(&G__G__GLLN_TGButton);
   G__get_linked_tagnum(&G__G__GLLN_TGLColorEditorcLcLELightMode);
   G__get_linked_tagnum(&G__G__GLLN_TGLGeometryEditorcLcLdA);
   G__get_linked_tagnum(&G__G__GLLN_TGLSceneEditorcLcLdA);
   G__get_linked_tagnum(&G__G__GLLN_TGLLightEditorcLcLEBuiltInLight);
   G__get_linked_tagnum(&G__G__GLLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__GLLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__GLLN_vectorlETGLMeshmUcOallocatorlETGLMeshmUgRsPgR);
   G__get_linked_tagnum(&G__G__GLLN_reverse_iteratorlEvectorlETGLMeshmUcOallocatorlETGLMeshmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__GLLN_TVirtualGLImp);
   G__get_linked_tagnum(&G__G__GLLN_Display);
   G__get_linked_tagnum(&G__G__GLLN_XVisualInfo);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GLLN_TX11GL),sizeof(TX11GL),-1,256,(char*)NULL,G__setup_memvarTX11GL,G__setup_memfuncTX11GL);
}
extern "C" void G__cpp_setupG__GL(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__GL()");
  G__set_cpp_environmentG__GL();
  G__cpp_setup_tagtableG__GL();

  G__cpp_setup_inheritanceG__GL();

  G__cpp_setup_typetableG__GL();

  G__cpp_setup_memvarG__GL();

  G__cpp_setup_memfuncG__GL();
  G__cpp_setup_globalG__GL();
  G__cpp_setup_funcG__GL();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__GL();
  return;
}
class G__cpp_setup_initG__GL {
  public:
    G__cpp_setup_initG__GL() { G__add_setup_func("G__GL",(G__incsetup)(&G__cpp_setupG__GL)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__GL() { G__remove_setup_func("G__GL"); }
};
G__cpp_setup_initG__GL G__cpp_setup_initializerG__GL;

