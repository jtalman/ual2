//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:31:53 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__Proof.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TProofDrawListOfGraphs::Point3D_t TProofDrawListOfGraphs__Point3D_t;
      #else
      class TProofDrawListOfGraphs__Point3D_t  {
         public:
         //friend XX;
         double fX; //
         double fY; //
         double fZ; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TProofVectorContainer< ::TProofDrawListOfGraphs::Point3D_t > TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR;
      #else
      class TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR  :  public ::TNamed {
         public:
         //friend XX;
         // To force the creation of a virtual table.
         virtual ~TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR() {};
         vector< ::TProofDrawListOfGraphs::Point3D_t >* fVector; //vector
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TProofDrawListOfPolyMarkers3D::Point4D_t TProofDrawListOfPolyMarkers3D__Point4D_t;
      #else
      class TProofDrawListOfPolyMarkers3D__Point4D_t  {
         public:
         //friend XX;
         double fX; //
         double fY; //
         double fZ; //
         double fT; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TProofVectorContainer< ::TProofDrawListOfPolyMarkers3D::Point4D_t > TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR;
      #else
      class TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR  :  public ::TNamed {
         public:
         //friend XX;
         // To force the creation of a virtual table.
         virtual ~TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR() {};
         vector< ::TProofDrawListOfPolyMarkers3D::Point4D_t >* fVector; //vector
      };
      #endif

   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TProofDebug_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void TProofDebug_Dictionary();
   static TClass *TProofDebug_IsA(const void*);
   static void *new_TProofDebug(void *p = 0);
   static void *newArray_TProofDebug(Long_t size);
   static void delete_TProofDebug(void *p);
   static void deleteArray_TProofDebug(void *p);
   static void destruct_TProofDebug(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDebug*)
   {
      ::TProofDebug *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDebug", "proof/inc/TProofDebug.h", 28,
                  typeid(::TProofDebug), DefineBehavior(ptr, ptr),
                  0, &TProofDebug_Dictionary, &TProofDebug_IsA, 0,
                  sizeof(::TProofDebug) );
      instance.SetNew(&new_TProofDebug);
      instance.SetNewArray(&newArray_TProofDebug);
      instance.SetDelete(&delete_TProofDebug);
      instance.SetDeleteArray(&deleteArray_TProofDebug);
      instance.SetDestructor(&destruct_TProofDebug);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDebug*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TProofDebug_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::TProofDebug*)0x0)->GetClass();
   }

}

namespace ROOT {
   void TEventIter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TEventIter_IsA(const void*);
   static void delete_TEventIter(void *p);
   static void deleteArray_TEventIter(void *p);
   static void destruct_TEventIter(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TEventIter*)
   {
      ::TEventIter *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TEventIter", ::TEventIter::Class_Version(), "proof/inc/TEventIter.h", 41,
                  typeid(::TEventIter), DefineBehavior(ptr, ptr),
                  &::TEventIter::Dictionary, &TEventIter_IsA, 4,
                  sizeof(::TEventIter) );
      instance.SetDelete(&delete_TEventIter);
      instance.SetDeleteArray(&deleteArray_TEventIter);
      instance.SetDestructor(&destruct_TEventIter);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TEventIter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TEventIterObj_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TEventIterObj_IsA(const void*);
   static void *new_TEventIterObj(void *p = 0);
   static void *newArray_TEventIterObj(Long_t size);
   static void delete_TEventIterObj(void *p);
   static void deleteArray_TEventIterObj(void *p);
   static void destruct_TEventIterObj(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TEventIterObj*)
   {
      ::TEventIterObj *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TEventIterObj", ::TEventIterObj::Class_Version(), "proof/inc/TEventIter.h", 83,
                  typeid(::TEventIterObj), DefineBehavior(ptr, ptr),
                  &::TEventIterObj::Dictionary, &TEventIterObj_IsA, 4,
                  sizeof(::TEventIterObj) );
      instance.SetNew(&new_TEventIterObj);
      instance.SetNewArray(&newArray_TEventIterObj);
      instance.SetDelete(&delete_TEventIterObj);
      instance.SetDeleteArray(&deleteArray_TEventIterObj);
      instance.SetDestructor(&destruct_TEventIterObj);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TEventIterObj*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TEventIterTree_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TEventIterTree_IsA(const void*);
   static void *new_TEventIterTree(void *p = 0);
   static void *newArray_TEventIterTree(Long_t size);
   static void delete_TEventIterTree(void *p);
   static void deleteArray_TEventIterTree(void *p);
   static void destruct_TEventIterTree(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TEventIterTree*)
   {
      ::TEventIterTree *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TEventIterTree", ::TEventIterTree::Class_Version(), "proof/inc/TEventIter.h", 104,
                  typeid(::TEventIterTree), DefineBehavior(ptr, ptr),
                  &::TEventIterTree::Dictionary, &TEventIterTree_IsA, 4,
                  sizeof(::TEventIterTree) );
      instance.SetNew(&new_TEventIterTree);
      instance.SetNewArray(&newArray_TEventIterTree);
      instance.SetDelete(&delete_TEventIterTree);
      instance.SetDeleteArray(&deleteArray_TEventIterTree);
      instance.SetDestructor(&destruct_TEventIterTree);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TEventIterTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSlave_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSlave_IsA(const void*);
   static void delete_TSlave(void *p);
   static void deleteArray_TSlave(void *p);
   static void destruct_TSlave(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSlave*)
   {
      ::TSlave *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSlave", ::TSlave::Class_Version(), "proof/inc/TSlave.h", 40,
                  typeid(::TSlave), DefineBehavior(ptr, ptr),
                  &::TSlave::Dictionary, &TSlave_IsA, 0,
                  sizeof(::TSlave) );
      instance.SetDelete(&delete_TSlave);
      instance.SetDeleteArray(&deleteArray_TSlave);
      instance.SetDestructor(&destruct_TSlave);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSlave*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TVirtualPacketizer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TVirtualPacketizer_IsA(const void*);
   static void delete_TVirtualPacketizer(void *p);
   static void deleteArray_TVirtualPacketizer(void *p);
   static void destruct_TVirtualPacketizer(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TVirtualPacketizer*)
   {
      ::TVirtualPacketizer *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TVirtualPacketizer", ::TVirtualPacketizer::Class_Version(), "proof/inc/TVirtualPacketizer.h", 42,
                  typeid(::TVirtualPacketizer), DefineBehavior(ptr, ptr),
                  &::TVirtualPacketizer::Dictionary, &TVirtualPacketizer_IsA, 4,
                  sizeof(::TVirtualPacketizer) );
      instance.SetDelete(&delete_TVirtualPacketizer);
      instance.SetDeleteArray(&deleteArray_TVirtualPacketizer);
      instance.SetDestructor(&destruct_TVirtualPacketizer);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TVirtualPacketizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProof_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProof_IsA(const void*);
   static void delete_TProof(void *p);
   static void deleteArray_TProof(void *p);
   static void destruct_TProof(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProof*)
   {
      ::TProof *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProof", ::TProof::Class_Version(), "proof/inc/TProof.h", 113,
                  typeid(::TProof), DefineBehavior(ptr, ptr),
                  &::TProof::Dictionary, &TProof_IsA, 0,
                  sizeof(::TProof) );
      instance.SetDelete(&delete_TProof);
      instance.SetDeleteArray(&deleteArray_TProof);
      instance.SetDestructor(&destruct_TProof);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProof*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDrawFeedback_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDrawFeedback_IsA(const void*);
   static void *new_TDrawFeedback(void *p = 0);
   static void *newArray_TDrawFeedback(Long_t size);
   static void delete_TDrawFeedback(void *p);
   static void deleteArray_TDrawFeedback(void *p);
   static void destruct_TDrawFeedback(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDrawFeedback*)
   {
      ::TDrawFeedback *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDrawFeedback", ::TDrawFeedback::Class_Version(), "proof/inc/TDrawFeedback.h", 33,
                  typeid(::TDrawFeedback), DefineBehavior(ptr, ptr),
                  &::TDrawFeedback::Dictionary, &TDrawFeedback_IsA, 4,
                  sizeof(::TDrawFeedback) );
      instance.SetNew(&new_TDrawFeedback);
      instance.SetNewArray(&newArray_TDrawFeedback);
      instance.SetDelete(&delete_TDrawFeedback);
      instance.SetDeleteArray(&deleteArray_TDrawFeedback);
      instance.SetDestructor(&destruct_TDrawFeedback);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDrawFeedback*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofPlayer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofPlayer_IsA(const void*);
   static void *new_TProofPlayer(void *p = 0);
   static void *newArray_TProofPlayer(Long_t size);
   static void delete_TProofPlayer(void *p);
   static void deleteArray_TProofPlayer(void *p);
   static void destruct_TProofPlayer(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofPlayer*)
   {
      ::TProofPlayer *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofPlayer", ::TProofPlayer::Class_Version(), "proof/inc/TProofPlayer.h", 59,
                  typeid(::TProofPlayer), DefineBehavior(ptr, ptr),
                  &::TProofPlayer::Dictionary, &TProofPlayer_IsA, 4,
                  sizeof(::TProofPlayer) );
      instance.SetNew(&new_TProofPlayer);
      instance.SetNewArray(&newArray_TProofPlayer);
      instance.SetDelete(&delete_TProofPlayer);
      instance.SetDeleteArray(&deleteArray_TProofPlayer);
      instance.SetDestructor(&destruct_TProofPlayer);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofPlayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofServ_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofServ_IsA(const void*);
   static void delete_TProofServ(void *p);
   static void deleteArray_TProofServ(void *p);
   static void destruct_TProofServ(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofServ*)
   {
      ::TProofServ *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofServ", ::TProofServ::Class_Version(), "proof/inc/TProofServ.h", 48,
                  typeid(::TProofServ), DefineBehavior(ptr, ptr),
                  &::TProofServ::Dictionary, &TProofServ_IsA, 0,
                  sizeof(::TProofServ) );
      instance.SetDelete(&delete_TProofServ);
      instance.SetDeleteArray(&deleteArray_TProofServ);
      instance.SetDestructor(&destruct_TProofServ);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofServ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TStatus_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TStatus_IsA(const void*);
   static void *new_TStatus(void *p = 0);
   static void *newArray_TStatus(Long_t size);
   static void delete_TStatus(void *p);
   static void deleteArray_TStatus(void *p);
   static void destruct_TStatus(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TStatus*)
   {
      ::TStatus *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TStatus", ::TStatus::Class_Version(), "proof/inc/TStatus.h", 37,
                  typeid(::TStatus), DefineBehavior(ptr, ptr),
                  &::TStatus::Dictionary, &TStatus_IsA, 4,
                  sizeof(::TStatus) );
      instance.SetNew(&new_TStatus);
      instance.SetNewArray(&newArray_TStatus);
      instance.SetDelete(&delete_TStatus);
      instance.SetDeleteArray(&deleteArray_TStatus);
      instance.SetDestructor(&destruct_TStatus);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofPlayerLocal_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofPlayerLocal_IsA(const void*);
   static void *new_TProofPlayerLocal(void *p = 0);
   static void *newArray_TProofPlayerLocal(Long_t size);
   static void delete_TProofPlayerLocal(void *p);
   static void deleteArray_TProofPlayerLocal(void *p);
   static void destruct_TProofPlayerLocal(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofPlayerLocal*)
   {
      ::TProofPlayerLocal *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofPlayerLocal", ::TProofPlayerLocal::Class_Version(), "proof/inc/TProofPlayer.h", 138,
                  typeid(::TProofPlayerLocal), DefineBehavior(ptr, ptr),
                  &::TProofPlayerLocal::Dictionary, &TProofPlayerLocal_IsA, 4,
                  sizeof(::TProofPlayerLocal) );
      instance.SetNew(&new_TProofPlayerLocal);
      instance.SetNewArray(&newArray_TProofPlayerLocal);
      instance.SetDelete(&delete_TProofPlayerLocal);
      instance.SetDeleteArray(&deleteArray_TProofPlayerLocal);
      instance.SetDestructor(&destruct_TProofPlayerLocal);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofPlayerLocal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofPlayerRemote_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofPlayerRemote_IsA(const void*);
   static void *new_TProofPlayerRemote(void *p = 0);
   static void *newArray_TProofPlayerRemote(Long_t size);
   static void delete_TProofPlayerRemote(void *p);
   static void deleteArray_TProofPlayerRemote(void *p);
   static void destruct_TProofPlayerRemote(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofPlayerRemote*)
   {
      ::TProofPlayerRemote *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofPlayerRemote", ::TProofPlayerRemote::Class_Version(), "proof/inc/TProofPlayer.h", 149,
                  typeid(::TProofPlayerRemote), DefineBehavior(ptr, ptr),
                  &::TProofPlayerRemote::Dictionary, &TProofPlayerRemote_IsA, 4,
                  sizeof(::TProofPlayerRemote) );
      instance.SetNew(&new_TProofPlayerRemote);
      instance.SetNewArray(&newArray_TProofPlayerRemote);
      instance.SetDelete(&delete_TProofPlayerRemote);
      instance.SetDeleteArray(&deleteArray_TProofPlayerRemote);
      instance.SetDestructor(&destruct_TProofPlayerRemote);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofPlayerRemote*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofPlayerSlave_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofPlayerSlave_IsA(const void*);
   static void *new_TProofPlayerSlave(void *p = 0);
   static void *newArray_TProofPlayerSlave(Long_t size);
   static void delete_TProofPlayerSlave(void *p);
   static void deleteArray_TProofPlayerSlave(void *p);
   static void destruct_TProofPlayerSlave(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofPlayerSlave*)
   {
      ::TProofPlayerSlave *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofPlayerSlave", ::TProofPlayerSlave::Class_Version(), "proof/inc/TProofPlayer.h", 198,
                  typeid(::TProofPlayerSlave), DefineBehavior(ptr, ptr),
                  &::TProofPlayerSlave::Dictionary, &TProofPlayerSlave_IsA, 4,
                  sizeof(::TProofPlayerSlave) );
      instance.SetNew(&new_TProofPlayerSlave);
      instance.SetNewArray(&newArray_TProofPlayerSlave);
      instance.SetDelete(&delete_TProofPlayerSlave);
      instance.SetDeleteArray(&deleteArray_TProofPlayerSlave);
      instance.SetDestructor(&destruct_TProofPlayerSlave);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofPlayerSlave*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofPlayerSuperMaster_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofPlayerSuperMaster_IsA(const void*);
   static void *new_TProofPlayerSuperMaster(void *p = 0);
   static void *newArray_TProofPlayerSuperMaster(Long_t size);
   static void delete_TProofPlayerSuperMaster(void *p);
   static void deleteArray_TProofPlayerSuperMaster(void *p);
   static void destruct_TProofPlayerSuperMaster(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofPlayerSuperMaster*)
   {
      ::TProofPlayerSuperMaster *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofPlayerSuperMaster", ::TProofPlayerSuperMaster::Class_Version(), "proof/inc/TProofPlayer.h", 224,
                  typeid(::TProofPlayerSuperMaster), DefineBehavior(ptr, ptr),
                  &::TProofPlayerSuperMaster::Dictionary, &TProofPlayerSuperMaster_IsA, 4,
                  sizeof(::TProofPlayerSuperMaster) );
      instance.SetNew(&new_TProofPlayerSuperMaster);
      instance.SetNewArray(&newArray_TProofPlayerSuperMaster);
      instance.SetDelete(&delete_TProofPlayerSuperMaster);
      instance.SetDeleteArray(&deleteArray_TProofPlayerSuperMaster);
      instance.SetDestructor(&destruct_TProofPlayerSuperMaster);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofPlayerSuperMaster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPerfEvent_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPerfEvent_IsA(const void*);
   static void *new_TPerfEvent(void *p = 0);
   static void *newArray_TPerfEvent(Long_t size);
   static void delete_TPerfEvent(void *p);
   static void deleteArray_TPerfEvent(void *p);
   static void destruct_TPerfEvent(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPerfEvent*)
   {
      ::TPerfEvent *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPerfEvent", ::TPerfEvent::Class_Version(), "proof/inc/TPerfStats.h", 45,
                  typeid(::TPerfEvent), DefineBehavior(ptr, ptr),
                  &::TPerfEvent::Dictionary, &TPerfEvent_IsA, 4,
                  sizeof(::TPerfEvent) );
      instance.SetNew(&new_TPerfEvent);
      instance.SetNewArray(&newArray_TPerfEvent);
      instance.SetDelete(&delete_TPerfEvent);
      instance.SetDeleteArray(&deleteArray_TPerfEvent);
      instance.SetDestructor(&destruct_TPerfEvent);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPerfEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPerfStats_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPerfStats_IsA(const void*);
   static void delete_TPerfStats(void *p);
   static void deleteArray_TPerfStats(void *p);
   static void destruct_TPerfStats(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPerfStats*)
   {
      ::TPerfStats *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPerfStats", ::TPerfStats::Class_Version(), "proof/inc/TPerfStats.h", 77,
                  typeid(::TPerfStats), DefineBehavior(ptr, ptr),
                  &::TPerfStats::Dictionary, &TPerfStats_IsA, 0,
                  sizeof(::TPerfStats) );
      instance.SetDelete(&delete_TPerfStats);
      instance.SetDeleteArray(&deleteArray_TPerfStats);
      instance.SetDestructor(&destruct_TPerfStats);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPerfStats*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPacketizer2_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPacketizer2_IsA(const void*);
   static void delete_TPacketizer2(void *p);
   static void deleteArray_TPacketizer2(void *p);
   static void destruct_TPacketizer2(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPacketizer2*)
   {
      ::TPacketizer2 *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPacketizer2", ::TPacketizer2::Class_Version(), "proof/inc/TPacketizer2.h", 41,
                  typeid(::TPacketizer2), DefineBehavior(ptr, ptr),
                  &::TPacketizer2::Dictionary, &TPacketizer2_IsA, 4,
                  sizeof(::TPacketizer2) );
      instance.SetDelete(&delete_TPacketizer2);
      instance.SetDeleteArray(&deleteArray_TPacketizer2);
      instance.SetDestructor(&destruct_TPacketizer2);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPacketizer2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TCondor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCondor_IsA(const void*);
   static void *new_TCondor(void *p = 0);
   static void *newArray_TCondor(Long_t size);
   static void delete_TCondor(void *p);
   static void deleteArray_TCondor(void *p);
   static void destruct_TCondor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCondor*)
   {
      ::TCondor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCondor", ::TCondor::Class_Version(), "proof/inc/TCondor.h", 57,
                  typeid(::TCondor), DefineBehavior(ptr, ptr),
                  &::TCondor::Dictionary, &TCondor_IsA, 4,
                  sizeof(::TCondor) );
      instance.SetNew(&new_TCondor);
      instance.SetNewArray(&newArray_TCondor);
      instance.SetDelete(&delete_TCondor);
      instance.SetDeleteArray(&deleteArray_TCondor);
      instance.SetDestructor(&destruct_TCondor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCondor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSlaveInfo_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSlaveInfo_IsA(const void*);
   static void *new_TSlaveInfo(void *p = 0);
   static void *newArray_TSlaveInfo(Long_t size);
   static void delete_TSlaveInfo(void *p);
   static void deleteArray_TSlaveInfo(void *p);
   static void destruct_TSlaveInfo(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSlaveInfo*)
   {
      ::TSlaveInfo *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSlaveInfo", ::TSlaveInfo::Class_Version(), "proof/inc/TProof.h", 86,
                  typeid(::TSlaveInfo), DefineBehavior(ptr, ptr),
                  &::TSlaveInfo::Dictionary, &TSlaveInfo_IsA, 4,
                  sizeof(::TSlaveInfo) );
      instance.SetNew(&new_TSlaveInfo);
      instance.SetNewArray(&newArray_TSlaveInfo);
      instance.SetDelete(&delete_TSlaveInfo);
      instance.SetDeleteArray(&deleteArray_TSlaveInfo);
      instance.SetDestructor(&destruct_TSlaveInfo);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSlaveInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPacketizer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPacketizer_IsA(const void*);
   static void delete_TPacketizer(void *p);
   static void deleteArray_TPacketizer(void *p);
   static void destruct_TPacketizer(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPacketizer*)
   {
      ::TPacketizer *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPacketizer", ::TPacketizer::Class_Version(), "proof/inc/TPacketizer.h", 40,
                  typeid(::TPacketizer), DefineBehavior(ptr, ptr),
                  &::TPacketizer::Dictionary, &TPacketizer_IsA, 4,
                  sizeof(::TPacketizer) );
      instance.SetDelete(&delete_TPacketizer);
      instance.SetDeleteArray(&deleteArray_TPacketizer);
      instance.SetDestructor(&destruct_TPacketizer);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPacketizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofCondor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofCondor_IsA(const void*);
   static void delete_TProofCondor(void *p);
   static void deleteArray_TProofCondor(void *p);
   static void destruct_TProofCondor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofCondor*)
   {
      ::TProofCondor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofCondor", ::TProofCondor::Class_Version(), "proof/inc/TProof.h", 364,
                  typeid(::TProofCondor), DefineBehavior(ptr, ptr),
                  &::TProofCondor::Dictionary, &TProofCondor_IsA, 0,
                  sizeof(::TProofCondor) );
      instance.SetDelete(&delete_TProofCondor);
      instance.SetDeleteArray(&deleteArray_TProofCondor);
      instance.SetDestructor(&destruct_TProofCondor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofCondor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofSuperMaster_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofSuperMaster_IsA(const void*);
   static void delete_TProofSuperMaster(void *p);
   static void deleteArray_TProofSuperMaster(void *p);
   static void destruct_TProofSuperMaster(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofSuperMaster*)
   {
      ::TProofSuperMaster *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofSuperMaster", ::TProofSuperMaster::Class_Version(), "proof/inc/TProof.h", 387,
                  typeid(::TProofSuperMaster), DefineBehavior(ptr, ptr),
                  &::TProofSuperMaster::Dictionary, &TProofSuperMaster_IsA, 0,
                  sizeof(::TProofSuperMaster) );
      instance.SetDelete(&delete_TProofSuperMaster);
      instance.SetDeleteArray(&deleteArray_TProofSuperMaster);
      instance.SetDestructor(&destruct_TProofSuperMaster);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofSuperMaster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSetProxy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSetProxy_IsA(const void*);
   static void *new_TDSetProxy(void *p = 0);
   static void *newArray_TDSetProxy(Long_t size);
   static void delete_TDSetProxy(void *p);
   static void deleteArray_TDSetProxy(void *p);
   static void destruct_TDSetProxy(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDSetProxy*)
   {
      ::TDSetProxy *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDSetProxy", ::TDSetProxy::Class_Version(), "proof/inc/TDSetProxy.h", 31,
                  typeid(::TDSetProxy), DefineBehavior(ptr, ptr),
                  &::TDSetProxy::Dictionary, &TDSetProxy_IsA, 4,
                  sizeof(::TDSetProxy) );
      instance.SetNew(&new_TDSetProxy);
      instance.SetNewArray(&newArray_TDSetProxy);
      instance.SetDelete(&delete_TDSetProxy);
      instance.SetDeleteArray(&deleteArray_TDSetProxy);
      instance.SetDestructor(&destruct_TDSetProxy);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDSetProxy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TCondorSlave_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCondorSlave_IsA(const void*);
   static void *new_TCondorSlave(void *p = 0);
   static void *newArray_TCondorSlave(Long_t size);
   static void delete_TCondorSlave(void *p);
   static void deleteArray_TCondorSlave(void *p);
   static void destruct_TCondorSlave(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCondorSlave*)
   {
      ::TCondorSlave *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCondorSlave", ::TCondorSlave::Class_Version(), "proof/inc/TCondor.h", 39,
                  typeid(::TCondorSlave), DefineBehavior(ptr, ptr),
                  &::TCondorSlave::Dictionary, &TCondorSlave_IsA, 4,
                  sizeof(::TCondorSlave) );
      instance.SetNew(&new_TCondorSlave);
      instance.SetNewArray(&newArray_TCondorSlave);
      instance.SetDelete(&delete_TCondorSlave);
      instance.SetDeleteArray(&deleteArray_TCondorSlave);
      instance.SetDestructor(&destruct_TCondorSlave);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCondorSlave*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofLimitsFinder_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofLimitsFinder_IsA(const void*);
   static void *new_TProofLimitsFinder(void *p = 0);
   static void *newArray_TProofLimitsFinder(Long_t size);
   static void delete_TProofLimitsFinder(void *p);
   static void deleteArray_TProofLimitsFinder(void *p);
   static void destruct_TProofLimitsFinder(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofLimitsFinder*)
   {
      ::TProofLimitsFinder *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofLimitsFinder", ::TProofLimitsFinder::Class_Version(), "proof/inc/TProofLimitsFinder.h", 30,
                  typeid(::TProofLimitsFinder), DefineBehavior(ptr, ptr),
                  &::TProofLimitsFinder::Dictionary, &TProofLimitsFinder_IsA, 0,
                  sizeof(::TProofLimitsFinder) );
      instance.SetNew(&new_TProofLimitsFinder);
      instance.SetNewArray(&newArray_TProofLimitsFinder);
      instance.SetDelete(&delete_TProofLimitsFinder);
      instance.SetDeleteArray(&deleteArray_TProofLimitsFinder);
      instance.SetDestructor(&destruct_TProofLimitsFinder);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofLimitsFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofDraw_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofDraw_IsA(const void*);
   static void delete_TProofDraw(void *p);
   static void deleteArray_TProofDraw(void *p);
   static void destruct_TProofDraw(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDraw*)
   {
      ::TProofDraw *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDraw", ::TProofDraw::Class_Version(), "proof/inc/TProofDraw.h", 49,
                  typeid(::TProofDraw), DefineBehavior(ptr, ptr),
                  &::TProofDraw::Dictionary, &TProofDraw_IsA, 4,
                  sizeof(::TProofDraw) );
      instance.SetDelete(&delete_TProofDraw);
      instance.SetDeleteArray(&deleteArray_TProofDraw);
      instance.SetDestructor(&destruct_TProofDraw);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDraw*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofDrawHist_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofDrawHist_IsA(const void*);
   static void *new_TProofDrawHist(void *p = 0);
   static void *newArray_TProofDrawHist(Long_t size);
   static void delete_TProofDrawHist(void *p);
   static void deleteArray_TProofDrawHist(void *p);
   static void destruct_TProofDrawHist(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDrawHist*)
   {
      ::TProofDrawHist *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDrawHist", ::TProofDrawHist::Class_Version(), "proof/inc/TProofDraw.h", 90,
                  typeid(::TProofDrawHist), DefineBehavior(ptr, ptr),
                  &::TProofDrawHist::Dictionary, &TProofDrawHist_IsA, 4,
                  sizeof(::TProofDrawHist) );
      instance.SetNew(&new_TProofDrawHist);
      instance.SetNewArray(&newArray_TProofDrawHist);
      instance.SetDelete(&delete_TProofDrawHist);
      instance.SetDeleteArray(&deleteArray_TProofDrawHist);
      instance.SetDestructor(&destruct_TProofDrawHist);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDrawHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofDrawEventList_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofDrawEventList_IsA(const void*);
   static void *new_TProofDrawEventList(void *p = 0);
   static void *newArray_TProofDrawEventList(Long_t size);
   static void delete_TProofDrawEventList(void *p);
   static void deleteArray_TProofDrawEventList(void *p);
   static void destruct_TProofDrawEventList(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDrawEventList*)
   {
      ::TProofDrawEventList *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDrawEventList", ::TProofDrawEventList::Class_Version(), "proof/inc/TProofDraw.h", 111,
                  typeid(::TProofDrawEventList), DefineBehavior(ptr, ptr),
                  &::TProofDrawEventList::Dictionary, &TProofDrawEventList_IsA, 4,
                  sizeof(::TProofDrawEventList) );
      instance.SetNew(&new_TProofDrawEventList);
      instance.SetNewArray(&newArray_TProofDrawEventList);
      instance.SetDelete(&delete_TProofDrawEventList);
      instance.SetDeleteArray(&deleteArray_TProofDrawEventList);
      instance.SetDestructor(&destruct_TProofDrawEventList);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDrawEventList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofDrawProfile_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofDrawProfile_IsA(const void*);
   static void *new_TProofDrawProfile(void *p = 0);
   static void *newArray_TProofDrawProfile(Long_t size);
   static void delete_TProofDrawProfile(void *p);
   static void deleteArray_TProofDrawProfile(void *p);
   static void destruct_TProofDrawProfile(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDrawProfile*)
   {
      ::TProofDrawProfile *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDrawProfile", ::TProofDrawProfile::Class_Version(), "proof/inc/TProofDraw.h", 132,
                  typeid(::TProofDrawProfile), DefineBehavior(ptr, ptr),
                  &::TProofDrawProfile::Dictionary, &TProofDrawProfile_IsA, 4,
                  sizeof(::TProofDrawProfile) );
      instance.SetNew(&new_TProofDrawProfile);
      instance.SetNewArray(&newArray_TProofDrawProfile);
      instance.SetDelete(&delete_TProofDrawProfile);
      instance.SetDeleteArray(&deleteArray_TProofDrawProfile);
      instance.SetDestructor(&destruct_TProofDrawProfile);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDrawProfile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofDrawProfile2D_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofDrawProfile2D_IsA(const void*);
   static void *new_TProofDrawProfile2D(void *p = 0);
   static void *newArray_TProofDrawProfile2D(Long_t size);
   static void delete_TProofDrawProfile2D(void *p);
   static void deleteArray_TProofDrawProfile2D(void *p);
   static void destruct_TProofDrawProfile2D(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDrawProfile2D*)
   {
      ::TProofDrawProfile2D *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDrawProfile2D", ::TProofDrawProfile2D::Class_Version(), "proof/inc/TProofDraw.h", 150,
                  typeid(::TProofDrawProfile2D), DefineBehavior(ptr, ptr),
                  &::TProofDrawProfile2D::Dictionary, &TProofDrawProfile2D_IsA, 4,
                  sizeof(::TProofDrawProfile2D) );
      instance.SetNew(&new_TProofDrawProfile2D);
      instance.SetNewArray(&newArray_TProofDrawProfile2D);
      instance.SetDelete(&delete_TProofDrawProfile2D);
      instance.SetDeleteArray(&deleteArray_TProofDrawProfile2D);
      instance.SetDestructor(&destruct_TProofDrawProfile2D);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDrawProfile2D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofDrawGraph_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofDrawGraph_IsA(const void*);
   static void *new_TProofDrawGraph(void *p = 0);
   static void *newArray_TProofDrawGraph(Long_t size);
   static void delete_TProofDrawGraph(void *p);
   static void deleteArray_TProofDrawGraph(void *p);
   static void destruct_TProofDrawGraph(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDrawGraph*)
   {
      ::TProofDrawGraph *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDrawGraph", ::TProofDrawGraph::Class_Version(), "proof/inc/TProofDraw.h", 168,
                  typeid(::TProofDrawGraph), DefineBehavior(ptr, ptr),
                  &::TProofDrawGraph::Dictionary, &TProofDrawGraph_IsA, 4,
                  sizeof(::TProofDrawGraph) );
      instance.SetNew(&new_TProofDrawGraph);
      instance.SetNewArray(&newArray_TProofDrawGraph);
      instance.SetDelete(&delete_TProofDrawGraph);
      instance.SetDeleteArray(&deleteArray_TProofDrawGraph);
      instance.SetDestructor(&destruct_TProofDrawGraph);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDrawGraph*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofDrawPolyMarker3D_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofDrawPolyMarker3D_IsA(const void*);
   static void *new_TProofDrawPolyMarker3D(void *p = 0);
   static void *newArray_TProofDrawPolyMarker3D(Long_t size);
   static void delete_TProofDrawPolyMarker3D(void *p);
   static void deleteArray_TProofDrawPolyMarker3D(void *p);
   static void destruct_TProofDrawPolyMarker3D(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDrawPolyMarker3D*)
   {
      ::TProofDrawPolyMarker3D *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDrawPolyMarker3D", ::TProofDrawPolyMarker3D::Class_Version(), "proof/inc/TProofDraw.h", 185,
                  typeid(::TProofDrawPolyMarker3D), DefineBehavior(ptr, ptr),
                  &::TProofDrawPolyMarker3D::Dictionary, &TProofDrawPolyMarker3D_IsA, 4,
                  sizeof(::TProofDrawPolyMarker3D) );
      instance.SetNew(&new_TProofDrawPolyMarker3D);
      instance.SetNewArray(&newArray_TProofDrawPolyMarker3D);
      instance.SetDelete(&delete_TProofDrawPolyMarker3D);
      instance.SetDeleteArray(&deleteArray_TProofDrawPolyMarker3D);
      instance.SetDestructor(&destruct_TProofDrawPolyMarker3D);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDrawPolyMarker3D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofDrawListOfGraphs_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofDrawListOfGraphs_IsA(const void*);
   static void *new_TProofDrawListOfGraphs(void *p = 0);
   static void *newArray_TProofDrawListOfGraphs(Long_t size);
   static void delete_TProofDrawListOfGraphs(void *p);
   static void deleteArray_TProofDrawListOfGraphs(void *p);
   static void destruct_TProofDrawListOfGraphs(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDrawListOfGraphs*)
   {
      ::TProofDrawListOfGraphs *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDrawListOfGraphs", ::TProofDrawListOfGraphs::Class_Version(), "proof/inc/TProofDraw.h", 220,
                  typeid(::TProofDrawListOfGraphs), DefineBehavior(ptr, ptr),
                  &::TProofDrawListOfGraphs::Dictionary, &TProofDrawListOfGraphs_IsA, 4,
                  sizeof(::TProofDrawListOfGraphs) );
      instance.SetNew(&new_TProofDrawListOfGraphs);
      instance.SetNewArray(&newArray_TProofDrawListOfGraphs);
      instance.SetDelete(&delete_TProofDrawListOfGraphs);
      instance.SetDeleteArray(&deleteArray_TProofDrawListOfGraphs);
      instance.SetDestructor(&destruct_TProofDrawListOfGraphs);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDrawListOfGraphs*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofDrawListOfGraphscLcLPoint3D_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void TProofDrawListOfGraphscLcLPoint3D_t_Dictionary();
   static TClass *TProofDrawListOfGraphscLcLPoint3D_t_IsA(const void*);
   static void *new_TProofDrawListOfGraphscLcLPoint3D_t(void *p = 0);
   static void *newArray_TProofDrawListOfGraphscLcLPoint3D_t(Long_t size);
   static void delete_TProofDrawListOfGraphscLcLPoint3D_t(void *p);
   static void deleteArray_TProofDrawListOfGraphscLcLPoint3D_t(void *p);
   static void destruct_TProofDrawListOfGraphscLcLPoint3D_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDrawListOfGraphs::Point3D_t*)
   {
      // Make sure the shadow class has the right sizeof
      Assert(sizeof(::TProofDrawListOfGraphs::Point3D_t) == sizeof(::ROOT::Shadow::TProofDrawListOfGraphs__Point3D_t));
      ::TProofDrawListOfGraphs::Point3D_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDrawListOfGraphs::Point3D_t", "proof/inc/TProofDraw.h", 223,
                  typeid(::TProofDrawListOfGraphs::Point3D_t), DefineBehavior(ptr, ptr),
                  (void*)&TProofDrawListOfGraphscLcLPoint3D_t_ShowMembers, &TProofDrawListOfGraphscLcLPoint3D_t_Dictionary, &TProofDrawListOfGraphscLcLPoint3D_t_IsA, 4,
                  sizeof(::TProofDrawListOfGraphs::Point3D_t) );
      instance.SetNew(&new_TProofDrawListOfGraphscLcLPoint3D_t);
      instance.SetNewArray(&newArray_TProofDrawListOfGraphscLcLPoint3D_t);
      instance.SetDelete(&delete_TProofDrawListOfGraphscLcLPoint3D_t);
      instance.SetDeleteArray(&deleteArray_TProofDrawListOfGraphscLcLPoint3D_t);
      instance.SetDestructor(&destruct_TProofDrawListOfGraphscLcLPoint3D_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDrawListOfGraphs::Point3D_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TProofDrawListOfGraphscLcLPoint3D_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::TProofDrawListOfGraphs::Point3D_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR_Dictionary();
   static TClass *TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR_IsA(const void*);
   static void *new_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p = 0);
   static void *newArray_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(Long_t size);
   static void delete_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p);
   static void deleteArray_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p);
   static void destruct_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)
   {
      // Make sure the shadow class has the right sizeof
      Assert(sizeof(::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>) == sizeof(::ROOT::Shadow::TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR));
      ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>", ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Class_Version(), "proof/inc/TProofDraw.h", 202,
                  typeid(::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>), DefineBehavior(ptr, ptr),
                  (void*)&TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR_ShowMembers, &TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR_Dictionary, &TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR_IsA, 4,
                  sizeof(::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>) );
      instance.SetNew(&new_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR);
      instance.SetNewArray(&newArray_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR);
      instance.SetDelete(&delete_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR);
      instance.SetDeleteArray(&deleteArray_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR);
      instance.SetDestructor(&destruct_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)0x0)->GetClass();
   }

}

namespace ROOT {
   void TProofDrawListOfPolyMarkers3D_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TProofDrawListOfPolyMarkers3D_IsA(const void*);
   static void *new_TProofDrawListOfPolyMarkers3D(void *p = 0);
   static void *newArray_TProofDrawListOfPolyMarkers3D(Long_t size);
   static void delete_TProofDrawListOfPolyMarkers3D(void *p);
   static void deleteArray_TProofDrawListOfPolyMarkers3D(void *p);
   static void destruct_TProofDrawListOfPolyMarkers3D(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDrawListOfPolyMarkers3D*)
   {
      ::TProofDrawListOfPolyMarkers3D *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDrawListOfPolyMarkers3D", ::TProofDrawListOfPolyMarkers3D::Class_Version(), "proof/inc/TProofDraw.h", 243,
                  typeid(::TProofDrawListOfPolyMarkers3D), DefineBehavior(ptr, ptr),
                  &::TProofDrawListOfPolyMarkers3D::Dictionary, &TProofDrawListOfPolyMarkers3D_IsA, 4,
                  sizeof(::TProofDrawListOfPolyMarkers3D) );
      instance.SetNew(&new_TProofDrawListOfPolyMarkers3D);
      instance.SetNewArray(&newArray_TProofDrawListOfPolyMarkers3D);
      instance.SetDelete(&delete_TProofDrawListOfPolyMarkers3D);
      instance.SetDeleteArray(&deleteArray_TProofDrawListOfPolyMarkers3D);
      instance.SetDestructor(&destruct_TProofDrawListOfPolyMarkers3D);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDrawListOfPolyMarkers3D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TProofDrawListOfPolyMarkers3DcLcLPoint4D_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void TProofDrawListOfPolyMarkers3DcLcLPoint4D_t_Dictionary();
   static TClass *TProofDrawListOfPolyMarkers3DcLcLPoint4D_t_IsA(const void*);
   static void *new_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t(void *p = 0);
   static void *newArray_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t(Long_t size);
   static void delete_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t(void *p);
   static void deleteArray_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t(void *p);
   static void destruct_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofDrawListOfPolyMarkers3D::Point4D_t*)
   {
      // Make sure the shadow class has the right sizeof
      Assert(sizeof(::TProofDrawListOfPolyMarkers3D::Point4D_t) == sizeof(::ROOT::Shadow::TProofDrawListOfPolyMarkers3D__Point4D_t));
      ::TProofDrawListOfPolyMarkers3D::Point4D_t *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofDrawListOfPolyMarkers3D::Point4D_t", "proof/inc/TProofDraw.h", 246,
                  typeid(::TProofDrawListOfPolyMarkers3D::Point4D_t), DefineBehavior(ptr, ptr),
                  (void*)&TProofDrawListOfPolyMarkers3DcLcLPoint4D_t_ShowMembers, &TProofDrawListOfPolyMarkers3DcLcLPoint4D_t_Dictionary, &TProofDrawListOfPolyMarkers3DcLcLPoint4D_t_IsA, 4,
                  sizeof(::TProofDrawListOfPolyMarkers3D::Point4D_t) );
      instance.SetNew(&new_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t);
      instance.SetNewArray(&newArray_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t);
      instance.SetDelete(&delete_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t);
      instance.SetDeleteArray(&deleteArray_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t);
      instance.SetDestructor(&destruct_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofDrawListOfPolyMarkers3D::Point4D_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TProofDrawListOfPolyMarkers3DcLcLPoint4D_t_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::TProofDrawListOfPolyMarkers3D::Point4D_t*)0x0)->GetClass();
   }

}

namespace ROOT {
   void TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_Dictionary();
   static TClass *TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_IsA(const void*);
   static void *new_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p = 0);
   static void *newArray_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(Long_t size);
   static void delete_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p);
   static void deleteArray_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p);
   static void destruct_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)
   {
      // Make sure the shadow class has the right sizeof
      Assert(sizeof(::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>) == sizeof(::ROOT::Shadow::TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR));
      ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>", ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Class_Version(), "proof/inc/TProofDraw.h", 202,
                  typeid(::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>), DefineBehavior(ptr, ptr),
                  (void*)&TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_ShowMembers, &TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_Dictionary, &TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_IsA, 4,
                  sizeof(::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>) );
      instance.SetNew(&new_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
      instance.SetNewArray(&newArray_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
      instance.SetDelete(&delete_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
      instance.SetDeleteArray(&deleteArray_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
      instance.SetDestructor(&destruct_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)0x0)->GetClass();
   }

}

//______________________________________________________________________________
TClass *TEventIter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEventIter::Class_Name()
{
   return "TEventIter";
}

//______________________________________________________________________________
const char *TEventIter::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TEventIter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEventIter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TEventIter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEventIter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TEventIter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEventIter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TEventIter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEventIterObj::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEventIterObj::Class_Name()
{
   return "TEventIterObj";
}

//______________________________________________________________________________
const char *TEventIterObj::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TEventIterObj*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEventIterObj::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TEventIterObj*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEventIterObj::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TEventIterObj*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEventIterObj::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TEventIterObj*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEventIterTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEventIterTree::Class_Name()
{
   return "TEventIterTree";
}

//______________________________________________________________________________
const char *TEventIterTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TEventIterTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEventIterTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TEventIterTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEventIterTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TEventIterTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEventIterTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TEventIterTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSlave::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSlave::Class_Name()
{
   return "TSlave";
}

//______________________________________________________________________________
const char *TSlave::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSlave*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSlave::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSlave*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSlave::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSlave*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSlave::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSlave*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVirtualPacketizer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVirtualPacketizer::Class_Name()
{
   return "TVirtualPacketizer";
}

//______________________________________________________________________________
const char *TVirtualPacketizer::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualPacketizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVirtualPacketizer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualPacketizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVirtualPacketizer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualPacketizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVirtualPacketizer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualPacketizer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProof::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProof::Class_Name()
{
   return "TProof";
}

//______________________________________________________________________________
const char *TProof::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProof*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProof::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProof*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProof::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProof*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProof::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProof*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDrawFeedback::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDrawFeedback::Class_Name()
{
   return "TDrawFeedback";
}

//______________________________________________________________________________
const char *TDrawFeedback::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDrawFeedback*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDrawFeedback::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDrawFeedback*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDrawFeedback::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDrawFeedback*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDrawFeedback::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDrawFeedback*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofPlayer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofPlayer::Class_Name()
{
   return "TProofPlayer";
}

//______________________________________________________________________________
const char *TProofPlayer::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofPlayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofPlayer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofPlayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofPlayer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofPlayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofPlayer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofPlayer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofServ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofServ::Class_Name()
{
   return "TProofServ";
}

//______________________________________________________________________________
const char *TProofServ::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofServ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofServ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofServ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofServ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofServ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofServ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofServ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TStatus::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TStatus::Class_Name()
{
   return "TStatus";
}

//______________________________________________________________________________
const char *TStatus::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TStatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TStatus::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TStatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TStatus::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TStatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TStatus::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TStatus*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofPlayerLocal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofPlayerLocal::Class_Name()
{
   return "TProofPlayerLocal";
}

//______________________________________________________________________________
const char *TProofPlayerLocal::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofPlayerLocal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofPlayerLocal::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofPlayerLocal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofPlayerLocal::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofPlayerLocal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofPlayerLocal::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofPlayerLocal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofPlayerRemote::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofPlayerRemote::Class_Name()
{
   return "TProofPlayerRemote";
}

//______________________________________________________________________________
const char *TProofPlayerRemote::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofPlayerRemote*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofPlayerRemote::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofPlayerRemote*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofPlayerRemote::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofPlayerRemote*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofPlayerRemote::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofPlayerRemote*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofPlayerSlave::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofPlayerSlave::Class_Name()
{
   return "TProofPlayerSlave";
}

//______________________________________________________________________________
const char *TProofPlayerSlave::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofPlayerSlave*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofPlayerSlave::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofPlayerSlave*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofPlayerSlave::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofPlayerSlave*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofPlayerSlave::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofPlayerSlave*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofPlayerSuperMaster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofPlayerSuperMaster::Class_Name()
{
   return "TProofPlayerSuperMaster";
}

//______________________________________________________________________________
const char *TProofPlayerSuperMaster::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofPlayerSuperMaster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofPlayerSuperMaster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofPlayerSuperMaster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofPlayerSuperMaster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofPlayerSuperMaster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofPlayerSuperMaster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofPlayerSuperMaster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPerfEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPerfEvent::Class_Name()
{
   return "TPerfEvent";
}

//______________________________________________________________________________
const char *TPerfEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPerfEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPerfEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPerfEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPerfEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPerfEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPerfEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPerfEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPerfStats::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPerfStats::Class_Name()
{
   return "TPerfStats";
}

//______________________________________________________________________________
const char *TPerfStats::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPerfStats*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPerfStats::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPerfStats*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPerfStats::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPerfStats*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPerfStats::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPerfStats*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPacketizer2::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPacketizer2::Class_Name()
{
   return "TPacketizer2";
}

//______________________________________________________________________________
const char *TPacketizer2::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPacketizer2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPacketizer2::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPacketizer2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPacketizer2::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPacketizer2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPacketizer2::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPacketizer2*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCondor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCondor::Class_Name()
{
   return "TCondor";
}

//______________________________________________________________________________
const char *TCondor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCondor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCondor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCondor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCondor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCondor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCondor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCondor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSlaveInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSlaveInfo::Class_Name()
{
   return "TSlaveInfo";
}

//______________________________________________________________________________
const char *TSlaveInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSlaveInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSlaveInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSlaveInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSlaveInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSlaveInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSlaveInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSlaveInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPacketizer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPacketizer::Class_Name()
{
   return "TPacketizer";
}

//______________________________________________________________________________
const char *TPacketizer::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPacketizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPacketizer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPacketizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPacketizer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPacketizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPacketizer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPacketizer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofCondor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofCondor::Class_Name()
{
   return "TProofCondor";
}

//______________________________________________________________________________
const char *TProofCondor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofCondor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofCondor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofCondor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofCondor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofCondor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofCondor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofCondor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofSuperMaster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofSuperMaster::Class_Name()
{
   return "TProofSuperMaster";
}

//______________________________________________________________________________
const char *TProofSuperMaster::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofSuperMaster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofSuperMaster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofSuperMaster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofSuperMaster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofSuperMaster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofSuperMaster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofSuperMaster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSetProxy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSetProxy::Class_Name()
{
   return "TDSetProxy";
}

//______________________________________________________________________________
const char *TDSetProxy::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDSetProxy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSetProxy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDSetProxy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSetProxy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDSetProxy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSetProxy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDSetProxy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCondorSlave::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCondorSlave::Class_Name()
{
   return "TCondorSlave";
}

//______________________________________________________________________________
const char *TCondorSlave::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCondorSlave*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCondorSlave::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCondorSlave*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCondorSlave::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCondorSlave*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCondorSlave::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCondorSlave*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofLimitsFinder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofLimitsFinder::Class_Name()
{
   return "TProofLimitsFinder";
}

//______________________________________________________________________________
const char *TProofLimitsFinder::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofLimitsFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofLimitsFinder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofLimitsFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofLimitsFinder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofLimitsFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofLimitsFinder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofLimitsFinder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofDraw::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofDraw::Class_Name()
{
   return "TProofDraw";
}

//______________________________________________________________________________
const char *TProofDraw::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDraw*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofDraw::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDraw*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofDraw::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDraw*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofDraw::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDraw*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofDrawHist::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofDrawHist::Class_Name()
{
   return "TProofDrawHist";
}

//______________________________________________________________________________
const char *TProofDrawHist::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofDrawHist::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofDrawHist::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofDrawHist::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawHist*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofDrawEventList::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofDrawEventList::Class_Name()
{
   return "TProofDrawEventList";
}

//______________________________________________________________________________
const char *TProofDrawEventList::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawEventList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofDrawEventList::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawEventList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofDrawEventList::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawEventList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofDrawEventList::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawEventList*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofDrawProfile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofDrawProfile::Class_Name()
{
   return "TProofDrawProfile";
}

//______________________________________________________________________________
const char *TProofDrawProfile::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawProfile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofDrawProfile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawProfile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofDrawProfile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawProfile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofDrawProfile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawProfile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofDrawProfile2D::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofDrawProfile2D::Class_Name()
{
   return "TProofDrawProfile2D";
}

//______________________________________________________________________________
const char *TProofDrawProfile2D::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawProfile2D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofDrawProfile2D::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawProfile2D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofDrawProfile2D::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawProfile2D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofDrawProfile2D::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawProfile2D*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofDrawGraph::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofDrawGraph::Class_Name()
{
   return "TProofDrawGraph";
}

//______________________________________________________________________________
const char *TProofDrawGraph::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawGraph*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofDrawGraph::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawGraph*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofDrawGraph::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawGraph*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofDrawGraph::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawGraph*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofDrawPolyMarker3D::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofDrawPolyMarker3D::Class_Name()
{
   return "TProofDrawPolyMarker3D";
}

//______________________________________________________________________________
const char *TProofDrawPolyMarker3D::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawPolyMarker3D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofDrawPolyMarker3D::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawPolyMarker3D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofDrawPolyMarker3D::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawPolyMarker3D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofDrawPolyMarker3D::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawPolyMarker3D*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofDrawListOfGraphs::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofDrawListOfGraphs::Class_Name()
{
   return "TProofDrawListOfGraphs";
}

//______________________________________________________________________________
const char *TProofDrawListOfGraphs::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawListOfGraphs*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofDrawListOfGraphs::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawListOfGraphs*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofDrawListOfGraphs::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawListOfGraphs*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofDrawListOfGraphs::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawListOfGraphs*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Class_Name()
{
   return "TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>";
}

//______________________________________________________________________________
template <> const char *TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TProofDrawListOfPolyMarkers3D::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TProofDrawListOfPolyMarkers3D::Class_Name()
{
   return "TProofDrawListOfPolyMarkers3D";
}

//______________________________________________________________________________
const char *TProofDrawListOfPolyMarkers3D::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawListOfPolyMarkers3D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TProofDrawListOfPolyMarkers3D::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofDrawListOfPolyMarkers3D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TProofDrawListOfPolyMarkers3D::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawListOfPolyMarkers3D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TProofDrawListOfPolyMarkers3D::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofDrawListOfPolyMarkers3D*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Class_Name()
{
   return "TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>";
}

//______________________________________________________________________________
template <> const char *TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TProof::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProof.

   TVirtualProof::Streamer(R__b);
}

//______________________________________________________________________________
void TProof::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProof.

      TClass *R__cl = ::TProof::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fValid", &fValid);
      R__insp.Inspect(R__cl, R__parent, "fMaster", &fMaster);
      fMaster.ShowMembers(R__insp, strcat(R__parent,"fMaster.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fWorkDir", &fWorkDir);
      fWorkDir.ShowMembers(R__insp, strcat(R__parent,"fWorkDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUser", &fUser);
      fUser.ShowMembers(R__insp, strcat(R__parent,"fUser.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUrlProtocol", &fUrlProtocol);
      fUrlProtocol.ShowMembers(R__insp, strcat(R__parent,"fUrlProtocol.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fSecContext", &fSecContext);
      R__insp.Inspect(R__cl, R__parent, "fLogLevel", &fLogLevel);
      R__insp.Inspect(R__cl, R__parent, "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "*fSlaveInfo", &fSlaveInfo);
      R__insp.Inspect(R__cl, R__parent, "fMasterServ", &fMasterServ);
      R__insp.Inspect(R__cl, R__parent, "fSendGroupView", &fSendGroupView);
      R__insp.Inspect(R__cl, R__parent, "*fActiveSlaves", &fActiveSlaves);
      R__insp.Inspect(R__cl, R__parent, "*fUniqueSlaves", &fUniqueSlaves);
      R__insp.Inspect(R__cl, R__parent, "*fNonUniqueMasters", &fNonUniqueMasters);
      R__insp.Inspect(R__cl, R__parent, "*fActiveMonitor", &fActiveMonitor);
      R__insp.Inspect(R__cl, R__parent, "*fUniqueMonitor", &fUniqueMonitor);
      R__insp.Inspect(R__cl, R__parent, "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__parent, "fRealTime", &fRealTime);
      R__insp.Inspect(R__cl, R__parent, "fCpuTime", &fCpuTime);
      R__insp.Inspect(R__cl, R__parent, "*fIntHandler", &fIntHandler);
      R__insp.Inspect(R__cl, R__parent, "*fProgressDialog", &fProgressDialog);
      R__insp.Inspect(R__cl, R__parent, "*fPlayer", &fPlayer);
      R__insp.Inspect(R__cl, R__parent, "*fFeedback", &fFeedback);
      R__insp.Inspect(R__cl, R__parent, "*fChains", &fChains);
      R__insp.Inspect(R__cl, R__parent, "fFileMap", (void*)&fFileMap);
      ::ROOT::GenericShowMembers("TProof::FileMap_t", (void*)&fFileMap, R__insp, strcat(R__parent,"fFileMap."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fDSet", &fDSet);
      R__insp.Inspect(R__cl, R__parent, "fConfFile", &fConfFile);
      fConfFile.ShowMembers(R__insp, strcat(R__parent,"fConfFile.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fConfDir", &fConfDir);
      fConfDir.ShowMembers(R__insp, strcat(R__parent,"fConfDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fImage", &fImage);
      fImage.ShowMembers(R__insp, strcat(R__parent,"fImage.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPort", &fPort);
      R__insp.Inspect(R__cl, R__parent, "fProtocol", &fProtocol);
      R__insp.Inspect(R__cl, R__parent, "*fSlaves", &fSlaves);
      R__insp.Inspect(R__cl, R__parent, "*fBadSlaves", &fBadSlaves);
      R__insp.Inspect(R__cl, R__parent, "*fAllMonitor", &fAllMonitor);
      R__insp.Inspect(R__cl, R__parent, "fDataReady", &fDataReady);
      R__insp.Inspect(R__cl, R__parent, "fBytesReady", &fBytesReady);
      R__insp.Inspect(R__cl, R__parent, "fTotalBytes", &fTotalBytes);
      TVirtualProof::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProof_IsA(const void *obj) {
      return ((::TProof*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TProof(void *p) {
      delete ((::TProof*)p);
   }
   static void deleteArray_TProof(void *p) {
      delete [] ((::TProof*)p);
   }
   static void destruct_TProof(void *p) {
      typedef ::TProof current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProof

//______________________________________________________________________________
void TProofCondor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofCondor.

   TProof::Streamer(R__b);
}

//______________________________________________________________________________
void TProofCondor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofCondor.

      TClass *R__cl = ::TProofCondor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fCondor", &fCondor);
      R__insp.Inspect(R__cl, R__parent, "*fTimer", &fTimer);
      TProof::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofCondor_IsA(const void *obj) {
      return ((::TProofCondor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TProofCondor(void *p) {
      delete ((::TProofCondor*)p);
   }
   static void deleteArray_TProofCondor(void *p) {
      delete [] ((::TProofCondor*)p);
   }
   static void destruct_TProofCondor(void *p) {
      typedef ::TProofCondor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofCondor

//______________________________________________________________________________
void TProofSuperMaster::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofSuperMaster.

   TProof::Streamer(R__b);
}

//______________________________________________________________________________
void TProofSuperMaster::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofSuperMaster.

      TClass *R__cl = ::TProofSuperMaster::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TProof::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofSuperMaster_IsA(const void *obj) {
      return ((::TProofSuperMaster*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TProofSuperMaster(void *p) {
      delete ((::TProofSuperMaster*)p);
   }
   static void deleteArray_TProofSuperMaster(void *p) {
      delete [] ((::TProofSuperMaster*)p);
   }
   static void destruct_TProofSuperMaster(void *p) {
      typedef ::TProofSuperMaster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofSuperMaster

//______________________________________________________________________________
void TSlaveInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSlaveInfo.

   if (R__b.IsReading()) {
      TSlaveInfo::Class()->ReadBuffer(R__b, this);
   } else {
      TSlaveInfo::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TSlaveInfo::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSlaveInfo.

      TClass *R__cl = ::TSlaveInfo::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fOrdinal", &fOrdinal);
      fOrdinal.ShowMembers(R__insp, strcat(R__parent,"fOrdinal.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fHostName", &fHostName);
      fHostName.ShowMembers(R__insp, strcat(R__parent,"fHostName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMsd", &fMsd);
      fMsd.ShowMembers(R__insp, strcat(R__parent,"fMsd.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPerfIndex", &fPerfIndex);
      R__insp.Inspect(R__cl, R__parent, "fStatus", &fStatus);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSlaveInfo_IsA(const void *obj) {
      return ((::TSlaveInfo*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TSlaveInfo(void *p) {
      return  p ? new(p) ::TSlaveInfo : new ::TSlaveInfo;
   }
   static void *newArray_TSlaveInfo(Long_t size) {
      return new ::TSlaveInfo[size];
   }
   // Wrapper around operator delete
   static void delete_TSlaveInfo(void *p) {
      delete ((::TSlaveInfo*)p);
   }
   static void deleteArray_TSlaveInfo(void *p) {
      delete [] ((::TSlaveInfo*)p);
   }
   static void destruct_TSlaveInfo(void *p) {
      typedef ::TSlaveInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSlaveInfo

//______________________________________________________________________________
void TProofServ::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofServ.

   TApplication::Streamer(R__b);
}

//______________________________________________________________________________
void TProofServ::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofServ.

      TClass *R__cl = ::TProofServ::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fService", &fService);
      fService.ShowMembers(R__insp, strcat(R__parent,"fService.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUser", &fUser);
      fUser.ShowMembers(R__insp, strcat(R__parent,"fUser.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPasswd", &fPasswd);
      fPasswd.ShowMembers(R__insp, strcat(R__parent,"fPasswd.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fConfDir", &fConfDir);
      fConfDir.ShowMembers(R__insp, strcat(R__parent,"fConfDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fConfFile", &fConfFile);
      fConfFile.ShowMembers(R__insp, strcat(R__parent,"fConfFile.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fWorkDir", &fWorkDir);
      fWorkDir.ShowMembers(R__insp, strcat(R__parent,"fWorkDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSessionDir", &fSessionDir);
      fSessionDir.ShowMembers(R__insp, strcat(R__parent,"fSessionDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPackageDir", &fPackageDir);
      fPackageDir.ShowMembers(R__insp, strcat(R__parent,"fPackageDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCacheDir", &fCacheDir);
      fCacheDir.ShowMembers(R__insp, strcat(R__parent,"fCacheDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPackageLock", &fPackageLock);
      fPackageLock.ShowMembers(R__insp, strcat(R__parent,"fPackageLock.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCacheLock", &fCacheLock);
      fCacheLock.ShowMembers(R__insp, strcat(R__parent,"fCacheLock.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fSocket", &fSocket);
      R__insp.Inspect(R__cl, R__parent, "*fProof", &fProof);
      R__insp.Inspect(R__cl, R__parent, "*fPlayer", &fPlayer);
      R__insp.Inspect(R__cl, R__parent, "*fLogFile", &fLogFile);
      R__insp.Inspect(R__cl, R__parent, "*fEnabledPackages", &fEnabledPackages);
      R__insp.Inspect(R__cl, R__parent, "fPackageLockId", &fPackageLockId);
      R__insp.Inspect(R__cl, R__parent, "fCacheLockId", &fCacheLockId);
      R__insp.Inspect(R__cl, R__parent, "fProtocol", &fProtocol);
      R__insp.Inspect(R__cl, R__parent, "fOrdinal", &fOrdinal);
      fOrdinal.ShowMembers(R__insp, strcat(R__parent,"fOrdinal.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fGroupId", &fGroupId);
      R__insp.Inspect(R__cl, R__parent, "fGroupSize", &fGroupSize);
      R__insp.Inspect(R__cl, R__parent, "fLogLevel", &fLogLevel);
      R__insp.Inspect(R__cl, R__parent, "fNcmd", &fNcmd);
      R__insp.Inspect(R__cl, R__parent, "fPwHash", &fPwHash);
      R__insp.Inspect(R__cl, R__parent, "fSRPPwd", &fSRPPwd);
      R__insp.Inspect(R__cl, R__parent, "fMasterServ", &fMasterServ);
      R__insp.Inspect(R__cl, R__parent, "fInterrupt", &fInterrupt);
      R__insp.Inspect(R__cl, R__parent, "fRealTime", &fRealTime);
      R__insp.Inspect(R__cl, R__parent, "fCpuTime", &fCpuTime);
      R__insp.Inspect(R__cl, R__parent, "fLatency", &fLatency);
      fLatency.ShowMembers(R__insp, strcat(R__parent,"fLatency.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCompute", &fCompute);
      fCompute.ShowMembers(R__insp, strcat(R__parent,"fCompute.")); R__parent[R__ncp] = 0;
      TApplication::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofServ_IsA(const void *obj) {
      return ((::TProofServ*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TProofServ(void *p) {
      delete ((::TProofServ*)p);
   }
   static void deleteArray_TProofServ(void *p) {
      delete [] ((::TProofServ*)p);
   }
   static void destruct_TProofServ(void *p) {
      typedef ::TProofServ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofServ

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDebug_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::TProofDebug*)obj));
   }
   // Wrappers around operator new
   static void *new_TProofDebug(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TProofDebug : new ::TProofDebug;
   }
   static void *newArray_TProofDebug(Long_t size) {
      return new ::TProofDebug[size];
   }
   // Wrapper around operator delete
   static void delete_TProofDebug(void *p) {
      delete ((::TProofDebug*)p);
   }
   static void deleteArray_TProofDebug(void *p) {
      delete [] ((::TProofDebug*)p);
   }
   static void destruct_TProofDebug(void *p) {
      typedef ::TProofDebug current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDebug

//______________________________________________________________________________
void TProofLimitsFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofLimitsFinder.

   THLimitsFinder::Streamer(R__b);
}

//______________________________________________________________________________
void TProofLimitsFinder::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofLimitsFinder.

      TClass *R__cl = ::TProofLimitsFinder::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      THLimitsFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofLimitsFinder_IsA(const void *obj) {
      return ((::TProofLimitsFinder*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofLimitsFinder(void *p) {
      return  p ? new(p) ::TProofLimitsFinder : new ::TProofLimitsFinder;
   }
   static void *newArray_TProofLimitsFinder(Long_t size) {
      return new ::TProofLimitsFinder[size];
   }
   // Wrapper around operator delete
   static void delete_TProofLimitsFinder(void *p) {
      delete ((::TProofLimitsFinder*)p);
   }
   static void deleteArray_TProofLimitsFinder(void *p) {
      delete [] ((::TProofLimitsFinder*)p);
   }
   static void destruct_TProofLimitsFinder(void *p) {
      typedef ::TProofLimitsFinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofLimitsFinder

//______________________________________________________________________________
void TSlave::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSlave.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TSlave::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSlave.

      TClass *R__cl = ::TSlave::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fImage", &fImage);
      fImage.ShowMembers(R__insp, strcat(R__parent,"fImage.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fProofWorkDir", &fProofWorkDir);
      fProofWorkDir.ShowMembers(R__insp, strcat(R__parent,"fProofWorkDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fWorkDir", &fWorkDir);
      fWorkDir.ShowMembers(R__insp, strcat(R__parent,"fWorkDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUser", &fUser);
      fUser.ShowMembers(R__insp, strcat(R__parent,"fUser.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPort", &fPort);
      R__insp.Inspect(R__cl, R__parent, "fOrdinal", &fOrdinal);
      fOrdinal.ShowMembers(R__insp, strcat(R__parent,"fOrdinal.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPerfIdx", &fPerfIdx);
      R__insp.Inspect(R__cl, R__parent, "*fSecContext", &fSecContext);
      R__insp.Inspect(R__cl, R__parent, "fProtocol", &fProtocol);
      R__insp.Inspect(R__cl, R__parent, "*fSocket", &fSocket);
      R__insp.Inspect(R__cl, R__parent, "*fProof", &fProof);
      R__insp.Inspect(R__cl, R__parent, "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__parent, "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__parent, "fRealTime", &fRealTime);
      R__insp.Inspect(R__cl, R__parent, "fCpuTime", &fCpuTime);
      R__insp.Inspect(R__cl, R__parent, "fSlaveType", &fSlaveType);
      R__insp.Inspect(R__cl, R__parent, "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "fParallel", &fParallel);
      R__insp.Inspect(R__cl, R__parent, "fMsd", &fMsd);
      fMsd.ShowMembers(R__insp, strcat(R__parent,"fMsd.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSlave_IsA(const void *obj) {
      return ((::TSlave*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TSlave(void *p) {
      delete ((::TSlave*)p);
   }
   static void deleteArray_TSlave(void *p) {
      delete [] ((::TSlave*)p);
   }
   static void destruct_TSlave(void *p) {
      typedef ::TSlave current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSlave

//______________________________________________________________________________
void TProofPlayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofPlayer.

   if (R__b.IsReading()) {
      TProofPlayer::Class()->ReadBuffer(R__b, this);
   } else {
      TProofPlayer::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofPlayer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofPlayer.

      TClass *R__cl = ::TProofPlayer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fAutoBins", &fAutoBins);
      R__insp.Inspect(R__cl, R__parent, "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__parent, "*fOutput", &fOutput);
      R__insp.Inspect(R__cl, R__parent, "*fSelector", &fSelector);
      R__insp.Inspect(R__cl, R__parent, "*fSelectorClass", &fSelectorClass);
      R__insp.Inspect(R__cl, R__parent, "*fFeedbackTimer", &fFeedbackTimer);
      R__insp.Inspect(R__cl, R__parent, "*fEvIter", &fEvIter);
      R__insp.Inspect(R__cl, R__parent, "*fSelStatus", &fSelStatus);
      R__insp.Inspect(R__cl, R__parent, "fExitStatus", &fExitStatus);
      R__insp.Inspect(R__cl, R__parent, "fEventsProcessed", &fEventsProcessed);
      TObject::ShowMembers(R__insp, R__parent);
      TQObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofPlayer_IsA(const void *obj) {
      return ((::TProofPlayer*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofPlayer(void *p) {
      return  p ? new(p) ::TProofPlayer : new ::TProofPlayer;
   }
   static void *newArray_TProofPlayer(Long_t size) {
      return new ::TProofPlayer[size];
   }
   // Wrapper around operator delete
   static void delete_TProofPlayer(void *p) {
      delete ((::TProofPlayer*)p);
   }
   static void deleteArray_TProofPlayer(void *p) {
      delete [] ((::TProofPlayer*)p);
   }
   static void destruct_TProofPlayer(void *p) {
      typedef ::TProofPlayer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofPlayer

//______________________________________________________________________________
void TProofPlayerLocal::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofPlayerLocal.

   if (R__b.IsReading()) {
      TProofPlayerLocal::Class()->ReadBuffer(R__b, this);
   } else {
      TProofPlayerLocal::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofPlayerLocal::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofPlayerLocal.

      TClass *R__cl = ::TProofPlayerLocal::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TProofPlayer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofPlayerLocal_IsA(const void *obj) {
      return ((::TProofPlayerLocal*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofPlayerLocal(void *p) {
      return  p ? new(p) ::TProofPlayerLocal : new ::TProofPlayerLocal;
   }
   static void *newArray_TProofPlayerLocal(Long_t size) {
      return new ::TProofPlayerLocal[size];
   }
   // Wrapper around operator delete
   static void delete_TProofPlayerLocal(void *p) {
      delete ((::TProofPlayerLocal*)p);
   }
   static void deleteArray_TProofPlayerLocal(void *p) {
      delete [] ((::TProofPlayerLocal*)p);
   }
   static void destruct_TProofPlayerLocal(void *p) {
      typedef ::TProofPlayerLocal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofPlayerLocal

//______________________________________________________________________________
void TProofPlayerRemote::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofPlayerRemote.

   if (R__b.IsReading()) {
      TProofPlayerRemote::Class()->ReadBuffer(R__b, this);
   } else {
      TProofPlayerRemote::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofPlayerRemote::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofPlayerRemote.

      TClass *R__cl = ::TProofPlayerRemote::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fProof", &fProof);
      R__insp.Inspect(R__cl, R__parent, "*fOutputLists", &fOutputLists);
      R__insp.Inspect(R__cl, R__parent, "*fFeedback", &fFeedback);
      R__insp.Inspect(R__cl, R__parent, "*fFeedbackLists", &fFeedbackLists);
      R__insp.Inspect(R__cl, R__parent, "*fPacketizer", &fPacketizer);
      R__insp.Inspect(R__cl, R__parent, "*fDSet", &fDSet);
      TProofPlayer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofPlayerRemote_IsA(const void *obj) {
      return ((::TProofPlayerRemote*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofPlayerRemote(void *p) {
      return  p ? new(p) ::TProofPlayerRemote : new ::TProofPlayerRemote;
   }
   static void *newArray_TProofPlayerRemote(Long_t size) {
      return new ::TProofPlayerRemote[size];
   }
   // Wrapper around operator delete
   static void delete_TProofPlayerRemote(void *p) {
      delete ((::TProofPlayerRemote*)p);
   }
   static void deleteArray_TProofPlayerRemote(void *p) {
      delete [] ((::TProofPlayerRemote*)p);
   }
   static void destruct_TProofPlayerRemote(void *p) {
      typedef ::TProofPlayerRemote current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofPlayerRemote

//______________________________________________________________________________
void TProofPlayerSlave::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofPlayerSlave.

   if (R__b.IsReading()) {
      TProofPlayerSlave::Class()->ReadBuffer(R__b, this);
   } else {
      TProofPlayerSlave::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofPlayerSlave::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofPlayerSlave.

      TClass *R__cl = ::TProofPlayerSlave::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSocket", &fSocket);
      R__insp.Inspect(R__cl, R__parent, "*fFeedback", &fFeedback);
      TProofPlayer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofPlayerSlave_IsA(const void *obj) {
      return ((::TProofPlayerSlave*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofPlayerSlave(void *p) {
      return  p ? new(p) ::TProofPlayerSlave : new ::TProofPlayerSlave;
   }
   static void *newArray_TProofPlayerSlave(Long_t size) {
      return new ::TProofPlayerSlave[size];
   }
   // Wrapper around operator delete
   static void delete_TProofPlayerSlave(void *p) {
      delete ((::TProofPlayerSlave*)p);
   }
   static void deleteArray_TProofPlayerSlave(void *p) {
      delete [] ((::TProofPlayerSlave*)p);
   }
   static void destruct_TProofPlayerSlave(void *p) {
      typedef ::TProofPlayerSlave current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofPlayerSlave

//______________________________________________________________________________
void TProofPlayerSuperMaster::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofPlayerSuperMaster.

   if (R__b.IsReading()) {
      TProofPlayerSuperMaster::Class()->ReadBuffer(R__b, this);
   } else {
      TProofPlayerSuperMaster::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofPlayerSuperMaster::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofPlayerSuperMaster.

      TClass *R__cl = ::TProofPlayerSuperMaster::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fSlaveProgress", &fSlaveProgress);
      fSlaveProgress.ShowMembers(R__insp, strcat(R__parent,"fSlaveProgress.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaveTotals", &fSlaveTotals);
      fSlaveTotals.ShowMembers(R__insp, strcat(R__parent,"fSlaveTotals.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlaves", &fSlaves);
      fSlaves.ShowMembers(R__insp, strcat(R__parent,"fSlaves.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fReturnFeedback", &fReturnFeedback);
      TProofPlayerRemote::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofPlayerSuperMaster_IsA(const void *obj) {
      return ((::TProofPlayerSuperMaster*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofPlayerSuperMaster(void *p) {
      return  p ? new(p) ::TProofPlayerSuperMaster : new ::TProofPlayerSuperMaster;
   }
   static void *newArray_TProofPlayerSuperMaster(Long_t size) {
      return new ::TProofPlayerSuperMaster[size];
   }
   // Wrapper around operator delete
   static void delete_TProofPlayerSuperMaster(void *p) {
      delete ((::TProofPlayerSuperMaster*)p);
   }
   static void deleteArray_TProofPlayerSuperMaster(void *p) {
      delete [] ((::TProofPlayerSuperMaster*)p);
   }
   static void destruct_TProofPlayerSuperMaster(void *p) {
      typedef ::TProofPlayerSuperMaster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofPlayerSuperMaster

//______________________________________________________________________________
void TEventIter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEventIter.

   if (R__b.IsReading()) {
      TEventIter::Class()->ReadBuffer(R__b, this);
   } else {
      TEventIter::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TEventIter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TEventIter.

      TClass *R__cl = ::TEventIter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fDSet", &fDSet);
      R__insp.Inspect(R__cl, R__parent, "*fElem", &fElem);
      R__insp.Inspect(R__cl, R__parent, "fFilename", &fFilename);
      fFilename.ShowMembers(R__insp, strcat(R__parent,"fFilename.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__parent, "fOldBytesRead", &fOldBytesRead);
      R__insp.Inspect(R__cl, R__parent, "fPath", &fPath);
      fPath.ShowMembers(R__insp, strcat(R__parent,"fPath.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fDir", &fDir);
      R__insp.Inspect(R__cl, R__parent, "fElemFirst", &fElemFirst);
      R__insp.Inspect(R__cl, R__parent, "fElemNum", &fElemNum);
      R__insp.Inspect(R__cl, R__parent, "fElemCur", &fElemCur);
      R__insp.Inspect(R__cl, R__parent, "*fSel", &fSel);
      R__insp.Inspect(R__cl, R__parent, "fFirst", &fFirst);
      R__insp.Inspect(R__cl, R__parent, "fNum", &fNum);
      R__insp.Inspect(R__cl, R__parent, "fCur", &fCur);
      R__insp.Inspect(R__cl, R__parent, "fStop", &fStop);
      R__insp.Inspect(R__cl, R__parent, "*fEventList", &fEventList);
      R__insp.Inspect(R__cl, R__parent, "fEventListPos", &fEventListPos);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TEventIter_IsA(const void *obj) {
      return ((::TEventIter*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TEventIter(void *p) {
      delete ((::TEventIter*)p);
   }
   static void deleteArray_TEventIter(void *p) {
      delete [] ((::TEventIter*)p);
   }
   static void destruct_TEventIter(void *p) {
      typedef ::TEventIter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEventIter

//______________________________________________________________________________
void TEventIterObj::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEventIterObj.

   if (R__b.IsReading()) {
      TEventIterObj::Class()->ReadBuffer(R__b, this);
   } else {
      TEventIterObj::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TEventIterObj::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TEventIterObj.

      TClass *R__cl = ::TEventIterObj::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fClassName", &fClassName);
      fClassName.ShowMembers(R__insp, strcat(R__parent,"fClassName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fKeys", &fKeys);
      R__insp.Inspect(R__cl, R__parent, "*fNextKey", &fNextKey);
      R__insp.Inspect(R__cl, R__parent, "*fObj", &fObj);
      TEventIter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TEventIterObj_IsA(const void *obj) {
      return ((::TEventIterObj*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TEventIterObj(void *p) {
      return  p ? new(p) ::TEventIterObj : new ::TEventIterObj;
   }
   static void *newArray_TEventIterObj(Long_t size) {
      return new ::TEventIterObj[size];
   }
   // Wrapper around operator delete
   static void delete_TEventIterObj(void *p) {
      delete ((::TEventIterObj*)p);
   }
   static void deleteArray_TEventIterObj(void *p) {
      delete [] ((::TEventIterObj*)p);
   }
   static void destruct_TEventIterObj(void *p) {
      typedef ::TEventIterObj current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEventIterObj

//______________________________________________________________________________
void TEventIterTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEventIterTree.

   if (R__b.IsReading()) {
      TEventIterTree::Class()->ReadBuffer(R__b, this);
   } else {
      TEventIterTree::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TEventIterTree::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TEventIterTree.

      TClass *R__cl = ::TEventIterTree::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTreeName", &fTreeName);
      fTreeName.ShowMembers(R__insp, strcat(R__parent,"fTreeName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      TEventIter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TEventIterTree_IsA(const void *obj) {
      return ((::TEventIterTree*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TEventIterTree(void *p) {
      return  p ? new(p) ::TEventIterTree : new ::TEventIterTree;
   }
   static void *newArray_TEventIterTree(Long_t size) {
      return new ::TEventIterTree[size];
   }
   // Wrapper around operator delete
   static void delete_TEventIterTree(void *p) {
      delete ((::TEventIterTree*)p);
   }
   static void deleteArray_TEventIterTree(void *p) {
      delete [] ((::TEventIterTree*)p);
   }
   static void destruct_TEventIterTree(void *p) {
      typedef ::TEventIterTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEventIterTree

//______________________________________________________________________________
void TDSetProxy::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSetProxy.

   if (R__b.IsReading()) {
      TDSetProxy::Class()->ReadBuffer(R__b, this);
   } else {
      TDSetProxy::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDSetProxy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSetProxy.

      TClass *R__cl = ::TDSetProxy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fServ", &fServ);
      TDSet::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSetProxy_IsA(const void *obj) {
      return ((::TDSetProxy*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSetProxy(void *p) {
      return  p ? new(p) ::TDSetProxy : new ::TDSetProxy;
   }
   static void *newArray_TDSetProxy(Long_t size) {
      return new ::TDSetProxy[size];
   }
   // Wrapper around operator delete
   static void delete_TDSetProxy(void *p) {
      delete ((::TDSetProxy*)p);
   }
   static void deleteArray_TDSetProxy(void *p) {
      delete [] ((::TDSetProxy*)p);
   }
   static void destruct_TDSetProxy(void *p) {
      typedef ::TDSetProxy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSetProxy

//______________________________________________________________________________
void TVirtualPacketizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVirtualPacketizer.

   if (R__b.IsReading()) {
      TVirtualPacketizer::Class()->ReadBuffer(R__b, this);
   } else {
      TVirtualPacketizer::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TVirtualPacketizer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVirtualPacketizer.

      TClass *R__cl = ::TVirtualPacketizer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fValid", &fValid);
      R__insp.Inspect(R__cl, R__parent, "fStop", &fStop);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TVirtualPacketizer_IsA(const void *obj) {
      return ((::TVirtualPacketizer*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TVirtualPacketizer(void *p) {
      delete ((::TVirtualPacketizer*)p);
   }
   static void deleteArray_TVirtualPacketizer(void *p) {
      delete [] ((::TVirtualPacketizer*)p);
   }
   static void destruct_TVirtualPacketizer(void *p) {
      typedef ::TVirtualPacketizer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVirtualPacketizer

//______________________________________________________________________________
void TPacketizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPacketizer.

   if (R__b.IsReading()) {
      TPacketizer::Class()->ReadBuffer(R__b, this);
   } else {
      TPacketizer::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TPacketizer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPacketizer.

      TClass *R__cl = ::TPacketizer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fProcessed", &fProcessed);
      R__insp.Inspect(R__cl, R__parent, "*fPackets", &fPackets);
      R__insp.Inspect(R__cl, R__parent, "fTotalEntries", &fTotalEntries);
      R__insp.Inspect(R__cl, R__parent, "*fFileNodes", &fFileNodes);
      R__insp.Inspect(R__cl, R__parent, "*fUnAllocated", &fUnAllocated);
      R__insp.Inspect(R__cl, R__parent, "*fUnAllocNext", &fUnAllocNext);
      R__insp.Inspect(R__cl, R__parent, "*fActive", &fActive);
      R__insp.Inspect(R__cl, R__parent, "*fActiveNext", &fActiveNext);
      R__insp.Inspect(R__cl, R__parent, "*fSlaveStats", &fSlaveStats);
      R__insp.Inspect(R__cl, R__parent, "*fProgress", &fProgress);
      R__insp.Inspect(R__cl, R__parent, "fPacketSize", &fPacketSize);
      R__insp.Inspect(R__cl, R__parent, "fMaxPerfIdx", &fMaxPerfIdx);
      TVirtualPacketizer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPacketizer_IsA(const void *obj) {
      return ((::TPacketizer*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TPacketizer(void *p) {
      delete ((::TPacketizer*)p);
   }
   static void deleteArray_TPacketizer(void *p) {
      delete [] ((::TPacketizer*)p);
   }
   static void destruct_TPacketizer(void *p) {
      typedef ::TPacketizer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPacketizer

//______________________________________________________________________________
void TPacketizer2::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPacketizer2.

   if (R__b.IsReading()) {
      TPacketizer2::Class()->ReadBuffer(R__b, this);
   } else {
      TPacketizer2::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TPacketizer2::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPacketizer2.

      TClass *R__cl = ::TPacketizer2::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fProcessed", &fProcessed);
      R__insp.Inspect(R__cl, R__parent, "*fPackets", &fPackets);
      R__insp.Inspect(R__cl, R__parent, "fTotalEntries", &fTotalEntries);
      R__insp.Inspect(R__cl, R__parent, "*fFileNodes", &fFileNodes);
      R__insp.Inspect(R__cl, R__parent, "*fUnAllocated", &fUnAllocated);
      R__insp.Inspect(R__cl, R__parent, "*fActive", &fActive);
      R__insp.Inspect(R__cl, R__parent, "*fSlaveStats", &fSlaveStats);
      R__insp.Inspect(R__cl, R__parent, "*fProgress", &fProgress);
      R__insp.Inspect(R__cl, R__parent, "fPacketSize", &fPacketSize);
      R__insp.Inspect(R__cl, R__parent, "fMaxPerfIdx", &fMaxPerfIdx);
      R__insp.Inspect(R__cl, R__parent, "fMaxSlaveCnt", &fMaxSlaveCnt);
      TVirtualPacketizer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPacketizer2_IsA(const void *obj) {
      return ((::TPacketizer2*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TPacketizer2(void *p) {
      delete ((::TPacketizer2*)p);
   }
   static void deleteArray_TPacketizer2(void *p) {
      delete [] ((::TPacketizer2*)p);
   }
   static void destruct_TPacketizer2(void *p) {
      typedef ::TPacketizer2 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPacketizer2

//______________________________________________________________________________
void TCondor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCondor.

   if (R__b.IsReading()) {
      TCondor::Class()->ReadBuffer(R__b, this);
   } else {
      TCondor::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TCondor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCondor.

      TClass *R__cl = ::TCondor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fValid", &fValid);
      R__insp.Inspect(R__cl, R__parent, "fPool", &fPool);
      fPool.ShowMembers(R__insp, strcat(R__parent,"fPool.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fState", &fState);
      R__insp.Inspect(R__cl, R__parent, "*fClaims", &fClaims);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCondor_IsA(const void *obj) {
      return ((::TCondor*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TCondor(void *p) {
      return  p ? new(p) ::TCondor : new ::TCondor;
   }
   static void *newArray_TCondor(Long_t size) {
      return new ::TCondor[size];
   }
   // Wrapper around operator delete
   static void delete_TCondor(void *p) {
      delete ((::TCondor*)p);
   }
   static void deleteArray_TCondor(void *p) {
      delete [] ((::TCondor*)p);
   }
   static void destruct_TCondor(void *p) {
      typedef ::TCondor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCondor

//______________________________________________________________________________
void TCondorSlave::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCondorSlave.

   if (R__b.IsReading()) {
      TCondorSlave::Class()->ReadBuffer(R__b, this);
   } else {
      TCondorSlave::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TCondorSlave::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCondorSlave.

      TClass *R__cl = ::TCondorSlave::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fHostname", &fHostname);
      fHostname.ShowMembers(R__insp, strcat(R__parent,"fHostname.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPort", &fPort);
      R__insp.Inspect(R__cl, R__parent, "fPerfIdx", &fPerfIdx);
      R__insp.Inspect(R__cl, R__parent, "fImage", &fImage);
      fImage.ShowMembers(R__insp, strcat(R__parent,"fImage.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fClaimID", &fClaimID);
      fClaimID.ShowMembers(R__insp, strcat(R__parent,"fClaimID.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOrdinal", &fOrdinal);
      fOrdinal.ShowMembers(R__insp, strcat(R__parent,"fOrdinal.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fWorkDir", &fWorkDir);
      fWorkDir.ShowMembers(R__insp, strcat(R__parent,"fWorkDir.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCondorSlave_IsA(const void *obj) {
      return ((::TCondorSlave*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TCondorSlave(void *p) {
      return  p ? new(p) ::TCondorSlave : new ::TCondorSlave;
   }
   static void *newArray_TCondorSlave(Long_t size) {
      return new ::TCondorSlave[size];
   }
   // Wrapper around operator delete
   static void delete_TCondorSlave(void *p) {
      delete ((::TCondorSlave*)p);
   }
   static void deleteArray_TCondorSlave(void *p) {
      delete [] ((::TCondorSlave*)p);
   }
   static void destruct_TCondorSlave(void *p) {
      typedef ::TCondorSlave current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCondorSlave

//______________________________________________________________________________
void TProofDraw::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofDraw.

   if (R__b.IsReading()) {
      TProofDraw::Class()->ReadBuffer(R__b, this);
   } else {
      TProofDraw::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofDraw::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofDraw.

      TClass *R__cl = ::TProofDraw::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTreeDrawArgsParser", &fTreeDrawArgsParser);
      fTreeDrawArgsParser.ShowMembers(R__insp, strcat(R__parent,"fTreeDrawArgsParser.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "fSelection", &fSelection);
      fSelection.ShowMembers(R__insp, strcat(R__parent,"fSelection.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fInitialExp", &fInitialExp);
      fInitialExp.ShowMembers(R__insp, strcat(R__parent,"fInitialExp.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fManager", &fManager);
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fVar[4]", &fVar);
      R__insp.Inspect(R__cl, R__parent, "*fSelect", &fSelect);
      R__insp.Inspect(R__cl, R__parent, "fMultiplicity", &fMultiplicity);
      R__insp.Inspect(R__cl, R__parent, "fObjEval", &fObjEval);
      R__insp.Inspect(R__cl, R__parent, "fDimension", &fDimension);
      TSelector::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDraw_IsA(const void *obj) {
      return ((::TProofDraw*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TProofDraw(void *p) {
      delete ((::TProofDraw*)p);
   }
   static void deleteArray_TProofDraw(void *p) {
      delete [] ((::TProofDraw*)p);
   }
   static void destruct_TProofDraw(void *p) {
      typedef ::TProofDraw current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDraw

//______________________________________________________________________________
void TProofDrawEventList::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofDrawEventList.

   if (R__b.IsReading()) {
      TProofDrawEventList::Class()->ReadBuffer(R__b, this);
   } else {
      TProofDrawEventList::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofDrawEventList::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofDrawEventList.

      TClass *R__cl = ::TProofDrawEventList::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fElist", &fElist);
      R__insp.Inspect(R__cl, R__parent, "*fEventLists", &fEventLists);
      TProofDraw::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDrawEventList_IsA(const void *obj) {
      return ((::TProofDrawEventList*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofDrawEventList(void *p) {
      return  p ? new(p) ::TProofDrawEventList : new ::TProofDrawEventList;
   }
   static void *newArray_TProofDrawEventList(Long_t size) {
      return new ::TProofDrawEventList[size];
   }
   // Wrapper around operator delete
   static void delete_TProofDrawEventList(void *p) {
      delete ((::TProofDrawEventList*)p);
   }
   static void deleteArray_TProofDrawEventList(void *p) {
      delete [] ((::TProofDrawEventList*)p);
   }
   static void destruct_TProofDrawEventList(void *p) {
      typedef ::TProofDrawEventList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDrawEventList

//______________________________________________________________________________
void TProofDrawHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofDrawHist.

   if (R__b.IsReading()) {
      TProofDrawHist::Class()->ReadBuffer(R__b, this);
   } else {
      TProofDrawHist::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofDrawHist::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofDrawHist.

      TClass *R__cl = ::TProofDrawHist::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fHistogram", &fHistogram);
      TProofDraw::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDrawHist_IsA(const void *obj) {
      return ((::TProofDrawHist*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofDrawHist(void *p) {
      return  p ? new(p) ::TProofDrawHist : new ::TProofDrawHist;
   }
   static void *newArray_TProofDrawHist(Long_t size) {
      return new ::TProofDrawHist[size];
   }
   // Wrapper around operator delete
   static void delete_TProofDrawHist(void *p) {
      delete ((::TProofDrawHist*)p);
   }
   static void deleteArray_TProofDrawHist(void *p) {
      delete [] ((::TProofDrawHist*)p);
   }
   static void destruct_TProofDrawHist(void *p) {
      typedef ::TProofDrawHist current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDrawHist

//______________________________________________________________________________
void TProofDrawProfile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofDrawProfile.

   if (R__b.IsReading()) {
      TProofDrawProfile::Class()->ReadBuffer(R__b, this);
   } else {
      TProofDrawProfile::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofDrawProfile::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofDrawProfile.

      TClass *R__cl = ::TProofDrawProfile::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fProfile", &fProfile);
      TProofDraw::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDrawProfile_IsA(const void *obj) {
      return ((::TProofDrawProfile*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofDrawProfile(void *p) {
      return  p ? new(p) ::TProofDrawProfile : new ::TProofDrawProfile;
   }
   static void *newArray_TProofDrawProfile(Long_t size) {
      return new ::TProofDrawProfile[size];
   }
   // Wrapper around operator delete
   static void delete_TProofDrawProfile(void *p) {
      delete ((::TProofDrawProfile*)p);
   }
   static void deleteArray_TProofDrawProfile(void *p) {
      delete [] ((::TProofDrawProfile*)p);
   }
   static void destruct_TProofDrawProfile(void *p) {
      typedef ::TProofDrawProfile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDrawProfile

//______________________________________________________________________________
void TProofDrawProfile2D::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofDrawProfile2D.

   if (R__b.IsReading()) {
      TProofDrawProfile2D::Class()->ReadBuffer(R__b, this);
   } else {
      TProofDrawProfile2D::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofDrawProfile2D::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofDrawProfile2D.

      TClass *R__cl = ::TProofDrawProfile2D::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fProfile", &fProfile);
      TProofDraw::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDrawProfile2D_IsA(const void *obj) {
      return ((::TProofDrawProfile2D*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofDrawProfile2D(void *p) {
      return  p ? new(p) ::TProofDrawProfile2D : new ::TProofDrawProfile2D;
   }
   static void *newArray_TProofDrawProfile2D(Long_t size) {
      return new ::TProofDrawProfile2D[size];
   }
   // Wrapper around operator delete
   static void delete_TProofDrawProfile2D(void *p) {
      delete ((::TProofDrawProfile2D*)p);
   }
   static void deleteArray_TProofDrawProfile2D(void *p) {
      delete [] ((::TProofDrawProfile2D*)p);
   }
   static void destruct_TProofDrawProfile2D(void *p) {
      typedef ::TProofDrawProfile2D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDrawProfile2D

//______________________________________________________________________________
void TProofDrawGraph::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofDrawGraph.

   if (R__b.IsReading()) {
      TProofDrawGraph::Class()->ReadBuffer(R__b, this);
   } else {
      TProofDrawGraph::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofDrawGraph::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofDrawGraph.

      TClass *R__cl = ::TProofDrawGraph::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fGraph", &fGraph);
      TProofDraw::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDrawGraph_IsA(const void *obj) {
      return ((::TProofDrawGraph*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofDrawGraph(void *p) {
      return  p ? new(p) ::TProofDrawGraph : new ::TProofDrawGraph;
   }
   static void *newArray_TProofDrawGraph(Long_t size) {
      return new ::TProofDrawGraph[size];
   }
   // Wrapper around operator delete
   static void delete_TProofDrawGraph(void *p) {
      delete ((::TProofDrawGraph*)p);
   }
   static void deleteArray_TProofDrawGraph(void *p) {
      delete [] ((::TProofDrawGraph*)p);
   }
   static void destruct_TProofDrawGraph(void *p) {
      typedef ::TProofDrawGraph current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDrawGraph

//______________________________________________________________________________
void TProofDrawPolyMarker3D::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofDrawPolyMarker3D.

   if (R__b.IsReading()) {
      TProofDrawPolyMarker3D::Class()->ReadBuffer(R__b, this);
   } else {
      TProofDrawPolyMarker3D::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofDrawPolyMarker3D::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofDrawPolyMarker3D.

      TClass *R__cl = ::TProofDrawPolyMarker3D::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPolyMarker3D", &fPolyMarker3D);
      TProofDraw::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDrawPolyMarker3D_IsA(const void *obj) {
      return ((::TProofDrawPolyMarker3D*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofDrawPolyMarker3D(void *p) {
      return  p ? new(p) ::TProofDrawPolyMarker3D : new ::TProofDrawPolyMarker3D;
   }
   static void *newArray_TProofDrawPolyMarker3D(Long_t size) {
      return new ::TProofDrawPolyMarker3D[size];
   }
   // Wrapper around operator delete
   static void delete_TProofDrawPolyMarker3D(void *p) {
      delete ((::TProofDrawPolyMarker3D*)p);
   }
   static void deleteArray_TProofDrawPolyMarker3D(void *p) {
      delete [] ((::TProofDrawPolyMarker3D*)p);
   }
   static void destruct_TProofDrawPolyMarker3D(void *p) {
      typedef ::TProofDrawPolyMarker3D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDrawPolyMarker3D

//______________________________________________________________________________
void TProofDrawListOfGraphs::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofDrawListOfGraphs.

   if (R__b.IsReading()) {
      TProofDrawListOfGraphs::Class()->ReadBuffer(R__b, this);
   } else {
      TProofDrawListOfGraphs::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofDrawListOfGraphs::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofDrawListOfGraphs.

      TClass *R__cl = ::TProofDrawListOfGraphs::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPoints", &fPoints);
      TProofDraw::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDrawListOfGraphs_IsA(const void *obj) {
      return ((::TProofDrawListOfGraphs*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofDrawListOfGraphs(void *p) {
      return  p ? new(p) ::TProofDrawListOfGraphs : new ::TProofDrawListOfGraphs;
   }
   static void *newArray_TProofDrawListOfGraphs(Long_t size) {
      return new ::TProofDrawListOfGraphs[size];
   }
   // Wrapper around operator delete
   static void delete_TProofDrawListOfGraphs(void *p) {
      delete ((::TProofDrawListOfGraphs*)p);
   }
   static void deleteArray_TProofDrawListOfGraphs(void *p) {
      delete [] ((::TProofDrawListOfGraphs*)p);
   }
   static void destruct_TProofDrawListOfGraphs(void *p) {
      typedef ::TProofDrawListOfGraphs current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDrawListOfGraphs

//______________________________________________________________________________
void TProofDrawListOfPolyMarkers3D::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofDrawListOfPolyMarkers3D.

   if (R__b.IsReading()) {
      TProofDrawListOfPolyMarkers3D::Class()->ReadBuffer(R__b, this);
   } else {
      TProofDrawListOfPolyMarkers3D::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TProofDrawListOfPolyMarkers3D::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TProofDrawListOfPolyMarkers3D.

      TClass *R__cl = ::TProofDrawListOfPolyMarkers3D::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPoints", &fPoints);
      TProofDraw::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDrawListOfPolyMarkers3D_IsA(const void *obj) {
      return ((::TProofDrawListOfPolyMarkers3D*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofDrawListOfPolyMarkers3D(void *p) {
      return  p ? new(p) ::TProofDrawListOfPolyMarkers3D : new ::TProofDrawListOfPolyMarkers3D;
   }
   static void *newArray_TProofDrawListOfPolyMarkers3D(Long_t size) {
      return new ::TProofDrawListOfPolyMarkers3D[size];
   }
   // Wrapper around operator delete
   static void delete_TProofDrawListOfPolyMarkers3D(void *p) {
      delete ((::TProofDrawListOfPolyMarkers3D*)p);
   }
   static void deleteArray_TProofDrawListOfPolyMarkers3D(void *p) {
      delete [] ((::TProofDrawListOfPolyMarkers3D*)p);
   }
   static void destruct_TProofDrawListOfPolyMarkers3D(void *p) {
      typedef ::TProofDrawListOfPolyMarkers3D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDrawListOfPolyMarkers3D

//______________________________________________________________________________
void TDrawFeedback::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDrawFeedback.

   if (R__b.IsReading()) {
      TDrawFeedback::Class()->ReadBuffer(R__b, this);
   } else {
      TDrawFeedback::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDrawFeedback::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDrawFeedback.

      TClass *R__cl = ::TDrawFeedback::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fAll", &fAll);
      R__insp.Inspect(R__cl, R__parent, "*fNames", &fNames);
      R__insp.Inspect(R__cl, R__parent, "*fOption", &fOption);
      R__insp.Inspect(R__cl, R__parent, "*fProof", &fProof);
      TObject::ShowMembers(R__insp, R__parent);
      TQObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDrawFeedback_IsA(const void *obj) {
      return ((::TDrawFeedback*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDrawFeedback(void *p) {
      return  p ? new(p) ::TDrawFeedback : new ::TDrawFeedback;
   }
   static void *newArray_TDrawFeedback(Long_t size) {
      return new ::TDrawFeedback[size];
   }
   // Wrapper around operator delete
   static void delete_TDrawFeedback(void *p) {
      delete ((::TDrawFeedback*)p);
   }
   static void deleteArray_TDrawFeedback(void *p) {
      delete [] ((::TDrawFeedback*)p);
   }
   static void destruct_TDrawFeedback(void *p) {
      typedef ::TDrawFeedback current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDrawFeedback

//______________________________________________________________________________
void TPerfStats::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPerfStats.

   TVirtualPerfStats::Streamer(R__b);
}

//______________________________________________________________________________
void TPerfStats::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPerfStats.

      TClass *R__cl = ::TPerfStats::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTrace", &fTrace);
      R__insp.Inspect(R__cl, R__parent, "fTzero", &fTzero);
      fTzero.ShowMembers(R__insp, strcat(R__parent,"fTzero.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fPerfEvent", &fPerfEvent);
      R__insp.Inspect(R__cl, R__parent, "*fPacketsHist", &fPacketsHist);
      R__insp.Inspect(R__cl, R__parent, "*fEventsHist", &fEventsHist);
      R__insp.Inspect(R__cl, R__parent, "*fNodeHist", &fNodeHist);
      R__insp.Inspect(R__cl, R__parent, "*fLatencyHist", &fLatencyHist);
      R__insp.Inspect(R__cl, R__parent, "*fProcTimeHist", &fProcTimeHist);
      R__insp.Inspect(R__cl, R__parent, "*fCpuTimeHist", &fCpuTimeHist);
      R__insp.Inspect(R__cl, R__parent, "fBytesRead", &fBytesRead);
      TVirtualPerfStats::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPerfStats_IsA(const void *obj) {
      return ((::TPerfStats*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TPerfStats(void *p) {
      delete ((::TPerfStats*)p);
   }
   static void deleteArray_TPerfStats(void *p) {
      delete [] ((::TPerfStats*)p);
   }
   static void destruct_TPerfStats(void *p) {
      typedef ::TPerfStats current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPerfStats

//______________________________________________________________________________
void TPerfEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPerfEvent.

   if (R__b.IsReading()) {
      TPerfEvent::Class()->ReadBuffer(R__b, this);
   } else {
      TPerfEvent::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TPerfEvent::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPerfEvent.

      TClass *R__cl = ::TPerfEvent::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fEvtNode", &fEvtNode);
      fEvtNode.ShowMembers(R__insp, strcat(R__parent,"fEvtNode.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTimeStamp", &fTimeStamp);
      fTimeStamp.ShowMembers(R__insp, strcat(R__parent,"fTimeStamp.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "fSlaveName", &fSlaveName);
      fSlaveName.ShowMembers(R__insp, strcat(R__parent,"fSlaveName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNodeName", &fNodeName);
      fNodeName.ShowMembers(R__insp, strcat(R__parent,"fNodeName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFileName", &fFileName);
      fFileName.ShowMembers(R__insp, strcat(R__parent,"fFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFileClass", &fFileClass);
      fFileClass.ShowMembers(R__insp, strcat(R__parent,"fFileClass.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSlave", &fSlave);
      fSlave.ShowMembers(R__insp, strcat(R__parent,"fSlave.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fEventsProcessed", &fEventsProcessed);
      R__insp.Inspect(R__cl, R__parent, "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__parent, "fLen", &fLen);
      R__insp.Inspect(R__cl, R__parent, "fLatency", &fLatency);
      R__insp.Inspect(R__cl, R__parent, "fProcTime", &fProcTime);
      R__insp.Inspect(R__cl, R__parent, "fCpuTime", &fCpuTime);
      R__insp.Inspect(R__cl, R__parent, "fIsStart", &fIsStart);
      R__insp.Inspect(R__cl, R__parent, "fIsOk", &fIsOk);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPerfEvent_IsA(const void *obj) {
      return ((::TPerfEvent*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TPerfEvent(void *p) {
      return  p ? new(p) ::TPerfEvent : new ::TPerfEvent;
   }
   static void *newArray_TPerfEvent(Long_t size) {
      return new ::TPerfEvent[size];
   }
   // Wrapper around operator delete
   static void delete_TPerfEvent(void *p) {
      delete ((::TPerfEvent*)p);
   }
   static void deleteArray_TPerfEvent(void *p) {
      delete [] ((::TPerfEvent*)p);
   }
   static void destruct_TPerfEvent(void *p) {
      typedef ::TPerfEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPerfEvent

//______________________________________________________________________________
void TStatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class TStatus.

   if (R__b.IsReading()) {
      TStatus::Class()->ReadBuffer(R__b, this);
   } else {
      TStatus::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TStatus::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TStatus.

      TClass *R__cl = ::TStatus::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMsgs", (void*)&fMsgs);
      ::ROOT::GenericShowMembers("TStatus::MsgSet_t", (void*)&fMsgs, R__insp, strcat(R__parent,"fMsgs."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIter", (void*)&fIter);
      ::ROOT::GenericShowMembers("TStatus::MsgIter_t", (void*)&fIter, R__insp, strcat(R__parent,"fIter."),true);
      R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TStatus_IsA(const void *obj) {
      return ((::TStatus*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TStatus(void *p) {
      return  p ? new(p) ::TStatus : new ::TStatus;
   }
   static void *newArray_TStatus(Long_t size) {
      return new ::TStatus[size];
   }
   // Wrapper around operator delete
   static void delete_TStatus(void *p) {
      delete ((::TStatus*)p);
   }
   static void deleteArray_TStatus(void *p) {
      delete [] ((::TStatus*)p);
   }
   static void destruct_TStatus(void *p) {
      typedef ::TStatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TStatus

//______________________________________________________________________________
namespace ROOT {
   void TProofDrawListOfGraphscLcLPoint3D_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class TProofDrawListOfGraphs::Point3D_t.

      typedef ::ROOT::Shadow::TProofDrawListOfGraphs__Point3D_t ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const ::TProofDrawListOfGraphs::Point3D_t*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fX", &sobj->fX);
      R__insp.Inspect(R__cl, R__parent, "fY", &sobj->fY);
      R__insp.Inspect(R__cl, R__parent, "fZ", &sobj->fZ);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDrawListOfGraphscLcLPoint3D_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::TProofDrawListOfGraphs::Point3D_t*)obj));
   }
   // Wrappers around operator new
   static void *new_TProofDrawListOfGraphscLcLPoint3D_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TProofDrawListOfGraphs::Point3D_t : new ::TProofDrawListOfGraphs::Point3D_t;
   }
   static void *newArray_TProofDrawListOfGraphscLcLPoint3D_t(Long_t size) {
      return new ::TProofDrawListOfGraphs::Point3D_t[size];
   }
   // Wrapper around operator delete
   static void delete_TProofDrawListOfGraphscLcLPoint3D_t(void *p) {
      delete ((::TProofDrawListOfGraphs::Point3D_t*)p);
   }
   static void deleteArray_TProofDrawListOfGraphscLcLPoint3D_t(void *p) {
      delete [] ((::TProofDrawListOfGraphs::Point3D_t*)p);
   }
   static void destruct_TProofDrawListOfGraphscLcLPoint3D_t(void *p) {
      typedef ::TProofDrawListOfGraphs::Point3D_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDrawListOfGraphs::Point3D_t

//______________________________________________________________________________
namespace ROOT {
   void TProofDrawListOfPolyMarkers3DcLcLPoint4D_t_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class TProofDrawListOfPolyMarkers3D::Point4D_t.

      typedef ::ROOT::Shadow::TProofDrawListOfPolyMarkers3D__Point4D_t ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const ::TProofDrawListOfPolyMarkers3D::Point4D_t*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fX", &sobj->fX);
      R__insp.Inspect(R__cl, R__parent, "fY", &sobj->fY);
      R__insp.Inspect(R__cl, R__parent, "fZ", &sobj->fZ);
      R__insp.Inspect(R__cl, R__parent, "fT", &sobj->fT);
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofDrawListOfPolyMarkers3DcLcLPoint4D_t_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(::TProofDrawListOfPolyMarkers3D::Point4D_t*)obj));
   }
   // Wrappers around operator new
   static void *new_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TProofDrawListOfPolyMarkers3D::Point4D_t : new ::TProofDrawListOfPolyMarkers3D::Point4D_t;
   }
   static void *newArray_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t(Long_t size) {
      return new ::TProofDrawListOfPolyMarkers3D::Point4D_t[size];
   }
   // Wrapper around operator delete
   static void delete_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t(void *p) {
      delete ((::TProofDrawListOfPolyMarkers3D::Point4D_t*)p);
   }
   static void deleteArray_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t(void *p) {
      delete [] ((::TProofDrawListOfPolyMarkers3D::Point4D_t*)p);
   }
   static void destruct_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t(void *p) {
      typedef ::TProofDrawListOfPolyMarkers3D::Point4D_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofDrawListOfPolyMarkers3D::Point4D_t

//______________________________________________________________________________
template <> void TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>.

   if (R__b.IsReading()) {
      TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Class()->ReadBuffer(R__b, this);
   } else {
      TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
namespace ROOT {
   void TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>.

      typedef ::ROOT::Shadow::TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fVector", &sobj->fVector);
      sobj->TNamed::ShowMembers(R__insp, R__parent);
   }

}

template <> void TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   ::ROOT::TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR_ShowMembers(this, R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR_IsA(const void *obj) {
      return ((::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p) {
      return  p ? new(p) ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> : new ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>;
   }
   static void *newArray_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(Long_t size) {
      return new ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>[size];
   }
   // Wrapper around operator delete
   static void delete_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p) {
      delete ((::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)p);
   }
   static void deleteArray_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p) {
      delete [] ((::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)p);
   }
   static void destruct_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p) {
      typedef ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>

//______________________________________________________________________________
template <> void TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Streamer(TBuffer &R__b)
{
   // Stream an object of class TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>.

   if (R__b.IsReading()) {
      TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Class()->ReadBuffer(R__b, this);
   } else {
      TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
namespace ROOT {
   void TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>.

      typedef ::ROOT::Shadow::TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstance((const ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fVector", &sobj->fVector);
      sobj->TNamed::ShowMembers(R__insp, R__parent);
   }

}

template <> void TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   ::ROOT::TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_ShowMembers(this, R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_IsA(const void *obj) {
      return ((::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p) {
      return  p ? new(p) ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> : new ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>;
   }
   static void *newArray_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(Long_t size) {
      return new ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>[size];
   }
   // Wrapper around operator delete
   static void delete_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p) {
      delete ((::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)p);
   }
   static void deleteArray_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p) {
      delete [] ((::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)p);
   }
   static void destruct_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p) {
      typedef ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>

namespace ROOT {
   void setlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void setlEstringgR_Dictionary();
   static TClass *setlEstringgR_IsA(const void*);
   static void *new_setlEstringgR(void *p = 0);
   static void *newArray_setlEstringgR(Long_t size);
   static void delete_setlEstringgR(void *p);
   static void deleteArray_setlEstringgR(void *p);
   static void destruct_setlEstringgR(void *p);

   // Function generating the singleton type initializer
   static // The GenerateInitInstance for STL are not unique and should not be externally accessible
   TGenericClassInfo *GenerateInitInstance(const set<string>*)
   {
      set<string> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("set<string>", ::TStreamerInfo::Class_Version(), "prec_stl/set", 42,
                  typeid(set<string>), DefineBehavior(ptr, ptr),
                  0, &setlEstringgR_Dictionary, &setlEstringgR_IsA, 0,
                  sizeof(set<string>) );
      instance.SetNew(&new_setlEstringgR);
      instance.SetNewArray(&newArray_setlEstringgR);
      instance.SetDelete(&delete_setlEstringgR);
      instance.SetDeleteArray(&deleteArray_setlEstringgR);
      instance.SetDestructor(&destruct_setlEstringgR);
      instance.AdoptStreamer(TCollectionProxy::genClassStreamer(TCollectionProxy::Insert<set<string> >()));
      instance.AdoptCollectionProxy(TCollectionProxy::genProxy(TCollectionProxy::Insert<set<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const set<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const set<string>*)0x0)->GetClass();
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *setlEstringgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(set<string>*)obj));
   }
   // Wrappers around operator new
   static void *new_setlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<string> : new set<string>;
   }
   static void *newArray_setlEstringgR(Long_t size) {
      return new set<string>[size];
   }
   // Wrapper around operator delete
   static void delete_setlEstringgR(void *p) {
      delete ((set<string>*)p);
   }
   static void deleteArray_setlEstringgR(void *p) {
      delete [] ((set<string>*)p);
   }
   static void destruct_setlEstringgR(void *p) {
      typedef set<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<string>

namespace ROOT {
   void vectorlETProofDrawListOfGraphscLcLPoint3D_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlETProofDrawListOfGraphscLcLPoint3D_tgR_Dictionary();
   static TClass *vectorlETProofDrawListOfGraphscLcLPoint3D_tgR_IsA(const void*);
   static void *new_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p = 0);
   static void *newArray_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR(Long_t size);
   static void delete_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p);
   static void deleteArray_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p);
   static void destruct_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p);

   // Function generating the singleton type initializer
   static // The GenerateInitInstance for STL are not unique and should not be externally accessible
   TGenericClassInfo *GenerateInitInstance(const vector<TProofDrawListOfGraphs::Point3D_t>*)
   {
      vector<TProofDrawListOfGraphs::Point3D_t> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("vector<TProofDrawListOfGraphs::Point3D_t>", ::TStreamerInfo::Class_Version(), "prec_stl/vector", 42,
                  typeid(vector<TProofDrawListOfGraphs::Point3D_t>), DefineBehavior(ptr, ptr),
                  0, &vectorlETProofDrawListOfGraphscLcLPoint3D_tgR_Dictionary, &vectorlETProofDrawListOfGraphscLcLPoint3D_tgR_IsA, 4,
                  sizeof(vector<TProofDrawListOfGraphs::Point3D_t>) );
      instance.SetNew(&new_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR);
      instance.SetNewArray(&newArray_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR);
      instance.SetDelete(&delete_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR);
      instance.SetDestructor(&destruct_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR);
      instance.AdoptStreamer(TCollectionProxy::genClassStreamer(TCollectionProxy::Pushback<vector<TProofDrawListOfGraphs::Point3D_t> >()));
      instance.AdoptCollectionProxy(TCollectionProxy::genProxy(TCollectionProxy::Pushback<vector<TProofDrawListOfGraphs::Point3D_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const vector<TProofDrawListOfGraphs::Point3D_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETProofDrawListOfGraphscLcLPoint3D_tgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const vector<TProofDrawListOfGraphs::Point3D_t>*)0x0)->GetClass();
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *vectorlETProofDrawListOfGraphscLcLPoint3D_tgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(vector<TProofDrawListOfGraphs::Point3D_t>*)obj));
   }
   // Wrappers around operator new
   static void *new_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TProofDrawListOfGraphs::Point3D_t> : new vector<TProofDrawListOfGraphs::Point3D_t>;
   }
   static void *newArray_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR(Long_t size) {
      return new vector<TProofDrawListOfGraphs::Point3D_t>[size];
   }
   // Wrapper around operator delete
   static void delete_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p) {
      delete ((vector<TProofDrawListOfGraphs::Point3D_t>*)p);
   }
   static void deleteArray_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p) {
      delete [] ((vector<TProofDrawListOfGraphs::Point3D_t>*)p);
   }
   static void destruct_vectorlETProofDrawListOfGraphscLcLPoint3D_tgR(void *p) {
      typedef vector<TProofDrawListOfGraphs::Point3D_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TProofDrawListOfGraphs::Point3D_t>

namespace ROOT {
   void vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_Dictionary();
   static TClass *vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_IsA(const void*);
   static void *new_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p = 0);
   static void *newArray_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(Long_t size);
   static void delete_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p);
   static void deleteArray_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p);
   static void destruct_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p);

   // Function generating the singleton type initializer
   static // The GenerateInitInstance for STL are not unique and should not be externally accessible
   TGenericClassInfo *GenerateInitInstance(const vector<TProofDrawListOfPolyMarkers3D::Point4D_t>*)
   {
      vector<TProofDrawListOfPolyMarkers3D::Point4D_t> *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("vector<TProofDrawListOfPolyMarkers3D::Point4D_t>", ::TStreamerInfo::Class_Version(), "prec_stl/vector", 42,
                  typeid(vector<TProofDrawListOfPolyMarkers3D::Point4D_t>), DefineBehavior(ptr, ptr),
                  0, &vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_Dictionary, &vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_IsA, 4,
                  sizeof(vector<TProofDrawListOfPolyMarkers3D::Point4D_t>) );
      instance.SetNew(&new_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
      instance.SetNewArray(&newArray_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
      instance.SetDelete(&delete_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
      instance.SetDestructor(&destruct_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
      instance.AdoptStreamer(TCollectionProxy::genClassStreamer(TCollectionProxy::Pushback<vector<TProofDrawListOfPolyMarkers3D::Point4D_t> >()));
      instance.AdoptCollectionProxy(TCollectionProxy::genProxy(TCollectionProxy::Pushback<vector<TProofDrawListOfPolyMarkers3D::Point4D_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const vector<TProofDrawListOfPolyMarkers3D::Point4D_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_Dictionary() {
      ::ROOT::GenerateInitInstance((const vector<TProofDrawListOfPolyMarkers3D::Point4D_t>*)0x0)->GetClass();
   }

}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR_IsA(const void *obj) {
      return GetROOT()->GetClass(typeid(*(vector<TProofDrawListOfPolyMarkers3D::Point4D_t>*)obj));
   }
   // Wrappers around operator new
   static void *new_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TProofDrawListOfPolyMarkers3D::Point4D_t> : new vector<TProofDrawListOfPolyMarkers3D::Point4D_t>;
   }
   static void *newArray_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(Long_t size) {
      return new vector<TProofDrawListOfPolyMarkers3D::Point4D_t>[size];
   }
   // Wrapper around operator delete
   static void delete_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p) {
      delete ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t>*)p);
   }
   static void deleteArray_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p) {
      delete [] ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t>*)p);
   }
   static void destruct_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void *p) {
      typedef vector<TProofDrawListOfPolyMarkers3D::Point4D_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TProofDrawListOfPolyMarkers3D::Point4D_t>

/********************************************************
* proof/src/G__Proof.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__Proof();

extern "C" void G__set_cpp_environmentG__Proof() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("proof/inc/TProofDebug.h");
  G__add_compiledheader("proof/inc/TEventIter.h");
  G__add_compiledheader("proof/inc/TVirtualPacketizer.h");
  G__add_compiledheader("proof/inc/TDrawFeedback.h");
  G__add_compiledheader("proof/inc/TProofServ.h");
  G__add_compiledheader("proof/inc/TSlave.h");
  G__add_compiledheader("proof/inc/TProofPlayer.h");
  G__add_compiledheader("proof/inc/TPerfStats.h");
  G__add_compiledheader("proof/inc/TProof.h");
  G__add_compiledheader("proof/inc/TPacketizer2.h");
  G__add_compiledheader("proof/inc/TDSetProxy.h");
  G__add_compiledheader("proof/inc/TCondor.h");
  G__add_compiledheader("proof/inc/TPacketizer.h");
  G__add_compiledheader("proof/inc/TProofLimitsFinder.h");
  G__add_compiledheader("proof/inc/TStatus.h");
  G__add_compiledheader("proof/inc/TProofDraw.h");
  G__cpp_reset_tagtableG__Proof();
}
class G__proofdIsrcdIG__ProofdOcxx_tag {};

void* operator new(size_t size,G__proofdIsrcdIG__ProofdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__proofdIsrcdIG__ProofdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_proofdIsrcdIG__ProofdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__Proof() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TProofDebug */
// automatic default constructor
static int G__G__Proof_127_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDebug *p;
   if(G__getaryconstruct()) p=new TProofDebug[G__getaryconstruct()];
   else p=::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) TProofDebug;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDebug);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_127_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofDebug *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofDebug(*(TProofDebug*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDebug);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDebug G__TTProofDebug;
static int G__G__Proof_127_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDebug *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TProofDebug *)((G__getstructoffset())+sizeof(TProofDebug)*i))->~G__TTProofDebug();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TProofDebug *)(G__getstructoffset()))->~G__TTProofDebug();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_127_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDebug *dest = (TProofDebug*)(G__getstructoffset());
   *dest = (*(TProofDebug*)libp->para[0].ref);
   const TProofDebug& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEventIter */
static int G__G__Proof_134_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TEventIter*)(G__getstructoffset()))->GetNextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventIter*)(G__getstructoffset()))->StopProcess((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TEventIter::Create((TDSet*)G__int(libp->para[0]),(TSelector*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TEventIter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventIter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TEventIter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TEventIter::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TEventIter*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventIter*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventIter*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventIter*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventIter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TEventIter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventIter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_134_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TEventIter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEventIter G__TTEventIter;
static int G__G__Proof_134_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TEventIter *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TEventIter *)((G__getstructoffset())+sizeof(TEventIter)*i);
   else  delete (TEventIter *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_134_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TEventIter *dest = (TEventIter*)(G__getstructoffset());
   *dest = (*(TEventIter*)libp->para[0].ref);
   const TEventIter& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEventIterObj */
static int G__G__Proof_135_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TEventIterObj *p=NULL;
   if(G__getaryconstruct()) p=new TEventIterObj[G__getaryconstruct()];
   else                    p=new TEventIterObj;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TEventIterObj *p=NULL;
      p = new TEventIterObj(
(TDSet*)G__int(libp->para[0]),(TSelector*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TEventIterObj*)(G__getstructoffset()))->GetNextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TEventIterObj::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventIterObj::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TEventIterObj::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TEventIterObj::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TEventIterObj*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventIterObj*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventIterObj*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventIterObj*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventIterObj::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TEventIterObj::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventIterObj::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_135_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TEventIterObj::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_135_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TEventIterObj *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TEventIterObj(*(TEventIterObj*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEventIterObj G__TTEventIterObj;
static int G__G__Proof_135_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TEventIterObj *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TEventIterObj *)((G__getstructoffset())+sizeof(TEventIterObj)*i);
   else  delete (TEventIterObj *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_135_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TEventIterObj *dest = (TEventIterObj*)(G__getstructoffset());
   *dest = (*(TEventIterObj*)libp->para[0].ref);
   const TEventIterObj& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEventIterTree */
static int G__G__Proof_136_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TEventIterTree *p=NULL;
   if(G__getaryconstruct()) p=new TEventIterTree[G__getaryconstruct()];
   else                    p=new TEventIterTree;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TEventIterTree *p=NULL;
      p = new TEventIterTree(
(TDSet*)G__int(libp->para[0]),(TSelector*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TEventIterTree*)(G__getstructoffset()))->GetNextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TEventIterTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventIterTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TEventIterTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TEventIterTree::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TEventIterTree*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventIterTree*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventIterTree*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventIterTree*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventIterTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TEventIterTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventIterTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_136_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TEventIterTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_136_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TEventIterTree *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TEventIterTree(*(TEventIterTree*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEventIterTree G__TTEventIterTree;
static int G__G__Proof_136_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TEventIterTree *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TEventIterTree *)((G__getstructoffset())+sizeof(TEventIterTree)*i);
   else  delete (TEventIterTree *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_136_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TEventIterTree *dest = (TEventIterTree*)(G__getstructoffset());
   *dest = (*(TEventIterTree*)libp->para[0].ref);
   const TEventIterTree& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSlave */
static int G__G__Proof_137_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSlave*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSlave*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSlave*)(G__getstructoffset()))->Compare((const TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TSlave*)(G__getstructoffset()))->IsSortable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSlave*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSlave*)(G__getstructoffset()))->GetImage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSlave*)(G__getstructoffset()))->GetProofWorkDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSlave*)(G__getstructoffset()))->GetWorkDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSlave*)(G__getstructoffset()))->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSlave*)(G__getstructoffset()))->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSlave*)(G__getstructoffset()))->GetOrdinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSlave*)(G__getstructoffset()))->GetPerfIdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSlave*)(G__getstructoffset()))->GetSecurity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSlave*)(G__getstructoffset()))->GetProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSlave*)(G__getstructoffset()))->GetSocket());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSlave*)(G__getstructoffset()))->GetProof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TSlave*)(G__getstructoffset()))->GetBytesRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TSlave*)(G__getstructoffset()))->GetRealTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TSlave*)(G__getstructoffset()))->GetCpuTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSlave*)(G__getstructoffset()))->GetSlaveType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSlave*)(G__getstructoffset()))->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSlave*)(G__getstructoffset()))->GetParallel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TString *pobj,xobj=((const TSlave*)(G__getstructoffset()))->GetMsd();
        pobj=new TString(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSlave*)(G__getstructoffset()))->GetInputHandler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlave*)(G__getstructoffset()))->SetInputHandler((TFileHandler*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TSlave*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TSlave*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TSlave*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSlave::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSlave::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSlave::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSlave::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSlave*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlave*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlave*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlave*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSlave::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSlave::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSlave::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_137_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSlave::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSlave G__TTSlave;
static int G__G__Proof_137_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSlave *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSlave *)((G__getstructoffset())+sizeof(TSlave)*i);
   else  delete (TSlave *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVirtualPacketizer */
static int G__G__Proof_139_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVirtualPacketizer*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TVirtualPacketizer*)(G__getstructoffset()))->GetEntriesProcessed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TVirtualPacketizer*)(G__getstructoffset()))->GetEntriesProcessed((TSlave*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TVirtualPacketizer*)(G__getstructoffset()))->GetNextPacket((TSlave*)G__int(libp->para[0]),(TMessage*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPacketizer*)(G__getstructoffset()))->StopProcess((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVirtualPacketizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualPacketizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TVirtualPacketizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TVirtualPacketizer::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualPacketizer*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPacketizer*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPacketizer*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualPacketizer*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualPacketizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualPacketizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualPacketizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_139_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualPacketizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVirtualPacketizer G__TTVirtualPacketizer;
static int G__G__Proof_139_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TVirtualPacketizer *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TVirtualPacketizer *)((G__getstructoffset())+sizeof(TVirtualPacketizer)*i);
   else  delete (TVirtualPacketizer *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProof */
static int G__G__Proof_176_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProof *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TProof(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TProof(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TProof((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TProof((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProof);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->Ping());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->Exec((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(TEventList*)G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->StopProcess((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->AddInput((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->ClearInput();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TProof*)(G__getstructoffset()))->GetOutput((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TProof*)(G__getstructoffset()))->GetOutputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->SetParallel((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->SetParallel());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->SetLogLevel((Int_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->SetLogLevel((Int_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TProof*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TProof*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->ShowCache((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->ShowCache();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->ClearCache();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->ShowPackages((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->ShowPackages();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->ShowEnabledPackages((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->ShowEnabledPackages();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->ClearPackages());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->ClearPackage((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->EnablePackage((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->UploadPackage((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TProof*)(G__getstructoffset()))->UploadPackage((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProof*)(G__getstructoffset()))->GetMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProof*)(G__getstructoffset()))->GetConfDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProof*)(G__getstructoffset()))->GetConfFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProof*)(G__getstructoffset()))->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProof*)(G__getstructoffset()))->GetWorkDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProof*)(G__getstructoffset()))->GetImage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProof*)(G__getstructoffset()))->GetUrlProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProof*)(G__getstructoffset()))->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProof*)(G__getstructoffset()))->GetSecurity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProof*)(G__getstructoffset()))->GetRemoteProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProof*)(G__getstructoffset()))->GetClientProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_0_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProof*)(G__getstructoffset()))->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_1_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProof*)(G__getstructoffset()))->GetLogLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_2_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProof*)(G__getstructoffset()))->GetParallel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_3_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TProof*)(G__getstructoffset()))->GetSlaveInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_4_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TProof*)(G__getstructoffset()))->GetBytesRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_5_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TProof*)(G__getstructoffset()))->GetRealTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_6_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TProof*)(G__getstructoffset()))->GetCpuTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_7_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TProof*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_8_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TProof*)(G__getstructoffset()))->IsMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_9_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TProof*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_0_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TProof*)(G__getstructoffset()))->IsParallel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_1_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->AddFeedback((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_2_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->RemoveFeedback((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_3_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->ClearFeedback();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_4_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TProof*)(G__getstructoffset()))->ShowFeedback();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_5_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProof*)(G__getstructoffset()))->GetFeedbackList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_6_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TProof*)(G__getstructoffset()))->IsDataReady(*(Long64_t*)G__Longlongref(&libp->para[0]),*(Long64_t*)G__Longlongref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_7_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->SetActive((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->SetActive();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_8_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->Progress((Long64_t)G__Longlong(libp->para[0]),(Long64_t)G__Longlong(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_9_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->Feedback((TList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_0_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TProof*)(G__getstructoffset()))->GetTreeHeader((TDSet*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_1_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TProof*)(G__getstructoffset()))->GetOutputNames());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_2_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->AddChain((TChain*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_3_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->RemoveChain((TChain*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_4_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TProof*)(G__getstructoffset()))->CreateDrawFeedback());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_5_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->SetDrawFeedbackOption((TDrawFeedback*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_6_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->DeleteDrawFeedback((TDrawFeedback*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_7_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProof::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_8_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProof::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_9_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProof::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_0_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProof::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_1_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProof*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_2_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_3_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_4_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProof*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_5_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProof::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_6_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProof::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_7_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProof::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_176_8_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProof::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProof G__TTProof;
static int G__G__Proof_176_9_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProof *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProof *)((G__getstructoffset())+sizeof(TProof)*i);
   else  delete (TProof *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDrawFeedback */
static int G__G__Proof_177_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDrawFeedback *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TDrawFeedback((TVirtualProof*)G__int(libp->para[0]),(TSeqCollection*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDrawFeedback((TVirtualProof*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDrawFeedback[G__getaryconstruct()];
   else                    p=new TDrawFeedback;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawFeedback*)(G__getstructoffset()))->Feedback((TList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawFeedback*)(G__getstructoffset()))->SetOption((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDrawFeedback::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDrawFeedback::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDrawFeedback::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDrawFeedback::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDrawFeedback*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawFeedback*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawFeedback*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawFeedback*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDrawFeedback::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDrawFeedback::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDrawFeedback::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_177_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDrawFeedback::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_177_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDrawFeedback *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDrawFeedback(*(TDrawFeedback*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDrawFeedback G__TTDrawFeedback;
static int G__G__Proof_177_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDrawFeedback *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDrawFeedback *)((G__getstructoffset())+sizeof(TDrawFeedback)*i);
   else  delete (TDrawFeedback *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_177_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDrawFeedback *dest = (TDrawFeedback*)(G__getstructoffset());
   *dest = (*(TDrawFeedback*)libp->para[0].ref);
   const TDrawFeedback& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofPlayer */
static int G__G__Proof_183_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->StopFeedback();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofPlayer *p=NULL;
   if(G__getaryconstruct()) p=new TProofPlayer[G__getaryconstruct()];
   else                    p=new TProofPlayer;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letLonglong(result7,110,(G__int64)((TProofPlayer*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(TEventList*)G__int(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TProofPlayer*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TProofPlayer*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TProofPlayer*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TProofPlayer*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letLonglong(result7,110,(G__int64)((TProofPlayer*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TProofPlayer*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TProofPlayer*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TProofPlayer*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->StopProcess((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->AddInput((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->ClearInput();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofPlayer*)(G__getstructoffset()))->GetOutput((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofPlayer*)(G__getstructoffset()))->GetOutputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofPlayer*)(G__getstructoffset()))->GetInputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->StoreOutput((TList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->StoreFeedback((TObject*)G__int(libp->para[0]),(TList*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->Progress((Long64_t)G__Longlong(libp->para[0]),(Long64_t)G__Longlong(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->Progress((TSlave*)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->Feedback((TList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TProofPlayer*)(G__getstructoffset()))->GetNextPacket((TSlave*)G__int(libp->para[0]),(TMessage*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->UpdateAutoBin(
(const char*)G__int(libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4]),*(Double_t*)G__Doubleref(&libp->para[5])
,*(Double_t*)G__Doubleref(&libp->para[6]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TProofPlayer*)(G__getstructoffset()))->IsClient());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProofPlayer*)(G__getstructoffset()))->GetExitStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TProofPlayer*)(G__getstructoffset()))->GetEventsProcessed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->AddEventsProcessed((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofPlayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofPlayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofPlayer::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofPlayer*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayer*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofPlayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_183_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofPlayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_183_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofPlayer *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofPlayer(*(TProofPlayer*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofPlayer G__TTProofPlayer;
static int G__G__Proof_183_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofPlayer *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofPlayer *)((G__getstructoffset())+sizeof(TProofPlayer)*i);
   else  delete (TProofPlayer *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_183_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofPlayer *dest = (TProofPlayer*)(G__getstructoffset());
   *dest = (*(TProofPlayer*)libp->para[0].ref);
   const TProofPlayer& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofServ */
static int G__G__Proof_185_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofServ *p=NULL;
      p = new TProofServ((int*)G__int(libp->para[0]),(char**)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofServ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofServ*)(G__getstructoffset()))->GetProof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProofServ*)(G__getstructoffset()))->GetService());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProofServ*)(G__getstructoffset()))->GetConfDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProofServ*)(G__getstructoffset()))->GetConfFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProofServ*)(G__getstructoffset()))->GetUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProofServ*)(G__getstructoffset()))->GetWorkDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProofServ*)(G__getstructoffset()))->GetSessionDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProofServ*)(G__getstructoffset()))->GetProtocol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TProofServ*)(G__getstructoffset()))->GetOrdinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProofServ*)(G__getstructoffset()))->GetGroupId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProofServ*)(G__getstructoffset()))->GetGroupSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProofServ*)(G__getstructoffset()))->GetLogLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofServ*)(G__getstructoffset()))->GetSocket());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TProofServ*)(G__getstructoffset()))->GetRealTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TProofServ*)(G__getstructoffset()))->GetCpuTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->GetOptions((int*)G__int(libp->para[0]),(char**)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->HandleSocketInput();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->HandleUrgentData();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->HandleSigPipe();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->Interrupt();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TProofServ*)(G__getstructoffset()))->IsMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TProofServ*)(G__getstructoffset()))->IsParallel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TProofServ*)(G__getstructoffset()))->IsTopMaster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->Run((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->Run();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TProofServ*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TProofServ*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TProofServ*)(G__getstructoffset()))->Get((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TProofServ*)(G__getstructoffset()))->GetNextPacket());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->Reset((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TProofServ*)(G__getstructoffset()))->ReceiveFile((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->SendLogFile((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->SendLogFile();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->SendStatistics();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->SendParallel();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->Terminate((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)TProofServ::IsActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofServ::This());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofServ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofServ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofServ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofServ::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofServ*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofServ*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofServ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofServ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofServ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_185_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofServ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_185_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofServ *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofServ(*(TProofServ*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofServ);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofServ G__TTProofServ;
static int G__G__Proof_185_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofServ *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofServ *)((G__getstructoffset())+sizeof(TProofServ)*i);
   else  delete (TProofServ *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_185_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofServ *dest = (TProofServ*)(G__getstructoffset());
   *dest = (*(TProofServ*)libp->para[0].ref);
   const TProofServ& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TStatus */
static int G__G__Proof_238_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TStatus *p=NULL;
   if(G__getaryconstruct()) p=new TStatus[G__getaryconstruct()];
   else                    p=new TStatus;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TStatus);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TStatus*)(G__getstructoffset()))->IsOk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TStatus*)(G__getstructoffset()))->Add((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TStatus*)(G__getstructoffset()))->Merge((TCollection*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TStatus*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TStatus*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TStatus*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TStatus*)(G__getstructoffset()))->NextMesg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TStatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TStatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TStatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TStatus::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TStatus*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TStatus*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TStatus*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TStatus*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TStatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TStatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TStatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_238_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TStatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_238_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TStatus *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TStatus(*(TStatus*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TStatus);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TStatus G__TTStatus;
static int G__G__Proof_238_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TStatus *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TStatus *)((G__getstructoffset())+sizeof(TStatus)*i);
   else  delete (TStatus *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_238_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TStatus *dest = (TStatus*)(G__getstructoffset());
   *dest = (*(TStatus*)libp->para[0].ref);
   const TStatus& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofPlayerLocal */
static int G__G__Proof_241_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofPlayerLocal *p=NULL;
   if(G__getaryconstruct()) p=new TProofPlayerLocal[G__getaryconstruct()];
   else                    p=new TProofPlayerLocal;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofPlayerLocal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerLocal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofPlayerLocal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofPlayerLocal::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofPlayerLocal*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerLocal*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerLocal*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerLocal*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerLocal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofPlayerLocal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerLocal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_241_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofPlayerLocal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_241_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofPlayerLocal *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofPlayerLocal(*(TProofPlayerLocal*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofPlayerLocal G__TTProofPlayerLocal;
static int G__G__Proof_241_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofPlayerLocal *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofPlayerLocal *)((G__getstructoffset())+sizeof(TProofPlayerLocal)*i);
   else  delete (TProofPlayerLocal *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_241_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofPlayerLocal *dest = (TProofPlayerLocal*)(G__getstructoffset());
   *dest = (*(TProofPlayerLocal*)libp->para[0].ref);
   const TProofPlayerLocal& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofPlayerRemote */
static int G__G__Proof_242_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofPlayerRemote *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TProofPlayerRemote((TProof*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TProofPlayerRemote[G__getaryconstruct()];
   else                    p=new TProofPlayerRemote;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerRemote*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(TEventList*)G__int(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerRemote*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerRemote*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerRemote*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerRemote*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerRemote*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerRemote*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerRemote*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerRemote*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerRemote*)(G__getstructoffset()))->StopProcess((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerRemote*)(G__getstructoffset()))->StoreOutput((TList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerRemote*)(G__getstructoffset()))->StoreFeedback((TObject*)G__int(libp->para[0]),(TList*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerRemote*)(G__getstructoffset()))->MergeOutput();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerRemote*)(G__getstructoffset()))->Progress((Long64_t)G__Longlong(libp->para[0]),(Long64_t)G__Longlong(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerRemote*)(G__getstructoffset()))->Progress((TSlave*)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerRemote*)(G__getstructoffset()))->Feedback((TList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TProofPlayerRemote*)(G__getstructoffset()))->GetNextPacket((TSlave*)G__int(libp->para[0]),(TMessage*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TProofPlayerRemote*)(G__getstructoffset()))->IsClient());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofPlayerRemote::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerRemote::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofPlayerRemote::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofPlayerRemote::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofPlayerRemote*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerRemote*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerRemote*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerRemote*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerRemote::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofPlayerRemote::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerRemote::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_242_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofPlayerRemote::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_242_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofPlayerRemote *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofPlayerRemote(*(TProofPlayerRemote*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofPlayerRemote G__TTProofPlayerRemote;
static int G__G__Proof_242_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofPlayerRemote *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofPlayerRemote *)((G__getstructoffset())+sizeof(TProofPlayerRemote)*i);
   else  delete (TProofPlayerRemote *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_242_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofPlayerRemote *dest = (TProofPlayerRemote*)(G__getstructoffset());
   *dest = (*(TProofPlayerRemote*)libp->para[0].ref);
   const TProofPlayerRemote& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofPlayerSlave */
static int G__G__Proof_243_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofPlayerSlave *p=NULL;
   if(G__getaryconstruct()) p=new TProofPlayerSlave[G__getaryconstruct()];
   else                    p=new TProofPlayerSlave;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofPlayerSlave *p=NULL;
      p = new TProofPlayerSlave((TSocket*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerSlave*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerSlave*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerSlave*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerSlave*)(G__getstructoffset()))->DrawSelect((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofPlayerSlave::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerSlave::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofPlayerSlave::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofPlayerSlave::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofPlayerSlave*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerSlave*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerSlave*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerSlave*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerSlave::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofPlayerSlave::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerSlave::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_243_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofPlayerSlave::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_243_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofPlayerSlave *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofPlayerSlave(*(TProofPlayerSlave*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofPlayerSlave G__TTProofPlayerSlave;
static int G__G__Proof_243_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofPlayerSlave *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofPlayerSlave *)((G__getstructoffset())+sizeof(TProofPlayerSlave)*i);
   else  delete (TProofPlayerSlave *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_243_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofPlayerSlave *dest = (TProofPlayerSlave*)(G__getstructoffset());
   *dest = (*(TProofPlayerSlave*)libp->para[0].ref);
   const TProofPlayerSlave& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofPlayerSuperMaster */
static int G__G__Proof_244_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofPlayerSuperMaster *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TProofPlayerSuperMaster((TProof*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TProofPlayerSuperMaster[G__getaryconstruct()];
   else                    p=new TProofPlayerSuperMaster;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSuperMaster);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerSuperMaster*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(TEventList*)G__int(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerSuperMaster*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerSuperMaster*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerSuperMaster*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TProofPlayerSuperMaster*)(G__getstructoffset()))->Process((TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerSuperMaster*)(G__getstructoffset()))->Progress((Long64_t)G__Longlong(libp->para[0]),(Long64_t)G__Longlong(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerSuperMaster*)(G__getstructoffset()))->Progress((TSlave*)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofPlayerSuperMaster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerSuperMaster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofPlayerSuperMaster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofPlayerSuperMaster::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofPlayerSuperMaster*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerSuperMaster*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerSuperMaster*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofPlayerSuperMaster*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerSuperMaster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofPlayerSuperMaster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofPlayerSuperMaster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_244_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofPlayerSuperMaster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofPlayerSuperMaster G__TTProofPlayerSuperMaster;
static int G__G__Proof_244_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofPlayerSuperMaster *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofPlayerSuperMaster *)((G__getstructoffset())+sizeof(TProofPlayerSuperMaster)*i);
   else  delete (TProofPlayerSuperMaster *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPerfEvent */
static int G__G__Proof_255_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPerfEvent *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TPerfEvent((TTimeStamp*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TPerfEvent[G__getaryconstruct()];
   else                    p=new TPerfEvent;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TPerfEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPerfEvent*)(G__getstructoffset()))->IsSortable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPerfEvent*)(G__getstructoffset()))->Compare((const TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TPerfEvent*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TPerfEvent*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPerfEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPerfEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPerfEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPerfEvent::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPerfEvent*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfEvent*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfEvent*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfEvent*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPerfEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPerfEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPerfEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_255_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPerfEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_255_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TPerfEvent *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TPerfEvent(*(TPerfEvent*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TPerfEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPerfEvent G__TTPerfEvent;
static int G__G__Proof_255_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPerfEvent *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPerfEvent *)((G__getstructoffset())+sizeof(TPerfEvent)*i);
   else  delete (TPerfEvent *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_255_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPerfEvent *dest = (TPerfEvent*)(G__getstructoffset());
   *dest = (*(TPerfEvent*)libp->para[0].ref);
   const TPerfEvent& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPerfStats */
static int G__G__Proof_256_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfStats*)(G__getstructoffset()))->SimpleEvent((TVirtualPerfStats::EEventType)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfStats*)(G__getstructoffset()))->PacketEvent(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]),(Long64_t)G__Longlong(libp->para[7]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfStats*)(G__getstructoffset()))->FileEvent((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfStats*)(G__getstructoffset()))->FileOpenEvent((TFile*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfStats*)(G__getstructoffset()))->FileReadEvent((TFile*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfStats*)(G__getstructoffset()))->SetBytesRead((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TPerfStats*)(G__getstructoffset()))->GetBytesRead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPerfStats::Start((TList*)G__int(libp->para[0]),(TList*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPerfStats::Stop();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPerfStats::Setup((TList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPerfStats::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPerfStats::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPerfStats::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPerfStats::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPerfStats*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfStats*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfStats*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPerfStats*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPerfStats::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPerfStats::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPerfStats::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_256_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPerfStats::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_256_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TPerfStats *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TPerfStats(*(TPerfStats*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TPerfStats);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPerfStats G__TTPerfStats;
static int G__G__Proof_256_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPerfStats *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPerfStats *)((G__getstructoffset())+sizeof(TPerfStats)*i);
   else  delete (TPerfStats *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_256_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPerfStats *dest = (TPerfStats*)(G__getstructoffset());
   *dest = (*(TPerfStats*)libp->para[0].ref);
   const TPerfStats& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPacketizer2 */
static int G__G__Proof_263_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPacketizer2 *p=NULL;
      p = new TPacketizer2(
(TDSet*)G__int(libp->para[0]),(TList*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(TList*)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TPacketizer2*)(G__getstructoffset()))->GetEntriesProcessed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TPacketizer2*)(G__getstructoffset()))->GetEntriesProcessed((TSlave*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TPacketizer2*)(G__getstructoffset()))->GetNextPacket((TSlave*)G__int(libp->para[0]),(TMessage*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPacketizer2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPacketizer2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPacketizer2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPacketizer2::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPacketizer2*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPacketizer2*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPacketizer2*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPacketizer2*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPacketizer2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPacketizer2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPacketizer2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_263_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPacketizer2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPacketizer2 G__TTPacketizer2;
static int G__G__Proof_263_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPacketizer2 *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPacketizer2 *)((G__getstructoffset())+sizeof(TPacketizer2)*i);
   else  delete (TPacketizer2 *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCondor */
static int G__G__Proof_264_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCondor *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TCondor((const char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TCondor[G__getaryconstruct()];
   else                    p=new TCondor;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TCondor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TCondor*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TCondor*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCondor*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCondor*)(G__getstructoffset()))->GetVirtualMachines());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TCondor*)(G__getstructoffset()))->Claim((Int_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TCondor*)(G__getstructoffset()))->Claim((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TCondor*)(G__getstructoffset()))->SetState((TCondor::EState)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCondor*)(G__getstructoffset()))->GetState());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TCondor*)(G__getstructoffset()))->Suspend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TCondor*)(G__getstructoffset()))->Resume());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TCondor*)(G__getstructoffset()))->Release());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCondor*)(G__getstructoffset()))->GetVmInfo((const char*)G__int(libp->para[0]),*(TString*)libp->para[1].ref
,*(Int_t*)G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TString *pobj,xobj=((const TCondor*)(G__getstructoffset()))->GetImage((const char*)G__int(libp->para[0]));
        pobj=new TString(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCondor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCondor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCondor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCondor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCondor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCondor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCondor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCondor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCondor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCondor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCondor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_264_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCondor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_264_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TCondor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TCondor(*(TCondor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TCondor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCondor G__TTCondor;
static int G__G__Proof_264_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCondor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCondor *)((G__getstructoffset())+sizeof(TCondor)*i);
   else  delete (TCondor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_264_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCondor *dest = (TCondor*)(G__getstructoffset());
   *dest = (*(TCondor*)libp->para[0].ref);
   const TCondor& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSlaveInfo */
static int G__G__Proof_265_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSlaveInfo *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TSlaveInfo(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TSlaveInfo((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TSlaveInfo((const char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TSlaveInfo[G__getaryconstruct()];
   else                    p=new TSlaveInfo;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSlaveInfo*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSlaveInfo*)(G__getstructoffset()))->GetOrdinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlaveInfo*)(G__getstructoffset()))->SetStatus((TSlaveInfo::ESlaveStatus)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSlaveInfo*)(G__getstructoffset()))->Compare((const TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TSlaveInfo*)(G__getstructoffset()))->IsSortable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TSlaveInfo*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TSlaveInfo*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSlaveInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSlaveInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSlaveInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSlaveInfo::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSlaveInfo*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlaveInfo*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlaveInfo*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlaveInfo*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSlaveInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSlaveInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSlaveInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_265_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSlaveInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_265_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TSlaveInfo *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TSlaveInfo(*(TSlaveInfo*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSlaveInfo G__TTSlaveInfo;
static int G__G__Proof_265_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSlaveInfo *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSlaveInfo *)((G__getstructoffset())+sizeof(TSlaveInfo)*i);
   else  delete (TSlaveInfo *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_265_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSlaveInfo *dest = (TSlaveInfo*)(G__getstructoffset());
   *dest = (*(TSlaveInfo*)libp->para[0].ref);
   const TSlaveInfo& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPacketizer */
static int G__G__Proof_267_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPacketizer *p=NULL;
      p = new TPacketizer(
(TDSet*)G__int(libp->para[0]),(TList*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(TList*)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TPacketizer);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TPacketizer*)(G__getstructoffset()))->GetEntriesProcessed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TPacketizer*)(G__getstructoffset()))->GetEntriesProcessed((TSlave*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TPacketizer*)(G__getstructoffset()))->GetNextPacket((TSlave*)G__int(libp->para[0]),(TMessage*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPacketizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPacketizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPacketizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPacketizer::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPacketizer*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPacketizer*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPacketizer*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPacketizer*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPacketizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPacketizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPacketizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_267_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPacketizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPacketizer G__TTPacketizer;
static int G__G__Proof_267_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPacketizer *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPacketizer *)((G__getstructoffset())+sizeof(TPacketizer)*i);
   else  delete (TPacketizer *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofCondor */
static int G__G__Proof_281_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofCondor *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TProofCondor(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TProofCondor(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TProofCondor((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TProofCondor((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofCondor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofCondor*)(G__getstructoffset()))->SetActive();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofCondor*)(G__getstructoffset()))->SetActive((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofCondor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofCondor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofCondor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofCondor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofCondor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofCondor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofCondor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofCondor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofCondor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofCondor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofCondor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_281_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofCondor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofCondor G__TTProofCondor;
static int G__G__Proof_281_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofCondor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofCondor *)((G__getstructoffset())+sizeof(TProofCondor)*i);
   else  delete (TProofCondor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofSuperMaster */
static int G__G__Proof_282_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofSuperMaster *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TProofSuperMaster(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TProofSuperMaster(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TProofSuperMaster((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TProofSuperMaster((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofSuperMaster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofSuperMaster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofSuperMaster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofSuperMaster::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofSuperMaster*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofSuperMaster*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofSuperMaster*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofSuperMaster*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofSuperMaster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofSuperMaster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofSuperMaster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_282_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofSuperMaster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofSuperMaster G__TTProofSuperMaster;
static int G__G__Proof_282_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofSuperMaster *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofSuperMaster *)((G__getstructoffset())+sizeof(TProofSuperMaster)*i);
   else  delete (TProofSuperMaster *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSetProxy */
static int G__G__Proof_290_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSetProxy *p=NULL;
   if(G__getaryconstruct()) p=new TDSetProxy[G__getaryconstruct()];
   else                    p=new TDSetProxy;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSetProxy *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TDSetProxy(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TDSetProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDSetProxy((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetProxy*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSetProxy*)(G__getstructoffset()))->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetProxy*)(G__getstructoffset()))->SetProofServ((TProofServ*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSetProxy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetProxy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSetProxy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSetProxy::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSetProxy*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetProxy*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetProxy*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetProxy*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetProxy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSetProxy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetProxy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_290_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSetProxy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_290_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSetProxy *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSetProxy(*(TDSetProxy*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSetProxy G__TTDSetProxy;
static int G__G__Proof_290_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSetProxy *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSetProxy *)((G__getstructoffset())+sizeof(TDSetProxy)*i);
   else  delete (TDSetProxy *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_290_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSetProxy *dest = (TDSetProxy*)(G__getstructoffset());
   *dest = (*(TDSetProxy*)libp->para[0].ref);
   const TDSetProxy& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCondorSlave */
static int G__G__Proof_291_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TCondorSlave*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TCondorSlave*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCondorSlave::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCondorSlave::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCondorSlave::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCondorSlave::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCondorSlave*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCondorSlave*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCondorSlave*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCondorSlave*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCondorSlave::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCondorSlave::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCondorSlave::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_291_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCondorSlave::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__G__Proof_291_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCondorSlave *p;
   if(G__getaryconstruct()) p=new TCondorSlave[G__getaryconstruct()];
   else                    p=new TCondorSlave;
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_291_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TCondorSlave *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TCondorSlave(*(TCondorSlave*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCondorSlave G__TTCondorSlave;
static int G__G__Proof_291_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCondorSlave *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCondorSlave *)((G__getstructoffset())+sizeof(TCondorSlave)*i);
   else  delete (TCondorSlave *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_291_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCondorSlave *dest = (TCondorSlave*)(G__getstructoffset());
   *dest = (*(TCondorSlave*)libp->para[0].ref);
   const TCondorSlave& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofLimitsFinder */
static int G__G__Proof_298_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofLimitsFinder *p=NULL;
   if(G__getaryconstruct()) p=new TProofLimitsFinder[G__getaryconstruct()];
   else                    p=new TProofLimitsFinder;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofLimitsFinder);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TProofLimitsFinder*)(G__getstructoffset()))->FindGoodLimits((TH1*)G__int(libp->para[0]),(Axis_t)G__double(libp->para[1])
,(Axis_t)G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TProofLimitsFinder*)(G__getstructoffset()))->FindGoodLimits((TH1*)G__int(libp->para[0]),(Axis_t)G__double(libp->para[1])
,(Axis_t)G__double(libp->para[2]),(Axis_t)G__double(libp->para[3])
,(Axis_t)G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TProofLimitsFinder*)(G__getstructoffset()))->FindGoodLimits(
(TH1*)G__int(libp->para[0]),(Axis_t)G__double(libp->para[1])
,(Axis_t)G__double(libp->para[2]),(Axis_t)G__double(libp->para[3])
,(Axis_t)G__double(libp->para[4]),(Axis_t)G__double(libp->para[5])
,(Axis_t)G__double(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofLimitsFinder::AutoBinFunc(
*(TString*)libp->para[0].ref,*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4]),*(Double_t*)G__Doubleref(&libp->para[5])
,*(Double_t*)G__Doubleref(&libp->para[6]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofLimitsFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofLimitsFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofLimitsFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofLimitsFinder::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofLimitsFinder*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofLimitsFinder*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofLimitsFinder*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofLimitsFinder*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofLimitsFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofLimitsFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofLimitsFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_298_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofLimitsFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_298_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofLimitsFinder *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofLimitsFinder(*(TProofLimitsFinder*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofLimitsFinder);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofLimitsFinder G__TTProofLimitsFinder;
static int G__G__Proof_298_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofLimitsFinder *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofLimitsFinder *)((G__getstructoffset())+sizeof(TProofLimitsFinder)*i);
   else  delete (TProofLimitsFinder *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_298_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofLimitsFinder *dest = (TProofLimitsFinder*)(G__getstructoffset());
   *dest = (*(TProofLimitsFinder*)libp->para[0].ref);
   const TProofLimitsFinder& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDraw */
static int G__G__Proof_314_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TProofDraw*)(G__getstructoffset()))->Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDraw*)(G__getstructoffset()))->Init((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDraw*)(G__getstructoffset()))->Begin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDraw*)(G__getstructoffset()))->SlaveBegin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TProofDraw*)(G__getstructoffset()))->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TProofDraw*)(G__getstructoffset()))->Process((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDraw*)(G__getstructoffset()))->SlaveTerminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDraw*)(G__getstructoffset()))->Terminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofDraw::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDraw::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofDraw::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofDraw::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofDraw*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDraw*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDraw*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDraw*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDraw::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDraw::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDraw::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_314_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDraw::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDraw G__TTProofDraw;
static int G__G__Proof_314_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDraw *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofDraw *)((G__getstructoffset())+sizeof(TProofDraw)*i);
   else  delete (TProofDraw *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_314_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDraw *dest = (TProofDraw*)(G__getstructoffset());
   *dest = (*(TProofDraw*)libp->para[0].ref);
   const TProofDraw& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDrawHist */
static int G__G__Proof_316_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawHist *p=NULL;
   if(G__getaryconstruct()) p=new TProofDrawHist[G__getaryconstruct()];
   else                    p=new TProofDrawHist;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawHist*)(G__getstructoffset()))->Begin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawHist*)(G__getstructoffset()))->Init((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawHist*)(G__getstructoffset()))->SlaveBegin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawHist*)(G__getstructoffset()))->Terminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofDrawHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofDrawHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofDrawHist::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofDrawHist*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawHist*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawHist*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawHist*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_316_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_316_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofDrawHist *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofDrawHist(*(TProofDrawHist*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDrawHist G__TTProofDrawHist;
static int G__G__Proof_316_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDrawHist *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofDrawHist *)((G__getstructoffset())+sizeof(TProofDrawHist)*i);
   else  delete (TProofDrawHist *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_316_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawHist *dest = (TProofDrawHist*)(G__getstructoffset());
   *dest = (*(TProofDrawHist*)libp->para[0].ref);
   const TProofDrawHist& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDrawEventList */
static int G__G__Proof_317_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawEventList *p=NULL;
   if(G__getaryconstruct()) p=new TProofDrawEventList[G__getaryconstruct()];
   else                    p=new TProofDrawEventList;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawEventList*)(G__getstructoffset()))->Init((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawEventList*)(G__getstructoffset()))->SlaveBegin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawEventList*)(G__getstructoffset()))->SlaveTerminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawEventList*)(G__getstructoffset()))->Terminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofDrawEventList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawEventList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofDrawEventList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofDrawEventList::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofDrawEventList*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawEventList*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawEventList*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawEventList*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawEventList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawEventList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawEventList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_317_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawEventList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_317_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofDrawEventList *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofDrawEventList(*(TProofDrawEventList*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDrawEventList G__TTProofDrawEventList;
static int G__G__Proof_317_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDrawEventList *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofDrawEventList *)((G__getstructoffset())+sizeof(TProofDrawEventList)*i);
   else  delete (TProofDrawEventList *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_317_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawEventList *dest = (TProofDrawEventList*)(G__getstructoffset());
   *dest = (*(TProofDrawEventList*)libp->para[0].ref);
   const TProofDrawEventList& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDrawProfile */
static int G__G__Proof_318_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawProfile *p=NULL;
   if(G__getaryconstruct()) p=new TProofDrawProfile[G__getaryconstruct()];
   else                    p=new TProofDrawProfile;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile*)(G__getstructoffset()))->Init((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile*)(G__getstructoffset()))->Begin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile*)(G__getstructoffset()))->SlaveBegin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile*)(G__getstructoffset()))->Terminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofDrawProfile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawProfile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofDrawProfile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofDrawProfile::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofDrawProfile*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawProfile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawProfile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawProfile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_318_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawProfile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_318_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofDrawProfile *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofDrawProfile(*(TProofDrawProfile*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDrawProfile G__TTProofDrawProfile;
static int G__G__Proof_318_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDrawProfile *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofDrawProfile *)((G__getstructoffset())+sizeof(TProofDrawProfile)*i);
   else  delete (TProofDrawProfile *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_318_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawProfile *dest = (TProofDrawProfile*)(G__getstructoffset());
   *dest = (*(TProofDrawProfile*)libp->para[0].ref);
   const TProofDrawProfile& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDrawProfile2D */
static int G__G__Proof_319_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawProfile2D *p=NULL;
   if(G__getaryconstruct()) p=new TProofDrawProfile2D[G__getaryconstruct()];
   else                    p=new TProofDrawProfile2D;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile2D*)(G__getstructoffset()))->Init((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile2D*)(G__getstructoffset()))->Begin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile2D*)(G__getstructoffset()))->SlaveBegin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile2D*)(G__getstructoffset()))->Terminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofDrawProfile2D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawProfile2D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofDrawProfile2D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofDrawProfile2D::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofDrawProfile2D*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile2D*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile2D*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawProfile2D*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawProfile2D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawProfile2D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawProfile2D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_319_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawProfile2D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_319_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofDrawProfile2D *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofDrawProfile2D(*(TProofDrawProfile2D*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDrawProfile2D G__TTProofDrawProfile2D;
static int G__G__Proof_319_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDrawProfile2D *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofDrawProfile2D *)((G__getstructoffset())+sizeof(TProofDrawProfile2D)*i);
   else  delete (TProofDrawProfile2D *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_319_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawProfile2D *dest = (TProofDrawProfile2D*)(G__getstructoffset());
   *dest = (*(TProofDrawProfile2D*)libp->para[0].ref);
   const TProofDrawProfile2D& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDrawGraph */
static int G__G__Proof_320_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawGraph *p=NULL;
   if(G__getaryconstruct()) p=new TProofDrawGraph[G__getaryconstruct()];
   else                    p=new TProofDrawGraph;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawGraph*)(G__getstructoffset()))->Init((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawGraph*)(G__getstructoffset()))->SlaveBegin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawGraph*)(G__getstructoffset()))->Terminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofDrawGraph::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawGraph::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofDrawGraph::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofDrawGraph::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofDrawGraph*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawGraph*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawGraph*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawGraph*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawGraph::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawGraph::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawGraph::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_320_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawGraph::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_320_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofDrawGraph *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofDrawGraph(*(TProofDrawGraph*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDrawGraph G__TTProofDrawGraph;
static int G__G__Proof_320_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDrawGraph *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofDrawGraph *)((G__getstructoffset())+sizeof(TProofDrawGraph)*i);
   else  delete (TProofDrawGraph *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_320_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawGraph *dest = (TProofDrawGraph*)(G__getstructoffset());
   *dest = (*(TProofDrawGraph*)libp->para[0].ref);
   const TProofDrawGraph& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDrawPolyMarker3D */
static int G__G__Proof_321_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawPolyMarker3D *p=NULL;
   if(G__getaryconstruct()) p=new TProofDrawPolyMarker3D[G__getaryconstruct()];
   else                    p=new TProofDrawPolyMarker3D;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawPolyMarker3D*)(G__getstructoffset()))->Init((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawPolyMarker3D*)(G__getstructoffset()))->SlaveBegin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawPolyMarker3D*)(G__getstructoffset()))->Terminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofDrawPolyMarker3D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawPolyMarker3D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofDrawPolyMarker3D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofDrawPolyMarker3D::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofDrawPolyMarker3D*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawPolyMarker3D*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawPolyMarker3D*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawPolyMarker3D*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawPolyMarker3D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawPolyMarker3D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawPolyMarker3D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_321_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawPolyMarker3D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_321_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofDrawPolyMarker3D *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofDrawPolyMarker3D(*(TProofDrawPolyMarker3D*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDrawPolyMarker3D G__TTProofDrawPolyMarker3D;
static int G__G__Proof_321_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDrawPolyMarker3D *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofDrawPolyMarker3D *)((G__getstructoffset())+sizeof(TProofDrawPolyMarker3D)*i);
   else  delete (TProofDrawPolyMarker3D *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_321_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawPolyMarker3D *dest = (TProofDrawPolyMarker3D*)(G__getstructoffset());
   *dest = (*(TProofDrawPolyMarker3D*)libp->para[0].ref);
   const TProofDrawPolyMarker3D& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDrawListOfGraphs */
static int G__G__Proof_322_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawListOfGraphs *p=NULL;
   if(G__getaryconstruct()) p=new TProofDrawListOfGraphs[G__getaryconstruct()];
   else                    p=new TProofDrawListOfGraphs;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawListOfGraphs*)(G__getstructoffset()))->SlaveBegin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawListOfGraphs*)(G__getstructoffset()))->Terminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofDrawListOfGraphs::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawListOfGraphs::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofDrawListOfGraphs::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofDrawListOfGraphs::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofDrawListOfGraphs*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawListOfGraphs*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawListOfGraphs*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawListOfGraphs*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawListOfGraphs::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawListOfGraphs::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawListOfGraphs::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_322_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawListOfGraphs::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_322_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofDrawListOfGraphs *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofDrawListOfGraphs(*(TProofDrawListOfGraphs*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDrawListOfGraphs G__TTProofDrawListOfGraphs;
static int G__G__Proof_322_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDrawListOfGraphs *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofDrawListOfGraphs *)((G__getstructoffset())+sizeof(TProofDrawListOfGraphs)*i);
   else  delete (TProofDrawListOfGraphs *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_322_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawListOfGraphs *dest = (TProofDrawListOfGraphs*)(G__getstructoffset());
   *dest = (*(TProofDrawListOfGraphs*)libp->para[0].ref);
   const TProofDrawListOfGraphs& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDrawListOfGraphs::Point3D_t */
static int G__G__Proof_323_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawListOfGraphs::Point3D_t *p=NULL;
      p=::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) TProofDrawListOfGraphs::Point3D_t(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_323_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawListOfGraphs::Point3D_t *p=NULL;
   if(G__getaryconstruct()) p=new TProofDrawListOfGraphs::Point3D_t[G__getaryconstruct()];
   else p=::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) TProofDrawListOfGraphs::Point3D_t;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_323_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofDrawListOfGraphs::Point3D_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofDrawListOfGraphs::Point3D_t(*(TProofDrawListOfGraphs::Point3D_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDrawListOfGraphs::Point3D_t G__TTProofDrawListOfGraphscLcLPoint3D_t;
static int G__G__Proof_323_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDrawListOfGraphs::Point3D_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TProofDrawListOfGraphs::Point3D_t *)((G__getstructoffset())+sizeof(TProofDrawListOfGraphs::Point3D_t)*i))->~G__TTProofDrawListOfGraphscLcLPoint3D_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TProofDrawListOfGraphs::Point3D_t *)(G__getstructoffset()))->~G__TTProofDrawListOfGraphscLcLPoint3D_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_323_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawListOfGraphs::Point3D_t *dest = (TProofDrawListOfGraphs::Point3D_t*)(G__getstructoffset());
   *dest = (*(TProofDrawListOfGraphs::Point3D_t*)libp->para[0].ref);
   const TProofDrawListOfGraphs::Point3D_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> */
static int G__G__Proof_324_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> *p=NULL;
      p = new TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>((vector<TProofDrawListOfGraphs::Point3D_t>*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> *p=NULL;
   if(G__getaryconstruct()) p=new TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>[G__getaryconstruct()];
   else                    p=new TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)(G__getstructoffset()))->GetVector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)(G__getstructoffset()))->Merge((TCollection*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_324_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_324_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>(*(TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> G__TTProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR;
static int G__G__Proof_324_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> *)((G__getstructoffset())+sizeof(TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>)*i);
   else  delete (TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_324_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> *dest = (TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)(G__getstructoffset());
   *dest = (*(TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)libp->para[0].ref);
   const TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > */
static int G__G__Proof_326_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator *pobj,xobj=((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->begin();
        pobj=new vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator *pobj,xobj=((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->end();
        pobj=new vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::reverse_iterator *pobj,xobj=((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->rbegin();
        pobj=new vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::reverse_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::reverse_iterator *pobj,xobj=((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->rend();
        pobj=new vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::reverse_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator *pobj,xobj=((const vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->begin();
        pobj=new vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator *pobj,xobj=((const vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->end();
        pobj=new vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_reverse_iterator *pobj,xobj=((const vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->rbegin();
        pobj=new vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_reverse_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_reverse_iterator *pobj,xobj=((const vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->rend();
        pobj=new vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_reverse_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TProofDrawListOfGraphs::Point3D_t& obj=((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->operator[]((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > *p=NULL;
   if(G__getaryconstruct()) p=new vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >[G__getaryconstruct()];
   else p=::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > *p=NULL;
   switch(libp->paran) {
   case 2:
      p = ::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type)G__int(libp->para[0]),*(TProofDrawListOfGraphs::Point3D_t*)libp->para[1].ref);
      break;
   case 1:
      p = ::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > *p=NULL;
      p=::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >(*(vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > *p=NULL;
      p=::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >(*((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator*)G__int(libp->para[0])),*((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator*)G__int(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >& obj=((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->operator=(*(vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->reserve((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TProofDrawListOfGraphs::Point3D_t& obj=((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->front();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TProofDrawListOfGraphs::Point3D_t& obj=((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->back();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->push_back(*(TProofDrawListOfGraphs::Point3D_t*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->swap(*(vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator *pobj,xobj=((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->insert(*((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator*)G__int(libp->para[0])),*(TProofDrawListOfGraphs::Point3D_t*)libp->para[1].ref);
        pobj=new vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->insert(*((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator*)G__int(libp->para[0])),*((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator*)G__int(libp->para[1]))
,*((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->insert(*((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator*)G__int(libp->para[0])),(vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type)G__int(libp->para[1])
,*(TProofDrawListOfGraphs::Point3D_t*)libp->para[2].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->pop_back();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->erase(*((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->erase(*((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator*)G__int(libp->para[0])),*((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_326_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)(G__getstructoffset()))->clear();
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > G__TvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR;
static int G__G__Proof_326_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > *)((G__getstructoffset())+sizeof(vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >)*i))->~G__TvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > *)(G__getstructoffset()))->~G__TvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDrawListOfPolyMarkers3D */
static int G__G__Proof_329_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawListOfPolyMarkers3D *p=NULL;
   if(G__getaryconstruct()) p=new TProofDrawListOfPolyMarkers3D[G__getaryconstruct()];
   else                    p=new TProofDrawListOfPolyMarkers3D;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawListOfPolyMarkers3D*)(G__getstructoffset()))->SlaveBegin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawListOfPolyMarkers3D*)(G__getstructoffset()))->Terminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofDrawListOfPolyMarkers3D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawListOfPolyMarkers3D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofDrawListOfPolyMarkers3D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofDrawListOfPolyMarkers3D::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofDrawListOfPolyMarkers3D*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawListOfPolyMarkers3D*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawListOfPolyMarkers3D*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofDrawListOfPolyMarkers3D*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawListOfPolyMarkers3D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawListOfPolyMarkers3D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofDrawListOfPolyMarkers3D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_329_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofDrawListOfPolyMarkers3D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_329_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofDrawListOfPolyMarkers3D *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofDrawListOfPolyMarkers3D(*(TProofDrawListOfPolyMarkers3D*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDrawListOfPolyMarkers3D G__TTProofDrawListOfPolyMarkers3D;
static int G__G__Proof_329_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDrawListOfPolyMarkers3D *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofDrawListOfPolyMarkers3D *)((G__getstructoffset())+sizeof(TProofDrawListOfPolyMarkers3D)*i);
   else  delete (TProofDrawListOfPolyMarkers3D *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_329_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawListOfPolyMarkers3D *dest = (TProofDrawListOfPolyMarkers3D*)(G__getstructoffset());
   *dest = (*(TProofDrawListOfPolyMarkers3D*)libp->para[0].ref);
   const TProofDrawListOfPolyMarkers3D& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofDrawListOfPolyMarkers3D::Point4D_t */
static int G__G__Proof_330_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawListOfPolyMarkers3D::Point4D_t *p=NULL;
      p=::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) TProofDrawListOfPolyMarkers3D::Point4D_t(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_330_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawListOfPolyMarkers3D::Point4D_t *p=NULL;
   if(G__getaryconstruct()) p=new TProofDrawListOfPolyMarkers3D::Point4D_t[G__getaryconstruct()];
   else p=::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) TProofDrawListOfPolyMarkers3D::Point4D_t;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_330_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofDrawListOfPolyMarkers3D::Point4D_t *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofDrawListOfPolyMarkers3D::Point4D_t(*(TProofDrawListOfPolyMarkers3D::Point4D_t*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofDrawListOfPolyMarkers3D::Point4D_t G__TTProofDrawListOfPolyMarkers3DcLcLPoint4D_t;
static int G__G__Proof_330_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofDrawListOfPolyMarkers3D::Point4D_t *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TProofDrawListOfPolyMarkers3D::Point4D_t *)((G__getstructoffset())+sizeof(TProofDrawListOfPolyMarkers3D::Point4D_t)*i))->~G__TTProofDrawListOfPolyMarkers3DcLcLPoint4D_t();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TProofDrawListOfPolyMarkers3D::Point4D_t *)(G__getstructoffset()))->~G__TTProofDrawListOfPolyMarkers3DcLcLPoint4D_t();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_330_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofDrawListOfPolyMarkers3D::Point4D_t *dest = (TProofDrawListOfPolyMarkers3D::Point4D_t*)(G__getstructoffset());
   *dest = (*(TProofDrawListOfPolyMarkers3D::Point4D_t*)libp->para[0].ref);
   const TProofDrawListOfPolyMarkers3D::Point4D_t& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> */
static int G__G__Proof_331_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> *p=NULL;
      p = new TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>((vector<TProofDrawListOfPolyMarkers3D::Point4D_t>*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> *p=NULL;
   if(G__getaryconstruct()) p=new TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>[G__getaryconstruct()];
   else                    p=new TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)(G__getstructoffset()))->GetVector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)(G__getstructoffset()))->Merge((TCollection*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_331_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Proof_331_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>(*(TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> G__TTProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR;
static int G__G__Proof_331_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> *)((G__getstructoffset())+sizeof(TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>)*i);
   else  delete (TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Proof_331_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> *dest = (TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)(G__getstructoffset());
   *dest = (*(TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)libp->para[0].ref);
   const TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > */
static int G__G__Proof_333_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator *pobj,xobj=((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->begin();
        pobj=new vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator *pobj,xobj=((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->end();
        pobj=new vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::reverse_iterator *pobj,xobj=((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->rbegin();
        pobj=new vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::reverse_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::reverse_iterator *pobj,xobj=((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->rend();
        pobj=new vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::reverse_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator *pobj,xobj=((const vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->begin();
        pobj=new vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator *pobj,xobj=((const vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->end();
        pobj=new vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_reverse_iterator *pobj,xobj=((const vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->rbegin();
        pobj=new vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_reverse_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_reverse_iterator *pobj,xobj=((const vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->rend();
        pobj=new vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_reverse_iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TProofDrawListOfPolyMarkers3D::Point4D_t& obj=((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->operator[]((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > *p=NULL;
   if(G__getaryconstruct()) p=new vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >[G__getaryconstruct()];
   else p=::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > *p=NULL;
   switch(libp->paran) {
   case 2:
      p = ::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type)G__int(libp->para[0]),*(TProofDrawListOfPolyMarkers3D::Point4D_t*)libp->para[1].ref);
      break;
   case 1:
      p = ::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > *p=NULL;
      p=::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >(*(vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > *p=NULL;
      p=::new((G__proofdIsrcdIG__ProofdOcxx_tag*)G__getgvp()) vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >(*((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator*)G__int(libp->para[0])),*((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator*)G__int(libp->para[1])));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >& obj=((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->operator=(*(vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->reserve((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TProofDrawListOfPolyMarkers3D::Point4D_t& obj=((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->front();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TProofDrawListOfPolyMarkers3D::Point4D_t& obj=((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->back();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->push_back(*(TProofDrawListOfPolyMarkers3D::Point4D_t*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->swap(*(vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator *pobj,xobj=((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->insert(*((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator*)G__int(libp->para[0])),*(TProofDrawListOfPolyMarkers3D::Point4D_t*)libp->para[1].ref);
        pobj=new vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->insert(*((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator*)G__int(libp->para[0])),*((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator*)G__int(libp->para[1]))
,*((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->insert(*((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator*)G__int(libp->para[0])),(vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type)G__int(libp->para[1])
,*(TProofDrawListOfPolyMarkers3D::Point4D_t*)libp->para[2].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->pop_back();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->erase(*((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->erase(*((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator*)G__int(libp->para[0])),*((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Proof_333_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)(G__getstructoffset()))->clear();
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > G__TvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR;
static int G__G__Proof_333_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > *)((G__getstructoffset())+sizeof(vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >)*i))->~G__TvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > *)(G__getstructoffset()))->~G__TvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TProofDebug */

/* TEventIter */

/* TEventIterObj */

/* TEventIterTree */

/* TSlave */

/* TVirtualPacketizer */

/* TProof */

/* TDrawFeedback */

/* TProofPlayer */

/* TProofServ */

/* TStatus */

/* TProofPlayerLocal */

/* TProofPlayerRemote */

/* TProofPlayerSlave */

/* TProofPlayerSuperMaster */

/* TPerfEvent */

/* TPerfStats */

/* TPacketizer2 */

/* TCondor */

/* TSlaveInfo */

/* TPacketizer */

/* TProofCondor */

/* TProofSuperMaster */

/* TDSetProxy */

/* TCondorSlave */

/* TProofLimitsFinder */

/* TProofDraw */

/* TProofDrawHist */

/* TProofDrawEventList */

/* TProofDrawProfile */

/* TProofDrawProfile2D */

/* TProofDrawGraph */

/* TProofDrawPolyMarker3D */

/* TProofDrawListOfGraphs */

/* TProofDrawListOfGraphs::Point3D_t */

/* TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> */

/* vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > */

/* TProofDrawListOfPolyMarkers3D */

/* TProofDrawListOfPolyMarkers3D::Point4D_t */

/* TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> */

/* vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Proof {
 public:
  G__Sizep2memfuncG__Proof() {p=&G__Sizep2memfuncG__Proof::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Proof::*p)();
};

size_t G__get_sizep2memfuncG__Proof()
{
  G__Sizep2memfuncG__Proof a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Proof() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TEventIter))) {
     TEventIter *G__Lderived;
     G__Lderived=(TEventIter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIter),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj))) {
     TEventIterObj *G__Lderived;
     G__Lderived=(TEventIterObj*)0x1000;
     {
       TEventIter *G__Lpbase=(TEventIter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj),G__get_linked_tagnum(&G__G__ProofLN_TEventIter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree))) {
     TEventIterTree *G__Lderived;
     G__Lderived=(TEventIterTree*)0x1000;
     {
       TEventIter *G__Lpbase=(TEventIter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree),G__get_linked_tagnum(&G__G__ProofLN_TEventIter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TSlave))) {
     TSlave *G__Lderived;
     G__Lderived=(TSlave*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlave),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TVirtualPacketizer))) {
     TVirtualPacketizer *G__Lderived;
     G__Lderived=(TVirtualPacketizer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TVirtualPacketizer),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProof))) {
     TProof *G__Lderived;
     G__Lderived=(TProof*)0x1000;
     {
       TVirtualProof *G__Lpbase=(TVirtualProof*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProof),G__get_linked_tagnum(&G__G__ProofLN_TVirtualProof),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProof),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProof),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback))) {
     TDrawFeedback *G__Lderived;
     G__Lderived=(TDrawFeedback*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer))) {
     TProofPlayer *G__Lderived;
     G__Lderived=(TProofPlayer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofServ))) {
     TProofServ *G__Lderived;
     G__Lderived=(TProofServ*)0x1000;
     {
       TApplication *G__Lpbase=(TApplication*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServ),G__get_linked_tagnum(&G__G__ProofLN_TApplication),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServ),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServ),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TStatus))) {
     TStatus *G__Lderived;
     G__Lderived=(TStatus*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TStatus),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TStatus),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal))) {
     TProofPlayerLocal *G__Lderived;
     G__Lderived=(TProofPlayerLocal*)0x1000;
     {
       TProofPlayer *G__Lpbase=(TProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote))) {
     TProofPlayerRemote *G__Lderived;
     G__Lderived=(TProofPlayerRemote*)0x1000;
     {
       TProofPlayer *G__Lpbase=(TProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave))) {
     TProofPlayerSlave *G__Lderived;
     G__Lderived=(TProofPlayerSlave*)0x1000;
     {
       TProofPlayer *G__Lpbase=(TProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSuperMaster))) {
     TProofPlayerSuperMaster *G__Lderived;
     G__Lderived=(TProofPlayerSuperMaster*)0x1000;
     {
       TProofPlayerRemote *G__Lpbase=(TProofPlayerRemote*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TProofPlayer *G__Lpbase=(TProofPlayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TPerfEvent))) {
     TPerfEvent *G__Lderived;
     G__Lderived=(TPerfEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TPerfEvent),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TPerfStats))) {
     TPerfStats *G__Lderived;
     G__Lderived=(TPerfStats*)0x1000;
     {
       TVirtualPerfStats *G__Lpbase=(TVirtualPerfStats*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TPerfStats),G__get_linked_tagnum(&G__G__ProofLN_TVirtualPerfStats),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TPerfStats),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2))) {
     TPacketizer2 *G__Lderived;
     G__Lderived=(TPacketizer2*)0x1000;
     {
       TVirtualPacketizer *G__Lpbase=(TVirtualPacketizer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2),G__get_linked_tagnum(&G__G__ProofLN_TVirtualPacketizer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TCondor))) {
     TCondor *G__Lderived;
     G__Lderived=(TCondor*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondor),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo))) {
     TSlaveInfo *G__Lderived;
     G__Lderived=(TSlaveInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer))) {
     TPacketizer *G__Lderived;
     G__Lderived=(TPacketizer*)0x1000;
     {
       TVirtualPacketizer *G__Lpbase=(TVirtualPacketizer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer),G__get_linked_tagnum(&G__G__ProofLN_TVirtualPacketizer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor))) {
     TProofCondor *G__Lderived;
     G__Lderived=(TProofCondor*)0x1000;
     {
       TProof *G__Lpbase=(TProof*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor),G__get_linked_tagnum(&G__G__ProofLN_TProof),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualProof *G__Lpbase=(TVirtualProof*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor),G__get_linked_tagnum(&G__G__ProofLN_TVirtualProof),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster))) {
     TProofSuperMaster *G__Lderived;
     G__Lderived=(TProofSuperMaster*)0x1000;
     {
       TProof *G__Lpbase=(TProof*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TProof),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualProof *G__Lpbase=(TVirtualProof*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TVirtualProof),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster),G__get_linked_tagnum(&G__G__ProofLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy))) {
     TDSetProxy *G__Lderived;
     G__Lderived=(TDSetProxy*)0x1000;
     {
       TDSet *G__Lpbase=(TDSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy),G__get_linked_tagnum(&G__G__ProofLN_TDSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave))) {
     TCondorSlave *G__Lderived;
     G__Lderived=(TCondorSlave*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofLimitsFinder))) {
     TProofLimitsFinder *G__Lderived;
     G__Lderived=(TProofLimitsFinder*)0x1000;
     {
       THLimitsFinder *G__Lpbase=(THLimitsFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLimitsFinder),G__get_linked_tagnum(&G__G__ProofLN_THLimitsFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLimitsFinder),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofDraw))) {
     TProofDraw *G__Lderived;
     G__Lderived=(TProofDraw*)0x1000;
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),G__get_linked_tagnum(&G__G__ProofLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist))) {
     TProofDrawHist *G__Lderived;
     G__Lderived=(TProofDrawHist*)0x1000;
     {
       TProofDraw *G__Lpbase=(TProofDraw*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist),G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist),G__get_linked_tagnum(&G__G__ProofLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList))) {
     TProofDrawEventList *G__Lderived;
     G__Lderived=(TProofDrawEventList*)0x1000;
     {
       TProofDraw *G__Lpbase=(TProofDraw*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList),G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList),G__get_linked_tagnum(&G__G__ProofLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile))) {
     TProofDrawProfile *G__Lderived;
     G__Lderived=(TProofDrawProfile*)0x1000;
     {
       TProofDraw *G__Lpbase=(TProofDraw*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile),G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile),G__get_linked_tagnum(&G__G__ProofLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D))) {
     TProofDrawProfile2D *G__Lderived;
     G__Lderived=(TProofDrawProfile2D*)0x1000;
     {
       TProofDraw *G__Lpbase=(TProofDraw*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D),G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D),G__get_linked_tagnum(&G__G__ProofLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph))) {
     TProofDrawGraph *G__Lderived;
     G__Lderived=(TProofDrawGraph*)0x1000;
     {
       TProofDraw *G__Lpbase=(TProofDraw*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph),G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph),G__get_linked_tagnum(&G__G__ProofLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D))) {
     TProofDrawPolyMarker3D *G__Lderived;
     G__Lderived=(TProofDrawPolyMarker3D*)0x1000;
     {
       TProofDraw *G__Lpbase=(TProofDraw*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D),G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D),G__get_linked_tagnum(&G__G__ProofLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs))) {
     TProofDrawListOfGraphs *G__Lderived;
     G__Lderived=(TProofDrawListOfGraphs*)0x1000;
     {
       TProofDraw *G__Lpbase=(TProofDraw*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs),G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs),G__get_linked_tagnum(&G__G__ProofLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR))) {
     TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> *G__Lderived;
     G__Lderived=(TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D))) {
     TProofDrawListOfPolyMarkers3D *G__Lderived;
     G__Lderived=(TProofDrawListOfPolyMarkers3D*)0x1000;
     {
       TProofDraw *G__Lpbase=(TProofDraw*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D),G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D),G__get_linked_tagnum(&G__G__ProofLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR))) {
     TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> *G__Lderived;
     G__Lderived=(TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR),G__get_linked_tagnum(&G__G__ProofLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR),G__get_linked_tagnum(&G__G__ProofLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Proof() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,
-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("Axis_t",100,-1,0,
-1);
   G__setnewtype(-1,"Axis values type (double)",0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("map<TString,MD5Mod_t>",117,G__get_linked_tagnum(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("map<TString,TProof::MD5Mod_t>",117,G__get_linked_tagnum(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("map<TString,TProof::MD5Mod_t>less<TString>>",117,G__get_linked_tagnum(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("FileMap_t",117,G__get_linked_tagnum(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),0,G__get_linked_tagnum(&G__G__ProofLN_TProof));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("set<string>",117,G__get_linked_tagnum(&G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("set<string>less<string>>",117,G__get_linked_tagnum(&G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("MsgSet_t",117,G__get_linked_tagnum(&G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G__G__ProofLN_TStatus));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("MsgIter_t",117,G__get_linked_tagnum(&G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G__G__ProofLN_TStatus));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TProofVectorContainer<Point3D_t>",117,G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR),0,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<TProofDrawListOfGraphs::Point3D_t>",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),256,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),1,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),257,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,
G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,
G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TProofVectorContainer<Point4D_t>",117,G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR),0,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<TProofDrawListOfPolyMarkers3D::Point4D_t>",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),256,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),1,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),257,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,
G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,
G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TProofDebug */
static void G__setup_memvarTProofDebug(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDebug));
   { TProofDebug *p; p=(TProofDebug*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kNone=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kPacketizer=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kLoop=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kSelector=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kOutput=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kInput=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kGlobal=32",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kPackage=64",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kFeedback=128",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kCondor=256",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kDraw=512",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-2,1,"kAll=-1",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEventIter */
static void G__setup_memvarTEventIter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIter));
   { TEventIter *p; p=(TEventIter*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDSet),-1,-1,2,"fDSet=",0,"data set over which to iterate");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),-1,-1,2,"fElem=",0,"Current Element");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fFilename=",0,"Name of the current file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TFile),-1,-1,2,"fFile=",0,"Current file");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fOldBytesRead=",0,"last reported number of bytes read");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fPath=",0,"Path to current TDirectory");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDirectory),-1,-1,2,"fDir=",0,"directory containing the objects or the TTree");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fElemFirst=",0,"first entry to process for this element");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fElemNum=",0,"number of entries to process for this element");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fElemCur=",0,"current entry for this element");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSelector),-1,-1,2,"fSel=",0,"selector to be used");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fFirst=",0,"first entry to process");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fNum=",0,"number of entries to process");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fCur=",0,"current entry");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fStop=",0,"termination of run requested");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TEventList),-1,-1,2,"fEventList=",0,"! eventList for processing");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventListPos=",0,"! current position in the eventList");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEventIterObj */
static void G__setup_memvarTEventIterObj(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj));
   { TEventIterObj *p; p=(TEventIterObj*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fClassName=",0,"class name of objects to iterate over");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fKeys=",0,"list of keys");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TIter),-1,-1,4,"fNextKey=",0,"next key in directory");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TObject),-1,-1,4,"fObj=",0,"object found");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEventIterTree */
static void G__setup_memvarTEventIterTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree));
   { TEventIterTree *p; p=(TEventIterTree*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fTreeName=",0,"name of the tree object to iterate over");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTree),-1,-1,4,"fTree=",0,"tree we are iterating over");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSlave */
static void G__setup_memvarTSlave(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlave));
   { TSlave *p; p=(TSlave*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlavecLcLESlaveType),-1,-2,1,"kMaster=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlavecLcLESlaveType),-1,-2,1,"kSlave=1",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fName=",0,"slave's hostname");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fImage=",0,"slave's image name");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fProofWorkDir=",0,"base proofserv working directory (info obtained from slave)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fWorkDir=",0,"slave's working directory (info obtained from slave)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fUser=",0,"slave's user id");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPort=",0,"slave's port number");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fOrdinal=",0,"slave's ordinal number");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPerfIdx=",0,"relative CPU performance index");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSecContext),-1,-1,4,"fSecContext=",0,"security context of the related authentication");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fProtocol=",0,"slave's protocol level");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSocket),-1,-1,4,"fSocket=",0,"socket to slave");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,-1,4,"fProof=",0,"proof cluster to which slave belongs");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TFileHandler),-1,-1,4,"fInput=",0,"input handler related to this slave");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fBytesRead=",0,"bytes read by slave (info is obtained from slave)");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRealTime=",0,"real time spent executing commands (info obtained from slave)");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCpuTime=",0,"CPU time spent executing commands (info obtained from slave)");
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSlavecLcLESlaveType),-1,-1,4,"fSlaveType=",0,"type of slave (either kMaster or kSlave)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStatus=",0,"remote return status");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fParallel=",0,"number of active slaves");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fMsd=",0,"mass storage domain of slave");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVirtualPacketizer */
static void G__setup_memvarTVirtualPacketizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TVirtualPacketizer));
   { TVirtualPacketizer *p; p=(TVirtualPacketizer*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fValid=",0,"Constructed properly?");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fStop=",0,"Termination of Process() requested?");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProof */
static void G__setup_memvarTProof(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProof));
   { TProof *p; p=(TProof*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUrgent),-1,-2,1,"kHardInterrupt=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUrgent),-1,-2,1,"kSoftInterrupt=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUrgent),-1,-2,1,"kShutdownInterrupt=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kShowCache=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kClearCache=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kShowPackages=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kClearPackages=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kClearPackage=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kBuildPackage=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kLoadPackage=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kShowEnabledPackages=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kShowSubCache=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kClearSubCache=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kShowSubPackages=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kDisableSubPackages=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kDisableSubPackage=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kBuildSubPackage=14",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kUnloadPackage=15",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kDisablePackage=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kUnloadPackages=17",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands),-1,-2,1,"kDisablePackages=18",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fValid=",0,"is this a valid proof object");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fMaster=",0,"name of master server (use \"\" if this is a master)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fWorkDir=",0,"current work directory on remote servers");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fUser=",0,"user under which to run");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fUrlProtocol=",0,"net protocol name");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSecContext),-1,-1,4,"fSecContext=",0,"SecContext of the related authentication");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLogLevel=",0,"server debug logging level");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStatus=",0,"remote return status (part of kPROOF_LOGDONE)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fSlaveInfo=",0,"!list returned by kPROOF_GETSLAVEINFO");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMasterServ=",0,"true if we are a master server");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSendGroupView=",0,"if true send new group view");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fActiveSlaves=",0,"list of active slaves (subset of all slaves)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fUniqueSlaves=",0,"list of all active slaves with unique file systems");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fNonUniqueMasters=",0,"list of all active masters with a nonunique file system");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMonitor),-1,-1,4,"fActiveMonitor=",0,"monitor activity on all active slave sockets");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMonitor),-1,-1,4,"fUniqueMonitor=",0,"monitor activity on all unique slave sockets");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fBytesRead=",0,"bytes read by all slaves during the session");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRealTime=",0,"realtime spent by all slaves during the session");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCpuTime=",0,"CPU time spent by all slaves during the session");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSignalHandler),-1,-1,4,"fIntHandler=",0,"interrupt signal handler (ctrl-c)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TPluginHandler),-1,-1,4,"fProgressDialog=",0,"progress dialog plugin");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),-1,-1,4,"fPlayer=",0,"current player");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fFeedback=",0,"List of names to be returned as feedback");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fChains=",0,"chains with this proof set");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR),G__defined_typename("FileMap_t"),-1,4,"fFileMap=",0,"map keeping track of a file's md5 and mod time");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDSet),-1,-1,4,"fDSet=",0,"current TDSet being validated");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESlaves),-1,-2,1,"kAll=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESlaves),-1,-2,1,"kActive=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESlaves),-1,-2,1,"kUnique=2",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fConfFile=",0,"file containing config information");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fConfDir=",0,"directory containing cluster config information");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fImage=",0,"master's image name");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPort=",0,"port we are connected to (proofd = 1093)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fProtocol=",0,"remote PROOF server protocol version number");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fSlaves=",0,"list of all slave servers as in config file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fBadSlaves=",0,"dead slaves (subset of all slaves)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMonitor),-1,-1,2,"fAllMonitor=",0,"monitor activity on all valid slave sockets");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDataReady=",0,"true if data is ready to be analyzed");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fBytesReady=",0,"number of bytes staged");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fTotalBytes=",0,"number of bytes to be analyzed");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDrawFeedback */
static void G__setup_memvarTDrawFeedback(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback));
   { TDrawFeedback *p; p=(TDrawFeedback*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAll=",0,"draw all or selected objects");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_THashList),-1,-1,4,"fNames=",0,"selected objects");
   G__memvar_setup((void*)NULL,67,0,0,-1,G__defined_typename("Option_t"),-1,2,"fOption=",0,"draw option");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,-1,2,"fProof=",0,"handle to PROOF session");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofPlayer */
static void G__setup_memvarTProofPlayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer));
   { TProofPlayer *p; p=(TProofPlayer*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayercLcLEExitStatus),-1,-2,1,"kFinished=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayercLcLEExitStatus),-1,-2,1,"kStopped=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayercLcLEExitStatus),-1,-2,1,"kAborted=2",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fAutoBins=",0,"Map of min/max values by name for slaves");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fInput=",0,"-> list with input objects");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fOutput=",0,"list with output objects");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSelector),-1,-1,2,"fSelector=",0,"!  the latest selector");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-1,2,"fSelectorClass=",0,"!  class of the latest selector");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTimer),-1,-1,2,"fFeedbackTimer=",0,"!  timer for sending intermediate results");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TEventIter),-1,-1,2,"fEvIter=",0,"!  iterator on events or objects");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TStatus),-1,-1,2,"fSelStatus=",0,"!  status of query in progress");
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayercLcLEExitStatus),-1,-1,2,"fExitStatus=",0,"exit status");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEventsProcessed=",0,"number of events processed");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofServ */
static void G__setup_memvarTProofServ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServ));
   { TProofServ *p; p=(TProofServ*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fService=",0,"service we are running, either \"proofserv\" or \"proofslave\"");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fUser=",0,"user as which we run");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fPasswd=",0,"encoded passwd info for slaves");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fConfDir=",0,"directory containing cluster config information");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fConfFile=",0,"file containing config information");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fWorkDir=",0,"directory containing all proof related info");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fSessionDir=",0,"directory containing session dependent files");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fPackageDir=",0,"directory containing packages and user libs");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fCacheDir=",0,"directory containing cache of user files");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fPackageLock=",0,"package dir lock file");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fCacheLock=",0,"cache dir lock file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSocket),-1,-1,4,"fSocket=",0,"socket connection to client");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,-1,4,"fProof=",0,"PROOF talking to slave servers");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),-1,-1,4,"fPlayer=",0,"actual player");
   G__memvar_setup((void*)NULL,69,0,0,-1,-1,-1,4,"fLogFile=",0,"log file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fEnabledPackages=",0,"list of enabled packages");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPackageLockId=",0,"file id of package dir lock");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCacheLockId=",0,"file id of cache dir lock");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fProtocol=",0,"protocol version number");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fOrdinal=",0,"slave ordinal number");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGroupId=",0,"slave unique id in the active slave group");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGroupSize=",0,"size of the active slave group");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLogLevel=",0,"debug logging level");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNcmd=",0,"command history number");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fPwHash=",0,"true if fPasswd is a passwd hash");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSRPPwd=",0,"true if fPasswd is a SRP passwd");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMasterServ=",0,"true if we are a master server");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fInterrupt=",0,"if true macro execution will be stopped");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fRealTime=",0,"real time spent executing commands");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCpuTime=",0,"CPU time spent executing commands");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TStopwatch),-1,-1,4,"fLatency=",0,"measures latency of packet requests");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TStopwatch),-1,-1,4,"fCompute=",0,"measures time spend processing a packet");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TStatus */
static void G__setup_memvarTStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TStatus));
   { TStatus *p; p=(TStatus*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),G__defined_typename("MsgSet_t"),-1,4,"fMsgs=",0,"list of error messages");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgRcLcLiterator),G__defined_typename("MsgIter_t"),-1,4,"fIter=",0,"!iterator in messages");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofPlayerLocal */
static void G__setup_memvarTProofPlayerLocal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal));
   { TProofPlayerLocal *p; p=(TProofPlayerLocal*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofPlayerRemote */
static void G__setup_memvarTProofPlayerRemote(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote));
   { TProofPlayerRemote *p; p=(TProofPlayerRemote*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,-1,4,"fProof=",0,"link to associated PROOF session");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fOutputLists=",0,"results returned by slaves");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fFeedback=",0,"reference for use on master");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fFeedbackLists=",0,"intermediate results");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TVirtualPacketizer),-1,-1,4,"fPacketizer=",0,"transform TDSet into packets for slaves");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TDSet),-1,-1,4,"fDSet=",0,"!tdset for current processing");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofPlayerSlave */
static void G__setup_memvarTProofPlayerSlave(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave));
   { TProofPlayerSlave *p; p=(TProofPlayerSlave*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSocket),-1,-1,4,"fSocket=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fFeedback=",0,"List of objects to send updates of");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofPlayerSuperMaster */
static void G__setup_memvarTProofPlayerSuperMaster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSuperMaster));
   { TProofPlayerSuperMaster *p; p=(TProofPlayerSuperMaster*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TArrayL),-1,-1,4,"fSlaveProgress=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TArrayL),-1,-1,4,"fSlaveTotals=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fSlaves=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fReturnFeedback=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPerfEvent */
static void G__setup_memvarTPerfEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TPerfEvent));
   { TPerfEvent *p; p=(TPerfEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fEvtNode)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fEvtNode=",0,"node on which the event was generated");
   G__memvar_setup((void*)((long)(&p->fTimeStamp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTimeStamp),-1,-1,1,"fTimeStamp=",0,"time offset from start of run");
   G__memvar_setup((void*)((long)(&p->fType)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TVirtualPerfStatscLcLEEventType),-1,-1,1,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSlaveName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fSlaveName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNodeName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fNodeName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFileClass)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fFileClass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSlave)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fSlave=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEventsProcessed)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fEventsProcessed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fBytesRead)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fBytesRead=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fLen)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"fLen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fLatency)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fLatency=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fProcTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fProcTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCpuTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fCpuTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIsStart)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsStart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIsOk)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsOk=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPerfStats */
static void G__setup_memvarTPerfStats(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TPerfStats));
   { TPerfStats *p; p=(TPerfStats*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTree),-1,-1,4,"fTrace=",0,"!TTree with trace events");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTimeStamp),-1,-1,4,"fTzero=",0,"!start time of this run");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TPerfEvent),-1,-1,4,"fPerfEvent=",0,"!TPerfEvent used to fill tree");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TH1D),-1,-1,4,"fPacketsHist=",0,"!histogram of packets processed per slave");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TH1D),-1,-1,4,"fEventsHist=",0,"!histogram of events processed per slave");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TH1D),-1,-1,4,"fNodeHist=",0,"!histogram of slaves per file serving node");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TH2D),-1,-1,4,"fLatencyHist=",0,"!histogram of latency due to packet requests");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TH2D),-1,-1,4,"fProcTimeHist=",0,"!histogram of real time spent processing packets");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TH2D),-1,-1,4,"fCpuTimeHist=",0,"!histogram of cpu time spent processing packets");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fBytesRead=",0,"!track bytes read of main file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPacketizer2 */
static void G__setup_memvarTPacketizer2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2));
   { TPacketizer2 *p; p=(TPacketizer2*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fProcessed=",0,"number of entries processed");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fPackets=",0,"all processed packets");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fTotalEntries=",0,"total number of entries to be distributed");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fFileNodes=",0,"nodes with files");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fUnAllocated=",0,"nodes with unallocated files");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fActive=",0,"nodes with unfinished files");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMap),-1,-1,4,"fSlaveStats=",0,"slave status, keyed by correspondig TSlave");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTimer),-1,-1,4,"fProgress=",0,"progress updates timer");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fPacketSize=",0,"global base packet size");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxPerfIdx=",0,"maximum of our slaves' performance index");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxSlaveCnt=",0,"maximum number of slaves per filenode");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCondor */
static void G__setup_memvarTCondor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondor));
   { TCondor *p; p=(TCondor*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TCondorcLcLEState),-1,-2,1,"kFree=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TCondorcLcLEState),-1,-2,1,"kSuspended=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TCondorcLcLEState),-1,-2,1,"kActive=2",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fValid=",0,"access to Condor");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,4,"fPool=",0,"the condor pool to be accessed");
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TCondorcLcLEState),-1,-1,4,"fState=",0,"our claim state");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fClaims=",0,"list of claims we manage");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSlaveInfo */
static void G__setup_memvarTSlaveInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo));
   { TSlaveInfo *p; p=(TSlaveInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfocLcLESlaveStatus),-1,-2,1,"kActive=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfocLcLESlaveStatus),-1,-2,1,"kNotActive=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfocLcLESlaveStatus),-1,-2,1,"kBad=2",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fOrdinal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fOrdinal=",0,"slave ordinal");
   G__memvar_setup((void*)((long)(&p->fHostName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fHostName=",0,"hostname this slave is running on");
   G__memvar_setup((void*)((long)(&p->fMsd)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fMsd=",0,"mass storage domain slave is in");
   G__memvar_setup((void*)((long)(&p->fPerfIndex)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPerfIndex=",0,"relative performance of this slave");
   G__memvar_setup((void*)((long)(&p->fStatus)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfocLcLESlaveStatus),-1,-1,1,"fStatus=",0,"slave status");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPacketizer */
static void G__setup_memvarTPacketizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer));
   { TPacketizer *p; p=(TPacketizer*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fProcessed=",0,"number of entries processed");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fPackets=",0,"all processed packets");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fTotalEntries=",0,"total number of entries to be distributed");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fFileNodes=",0,"nodes with files");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fUnAllocated=",0,"nodes with unallocated files");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TObject),-1,-1,4,"fUnAllocNext=",0,"cursor in fUnAllocated");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,4,"fActive=",0,"nodes with unfinished files");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TObject),-1,-1,4,"fActiveNext=",0,"cursor in fActive");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TMap),-1,-1,4,"fSlaveStats=",0,"slave status, keyed by correspondig TSlave");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTimer),-1,-1,4,"fProgress=",0,"progress updates timer");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fPacketSize=",0,"global base packet size");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxPerfIdx=",0,"maximum of our slaves' performance index");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofCondor */
static void G__setup_memvarTProofCondor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor));
   { TProofCondor *p; p=(TProofCondor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TCondor),-1,-1,4,"fCondor=",0,"proxy for our Condor pool");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTimer),-1,-1,4,"fTimer=",0,"timer for delayed Condor COD suspend");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofSuperMaster */
static void G__setup_memvarTProofSuperMaster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster));
   { TProofSuperMaster *p; p=(TProofSuperMaster*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSetProxy */
static void G__setup_memvarTDSetProxy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy));
   { TDSetProxy *p; p=(TDSetProxy*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofServ),-1,-1,4,"fServ=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCondorSlave */
static void G__setup_memvarTCondorSlave(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave));
   { TCondorSlave *p; p=(TCondorSlave*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fHostname)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fHostname=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPort)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPort=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPerfIdx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPerfIdx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fImage)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fImage=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fClaimID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fClaimID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fOrdinal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fOrdinal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWorkDir)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,1,"fWorkDir=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofLimitsFinder */
static void G__setup_memvarTProofLimitsFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLimitsFinder));
   { TProofLimitsFinder *p; p=(TProofLimitsFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDraw */
static void G__setup_memvarTProofDraw(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDraw));
   { TProofDraw *p; p=(TProofDraw*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTreeDrawArgsParser),-1,-1,2,"fTreeDrawArgsParser=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TStatus),-1,-1,2,"fStatus=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fSelection=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,-1,2,"fInitialExp=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTreeFormulaManager),-1,-1,2,"fManager=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTree),-1,-1,2,"fTree=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTreeFormula),-1,-1,2,"fVar[4]=",0,"Pointer to variable formula");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TTreeFormula),-1,-1,2,"fSelect=",0,"Pointer to selection formula");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMultiplicity=",0,"Indicator of the variability of the size of entries");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fObjEval=",0,"true if fVar1 returns an object (or pointer to).");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDimension=",0,"Dimension of the current expression");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawcLcLdA),-1,-2,1,"kWarn=4096",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDrawHist */
static void G__setup_memvarTProofDrawHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist));
   { TProofDrawHist *p; p=(TProofDrawHist*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TH1),-1,-1,2,"fHistogram=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDrawEventList */
static void G__setup_memvarTProofDrawEventList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList));
   { TProofDrawEventList *p; p=(TProofDrawEventList*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TEventList),-1,-1,2,"fElist=",0,"event list");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,-1,2,"fEventLists=",0,"a list of EventLists");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDrawProfile */
static void G__setup_memvarTProofDrawProfile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile));
   { TProofDrawProfile *p; p=(TProofDrawProfile*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProfile),-1,-1,2,"fProfile=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDrawProfile2D */
static void G__setup_memvarTProofDrawProfile2D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D));
   { TProofDrawProfile2D *p; p=(TProofDrawProfile2D*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProfile2D),-1,-1,2,"fProfile=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDrawGraph */
static void G__setup_memvarTProofDrawGraph(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph));
   { TProofDrawGraph *p; p=(TProofDrawGraph*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TGraph),-1,-1,2,"fGraph=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDrawPolyMarker3D */
static void G__setup_memvarTProofDrawPolyMarker3D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D));
   { TProofDrawPolyMarker3D *p; p=(TProofDrawPolyMarker3D*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TPolyMarker3D),-1,-1,2,"fPolyMarker3D=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDrawListOfGraphs */
static void G__setup_memvarTProofDrawListOfGraphs(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs));
   { TProofDrawListOfGraphs *p; p=(TProofDrawListOfGraphs*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR),G__defined_typename("TProofVectorContainer<Point3D_t>"),-1,2,"fPoints=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDrawListOfGraphs::Point3D_t */
static void G__setup_memvarTProofDrawListOfGraphscLcLPoint3D_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t));
   { TProofDrawListOfGraphs::Point3D_t *p; p=(TProofDrawListOfGraphs::Point3D_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fZ=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> */
static void G__setup_memvarTProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR));
   { TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> *p; p=(TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR),G__defined_typename("vector<TProofDrawListOfGraphs::Point3D_t>"),-1,2,"fVector=",0,"vector");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > */
static void G__setup_memvarvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   { vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > *p; p=(vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TProofDrawListOfPolyMarkers3D */
static void G__setup_memvarTProofDrawListOfPolyMarkers3D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D));
   { TProofDrawListOfPolyMarkers3D *p; p=(TProofDrawListOfPolyMarkers3D*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR),G__defined_typename("TProofVectorContainer<Point4D_t>"),-1,2,"fPoints=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofDrawListOfPolyMarkers3D::Point4D_t */
static void G__setup_memvarTProofDrawListOfPolyMarkers3DcLcLPoint4D_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t));
   { TProofDrawListOfPolyMarkers3D::Point4D_t *p; p=(TProofDrawListOfPolyMarkers3D::Point4D_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fT)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fT=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> */
static void G__setup_memvarTProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR));
   { TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> *p; p=(TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR),G__defined_typename("vector<TProofDrawListOfPolyMarkers3D::Point4D_t>"),-1,2,"fVector=",0,"vector");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > */
static void G__setup_memvarvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   { vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > *p; p=(vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Proof() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTProofDebug(void) {
   /* TProofDebug */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDebug));
   // automatic default constructor
   G__memfunc_setup("TProofDebug",1089,G__G__Proof_127_1_0,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofDebug),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TProofDebug",1089,G__G__Proof_127_2_0,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofDebug),-1,0,1,1,1,0,"u 'TProofDebug' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofDebug",1215,G__G__Proof_127_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_127_4_0,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDebug),-1,1,1,1,1,0,"u 'TProofDebug' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEventIter(void) {
   /* TEventIter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIter));
   G__memfunc_setup("LoadDir",671,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,2,0,"","Load the directory pointed to by fElem",(void*)NULL,0);
   G__memfunc_setup("GetNextEvent",1217,G__G__Proof_134_4_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("StopProcess",1157,G__G__Proof_134_5_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - abort",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Create",596,G__G__Proof_134_6_0,85,G__get_linked_tagnum(&G__G__ProofLN_TEventIter),-1,0,4,3,1,0,
"U 'TDSet' - 0 - dset U 'TSelector' - 0 - sel "
"n - 'Long64_t' 0 - first n - 'Long64_t' 0 - num",(char*)NULL,(void*)(TEventIter* (*)(TDSet*,TSelector*,Long64_t,Long64_t))(&TEventIter::Create),0);
   G__memfunc_setup("Class",502,G__G__Proof_134_7_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TEventIter::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_134_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventIter::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_134_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TEventIter::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_134_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TEventIter::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_134_1_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_134_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_134_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_134_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_134_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventIter::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_134_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TEventIter::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_134_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventIter::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_134_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TEventIter::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TEventIter",1128,G__G__Proof_134_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_134_0_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TEventIter),-1,1,1,1,1,0,"u 'TEventIter' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEventIterObj(void) {
   /* TEventIterObj */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj));
   G__memfunc_setup("TEventIterObj",1285,G__G__Proof_135_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TEventIterObj",1285,G__G__Proof_135_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj),-1,0,4,1,1,0,
"U 'TDSet' - 0 - dset U 'TSelector' - 0 - sel "
"n - 'Long64_t' 0 - first n - 'Long64_t' 0 - num",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNextEvent",1217,G__G__Proof_135_3_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_135_4_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TEventIterObj::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_135_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventIterObj::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_135_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TEventIterObj::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_135_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TEventIterObj::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_135_8_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_135_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_135_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_135_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_135_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventIterObj::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_135_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TEventIterObj::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_135_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventIterObj::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_135_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TEventIterObj::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TEventIterObj",1285,G__G__Proof_135_6_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj),-1,0,1,1,1,0,"u 'TEventIterObj' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TEventIterObj",1411,G__G__Proof_135_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_135_8_1,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj),-1,1,1,1,1,0,"u 'TEventIterObj' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEventIterTree(void) {
   /* TEventIterTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree));
   G__memfunc_setup("TEventIterTree",1402,G__G__Proof_136_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TEventIterTree",1402,G__G__Proof_136_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree),-1,0,4,1,1,0,
"U 'TDSet' - 0 - dset U 'TSelector' - 0 - sel "
"n - 'Long64_t' 0 - first n - 'Long64_t' 0 - num",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNextEvent",1217,G__G__Proof_136_3_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_136_4_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TEventIterTree::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_136_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventIterTree::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_136_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TEventIterTree::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_136_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TEventIterTree::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_136_8_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_136_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_136_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_136_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_136_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventIterTree::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_136_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TEventIterTree::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_136_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventIterTree::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_136_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TEventIterTree::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TEventIterTree",1402,G__G__Proof_136_6_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree),-1,0,1,1,1,0,"u 'TEventIterTree' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TEventIterTree",1528,G__G__Proof_136_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_136_8_1,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree),-1,1,1,1,1,0,"u 'TEventIterTree' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSlave(void) {
   /* TSlave */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlave));
   G__memfunc_setup("TSlave",591,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TSlave),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSlave",591,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TSlave),-1,0,1,1,4,0,"u 'TSlave' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TSlave' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSlave",591,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TSlave),-1,0,10,1,4,0,
"C - - 10 - host i - 'Int_t' 0 - port "
"C - - 10 - ord i - 'Int_t' 0 - perf "
"C - - 10 - image U 'TProof' - 0 - proof "
"i 'TSlave::ESlaveType' - 0 - stype C - - 10 - workdir "
"C - - 10 - conffile C - - 10 - msd",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__Proof_137_5_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Compare",711,G__G__Proof_137_6_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsSortable",1016,G__G__Proof_137_7_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetName",673,G__G__Proof_137_8_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetImage",771,G__G__Proof_137_9_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetProofWorkDir",1512,G__G__Proof_137_0_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWorkDir",994,G__G__Proof_137_1_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUser",703,G__G__Proof_137_2_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPort",709,G__G__Proof_137_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOrdinal",1001,G__G__Proof_137_4_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPerfIdx",978,G__G__Proof_137_5_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSecurity",1144,G__G__Proof_137_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetProtocol",1138,G__G__Proof_137_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSocket",905,G__G__Proof_137_8_1,85,G__get_linked_tagnum(&G__G__ProofLN_TSocket),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetProof",806,G__G__Proof_137_9_1,85,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBytesRead",1187,G__G__Proof_137_0_2,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRealTime",1075,G__G__Proof_137_1_2,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCpuTime",983,G__G__Proof_137_2_2,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSlaveType",1213,G__G__Proof_137_3_2,105,G__get_linked_tagnum(&G__G__ProofLN_TSlavecLcLESlaveType),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetStatus",932,G__G__Proof_137_4_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetParallel",1101,G__G__Proof_137_5_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMsd",580,G__G__Proof_137_6_2,117,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInputHandler",1518,G__G__Proof_137_7_2,85,G__get_linked_tagnum(&G__G__ProofLN_TFileHandler),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetInputHandler",1530,G__G__Proof_137_8_2,121,-1,-1,0,1,1,1,0,"U 'TFileHandler' - 0 - ih",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsValid",684,G__G__Proof_137_9_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Proof_137_0_3,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_137_1_3,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSlave::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_137_2_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSlave::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_137_3_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSlave::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_137_4_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSlave::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_137_5_3,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_137_6_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_137_7_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_137_8_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_137_9_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSlave::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_137_0_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSlave::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_137_1_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSlave::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_137_2_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSlave::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TSlave",717,G__G__Proof_137_3_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVirtualPacketizer(void) {
   /* TVirtualPacketizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TVirtualPacketizer));
   G__memfunc_setup("TVirtualPacketizer",1869,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TVirtualPacketizer),-1,0,1,1,4,0,"u 'TVirtualPacketizer' - 11 - -","no implementation, will generate",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TVirtualPacketizer' - 11 - -","error on accidental usage",(void*)NULL,0);
   G__memfunc_setup("TVirtualPacketizer",1869,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TVirtualPacketizer),-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntries",1018,(G__InterfaceMethod)NULL,110,-1,G__defined_typename("Long64_t"),0,2,1,2,0,
"g - 'Bool_t' 0 - tree U 'TDSetElement' - 0 - e","Num of entries or objects",(void*)NULL,0);
   G__memfunc_setup("IsValid",684,G__G__Proof_139_5_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntriesProcessed",1954,G__G__Proof_139_6_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntriesProcessed",1954,G__G__Proof_139_7_0,110,-1,G__defined_typename("Long64_t"),0,1,1,1,8,"U 'TSlave' - 0 - sl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNextPacket",1303,G__G__Proof_139_8_0,85,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),-1,0,2,1,1,0,
"U 'TSlave' - 0 - sl U 'TMessage' - 0 - r",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StopProcess",1157,G__G__Proof_139_9_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - abort",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_139_0_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TVirtualPacketizer::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_139_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualPacketizer::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_139_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TVirtualPacketizer::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_139_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TVirtualPacketizer::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_139_4_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_139_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_139_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_139_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_139_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualPacketizer::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_139_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualPacketizer::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_139_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualPacketizer::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_139_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualPacketizer::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TVirtualPacketizer",1995,G__G__Proof_139_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProof(void) {
   /* TProof */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProof));
   G__memfunc_setup("TProof",602,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,0,1,1,4,0,"u 'TProof' - 11 - -","not implemented",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TProof' - 11 - -","idem",(void*)NULL,0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,4,0,
"C - - 10 - cmd i 'TProof::ESlaves' - 0 - list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendCommand",1097,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,4,0,
"C - - 10 - cmd i 'TProof::ESlaves' - 0 kActive list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendCurrentState",1646,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"i 'TProof::ESlaves' - 0 kActive list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CheckFile",862,(G__InterfaceMethod)NULL,108,-1,G__defined_typename("Long_t"),0,2,1,4,0,
"C - - 10 - file U 'TSlave' - 0 - sl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendFile",778,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,4,0,
"C - - 10 - file g - 'Bool_t' 0 kTRUE bin",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendObject",993,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,4,0,
"U 'TObject' - 10 - obj i 'TProof::ESlaves' - 0 kActive list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendGroupView",1330,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendInitialState",1621,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendPrint",919,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Ping",398,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"i 'TProof::ESlaves' - 0 - list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Interrupt",973,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,0,
"i 'TProof::EUrgent' - 0 - type i 'TProof::ESlaves' - 0 kActive list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AskStatistics",1354,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AskParallel",1100,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GoParallel",995,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"i - 'Int_t' 0 - nodes",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RecvLogFile",1074,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,0,
"U 'TSocket' - 0 - s i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BuildPackage",1180,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"C - - 10 - package",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LoadPackage",1068,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"C - - 10 - package",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UnloadPackage",1295,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"C - - 10 - package",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UnloadPackages",1410,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DisablePackage",1376,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"C - - 10 - package",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DisablePackages",1491,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,4,0,
"u 'TMessage' - 11 - mess U 'TList' - 0 - slaves",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,4,0,
"u 'TMessage' - 11 - mess i 'TProof::ESlaves' - 0 kActive list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,4,0,
"C - - 10 - mess i - 'Int_t' 0 - kind "
"U 'TList' - 0 - slaves",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,4,0,
"C - - 10 - mess i - 'Int_t' 0 kMESS_STRING kind "
"i 'TProof::ESlaves' - 0 kActive list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,4,0,
"i - 'Int_t' 0 - kind U 'TList' - 0 - slaves",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Broadcast",915,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,4,0,
"i - 'Int_t' 0 - kind i 'TProof::ESlaves' - 0 kActive list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BroadcastObject",1514,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,4,0,
"U 'TObject' - 10 - obj i - 'Int_t' 0 - kind "
"U 'TList' - 0 - slaves",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BroadcastObject",1514,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,4,0,
"U 'TObject' - 10 - obj i - 'Int_t' 0 kMESS_OBJECT kind "
"i 'TProof::ESlaves' - 0 kActive list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BroadcastRaw",1213,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,4,0,
"Y - - 10 - buffer i - 'Int_t' 0 - length "
"U 'TList' - 0 - slaves",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BroadcastRaw",1213,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,4,0,
"Y - - 10 - buffer i - 'Int_t' 0 - length "
"i 'TProof::ESlaves' - 0 kActive list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Collect",710,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"U 'TSlave' - 10 - sl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Collect",710,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"U 'TMonitor' - 0 - mon",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FindUniqueSlaves",1638,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FindSlave",892,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TSlave),-1,0,1,1,4,8,"U 'TSocket' - 0 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfSlaves",1503,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfUniqueSlaves",2134,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfBadSlaves",1766,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumberOfSlaves",1708,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumberOfActiveSlaves",2312,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumberOfUniqueSlaves",2339,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumberOfBadSlaves",1971,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MarkBad",658,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TSlave' - 0 - sl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MarkBad",658,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TSocket' - 0 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ActivateAsyncInput",1855,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeActivateAsyncInput",2024,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleAsyncInput",1626,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TSocket' - 0 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TProof",602,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,0,0,1,2,0,"","For derived classes to use",(void*)NULL,0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,4,1,2,0,
"C - - 10 - masterurl C - - 10 - conffile "
"C - - 10 - confdir i - 'Int_t' 0 - loglevel",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("StartSlaves",1148,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,2,0,"g - 'Bool_t' 0 - parallel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPlayer",921,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TProofPlayer' - 0 - player",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPlayer",909,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),-1,0,0,1,2,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MakePlayer",1003,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetProgressDialog",1733,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TPluginHandler),-1,0,0,1,2,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfActiveSlaves",2107,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,2,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateSlave",1103,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TSlave),-1,0,6,1,2,0,
"C - - 10 - host i - 'Int_t' 0 - port "
"C - - 10 - ord i - 'Int_t' 0 - perf "
"C - - 10 - image C - - 10 - workdir",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreateSubmaster",1546,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TSlave),-1,0,6,1,2,0,
"C - - 10 - host i - 'Int_t' 0 - port "
"C - - 10 - ord C - - 10 - image "
"C - - 10 - conffile C - - 10 - msd",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Collect",710,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"i 'TProof::ESlaves' - 0 kActive list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Collect",710,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,2,0,"U 'TList' - 0 - slaves",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetDSet",668,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TDSet' - 0 - dset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ValidateDSet",1178,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TDSet' - 0 - dset",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveStartupThread",1862,(G__InterfaceMethod)NULL,89,-1,-1,0,1,3,2,0,"Y - - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SubmasterStartupThread",2305,(G__InterfaceMethod)NULL,89,-1,-1,0,1,3,2,0,"Y - - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TProof",602,G__G__Proof_176_6_6,105,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,0,4,1,1,0,
"C - - 10 - masterurl C - - 10 kPROOF_ConfFile conffile "
"C - - 10 kPROOF_ConfDir confdir i - 'Int_t' 0 0 loglevel",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Ping",398,G__G__Proof_176_7_6,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Exec",389,G__G__Proof_176_8_6,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - cmd",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Process",735,G__G__Proof_176_9_6,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 -1 nentries "
"n - 'Long64_t' 0 0 firstentry U 'TEventList' - 0 0 evl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawSelect",1006,G__G__Proof_176_0_7,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"U 'TDSet' - 0 - set C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 -1 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StopProcess",1157,G__G__Proof_176_1_7,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - abort",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddInput",793,G__G__Proof_176_2_7,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Browse",626,G__G__Proof_176_3_7,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearInput",1015,G__G__Proof_176_4_7,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOutput",945,G__G__Proof_176_5_7,85,G__get_linked_tagnum(&G__G__ProofLN_TObject),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOutputList",1357,G__G__Proof_176_6_7,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetParallel",1113,G__G__Proof_176_7_7,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 9999 nodes",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLogLevel",1094,G__G__Proof_176_8_7,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - level h - 'UInt_t' 0 TProofDebug::kAll mask",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Close",502,G__G__Proof_176_9_7,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Proof_176_0_8,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowCache",885,G__G__Proof_176_1_8,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE all",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearCache",955,G__G__Proof_176_2_8,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowPackages",1216,G__G__Proof_176_3_8,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE all",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowEnabledPackages",1899,G__G__Proof_176_4_8,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE all",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearPackages",1286,G__G__Proof_176_5_8,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearPackage",1171,G__G__Proof_176_6_8,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - package",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("EnablePackage",1267,G__G__Proof_176_7_8,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - package",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UploadPackage",1297,G__G__Proof_176_8_8,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - par i - 'Int_t' 0 1 parallel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaster",908,G__G__Proof_176_9_8,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetConfDir",965,G__G__Proof_176_0_9,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetConfFile",1062,G__G__Proof_176_1_9,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUser",703,G__G__Proof_176_2_9,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetWorkDir",994,G__G__Proof_176_3_9,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetImage",771,G__G__Proof_176_4_9,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUrlProtocol",1445,G__G__Proof_176_5_9,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPort",709,G__G__Proof_176_6_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSecurity",1144,G__G__Proof_176_7_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRemoteProtocol",1758,G__G__Proof_176_8_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetClientProtocol",1745,G__G__Proof_176_9_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStatus",932,G__G__Proof_176_0_10,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLogLevel",1082,G__G__Proof_176_1_10,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParallel",1101,G__G__Proof_176_2_10,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSlaveInfo",1191,G__G__Proof_176_3_10,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBytesRead",1187,G__G__Proof_176_4_10,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRealTime",1075,G__G__Proof_176_5_10,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCpuTime",983,G__G__Proof_176_6_10,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsFolder",792,G__G__Proof_176_7_10,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsMaster",808,G__G__Proof_176_8_10,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsValid",684,G__G__Proof_176_9_10,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsParallel",1001,G__G__Proof_176_0_11,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddFeedback",1038,G__G__Proof_176_1_11,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RemoveFeedback",1395,G__G__Proof_176_2_11,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearFeedback",1260,G__G__Proof_176_3_11,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowFeedback",1190,G__G__Proof_176_4_11,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFeedbackList",1473,G__G__Proof_176_5_11,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsDataReady",1067,G__G__Proof_176_6_11,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"n - 'Long64_t' 1 - totalbytes n - 'Long64_t' 1 - bytesready",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetActive",904,G__G__Proof_176_7_11,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Progress",853,G__G__Proof_176_8_11,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Feedback",773,G__G__Proof_176_9_11,121,-1,-1,0,1,1,1,0,"U 'TList' - 0 - objs","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("GetTreeHeader",1273,G__G__Proof_176_0_12,85,G__get_linked_tagnum(&G__G__ProofLN_TTree),-1,0,1,1,1,0,"U 'TDSet' - 0 - tdset",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOutputNames",1445,G__G__Proof_176_1_12,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddChain",748,G__G__Proof_176_2_12,121,-1,-1,0,1,1,1,0,"U 'TChain' - 0 - chain",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RemoveChain",1105,G__G__Proof_176_3_12,121,-1,-1,0,1,1,1,0,"U 'TChain' - 0 - chain",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CreateDrawFeedback",1767,G__G__Proof_176_4_12,85,G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDrawFeedbackOption",2104,G__G__Proof_176_5_12,121,-1,-1,0,2,1,1,0,
"U 'TDrawFeedback' - 0 - f C - 'Option_t' 10 - opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeleteDrawFeedback",1766,G__G__Proof_176_6_12,121,-1,-1,0,1,1,1,0,"U 'TDrawFeedback' - 0 - f",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_176_7_12,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProof::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_176_8_12,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProof::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_176_9_12,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProof::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_176_0_13,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProof::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_176_1_13,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_176_2_13,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_176_3_13,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_176_4_13,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_176_5_13,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProof::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_176_6_13,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProof::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_176_7_13,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProof::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_176_8_13,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProof::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TProof",728,G__G__Proof_176_9_13,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDrawFeedback(void) {
   /* TDrawFeedback */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback));
   G__memfunc_setup("TDrawFeedback",1255,G__G__Proof_177_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback),-1,0,2,1,1,0,
"U 'TVirtualProof' - 0 0 proof U 'TSeqCollection' - 0 0 names",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Feedback",773,G__G__Proof_177_2_0,121,-1,-1,0,1,1,1,0,"U 'TList' - 0 - objs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOption",933,G__G__Proof_177_3_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Proof_177_4_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDrawFeedback::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_177_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDrawFeedback::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_177_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDrawFeedback::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_177_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDrawFeedback::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_177_8_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_177_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_177_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_177_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_177_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDrawFeedback::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_177_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDrawFeedback::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_177_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDrawFeedback::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_177_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDrawFeedback::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TDrawFeedback",1255,G__G__Proof_177_6_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback),-1,0,1,1,1,0,"u 'TDrawFeedback' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDrawFeedback",1381,G__G__Proof_177_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_177_8_1,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback),-1,1,1,1,1,0,"u 'TDrawFeedback' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofPlayer(void) {
   /* TProofPlayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer));
   G__memfunc_setup("GetSender",897,(G__InterfaceMethod)NULL,89,-1,-1,0,0,1,2,0,"","used to set gTQSender",(void*)NULL,1);
   G__memfunc_setup("SetupFeedback",1302,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"","specialized setup",(void*)NULL,1);
   G__memfunc_setup("StopFeedback",1195,G__G__Proof_183_3_0,121,-1,-1,0,0,1,1,0,"","specialized teardown",(void*)NULL,1);
   G__memfunc_setup("TProofPlayer",1223,G__G__Proof_183_4_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Process",735,G__G__Proof_183_5_0,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 -1 nentries "
"n - 'Long64_t' 0 0 firstentry U 'TEventList' - 0 0 evl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawSelect",1006,G__G__Proof_183_6_0,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"U 'TDSet' - 0 - set C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 -1 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StopProcess",1157,G__G__Proof_183_7_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - abort",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddInput",793,G__G__Proof_183_8_0,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - inp",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearInput",1015,G__G__Proof_183_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOutput",945,G__G__Proof_183_0_1,85,G__get_linked_tagnum(&G__G__ProofLN_TObject),-1,0,1,1,1,8,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOutputList",1357,G__G__Proof_183_1_1,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetInputList",1228,G__G__Proof_183_2_1,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StoreOutput",1182,G__G__Proof_183_3_1,121,-1,-1,0,1,1,1,0,"U 'TList' - 0 - out","Adopts the list",(void*)NULL,1);
   G__memfunc_setup("StoreFeedback",1298,G__G__Proof_183_4_1,121,-1,-1,0,2,1,1,0,
"U 'TObject' - 0 - slave U 'TList' - 0 - out","Adopts the list",(void*)NULL,1);
   G__memfunc_setup("Progress",853,G__G__Proof_183_5_1,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Progress",853,G__G__Proof_183_6_1,121,-1,-1,0,3,1,1,0,
"U 'TSlave' - 0 - - n - 'Long64_t' 0 - total "
"n - 'Long64_t' 0 - processed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Feedback",773,G__G__Proof_183_7_1,121,-1,-1,0,1,1,1,0,"U 'TList' - 0 - objs","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("GetNextPacket",1303,G__G__Proof_183_8_1,85,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),-1,0,2,1,1,0,
"U 'TSlave' - 0 - slave U 'TMessage' - 0 - r",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UpdateAutoBin",1301,G__G__Proof_183_9_1,121,-1,-1,0,7,1,1,0,
"C - - 10 - name d - 'Double_t' 1 - xmin "
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - ymax d - 'Double_t' 1 - zmin "
"d - 'Double_t' 1 - zmax",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsClient",795,G__G__Proof_183_0_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetExitStatus",1342,G__G__Proof_183_1_2,105,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayercLcLEExitStatus),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEventsProcessed",1853,G__G__Proof_183_2_2,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddEventsProcessed",1830,G__G__Proof_183_3_2,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - ev",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_183_4_2,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofPlayer::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_183_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayer::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_183_6_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofPlayer::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_183_7_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofPlayer::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_183_8_2,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_183_9_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_183_0_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_183_1_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_183_2_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayer::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_183_3_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofPlayer::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_183_4_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayer::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_183_5_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofPlayer::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofPlayer",1223,G__G__Proof_183_6_3,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),-1,0,1,1,1,0,"u 'TProofPlayer' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofPlayer",1349,G__G__Proof_183_7_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_183_8_3,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),-1,1,1,1,1,0,"u 'TProofPlayer' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofServ(void) {
   /* TProofServ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServ));
   G__memfunc_setup("Setup",529,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RedirectOutput",1475,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CatMotd",684,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LockDir",680,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"u 'TString' - 11 - lock",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UnlockDir",907,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"u 'TString' - 11 - lock",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LockCache",861,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UnlockCache",1088,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LockPackage",1077,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UnlockPackage",1304,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UnloadPackage",1295,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,0,"C - - 10 - package",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UnloadPackages",1410,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleSocketInputDuringProcess",3085,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TProofServ",1018,G__G__Proof_185_3_1,105,G__get_linked_tagnum(&G__G__ProofLN_TProofServ),-1,0,2,1,1,0,
"I - - 0 - argc C - - 2 - argv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetProof",806,G__G__Proof_185_4_1,85,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetService",1009,G__G__Proof_185_5_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetConfDir",965,G__G__Proof_185_6_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetConfFile",1062,G__G__Proof_185_7_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUser",703,G__G__Proof_185_8_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWorkDir",994,G__G__Proof_185_9_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSessionDir",1315,G__G__Proof_185_0_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetProtocol",1138,G__G__Proof_185_1_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOrdinal",1001,G__G__Proof_185_2_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetGroupId",986,G__G__Proof_185_3_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetGroupSize",1224,G__G__Proof_185_4_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLogLevel",1082,G__G__Proof_185_5_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSocket",905,G__G__Proof_185_6_2,85,G__get_linked_tagnum(&G__G__ProofLN_TSocket),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRealTime",1075,G__G__Proof_185_7_2,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCpuTime",983,G__G__Proof_185_8_2,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOptions",1036,G__G__Proof_185_9_2,121,-1,-1,0,2,1,1,0,
"I - - 0 - argc C - - 2 - argv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleSocketInput",1733,G__G__Proof_185_0_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleUrgentData",1595,G__G__Proof_185_1_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleSigPipe",1277,G__G__Proof_185_2_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Interrupt",973,G__G__Proof_185_3_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsMaster",808,G__G__Proof_185_4_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsParallel",1001,G__G__Proof_185_5_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsTopMaster",1115,G__G__Proof_185_6_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Run",309,G__G__Proof_185_7_3,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE retrn",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Proof_185_8_3,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Get",288,G__G__Proof_185_9_3,85,G__get_linked_tagnum(&G__G__ProofLN_TObject),-1,0,1,1,1,0,"C - - 10 - namecycle",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNextPacket",1303,G__G__Proof_185_0_4,85,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Reset",515,G__G__Proof_185_1_4,121,-1,-1,0,1,1,1,0,"C - - 10 - dir",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReceiveFile",1091,G__G__Proof_185_2_4,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - file g - 'Bool_t' 0 - bin "
"l - 'Long_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendLogFile",1068,G__G__Proof_185_3_4,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 status",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendStatistics",1461,G__G__Proof_185_4_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendParallel",1207,G__G__Proof_185_5_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Terminate",937,G__G__Proof_185_6_4,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - status",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsActive",792,G__G__Proof_185_7_4,103,-1,G__defined_typename("Bool_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Bool_t (*)())(&TProofServ::IsActive),0);
   G__memfunc_setup("This",408,G__G__Proof_185_8_4,85,G__get_linked_tagnum(&G__G__ProofLN_TProofServ),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TProofServ* (*)())(&TProofServ::This),0);
   G__memfunc_setup("Class",502,G__G__Proof_185_9_4,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofServ::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_185_0_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofServ::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_185_1_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofServ::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_185_2_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofServ::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_185_3_5,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_185_4_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_185_5_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_185_6_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_185_7_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofServ::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_185_8_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofServ::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_185_9_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofServ::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_185_0_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofServ::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofServ",1018,G__G__Proof_185_1_6,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofServ),-1,0,1,1,1,0,"u 'TProofServ' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofServ",1144,G__G__Proof_185_2_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_185_3_6,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofServ),-1,1,1,1,1,0,"u 'TProofServ' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTStatus(void) {
   /* TStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TStatus));
   G__memfunc_setup("TStatus",728,G__G__Proof_238_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TStatus),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsOk",374,G__G__Proof_238_2_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Proof_238_3_0,121,-1,-1,0,1,1,1,0,"C - - 10 - mesg",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Merge",496,G__G__Proof_238_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TCollection' - 0 - list",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Proof_238_5_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Proof_238_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NextMesg",811,G__G__Proof_238_7_0,67,-1,-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Proof_238_8_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TStatus::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_238_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TStatus::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_238_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TStatus::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_238_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TStatus::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_238_2_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_238_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_238_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_238_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_238_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TStatus::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_238_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TStatus::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_238_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TStatus::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_238_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TStatus::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TStatus",728,G__G__Proof_238_0_2,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TStatus),-1,0,1,1,1,0,"u 'TStatus' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TStatus",854,G__G__Proof_238_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_238_2_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TStatus),-1,1,1,1,1,0,"u 'TStatus' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofPlayerLocal(void) {
   /* TProofPlayerLocal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal));
   G__memfunc_setup("TProofPlayerLocal",1714,G__G__Proof_241_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Proof_241_2_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofPlayerLocal::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_241_3_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerLocal::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_241_4_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofPlayerLocal::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_241_5_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofPlayerLocal::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_241_6_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_241_7_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_241_8_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_241_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_241_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerLocal::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_241_1_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofPlayerLocal::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_241_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerLocal::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_241_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofPlayerLocal::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofPlayerLocal",1714,G__G__Proof_241_4_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal),-1,0,1,1,1,0,"u 'TProofPlayerLocal' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofPlayerLocal",1840,G__G__Proof_241_5_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_241_6_1,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal),-1,1,1,1,1,0,"u 'TProofPlayerLocal' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofPlayerRemote(void) {
   /* TProofPlayerRemote */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote));
   G__memfunc_setup("MergeFeedback",1269,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,2,0,"U 'TTimer' - 0 - timer",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetProof",806,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TProof),-1,0,0,1,2,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SendSelector",1227,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,2,0,"C - - 10 - selector_file","send selector to slaves",(void*)NULL,1);
   G__memfunc_setup("SetupFeedback",1302,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"","specialized setup",(void*)NULL,1);
   G__memfunc_setup("StopFeedback",1195,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"","specialized teardown",(void*)NULL,1);
   G__memfunc_setup("TProofPlayerRemote",1843,G__G__Proof_242_7_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote),-1,0,1,1,1,0,"U 'TProof' - 0 0 proof",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Process",735,G__G__Proof_242_8_0,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 -1 nentries "
"n - 'Long64_t' 0 0 firstentry U 'TEventList' - 0 0 evl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawSelect",1006,G__G__Proof_242_9_0,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"U 'TDSet' - 0 - set C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 -1 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StopProcess",1157,G__G__Proof_242_0_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - abort",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StoreOutput",1182,G__G__Proof_242_1_1,121,-1,-1,0,1,1,1,0,"U 'TList' - 0 - out","Adopts the list",(void*)NULL,1);
   G__memfunc_setup("StoreFeedback",1298,G__G__Proof_242_2_1,121,-1,-1,0,2,1,1,0,
"U 'TObject' - 0 - slave U 'TList' - 0 - out","Adopts the list",(void*)NULL,1);
   G__memfunc_setup("MergeOutput",1153,G__G__Proof_242_3_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Progress",853,G__G__Proof_242_4_1,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Progress",853,G__G__Proof_242_5_1,121,-1,-1,0,3,1,1,0,
"U 'TSlave' - 0 - - n - 'Long64_t' 0 - total "
"n - 'Long64_t' 0 - processed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Feedback",773,G__G__Proof_242_6_1,121,-1,-1,0,1,1,1,0,"U 'TList' - 0 - objs","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("GetNextPacket",1303,G__G__Proof_242_7_1,85,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),-1,0,2,1,1,0,
"U 'TSlave' - 0 - slave U 'TMessage' - 0 - r",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsClient",795,G__G__Proof_242_8_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_242_9_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofPlayerRemote::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_242_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerRemote::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_242_1_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofPlayerRemote::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_242_2_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofPlayerRemote::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_242_3_2,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_242_4_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_242_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_242_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_242_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerRemote::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_242_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofPlayerRemote::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_242_9_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerRemote::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_242_0_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofPlayerRemote::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofPlayerRemote",1843,G__G__Proof_242_1_3,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote),-1,0,1,1,1,0,"u 'TProofPlayerRemote' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofPlayerRemote",1969,G__G__Proof_242_2_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_242_3_3,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote),-1,1,1,1,1,0,"u 'TProofPlayerRemote' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofPlayerSlave(void) {
   /* TProofPlayerSlave */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave));
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,4,0,"U 'TTimer' - 0 - timer",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetupFeedback",1302,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StopFeedback",1195,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TProofPlayerSlave",1730,G__G__Proof_243_4_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TProofPlayerSlave",1730,G__G__Proof_243_5_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave),-1,0,1,1,1,0,"U 'TSocket' - 0 - socket",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawSelect",1006,G__G__Proof_243_6_0,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"U 'TDSet' - 0 - set C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 -1 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_243_7_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofPlayerSlave::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_243_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerSlave::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_243_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofPlayerSlave::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_243_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofPlayerSlave::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_243_1_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_243_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_243_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_243_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_243_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerSlave::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_243_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofPlayerSlave::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_243_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerSlave::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_243_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofPlayerSlave::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofPlayerSlave",1730,G__G__Proof_243_9_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave),-1,0,1,1,1,0,"u 'TProofPlayerSlave' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofPlayerSlave",1856,G__G__Proof_243_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_243_1_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave),-1,1,1,1,1,0,"u 'TProofPlayerSlave' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofPlayerSuperMaster(void) {
   /* TProofPlayerSuperMaster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSuperMaster));
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,2,0,"U 'TTimer' - 0 - timer",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetupFeedback",1302,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TProofPlayerSuperMaster",2370,G__G__Proof_244_3_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSuperMaster),-1,0,1,1,1,0,"U 'TProof' - 0 0 proof",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Process",735,G__G__Proof_244_4_0,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 -1 nentries "
"n - 'Long64_t' 0 0 firstentry U 'TEventList' - 0 0 evl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Progress",853,G__G__Proof_244_5_0,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Progress",853,G__G__Proof_244_6_0,121,-1,-1,0,3,1,1,0,
"U 'TSlave' - 0 - sl n - 'Long64_t' 0 - total "
"n - 'Long64_t' 0 - processed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_244_7_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofPlayerSuperMaster::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_244_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerSuperMaster::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_244_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofPlayerSuperMaster::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_244_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofPlayerSuperMaster::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_244_1_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_244_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_244_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_244_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_244_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerSuperMaster::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_244_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofPlayerSuperMaster::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_244_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofPlayerSuperMaster::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_244_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofPlayerSuperMaster::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TProofPlayerSuperMaster",2496,G__G__Proof_244_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPerfEvent(void) {
   /* TPerfEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TPerfEvent));
   G__memfunc_setup("TPerfEvent",995,G__G__Proof_255_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TPerfEvent),-1,0,1,1,1,0,"U 'TTimeStamp' - 0 0 offset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsSortable",1016,G__G__Proof_255_2_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Compare",711,G__G__Proof_255_3_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Proof_255_4_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_255_5_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPerfEvent::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_255_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPerfEvent::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_255_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPerfEvent::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_255_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPerfEvent::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_255_9_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_255_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_255_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_255_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_255_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPerfEvent::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_255_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPerfEvent::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_255_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPerfEvent::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_255_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPerfEvent::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TPerfEvent",995,G__G__Proof_255_7_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TPerfEvent),-1,0,1,1,1,0,"u 'TPerfEvent' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TPerfEvent",1121,G__G__Proof_255_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_255_9_1,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TPerfEvent),-1,1,1,1,1,0,"u 'TPerfEvent' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPerfStats(void) {
   /* TPerfStats */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TPerfStats));
   G__memfunc_setup("TPerfStats",1008,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TPerfStats),-1,0,2,1,4,0,
"U 'TList' - 0 - input U 'TList' - 0 - output",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SimpleEvent",1132,G__G__Proof_256_2_0,121,-1,-1,0,1,1,1,0,"i 'TVirtualPerfStats::EEventType' - 0 - type",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PacketEvent",1114,G__G__Proof_256_3_0,121,-1,-1,0,8,1,1,0,
"C - - 10 - slave C - - 10 - slavename "
"C - - 10 - filename n - 'Long64_t' 0 - eventsprocessed "
"d - 'Double_t' 0 - latency d - 'Double_t' 0 - proctime "
"d - 'Double_t' 0 - cputime n - 'Long64_t' 0 - bytesRead",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FileEvent",898,G__G__Proof_256_4_0,121,-1,-1,0,5,1,1,0,
"C - - 10 - slave C - - 10 - slavename "
"C - - 10 - nodename C - - 10 - filename "
"g - 'Bool_t' 0 - isStart",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FileOpenEvent",1300,G__G__Proof_256_5_0,121,-1,-1,0,3,1,1,0,
"U 'TFile' - 0 - file C - - 10 - filename "
"d - 'Double_t' 0 - proctime",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FileReadEvent",1278,G__G__Proof_256_6_0,121,-1,-1,0,3,1,1,0,
"U 'TFile' - 0 - file i - 'Int_t' 0 - len "
"d - 'Double_t' 0 - proctime",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBytesRead",1199,G__G__Proof_256_7_0,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - num",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBytesRead",1187,G__G__Proof_256_8_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Start",526,G__G__Proof_256_9_0,121,-1,-1,0,2,3,1,0,
"U 'TList' - 0 - input U 'TList' - 0 - output",(char*)NULL,(void*)(void (*)(TList*,TList*))(&TPerfStats::Start),0);
   G__memfunc_setup("Stop",422,G__G__Proof_256_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPerfStats::Stop),0);
   G__memfunc_setup("Setup",529,G__G__Proof_256_1_1,121,-1,-1,0,1,3,1,0,"U 'TList' - 0 - input",(char*)NULL,(void*)(void (*)(TList*))(&TPerfStats::Setup),0);
   G__memfunc_setup("Class",502,G__G__Proof_256_2_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPerfStats::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_256_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPerfStats::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_256_4_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPerfStats::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_256_5_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPerfStats::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_256_6_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_256_7_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_256_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_256_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_256_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPerfStats::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_256_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPerfStats::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_256_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPerfStats::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_256_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPerfStats::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TPerfStats",1008,G__G__Proof_256_4_2,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TPerfStats),-1,0,1,1,1,0,"u 'TPerfStats' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TPerfStats",1134,G__G__Proof_256_5_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_256_6_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TPerfStats),-1,1,1,1,1,0,"u 'TPerfStats' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPacketizer2(void) {
   /* TPacketizer2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2));
   G__memfunc_setup("TPacketizer2",1176,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPacketizer2",1176,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2),-1,0,1,1,4,0,"u 'TPacketizer2' - 11 - -","no implementation, will generate",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TPacketizer2' - 11 - -","error on accidental usage",(void*)NULL,0);
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,4,0,"U 'TTimer' - 0 - timer",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("NextUnAllocNode",1491,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2cLcLTFileNode),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RemoveUnAllocNode",1698,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TPacketizer2::TFileNode' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NextActiveNode",1409,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2cLcLTFileNode),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RemoveActiveNode",1616,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TPacketizer2::TFileNode' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNextUnAlloc",1389,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2cLcLTFileStat),-1,0,1,1,4,0,"U 'TPacketizer2::TFileNode' - 0 0 node",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNextActive",1307,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2cLcLTFileStat),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RemoveActive",1226,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TPacketizer2::TFileStat' - 0 - file",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ValidateFiles",1309,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,0,
"U 'TDSet' - 0 - dset U 'TList' - 0 - slaves",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SplitEventList",1450,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TDSet' - 0 - dset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPacketizer2",1176,G__G__Proof_263_5_1,105,G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2),-1,0,5,1,1,0,
"U 'TDSet' - 0 - dset U 'TList' - 0 - slaves "
"n - 'Long64_t' 0 - first n - 'Long64_t' 0 - num "
"U 'TList' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntriesProcessed",1954,G__G__Proof_263_6_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntriesProcessed",1954,G__G__Proof_263_7_1,110,-1,G__defined_typename("Long64_t"),0,1,1,1,8,"U 'TSlave' - 0 - sl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNextPacket",1303,G__G__Proof_263_8_1,85,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),-1,0,2,1,1,0,
"U 'TSlave' - 0 - sl U 'TMessage' - 0 - r",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_263_9_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPacketizer2::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_263_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPacketizer2::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_263_1_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPacketizer2::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_263_2_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPacketizer2::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_263_3_2,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_263_4_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_263_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_263_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_263_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPacketizer2::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_263_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPacketizer2::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_263_9_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPacketizer2::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_263_0_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPacketizer2::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TPacketizer2",1302,G__G__Proof_263_1_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCondor(void) {
   /* TCondor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondor));
   G__memfunc_setup("ClaimVM",649,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave),-1,0,2,1,2,0,
"C - - 10 - vm C - - 10 - cmd",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCondor",697,G__G__Proof_264_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TCondor),-1,0,1,1,1,0,"C - - 10 \"\" pool",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Proof_264_3_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsValid",684,G__G__Proof_264_4_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVirtualMachines",1839,G__G__Proof_264_5_0,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Claim",486,G__G__Proof_264_6_0,85,G__get_linked_tagnum(&G__G__ProofLN_TList),-1,0,2,1,1,0,
"i - 'Int_t' 0 - n C - - 10 - cmd",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Claim",486,G__G__Proof_264_7_0,85,G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave),-1,0,2,1,1,0,
"C - - 10 - vmname C - - 10 - cmd",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetState",813,G__G__Proof_264_8_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"i 'TCondor::EState' - 0 - state",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetState",801,G__G__Proof_264_9_0,105,G__get_linked_tagnum(&G__G__ProofLN_TCondorcLcLEState),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Suspend",738,G__G__Proof_264_0_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Resume",625,G__G__Proof_264_1_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Release",705,G__G__Proof_264_2_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVmInfo",879,G__G__Proof_264_3_1,103,-1,G__defined_typename("Bool_t"),0,3,1,1,8,
"C - - 10 - vm u 'TString' - 1 - image "
"i - 'Int_t' 1 - perfidx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetImage",771,G__G__Proof_264_4_1,117,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,0,1,1,1,8,"C - - 10 - host",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Proof_264_5_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCondor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_264_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCondor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_264_7_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCondor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_264_8_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCondor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_264_9_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_264_0_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_264_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_264_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_264_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCondor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_264_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCondor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_264_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCondor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_264_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCondor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TCondor",697,G__G__Proof_264_7_2,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TCondor),-1,0,1,1,1,0,"u 'TCondor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TCondor",823,G__G__Proof_264_8_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_264_9_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TCondor),-1,1,1,1,1,0,"u 'TCondor' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSlaveInfo(void) {
   /* TSlaveInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo));
   G__memfunc_setup("TSlaveInfo",987,G__G__Proof_265_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo),-1,0,3,1,1,0,
"C - - 10 \"\" ordinal C - - 10 \"\" host "
"i - 'Int_t' 0 0 perfidx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetName",673,G__G__Proof_265_2_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOrdinal",1001,G__G__Proof_265_3_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetStatus",944,G__G__Proof_265_4_0,121,-1,-1,0,1,1,1,0,"i 'TSlaveInfo::ESlaveStatus' - 0 - stat",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Compare",711,G__G__Proof_265_5_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsSortable",1016,G__G__Proof_265_6_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Proof_265_7_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_265_8_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSlaveInfo::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_265_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSlaveInfo::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_265_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSlaveInfo::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_265_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSlaveInfo::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_265_2_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_265_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_265_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_265_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_265_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSlaveInfo::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_265_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSlaveInfo::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_265_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSlaveInfo::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_265_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSlaveInfo::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TSlaveInfo",987,G__G__Proof_265_0_2,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo),-1,0,1,1,1,0,"u 'TSlaveInfo' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TSlaveInfo",1113,G__G__Proof_265_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_265_2_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo),-1,1,1,1,1,0,"u 'TSlaveInfo' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPacketizer(void) {
   /* TPacketizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer));
   G__memfunc_setup("TPacketizer",1126,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TPacketizer),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPacketizer",1126,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__ProofLN_TPacketizer),-1,0,1,1,4,0,"u 'TPacketizer' - 11 - -","no implementation, will generate",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"u 'TPacketizer' - 11 - -","error on accidental usage",(void*)NULL,0);
   G__memfunc_setup("HandleTimer",1101,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,4,0,"U 'TTimer' - 0 - timer",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("NextUnAllocNode",1491,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TPacketizercLcLTFileNode),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RemoveUnAllocNode",1698,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TPacketizer::TFileNode' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NextActiveNode",1409,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TPacketizercLcLTFileNode),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RemoveActiveNode",1616,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TPacketizer::TFileNode' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNextUnAlloc",1389,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TPacketizercLcLTFileStat),-1,0,1,1,4,0,"U 'TPacketizer::TFileNode' - 0 0 node",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNextActive",1307,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TPacketizercLcLTFileStat),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RemoveActive",1226,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TPacketizer::TFileStat' - 0 - file",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ValidateFiles",1309,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,0,
"U 'TDSet' - 0 - dset U 'TList' - 0 - slaves",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SplitEventList",1450,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TDSet' - 0 - dset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPacketizer",1126,G__G__Proof_267_5_1,105,G__get_linked_tagnum(&G__G__ProofLN_TPacketizer),-1,0,5,1,1,0,
"U 'TDSet' - 0 - dset U 'TList' - 0 - slaves "
"n - 'Long64_t' 0 - first n - 'Long64_t' 0 - num "
"U 'TList' - 0 - input",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntriesProcessed",1954,G__G__Proof_267_6_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntriesProcessed",1954,G__G__Proof_267_7_1,110,-1,G__defined_typename("Long64_t"),0,1,1,1,8,"U 'TSlave' - 0 - sl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNextPacket",1303,G__G__Proof_267_8_1,85,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),-1,0,2,1,1,0,
"U 'TSlave' - 0 - sl U 'TMessage' - 0 - r",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_267_9_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPacketizer::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_267_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPacketizer::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_267_1_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPacketizer::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_267_2_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPacketizer::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_267_3_2,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_267_4_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_267_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_267_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_267_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPacketizer::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_267_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPacketizer::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_267_9_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPacketizer::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_267_0_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPacketizer::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TPacketizer",1252,G__G__Proof_267_1_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofCondor(void) {
   /* TProofCondor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor));
   G__memfunc_setup("StartSlaves",1148,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,2,0,"g - 'Bool_t' 0 - parallel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetJobAd",736,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__ProofLN_TString),-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TProofCondor",1215,G__G__Proof_281_3_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofCondor),-1,0,4,1,1,0,
"C - - 10 - masterurl C - - 10 kPROOF_ConfFile conffile "
"C - - 10 kPROOF_ConfDir confdir i - 'Int_t' 0 0 loglevel",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetActive",904,G__G__Proof_281_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetActive",904,G__G__Proof_281_5_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - active",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_281_6_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofCondor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_281_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofCondor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_281_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofCondor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_281_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofCondor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_281_0_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_281_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_281_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_281_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_281_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofCondor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_281_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofCondor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_281_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofCondor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_281_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofCondor::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TProofCondor",1341,G__G__Proof_281_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofSuperMaster(void) {
   /* TProofSuperMaster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster));
   G__memfunc_setup("StartSlaves",1148,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,2,0,"g - 'Bool_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,6,1,2,0,
"U 'TDSet' - 0 - set C - - 10 - selector "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 -1 nentries "
"n - 'Long64_t' 0 0 firstentry U 'TEventList' - 0 0 evl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ValidateDSet",1178,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TDSet' - 0 - dset",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakePlayer",1003,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TProofSuperMaster",1749,G__G__Proof_282_5_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster),-1,0,4,1,1,0,
"C - - 10 - masterurl C - - 10 kPROOF_ConfFile conffile "
"C - - 10 kPROOF_ConfDir confdir i - 'Int_t' 0 0 loglevel",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Proof_282_6_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofSuperMaster::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_282_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofSuperMaster::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_282_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofSuperMaster::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_282_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofSuperMaster::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_282_0_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_282_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_282_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_282_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_282_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofSuperMaster::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_282_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofSuperMaster::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_282_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofSuperMaster::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_282_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofSuperMaster::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TProofSuperMaster",1875,G__G__Proof_282_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSetProxy(void) {
   /* TDSetProxy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy));
   G__memfunc_setup("TDSetProxy",998,G__G__Proof_290_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSetProxy",998,G__G__Proof_290_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy),-1,0,3,1,1,0,
"C - - 10 - type C - - 10 \"*\" objname "
"C - - 10 \"/\" dir",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Reset",515,G__G__Proof_290_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Next",415,G__G__Proof_290_4_0,85,G__get_linked_tagnum(&G__G__ProofLN_TDSetElement),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetProofServ",1234,G__G__Proof_290_5_0,121,-1,-1,0,1,1,1,0,"U 'TProofServ' - 0 - serv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Proof_290_6_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDSetProxy::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_290_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetProxy::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_290_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDSetProxy::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_290_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDSetProxy::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_290_0_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_290_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_290_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_290_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_290_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetProxy::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_290_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDSetProxy::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_290_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetProxy::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_290_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDSetProxy::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TDSetProxy",998,G__G__Proof_290_8_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy),-1,0,1,1,1,0,"u 'TDSetProxy' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSetProxy",1124,G__G__Proof_290_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_290_0_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy),-1,1,1,1,1,0,"u 'TDSetProxy' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCondorSlave(void) {
   /* TCondorSlave */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave));
   G__memfunc_setup("Print",525,G__G__Proof_291_1_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_291_2_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCondorSlave::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_291_3_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCondorSlave::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_291_4_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCondorSlave::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_291_5_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCondorSlave::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_291_6_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_291_7_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_291_8_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_291_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_291_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCondorSlave::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_291_1_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCondorSlave::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_291_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCondorSlave::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_291_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCondorSlave::DeclFileLine),0);
   // automatic default constructor
   G__memfunc_setup("TCondorSlave",1204,G__G__Proof_291_4_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TCondorSlave",1204,G__G__Proof_291_5_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave),-1,0,1,1,1,0,"u 'TCondorSlave' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TCondorSlave",1330,G__G__Proof_291_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_291_7_1,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave),-1,1,1,1,1,0,"u 'TCondorSlave' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofLimitsFinder(void) {
   /* TProofLimitsFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLimitsFinder));
   G__memfunc_setup("TProofLimitsFinder",1828,G__G__Proof_298_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofLimitsFinder),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FindGoodLimits",1404,G__G__Proof_298_2_0,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"U 'TH1' - 0 - h d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindGoodLimits",1404,G__G__Proof_298_3_0,105,-1,G__defined_typename("Int_t"),0,5,1,1,0,
"U 'TH1' - 0 - h d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax d - 'Axis_t' 0 - ymin "
"d - 'Axis_t' 0 - ymax",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindGoodLimits",1404,G__G__Proof_298_4_0,105,-1,G__defined_typename("Int_t"),0,7,1,1,0,
"U 'TH1' - 0 - h d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax d - 'Axis_t' 0 - ymin "
"d - 'Axis_t' 0 - ymax d - 'Axis_t' 0 - zmin "
"d - 'Axis_t' 0 - zmax",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AutoBinFunc",1086,G__G__Proof_298_5_0,121,-1,-1,0,7,3,1,0,
"u 'TString' - 1 - key d - 'Double_t' 1 - xmin "
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - ymax d - 'Double_t' 1 - zmin "
"d - 'Double_t' 1 - zmax",(char*)NULL,(void*)(void (*)(TString&,Double_t&,Double_t&,Double_t&,Double_t&,Double_t&,Double_t&))(&TProofLimitsFinder::AutoBinFunc),0);
   G__memfunc_setup("Class",502,G__G__Proof_298_6_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofLimitsFinder::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_298_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofLimitsFinder::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_298_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofLimitsFinder::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_298_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofLimitsFinder::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_298_0_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_298_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_298_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_298_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_298_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofLimitsFinder::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_298_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofLimitsFinder::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_298_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofLimitsFinder::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_298_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofLimitsFinder::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofLimitsFinder",1828,G__G__Proof_298_8_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofLimitsFinder),-1,0,1,1,1,0,"u 'TProofLimitsFinder' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofLimitsFinder",1954,G__G__Proof_298_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_298_0_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofLimitsFinder),-1,1,1,1,1,0,"u 'TProofLimitsFinder' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDraw(void) {
   /* TProofDraw */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDraw));
   G__memfunc_setup("SetError",822,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"C - - 10 - sub C - - 10 - mesg",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CompileVariables",1634,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearFormula",1213,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ProcessSingle",1345,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,2,1,2,0,
"n - 'Long64_t' 0 - - i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoFill",570,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"n - 'Long64_t' 0 - entry d - 'Double_t' 0 - w "
"D - 'Double_t' 10 - v",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Version",742,G__G__Proof_314_7_0,105,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Init",404,G__G__Proof_314_8_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Begin",485,G__G__Proof_314_9_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveBegin",992,G__G__Proof_314_0_1,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Notify",633,G__G__Proof_314_1_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Process",735,G__G__Proof_314_2_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"n - 'Long64_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveTerminate",1444,G__G__Proof_314_3_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Terminate",937,G__G__Proof_314_4_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_314_5_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofDraw::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_314_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDraw::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_314_7_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofDraw::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_314_8_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofDraw::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_314_9_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_314_0_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_314_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_314_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_314_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDraw::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_314_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDraw::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_314_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDraw::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_314_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDraw::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TProofDraw",1126,G__G__Proof_314_7_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_314_8_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),-1,1,1,1,1,0,"u 'TProofDraw' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDrawHist(void) {
   /* TProofDrawHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist));
   G__memfunc_setup("Begin1D",602,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TTree' - 0 - t",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Begin2D",603,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TTree' - 0 - t",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Begin3D",604,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TTree' - 0 - t",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoFill",570,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"n - 'Long64_t' 0 - entry d - 'Double_t' 0 - w "
"D - 'Double_t' 10 - v",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TProofDrawHist",1408,G__G__Proof_316_5_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Begin",485,G__G__Proof_316_6_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - t",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Init",404,G__G__Proof_316_7_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveBegin",992,G__G__Proof_316_8_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Terminate",937,G__G__Proof_316_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_316_0_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofDrawHist::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_316_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawHist::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_316_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofDrawHist::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_316_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofDrawHist::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_316_4_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_316_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_316_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_316_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_316_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawHist::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_316_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawHist::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_316_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawHist::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_316_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawHist::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofDrawHist",1408,G__G__Proof_316_2_2,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist),-1,0,1,1,1,0,"u 'TProofDrawHist' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofDrawHist",1534,G__G__Proof_316_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_316_4_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist),-1,1,1,1,1,0,"u 'TProofDrawHist' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDrawEventList(void) {
   /* TProofDrawEventList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList));
   G__memfunc_setup("DoFill",570,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"n - 'Long64_t' 0 - entry d - 'Double_t' 0 - w "
"D - 'Double_t' 10 - v",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TProofDrawEventList",1926,G__G__Proof_317_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Init",404,G__G__Proof_317_3_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveBegin",992,G__G__Proof_317_4_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveTerminate",1444,G__G__Proof_317_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Terminate",937,G__G__Proof_317_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_317_7_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofDrawEventList::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_317_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawEventList::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_317_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofDrawEventList::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_317_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofDrawEventList::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_317_1_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_317_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_317_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_317_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_317_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawEventList::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_317_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawEventList::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_317_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawEventList::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_317_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawEventList::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofDrawEventList",1926,G__G__Proof_317_9_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList),-1,0,1,1,1,0,"u 'TProofDrawEventList' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofDrawEventList",2052,G__G__Proof_317_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_317_1_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList),-1,1,1,1,1,0,"u 'TProofDrawEventList' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDrawProfile(void) {
   /* TProofDrawProfile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile));
   G__memfunc_setup("DoFill",570,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"n - 'Long64_t' 0 - entry d - 'Double_t' 0 - w "
"D - 'Double_t' 10 - v",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TProofDrawProfile",1721,G__G__Proof_318_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Init",404,G__G__Proof_318_3_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Begin",485,G__G__Proof_318_4_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - t",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveBegin",992,G__G__Proof_318_5_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Terminate",937,G__G__Proof_318_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_318_7_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofDrawProfile::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_318_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawProfile::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_318_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofDrawProfile::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_318_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofDrawProfile::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_318_1_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_318_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_318_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_318_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_318_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawProfile::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_318_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawProfile::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_318_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawProfile::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_318_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawProfile::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofDrawProfile",1721,G__G__Proof_318_9_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile),-1,0,1,1,1,0,"u 'TProofDrawProfile' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofDrawProfile",1847,G__G__Proof_318_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_318_1_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile),-1,1,1,1,1,0,"u 'TProofDrawProfile' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDrawProfile2D(void) {
   /* TProofDrawProfile2D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D));
   G__memfunc_setup("DoFill",570,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"n - 'Long64_t' 0 - entry d - 'Double_t' 0 - w "
"D - 'Double_t' 10 - v",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TProofDrawProfile2D",1839,G__G__Proof_319_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Init",404,G__G__Proof_319_3_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Begin",485,G__G__Proof_319_4_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - t",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveBegin",992,G__G__Proof_319_5_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Terminate",937,G__G__Proof_319_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_319_7_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofDrawProfile2D::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_319_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawProfile2D::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_319_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofDrawProfile2D::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_319_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofDrawProfile2D::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_319_1_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_319_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_319_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_319_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_319_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawProfile2D::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_319_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawProfile2D::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_319_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawProfile2D::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_319_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawProfile2D::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofDrawProfile2D",1839,G__G__Proof_319_9_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D),-1,0,1,1,1,0,"u 'TProofDrawProfile2D' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofDrawProfile2D",1965,G__G__Proof_319_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_319_1_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D),-1,1,1,1,1,0,"u 'TProofDrawProfile2D' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDrawGraph(void) {
   /* TProofDrawGraph */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph));
   G__memfunc_setup("DoFill",570,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"n - 'Long64_t' 0 - entry d - 'Double_t' 0 - w "
"D - 'Double_t' 10 - v",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TProofDrawGraph",1498,G__G__Proof_320_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Init",404,G__G__Proof_320_3_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - tree",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveBegin",992,G__G__Proof_320_4_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Terminate",937,G__G__Proof_320_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_320_6_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofDrawGraph::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_320_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawGraph::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_320_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofDrawGraph::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_320_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofDrawGraph::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_320_0_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_320_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_320_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_320_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_320_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawGraph::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_320_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawGraph::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_320_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawGraph::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_320_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawGraph::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofDrawGraph",1498,G__G__Proof_320_8_1,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph),-1,0,1,1,1,0,"u 'TProofDrawGraph' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofDrawGraph",1624,G__G__Proof_320_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_320_0_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph),-1,1,1,1,1,0,"u 'TProofDrawGraph' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDrawPolyMarker3D(void) {
   /* TProofDrawPolyMarker3D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D));
   G__memfunc_setup("DoFill",570,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"n - 'Long64_t' 0 - entry d - 'Double_t' 0 - w "
"D - 'Double_t' 10 - v",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TProofDrawPolyMarker3D",2149,G__G__Proof_321_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Init",404,G__G__Proof_321_3_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - tree",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveBegin",992,G__G__Proof_321_4_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Terminate",937,G__G__Proof_321_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_321_6_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofDrawPolyMarker3D::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_321_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawPolyMarker3D::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_321_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofDrawPolyMarker3D::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_321_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofDrawPolyMarker3D::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_321_0_1,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_321_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_321_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_321_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_321_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawPolyMarker3D::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_321_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawPolyMarker3D::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_321_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawPolyMarker3D::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_321_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawPolyMarker3D::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofDrawPolyMarker3D",2149,G__G__Proof_321_8_1,(int)('i'),
G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D),-1,0,1,1,1,0,"u 'TProofDrawPolyMarker3D' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofDrawPolyMarker3D",2275,G__G__Proof_321_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_321_0_2,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D),-1,1,1,1,1,0,"u 'TProofDrawPolyMarker3D' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDrawListOfGraphs(void) {
   /* TProofDrawListOfGraphs */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs));
   G__memfunc_setup("DoFill",570,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"n - 'Long64_t' 0 - entry d - 'Double_t' 0 - w "
"D - 'Double_t' 10 - v",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TProofDrawListOfGraphs",2206,G__G__Proof_322_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SlaveBegin",992,G__G__Proof_322_3_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Terminate",937,G__G__Proof_322_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_322_5_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofDrawListOfGraphs::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_322_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawListOfGraphs::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_322_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofDrawListOfGraphs::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_322_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofDrawListOfGraphs::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_322_9_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_322_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_322_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_322_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_322_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawListOfGraphs::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_322_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawListOfGraphs::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_322_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawListOfGraphs::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_322_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawListOfGraphs::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofDrawListOfGraphs",2206,G__G__Proof_322_7_1,(int)('i'),
G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs),-1,0,1,1,1,0,"u 'TProofDrawListOfGraphs' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofDrawListOfGraphs",2332,G__G__Proof_322_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_322_9_1,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs),-1,1,1,1,1,0,"u 'TProofDrawListOfGraphs' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDrawListOfGraphscLcLPoint3D_t(void) {
   /* TProofDrawListOfGraphs::Point3D_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t));
   G__memfunc_setup("Point3D_t",852,G__G__Proof_323_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),-1,0,3,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Point3D_t",852,G__G__Proof_323_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("Point3D_t",852,G__G__Proof_323_3_0,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),-1,0,1,1,1,0,"u 'TProofDrawListOfGraphs::Point3D_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Point3D_t",978,G__G__Proof_323_4_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_323_5_0,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),-1,1,1,1,1,0,"u 'TProofDrawListOfGraphs::Point3D_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR(void) {
   /* TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR));
   G__memfunc_setup("TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>",5456,G__G__Proof_324_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR),-1,0,1,1,1,0,"U 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >' 'vector<TProofDrawListOfGraphs::Point3D_t>' 0 - anVector",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>",5456,G__G__Proof_324_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVector",915,G__G__Proof_324_3_0,85,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR),G__defined_typename("vector<TProofDrawListOfGraphs::Point3D_t>"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Merge",496,G__G__Proof_324_4_0,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"U 'TCollection' - 0 - list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Proof_324_5_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_324_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_324_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_324_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_324_9_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_324_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_324_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_324_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_324_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_324_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_324_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_324_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>",5456,G__G__Proof_324_7_1,(int)('i'),
G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR),-1,0,1,1,1,0,"u 'TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>",5582,G__G__Proof_324_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_324_9_1,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR),-1,1,1,1,1,0,"u 'TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR(void) {
   /* vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR));
   G__memfunc_setup("begin",517,G__G__Proof_326_1_0,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiterator),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("end",311,G__G__Proof_326_2_0,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiterator),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("rbegin",631,G__G__Proof_326_3_0,117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiteratorgR),G__defined_typename("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::reverse_iterator"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("rend",425,G__G__Proof_326_4_0,117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiteratorgR),G__defined_typename("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::reverse_iterator"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("begin",517,G__G__Proof_326_5_0,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiterator),G__defined_typename("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("end",311,G__G__Proof_326_6_0,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiterator),G__defined_typename("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("rbegin",631,G__G__Proof_326_7_0,117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiteratorgR),G__defined_typename("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_reverse_iterator"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("rend",425,G__G__Proof_326_8_0,117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiteratorgR),G__defined_typename("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_reverse_iterator"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("size",443,G__G__Proof_326_9_0,104,-1,G__defined_typename("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("max_size",864,G__G__Proof_326_0_1,104,-1,G__defined_typename("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("capacity",846,G__G__Proof_326_1_1,104,-1,G__defined_typename("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("empty",559,G__G__Proof_326_2_1,103,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Proof_326_3_1,117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),-1,1,1,1,1,0,"h - 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >",8288,G__G__Proof_326_4_1,105,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >",8288,G__G__Proof_326_5_1,105,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR),-1,0,2,1,1,0,
"h - 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type' 0 - n u 'TProofDrawListOfGraphs::Point3D_t' - 11 TProofDrawListOfGraphs::Point3D_t() value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >",8288,G__G__Proof_326_6_1,105,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR),-1,0,1,1,1,0,"u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >' - 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >",8288,G__G__Proof_326_7_1,105,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR),-1,0,2,1,1,0,
"u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator' 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator' 10 - first u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator' 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator' 10 - last",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Proof_326_8_1,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR),-1,1,1,1,1,0,"u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >' - 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("reserve",764,G__G__Proof_326_9_1,121,-1,-1,0,1,1,1,0,"h - 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("front",553,G__G__Proof_326_0_2,117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("back",401,G__G__Proof_326_1_2,117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("push_back",944,G__G__Proof_326_2_2,121,-1,-1,0,1,1,1,0,"u 'TProofDrawListOfGraphs::Point3D_t' - 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("swap",443,G__G__Proof_326_3_2,121,-1,-1,0,1,1,1,0,"u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >' - 1 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("insert",661,G__G__Proof_326_4_2,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiterator),-1,0,2,1,1,0,
"u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator' - 0 - position u 'TProofDrawListOfGraphs::Point3D_t' - 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("insert",661,G__G__Proof_326_5_2,121,-1,-1,0,3,1,1,0,
"u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator' - 0 - position u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator' 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator' 10 - first "
"u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator' 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::const_iterator' 10 - last",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("insert",661,G__G__Proof_326_6_2,121,-1,-1,0,3,1,1,0,
"u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator' - 0 - position h - 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::size_type' 0 - n "
"u 'TProofDrawListOfGraphs::Point3D_t' - 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pop_back",831,G__G__Proof_326_7_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("erase",528,G__G__Proof_326_8_2,121,-1,-1,0,1,1,1,0,"u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator' - 0 - position",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("erase",528,G__G__Proof_326_9_2,121,-1,-1,0,2,1,1,0,
"u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator' - 0 - first u 'vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator' - 0 - last",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("clear",519,G__G__Proof_326_0_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >",8414,G__G__Proof_326_1_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDrawListOfPolyMarkers3D(void) {
   /* TProofDrawListOfPolyMarkers3D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D));
   G__memfunc_setup("DoFill",570,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"n - 'Long64_t' 0 - entry d - 'Double_t' 0 - w "
"D - 'Double_t' 10 - v",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TProofDrawListOfPolyMarkers3D",2857,G__G__Proof_329_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SlaveBegin",992,G__G__Proof_329_3_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Terminate",937,G__G__Proof_329_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Proof_329_5_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofDrawListOfPolyMarkers3D::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_329_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawListOfPolyMarkers3D::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_329_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofDrawListOfPolyMarkers3D::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_329_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofDrawListOfPolyMarkers3D::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_329_9_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_329_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_329_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_329_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_329_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawListOfPolyMarkers3D::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_329_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawListOfPolyMarkers3D::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_329_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofDrawListOfPolyMarkers3D::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_329_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofDrawListOfPolyMarkers3D::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofDrawListOfPolyMarkers3D",2857,G__G__Proof_329_7_1,(int)('i'),
G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D),-1,0,1,1,1,0,"u 'TProofDrawListOfPolyMarkers3D' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofDrawListOfPolyMarkers3D",2983,G__G__Proof_329_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_329_9_1,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D),-1,1,1,1,1,0,"u 'TProofDrawListOfPolyMarkers3D' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofDrawListOfPolyMarkers3DcLcLPoint4D_t(void) {
   /* TProofDrawListOfPolyMarkers3D::Point4D_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t));
   G__memfunc_setup("Point4D_t",853,G__G__Proof_330_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),-1,0,4,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Point4D_t",853,G__G__Proof_330_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("Point4D_t",853,G__G__Proof_330_3_0,(int)('i'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),-1,0,1,1,1,0,"u 'TProofDrawListOfPolyMarkers3D::Point4D_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Point4D_t",979,G__G__Proof_330_4_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_330_5_0,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),-1,1,1,1,1,0,"u 'TProofDrawListOfPolyMarkers3D::Point4D_t' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR(void) {
   /* TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR));
   G__memfunc_setup("TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>",6108,G__G__Proof_331_1_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR),-1,0,1,1,1,0,"U 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >' 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t>' 0 - anVector",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>",6108,G__G__Proof_331_2_0,105,G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVector",915,G__G__Proof_331_3_0,85,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR),G__defined_typename("vector<TProofDrawListOfPolyMarkers3D::Point4D_t>"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Merge",496,G__G__Proof_331_4_0,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"U 'TCollection' - 0 - list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Proof_331_5_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Proof_331_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Proof_331_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Proof_331_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Proof_331_9_0,85,G__get_linked_tagnum(&G__G__ProofLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Proof_331_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Proof_331_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Proof_331_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Proof_331_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Proof_331_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Proof_331_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Proof_331_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>",6108,G__G__Proof_331_7_1,(int)('i'),
G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR),-1,0,1,1,1,0,"u 'TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>",6234,G__G__Proof_331_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Proof_331_9_1,(int)('u'),G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR),-1,1,1,1,1,0,"u 'TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR(void) {
   /* vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR));
   G__memfunc_setup("begin",517,G__G__Proof_333_1_0,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiterator),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("end",311,G__G__Proof_333_2_0,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiterator),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("rbegin",631,G__G__Proof_333_3_0,117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiteratorgR),G__defined_typename("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::reverse_iterator"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("rend",425,G__G__Proof_333_4_0,117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiteratorgR),G__defined_typename("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::reverse_iterator"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("begin",517,G__G__Proof_333_5_0,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiterator),G__defined_typename("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("end",311,G__G__Proof_333_6_0,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiterator),G__defined_typename("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("rbegin",631,G__G__Proof_333_7_0,117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiteratorgR),G__defined_typename("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_reverse_iterator"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("rend",425,G__G__Proof_333_8_0,117,G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiteratorgR),G__defined_typename("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_reverse_iterator"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("size",443,G__G__Proof_333_9_0,104,-1,G__defined_typename("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("max_size",864,G__G__Proof_333_0_1,104,-1,G__defined_typename("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("capacity",846,G__G__Proof_333_1_1,104,-1,G__defined_typename("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("empty",559,G__G__Proof_333_2_1,103,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Proof_333_3_1,117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),-1,1,1,1,1,0,"h - 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >",9592,G__G__Proof_333_4_1,105,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >",9592,G__G__Proof_333_5_1,105,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR),-1,0,2,1,1,0,
"h - 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type' 0 - n u 'TProofDrawListOfPolyMarkers3D::Point4D_t' - 11 TProofDrawListOfPolyMarkers3D::Point4D_t() value",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >",9592,G__G__Proof_333_6_1,105,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR),-1,0,1,1,1,0,"u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >' - 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >",9592,G__G__Proof_333_7_1,105,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR),-1,0,2,1,1,0,
"u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator' 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator' 10 - first u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator' 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator' 10 - last",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Proof_333_8_1,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR),-1,1,1,1,1,0,"u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >' - 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("reserve",764,G__G__Proof_333_9_1,121,-1,-1,0,1,1,1,0,"h - 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("front",553,G__G__Proof_333_0_2,117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("back",401,G__G__Proof_333_1_2,117,G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("push_back",944,G__G__Proof_333_2_2,121,-1,-1,0,1,1,1,0,"u 'TProofDrawListOfPolyMarkers3D::Point4D_t' - 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("swap",443,G__G__Proof_333_3_2,121,-1,-1,0,1,1,1,0,"u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >' - 1 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("insert",661,G__G__Proof_333_4_2,117,G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiterator),-1,0,2,1,1,0,
"u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator' - 0 - position u 'TProofDrawListOfPolyMarkers3D::Point4D_t' - 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("insert",661,G__G__Proof_333_5_2,121,-1,-1,0,3,1,1,0,
"u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator' - 0 - position u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator' 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator' 10 - first "
"u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator' 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::const_iterator' 10 - last",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("insert",661,G__G__Proof_333_6_2,121,-1,-1,0,3,1,1,0,
"u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator' - 0 - position h - 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::size_type' 0 - n "
"u 'TProofDrawListOfPolyMarkers3D::Point4D_t' - 11 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("pop_back",831,G__G__Proof_333_7_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("erase",528,G__G__Proof_333_8_2,121,-1,-1,0,1,1,1,0,"u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator' - 0 - position",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("erase",528,G__G__Proof_333_9_2,121,-1,-1,0,2,1,1,0,
"u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator' - 0 - first u 'vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator' - 0 - last",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("clear",519,G__G__Proof_333_0_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >",9718,G__G__Proof_333_1_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Proof() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)(&gProofDebugMask),105,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask),-1,-1,1,"gProofDebugMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&gProofDebugLevel),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"gProofDebugLevel=",0,(char*)NULL);
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gProofServ),85,0,0,G__get_linked_tagnum(&G__G__ProofLN_TProofServ),-1,-1,1,"gProofServ=",0,(char*)NULL);
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Proof() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Proof() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__ProofLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TIter = { "TIter" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TVirtualProof = { "TVirtualProof" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TApplication = { "TApplication" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDebug = { "TProofDebug" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDebugcLcLEProofDebugMask = { "TProofDebug::EProofDebugMask" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TDSet = { "TDSet" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDSetElement = { "TDSetElement" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TEventList = { "TEventList" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TEventIter = { "TEventIter" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TEventIterObj = { "TEventIterObj" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TEventIterTree = { "TEventIterTree" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSlave = { "TSlave" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TMessage = { "TMessage" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TVirtualPacketizer = { "TVirtualPacketizer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_THashList = { "THashList" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProof = { "TProof" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDrawFeedback = { "TDrawFeedback" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSignalHandler = { "TSignalHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofPlayer = { "TProofPlayer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSocket = { "TSocket" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofServ = { "TProofServ" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSecContext = { "TSecContext" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TFileHandler = { "TFileHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSlavecLcLESlaveType = { "TSlave::ESlaveType" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TArrayL = { "TArrayL" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TStatus = { "TStatus" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofPlayercLcLEExitStatus = { "TProofPlayer::EExitStatus" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofPlayerLocal = { "TProofPlayerLocal" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofPlayerRemote = { "TProofPlayerRemote" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofPlayerSlave = { "TProofPlayerSlave" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofPlayerSuperMaster = { "TProofPlayerSuperMaster" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TTimeStamp = { "TTimeStamp" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TVirtualPerfStats = { "TVirtualPerfStats" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TVirtualPerfStatscLcLEEventType = { "TVirtualPerfStats::EEventType" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TPerfEvent = { "TPerfEvent" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TPerfStats = { "TPerfStats" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TMonitor = { "TMonitor" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TPluginHandler = { "TPluginHandler" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TPacketizer2 = { "TPacketizer2" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TCondor = { "TCondor" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSlaveInfo = { "TSlaveInfo" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TSlaveInfocLcLESlaveStatus = { "TSlaveInfo::ESlaveStatus" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TPacketizer = { "TPacketizer" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEUrgent = { "TProof::EUrgent" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLEProofCacheCommands = { "TProof::EProofCacheCommands" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR = { "map<TString,TProof::MD5Mod_t,less<TString>,allocator<pair<const TString,TProof::MD5Mod_t> > >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofcLcLESlaves = { "TProof::ESlaves" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofCondor = { "TProofCondor" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofSuperMaster = { "TProofSuperMaster" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TMap = { "TMap" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TPacketizer2cLcLTFileNode = { "TPacketizer2::TFileNode" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TPacketizer2cLcLTFileStat = { "TPacketizer2::TFileStat" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TDSetProxy = { "TDSetProxy" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TCondorSlave = { "TCondorSlave" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TCondorcLcLEState = { "TCondor::EState" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TPacketizercLcLTFileNode = { "TPacketizer::TFileNode" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TPacketizercLcLTFileStat = { "TPacketizer::TFileStat" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_THLimitsFinder = { "THLimitsFinder" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofLimitsFinder = { "TProofLimitsFinder" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgRcLcLiterator = { "set<string,less<string>,allocator<string> >::iterator" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TTreeDrawArgsParser = { "TTreeDrawArgsParser" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TTreeFormulaManager = { "TTreeFormulaManager" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TTreeFormula = { "TTreeFormula" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProfile2D = { "TProfile2D" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TPolyMarker3D = { "TPolyMarker3D" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDraw = { "TProofDraw" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDrawcLcLdA = { "TProofDraw::$" , 101 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDrawHist = { "TProofDrawHist" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDrawEventList = { "TProofDrawEventList" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDrawProfile = { "TProofDrawProfile" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDrawProfile2D = { "TProofDrawProfile2D" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDrawGraph = { "TProofDrawGraph" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDrawPolyMarker3D = { "TProofDrawPolyMarker3D" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDrawListOfGraphs = { "TProofDrawListOfGraphs" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t = { "TProofDrawListOfGraphs::Point3D_t" , 115 , -1 };
G__linked_taginfo G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR = { "TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR = { "vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiterator = { "vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDrawListOfPolyMarkers3D = { "TProofDrawListOfPolyMarkers3D" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t = { "TProofDrawListOfPolyMarkers3D::Point4D_t" , 115 , -1 };
G__linked_taginfo G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR = { "TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR = { "vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiterator = { "vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator" , 99 , -1 };
G__linked_taginfo G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Proof() {
  G__G__ProofLN_TClass.tagnum = -1 ;
  G__G__ProofLN_TBuffer.tagnum = -1 ;
  G__G__ProofLN_TMemberInspector.tagnum = -1 ;
  G__G__ProofLN_TObject.tagnum = -1 ;
  G__G__ProofLN_TNamed.tagnum = -1 ;
  G__G__ProofLN_TList.tagnum = -1 ;
  G__G__ProofLN_TBrowser.tagnum = -1 ;
  G__G__ProofLN_TTimer.tagnum = -1 ;
  G__G__ProofLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__ProofLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofLN_TCollection.tagnum = -1 ;
  G__G__ProofLN_TString.tagnum = -1 ;
  G__G__ProofLN_TIter.tagnum = -1 ;
  G__G__ProofLN_TSeqCollection.tagnum = -1 ;
  G__G__ProofLN_TFile.tagnum = -1 ;
  G__G__ProofLN_TDirectory.tagnum = -1 ;
  G__G__ProofLN_TVirtualProof.tagnum = -1 ;
  G__G__ProofLN_TApplication.tagnum = -1 ;
  G__G__ProofLN_TProofDebug.tagnum = -1 ;
  G__G__ProofLN_TProofDebugcLcLEProofDebugMask.tagnum = -1 ;
  G__G__ProofLN_TDSet.tagnum = -1 ;
  G__G__ProofLN_TDSetElement.tagnum = -1 ;
  G__G__ProofLN_TSelector.tagnum = -1 ;
  G__G__ProofLN_TTree.tagnum = -1 ;
  G__G__ProofLN_TEventList.tagnum = -1 ;
  G__G__ProofLN_TEventIter.tagnum = -1 ;
  G__G__ProofLN_TEventIterObj.tagnum = -1 ;
  G__G__ProofLN_TEventIterTree.tagnum = -1 ;
  G__G__ProofLN_TSlave.tagnum = -1 ;
  G__G__ProofLN_TMessage.tagnum = -1 ;
  G__G__ProofLN_TVirtualPacketizer.tagnum = -1 ;
  G__G__ProofLN_THashList.tagnum = -1 ;
  G__G__ProofLN_TQObject.tagnum = -1 ;
  G__G__ProofLN_TProof.tagnum = -1 ;
  G__G__ProofLN_TDrawFeedback.tagnum = -1 ;
  G__G__ProofLN_TSignalHandler.tagnum = -1 ;
  G__G__ProofLN_TStopwatch.tagnum = -1 ;
  G__G__ProofLN_TProofPlayer.tagnum = -1 ;
  G__G__ProofLN_TSocket.tagnum = -1 ;
  G__G__ProofLN_TProofServ.tagnum = -1 ;
  G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__ProofLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__ProofLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofLN_TSecContext.tagnum = -1 ;
  G__G__ProofLN_TFileHandler.tagnum = -1 ;
  G__G__ProofLN_TSlavecLcLESlaveType.tagnum = -1 ;
  G__G__ProofLN_TArrayL.tagnum = -1 ;
  G__G__ProofLN_TStatus.tagnum = -1 ;
  G__G__ProofLN_TProofPlayercLcLEExitStatus.tagnum = -1 ;
  G__G__ProofLN_TProofPlayerLocal.tagnum = -1 ;
  G__G__ProofLN_TProofPlayerRemote.tagnum = -1 ;
  G__G__ProofLN_TProofPlayerSlave.tagnum = -1 ;
  G__G__ProofLN_TProofPlayerSuperMaster.tagnum = -1 ;
  G__G__ProofLN_TTimeStamp.tagnum = -1 ;
  G__G__ProofLN_TVirtualPerfStats.tagnum = -1 ;
  G__G__ProofLN_TVirtualPerfStatscLcLEEventType.tagnum = -1 ;
  G__G__ProofLN_TH1D.tagnum = -1 ;
  G__G__ProofLN_TH2D.tagnum = -1 ;
  G__G__ProofLN_TPerfEvent.tagnum = -1 ;
  G__G__ProofLN_TPerfStats.tagnum = -1 ;
  G__G__ProofLN_TChain.tagnum = -1 ;
  G__G__ProofLN_TMonitor.tagnum = -1 ;
  G__G__ProofLN_TPluginHandler.tagnum = -1 ;
  G__G__ProofLN_TPacketizer2.tagnum = -1 ;
  G__G__ProofLN_TCondor.tagnum = -1 ;
  G__G__ProofLN_TSlaveInfo.tagnum = -1 ;
  G__G__ProofLN_TSlaveInfocLcLESlaveStatus.tagnum = -1 ;
  G__G__ProofLN_TPacketizer.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEUrgent.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLEProofCacheCommands.tagnum = -1 ;
  G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR.tagnum = -1 ;
  G__G__ProofLN_TProofcLcLESlaves.tagnum = -1 ;
  G__G__ProofLN_TProofCondor.tagnum = -1 ;
  G__G__ProofLN_TProofSuperMaster.tagnum = -1 ;
  G__G__ProofLN_TMap.tagnum = -1 ;
  G__G__ProofLN_TPacketizer2cLcLTFileNode.tagnum = -1 ;
  G__G__ProofLN_TPacketizer2cLcLTFileStat.tagnum = -1 ;
  G__G__ProofLN_TDSetProxy.tagnum = -1 ;
  G__G__ProofLN_TCondorSlave.tagnum = -1 ;
  G__G__ProofLN_TCondorcLcLEState.tagnum = -1 ;
  G__G__ProofLN_TPacketizercLcLTFileNode.tagnum = -1 ;
  G__G__ProofLN_TPacketizercLcLTFileStat.tagnum = -1 ;
  G__G__ProofLN_TH1.tagnum = -1 ;
  G__G__ProofLN_THLimitsFinder.tagnum = -1 ;
  G__G__ProofLN_TProofLimitsFinder.tagnum = -1 ;
  G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgRcLcLiterator.tagnum = -1 ;
  G__G__ProofLN_TTreeDrawArgsParser.tagnum = -1 ;
  G__G__ProofLN_TTreeFormulaManager.tagnum = -1 ;
  G__G__ProofLN_TTreeFormula.tagnum = -1 ;
  G__G__ProofLN_TProfile.tagnum = -1 ;
  G__G__ProofLN_TProfile2D.tagnum = -1 ;
  G__G__ProofLN_TGraph.tagnum = -1 ;
  G__G__ProofLN_TPolyMarker3D.tagnum = -1 ;
  G__G__ProofLN_TProofDraw.tagnum = -1 ;
  G__G__ProofLN_TProofDrawcLcLdA.tagnum = -1 ;
  G__G__ProofLN_TProofDrawHist.tagnum = -1 ;
  G__G__ProofLN_TProofDrawEventList.tagnum = -1 ;
  G__G__ProofLN_TProofDrawProfile.tagnum = -1 ;
  G__G__ProofLN_TProofDrawProfile2D.tagnum = -1 ;
  G__G__ProofLN_TProofDrawGraph.tagnum = -1 ;
  G__G__ProofLN_TProofDrawPolyMarker3D.tagnum = -1 ;
  G__G__ProofLN_TProofDrawListOfGraphs.tagnum = -1 ;
  G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t.tagnum = -1 ;
  G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR.tagnum = -1 ;
  G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR.tagnum = -1 ;
  G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiterator.tagnum = -1 ;
  G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ProofLN_TProofDrawListOfPolyMarkers3D.tagnum = -1 ;
  G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t.tagnum = -1 ;
  G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR.tagnum = -1 ;
  G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR.tagnum = -1 ;
  G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiterator.tagnum = -1 ;
  G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Proof() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__ProofLN_TClass);
   G__get_linked_tagnum(&G__G__ProofLN_TBuffer);
   G__get_linked_tagnum(&G__G__ProofLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__ProofLN_TObject);
   G__get_linked_tagnum(&G__G__ProofLN_TNamed);
   G__get_linked_tagnum(&G__G__ProofLN_TList);
   G__get_linked_tagnum(&G__G__ProofLN_TBrowser);
   G__get_linked_tagnum(&G__G__ProofLN_TTimer);
   G__get_linked_tagnum(&G__G__ProofLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__ProofLN_TCollection);
   G__get_linked_tagnum(&G__G__ProofLN_TString);
   G__get_linked_tagnum(&G__G__ProofLN_TIter);
   G__get_linked_tagnum(&G__G__ProofLN_TSeqCollection);
   G__get_linked_tagnum(&G__G__ProofLN_TFile);
   G__get_linked_tagnum(&G__G__ProofLN_TDirectory);
   G__get_linked_tagnum(&G__G__ProofLN_TVirtualProof);
   G__get_linked_tagnum(&G__G__ProofLN_TApplication);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDebug),sizeof(TProofDebug),-1,0,(char*)NULL,G__setup_memvarTProofDebug,G__setup_memfuncTProofDebug);
   G__get_linked_tagnum(&G__G__ProofLN_TProofDebugcLcLEProofDebugMask);
   G__get_linked_tagnum(&G__G__ProofLN_TDSet);
   G__get_linked_tagnum(&G__G__ProofLN_TDSetElement);
   G__get_linked_tagnum(&G__G__ProofLN_TSelector);
   G__get_linked_tagnum(&G__G__ProofLN_TTree);
   G__get_linked_tagnum(&G__G__ProofLN_TEventList);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIter),sizeof(TEventIter),-1,324865,"Event iterator used by TProofPlayer's",G__setup_memvarTEventIter,G__setup_memfuncTEventIter);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIterObj),sizeof(TEventIterObj),-1,324864,"Event iterator for objects",G__setup_memvarTEventIterObj,G__setup_memfuncTEventIterObj);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TEventIterTree),sizeof(TEventIterTree),-1,324864,"Event iterator for Trees",G__setup_memvarTEventIterTree,G__setup_memfuncTEventIterTree);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlave),sizeof(TSlave),-1,65280,"PROOF slave server",G__setup_memvarTSlave,G__setup_memfuncTSlave);
   G__get_linked_tagnum(&G__G__ProofLN_TMessage);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TVirtualPacketizer),sizeof(TVirtualPacketizer),-1,294656,"Generate work packets for parallel processing",G__setup_memvarTVirtualPacketizer,G__setup_memfuncTVirtualPacketizer);
   G__get_linked_tagnum(&G__G__ProofLN_THashList);
   G__get_linked_tagnum(&G__G__ProofLN_TQObject);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProof),sizeof(TProof),-1,65280,"PROOF control class",G__setup_memvarTProof,G__setup_memfuncTProof);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TDrawFeedback),sizeof(TDrawFeedback),-1,292096,"Present PROOF query feedback",G__setup_memvarTDrawFeedback,G__setup_memfuncTDrawFeedback);
   G__get_linked_tagnum(&G__G__ProofLN_TSignalHandler);
   G__get_linked_tagnum(&G__G__ProofLN_TStopwatch);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayer),sizeof(TProofPlayer),-1,292096,"Abstract PROOF player",G__setup_memvarTProofPlayer,G__setup_memfuncTProofPlayer);
   G__get_linked_tagnum(&G__G__ProofLN_TSocket);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofServ),sizeof(TProofServ),-1,62464,"PROOF Server Application Interface",G__setup_memvarTProofServ,G__setup_memfuncTProofServ);
   G__get_linked_tagnum(&G__G__ProofLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__ProofLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__ProofLN_TSecContext);
   G__get_linked_tagnum(&G__G__ProofLN_TFileHandler);
   G__get_linked_tagnum(&G__G__ProofLN_TSlavecLcLESlaveType);
   G__get_linked_tagnum(&G__G__ProofLN_TArrayL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TStatus),sizeof(TStatus),-1,324864,"Status class",G__setup_memvarTStatus,G__setup_memfuncTStatus);
   G__get_linked_tagnum(&G__G__ProofLN_TProofPlayercLcLEExitStatus);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerLocal),sizeof(TProofPlayerLocal),-1,291072,"PROOF player running on client",G__setup_memvarTProofPlayerLocal,G__setup_memfuncTProofPlayerLocal);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerRemote),sizeof(TProofPlayerRemote),-1,292096,"PROOF player running on master server",G__setup_memvarTProofPlayerRemote,G__setup_memfuncTProofPlayerRemote);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSlave),sizeof(TProofPlayerSlave),-1,323840,"PROOF player running on slave server",G__setup_memvarTProofPlayerSlave,G__setup_memfuncTProofPlayerSlave);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofPlayerSuperMaster),sizeof(TProofPlayerSuperMaster),-1,292096,"PROOF player running on super master",G__setup_memvarTProofPlayerSuperMaster,G__setup_memfuncTProofPlayerSuperMaster);
   G__get_linked_tagnum(&G__G__ProofLN_TTimeStamp);
   G__get_linked_tagnum(&G__G__ProofLN_TVirtualPerfStats);
   G__get_linked_tagnum(&G__G__ProofLN_TVirtualPerfStatscLcLEEventType);
   G__get_linked_tagnum(&G__G__ProofLN_TH1D);
   G__get_linked_tagnum(&G__G__ProofLN_TH2D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TPerfEvent),sizeof(TPerfEvent),-1,292096,"Class holding TProof Event Info",G__setup_memvarTPerfEvent,G__setup_memfuncTPerfEvent);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TPerfStats),sizeof(TPerfStats),-1,62464,"Class for collecting PROOF statistics",G__setup_memvarTPerfStats,G__setup_memfuncTPerfStats);
   G__get_linked_tagnum(&G__G__ProofLN_TChain);
   G__get_linked_tagnum(&G__G__ProofLN_TMonitor);
   G__get_linked_tagnum(&G__G__ProofLN_TPluginHandler);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2),sizeof(TPacketizer2),-1,327424,"Generate work packets for parallel processing",G__setup_memvarTPacketizer2,G__setup_memfuncTPacketizer2);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondor),sizeof(TCondor),-1,292096,"Interface to the Condor System",G__setup_memvarTCondor,G__setup_memfuncTCondor);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfo),sizeof(TSlaveInfo),-1,291072,"basic info on slave",G__setup_memvarTSlaveInfo,G__setup_memfuncTSlaveInfo);
   G__get_linked_tagnum(&G__G__ProofLN_TSlaveInfocLcLESlaveStatus);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TPacketizer),sizeof(TPacketizer),-1,327424,"Generate work packets for parallel processing",G__setup_memvarTPacketizer,G__setup_memfuncTPacketizer);
   G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEUrgent);
   G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLEProofCacheCommands);
   G__get_linked_tagnum(&G__G__ProofLN_maplETStringcOTProofcLcLMD5Mod_tcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTProofcLcLMD5Mod_tgRsPgRsPgR);
   G__get_linked_tagnum(&G__G__ProofLN_TProofcLcLESlaves);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofCondor),sizeof(TProofCondor),-1,62464,"PROOF control class for slaves allocated by condor",G__setup_memvarTProofCondor,G__setup_memfuncTProofCondor);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofSuperMaster),sizeof(TProofSuperMaster),-1,62464,"PROOF control class for making submasters",G__setup_memvarTProofSuperMaster,G__setup_memfuncTProofSuperMaster);
   G__get_linked_tagnum(&G__G__ProofLN_TMap);
   G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2cLcLTFileNode);
   G__get_linked_tagnum(&G__G__ProofLN_TPacketizer2cLcLTFileStat);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TDSetProxy),sizeof(TDSetProxy),-1,323840,"TDSet proxy for use on slaves",G__setup_memvarTDSetProxy,G__setup_memfuncTDSetProxy);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TCondorSlave),sizeof(TCondorSlave),-1,290816,"Describes a claimed slave",G__setup_memvarTCondorSlave,G__setup_memfuncTCondorSlave);
   G__get_linked_tagnum(&G__G__ProofLN_TCondorcLcLEState);
   G__get_linked_tagnum(&G__G__ProofLN_TPacketizercLcLTFileNode);
   G__get_linked_tagnum(&G__G__ProofLN_TPacketizercLcLTFileStat);
   G__get_linked_tagnum(&G__G__ProofLN_TH1);
   G__get_linked_tagnum(&G__G__ProofLN_THLimitsFinder);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofLimitsFinder),sizeof(TProofLimitsFinder),-1,29952,"Find and communicate best axis limits",G__setup_memvarTProofLimitsFinder,G__setup_memfuncTProofLimitsFinder);
   G__get_linked_tagnum(&G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum(&G__G__ProofLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgRcLcLiterator);
   G__get_linked_tagnum(&G__G__ProofLN_TTreeDrawArgsParser);
   G__get_linked_tagnum(&G__G__ProofLN_TTreeFormulaManager);
   G__get_linked_tagnum(&G__G__ProofLN_TTreeFormula);
   G__get_linked_tagnum(&G__G__ProofLN_TProfile);
   G__get_linked_tagnum(&G__G__ProofLN_TProfile2D);
   G__get_linked_tagnum(&G__G__ProofLN_TGraph);
   G__get_linked_tagnum(&G__G__ProofLN_TPolyMarker3D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDraw),sizeof(TProofDraw),-1,292097,"Tree drawing selector for PROOF",G__setup_memvarTProofDraw,G__setup_memfuncTProofDraw);
   G__get_linked_tagnum(&G__G__ProofLN_TProofDrawcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawHist),sizeof(TProofDrawHist),-1,291072,"Tree drawing selector for PROOF",G__setup_memvarTProofDrawHist,G__setup_memfuncTProofDrawHist);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawEventList),sizeof(TProofDrawEventList),-1,292096,"Tree drawing selector for PROOF",G__setup_memvarTProofDrawEventList,G__setup_memfuncTProofDrawEventList);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile),sizeof(TProofDrawProfile),-1,291072,"Tree drawing selector for PROOF",G__setup_memvarTProofDrawProfile,G__setup_memfuncTProofDrawProfile);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawProfile2D),sizeof(TProofDrawProfile2D),-1,291072,"Tree drawing selector for PROOF",G__setup_memvarTProofDrawProfile2D,G__setup_memfuncTProofDrawProfile2D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawGraph),sizeof(TProofDrawGraph),-1,291072,"Tree drawing selector for PROOF",G__setup_memvarTProofDrawGraph,G__setup_memfuncTProofDrawGraph);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawPolyMarker3D),sizeof(TProofDrawPolyMarker3D),-1,291072,"Tree drawing selector for PROOF",G__setup_memvarTProofDrawPolyMarker3D,G__setup_memfuncTProofDrawPolyMarker3D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphs),sizeof(TProofDrawListOfGraphs),-1,291072,"Tree drawing selector for PROOF",G__setup_memvarTProofDrawListOfGraphs,G__setup_memfuncTProofDrawListOfGraphs);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfGraphscLcLPoint3D_t),sizeof(TProofDrawListOfGraphs::Point3D_t),-1,295168,(char*)NULL,G__setup_memvarTProofDrawListOfGraphscLcLPoint3D_t,G__setup_memfuncTProofDrawListOfGraphscLcLPoint3D_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR),sizeof(TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>),-1,324864,(char*)NULL,G__setup_memvarTProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR,G__setup_memfuncTProofVectorContainerlETProofDrawListOfGraphscLcLPoint3D_tgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR),sizeof(vector<TProofDrawListOfGraphs::Point3D_t,allocator<TProofDrawListOfGraphs::Point3D_t> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR,G__setup_memfuncvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgR);
   G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiterator);
   G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfGraphscLcLPoint3D_tcOallocatorlETProofDrawListOfGraphscLcLPoint3D_tgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3D),sizeof(TProofDrawListOfPolyMarkers3D),-1,291072,"Tree drawing selector for PROOF",G__setup_memvarTProofDrawListOfPolyMarkers3D,G__setup_memfuncTProofDrawListOfPolyMarkers3D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofDrawListOfPolyMarkers3DcLcLPoint4D_t),sizeof(TProofDrawListOfPolyMarkers3D::Point4D_t),-1,295168,(char*)NULL,G__setup_memvarTProofDrawListOfPolyMarkers3DcLcLPoint4D_t,G__setup_memfuncTProofDrawListOfPolyMarkers3DcLcLPoint4D_t);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_TProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR),sizeof(TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>),-1,324864,(char*)NULL,G__setup_memvarTProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR,G__setup_memfuncTProofVectorContainerlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR),sizeof(vector<TProofDrawListOfPolyMarkers3D::Point4D_t,allocator<TProofDrawListOfPolyMarkers3D::Point4D_t> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR,G__setup_memfuncvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgR);
   G__get_linked_tagnum(&G__G__ProofLN_vectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiterator);
   G__get_linked_tagnum(&G__G__ProofLN_reverse_iteratorlEvectorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tcOallocatorlETProofDrawListOfPolyMarkers3DcLcLPoint4D_tgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupG__Proof(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Proof()");
  G__set_cpp_environmentG__Proof();
  G__cpp_setup_tagtableG__Proof();

  G__cpp_setup_inheritanceG__Proof();

  G__cpp_setup_typetableG__Proof();

  G__cpp_setup_memvarG__Proof();

  G__cpp_setup_memfuncG__Proof();
  G__cpp_setup_globalG__Proof();
  G__cpp_setup_funcG__Proof();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Proof();
  return;
}
class G__cpp_setup_initG__Proof {
  public:
    G__cpp_setup_initG__Proof() { G__add_setup_func("G__Proof",(G__incsetup)(&G__cpp_setupG__Proof)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Proof() { G__remove_setup_func("G__Proof"); }
};
G__cpp_setup_initG__Proof G__cpp_setup_initializerG__Proof;

