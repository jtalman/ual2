//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:24:32 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__Tree.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TTree_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TTree_IsA(const void*);
   static void *new_TTree(void *p = 0);
   static void *newArray_TTree(Long_t size);
   static void delete_TTree(void *p);
   static void deleteArray_TTree(void *p);
   static void destruct_TTree(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TTree*)
   {
      ::TTree *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TTree", ::TTree::Class_Version(), "tree/inc/TTree.h", 90,
                  typeid(::TTree), DefineBehavior(ptr, ptr),
                  &::TTree::Dictionary, &TTree_IsA, 1,
                  sizeof(::TTree) );
      instance.SetNew(&new_TTree);
      instance.SetNewArray(&newArray_TTree);
      instance.SetDelete(&delete_TTree);
      instance.SetDeleteArray(&deleteArray_TTree);
      instance.SetDestructor(&destruct_TTree);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSelector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSelector_IsA(const void*);
   static void *new_TSelector(void *p = 0);
   static void *newArray_TSelector(Long_t size);
   static void delete_TSelector(void *p);
   static void deleteArray_TSelector(void *p);
   static void destruct_TSelector(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSelector*)
   {
      ::TSelector *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSelector", ::TSelector::Class_Version(), "tree/inc/TSelector.h", 36,
                  typeid(::TSelector), DefineBehavior(ptr, ptr),
                  &::TSelector::Dictionary, &TSelector_IsA, 4,
                  sizeof(::TSelector) );
      instance.SetNew(&new_TSelector);
      instance.SetNewArray(&newArray_TSelector);
      instance.SetDelete(&delete_TSelector);
      instance.SetDeleteArray(&deleteArray_TSelector);
      instance.SetDestructor(&destruct_TSelector);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TEventList_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TEventList_IsA(const void*);
   static void *new_TEventList(void *p = 0);
   static void *newArray_TEventList(Long_t size);
   static void delete_TEventList(void *p);
   static void deleteArray_TEventList(void *p);
   static void destruct_TEventList(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TEventList*)
   {
      ::TEventList *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TEventList", ::TEventList::Class_Version(), "tree/inc/TEventList.h", 33,
                  typeid(::TEventList), DefineBehavior(ptr, ptr),
                  &::TEventList::Dictionary, &TEventList_IsA, 1,
                  sizeof(::TEventList) );
      instance.SetNew(&new_TEventList);
      instance.SetNewArray(&newArray_TEventList);
      instance.SetDelete(&delete_TEventList);
      instance.SetDeleteArray(&deleteArray_TEventList);
      instance.SetDestructor(&destruct_TEventList);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TEventList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSet_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSet_IsA(const void*);
   static void *new_TDSet(void *p = 0);
   static void *newArray_TDSet(Long_t size);
   static void delete_TDSet(void *p);
   static void deleteArray_TDSet(void *p);
   static void destruct_TDSet(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDSet*)
   {
      ::TDSet *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDSet", ::TDSet::Class_Version(), "tree/inc/TDSet.h", 181,
                  typeid(::TDSet), DefineBehavior(ptr, ptr),
                  &::TDSet::Dictionary, &TDSet_IsA, 4,
                  sizeof(::TDSet) );
      instance.SetNew(&new_TDSet);
      instance.SetNewArray(&newArray_TDSet);
      instance.SetDelete(&delete_TDSet);
      instance.SetDeleteArray(&deleteArray_TDSet);
      instance.SetDestructor(&destruct_TDSet);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TCut_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCut_IsA(const void*);
   static void *new_TCut(void *p = 0);
   static void *newArray_TCut(Long_t size);
   static void delete_TCut(void *p);
   static void deleteArray_TCut(void *p);
   static void destruct_TCut(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCut*)
   {
      ::TCut *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCut", ::TCut::Class_Version(), "tree/inc/TCut.h", 27,
                  typeid(::TCut), DefineBehavior(ptr, ptr),
                  &::TCut::Dictionary, &TCut_IsA, 4,
                  sizeof(::TCut) );
      instance.SetNew(&new_TCut);
      instance.SetNewArray(&newArray_TCut);
      instance.SetDelete(&delete_TCut);
      instance.SetDeleteArray(&deleteArray_TCut);
      instance.SetDestructor(&destruct_TCut);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TChain_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TChain_IsA(const void*);
   static void *new_TChain(void *p = 0);
   static void *newArray_TChain(Long_t size);
   static void delete_TChain(void *p);
   static void deleteArray_TChain(void *p);
   static void destruct_TChain(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TChain*)
   {
      ::TChain *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TChain", ::TChain::Class_Version(), "tree/inc/TChain.h", 37,
                  typeid(::TChain), DefineBehavior(ptr, ptr),
                  &::TChain::Dictionary, &TChain_IsA, 1,
                  sizeof(::TChain) );
      instance.SetNew(&new_TChain);
      instance.SetNewArray(&newArray_TChain);
      instance.SetDelete(&delete_TChain);
      instance.SetDeleteArray(&deleteArray_TChain);
      instance.SetDestructor(&destruct_TChain);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TChain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSetElementPfn_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSetElementPfn_IsA(const void*);
   static void *new_TDSetElementPfn(void *p = 0);
   static void *newArray_TDSetElementPfn(Long_t size);
   static void delete_TDSetElementPfn(void *p);
   static void deleteArray_TDSetElementPfn(void *p);
   static void destruct_TDSetElementPfn(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDSetElementPfn*)
   {
      ::TDSetElementPfn *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDSetElementPfn", ::TDSetElementPfn::Class_Version(), "tree/inc/TDSet.h", 63,
                  typeid(::TDSetElementPfn), DefineBehavior(ptr, ptr),
                  &::TDSetElementPfn::Dictionary, &TDSetElementPfn_IsA, 4,
                  sizeof(::TDSetElementPfn) );
      instance.SetNew(&new_TDSetElementPfn);
      instance.SetNewArray(&newArray_TDSetElementPfn);
      instance.SetDelete(&delete_TDSetElementPfn);
      instance.SetDeleteArray(&deleteArray_TDSetElementPfn);
      instance.SetDestructor(&destruct_TDSetElementPfn);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDSetElementPfn*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSetElementMsn_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSetElementMsn_IsA(const void*);
   static void *new_TDSetElementMsn(void *p = 0);
   static void *newArray_TDSetElementMsn(Long_t size);
   static void delete_TDSetElementMsn(void *p);
   static void deleteArray_TDSetElementMsn(void *p);
   static void destruct_TDSetElementMsn(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDSetElementMsn*)
   {
      ::TDSetElementMsn *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDSetElementMsn", ::TDSetElementMsn::Class_Version(), "tree/inc/TDSet.h", 91,
                  typeid(::TDSetElementMsn), DefineBehavior(ptr, ptr),
                  &::TDSetElementMsn::Dictionary, &TDSetElementMsn_IsA, 4,
                  sizeof(::TDSetElementMsn) );
      instance.SetNew(&new_TDSetElementMsn);
      instance.SetNewArray(&newArray_TDSetElementMsn);
      instance.SetDelete(&delete_TDSetElementMsn);
      instance.SetDeleteArray(&deleteArray_TDSetElementMsn);
      instance.SetDestructor(&destruct_TDSetElementMsn);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDSetElementMsn*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDSetElement_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDSetElement_IsA(const void*);
   static void *new_TDSetElement(void *p = 0);
   static void *newArray_TDSetElement(Long_t size);
   static void delete_TDSetElement(void *p);
   static void deleteArray_TDSetElement(void *p);
   static void destruct_TDSetElement(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDSetElement*)
   {
      ::TDSetElement *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDSetElement", ::TDSetElement::Class_Version(), "tree/inc/TDSet.h", 126,
                  typeid(::TDSetElement), DefineBehavior(ptr, ptr),
                  &::TDSetElement::Dictionary, &TDSetElement_IsA, 4,
                  sizeof(::TDSetElement) );
      instance.SetNew(&new_TDSetElement);
      instance.SetNewArray(&newArray_TDSetElement);
      instance.SetDelete(&delete_TDSetElement);
      instance.SetDeleteArray(&deleteArray_TDSetElement);
      instance.SetDestructor(&destruct_TDSetElement);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDSetElement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TVirtualIndex_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TVirtualIndex_IsA(const void*);
   static void delete_TVirtualIndex(void *p);
   static void deleteArray_TVirtualIndex(void *p);
   static void destruct_TVirtualIndex(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TVirtualIndex*)
   {
      ::TVirtualIndex *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TVirtualIndex", ::TVirtualIndex::Class_Version(), "tree/inc/TVirtualIndex.h", 31,
                  typeid(::TVirtualIndex), DefineBehavior(ptr, ptr),
                  &::TVirtualIndex::Dictionary, &TVirtualIndex_IsA, 4,
                  sizeof(::TVirtualIndex) );
      instance.SetDelete(&delete_TVirtualIndex);
      instance.SetDeleteArray(&deleteArray_TVirtualIndex);
      instance.SetDestructor(&destruct_TVirtualIndex);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TVirtualIndex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TVirtualTreePlayer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TVirtualTreePlayer_IsA(const void*);
   static void delete_TVirtualTreePlayer(void *p);
   static void deleteArray_TVirtualTreePlayer(void *p);
   static void destruct_TVirtualTreePlayer(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TVirtualTreePlayer*)
   {
      ::TVirtualTreePlayer *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TVirtualTreePlayer", ::TVirtualTreePlayer::Class_Version(), "tree/inc/TVirtualTreePlayer.h", 36,
                  typeid(::TVirtualTreePlayer), DefineBehavior(ptr, ptr),
                  &::TVirtualTreePlayer::Dictionary, &TVirtualTreePlayer_IsA, 0,
                  sizeof(::TVirtualTreePlayer) );
      instance.SetDelete(&delete_TVirtualTreePlayer);
      instance.SetDeleteArray(&deleteArray_TVirtualTreePlayer);
      instance.SetDestructor(&destruct_TVirtualTreePlayer);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TVirtualTreePlayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TBranch_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TBranch_IsA(const void*);
   static void *new_TBranch(void *p = 0);
   static void *newArray_TBranch(Long_t size);
   static void delete_TBranch(void *p);
   static void deleteArray_TBranch(void *p);
   static void destruct_TBranch(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TBranch*)
   {
      ::TBranch *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TBranch", ::TBranch::Class_Version(), "tree/inc/TBranch.h", 59,
                  typeid(::TBranch), DefineBehavior(ptr, ptr),
                  &::TBranch::Dictionary, &TBranch_IsA, 1,
                  sizeof(::TBranch) );
      instance.SetNew(&new_TBranch);
      instance.SetNewArray(&newArray_TBranch);
      instance.SetDelete(&delete_TBranch);
      instance.SetDeleteArray(&deleteArray_TBranch);
      instance.SetDestructor(&destruct_TBranch);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TBranch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TBasket_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TBasket_IsA(const void*);
   static void *new_TBasket(void *p = 0);
   static void *newArray_TBasket(Long_t size);
   static void delete_TBasket(void *p);
   static void deleteArray_TBasket(void *p);
   static void destruct_TBasket(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TBasket*)
   {
      ::TBasket *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TBasket", ::TBasket::Class_Version(), "tree/inc/TBasket.h", 38,
                  typeid(::TBasket), DefineBehavior(ptr, ptr),
                  &::TBasket::Dictionary, &TBasket_IsA, 1,
                  sizeof(::TBasket) );
      instance.SetNew(&new_TBasket);
      instance.SetNewArray(&newArray_TBasket);
      instance.SetDelete(&delete_TBasket);
      instance.SetDeleteArray(&deleteArray_TBasket);
      instance.SetDestructor(&destruct_TBasket);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TBasket*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLeaf_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLeaf_IsA(const void*);
   static void *new_TLeaf(void *p = 0);
   static void *newArray_TLeaf(Long_t size);
   static void delete_TLeaf(void *p);
   static void deleteArray_TLeaf(void *p);
   static void destruct_TLeaf(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLeaf*)
   {
      ::TLeaf *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLeaf", ::TLeaf::Class_Version(), "tree/inc/TLeaf.h", 37,
                  typeid(::TLeaf), DefineBehavior(ptr, ptr),
                  &::TLeaf::Dictionary, &TLeaf_IsA, 1,
                  sizeof(::TLeaf) );
      instance.SetNew(&new_TLeaf);
      instance.SetNewArray(&newArray_TLeaf);
      instance.SetDelete(&delete_TLeaf);
      instance.SetDeleteArray(&deleteArray_TLeaf);
      instance.SetDestructor(&destruct_TLeaf);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLeaf*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLeafS_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLeafS_IsA(const void*);
   static void *new_TLeafS(void *p = 0);
   static void *newArray_TLeafS(Long_t size);
   static void delete_TLeafS(void *p);
   static void deleteArray_TLeafS(void *p);
   static void destruct_TLeafS(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLeafS*)
   {
      ::TLeafS *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLeafS", ::TLeafS::Class_Version(), "tree/inc/TLeafS.h", 28,
                  typeid(::TLeafS), DefineBehavior(ptr, ptr),
                  &::TLeafS::Dictionary, &TLeafS_IsA, 4,
                  sizeof(::TLeafS) );
      instance.SetNew(&new_TLeafS);
      instance.SetNewArray(&newArray_TLeafS);
      instance.SetDelete(&delete_TLeafS);
      instance.SetDeleteArray(&deleteArray_TLeafS);
      instance.SetDestructor(&destruct_TLeafS);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLeafS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSelectorCint_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSelectorCint_IsA(const void*);
   static void *new_TSelectorCint(void *p = 0);
   static void *newArray_TSelectorCint(Long_t size);
   static void delete_TSelectorCint(void *p);
   static void deleteArray_TSelectorCint(void *p);
   static void destruct_TSelectorCint(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSelectorCint*)
   {
      ::TSelectorCint *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSelectorCint", ::TSelectorCint::Class_Version(), "tree/inc/TSelectorCint.h", 32,
                  typeid(::TSelectorCint), DefineBehavior(ptr, ptr),
                  &::TSelectorCint::Dictionary, &TSelectorCint_IsA, 4,
                  sizeof(::TSelectorCint) );
      instance.SetNew(&new_TSelectorCint);
      instance.SetNewArray(&newArray_TSelectorCint);
      instance.SetDelete(&delete_TSelectorCint);
      instance.SetDeleteArray(&deleteArray_TSelectorCint);
      instance.SetDestructor(&destruct_TSelectorCint);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSelectorCint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TBranchObject_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TBranchObject_IsA(const void*);
   static void *new_TBranchObject(void *p = 0);
   static void *newArray_TBranchObject(Long_t size);
   static void delete_TBranchObject(void *p);
   static void deleteArray_TBranchObject(void *p);
   static void destruct_TBranchObject(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TBranchObject*)
   {
      ::TBranchObject *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TBranchObject", ::TBranchObject::Class_Version(), "tree/inc/TBranchObject.h", 28,
                  typeid(::TBranchObject), DefineBehavior(ptr, ptr),
                  &::TBranchObject::Dictionary, &TBranchObject_IsA, 1,
                  sizeof(::TBranchObject) );
      instance.SetNew(&new_TBranchObject);
      instance.SetNewArray(&newArray_TBranchObject);
      instance.SetDelete(&delete_TBranchObject);
      instance.SetDeleteArray(&deleteArray_TBranchObject);
      instance.SetDestructor(&destruct_TBranchObject);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TBranchObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TTreeResult_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TTreeResult_IsA(const void*);
   static void *new_TTreeResult(void *p = 0);
   static void *newArray_TTreeResult(Long_t size);
   static void delete_TTreeResult(void *p);
   static void deleteArray_TTreeResult(void *p);
   static void destruct_TTreeResult(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TTreeResult*)
   {
      ::TTreeResult *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TTreeResult", ::TTreeResult::Class_Version(), "tree/inc/TTreeResult.h", 36,
                  typeid(::TTreeResult), DefineBehavior(ptr, ptr),
                  &::TTreeResult::Dictionary, &TTreeResult_IsA, 4,
                  sizeof(::TTreeResult) );
      instance.SetNew(&new_TTreeResult);
      instance.SetNewArray(&newArray_TTreeResult);
      instance.SetDelete(&delete_TTreeResult);
      instance.SetDeleteArray(&deleteArray_TTreeResult);
      instance.SetDestructor(&destruct_TTreeResult);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TTreeResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLeafI_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLeafI_IsA(const void*);
   static void *new_TLeafI(void *p = 0);
   static void *newArray_TLeafI(Long_t size);
   static void delete_TLeafI(void *p);
   static void deleteArray_TLeafI(void *p);
   static void destruct_TLeafI(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLeafI*)
   {
      ::TLeafI *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLeafI", ::TLeafI::Class_Version(), "tree/inc/TLeafI.h", 29,
                  typeid(::TLeafI), DefineBehavior(ptr, ptr),
                  &::TLeafI::Dictionary, &TLeafI_IsA, 4,
                  sizeof(::TLeafI) );
      instance.SetNew(&new_TLeafI);
      instance.SetNewArray(&newArray_TLeafI);
      instance.SetDelete(&delete_TLeafI);
      instance.SetDeleteArray(&deleteArray_TLeafI);
      instance.SetDestructor(&destruct_TLeafI);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLeafI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TBranchElement_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TBranchElement_IsA(const void*);
   static void *new_TBranchElement(void *p = 0);
   static void *newArray_TBranchElement(Long_t size);
   static void delete_TBranchElement(void *p);
   static void deleteArray_TBranchElement(void *p);
   static void destruct_TBranchElement(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TBranchElement*)
   {
      ::TBranchElement *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TBranchElement", ::TBranchElement::Class_Version(), "tree/inc/TBranchElement.h", 32,
                  typeid(::TBranchElement), DefineBehavior(ptr, ptr),
                  &::TBranchElement::Dictionary, &TBranchElement_IsA, 1,
                  sizeof(::TBranchElement) );
      instance.SetNew(&new_TBranchElement);
      instance.SetNewArray(&newArray_TBranchElement);
      instance.SetDelete(&delete_TBranchElement);
      instance.SetDeleteArray(&deleteArray_TBranchElement);
      instance.SetDestructor(&destruct_TBranchElement);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TBranchElement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TVirtualBranchBrowsable_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TVirtualBranchBrowsable_IsA(const void*);
   static void delete_TVirtualBranchBrowsable(void *p);
   static void deleteArray_TVirtualBranchBrowsable(void *p);
   static void destruct_TVirtualBranchBrowsable(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TVirtualBranchBrowsable*)
   {
      ::TVirtualBranchBrowsable *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TVirtualBranchBrowsable", ::TVirtualBranchBrowsable::Class_Version(), "tree/inc/TBranchBrowsable.h", 29,
                  typeid(::TVirtualBranchBrowsable), DefineBehavior(ptr, ptr),
                  &::TVirtualBranchBrowsable::Dictionary, &TVirtualBranchBrowsable_IsA, 4,
                  sizeof(::TVirtualBranchBrowsable) );
      instance.SetDelete(&delete_TVirtualBranchBrowsable);
      instance.SetDeleteArray(&deleteArray_TVirtualBranchBrowsable);
      instance.SetDestructor(&destruct_TVirtualBranchBrowsable);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TVirtualBranchBrowsable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMethodBrowsable_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMethodBrowsable_IsA(const void*);
   static void delete_TMethodBrowsable(void *p);
   static void deleteArray_TMethodBrowsable(void *p);
   static void destruct_TMethodBrowsable(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMethodBrowsable*)
   {
      ::TMethodBrowsable *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMethodBrowsable", ::TMethodBrowsable::Class_Version(), "tree/inc/TBranchBrowsable.h", 99,
                  typeid(::TMethodBrowsable), DefineBehavior(ptr, ptr),
                  &::TMethodBrowsable::Dictionary, &TMethodBrowsable_IsA, 4,
                  sizeof(::TMethodBrowsable) );
      instance.SetDelete(&delete_TMethodBrowsable);
      instance.SetDeleteArray(&deleteArray_TMethodBrowsable);
      instance.SetDestructor(&destruct_TMethodBrowsable);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMethodBrowsable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TNonSplitBrowsable_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TNonSplitBrowsable_IsA(const void*);
   static void delete_TNonSplitBrowsable(void *p);
   static void deleteArray_TNonSplitBrowsable(void *p);
   static void destruct_TNonSplitBrowsable(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TNonSplitBrowsable*)
   {
      ::TNonSplitBrowsable *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TNonSplitBrowsable", ::TNonSplitBrowsable::Class_Version(), "tree/inc/TBranchBrowsable.h", 124,
                  typeid(::TNonSplitBrowsable), DefineBehavior(ptr, ptr),
                  &::TNonSplitBrowsable::Dictionary, &TNonSplitBrowsable_IsA, 4,
                  sizeof(::TNonSplitBrowsable) );
      instance.SetDelete(&delete_TNonSplitBrowsable);
      instance.SetDeleteArray(&deleteArray_TNonSplitBrowsable);
      instance.SetDestructor(&destruct_TNonSplitBrowsable);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TNonSplitBrowsable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TCollectionPropertyBrowsable_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCollectionPropertyBrowsable_IsA(const void*);
   static void delete_TCollectionPropertyBrowsable(void *p);
   static void deleteArray_TCollectionPropertyBrowsable(void *p);
   static void destruct_TCollectionPropertyBrowsable(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCollectionPropertyBrowsable*)
   {
      ::TCollectionPropertyBrowsable *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCollectionPropertyBrowsable", ::TCollectionPropertyBrowsable::Class_Version(), "tree/inc/TBranchBrowsable.h", 142,
                  typeid(::TCollectionPropertyBrowsable), DefineBehavior(ptr, ptr),
                  &::TCollectionPropertyBrowsable::Dictionary, &TCollectionPropertyBrowsable_IsA, 4,
                  sizeof(::TCollectionPropertyBrowsable) );
      instance.SetDelete(&delete_TCollectionPropertyBrowsable);
      instance.SetDeleteArray(&deleteArray_TCollectionPropertyBrowsable);
      instance.SetDestructor(&destruct_TCollectionPropertyBrowsable);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCollectionPropertyBrowsable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TCollectionMethodBrowsable_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCollectionMethodBrowsable_IsA(const void*);
   static void delete_TCollectionMethodBrowsable(void *p);
   static void deleteArray_TCollectionMethodBrowsable(void *p);
   static void destruct_TCollectionMethodBrowsable(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCollectionMethodBrowsable*)
   {
      ::TCollectionMethodBrowsable *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCollectionMethodBrowsable", ::TCollectionMethodBrowsable::Class_Version(), "tree/inc/TBranchBrowsable.h", 169,
                  typeid(::TCollectionMethodBrowsable), DefineBehavior(ptr, ptr),
                  &::TCollectionMethodBrowsable::Dictionary, &TCollectionMethodBrowsable_IsA, 4,
                  sizeof(::TCollectionMethodBrowsable) );
      instance.SetDelete(&delete_TCollectionMethodBrowsable);
      instance.SetDeleteArray(&deleteArray_TCollectionMethodBrowsable);
      instance.SetDestructor(&destruct_TCollectionMethodBrowsable);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCollectionMethodBrowsable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLeafF_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLeafF_IsA(const void*);
   static void *new_TLeafF(void *p = 0);
   static void *newArray_TLeafF(Long_t size);
   static void delete_TLeafF(void *p);
   static void deleteArray_TLeafF(void *p);
   static void destruct_TLeafF(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLeafF*)
   {
      ::TLeafF *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLeafF", ::TLeafF::Class_Version(), "tree/inc/TLeafF.h", 28,
                  typeid(::TLeafF), DefineBehavior(ptr, ptr),
                  &::TLeafF::Dictionary, &TLeafF_IsA, 4,
                  sizeof(::TLeafF) );
      instance.SetNew(&new_TLeafF);
      instance.SetNewArray(&newArray_TLeafF);
      instance.SetDelete(&delete_TLeafF);
      instance.SetDeleteArray(&deleteArray_TLeafF);
      instance.SetDestructor(&destruct_TLeafF);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLeafF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLeafD_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLeafD_IsA(const void*);
   static void *new_TLeafD(void *p = 0);
   static void *newArray_TLeafD(Long_t size);
   static void delete_TLeafD(void *p);
   static void deleteArray_TLeafD(void *p);
   static void destruct_TLeafD(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLeafD*)
   {
      ::TLeafD *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLeafD", ::TLeafD::Class_Version(), "tree/inc/TLeafD.h", 28,
                  typeid(::TLeafD), DefineBehavior(ptr, ptr),
                  &::TLeafD::Dictionary, &TLeafD_IsA, 4,
                  sizeof(::TLeafD) );
      instance.SetNew(&new_TLeafD);
      instance.SetNewArray(&newArray_TLeafD);
      instance.SetDelete(&delete_TLeafD);
      instance.SetDeleteArray(&deleteArray_TLeafD);
      instance.SetDestructor(&destruct_TLeafD);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLeafD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TTreeRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TTreeRow_IsA(const void*);
   static void *new_TTreeRow(void *p = 0);
   static void *newArray_TTreeRow(Long_t size);
   static void delete_TTreeRow(void *p);
   static void deleteArray_TTreeRow(void *p);
   static void destruct_TTreeRow(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TTreeRow*)
   {
      ::TTreeRow *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TTreeRow", ::TTreeRow::Class_Version(), "tree/inc/TTreeRow.h", 31,
                  typeid(::TTreeRow), DefineBehavior(ptr, ptr),
                  &::TTreeRow::Dictionary, &TTreeRow_IsA, 1,
                  sizeof(::TTreeRow) );
      instance.SetNew(&new_TTreeRow);
      instance.SetNewArray(&newArray_TTreeRow);
      instance.SetDelete(&delete_TTreeRow);
      instance.SetDeleteArray(&deleteArray_TTreeRow);
      instance.SetDestructor(&destruct_TTreeRow);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TTreeRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TFriendElement_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TFriendElement_IsA(const void*);
   static void *new_TFriendElement(void *p = 0);
   static void *newArray_TFriendElement(Long_t size);
   static void delete_TFriendElement(void *p);
   static void deleteArray_TFriendElement(void *p);
   static void destruct_TFriendElement(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TFriendElement*)
   {
      ::TFriendElement *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TFriendElement", ::TFriendElement::Class_Version(), "tree/inc/TFriendElement.h", 35,
                  typeid(::TFriendElement), DefineBehavior(ptr, ptr),
                  &::TFriendElement::Dictionary, &TFriendElement_IsA, 4,
                  sizeof(::TFriendElement) );
      instance.SetNew(&new_TFriendElement);
      instance.SetNewArray(&newArray_TFriendElement);
      instance.SetDelete(&delete_TFriendElement);
      instance.SetDeleteArray(&deleteArray_TFriendElement);
      instance.SetDestructor(&destruct_TFriendElement);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TFriendElement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TBranchRef_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TBranchRef_IsA(const void*);
   static void *new_TBranchRef(void *p = 0);
   static void *newArray_TBranchRef(Long_t size);
   static void delete_TBranchRef(void *p);
   static void deleteArray_TBranchRef(void *p);
   static void destruct_TBranchRef(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TBranchRef*)
   {
      ::TBranchRef *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TBranchRef", ::TBranchRef::Class_Version(), "tree/inc/TBranchRef.h", 33,
                  typeid(::TBranchRef), DefineBehavior(ptr, ptr),
                  &::TBranchRef::Dictionary, &TBranchRef_IsA, 4,
                  sizeof(::TBranchRef) );
      instance.SetNew(&new_TBranchRef);
      instance.SetNewArray(&newArray_TBranchRef);
      instance.SetDelete(&delete_TBranchRef);
      instance.SetDeleteArray(&deleteArray_TBranchRef);
      instance.SetDestructor(&destruct_TBranchRef);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TBranchRef*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TTreeFriendLeafIter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TTreeFriendLeafIter_IsA(const void*);
   static void delete_TTreeFriendLeafIter(void *p);
   static void deleteArray_TTreeFriendLeafIter(void *p);
   static void destruct_TTreeFriendLeafIter(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TTreeFriendLeafIter*)
   {
      ::TTreeFriendLeafIter *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TTreeFriendLeafIter", ::TTreeFriendLeafIter::Class_Version(), "tree/inc/TTree.h", 372,
                  typeid(::TTreeFriendLeafIter), DefineBehavior(ptr, ptr),
                  &::TTreeFriendLeafIter::Dictionary, &TTreeFriendLeafIter_IsA, 0,
                  sizeof(::TTreeFriendLeafIter) );
      instance.SetDelete(&delete_TTreeFriendLeafIter);
      instance.SetDeleteArray(&deleteArray_TTreeFriendLeafIter);
      instance.SetDestructor(&destruct_TTreeFriendLeafIter);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TTreeFriendLeafIter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TChainProof_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TChainProof_IsA(const void*);
   static void delete_TChainProof(void *p);
   static void deleteArray_TChainProof(void *p);
   static void destruct_TChainProof(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TChainProof*)
   {
      ::TChainProof *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TChainProof", ::TChainProof::Class_Version(), "tree/inc/TChainProof.h", 34,
                  typeid(::TChainProof), DefineBehavior(ptr, ptr),
                  &::TChainProof::Dictionary, &TChainProof_IsA, 1,
                  sizeof(::TChainProof) );
      instance.SetDelete(&delete_TChainProof);
      instance.SetDeleteArray(&deleteArray_TChainProof);
      instance.SetDestructor(&destruct_TChainProof);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TChainProof*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TNtuple_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TNtuple_IsA(const void*);
   static void *new_TNtuple(void *p = 0);
   static void *newArray_TNtuple(Long_t size);
   static void delete_TNtuple(void *p);
   static void deleteArray_TNtuple(void *p);
   static void destruct_TNtuple(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TNtuple*)
   {
      ::TNtuple *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TNtuple", ::TNtuple::Class_Version(), "tree/inc/TNtuple.h", 30,
                  typeid(::TNtuple), DefineBehavior(ptr, ptr),
                  &::TNtuple::Dictionary, &TNtuple_IsA, 1,
                  sizeof(::TNtuple) );
      instance.SetNew(&new_TNtuple);
      instance.SetNewArray(&newArray_TNtuple);
      instance.SetDelete(&delete_TNtuple);
      instance.SetDeleteArray(&deleteArray_TNtuple);
      instance.SetDestructor(&destruct_TNtuple);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TNtuple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TBranchClones_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TBranchClones_IsA(const void*);
   static void *new_TBranchClones(void *p = 0);
   static void *newArray_TBranchClones(Long_t size);
   static void delete_TBranchClones(void *p);
   static void deleteArray_TBranchClones(void *p);
   static void destruct_TBranchClones(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TBranchClones*)
   {
      ::TBranchClones *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TBranchClones", ::TBranchClones::Class_Version(), "tree/inc/TBranchClones.h", 32,
                  typeid(::TBranchClones), DefineBehavior(ptr, ptr),
                  &::TBranchClones::Dictionary, &TBranchClones_IsA, 1,
                  sizeof(::TBranchClones) );
      instance.SetNew(&new_TBranchClones);
      instance.SetNewArray(&newArray_TBranchClones);
      instance.SetDelete(&delete_TBranchClones);
      instance.SetDeleteArray(&deleteArray_TBranchClones);
      instance.SetDestructor(&destruct_TBranchClones);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TBranchClones*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLeafL_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLeafL_IsA(const void*);
   static void *new_TLeafL(void *p = 0);
   static void *newArray_TLeafL(Long_t size);
   static void delete_TLeafL(void *p);
   static void deleteArray_TLeafL(void *p);
   static void destruct_TLeafL(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLeafL*)
   {
      ::TLeafL *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLeafL", ::TLeafL::Class_Version(), "tree/inc/TLeafL.h", 29,
                  typeid(::TLeafL), DefineBehavior(ptr, ptr),
                  &::TLeafL::Dictionary, &TLeafL_IsA, 4,
                  sizeof(::TLeafL) );
      instance.SetNew(&new_TLeafL);
      instance.SetNewArray(&newArray_TLeafL);
      instance.SetDelete(&delete_TLeafL);
      instance.SetDeleteArray(&deleteArray_TLeafL);
      instance.SetDestructor(&destruct_TLeafL);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLeafL*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLeafElement_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLeafElement_IsA(const void*);
   static void *new_TLeafElement(void *p = 0);
   static void *newArray_TLeafElement(Long_t size);
   static void delete_TLeafElement(void *p);
   static void deleteArray_TLeafElement(void *p);
   static void destruct_TLeafElement(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLeafElement*)
   {
      ::TLeafElement *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLeafElement", ::TLeafElement::Class_Version(), "tree/inc/TLeafElement.h", 34,
                  typeid(::TLeafElement), DefineBehavior(ptr, ptr),
                  &::TLeafElement::Dictionary, &TLeafElement_IsA, 4,
                  sizeof(::TLeafElement) );
      instance.SetNew(&new_TLeafElement);
      instance.SetNewArray(&newArray_TLeafElement);
      instance.SetDelete(&delete_TLeafElement);
      instance.SetDeleteArray(&deleteArray_TLeafElement);
      instance.SetDestructor(&destruct_TLeafElement);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLeafElement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLeafC_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLeafC_IsA(const void*);
   static void *new_TLeafC(void *p = 0);
   static void *newArray_TLeafC(Long_t size);
   static void delete_TLeafC(void *p);
   static void deleteArray_TLeafC(void *p);
   static void destruct_TLeafC(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLeafC*)
   {
      ::TLeafC *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLeafC", ::TLeafC::Class_Version(), "tree/inc/TLeafC.h", 28,
                  typeid(::TLeafC), DefineBehavior(ptr, ptr),
                  &::TLeafC::Dictionary, &TLeafC_IsA, 4,
                  sizeof(::TLeafC) );
      instance.SetNew(&new_TLeafC);
      instance.SetNewArray(&newArray_TLeafC);
      instance.SetDelete(&delete_TLeafC);
      instance.SetDeleteArray(&deleteArray_TLeafC);
      instance.SetDestructor(&destruct_TLeafC);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLeafC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSelectorScalar_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSelectorScalar_IsA(const void*);
   static void *new_TSelectorScalar(void *p = 0);
   static void *newArray_TSelectorScalar(Long_t size);
   static void delete_TSelectorScalar(void *p);
   static void deleteArray_TSelectorScalar(void *p);
   static void destruct_TSelectorScalar(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSelectorScalar*)
   {
      ::TSelectorScalar *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSelectorScalar", ::TSelectorScalar::Class_Version(), "tree/inc/TSelectorScalar.h", 40,
                  typeid(::TSelectorScalar), DefineBehavior(ptr, ptr),
                  &::TSelectorScalar::Dictionary, &TSelectorScalar_IsA, 4,
                  sizeof(::TSelectorScalar) );
      instance.SetNew(&new_TSelectorScalar);
      instance.SetNewArray(&newArray_TSelectorScalar);
      instance.SetDelete(&delete_TSelectorScalar);
      instance.SetDeleteArray(&deleteArray_TSelectorScalar);
      instance.SetDestructor(&destruct_TSelectorScalar);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSelectorScalar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TChainElement_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TChainElement_IsA(const void*);
   static void *new_TChainElement(void *p = 0);
   static void *newArray_TChainElement(Long_t size);
   static void delete_TChainElement(void *p);
   static void deleteArray_TChainElement(void *p);
   static void destruct_TChainElement(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TChainElement*)
   {
      ::TChainElement *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TChainElement", ::TChainElement::Class_Version(), "tree/inc/TChainElement.h", 28,
                  typeid(::TChainElement), DefineBehavior(ptr, ptr),
                  &::TChainElement::Dictionary, &TChainElement_IsA, 0,
                  sizeof(::TChainElement) );
      instance.SetNew(&new_TChainElement);
      instance.SetNewArray(&newArray_TChainElement);
      instance.SetDelete(&delete_TChainElement);
      instance.SetDeleteArray(&deleteArray_TChainElement);
      instance.SetDestructor(&destruct_TChainElement);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TChainElement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLeafO_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLeafO_IsA(const void*);
   static void *new_TLeafO(void *p = 0);
   static void *newArray_TLeafO(Long_t size);
   static void delete_TLeafO(void *p);
   static void deleteArray_TLeafO(void *p);
   static void destruct_TLeafO(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLeafO*)
   {
      ::TLeafO *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLeafO", ::TLeafO::Class_Version(), "tree/inc/TLeafO.h", 28,
                  typeid(::TLeafO), DefineBehavior(ptr, ptr),
                  &::TLeafO::Dictionary, &TLeafO_IsA, 4,
                  sizeof(::TLeafO) );
      instance.SetNew(&new_TLeafO);
      instance.SetNewArray(&newArray_TLeafO);
      instance.SetDelete(&delete_TLeafO);
      instance.SetDeleteArray(&deleteArray_TLeafO);
      instance.SetDestructor(&destruct_TLeafO);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLeafO*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TNtupleD_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TNtupleD_IsA(const void*);
   static void *new_TNtupleD(void *p = 0);
   static void *newArray_TNtupleD(Long_t size);
   static void delete_TNtupleD(void *p);
   static void deleteArray_TNtupleD(void *p);
   static void destruct_TNtupleD(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TNtupleD*)
   {
      ::TNtupleD *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TNtupleD", ::TNtupleD::Class_Version(), "tree/inc/TNtupleD.h", 30,
                  typeid(::TNtupleD), DefineBehavior(ptr, ptr),
                  &::TNtupleD::Dictionary, &TNtupleD_IsA, 1,
                  sizeof(::TNtupleD) );
      instance.SetNew(&new_TNtupleD);
      instance.SetNewArray(&newArray_TNtupleD);
      instance.SetDelete(&delete_TNtupleD);
      instance.SetDeleteArray(&deleteArray_TNtupleD);
      instance.SetDestructor(&destruct_TNtupleD);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TNtupleD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLeafB_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLeafB_IsA(const void*);
   static void *new_TLeafB(void *p = 0);
   static void *newArray_TLeafB(Long_t size);
   static void delete_TLeafB(void *p);
   static void deleteArray_TLeafB(void *p);
   static void destruct_TLeafB(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLeafB*)
   {
      ::TLeafB *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLeafB", ::TLeafB::Class_Version(), "tree/inc/TLeafB.h", 28,
                  typeid(::TLeafB), DefineBehavior(ptr, ptr),
                  &::TLeafB::Dictionary, &TLeafB_IsA, 4,
                  sizeof(::TLeafB) );
      instance.SetNew(&new_TLeafB);
      instance.SetNewArray(&newArray_TLeafB);
      instance.SetDelete(&delete_TLeafB);
      instance.SetDeleteArray(&deleteArray_TLeafB);
      instance.SetDestructor(&destruct_TLeafB);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLeafB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TLeafObject_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLeafObject_IsA(const void*);
   static void *new_TLeafObject(void *p = 0);
   static void *newArray_TLeafObject(Long_t size);
   static void delete_TLeafObject(void *p);
   static void deleteArray_TLeafObject(void *p);
   static void destruct_TLeafObject(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLeafObject*)
   {
      ::TLeafObject *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLeafObject", ::TLeafObject::Class_Version(), "tree/inc/TLeafObject.h", 32,
                  typeid(::TLeafObject), DefineBehavior(ptr, ptr),
                  &::TLeafObject::Dictionary, &TLeafObject_IsA, 1,
                  sizeof(::TLeafObject) );
      instance.SetNew(&new_TLeafObject);
      instance.SetNewArray(&newArray_TLeafObject);
      instance.SetDelete(&delete_TLeafObject);
      instance.SetDeleteArray(&deleteArray_TLeafObject);
      instance.SetDestructor(&destruct_TLeafObject);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLeafObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTree::Class_Name()
{
   return "TTree";
}

//______________________________________________________________________________
const char *TTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSelector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSelector::Class_Name()
{
   return "TSelector";
}

//______________________________________________________________________________
const char *TSelector::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSelector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSelector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSelector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSelector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSelector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSelector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSelector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEventList::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEventList::Class_Name()
{
   return "TEventList";
}

//______________________________________________________________________________
const char *TEventList::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TEventList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEventList::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TEventList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEventList::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TEventList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEventList::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TEventList*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSet::Class_Name()
{
   return "TDSet";
}

//______________________________________________________________________________
const char *TDSet::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDSet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCut::Class_Name()
{
   return "TCut";
}

//______________________________________________________________________________
const char *TCut::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TChain::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TChain::Class_Name()
{
   return "TChain";
}

//______________________________________________________________________________
const char *TChain::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TChain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TChain::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TChain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TChain::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TChain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TChain::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TChain*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSetElementPfn::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSetElementPfn::Class_Name()
{
   return "TDSetElementPfn";
}

//______________________________________________________________________________
const char *TDSetElementPfn::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDSetElementPfn*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSetElementPfn::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDSetElementPfn*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSetElementPfn::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDSetElementPfn*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSetElementPfn::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDSetElementPfn*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSetElementMsn::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSetElementMsn::Class_Name()
{
   return "TDSetElementMsn";
}

//______________________________________________________________________________
const char *TDSetElementMsn::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDSetElementMsn*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSetElementMsn::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDSetElementMsn*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSetElementMsn::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDSetElementMsn*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSetElementMsn::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDSetElementMsn*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDSetElement::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDSetElement::Class_Name()
{
   return "TDSetElement";
}

//______________________________________________________________________________
const char *TDSetElement::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDSetElement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSetElement::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDSetElement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSetElement::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDSetElement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSetElement::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDSetElement*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVirtualIndex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVirtualIndex::Class_Name()
{
   return "TVirtualIndex";
}

//______________________________________________________________________________
const char *TVirtualIndex::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualIndex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVirtualIndex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualIndex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVirtualIndex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualIndex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVirtualIndex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualIndex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVirtualTreePlayer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVirtualTreePlayer::Class_Name()
{
   return "TVirtualTreePlayer";
}

//______________________________________________________________________________
const char *TVirtualTreePlayer::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualTreePlayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVirtualTreePlayer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualTreePlayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVirtualTreePlayer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualTreePlayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVirtualTreePlayer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualTreePlayer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TBranch::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBranch::Class_Name()
{
   return "TBranch";
}

//______________________________________________________________________________
const char *TBranch::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TBranch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBranch::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TBranch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBranch::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TBranch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBranch::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TBranch*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TBasket::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBasket::Class_Name()
{
   return "TBasket";
}

//______________________________________________________________________________
const char *TBasket::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TBasket*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBasket::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TBasket*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBasket::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TBasket*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBasket::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TBasket*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLeaf::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLeaf::Class_Name()
{
   return "TLeaf";
}

//______________________________________________________________________________
const char *TLeaf::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLeaf*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLeaf::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLeaf*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLeaf::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLeaf*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLeaf::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLeaf*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLeafS::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLeafS::Class_Name()
{
   return "TLeafS";
}

//______________________________________________________________________________
const char *TLeafS::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLeafS::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLeafS::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLeafS::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafS*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSelectorCint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSelectorCint::Class_Name()
{
   return "TSelectorCint";
}

//______________________________________________________________________________
const char *TSelectorCint::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSelectorCint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSelectorCint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSelectorCint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSelectorCint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSelectorCint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSelectorCint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSelectorCint*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TBranchObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBranchObject::Class_Name()
{
   return "TBranchObject";
}

//______________________________________________________________________________
const char *TBranchObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TBranchObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBranchObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TBranchObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBranchObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TBranchObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBranchObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TBranchObject*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTreeResult::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTreeResult::Class_Name()
{
   return "TTreeResult";
}

//______________________________________________________________________________
const char *TTreeResult::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TTreeResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTreeResult::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TTreeResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTreeResult::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TTreeResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTreeResult::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TTreeResult*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLeafI::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLeafI::Class_Name()
{
   return "TLeafI";
}

//______________________________________________________________________________
const char *TLeafI::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLeafI::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLeafI::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLeafI::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafI*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TBranchElement::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBranchElement::Class_Name()
{
   return "TBranchElement";
}

//______________________________________________________________________________
const char *TBranchElement::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TBranchElement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBranchElement::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TBranchElement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBranchElement::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TBranchElement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBranchElement::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TBranchElement*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVirtualBranchBrowsable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVirtualBranchBrowsable::Class_Name()
{
   return "TVirtualBranchBrowsable";
}

//______________________________________________________________________________
const char *TVirtualBranchBrowsable::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualBranchBrowsable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVirtualBranchBrowsable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TVirtualBranchBrowsable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVirtualBranchBrowsable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualBranchBrowsable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVirtualBranchBrowsable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TVirtualBranchBrowsable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMethodBrowsable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMethodBrowsable::Class_Name()
{
   return "TMethodBrowsable";
}

//______________________________________________________________________________
const char *TMethodBrowsable::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMethodBrowsable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMethodBrowsable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMethodBrowsable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMethodBrowsable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMethodBrowsable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMethodBrowsable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMethodBrowsable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TNonSplitBrowsable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TNonSplitBrowsable::Class_Name()
{
   return "TNonSplitBrowsable";
}

//______________________________________________________________________________
const char *TNonSplitBrowsable::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TNonSplitBrowsable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TNonSplitBrowsable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TNonSplitBrowsable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TNonSplitBrowsable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TNonSplitBrowsable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TNonSplitBrowsable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TNonSplitBrowsable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCollectionPropertyBrowsable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCollectionPropertyBrowsable::Class_Name()
{
   return "TCollectionPropertyBrowsable";
}

//______________________________________________________________________________
const char *TCollectionPropertyBrowsable::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCollectionPropertyBrowsable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCollectionPropertyBrowsable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCollectionPropertyBrowsable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCollectionPropertyBrowsable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCollectionPropertyBrowsable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCollectionPropertyBrowsable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCollectionPropertyBrowsable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCollectionMethodBrowsable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCollectionMethodBrowsable::Class_Name()
{
   return "TCollectionMethodBrowsable";
}

//______________________________________________________________________________
const char *TCollectionMethodBrowsable::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCollectionMethodBrowsable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCollectionMethodBrowsable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCollectionMethodBrowsable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCollectionMethodBrowsable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCollectionMethodBrowsable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCollectionMethodBrowsable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCollectionMethodBrowsable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLeafF::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLeafF::Class_Name()
{
   return "TLeafF";
}

//______________________________________________________________________________
const char *TLeafF::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLeafF::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLeafF::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLeafF::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafF*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLeafD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLeafD::Class_Name()
{
   return "TLeafD";
}

//______________________________________________________________________________
const char *TLeafD::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLeafD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLeafD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLeafD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafD*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTreeRow::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTreeRow::Class_Name()
{
   return "TTreeRow";
}

//______________________________________________________________________________
const char *TTreeRow::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TTreeRow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTreeRow::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TTreeRow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTreeRow::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TTreeRow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTreeRow::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TTreeRow*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFriendElement::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFriendElement::Class_Name()
{
   return "TFriendElement";
}

//______________________________________________________________________________
const char *TFriendElement::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TFriendElement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFriendElement::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TFriendElement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFriendElement::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TFriendElement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFriendElement::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TFriendElement*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TBranchRef::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBranchRef::Class_Name()
{
   return "TBranchRef";
}

//______________________________________________________________________________
const char *TBranchRef::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TBranchRef*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBranchRef::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TBranchRef*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBranchRef::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TBranchRef*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBranchRef::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TBranchRef*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTreeFriendLeafIter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTreeFriendLeafIter::Class_Name()
{
   return "TTreeFriendLeafIter";
}

//______________________________________________________________________________
const char *TTreeFriendLeafIter::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TTreeFriendLeafIter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTreeFriendLeafIter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TTreeFriendLeafIter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTreeFriendLeafIter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TTreeFriendLeafIter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTreeFriendLeafIter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TTreeFriendLeafIter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TChainProof::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TChainProof::Class_Name()
{
   return "TChainProof";
}

//______________________________________________________________________________
const char *TChainProof::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TChainProof*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TChainProof::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TChainProof*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TChainProof::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TChainProof*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TChainProof::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TChainProof*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TNtuple::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TNtuple::Class_Name()
{
   return "TNtuple";
}

//______________________________________________________________________________
const char *TNtuple::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TNtuple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TNtuple::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TNtuple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TNtuple::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TNtuple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TNtuple::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TNtuple*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TBranchClones::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBranchClones::Class_Name()
{
   return "TBranchClones";
}

//______________________________________________________________________________
const char *TBranchClones::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TBranchClones*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBranchClones::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TBranchClones*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBranchClones::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TBranchClones*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBranchClones::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TBranchClones*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLeafL::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLeafL::Class_Name()
{
   return "TLeafL";
}

//______________________________________________________________________________
const char *TLeafL::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafL*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLeafL::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafL*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLeafL::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafL*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLeafL::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafL*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLeafElement::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLeafElement::Class_Name()
{
   return "TLeafElement";
}

//______________________________________________________________________________
const char *TLeafElement::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafElement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLeafElement::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafElement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLeafElement::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafElement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLeafElement::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafElement*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLeafC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLeafC::Class_Name()
{
   return "TLeafC";
}

//______________________________________________________________________________
const char *TLeafC::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLeafC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLeafC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLeafC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSelectorScalar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSelectorScalar::Class_Name()
{
   return "TSelectorScalar";
}

//______________________________________________________________________________
const char *TSelectorScalar::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSelectorScalar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSelectorScalar::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSelectorScalar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSelectorScalar::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSelectorScalar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSelectorScalar::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSelectorScalar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TChainElement::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TChainElement::Class_Name()
{
   return "TChainElement";
}

//______________________________________________________________________________
const char *TChainElement::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TChainElement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TChainElement::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TChainElement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TChainElement::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TChainElement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TChainElement::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TChainElement*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLeafO::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLeafO::Class_Name()
{
   return "TLeafO";
}

//______________________________________________________________________________
const char *TLeafO::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafO*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLeafO::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafO*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLeafO::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafO*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLeafO::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafO*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TNtupleD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TNtupleD::Class_Name()
{
   return "TNtupleD";
}

//______________________________________________________________________________
const char *TNtupleD::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TNtupleD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TNtupleD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TNtupleD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TNtupleD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TNtupleD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TNtupleD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TNtupleD*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLeafB::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLeafB::Class_Name()
{
   return "TLeafB";
}

//______________________________________________________________________________
const char *TLeafB::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLeafB::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLeafB::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLeafB::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafB*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TLeafObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLeafObject::Class_Name()
{
   return "TLeafObject";
}

//______________________________________________________________________________
const char *TLeafObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLeafObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLeafObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLeafObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLeafObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLeafObject*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TBasket::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TBasket.

      TClass *R__cl = ::TBasket::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fBufferSize", &fBufferSize);
      R__insp.Inspect(R__cl, R__parent, "fNevBufSize", &fNevBufSize);
      R__insp.Inspect(R__cl, R__parent, "fNevBuf", &fNevBuf);
      R__insp.Inspect(R__cl, R__parent, "fLast", &fLast);
      R__insp.Inspect(R__cl, R__parent, "fHeaderOnly", &fHeaderOnly);
      R__insp.Inspect(R__cl, R__parent, "*fDisplacement", &fDisplacement);
      R__insp.Inspect(R__cl, R__parent, "*fEntryOffset", &fEntryOffset);
      R__insp.Inspect(R__cl, R__parent, "*fBranch", &fBranch);
      TKey::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TBasket_IsA(const void *obj) {
      return ((::TBasket*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TBasket(void *p) {
      return  p ? new(p) ::TBasket : new ::TBasket;
   }
   static void *newArray_TBasket(Long_t size) {
      return new ::TBasket[size];
   }
   // Wrapper around operator delete
   static void delete_TBasket(void *p) {
      delete ((::TBasket*)p);
   }
   static void deleteArray_TBasket(void *p) {
      delete [] ((::TBasket*)p);
   }
   static void destruct_TBasket(void *p) {
      typedef ::TBasket current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TBasket

//______________________________________________________________________________
void TBranch::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TBranch.

      TClass *R__cl = ::TBranch::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCompress", &fCompress);
      R__insp.Inspect(R__cl, R__parent, "fBasketSize", &fBasketSize);
      R__insp.Inspect(R__cl, R__parent, "fEntryOffsetLen", &fEntryOffsetLen);
      R__insp.Inspect(R__cl, R__parent, "fWriteBasket", &fWriteBasket);
      R__insp.Inspect(R__cl, R__parent, "fEntryNumber", &fEntryNumber);
      R__insp.Inspect(R__cl, R__parent, "fOffset", &fOffset);
      R__insp.Inspect(R__cl, R__parent, "fMaxBaskets", &fMaxBaskets);
      R__insp.Inspect(R__cl, R__parent, "fSplitLevel", &fSplitLevel);
      R__insp.Inspect(R__cl, R__parent, "fNleaves", &fNleaves);
      R__insp.Inspect(R__cl, R__parent, "fReadBasket", &fReadBasket);
      R__insp.Inspect(R__cl, R__parent, "fReadEntry", &fReadEntry);
      R__insp.Inspect(R__cl, R__parent, "fEntries", &fEntries);
      R__insp.Inspect(R__cl, R__parent, "fTotBytes", &fTotBytes);
      R__insp.Inspect(R__cl, R__parent, "fZipBytes", &fZipBytes);
      R__insp.Inspect(R__cl, R__parent, "fBranches", &fBranches);
      fBranches.ShowMembers(R__insp, strcat(R__parent,"fBranches.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLeaves", &fLeaves);
      fLeaves.ShowMembers(R__insp, strcat(R__parent,"fLeaves.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fBaskets", &fBaskets);
      fBaskets.ShowMembers(R__insp, strcat(R__parent,"fBaskets.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNBasketRAM", &fNBasketRAM);
      R__insp.Inspect(R__cl, R__parent, "*fBasketRAM", &fBasketRAM);
      R__insp.Inspect(R__cl, R__parent, "*fBasketBytes", &fBasketBytes);
      R__insp.Inspect(R__cl, R__parent, "*fBasketEntry", &fBasketEntry);
      R__insp.Inspect(R__cl, R__parent, "*fBasketSeek", &fBasketSeek);
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fAddress", &fAddress);
      R__insp.Inspect(R__cl, R__parent, "*fDirectory", &fDirectory);
      R__insp.Inspect(R__cl, R__parent, "fFileName", &fFileName);
      fFileName.ShowMembers(R__insp, strcat(R__parent,"fFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fEntryBuffer", &fEntryBuffer);
      R__insp.Inspect(R__cl, R__parent, "*fBrowsables", &fBrowsables);
      R__insp.Inspect(R__cl, R__parent, "fSkipZip", &fSkipZip);
      TNamed::ShowMembers(R__insp, R__parent);
      TAttFill::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TBranch_IsA(const void *obj) {
      return ((::TBranch*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TBranch(void *p) {
      return  p ? new(p) ::TBranch : new ::TBranch;
   }
   static void *newArray_TBranch(Long_t size) {
      return new ::TBranch[size];
   }
   // Wrapper around operator delete
   static void delete_TBranch(void *p) {
      delete ((::TBranch*)p);
   }
   static void deleteArray_TBranch(void *p) {
      delete [] ((::TBranch*)p);
   }
   static void destruct_TBranch(void *p) {
      typedef ::TBranch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TBranch

//______________________________________________________________________________
void TBranchClones::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TBranchClones.

      TClass *R__cl = ::TBranchClones::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fList", &fList);
      R__insp.Inspect(R__cl, R__parent, "fRead", &fRead);
      R__insp.Inspect(R__cl, R__parent, "fN", &fN);
      R__insp.Inspect(R__cl, R__parent, "fNdataMax", &fNdataMax);
      R__insp.Inspect(R__cl, R__parent, "fClassName", &fClassName);
      fClassName.ShowMembers(R__insp, strcat(R__parent,"fClassName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fBranchCount", &fBranchCount);
      TBranch::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TBranchClones_IsA(const void *obj) {
      return ((::TBranchClones*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TBranchClones(void *p) {
      return  p ? new(p) ::TBranchClones : new ::TBranchClones;
   }
   static void *newArray_TBranchClones(Long_t size) {
      return new ::TBranchClones[size];
   }
   // Wrapper around operator delete
   static void delete_TBranchClones(void *p) {
      delete ((::TBranchClones*)p);
   }
   static void deleteArray_TBranchClones(void *p) {
      delete [] ((::TBranchClones*)p);
   }
   static void destruct_TBranchClones(void *p) {
      typedef ::TBranchClones current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TBranchClones

//______________________________________________________________________________
void TBranchElement::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TBranchElement.

      TClass *R__cl = ::TBranchElement::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fClassName", &fClassName);
      fClassName.ShowMembers(R__insp, strcat(R__parent,"fClassName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fParentName", &fParentName);
      fParentName.ShowMembers(R__insp, strcat(R__parent,"fParentName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fClonesName", &fClonesName);
      fClonesName.ShowMembers(R__insp, strcat(R__parent,"fClonesName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fCollProxy", &fCollProxy);
      R__insp.Inspect(R__cl, R__parent, "fCheckSum", &fCheckSum);
      R__insp.Inspect(R__cl, R__parent, "fClassVersion", &fClassVersion);
      R__insp.Inspect(R__cl, R__parent, "fID", &fID);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "fStreamerType", &fStreamerType);
      R__insp.Inspect(R__cl, R__parent, "fMaximum", &fMaximum);
      R__insp.Inspect(R__cl, R__parent, "fSTLtype", &fSTLtype);
      R__insp.Inspect(R__cl, R__parent, "fNdata", &fNdata);
      R__insp.Inspect(R__cl, R__parent, "*fBranchCount", &fBranchCount);
      R__insp.Inspect(R__cl, R__parent, "*fBranchCount2", &fBranchCount2);
      R__insp.Inspect(R__cl, R__parent, "*fInfo", &fInfo);
      R__insp.Inspect(R__cl, R__parent, "*fObject", &fObject);
      R__insp.Inspect(R__cl, R__parent, "*fBranchPointer", &fBranchPointer);
      TBranch::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TBranchElement_IsA(const void *obj) {
      return ((::TBranchElement*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TBranchElement(void *p) {
      return  p ? new(p) ::TBranchElement : new ::TBranchElement;
   }
   static void *newArray_TBranchElement(Long_t size) {
      return new ::TBranchElement[size];
   }
   // Wrapper around operator delete
   static void delete_TBranchElement(void *p) {
      delete ((::TBranchElement*)p);
   }
   static void deleteArray_TBranchElement(void *p) {
      delete [] ((::TBranchElement*)p);
   }
   static void destruct_TBranchElement(void *p) {
      typedef ::TBranchElement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TBranchElement

//______________________________________________________________________________
void TBranchObject::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TBranchObject.

      TClass *R__cl = ::TBranchObject::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fClassName", &fClassName);
      fClassName.ShowMembers(R__insp, strcat(R__parent,"fClassName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fOldObject", &fOldObject);
      TBranch::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TBranchObject_IsA(const void *obj) {
      return ((::TBranchObject*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TBranchObject(void *p) {
      return  p ? new(p) ::TBranchObject : new ::TBranchObject;
   }
   static void *newArray_TBranchObject(Long_t size) {
      return new ::TBranchObject[size];
   }
   // Wrapper around operator delete
   static void delete_TBranchObject(void *p) {
      delete ((::TBranchObject*)p);
   }
   static void deleteArray_TBranchObject(void *p) {
      delete [] ((::TBranchObject*)p);
   }
   static void destruct_TBranchObject(void *p) {
      typedef ::TBranchObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TBranchObject

//______________________________________________________________________________
void TBranchRef::Streamer(TBuffer &R__b)
{
   // Stream an object of class TBranchRef.

   if (R__b.IsReading()) {
      TBranchRef::Class()->ReadBuffer(R__b, this);
   } else {
      TBranchRef::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TBranchRef::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TBranchRef.

      TClass *R__cl = ::TBranchRef::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fRefTable", &fRefTable);
      TBranch::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TBranchRef_IsA(const void *obj) {
      return ((::TBranchRef*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TBranchRef(void *p) {
      return  p ? new(p) ::TBranchRef : new ::TBranchRef;
   }
   static void *newArray_TBranchRef(Long_t size) {
      return new ::TBranchRef[size];
   }
   // Wrapper around operator delete
   static void delete_TBranchRef(void *p) {
      delete ((::TBranchRef*)p);
   }
   static void deleteArray_TBranchRef(void *p) {
      delete [] ((::TBranchRef*)p);
   }
   static void destruct_TBranchRef(void *p) {
      typedef ::TBranchRef current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TBranchRef

//______________________________________________________________________________
void TChain::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TChain.

      TClass *R__cl = ::TChain::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTreeOffsetLen", &fTreeOffsetLen);
      R__insp.Inspect(R__cl, R__parent, "fNtrees", &fNtrees);
      R__insp.Inspect(R__cl, R__parent, "fTreeNumber", &fTreeNumber);
      R__insp.Inspect(R__cl, R__parent, "*fTreeOffset", &fTreeOffset);
      R__insp.Inspect(R__cl, R__parent, "fMaxCacheSize", &fMaxCacheSize);
      R__insp.Inspect(R__cl, R__parent, "fPageSize", &fPageSize);
      R__insp.Inspect(R__cl, R__parent, "fCanDeleteRefs", &fCanDeleteRefs);
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__parent, "*fFiles", &fFiles);
      R__insp.Inspect(R__cl, R__parent, "*fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "*fChainProof", &fChainProof);
      TTree::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TChain_IsA(const void *obj) {
      return ((::TChain*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TChain(void *p) {
      return  p ? new(p) ::TChain : new ::TChain;
   }
   static void *newArray_TChain(Long_t size) {
      return new ::TChain[size];
   }
   // Wrapper around operator delete
   static void delete_TChain(void *p) {
      delete ((::TChain*)p);
   }
   static void deleteArray_TChain(void *p) {
      delete [] ((::TChain*)p);
   }
   static void destruct_TChain(void *p) {
      typedef ::TChain current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TChain

//______________________________________________________________________________
void TChainElement::Streamer(TBuffer &R__b)
{
   // Stream an object of class TChainElement.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> fEntries;
      R__b >> fNPackets;
      R__b >> fPacketSize;
      R__b >> fStatus;
      R__b.CheckByteCount(R__s, R__c, TChainElement::IsA());
   } else {
      R__c = R__b.WriteVersion(TChainElement::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << fEntries;
      R__b << fNPackets;
      R__b << fPacketSize;
      R__b << fStatus;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TChainElement::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TChainElement.

      TClass *R__cl = ::TChainElement::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fEntries", &fEntries);
      R__insp.Inspect(R__cl, R__parent, "fNPackets", &fNPackets);
      R__insp.Inspect(R__cl, R__parent, "fPacketSize", &fPacketSize);
      R__insp.Inspect(R__cl, R__parent, "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "*fBaddress", &fBaddress);
      R__insp.Inspect(R__cl, R__parent, "fBaddressClassName", &fBaddressClassName);
      fBaddressClassName.ShowMembers(R__insp, strcat(R__parent,"fBaddressClassName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fBaddressType", &fBaddressType);
      R__insp.Inspect(R__cl, R__parent, "fBaddressIsPtr", &fBaddressIsPtr);
      R__insp.Inspect(R__cl, R__parent, "*fPackets", &fPackets);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TChainElement_IsA(const void *obj) {
      return ((::TChainElement*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TChainElement(void *p) {
      return  p ? new(p) ::TChainElement : new ::TChainElement;
   }
   static void *newArray_TChainElement(Long_t size) {
      return new ::TChainElement[size];
   }
   // Wrapper around operator delete
   static void delete_TChainElement(void *p) {
      delete ((::TChainElement*)p);
   }
   static void deleteArray_TChainElement(void *p) {
      delete [] ((::TChainElement*)p);
   }
   static void destruct_TChainElement(void *p) {
      typedef ::TChainElement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TChainElement

//______________________________________________________________________________
void TCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCut.

   if (R__b.IsReading()) {
      TCut::Class()->ReadBuffer(R__b, this);
   } else {
      TCut::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TCut::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCut.

      TClass *R__cl = ::TCut::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCut_IsA(const void *obj) {
      return ((::TCut*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TCut(void *p) {
      return  p ? new(p) ::TCut : new ::TCut;
   }
   static void *newArray_TCut(Long_t size) {
      return new ::TCut[size];
   }
   // Wrapper around operator delete
   static void delete_TCut(void *p) {
      delete ((::TCut*)p);
   }
   static void deleteArray_TCut(void *p) {
      delete [] ((::TCut*)p);
   }
   static void destruct_TCut(void *p) {
      typedef ::TCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCut

//______________________________________________________________________________
void TEventList::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TEventList.

      TClass *R__cl = ::TEventList::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fN", &fN);
      R__insp.Inspect(R__cl, R__parent, "fSize", &fSize);
      R__insp.Inspect(R__cl, R__parent, "fDelta", &fDelta);
      R__insp.Inspect(R__cl, R__parent, "fReapply", &fReapply);
      R__insp.Inspect(R__cl, R__parent, "*fList", &fList);
      R__insp.Inspect(R__cl, R__parent, "*fDirectory", &fDirectory);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TEventList_IsA(const void *obj) {
      return ((::TEventList*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TEventList(void *p) {
      return  p ? new(p) ::TEventList : new ::TEventList;
   }
   static void *newArray_TEventList(Long_t size) {
      return new ::TEventList[size];
   }
   // Wrapper around operator delete
   static void delete_TEventList(void *p) {
      delete ((::TEventList*)p);
   }
   static void deleteArray_TEventList(void *p) {
      delete [] ((::TEventList*)p);
   }
   static void destruct_TEventList(void *p) {
      typedef ::TEventList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEventList

//______________________________________________________________________________
void TFriendElement::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFriendElement.

   if (R__b.IsReading()) {
      TFriendElement::Class()->ReadBuffer(R__b, this);
   } else {
      TFriendElement::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TFriendElement::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFriendElement.

      TClass *R__cl = ::TFriendElement::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fParentTree", &fParentTree);
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__parent, "fTreeName", &fTreeName);
      fTreeName.ShowMembers(R__insp, strcat(R__parent,"fTreeName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fOwnFile", &fOwnFile);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TFriendElement_IsA(const void *obj) {
      return ((::TFriendElement*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TFriendElement(void *p) {
      return  p ? new(p) ::TFriendElement : new ::TFriendElement;
   }
   static void *newArray_TFriendElement(Long_t size) {
      return new ::TFriendElement[size];
   }
   // Wrapper around operator delete
   static void delete_TFriendElement(void *p) {
      delete ((::TFriendElement*)p);
   }
   static void deleteArray_TFriendElement(void *p) {
      delete [] ((::TFriendElement*)p);
   }
   static void destruct_TFriendElement(void *p) {
      typedef ::TFriendElement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFriendElement

//______________________________________________________________________________
void TTreeFriendLeafIter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTreeFriendLeafIter.

   TIterator::Streamer(R__b);
}

//______________________________________________________________________________
void TTreeFriendLeafIter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTreeFriendLeafIter.

      TClass *R__cl = ::TTreeFriendLeafIter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fLeafIter", &fLeafIter);
      R__insp.Inspect(R__cl, R__parent, "*fTreeIter", &fTreeIter);
      R__insp.Inspect(R__cl, R__parent, "fDirection", &fDirection);
      TIterator::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TTreeFriendLeafIter_IsA(const void *obj) {
      return ((::TTreeFriendLeafIter*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TTreeFriendLeafIter(void *p) {
      delete ((::TTreeFriendLeafIter*)p);
   }
   static void deleteArray_TTreeFriendLeafIter(void *p) {
      delete [] ((::TTreeFriendLeafIter*)p);
   }
   static void destruct_TTreeFriendLeafIter(void *p) {
      typedef ::TTreeFriendLeafIter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTreeFriendLeafIter

//______________________________________________________________________________
void TLeaf::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLeaf.

      TClass *R__cl = ::TLeaf::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNdata", &fNdata);
      R__insp.Inspect(R__cl, R__parent, "fLen", &fLen);
      R__insp.Inspect(R__cl, R__parent, "fLenType", &fLenType);
      R__insp.Inspect(R__cl, R__parent, "fOffset", &fOffset);
      R__insp.Inspect(R__cl, R__parent, "fIsRange", &fIsRange);
      R__insp.Inspect(R__cl, R__parent, "fIsUnsigned", &fIsUnsigned);
      R__insp.Inspect(R__cl, R__parent, "*fLeafCount", &fLeafCount);
      R__insp.Inspect(R__cl, R__parent, "*fBranch", &fBranch);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLeaf_IsA(const void *obj) {
      return ((::TLeaf*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLeaf(void *p) {
      return  p ? new(p) ::TLeaf : new ::TLeaf;
   }
   static void *newArray_TLeaf(Long_t size) {
      return new ::TLeaf[size];
   }
   // Wrapper around operator delete
   static void delete_TLeaf(void *p) {
      delete ((::TLeaf*)p);
   }
   static void deleteArray_TLeaf(void *p) {
      delete [] ((::TLeaf*)p);
   }
   static void destruct_TLeaf(void *p) {
      typedef ::TLeaf current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLeaf

//______________________________________________________________________________
void TLeafElement::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLeafElement.

   if (R__b.IsReading()) {
      TLeafElement::Class()->ReadBuffer(R__b, this);
   } else {
      TLeafElement::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TLeafElement::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLeafElement.

      TClass *R__cl = ::TLeafElement::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fAbsAddress", &fAbsAddress);
      R__insp.Inspect(R__cl, R__parent, "fID", &fID);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      TLeaf::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLeafElement_IsA(const void *obj) {
      return ((::TLeafElement*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLeafElement(void *p) {
      return  p ? new(p) ::TLeafElement : new ::TLeafElement;
   }
   static void *newArray_TLeafElement(Long_t size) {
      return new ::TLeafElement[size];
   }
   // Wrapper around operator delete
   static void delete_TLeafElement(void *p) {
      delete ((::TLeafElement*)p);
   }
   static void deleteArray_TLeafElement(void *p) {
      delete [] ((::TLeafElement*)p);
   }
   static void destruct_TLeafElement(void *p) {
      typedef ::TLeafElement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLeafElement

//______________________________________________________________________________
void TLeafObject::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLeafObject.

      TClass *R__cl = ::TLeafObject::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fClass", &fClass);
      R__insp.Inspect(R__cl, R__parent, "*fObjAddress", &fObjAddress);
      R__insp.Inspect(R__cl, R__parent, "fVirtual", &fVirtual);
      TLeaf::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLeafObject_IsA(const void *obj) {
      return ((::TLeafObject*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLeafObject(void *p) {
      return  p ? new(p) ::TLeafObject : new ::TLeafObject;
   }
   static void *newArray_TLeafObject(Long_t size) {
      return new ::TLeafObject[size];
   }
   // Wrapper around operator delete
   static void delete_TLeafObject(void *p) {
      delete ((::TLeafObject*)p);
   }
   static void deleteArray_TLeafObject(void *p) {
      delete [] ((::TLeafObject*)p);
   }
   static void destruct_TLeafObject(void *p) {
      typedef ::TLeafObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLeafObject

//______________________________________________________________________________
void TLeafB::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLeafB.

   if (R__b.IsReading()) {
      TLeafB::Class()->ReadBuffer(R__b, this);
   } else {
      TLeafB::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TLeafB::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLeafB.

      TClass *R__cl = ::TLeafB::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinimum", &fMinimum);
      R__insp.Inspect(R__cl, R__parent, "fMaximum", &fMaximum);
      R__insp.Inspect(R__cl, R__parent, "*fValue", &fValue);
      R__insp.Inspect(R__cl, R__parent, "*fPointer", &fPointer);
      TLeaf::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLeafB_IsA(const void *obj) {
      return ((::TLeafB*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLeafB(void *p) {
      return  p ? new(p) ::TLeafB : new ::TLeafB;
   }
   static void *newArray_TLeafB(Long_t size) {
      return new ::TLeafB[size];
   }
   // Wrapper around operator delete
   static void delete_TLeafB(void *p) {
      delete ((::TLeafB*)p);
   }
   static void deleteArray_TLeafB(void *p) {
      delete [] ((::TLeafB*)p);
   }
   static void destruct_TLeafB(void *p) {
      typedef ::TLeafB current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLeafB

//______________________________________________________________________________
void TLeafC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLeafC.

   if (R__b.IsReading()) {
      TLeafC::Class()->ReadBuffer(R__b, this);
   } else {
      TLeafC::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TLeafC::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLeafC.

      TClass *R__cl = ::TLeafC::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinimum", &fMinimum);
      R__insp.Inspect(R__cl, R__parent, "fMaximum", &fMaximum);
      R__insp.Inspect(R__cl, R__parent, "*fValue", &fValue);
      R__insp.Inspect(R__cl, R__parent, "*fPointer", &fPointer);
      TLeaf::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLeafC_IsA(const void *obj) {
      return ((::TLeafC*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLeafC(void *p) {
      return  p ? new(p) ::TLeafC : new ::TLeafC;
   }
   static void *newArray_TLeafC(Long_t size) {
      return new ::TLeafC[size];
   }
   // Wrapper around operator delete
   static void delete_TLeafC(void *p) {
      delete ((::TLeafC*)p);
   }
   static void deleteArray_TLeafC(void *p) {
      delete [] ((::TLeafC*)p);
   }
   static void destruct_TLeafC(void *p) {
      typedef ::TLeafC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLeafC

//______________________________________________________________________________
void TLeafD::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLeafD.

   if (R__b.IsReading()) {
      TLeafD::Class()->ReadBuffer(R__b, this);
   } else {
      TLeafD::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TLeafD::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLeafD.

      TClass *R__cl = ::TLeafD::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinimum", &fMinimum);
      R__insp.Inspect(R__cl, R__parent, "fMaximum", &fMaximum);
      R__insp.Inspect(R__cl, R__parent, "*fValue", &fValue);
      R__insp.Inspect(R__cl, R__parent, "*fPointer", &fPointer);
      TLeaf::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLeafD_IsA(const void *obj) {
      return ((::TLeafD*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLeafD(void *p) {
      return  p ? new(p) ::TLeafD : new ::TLeafD;
   }
   static void *newArray_TLeafD(Long_t size) {
      return new ::TLeafD[size];
   }
   // Wrapper around operator delete
   static void delete_TLeafD(void *p) {
      delete ((::TLeafD*)p);
   }
   static void deleteArray_TLeafD(void *p) {
      delete [] ((::TLeafD*)p);
   }
   static void destruct_TLeafD(void *p) {
      typedef ::TLeafD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLeafD

//______________________________________________________________________________
void TLeafF::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLeafF.

   if (R__b.IsReading()) {
      TLeafF::Class()->ReadBuffer(R__b, this);
   } else {
      TLeafF::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TLeafF::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLeafF.

      TClass *R__cl = ::TLeafF::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinimum", &fMinimum);
      R__insp.Inspect(R__cl, R__parent, "fMaximum", &fMaximum);
      R__insp.Inspect(R__cl, R__parent, "*fValue", &fValue);
      R__insp.Inspect(R__cl, R__parent, "*fPointer", &fPointer);
      TLeaf::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLeafF_IsA(const void *obj) {
      return ((::TLeafF*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLeafF(void *p) {
      return  p ? new(p) ::TLeafF : new ::TLeafF;
   }
   static void *newArray_TLeafF(Long_t size) {
      return new ::TLeafF[size];
   }
   // Wrapper around operator delete
   static void delete_TLeafF(void *p) {
      delete ((::TLeafF*)p);
   }
   static void deleteArray_TLeafF(void *p) {
      delete [] ((::TLeafF*)p);
   }
   static void destruct_TLeafF(void *p) {
      typedef ::TLeafF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLeafF

//______________________________________________________________________________
void TLeafI::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLeafI.

   if (R__b.IsReading()) {
      TLeafI::Class()->ReadBuffer(R__b, this);
   } else {
      TLeafI::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TLeafI::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLeafI.

      TClass *R__cl = ::TLeafI::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinimum", &fMinimum);
      R__insp.Inspect(R__cl, R__parent, "fMaximum", &fMaximum);
      R__insp.Inspect(R__cl, R__parent, "*fValue", &fValue);
      R__insp.Inspect(R__cl, R__parent, "*fPointer", &fPointer);
      TLeaf::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLeafI_IsA(const void *obj) {
      return ((::TLeafI*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLeafI(void *p) {
      return  p ? new(p) ::TLeafI : new ::TLeafI;
   }
   static void *newArray_TLeafI(Long_t size) {
      return new ::TLeafI[size];
   }
   // Wrapper around operator delete
   static void delete_TLeafI(void *p) {
      delete ((::TLeafI*)p);
   }
   static void deleteArray_TLeafI(void *p) {
      delete [] ((::TLeafI*)p);
   }
   static void destruct_TLeafI(void *p) {
      typedef ::TLeafI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLeafI

//______________________________________________________________________________
void TLeafS::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLeafS.

   if (R__b.IsReading()) {
      TLeafS::Class()->ReadBuffer(R__b, this);
   } else {
      TLeafS::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TLeafS::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLeafS.

      TClass *R__cl = ::TLeafS::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinimum", &fMinimum);
      R__insp.Inspect(R__cl, R__parent, "fMaximum", &fMaximum);
      R__insp.Inspect(R__cl, R__parent, "*fValue", &fValue);
      R__insp.Inspect(R__cl, R__parent, "*fPointer", &fPointer);
      TLeaf::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLeafS_IsA(const void *obj) {
      return ((::TLeafS*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLeafS(void *p) {
      return  p ? new(p) ::TLeafS : new ::TLeafS;
   }
   static void *newArray_TLeafS(Long_t size) {
      return new ::TLeafS[size];
   }
   // Wrapper around operator delete
   static void delete_TLeafS(void *p) {
      delete ((::TLeafS*)p);
   }
   static void deleteArray_TLeafS(void *p) {
      delete [] ((::TLeafS*)p);
   }
   static void destruct_TLeafS(void *p) {
      typedef ::TLeafS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLeafS

//______________________________________________________________________________
void TLeafL::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLeafL.

   if (R__b.IsReading()) {
      TLeafL::Class()->ReadBuffer(R__b, this);
   } else {
      TLeafL::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TLeafL::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLeafL.

      TClass *R__cl = ::TLeafL::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinimum", &fMinimum);
      R__insp.Inspect(R__cl, R__parent, "fMaximum", &fMaximum);
      R__insp.Inspect(R__cl, R__parent, "*fValue", &fValue);
      R__insp.Inspect(R__cl, R__parent, "*fPointer", &fPointer);
      TLeaf::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLeafL_IsA(const void *obj) {
      return ((::TLeafL*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLeafL(void *p) {
      return  p ? new(p) ::TLeafL : new ::TLeafL;
   }
   static void *newArray_TLeafL(Long_t size) {
      return new ::TLeafL[size];
   }
   // Wrapper around operator delete
   static void delete_TLeafL(void *p) {
      delete ((::TLeafL*)p);
   }
   static void deleteArray_TLeafL(void *p) {
      delete [] ((::TLeafL*)p);
   }
   static void destruct_TLeafL(void *p) {
      typedef ::TLeafL current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLeafL

//______________________________________________________________________________
void TLeafO::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLeafO.

   if (R__b.IsReading()) {
      TLeafO::Class()->ReadBuffer(R__b, this);
   } else {
      TLeafO::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TLeafO::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLeafO.

      TClass *R__cl = ::TLeafO::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinimum", &fMinimum);
      R__insp.Inspect(R__cl, R__parent, "fMaximum", &fMaximum);
      R__insp.Inspect(R__cl, R__parent, "*fValue", &fValue);
      R__insp.Inspect(R__cl, R__parent, "*fPointer", &fPointer);
      TLeaf::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLeafO_IsA(const void *obj) {
      return ((::TLeafO*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLeafO(void *p) {
      return  p ? new(p) ::TLeafO : new ::TLeafO;
   }
   static void *newArray_TLeafO(Long_t size) {
      return new ::TLeafO[size];
   }
   // Wrapper around operator delete
   static void delete_TLeafO(void *p) {
      delete ((::TLeafO*)p);
   }
   static void deleteArray_TLeafO(void *p) {
      delete [] ((::TLeafO*)p);
   }
   static void destruct_TLeafO(void *p) {
      typedef ::TLeafO current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLeafO

//______________________________________________________________________________
void TNtuple::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TNtuple.

      TClass *R__cl = ::TNtuple::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNvar", &fNvar);
      R__insp.Inspect(R__cl, R__parent, "*fArgs", &fArgs);
      TTree::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TNtuple_IsA(const void *obj) {
      return ((::TNtuple*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TNtuple(void *p) {
      return  p ? new(p) ::TNtuple : new ::TNtuple;
   }
   static void *newArray_TNtuple(Long_t size) {
      return new ::TNtuple[size];
   }
   // Wrapper around operator delete
   static void delete_TNtuple(void *p) {
      delete ((::TNtuple*)p);
   }
   static void deleteArray_TNtuple(void *p) {
      delete [] ((::TNtuple*)p);
   }
   static void destruct_TNtuple(void *p) {
      typedef ::TNtuple current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TNtuple

//______________________________________________________________________________
void TNtupleD::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TNtupleD.

      TClass *R__cl = ::TNtupleD::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNvar", &fNvar);
      R__insp.Inspect(R__cl, R__parent, "*fArgs", &fArgs);
      TTree::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TNtupleD_IsA(const void *obj) {
      return ((::TNtupleD*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TNtupleD(void *p) {
      return  p ? new(p) ::TNtupleD : new ::TNtupleD;
   }
   static void *newArray_TNtupleD(Long_t size) {
      return new ::TNtupleD[size];
   }
   // Wrapper around operator delete
   static void delete_TNtupleD(void *p) {
      delete ((::TNtupleD*)p);
   }
   static void deleteArray_TNtupleD(void *p) {
      delete [] ((::TNtupleD*)p);
   }
   static void destruct_TNtupleD(void *p) {
      typedef ::TNtupleD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TNtupleD

//______________________________________________________________________________
void TSelectorCint::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSelectorCint.

   if (R__b.IsReading()) {
      TSelectorCint::Class()->ReadBuffer(R__b, this);
   } else {
      TSelectorCint::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TSelectorCint::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSelectorCint.

      TClass *R__cl = ::TSelectorCint::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fClass", &fClass);
      R__insp.Inspect(R__cl, R__parent, "*fFuncVersion", &fFuncVersion);
      R__insp.Inspect(R__cl, R__parent, "*fFuncInit", &fFuncInit);
      R__insp.Inspect(R__cl, R__parent, "*fFuncBegin", &fFuncBegin);
      R__insp.Inspect(R__cl, R__parent, "*fFuncSlBegin", &fFuncSlBegin);
      R__insp.Inspect(R__cl, R__parent, "*fFuncNotif", &fFuncNotif);
      R__insp.Inspect(R__cl, R__parent, "*fFuncSlTerm", &fFuncSlTerm);
      R__insp.Inspect(R__cl, R__parent, "*fFuncTerm", &fFuncTerm);
      R__insp.Inspect(R__cl, R__parent, "*fFuncCut", &fFuncCut);
      R__insp.Inspect(R__cl, R__parent, "*fFuncFill", &fFuncFill);
      R__insp.Inspect(R__cl, R__parent, "*fFuncProc", &fFuncProc);
      R__insp.Inspect(R__cl, R__parent, "*fFuncOption", &fFuncOption);
      R__insp.Inspect(R__cl, R__parent, "*fFuncObj", &fFuncObj);
      R__insp.Inspect(R__cl, R__parent, "*fFuncInp", &fFuncInp);
      R__insp.Inspect(R__cl, R__parent, "*fFuncOut", &fFuncOut);
      R__insp.Inspect(R__cl, R__parent, "*fIntSelector", &fIntSelector);
      TSelector::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSelectorCint_IsA(const void *obj) {
      return ((::TSelectorCint*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TSelectorCint(void *p) {
      return  p ? new(p) ::TSelectorCint : new ::TSelectorCint;
   }
   static void *newArray_TSelectorCint(Long_t size) {
      return new ::TSelectorCint[size];
   }
   // Wrapper around operator delete
   static void delete_TSelectorCint(void *p) {
      delete ((::TSelectorCint*)p);
   }
   static void deleteArray_TSelectorCint(void *p) {
      delete [] ((::TSelectorCint*)p);
   }
   static void destruct_TSelectorCint(void *p) {
      typedef ::TSelectorCint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSelectorCint

//______________________________________________________________________________
void TTree::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTree.

      TClass *R__cl = ::TTree::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fEntries", &fEntries);
      R__insp.Inspect(R__cl, R__parent, "fTotBytes", &fTotBytes);
      R__insp.Inspect(R__cl, R__parent, "fZipBytes", &fZipBytes);
      R__insp.Inspect(R__cl, R__parent, "fSavedBytes", &fSavedBytes);
      R__insp.Inspect(R__cl, R__parent, "fWeight", &fWeight);
      R__insp.Inspect(R__cl, R__parent, "fTimerInterval", &fTimerInterval);
      R__insp.Inspect(R__cl, R__parent, "fScanField", &fScanField);
      R__insp.Inspect(R__cl, R__parent, "fUpdate", &fUpdate);
      R__insp.Inspect(R__cl, R__parent, "fMaxEntries", &fMaxEntries);
      R__insp.Inspect(R__cl, R__parent, "fMaxEntryLoop", &fMaxEntryLoop);
      R__insp.Inspect(R__cl, R__parent, "fMaxVirtualSize", &fMaxVirtualSize);
      R__insp.Inspect(R__cl, R__parent, "fAutoSave", &fAutoSave);
      R__insp.Inspect(R__cl, R__parent, "fEstimate", &fEstimate);
      R__insp.Inspect(R__cl, R__parent, "fChainOffset", &fChainOffset);
      R__insp.Inspect(R__cl, R__parent, "fReadEntry", &fReadEntry);
      R__insp.Inspect(R__cl, R__parent, "fTotalBuffers", &fTotalBuffers);
      R__insp.Inspect(R__cl, R__parent, "fPacketSize", &fPacketSize);
      R__insp.Inspect(R__cl, R__parent, "fNfill", &fNfill);
      R__insp.Inspect(R__cl, R__parent, "fDebug", &fDebug);
      R__insp.Inspect(R__cl, R__parent, "fDebugMin", &fDebugMin);
      R__insp.Inspect(R__cl, R__parent, "fDebugMax", &fDebugMax);
      R__insp.Inspect(R__cl, R__parent, "fMakeClass", &fMakeClass);
      R__insp.Inspect(R__cl, R__parent, "fFileNumber", &fFileNumber);
      R__insp.Inspect(R__cl, R__parent, "*fNotify", &fNotify);
      R__insp.Inspect(R__cl, R__parent, "*fDirectory", &fDirectory);
      R__insp.Inspect(R__cl, R__parent, "fBranches", &fBranches);
      fBranches.ShowMembers(R__insp, strcat(R__parent,"fBranches.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fLeaves", &fLeaves);
      fLeaves.ShowMembers(R__insp, strcat(R__parent,"fLeaves.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fAliases", &fAliases);
      R__insp.Inspect(R__cl, R__parent, "*fEventList", &fEventList);
      R__insp.Inspect(R__cl, R__parent, "fIndexValues", &fIndexValues);
      fIndexValues.ShowMembers(R__insp, strcat(R__parent,"fIndexValues.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIndex", &fIndex);
      fIndex.ShowMembers(R__insp, strcat(R__parent,"fIndex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fTreeIndex", &fTreeIndex);
      R__insp.Inspect(R__cl, R__parent, "*fFriends", &fFriends);
      R__insp.Inspect(R__cl, R__parent, "*fUserInfo", &fUserInfo);
      R__insp.Inspect(R__cl, R__parent, "*fPlayer", &fPlayer);
      R__insp.Inspect(R__cl, R__parent, "*fClones", &fClones);
      R__insp.Inspect(R__cl, R__parent, "*fBranchRef", &fBranchRef);
      TNamed::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
      TAttFill::ShowMembers(R__insp, R__parent);
      TAttMarker::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TTree_IsA(const void *obj) {
      return ((::TTree*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TTree(void *p) {
      return  p ? new(p) ::TTree : new ::TTree;
   }
   static void *newArray_TTree(Long_t size) {
      return new ::TTree[size];
   }
   // Wrapper around operator delete
   static void delete_TTree(void *p) {
      delete ((::TTree*)p);
   }
   static void deleteArray_TTree(void *p) {
      delete [] ((::TTree*)p);
   }
   static void destruct_TTree(void *p) {
      typedef ::TTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTree

//______________________________________________________________________________
void TChainProof::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TChainProof.

      TClass *R__cl = ::TChainProof::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__parent, "*fSet", &fSet);
      R__insp.Inspect(R__cl, R__parent, "*fProof", &fProof);
      R__insp.Inspect(R__cl, R__parent, "*fDrawFeedback", &fDrawFeedback);
      TTree::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TChainProof_IsA(const void *obj) {
      return ((::TChainProof*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TChainProof(void *p) {
      delete ((::TChainProof*)p);
   }
   static void deleteArray_TChainProof(void *p) {
      delete [] ((::TChainProof*)p);
   }
   static void destruct_TChainProof(void *p) {
      typedef ::TChainProof current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TChainProof

//______________________________________________________________________________
void TVirtualTreePlayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVirtualTreePlayer.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TVirtualTreePlayer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVirtualTreePlayer.

      TClass *R__cl = ::TVirtualTreePlayer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TVirtualTreePlayer_IsA(const void *obj) {
      return ((::TVirtualTreePlayer*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TVirtualTreePlayer(void *p) {
      delete ((::TVirtualTreePlayer*)p);
   }
   static void deleteArray_TVirtualTreePlayer(void *p) {
      delete [] ((::TVirtualTreePlayer*)p);
   }
   static void destruct_TVirtualTreePlayer(void *p) {
      typedef ::TVirtualTreePlayer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVirtualTreePlayer

//______________________________________________________________________________
void TVirtualIndex::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVirtualIndex.

   if (R__b.IsReading()) {
      TVirtualIndex::Class()->ReadBuffer(R__b, this);
   } else {
      TVirtualIndex::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TVirtualIndex::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVirtualIndex.

      TClass *R__cl = ::TVirtualIndex::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTree", &fTree);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TVirtualIndex_IsA(const void *obj) {
      return ((::TVirtualIndex*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TVirtualIndex(void *p) {
      delete ((::TVirtualIndex*)p);
   }
   static void deleteArray_TVirtualIndex(void *p) {
      delete [] ((::TVirtualIndex*)p);
   }
   static void destruct_TVirtualIndex(void *p) {
      typedef ::TVirtualIndex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVirtualIndex

//______________________________________________________________________________
void R__TTreeResult_fFields(TBuffer &R__b, void *R__p, int R__n)
{
   TString** fFields = (TString**)R__p;
   if (R__b.IsReading()) {
      delete [] *fFields;
      if (!R__n) return;
      *fFields = new TString[R__n];
      TString* R__s = *fFields;
      for (Int_t R__l = 0; R__l < R__n; R__l++) {
         R__s[R__l].Streamer(R__b);
      }
   } else {
      TString* R__s = *fFields;
      for (Int_t R__l = 0; R__l < R__n; R__l++) {
         R__s[R__l].Streamer(R__b);
      }
   }
}

//______________________________________________________________________________
void TTreeResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTreeResult.

   if (R__b.IsReading()) {
      TTreeResult::Class()->ReadBuffer(R__b, this);
   } else {
      TTreeResult::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TTreeResult::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTreeResult.

      TClass *R__cl = ::TTreeResult::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fColumnCount", &fColumnCount);
      R__insp.Inspect(R__cl, R__parent, "*fFields", &fFields);
      R__cl->SetMemberStreamer("*fFields",R__TTreeResult_fFields);
      R__insp.Inspect(R__cl, R__parent, "*fResult", &fResult);
      R__insp.Inspect(R__cl, R__parent, "fNextRow", &fNextRow);
      TSQLResult::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TTreeResult_IsA(const void *obj) {
      return ((::TTreeResult*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TTreeResult(void *p) {
      return  p ? new(p) ::TTreeResult : new ::TTreeResult;
   }
   static void *newArray_TTreeResult(Long_t size) {
      return new ::TTreeResult[size];
   }
   // Wrapper around operator delete
   static void delete_TTreeResult(void *p) {
      delete ((::TTreeResult*)p);
   }
   static void deleteArray_TTreeResult(void *p) {
      delete [] ((::TTreeResult*)p);
   }
   static void destruct_TTreeResult(void *p) {
      typedef ::TTreeResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTreeResult

//______________________________________________________________________________
void TTreeRow::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTreeRow.

      TClass *R__cl = ::TTreeRow::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fColumnCount", &fColumnCount);
      R__insp.Inspect(R__cl, R__parent, "*fFields", &fFields);
      R__insp.Inspect(R__cl, R__parent, "*fRow", &fRow);
      R__insp.Inspect(R__cl, R__parent, "*fOriginal", &fOriginal);
      TSQLRow::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TTreeRow_IsA(const void *obj) {
      return ((::TTreeRow*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TTreeRow(void *p) {
      return  p ? new(p) ::TTreeRow : new ::TTreeRow;
   }
   static void *newArray_TTreeRow(Long_t size) {
      return new ::TTreeRow[size];
   }
   // Wrapper around operator delete
   static void delete_TTreeRow(void *p) {
      delete ((::TTreeRow*)p);
   }
   static void deleteArray_TTreeRow(void *p) {
      delete [] ((::TTreeRow*)p);
   }
   static void destruct_TTreeRow(void *p) {
      typedef ::TTreeRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTreeRow

//______________________________________________________________________________
void TDSet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSet.

   if (R__b.IsReading()) {
      TDSet::Class()->ReadBuffer(R__b, this);
   } else {
      TDSet::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDSet::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSet.

      TClass *R__cl = ::TDSet::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fObjName", &fObjName);
      fObjName.ShowMembers(R__insp, strcat(R__parent,"fObjName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fElements", &fElements);
      R__insp.Inspect(R__cl, R__parent, "fIsTree", &fIsTree);
      R__insp.Inspect(R__cl, R__parent, "*fIterator", &fIterator);
      R__insp.Inspect(R__cl, R__parent, "*fElementsMsn", &fElementsMsn);
      R__insp.Inspect(R__cl, R__parent, "*fEventList", &fEventList);
      R__insp.Inspect(R__cl, R__parent, "*fCurrent", &fCurrent);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSet_IsA(const void *obj) {
      return ((::TDSet*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSet(void *p) {
      return  p ? new(p) ::TDSet : new ::TDSet;
   }
   static void *newArray_TDSet(Long_t size) {
      return new ::TDSet[size];
   }
   // Wrapper around operator delete
   static void delete_TDSet(void *p) {
      delete ((::TDSet*)p);
   }
   static void deleteArray_TDSet(void *p) {
      delete [] ((::TDSet*)p);
   }
   static void destruct_TDSet(void *p) {
      typedef ::TDSet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSet

//______________________________________________________________________________
void TDSetElement::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSetElement.

   if (R__b.IsReading()) {
      TDSetElement::Class()->ReadBuffer(R__b, this);
   } else {
      TDSetElement::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDSetElement::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSetElement.

      TClass *R__cl = ::TDSetElement::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fFileName", &fFileName);
      fFileName.ShowMembers(R__insp, strcat(R__parent,"fFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fObjName", &fObjName);
      fObjName.ShowMembers(R__insp, strcat(R__parent,"fObjName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDirectory", &fDirectory);
      fDirectory.ShowMembers(R__insp, strcat(R__parent,"fDirectory.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFirst", &fFirst);
      R__insp.Inspect(R__cl, R__parent, "fNum", &fNum);
      R__insp.Inspect(R__cl, R__parent, "*fSet", &fSet);
      R__insp.Inspect(R__cl, R__parent, "fMsd", &fMsd);
      fMsd.ShowMembers(R__insp, strcat(R__parent,"fMsd.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fPfnList", &fPfnList);
      R__insp.Inspect(R__cl, R__parent, "*fIterator", &fIterator);
      R__insp.Inspect(R__cl, R__parent, "*fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__parent, "fTDSetOffset", &fTDSetOffset);
      R__insp.Inspect(R__cl, R__parent, "*fEventList", &fEventList);
      R__insp.Inspect(R__cl, R__parent, "fValid", &fValid);
      R__insp.Inspect(R__cl, R__parent, "fEntries", &fEntries);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSetElement_IsA(const void *obj) {
      return ((::TDSetElement*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSetElement(void *p) {
      return  p ? new(p) ::TDSetElement : new ::TDSetElement;
   }
   static void *newArray_TDSetElement(Long_t size) {
      return new ::TDSetElement[size];
   }
   // Wrapper around operator delete
   static void delete_TDSetElement(void *p) {
      delete ((::TDSetElement*)p);
   }
   static void deleteArray_TDSetElement(void *p) {
      delete [] ((::TDSetElement*)p);
   }
   static void destruct_TDSetElement(void *p) {
      typedef ::TDSetElement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSetElement

//______________________________________________________________________________
void TDSetElementPfn::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSetElementPfn.

   if (R__b.IsReading()) {
      TDSetElementPfn::Class()->ReadBuffer(R__b, this);
   } else {
      TDSetElementPfn::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDSetElementPfn::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSetElementPfn.

      TClass *R__cl = ::TDSetElementPfn::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPfn", &fPfn);
      fPfn.ShowMembers(R__insp, strcat(R__parent,"fPfn.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fMsn", &fMsn);
      fMsn.ShowMembers(R__insp, strcat(R__parent,"fMsn.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCen", &fCen);
      fCen.ShowMembers(R__insp, strcat(R__parent,"fCen.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSize", &fSize);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSetElementPfn_IsA(const void *obj) {
      return ((::TDSetElementPfn*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSetElementPfn(void *p) {
      return  p ? new(p) ::TDSetElementPfn : new ::TDSetElementPfn;
   }
   static void *newArray_TDSetElementPfn(Long_t size) {
      return new ::TDSetElementPfn[size];
   }
   // Wrapper around operator delete
   static void delete_TDSetElementPfn(void *p) {
      delete ((::TDSetElementPfn*)p);
   }
   static void deleteArray_TDSetElementPfn(void *p) {
      delete [] ((::TDSetElementPfn*)p);
   }
   static void destruct_TDSetElementPfn(void *p) {
      typedef ::TDSetElementPfn current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSetElementPfn

//______________________________________________________________________________
void TDSetElementMsn::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSetElementMsn.

   if (R__b.IsReading()) {
      TDSetElementMsn::Class()->ReadBuffer(R__b, this);
   } else {
      TDSetElementMsn::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDSetElementMsn::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDSetElementMsn.

      TClass *R__cl = ::TDSetElementMsn::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMsn", &fMsn);
      fMsn.ShowMembers(R__insp, strcat(R__parent,"fMsn.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNfiles", &fNfiles);
      R__insp.Inspect(R__cl, R__parent, "fDataSize", &fDataSize);
      R__insp.Inspect(R__cl, R__parent, "fNSiteDaemons", &fNSiteDaemons);
      R__insp.Inspect(R__cl, R__parent, "fMaxSiteDaemons", &fMaxSiteDaemons);
      R__insp.Inspect(R__cl, R__parent, "fDataPerSiteDaemon", &fDataPerSiteDaemon);
      R__insp.Inspect(R__cl, R__parent, "fMaxDataPerSiteDaemon", &fMaxDataPerSiteDaemon);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDSetElementMsn_IsA(const void *obj) {
      return ((::TDSetElementMsn*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDSetElementMsn(void *p) {
      return  p ? new(p) ::TDSetElementMsn : new ::TDSetElementMsn;
   }
   static void *newArray_TDSetElementMsn(Long_t size) {
      return new ::TDSetElementMsn[size];
   }
   // Wrapper around operator delete
   static void delete_TDSetElementMsn(void *p) {
      delete ((::TDSetElementMsn*)p);
   }
   static void deleteArray_TDSetElementMsn(void *p) {
      delete [] ((::TDSetElementMsn*)p);
   }
   static void destruct_TDSetElementMsn(void *p) {
      typedef ::TDSetElementMsn current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDSetElementMsn

//______________________________________________________________________________
void TVirtualBranchBrowsable::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVirtualBranchBrowsable.

   if (R__b.IsReading()) {
      TVirtualBranchBrowsable::Class()->ReadBuffer(R__b, this);
   } else {
      TVirtualBranchBrowsable::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TVirtualBranchBrowsable::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVirtualBranchBrowsable.

      TClass *R__cl = ::TVirtualBranchBrowsable::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fBranch", &fBranch);
      R__insp.Inspect(R__cl, R__parent, "*fParent", &fParent);
      R__insp.Inspect(R__cl, R__parent, "*fLeaves", &fLeaves);
      R__insp.Inspect(R__cl, R__parent, "*fClass", &fClass);
      R__insp.Inspect(R__cl, R__parent, "fTypeIsPointer", &fTypeIsPointer);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TVirtualBranchBrowsable_IsA(const void *obj) {
      return ((::TVirtualBranchBrowsable*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TVirtualBranchBrowsable(void *p) {
      delete ((::TVirtualBranchBrowsable*)p);
   }
   static void deleteArray_TVirtualBranchBrowsable(void *p) {
      delete [] ((::TVirtualBranchBrowsable*)p);
   }
   static void destruct_TVirtualBranchBrowsable(void *p) {
      typedef ::TVirtualBranchBrowsable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVirtualBranchBrowsable

//______________________________________________________________________________
void TMethodBrowsable::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMethodBrowsable.

   if (R__b.IsReading()) {
      TMethodBrowsable::Class()->ReadBuffer(R__b, this);
   } else {
      TMethodBrowsable::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TMethodBrowsable::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMethodBrowsable.

      TClass *R__cl = ::TMethodBrowsable::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMethod", &fMethod);
      TVirtualBranchBrowsable::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMethodBrowsable_IsA(const void *obj) {
      return ((::TMethodBrowsable*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TMethodBrowsable(void *p) {
      delete ((::TMethodBrowsable*)p);
   }
   static void deleteArray_TMethodBrowsable(void *p) {
      delete [] ((::TMethodBrowsable*)p);
   }
   static void destruct_TMethodBrowsable(void *p) {
      typedef ::TMethodBrowsable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMethodBrowsable

//______________________________________________________________________________
void TNonSplitBrowsable::Streamer(TBuffer &R__b)
{
   // Stream an object of class TNonSplitBrowsable.

   if (R__b.IsReading()) {
      TNonSplitBrowsable::Class()->ReadBuffer(R__b, this);
   } else {
      TNonSplitBrowsable::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TNonSplitBrowsable::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TNonSplitBrowsable.

      TClass *R__cl = ::TNonSplitBrowsable::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TVirtualBranchBrowsable::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TNonSplitBrowsable_IsA(const void *obj) {
      return ((::TNonSplitBrowsable*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TNonSplitBrowsable(void *p) {
      delete ((::TNonSplitBrowsable*)p);
   }
   static void deleteArray_TNonSplitBrowsable(void *p) {
      delete [] ((::TNonSplitBrowsable*)p);
   }
   static void destruct_TNonSplitBrowsable(void *p) {
      typedef ::TNonSplitBrowsable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TNonSplitBrowsable

//______________________________________________________________________________
void TCollectionPropertyBrowsable::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCollectionPropertyBrowsable.

   if (R__b.IsReading()) {
      TCollectionPropertyBrowsable::Class()->ReadBuffer(R__b, this);
   } else {
      TCollectionPropertyBrowsable::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TCollectionPropertyBrowsable::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCollectionPropertyBrowsable.

      TClass *R__cl = ::TCollectionPropertyBrowsable::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDraw", &fDraw);
      fDraw.ShowMembers(R__insp, strcat(R__parent,"fDraw.")); R__parent[R__ncp] = 0;
      TVirtualBranchBrowsable::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCollectionPropertyBrowsable_IsA(const void *obj) {
      return ((::TCollectionPropertyBrowsable*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TCollectionPropertyBrowsable(void *p) {
      delete ((::TCollectionPropertyBrowsable*)p);
   }
   static void deleteArray_TCollectionPropertyBrowsable(void *p) {
      delete [] ((::TCollectionPropertyBrowsable*)p);
   }
   static void destruct_TCollectionPropertyBrowsable(void *p) {
      typedef ::TCollectionPropertyBrowsable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCollectionPropertyBrowsable

//______________________________________________________________________________
void TCollectionMethodBrowsable::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCollectionMethodBrowsable.

   if (R__b.IsReading()) {
      TCollectionMethodBrowsable::Class()->ReadBuffer(R__b, this);
   } else {
      TCollectionMethodBrowsable::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TCollectionMethodBrowsable::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCollectionMethodBrowsable.

      TClass *R__cl = ::TCollectionMethodBrowsable::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMethodBrowsable::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCollectionMethodBrowsable_IsA(const void *obj) {
      return ((::TCollectionMethodBrowsable*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TCollectionMethodBrowsable(void *p) {
      delete ((::TCollectionMethodBrowsable*)p);
   }
   static void deleteArray_TCollectionMethodBrowsable(void *p) {
      delete [] ((::TCollectionMethodBrowsable*)p);
   }
   static void destruct_TCollectionMethodBrowsable(void *p) {
      typedef ::TCollectionMethodBrowsable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCollectionMethodBrowsable

//______________________________________________________________________________
void TSelectorScalar::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSelectorScalar.

   if (R__b.IsReading()) {
      TSelectorScalar::Class()->ReadBuffer(R__b, this);
   } else {
      TSelectorScalar::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TSelectorScalar::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSelectorScalar.

      TClass *R__cl = ::TSelectorScalar::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TParameter<long long>::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSelectorScalar_IsA(const void *obj) {
      return ((::TSelectorScalar*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TSelectorScalar(void *p) {
      return  p ? new(p) ::TSelectorScalar : new ::TSelectorScalar;
   }
   static void *newArray_TSelectorScalar(Long_t size) {
      return new ::TSelectorScalar[size];
   }
   // Wrapper around operator delete
   static void delete_TSelectorScalar(void *p) {
      delete ((::TSelectorScalar*)p);
   }
   static void deleteArray_TSelectorScalar(void *p) {
      delete [] ((::TSelectorScalar*)p);
   }
   static void destruct_TSelectorScalar(void *p) {
      typedef ::TSelectorScalar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSelectorScalar

//______________________________________________________________________________
void TSelector::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSelector.

   if (R__b.IsReading()) {
      TSelector::Class()->ReadBuffer(R__b, this);
   } else {
      TSelector::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TSelector::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSelector.

      TClass *R__cl = ::TSelector::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "fOption", &fOption);
      fOption.ShowMembers(R__insp, strcat(R__parent,"fOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fObject", &fObject);
      R__insp.Inspect(R__cl, R__parent, "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__parent, "*fOutput", &fOutput);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSelector_IsA(const void *obj) {
      return ((::TSelector*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TSelector(void *p) {
      return  p ? new(p) ::TSelector : new ::TSelector;
   }
   static void *newArray_TSelector(Long_t size) {
      return new ::TSelector[size];
   }
   // Wrapper around operator delete
   static void delete_TSelector(void *p) {
      delete ((::TSelector*)p);
   }
   static void deleteArray_TSelector(void *p) {
      delete [] ((::TSelector*)p);
   }
   static void destruct_TSelector(void *p) {
      typedef ::TSelector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSelector

/********************************************************
* tree/src/G__Tree.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__Tree();

extern "C" void G__set_cpp_environmentG__Tree() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("tree/inc/TSelector.h");
  G__add_compiledheader("tree/inc/TDSet.h");
  G__add_compiledheader("tree/inc/TVirtualTreePlayer.h");
  G__add_compiledheader("tree/inc/TVirtualIndex.h");
  G__add_compiledheader("tree/inc/TBasket.h");
  G__add_compiledheader("tree/inc/TLeafS.h");
  G__add_compiledheader("tree/inc/TLeaf.h");
  G__add_compiledheader("tree/inc/TSelectorCint.h");
  G__add_compiledheader("tree/inc/TBranchObject.h");
  G__add_compiledheader("tree/inc/TTreeResult.h");
  G__add_compiledheader("tree/inc/TLeafI.h");
  G__add_compiledheader("tree/inc/TBranchBrowsable.h");
  G__add_compiledheader("tree/inc/TLeafF.h");
  G__add_compiledheader("tree/inc/TLeafD.h");
  G__add_compiledheader("tree/inc/TTreeRow.h");
  G__add_compiledheader("tree/inc/TChainProof.h");
  G__add_compiledheader("tree/inc/TEventList.h");
  G__add_compiledheader("tree/inc/TNtuple.h");
  G__add_compiledheader("tree/inc/TBranchClones.h");
  G__add_compiledheader("tree/inc/TCut.h");
  G__add_compiledheader("tree/inc/TBranchRef.h");
  G__add_compiledheader("tree/inc/TLeafL.h");
  G__add_compiledheader("tree/inc/TLeafElement.h");
  G__add_compiledheader("tree/inc/TBranchElement.h");
  G__add_compiledheader("tree/inc/TChain.h");
  G__add_compiledheader("tree/inc/TLeafC.h");
  G__add_compiledheader("tree/inc/TTree.h");
  G__add_compiledheader("tree/inc/TSelectorScalar.h");
  G__add_compiledheader("tree/inc/TChainElement.h");
  G__add_compiledheader("tree/inc/TBranch.h");
  G__add_compiledheader("tree/inc/TLeafO.h");
  G__add_compiledheader("tree/inc/TNtupleD.h");
  G__add_compiledheader("tree/inc/TLeafB.h");
  G__add_compiledheader("tree/inc/TLeafObject.h");
  G__add_compiledheader("tree/inc/TFriendElement.h");
  G__cpp_reset_tagtableG__Tree();
}
class G__treedIsrcdIG__TreedOcxx_tag {};

void* operator new(size_t size,G__treedIsrcdIG__TreedOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__treedIsrcdIG__TreedOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_treedIsrcdIG__TreedOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__Tree() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TTree */
static int G__G__Tree_127_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTree *p=NULL;
   if(G__getaryconstruct()) p=new TTree[G__getaryconstruct()];
   else                    p=new TTree;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TTree);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTree *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TTree(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TTree((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TTree);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->AddFriend((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->AddFriend((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->AddFriend((const char*)G__int(libp->para[0]),(TFile*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->AddFriend((TTree*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->AddFriend((TTree*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->AddFriend((TTree*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->AddTotBytes((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->AddZipBytes((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->AutoSave((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->AutoSave());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->Branch((TCollection*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->Branch((TCollection*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->Branch((TCollection*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->Branch((TCollection*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->Branch((TList*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->Branch((TList*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->Branch((TList*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Bronch((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Bronch((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Bronch((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->BranchOld((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->BranchOld((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->BranchOld((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->BranchRef());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->BuildIndex((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->BuildIndex((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->BuildStreamerInfo((TClass*)G__int(libp->para[0]),(void*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->BuildStreamerInfo((TClass*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->CloneTree((Long64_t)G__Longlong(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->CloneTree((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->CloneTree());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->CopyAddresses((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->CopyEntries((TTree*)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->CopyEntries((TTree*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TTree*)(G__getstructoffset()))->Debug());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->Delete((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->Delete();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->DropBaskets();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->DropBuffers((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->Fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->FindBranch((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->FindLeaf((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 7:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Fit(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])
,(Long64_t)G__Longlong(libp->para[6])));
      break;
   case 6:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Fit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Fit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Fit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Fit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Fit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TTree*)(G__getstructoffset()))->GetAlias((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetBranch((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTree*)(G__getstructoffset()))->GetBranchRef());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TTree*)(G__getstructoffset()))->GetBranchStatus((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTree::GetBranchStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetChainEntryNumber((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetChainOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTree*)(G__getstructoffset()))->GetCurrentFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetDebugMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetDebugMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTree*)(G__getstructoffset()))->GetDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetEntriesFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetEntriesFriend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetEstimate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->GetEntry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->GetEvent((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->GetEvent((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->GetEvent());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->GetEntryWithIndex((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->GetEntryWithIndex((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetEntryNumberWithBestIndex((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetEntryNumberWithBestIndex((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetEntryNumberWithIndex((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetEntryNumberWithIndex((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTree*)(G__getstructoffset()))->GetEventList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetEntryNumber((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TTree*)(G__getstructoffset()))->GetFileNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TTree*)(G__getstructoffset()))->GetFriendAlias((TTree*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TTree*)(G__getstructoffset()))->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TTree*)(G__getstructoffset()))->GetIndexValues());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetIteratorOnAllLeaves((Bool_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetIteratorOnAllLeaves());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetLeaf((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetListOfClones());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetListOfBranches());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetListOfLeaves());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTree*)(G__getstructoffset()))->GetListOfFriends());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTree*)(G__getstructoffset()))->GetListOfAliases());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TTree*)(G__getstructoffset()))->GetMakeClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetMaxEntryLoop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TTree*)(G__getstructoffset()))->GetMaximum((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)TTree::GetMaxTreeSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetMaxVirtualSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TTree*)(G__getstructoffset()))->GetMinimum((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->GetNbranches());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTree*)(G__getstructoffset()))->GetNotify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetPlayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TTree*)(G__getstructoffset()))->GetPacketSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetReadEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetReadEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TTree*)(G__getstructoffset()))->GetScanField());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetSelect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->GetSelectedRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TTree*)(G__getstructoffset()))->GetTimerInterval());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetTotBytes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTree*)(G__getstructoffset()))->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTree*)(G__getstructoffset()))->GetTreeIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TTree*)(G__getstructoffset()))->GetTreeNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TTree*)(G__getstructoffset()))->GetUpdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetUserInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetVar1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetVar2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetVar3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->GetVar4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TTree*)(G__getstructoffset()))->GetV1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TTree*)(G__getstructoffset()))->GetV2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TTree*)(G__getstructoffset()))->GetV3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TTree*)(G__getstructoffset()))->GetV4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TTree*)(G__getstructoffset()))->GetW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TTree*)(G__getstructoffset()))->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TTree*)(G__getstructoffset()))->GetZipBytes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->IncrementTotalBuffers((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TTree*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->LoadBaskets((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->LoadBaskets());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->LoadTree((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->LoadTreeFriend((Long64_t)G__Longlong(libp->para[0]),(TTree*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeClass((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeClass((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeClass());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeCode((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeCode());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeSelector((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TTree*)(G__getstructoffset()))->MakeSelector());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TTree*)(G__getstructoffset()))->MemoryFull((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Merge((TCollection*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TTree::MergeTrees((TList*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TTree*)(G__getstructoffset()))->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Principal());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TTree*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TTree*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Project((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Project((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Project((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Project((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Project((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TTree*)(G__getstructoffset()))->Query());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->ReadFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->ReadFile((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->Refresh();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->RemoveFriend((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->Reset((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->Reset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->ResetBranchAddresses();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->Scan());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TTree*)(G__getstructoffset()))->SetAlias((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetAutoSave((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetAutoSave();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetBasketSize((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetBasketSize((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetBranchAddress((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(TClass*)G__int(libp->para[2]),(EDataType)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetBranchStatus((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(UInt_t*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetBranchStatus((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetBranchStatus((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      TTree::SetBranchStyle((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      TTree::SetBranchStyle();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetChainOffset((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetChainOffset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetCircular((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetDebug((Int_t)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetDebug((Int_t)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetDebug((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetDebug();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetDirectory((TDirectory*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->SetEntries((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->SetEntries());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetEstimate((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetEstimate();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetFileNumber((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetFileNumber();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetEventList((TEventList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetMakeClass((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetMaxEntryLoop((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetMaxEntryLoop();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      TTree::SetMaxTreeSize((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      TTree::SetMaxTreeSize();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetMaxVirtualSize((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetMaxVirtualSize();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetNotify((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetObject((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetScanField((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetScanField();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetTimerInterval((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetTimerInterval();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetTreeIndex((TVirtualIndex*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetWeight((Double_t)G__double(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetWeight((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetWeight();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetUpdate((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->SetUpdate();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->Show((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->Show((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->Show();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->StartViewer();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->UnbinnedFit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->UnbinnedFit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->UnbinnedFit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->UnbinnedFit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TTree*)(G__getstructoffset()))->UnbinnedFit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->UseCurrentStyle();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_6_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_7_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TTree::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_8_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTree*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_9_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_0_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_1_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTree*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_2_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_3_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_4_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_127_5_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTree G__TTTree;
static int G__G__Tree_127_6_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TTree *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TTree *)((G__getstructoffset())+sizeof(TTree)*i);
   else  delete (TTree *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSelector */
static int G__G__Tree_128_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSelector *p=NULL;
   if(G__getaryconstruct()) p=new TSelector[G__getaryconstruct()];
   else                    p=new TSelector;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TSelector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSelector*)(G__getstructoffset()))->Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->Init((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->Begin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->SlaveBegin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TSelector*)(G__getstructoffset()))->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSelector*)(G__getstructoffset()))->GetOption());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSelector*)(G__getstructoffset()))->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TSelector*)(G__getstructoffset()))->ProcessCut((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->ProcessFill((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TSelector*)(G__getstructoffset()))->Process((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->SetOption((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->SetObject((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->SetInputList((TList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->SetStatus((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSelector*)(G__getstructoffset()))->GetOutputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->SlaveTerminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->Terminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSelector::GetSelector((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSelector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSelector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSelector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSelector::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSelector*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelector*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSelector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSelector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSelector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_128_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSelector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_128_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TSelector *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TSelector(*(TSelector*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TSelector);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSelector G__TTSelector;
static int G__G__Tree_128_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSelector *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSelector *)((G__getstructoffset())+sizeof(TSelector)*i);
   else  delete (TSelector *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_128_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSelector *dest = (TSelector*)(G__getstructoffset());
   *dest = (*(TSelector*)libp->para[0].ref);
   const TSelector& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEventList */
static int G__G__Tree_129_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TEventList *p=NULL;
   if(G__getaryconstruct()) p=new TEventList[G__getaryconstruct()];
   else                    p=new TEventList;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TEventList);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TEventList *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TEventList(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TEventList(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TEventList((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TEventList((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TEventList);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TEventList *p=NULL;
      p = new TEventList(*(TEventList*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TEventList);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Add((const TEventList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TEventList*)(G__getstructoffset()))->Contains((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Enter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TEventList*)(G__getstructoffset()))->GetDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TEventList*)(G__getstructoffset()))->GetEntry((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TEventList*)(G__getstructoffset()))->GetIndex((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TEventList*)(G__getstructoffset()))->GetList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TEventList*)(G__getstructoffset()))->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TEventList*)(G__getstructoffset()))->GetReapplyCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TEventList*)(G__getstructoffset()))->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Intersect((const TEventList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TEventList*)(G__getstructoffset()))->Merge((TCollection*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TEventList*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TEventList*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Reset((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Reset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Resize((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Resize();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->SetDelta((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->SetDelta();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->SetDirectory((TDirectory*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->SetName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->SetReapplyCut((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->SetReapplyCut();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Sort();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Subtract((const TEventList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TEventList& obj=((TEventList*)(G__getstructoffset()))->operator=(*(TEventList*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TEventList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TEventList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TEventList::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TEventList*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TEventList*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TEventList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TEventList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_129_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TEventList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEventList G__TTEventList;
static int G__G__Tree_129_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TEventList *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TEventList *)((G__getstructoffset())+sizeof(TEventList)*i);
   else  delete (TEventList *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSet */
static int G__G__Tree_130_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSet *p=NULL;
   if(G__getaryconstruct()) p=new TDSet[G__getaryconstruct()];
   else                    p=new TDSet;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TDSet);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSet *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TDSet(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TDSet((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDSet((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TDSet);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letint(result7,103,(long)((TDSet*)(G__getstructoffset()))->Add((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(const char*)G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7,103,(long)((TDSet*)(G__getstructoffset()))->Add((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letint(result7,103,(long)((TDSet*)(G__getstructoffset()))->Add((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letint(result7,103,(long)((TDSet*)(G__getstructoffset()))->Add((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)((TDSet*)(G__getstructoffset()))->Add((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((TDSet*)(G__getstructoffset()))->Add((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSet*)(G__getstructoffset()))->Add((TDSet*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->AddFriend((TDSet*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)((TDSet*)(G__getstructoffset()))->AddQuery((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)((TDSet*)(G__getstructoffset()))->AddQuery((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSet*)(G__getstructoffset()))->Request());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDSet*)(G__getstructoffset()))->Connect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(TEventList*)G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TDSet*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDSet*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDSet*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->SetObjName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->SetDirectory((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TDSet*)(G__getstructoffset()))->IsTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TDSet*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TDSet*)(G__getstructoffset()))->ElementsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSet*)(G__getstructoffset()))->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSet*)(G__getstructoffset()))->GetObjName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSet*)(G__getstructoffset()))->GetDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSet*)(G__getstructoffset()))->GetListOfElements());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSet*)(G__getstructoffset()))->GetListOfElementsMsn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->GridPack();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->GridPrintPackList();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSet*)(G__getstructoffset()))->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSet*)(G__getstructoffset()))->Current());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)TDSet::GetEntries((Bool_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->AddInput((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->ClearInput();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSet*)(G__getstructoffset()))->GetOutput((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSet*)(G__getstructoffset()))->GetOutputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->StartViewer();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSet*)(G__getstructoffset()))->GetTreeHeader((TVirtualProof*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSet::MakeTDSet((TChain*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->SetEventList((TEventList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSet*)(G__getstructoffset()))->GetEventList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->Validate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->Validate((TDSet*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSet::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSet*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSet*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_130_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_130_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSet *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSet(*(TDSet*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TDSet);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSet G__TTDSet;
static int G__G__Tree_130_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSet *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSet *)((G__getstructoffset())+sizeof(TDSet)*i);
   else  delete (TDSet *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_130_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSet *dest = (TDSet*)(G__getstructoffset());
   *dest = (*(TDSet*)libp->para[0].ref);
   const TDSet& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCut */
static int G__G__Tree_131_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCut *p=NULL;
   if(G__getaryconstruct()) p=new TCut[G__getaryconstruct()];
   else                    p=new TCut;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TCut);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCut *p=NULL;
      p = new TCut((const char*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TCut);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCut *p=NULL;
      p = new TCut((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TCut);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCut *p=NULL;
      p = new TCut(*(TCut*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TCut);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TCut& obj=((TCut*)(G__getstructoffset()))->operator=((const char*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TCut& obj=((TCut*)(G__getstructoffset()))->operator=(*(TCut*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TCut& obj=((TCut*)(G__getstructoffset()))->operator+=((const char*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TCut& obj=((TCut*)(G__getstructoffset()))->operator+=(*(TCut*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TCut& obj=((TCut*)(G__getstructoffset()))->operator*=((const char*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TCut& obj=((TCut*)(G__getstructoffset()))->operator*=(*(TCut*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TCut*)(G__getstructoffset()))->operator const char*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCut::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCut*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCut*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCut*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCut*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_131_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCut G__TTCut;
static int G__G__Tree_131_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCut *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCut *)((G__getstructoffset())+sizeof(TCut)*i);
   else  delete (TCut *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TChain */
static int G__G__Tree_132_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TChain *p=NULL;
   if(G__getaryconstruct()) p=new TChain[G__getaryconstruct()];
   else                    p=new TChain;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TChain);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TChain *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TChain((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TChain((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TChain);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->Add((TChain*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->Add((const char*)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->Add((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->AddFile((const char*)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->AddFile((const char*)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->AddFile((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TChain*)(G__getstructoffset()))->AddFriend((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TChain*)(G__getstructoffset()))->AddFriend((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChain*)(G__getstructoffset()))->AddFriend((const char*)G__int(libp->para[0]),(TFile*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TChain*)(G__getstructoffset()))->AddFriend((TTree*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TChain*)(G__getstructoffset()))->AddFriend((TTree*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->CanDeleteRefs((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->CanDeleteRefs();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->CreatePackets();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->Fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChain*)(G__getstructoffset()))->FindBranch((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChain*)(G__getstructoffset()))->FindLeaf((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChain*)(G__getstructoffset()))->GetBranch((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TChain*)(G__getstructoffset()))->GetBranchStatus((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChain*)(G__getstructoffset()))->GetChainEntryNumber((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChain*)(G__getstructoffset()))->GetNtrees());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChain*)(G__getstructoffset()))->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->GetEntry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->GetEntryWithIndex((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->GetEntryWithIndex((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChain*)(G__getstructoffset()))->GetFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChain*)(G__getstructoffset()))->GetLeaf((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChain*)(G__getstructoffset()))->GetListOfBranches());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChain*)(G__getstructoffset()))->GetListOfFiles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChain*)(G__getstructoffset()))->GetListOfLeaves());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TChain*)(G__getstructoffset()))->GetAlias((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TChain*)(G__getstructoffset()))->GetMaximum((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TChain*)(G__getstructoffset()))->GetMinimum((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->GetNbranches());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChain*)(G__getstructoffset()))->GetReadEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChain*)(G__getstructoffset()))->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChain*)(G__getstructoffset()))->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChain*)(G__getstructoffset()))->GetTreeNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,78,(long)((const TChain*)(G__getstructoffset()))->GetTreeOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChain*)(G__getstructoffset()))->GetTreeOffsetLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TChain*)(G__getstructoffset()))->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TChain*)(G__getstructoffset()))->LoadBaskets((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->LoadTree((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->Loop((Option_t*)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->Loop((Option_t*)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->Loop((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->Loop();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TChain*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TChain*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Merge((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Merge((TCollection*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Merge((TFile*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Merge((TFile*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TChain*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TChain*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->Reset((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->Reset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letLonglong(result7,110,(G__int64)((TChain*)(G__getstructoffset()))->Scan());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetAutoDelete((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetAutoDelete();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetBranchAddress((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetBranchAddress((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(TClass*)G__int(libp->para[2]),(EDataType)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetBranchStatus((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(UInt_t*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetBranchStatus((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetBranchStatus((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetDirectory((TDirectory*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetMakeClass((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetPacketSize((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetPacketSize();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetProof((TVirtualProof*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetProof();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetWeight((Double_t)G__double(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetWeight((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->SetWeight();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->UseCache((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->UseCache((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->UseCache();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TChain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TChain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TChain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TChain::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChain*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChain*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TChain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TChain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TChain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_132_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TChain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TChain G__TTChain;
static int G__G__Tree_132_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TChain *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TChain *)((G__getstructoffset())+sizeof(TChain)*i);
   else  delete (TChain *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSetElementPfn */
static int G__G__Tree_133_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSetElementPfn *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TDSetElementPfn(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]));
      break;
   case 2:
      p = new TDSetElementPfn((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TDSetElementPfn((const char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TDSetElementPfn[G__getaryconstruct()];
   else                    p=new TDSetElementPfn;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSetElementPfn*)(G__getstructoffset()))->GetPfn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSetElementPfn*)(G__getstructoffset()))->GetMsn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSetElementPfn*)(G__getstructoffset()))->GetCen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElementPfn*)(G__getstructoffset()))->SetCen((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElementPfn*)(G__getstructoffset()))->SetCen(*(TString*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TDSetElementPfn*)(G__getstructoffset()))->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDSetElementPfn*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDSetElementPfn*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSetElementPfn::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetElementPfn::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSetElementPfn::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSetElementPfn::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSetElementPfn*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElementPfn*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElementPfn*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElementPfn*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetElementPfn::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSetElementPfn::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetElementPfn::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_133_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSetElementPfn::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_133_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSetElementPfn *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSetElementPfn(*(TDSetElementPfn*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSetElementPfn G__TTDSetElementPfn;
static int G__G__Tree_133_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSetElementPfn *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSetElementPfn *)((G__getstructoffset())+sizeof(TDSetElementPfn)*i);
   else  delete (TDSetElementPfn *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_133_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSetElementPfn *dest = (TDSetElementPfn*)(G__getstructoffset());
   *dest = (*(TDSetElementPfn*)libp->para[0].ref);
   const TDSetElementPfn& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSetElementMsn */
static int G__G__Tree_134_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSetElementMsn *p=NULL;
   if(G__getaryconstruct()) p=new TDSetElementMsn[G__getaryconstruct()];
   else                    p=new TDSetElementMsn;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSetElementMsn *p=NULL;
      p = new TDSetElementMsn((TDSetElementPfn*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSetElementMsn*)(G__getstructoffset()))->GetMsn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSetElementMsn*)(G__getstructoffset()))->GetNfiles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TDSetElementMsn*)(G__getstructoffset()))->GetDataSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSetElementMsn*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSetElementMsn*)(G__getstructoffset()))->GetNSiteDaemons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElementMsn*)(G__getstructoffset()))->SetNSiteDaemons((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSetElementMsn*)(G__getstructoffset()))->GetMaxSiteDaemons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TDSetElementMsn*)(G__getstructoffset()))->GetDataPerSiteDaemon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TDSetElementMsn*)(G__getstructoffset()))->GetMaxDataPerSiteDaemon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElementMsn*)(G__getstructoffset()))->SetMaxDataPerSiteDaemon((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElementMsn*)(G__getstructoffset()))->SetMaxSiteDaemons((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TDSetElementMsn*)(G__getstructoffset()))->Increment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TDSetElementMsn*)(G__getstructoffset()))->AddData((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDSetElementMsn*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDSetElementMsn*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSetElementMsn::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetElementMsn::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSetElementMsn::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSetElementMsn::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSetElementMsn*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElementMsn*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElementMsn*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElementMsn*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetElementMsn::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSetElementMsn::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetElementMsn::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_134_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSetElementMsn::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_134_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSetElementMsn *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSetElementMsn(*(TDSetElementMsn*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSetElementMsn G__TTDSetElementMsn;
static int G__G__Tree_134_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSetElementMsn *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSetElementMsn *)((G__getstructoffset())+sizeof(TDSetElementMsn)*i);
   else  delete (TDSetElementMsn *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_134_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSetElementMsn *dest = (TDSetElementMsn*)(G__getstructoffset());
   *dest = (*(TDSetElementMsn*)libp->para[0].ref);
   const TDSetElementMsn& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDSetElement */
static int G__G__Tree_135_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSetElement *p=NULL;
   if(G__getaryconstruct()) p=new TDSetElement[G__getaryconstruct()];
   else                    p=new TDSetElement;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TDSetElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDSetElement *p=NULL;
   switch(libp->paran) {
   case 7:
      p = new TDSetElement(
(const TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])
,(const char*)G__int(libp->para[6]));
      break;
   case 6:
      p = new TDSetElement(
(const TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5]));
      break;
   case 5:
      p = new TDSetElement(
(const TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]));
      break;
   case 4:
      p = new TDSetElement(
(const TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3]));
      break;
   case 3:
      p = new TDSetElement(
(const TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TDSetElement((const TDSet*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TDSetElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->AddPfn((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->AddPfn((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->AddPfn((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSetElement*)(G__getstructoffset()))->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSetElement*)(G__getstructoffset()))->GetFirstPfnElement());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TDSetElement*)(G__getstructoffset()))->GetFirst());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->SetFirst((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TDSetElement*)(G__getstructoffset()))->GetNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSetElement*)(G__getstructoffset()))->GetMsd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->SetNum((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TDSetElement*)(G__getstructoffset()))->GetValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSetElement*)(G__getstructoffset()))->GetNumPfnList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSetElement*)(G__getstructoffset()))->GetObjName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TDSetElement*)(G__getstructoffset()))->GetDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TDSetElement*)(G__getstructoffset()))->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDSetElement*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDSetElement*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TDSetElement*)(G__getstructoffset()))->GetTDSetOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->SetTDSetOffset((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSetElement*)(G__getstructoffset()))->GetEventList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->SetEventList((TEventList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->Validate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->Validate((TDSetElement*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDSetElement*)(G__getstructoffset()))->Compare((const TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TDSetElement*)(G__getstructoffset()))->IsSortable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDSetElement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetElement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDSetElement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDSetElement::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDSetElement*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDSetElement*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetElement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSetElement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDSetElement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_135_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDSetElement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_135_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TDSetElement *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TDSetElement(*(TDSetElement*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TDSetElement);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSetElement G__TTDSetElement;
static int G__G__Tree_135_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDSetElement *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDSetElement *)((G__getstructoffset())+sizeof(TDSetElement)*i);
   else  delete (TDSetElement *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVirtualIndex */
static int G__G__Tree_171_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualIndex*)(G__getstructoffset()))->GetEntryNumberFriend((const TTree*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TVirtualIndex*)(G__getstructoffset()))->GetEntryNumberWithIndex((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TVirtualIndex*)(G__getstructoffset()))->GetEntryNumberWithBestIndex((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TVirtualIndex*)(G__getstructoffset()))->GetMajorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TVirtualIndex*)(G__getstructoffset()))->GetMinorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TVirtualIndex*)(G__getstructoffset()))->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualIndex*)(G__getstructoffset()))->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualIndex*)(G__getstructoffset()))->SetTree((const TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVirtualIndex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualIndex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TVirtualIndex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TVirtualIndex::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualIndex*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualIndex*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualIndex*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualIndex*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualIndex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualIndex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualIndex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_171_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualIndex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVirtualIndex G__TTVirtualIndex;
static int G__G__Tree_171_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TVirtualIndex *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TVirtualIndex *)((G__getstructoffset())+sizeof(TVirtualIndex)*i);
   else  delete (TVirtualIndex *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_171_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVirtualIndex *dest = (TVirtualIndex*)(G__getstructoffset());
   *dest = (*(TVirtualIndex*)libp->para[0].ref);
   const TVirtualIndex& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVirtualTreePlayer */
static int G__G__Tree_172_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->BuildIndex((const TTree*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->DrawScript((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->DrawSelect((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->Fit(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])
,(Long64_t)G__Longlong(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetDimension());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetNfill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetSelectedRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetSelect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetVar1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetVar2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetVar3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetVar4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetV1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetV2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetV3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetV4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->GetW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->MakeClass((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->MakeCode((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,105,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->Principal());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TVirtualTreePlayer*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualTreePlayer*)(G__getstructoffset()))->SetEstimate((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualTreePlayer*)(G__getstructoffset()))->SetTree((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualTreePlayer*)(G__getstructoffset()))->StartViewer((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TVirtualTreePlayer*)(G__getstructoffset()))->UnbinnedFit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualTreePlayer*)(G__getstructoffset()))->UpdateFormulaLeaves();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVirtualTreePlayer::GetCurrentPlayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVirtualTreePlayer::TreePlayer((TTree*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TVirtualTreePlayer::SetPlayer((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVirtualTreePlayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualTreePlayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TVirtualTreePlayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TVirtualTreePlayer::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualTreePlayer*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualTreePlayer*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualTreePlayer*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualTreePlayer*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualTreePlayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualTreePlayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualTreePlayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_172_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualTreePlayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVirtualTreePlayer G__TTVirtualTreePlayer;
static int G__G__Tree_172_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TVirtualTreePlayer *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TVirtualTreePlayer *)((G__getstructoffset())+sizeof(TVirtualTreePlayer)*i);
   else  delete (TVirtualTreePlayer *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_172_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVirtualTreePlayer *dest = (TVirtualTreePlayer*)(G__getstructoffset());
   *dest = (*(TVirtualTreePlayer*)libp->para[0].ref);
   const TVirtualTreePlayer& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TBranch */
static int G__G__Tree_173_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranch *p=NULL;
   if(G__getaryconstruct()) p=new TBranch[G__getaryconstruct()];
   else                    p=new TBranch;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranch);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranch *p=NULL;
   switch(libp->paran) {
   case 5:
      p = new TBranch(
(const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TBranch(
(const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TBranch(
(const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranch);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->DropBaskets((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->DropBaskets();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBranch*)(G__getstructoffset()))->Fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->FillLeaves(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TBranch*)(G__getstructoffset()))->FindBranch((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TBranch*)(G__getstructoffset()))->FindLeaf((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TBranch*)(G__getstructoffset()))->GetAddress());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranch*)(G__getstructoffset()))->GetBasketSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TBranch*)(G__getstructoffset()))->GetClassName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranch*)(G__getstructoffset()))->GetCompressionLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TBranch*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TBranch*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TBranch*)(G__getstructoffset()))->GetEntry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBranch*)(G__getstructoffset()))->GetEntryExport((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TClonesArray*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((TBranch*)(G__getstructoffset()))->GetEvent((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TBranch*)(G__getstructoffset()))->GetEvent());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranch*)(G__getstructoffset()))->GetEntryOffsetLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TBranch*)(G__getstructoffset()))->GetIconName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranch*)(G__getstructoffset()))->GetLeaf((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TBranch*)(G__getstructoffset()))->GetBasket((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TBranch*)(G__getstructoffset()))->GetBasketBytes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,78,(long)((const TBranch*)(G__getstructoffset()))->GetBasketEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TBranch*)(G__getstructoffset()))->GetBasketSeek((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TBranch*)(G__getstructoffset()))->GetBrowsables());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranch*)(G__getstructoffset()))->GetDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TBranch*)(G__getstructoffset()))->GetFile((Int_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TBranch*)(G__getstructoffset()))->GetFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TBranch*)(G__getstructoffset()))->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranch*)(G__getstructoffset()))->GetOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranch*)(G__getstructoffset()))->GetReadBasket());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TBranch*)(G__getstructoffset()))->GetReadEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranch*)(G__getstructoffset()))->GetWriteBasket());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TBranch*)(G__getstructoffset()))->GetTotalSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TBranch*)(G__getstructoffset()))->GetTotBytes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TBranch*)(G__getstructoffset()))->GetZipBytes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TBranch*)(G__getstructoffset()))->GetEntryNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TBranch*)(G__getstructoffset()))->GetListOfBaskets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TBranch*)(G__getstructoffset()))->GetListOfBranches());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TBranch*)(G__getstructoffset()))->GetListOfLeaves());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranch*)(G__getstructoffset()))->GetMaxBaskets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranch*)(G__getstructoffset()))->GetNleaves());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranch*)(G__getstructoffset()))->GetSplitLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TBranch*)(G__getstructoffset()))->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranch*)(G__getstructoffset()))->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBranch*)(G__getstructoffset()))->GetRow((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranch*)(G__getstructoffset()))->GetMother());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranch*)(G__getstructoffset()))->GetSubBranch((const TBranch*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TBranch*)(G__getstructoffset()))->IsAutoDelete());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TBranch*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->KeepCircular((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBranch*)(G__getstructoffset()))->LoadBaskets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TBranch*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TBranch*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->ReadBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->ReadLeaves(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->Refresh((TBranch*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->Reset((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->Reset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->ResetAddress();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->ResetReadEntry();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetAutoDelete((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetAutoDelete();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetBasketSize((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetBufferAddress((TBuffer*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetCompressionLevel((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetCompressionLevel();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetEntryOffsetLen((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetFile((TFile*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetFile();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetFile((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetOffset((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetOffset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->SetTree((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->UpdateAddress();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TBranch::ResetCount();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TBranch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TBranch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TBranch::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranch*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranch*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBranch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_173_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBranch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TBranch G__TTBranch;
static int G__G__Tree_173_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TBranch *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TBranch *)((G__getstructoffset())+sizeof(TBranch)*i);
   else  delete (TBranch *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TBasket */
static int G__G__Tree_174_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBasket *p=NULL;
   if(G__getaryconstruct()) p=new TBasket[G__getaryconstruct()];
   else                    p=new TBasket;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBasket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBasket *p=NULL;
      p = new TBasket(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(TBranch*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBasket);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->AdjustSize((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->DeleteEntryOffset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBasket*)(G__getstructoffset()))->DropBuffers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBasket*)(G__getstructoffset()))->GetBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBasket*)(G__getstructoffset()))->GetBufferSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TBasket*)(G__getstructoffset()))->GetDisplacement());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TBasket*)(G__getstructoffset()))->GetEntryOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBasket*)(G__getstructoffset()))->GetEntryPointer((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBasket*)(G__getstructoffset()))->GetNevBuf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBasket*)(G__getstructoffset()))->GetNevBufSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBasket*)(G__getstructoffset()))->GetLast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->MoveEntries((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBasket*)(G__getstructoffset()))->ReadBasketBuffers((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TFile*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBasket*)(G__getstructoffset()))->ReadBasketBytes((Long64_t)G__Longlong(libp->para[0]),(TFile*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->SetBranch((TBranch*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->SetNevBufSize((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->SetReadMode();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->SetWriteMode();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->Update((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->Update((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBasket*)(G__getstructoffset()))->WriteBuffer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TBasket::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBasket::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TBasket::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TBasket::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBasket*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBasket*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBasket::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBasket::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBasket::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_174_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBasket::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_174_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TBasket *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TBasket(*(TBasket*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBasket);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TBasket G__TTBasket;
static int G__G__Tree_174_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TBasket *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TBasket *)((G__getstructoffset())+sizeof(TBasket)*i);
   else  delete (TBasket *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_174_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBasket *dest = (TBasket*)(G__getstructoffset());
   *dest = (*(TBasket*)libp->para[0].ref);
   const TBasket& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLeaf */
static int G__G__Tree_179_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeaf *p=NULL;
   if(G__getaryconstruct()) p=new TLeaf[G__getaryconstruct()];
   else                    p=new TLeaf;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeaf);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeaf *p=NULL;
      p = new TLeaf((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeaf);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->Export((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->FillBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeaf*)(G__getstructoffset()))->GetBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeaf*)(G__getstructoffset()))->GetLeafCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeaf*)(G__getstructoffset()))->GetLeafCounter(*(Int_t*)G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeaf*)(G__getstructoffset()))->GetLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeaf*)(G__getstructoffset()))->GetLenStatic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeaf*)(G__getstructoffset()))->GetLenType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeaf*)(G__getstructoffset()))->GetMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeaf*)(G__getstructoffset()))->GetMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeaf*)(G__getstructoffset()))->GetNdata());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeaf*)(G__getstructoffset()))->GetOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TLeaf*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeaf*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((const TLeaf*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((const TLeaf*)(G__getstructoffset()))->GetValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->Import((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TLeaf*)(G__getstructoffset()))->IsOnTerminalBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TLeaf*)(G__getstructoffset()))->IsRange());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TLeaf*)(G__getstructoffset()))->IsUnsigned());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TLeaf*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TLeaf*)(G__getstructoffset()))->PrintValue();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->ReadBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->ReadBasketExport(*(TBuffer*)libp->para[0].ref,(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->ReadValue(*(ifstream*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TLeaf*)(G__getstructoffset()))->ResetAddress((void*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TLeaf*)(G__getstructoffset()))->ResetAddress((void*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->SetAddress();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->SetBranch((TBranch*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->SetLeafCount((TLeaf*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->SetLen((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->SetLen();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->SetOffset((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->SetOffset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->SetRange((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->SetRange();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->SetUnsigned();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLeaf::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeaf::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLeaf::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLeaf::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeaf*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeaf*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeaf::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeaf::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeaf::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_179_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeaf::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_179_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLeaf *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLeaf(*(TLeaf*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeaf);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLeaf G__TTLeaf;
static int G__G__Tree_179_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLeaf *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLeaf *)((G__getstructoffset())+sizeof(TLeaf)*i);
   else  delete (TLeaf *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_179_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeaf *dest = (TLeaf*)(G__getstructoffset());
   *dest = (*(TLeaf*)libp->para[0].ref);
   const TLeaf& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLeafS */
static int G__G__Tree_188_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafS *p=NULL;
   if(G__getaryconstruct()) p=new TLeafS[G__getaryconstruct()];
   else                    p=new TLeafS;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafS);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafS *p=NULL;
      p = new TLeafS((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafS);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafS*)(G__getstructoffset()))->Export((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafS*)(G__getstructoffset()))->FillBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeafS*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((const TLeafS*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((const TLeafS*)(G__getstructoffset()))->GetValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TLeafS*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafS*)(G__getstructoffset()))->Import((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TLeafS*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TLeafS*)(G__getstructoffset()))->PrintValue();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafS*)(G__getstructoffset()))->ReadBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafS*)(G__getstructoffset()))->ReadBasketExport(*(TBuffer*)libp->para[0].ref,(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafS*)(G__getstructoffset()))->ReadValue(*(ifstream*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeafS*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeafS*)(G__getstructoffset()))->SetAddress();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLeafS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLeafS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLeafS::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafS*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafS*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafS*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafS*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_188_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_188_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLeafS *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLeafS(*(TLeafS*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafS);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLeafS G__TTLeafS;
static int G__G__Tree_188_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLeafS *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLeafS *)((G__getstructoffset())+sizeof(TLeafS)*i);
   else  delete (TLeafS *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_188_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafS *dest = (TLeafS*)(G__getstructoffset());
   *dest = (*(TLeafS*)libp->para[0].ref);
   const TLeafS& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSelectorCint */
static int G__G__Tree_190_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSelectorCint *p=NULL;
   if(G__getaryconstruct()) p=new TSelectorCint[G__getaryconstruct()];
   else                    p=new TSelectorCint;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TSelectorCint);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->Build((TSelector*)G__int(libp->para[0]),(G__ClassInfo*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSelectorCint*)(G__getstructoffset()))->Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->Init((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->Begin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->SlaveBegin((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TSelectorCint*)(G__getstructoffset()))->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TSelectorCint*)(G__getstructoffset()))->ProcessCut((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->ProcessFill((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TSelectorCint*)(G__getstructoffset()))->Process((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->SetOption((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->SetObject((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->SetInputList((TList*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSelectorCint*)(G__getstructoffset()))->GetOutputList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->SlaveTerminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->Terminate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSelectorCint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSelectorCint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSelectorCint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSelectorCint::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSelectorCint*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorCint*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSelectorCint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSelectorCint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSelectorCint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_190_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSelectorCint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_190_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TSelectorCint *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TSelectorCint(*(TSelectorCint*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TSelectorCint);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSelectorCint G__TTSelectorCint;
static int G__G__Tree_190_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSelectorCint *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSelectorCint *)((G__getstructoffset())+sizeof(TSelectorCint)*i);
   else  delete (TSelectorCint *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_190_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSelectorCint *dest = (TSelectorCint*)(G__getstructoffset());
   *dest = (*(TSelectorCint*)libp->para[0].ref);
   const TSelectorCint& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TBranchObject */
static int G__G__Tree_191_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranchObject *p=NULL;
   if(G__getaryconstruct()) p=new TBranchObject[G__getaryconstruct()];
   else                    p=new TBranchObject;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranchObject);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranchObject *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TBranchObject(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TBranchObject(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TBranchObject(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TBranchObject(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranchObject);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchObject*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBranchObject*)(G__getstructoffset()))->Fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TBranchObject*)(G__getstructoffset()))->GetClassName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TBranchObject*)(G__getstructoffset()))->GetObjClassName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TBranchObject*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TBranchObject*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TBranchObject*)(G__getstructoffset()))->GetEntry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TBranchObject*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TBranchObject*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TBranchObject*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranchObject*)(G__getstructoffset()))->Reset((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranchObject*)(G__getstructoffset()))->Reset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchObject*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranchObject*)(G__getstructoffset()))->SetAutoDelete((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranchObject*)(G__getstructoffset()))->SetAutoDelete();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchObject*)(G__getstructoffset()))->SetBasketSize((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchObject*)(G__getstructoffset()))->UpdateAddress();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TBranchObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TBranchObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TBranchObject::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranchObject*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchObject*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchObject*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchObject*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBranchObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_191_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBranchObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TBranchObject G__TTBranchObject;
static int G__G__Tree_191_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TBranchObject *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TBranchObject *)((G__getstructoffset())+sizeof(TBranchObject)*i);
   else  delete (TBranchObject *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTreeResult */
static int G__G__Tree_194_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTreeResult *p=NULL;
   if(G__getaryconstruct()) p=new TTreeResult[G__getaryconstruct()];
   else                    p=new TTreeResult;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TTreeResult);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTreeResult *p=NULL;
      p = new TTreeResult((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TTreeResult);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTreeResult*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTreeResult*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TTreeResult*)(G__getstructoffset()))->GetFieldCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TTreeResult*)(G__getstructoffset()))->GetFieldName((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTreeResult*)(G__getstructoffset()))->GetRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTreeResult*)(G__getstructoffset()))->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TTreeResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTreeResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TTreeResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TTreeResult::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTreeResult*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTreeResult*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTreeResult*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTreeResult*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTreeResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTreeResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTreeResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_194_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTreeResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_194_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TTreeResult *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TTreeResult(*(TTreeResult*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TTreeResult);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTreeResult G__TTTreeResult;
static int G__G__Tree_194_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TTreeResult *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TTreeResult *)((G__getstructoffset())+sizeof(TTreeResult)*i);
   else  delete (TTreeResult *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_194_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTreeResult *dest = (TTreeResult*)(G__getstructoffset());
   *dest = (*(TTreeResult*)libp->para[0].ref);
   const TTreeResult& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLeafI */
static int G__G__Tree_196_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafI *p=NULL;
   if(G__getaryconstruct()) p=new TLeafI[G__getaryconstruct()];
   else                    p=new TLeafI;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafI);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafI *p=NULL;
      p = new TLeafI((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafI);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->Export((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->FillBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeafI*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeafI*)(G__getstructoffset()))->GetMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeafI*)(G__getstructoffset()))->GetMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((const TLeafI*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((const TLeafI*)(G__getstructoffset()))->GetValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TLeafI*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->Import((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TLeafI*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TLeafI*)(G__getstructoffset()))->PrintValue();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->ReadBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->ReadBasketExport(*(TBuffer*)libp->para[0].ref,(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->ReadValue(*(ifstream*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->SetAddress();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->SetMaximum((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->SetMinimum((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLeafI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLeafI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLeafI::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafI*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafI*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_196_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_196_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLeafI *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLeafI(*(TLeafI*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafI);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLeafI G__TTLeafI;
static int G__G__Tree_196_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLeafI *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLeafI *)((G__getstructoffset())+sizeof(TLeafI)*i);
   else  delete (TLeafI *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_196_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafI *dest = (TLeafI*)(G__getstructoffset());
   *dest = (*(TLeafI*)libp->para[0].ref);
   const TLeafI& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TBranchElement */
static int G__G__Tree_198_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranchElement *p=NULL;
   if(G__getaryconstruct()) p=new TBranchElement[G__getaryconstruct()];
   else                    p=new TBranchElement;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranchElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranchElement *p=NULL;
   switch(libp->paran) {
   case 7:
      p = new TBranchElement(
(const char*)G__int(libp->para[0]),(TStreamerInfo*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(char*)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])
,(Int_t)G__int(libp->para[6]));
      break;
   case 6:
      p = new TBranchElement(
(const char*)G__int(libp->para[0]),(TStreamerInfo*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(char*)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TBranchElement(
(const char*)G__int(libp->para[0]),(TStreamerInfo*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(char*)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TBranchElement(
(const char*)G__int(libp->para[0]),(TStreamerInfo*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(char*)G__int(libp->para[3]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranchElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranchElement *p=NULL;
   switch(libp->paran) {
   case 5:
      p = new TBranchElement(
(const char*)G__int(libp->para[0]),(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TBranchElement(
(const char*)G__int(libp->para[0]),(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TBranchElement(
(const char*)G__int(libp->para[0]),(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TBranchElement((const char*)G__int(libp->para[0]),(TClonesArray*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranchElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranchElement *p=NULL;
   switch(libp->paran) {
   case 5:
      p = new TBranchElement(
(const char*)G__int(libp->para[0]),(TVirtualCollectionProxy*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TBranchElement(
(const char*)G__int(libp->para[0]),(TVirtualCollectionProxy*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TBranchElement(
(const char*)G__int(libp->para[0]),(TVirtualCollectionProxy*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TBranchElement((const char*)G__int(libp->para[0]),(TVirtualCollectionProxy*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranchElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TBranchElement*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TBranchElement*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TBranchElement*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TBranchElement*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TBranchElement*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TBranchElement*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TBranchElement*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TBranchElement*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->BuildTitle((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBranchElement*)(G__getstructoffset()))->Fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->FillLeaves(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranchElement*)(G__getstructoffset()))->GetBranchCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranchElement*)(G__getstructoffset()))->GetBranchCount2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TBranchElement*)(G__getstructoffset()))->GetCheckSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TBranchElement*)(G__getstructoffset()))->GetClassName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TBranchElement*)(G__getstructoffset()))->GetClonesName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TBranchElement*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TBranchElement*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TBranchElement*)(G__getstructoffset()))->GetEntry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TBranchElement*)(G__getstructoffset()))->GetIconName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranchElement*)(G__getstructoffset()))->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TBranchElement*)(G__getstructoffset()))->GetInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TBranchElement*)(G__getstructoffset()))->GetObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TBranchElement*)(G__getstructoffset()))->GetParentName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranchElement*)(G__getstructoffset()))->GetMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranchElement*)(G__getstructoffset()))->GetNdata());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranchElement*)(G__getstructoffset()))->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranchElement*)(G__getstructoffset()))->GetStreamerType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TBranchElement*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letdouble(result7,100,(double)((const TBranchElement*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7,100,(double)((const TBranchElement*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TBranchElement*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TBranchElement*)(G__getstructoffset()))->IsBranchFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TBranchElement*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TBranchElement*)(G__getstructoffset()))->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TBranchElement*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TBranchElement*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TBranchElement*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->ReadLeaves(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->Reset((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->Reset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->ResetAddress();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->SetAutoDelete((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->SetAutoDelete();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->SetBasketSize((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->SetBranchCount((TBranchElement*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->SetBranchCount2((TBranchElement*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->SetBranchFolder();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->SetClassName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->SetParentName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->SetupAddresses();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->SetType((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBranchElement*)(G__getstructoffset()))->Unroll((const char*)G__int(libp->para[0]),(TClass*)G__int(libp->para[1])
,(TClass*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TBranchElement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchElement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TBranchElement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TBranchElement::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranchElement*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchElement*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchElement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBranchElement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchElement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_198_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBranchElement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TBranchElement G__TTBranchElement;
static int G__G__Tree_198_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TBranchElement *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TBranchElement *)((G__getstructoffset())+sizeof(TBranchElement)*i);
   else  delete (TBranchElement *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVirtualBranchBrowsable */
static int G__G__Tree_199_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualBranchBrowsable*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TVirtualBranchBrowsable*)(G__getstructoffset()))->GetIconName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TVirtualBranchBrowsable*)(G__getstructoffset()))->GetScope(*(TString*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVirtualBranchBrowsable*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)TVirtualBranchBrowsable::FillListOfBrowsables(*(TList*)libp->para[0].ref,(const TBranch*)G__int(libp->para[1])
,(const TVirtualBranchBrowsable*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)TVirtualBranchBrowsable::FillListOfBrowsables(*(TList*)libp->para[0].ref,(const TBranch*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualBranchBrowsable*)(G__getstructoffset()))->GetBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualBranchBrowsable*)(G__getstructoffset()))->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualBranchBrowsable*)(G__getstructoffset()))->GetClassType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVirtualBranchBrowsable*)(G__getstructoffset()))->TypeIsPointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualBranchBrowsable*)(G__getstructoffset()))->GetLeaves());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVirtualBranchBrowsable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualBranchBrowsable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TVirtualBranchBrowsable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TVirtualBranchBrowsable::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVirtualBranchBrowsable*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualBranchBrowsable*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualBranchBrowsable*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVirtualBranchBrowsable*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualBranchBrowsable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualBranchBrowsable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVirtualBranchBrowsable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_199_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVirtualBranchBrowsable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_199_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TVirtualBranchBrowsable *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TVirtualBranchBrowsable(*(TVirtualBranchBrowsable*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVirtualBranchBrowsable G__TTVirtualBranchBrowsable;
static int G__G__Tree_199_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TVirtualBranchBrowsable *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TVirtualBranchBrowsable *)((G__getstructoffset())+sizeof(TVirtualBranchBrowsable)*i);
   else  delete (TVirtualBranchBrowsable *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMethodBrowsable */
static int G__G__Tree_204_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)TMethodBrowsable::GetBrowsables(*(TList*)libp->para[0].ref,(const TBranch*)G__int(libp->para[1])
,(const TVirtualBranchBrowsable*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)TMethodBrowsable::GetBrowsables(*(TList*)libp->para[0].ref,(const TBranch*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TMethodBrowsable*)(G__getstructoffset()))->GetIconName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)TMethodBrowsable::IsMethodBrowsable((const TMethod*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMethodBrowsable::Register();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMethodBrowsable::Unregister();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMethodBrowsable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMethodBrowsable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMethodBrowsable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMethodBrowsable::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMethodBrowsable*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMethodBrowsable*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMethodBrowsable*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMethodBrowsable*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMethodBrowsable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMethodBrowsable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMethodBrowsable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_204_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMethodBrowsable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_204_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMethodBrowsable *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMethodBrowsable(*(TMethodBrowsable*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TMethodBrowsable);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMethodBrowsable G__TTMethodBrowsable;
static int G__G__Tree_204_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMethodBrowsable *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMethodBrowsable *)((G__getstructoffset())+sizeof(TMethodBrowsable)*i);
   else  delete (TMethodBrowsable *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TNonSplitBrowsable */
static int G__G__Tree_205_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)TNonSplitBrowsable::GetBrowsables(*(TList*)libp->para[0].ref,(const TBranch*)G__int(libp->para[1])
,(const TVirtualBranchBrowsable*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)TNonSplitBrowsable::GetBrowsables(*(TList*)libp->para[0].ref,(const TBranch*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TNonSplitBrowsable::Register();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TNonSplitBrowsable::Unregister();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TNonSplitBrowsable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNonSplitBrowsable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TNonSplitBrowsable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TNonSplitBrowsable::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNonSplitBrowsable*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNonSplitBrowsable*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNonSplitBrowsable*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNonSplitBrowsable*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNonSplitBrowsable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNonSplitBrowsable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNonSplitBrowsable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_205_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNonSplitBrowsable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_205_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TNonSplitBrowsable *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TNonSplitBrowsable(*(TNonSplitBrowsable*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TNonSplitBrowsable);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TNonSplitBrowsable G__TTNonSplitBrowsable;
static int G__G__Tree_205_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TNonSplitBrowsable *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TNonSplitBrowsable *)((G__getstructoffset())+sizeof(TNonSplitBrowsable)*i);
   else  delete (TNonSplitBrowsable *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCollectionPropertyBrowsable */
static int G__G__Tree_206_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCollectionPropertyBrowsable*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)TCollectionPropertyBrowsable::GetBrowsables(*(TList*)libp->para[0].ref,(const TBranch*)G__int(libp->para[1])
,(const TVirtualBranchBrowsable*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)TCollectionPropertyBrowsable::GetBrowsables(*(TList*)libp->para[0].ref,(const TBranch*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TCollectionPropertyBrowsable*)(G__getstructoffset()))->GetDraw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCollectionPropertyBrowsable::Register();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCollectionPropertyBrowsable::Unregister();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCollectionPropertyBrowsable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCollectionPropertyBrowsable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCollectionPropertyBrowsable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCollectionPropertyBrowsable::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCollectionPropertyBrowsable*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCollectionPropertyBrowsable*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCollectionPropertyBrowsable*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCollectionPropertyBrowsable*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCollectionPropertyBrowsable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCollectionPropertyBrowsable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCollectionPropertyBrowsable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_206_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCollectionPropertyBrowsable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_206_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TCollectionPropertyBrowsable *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TCollectionPropertyBrowsable(*(TCollectionPropertyBrowsable*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TCollectionPropertyBrowsable);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCollectionPropertyBrowsable G__TTCollectionPropertyBrowsable;
static int G__G__Tree_206_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCollectionPropertyBrowsable *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCollectionPropertyBrowsable *)((G__getstructoffset())+sizeof(TCollectionPropertyBrowsable)*i);
   else  delete (TCollectionPropertyBrowsable *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCollectionMethodBrowsable */
static int G__G__Tree_207_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)TCollectionMethodBrowsable::GetBrowsables(*(TList*)libp->para[0].ref,(const TBranch*)G__int(libp->para[1])
,(const TVirtualBranchBrowsable*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)TCollectionMethodBrowsable::GetBrowsables(*(TList*)libp->para[0].ref,(const TBranch*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCollectionMethodBrowsable::Register();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCollectionMethodBrowsable::Unregister();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCollectionMethodBrowsable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCollectionMethodBrowsable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCollectionMethodBrowsable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCollectionMethodBrowsable::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCollectionMethodBrowsable*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCollectionMethodBrowsable*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCollectionMethodBrowsable*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCollectionMethodBrowsable*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCollectionMethodBrowsable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCollectionMethodBrowsable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCollectionMethodBrowsable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_207_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCollectionMethodBrowsable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_207_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TCollectionMethodBrowsable *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TCollectionMethodBrowsable(*(TCollectionMethodBrowsable*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TCollectionMethodBrowsable);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCollectionMethodBrowsable G__TTCollectionMethodBrowsable;
static int G__G__Tree_207_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCollectionMethodBrowsable *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCollectionMethodBrowsable *)((G__getstructoffset())+sizeof(TCollectionMethodBrowsable)*i);
   else  delete (TCollectionMethodBrowsable *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLeafF */
static int G__G__Tree_208_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafF *p=NULL;
   if(G__getaryconstruct()) p=new TLeafF[G__getaryconstruct()];
   else                    p=new TLeafF;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafF *p=NULL;
      p = new TLeafF((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafF*)(G__getstructoffset()))->Export((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafF*)(G__getstructoffset()))->FillBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeafF*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((const TLeafF*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((const TLeafF*)(G__getstructoffset()))->GetValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TLeafF*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafF*)(G__getstructoffset()))->Import((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TLeafF*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TLeafF*)(G__getstructoffset()))->PrintValue();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafF*)(G__getstructoffset()))->ReadBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafF*)(G__getstructoffset()))->ReadBasketExport(*(TBuffer*)libp->para[0].ref,(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafF*)(G__getstructoffset()))->ReadValue(*(ifstream*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeafF*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeafF*)(G__getstructoffset()))->SetAddress();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLeafF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLeafF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLeafF::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafF*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafF*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafF*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafF*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_208_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_208_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLeafF *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLeafF(*(TLeafF*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafF);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLeafF G__TTLeafF;
static int G__G__Tree_208_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLeafF *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLeafF *)((G__getstructoffset())+sizeof(TLeafF)*i);
   else  delete (TLeafF *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_208_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafF *dest = (TLeafF*)(G__getstructoffset());
   *dest = (*(TLeafF*)libp->para[0].ref);
   const TLeafF& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLeafD */
static int G__G__Tree_209_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafD *p=NULL;
   if(G__getaryconstruct()) p=new TLeafD[G__getaryconstruct()];
   else                    p=new TLeafD;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafD *p=NULL;
      p = new TLeafD((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafD*)(G__getstructoffset()))->Export((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafD*)(G__getstructoffset()))->FillBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeafD*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((const TLeafD*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((const TLeafD*)(G__getstructoffset()))->GetValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TLeafD*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafD*)(G__getstructoffset()))->Import((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TLeafD*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TLeafD*)(G__getstructoffset()))->PrintValue();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafD*)(G__getstructoffset()))->ReadBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafD*)(G__getstructoffset()))->ReadBasketExport(*(TBuffer*)libp->para[0].ref,(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafD*)(G__getstructoffset()))->ReadValue(*(ifstream*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeafD*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeafD*)(G__getstructoffset()))->SetAddress();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLeafD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLeafD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLeafD::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafD*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafD*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafD*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafD*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_209_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_209_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLeafD *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLeafD(*(TLeafD*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafD);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLeafD G__TTLeafD;
static int G__G__Tree_209_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLeafD *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLeafD *)((G__getstructoffset())+sizeof(TLeafD)*i);
   else  delete (TLeafD *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_209_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafD *dest = (TLeafD*)(G__getstructoffset());
   *dest = (*(TLeafD*)libp->para[0].ref);
   const TLeafD& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTreeRow */
static int G__G__Tree_210_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTreeRow *p=NULL;
   if(G__getaryconstruct()) p=new TTreeRow[G__getaryconstruct()];
   else                    p=new TTreeRow;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TTreeRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTreeRow *p=NULL;
      p = new TTreeRow((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TTreeRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTreeRow *p=NULL;
      p = new TTreeRow(
(Int_t)G__int(libp->para[0]),(const Int_t*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TTreeRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTreeRow*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTreeRow*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((TTreeRow*)(G__getstructoffset()))->GetFieldLength((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TTreeRow*)(G__getstructoffset()))->GetField((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTreeRow*)(G__getstructoffset()))->SetRow((const Int_t*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TTreeRow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTreeRow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TTreeRow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TTreeRow::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTreeRow*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTreeRow*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTreeRow*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTreeRow*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTreeRow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTreeRow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTreeRow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_210_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTreeRow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_210_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TTreeRow *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TTreeRow(*(TTreeRow*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TTreeRow);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTreeRow G__TTTreeRow;
static int G__G__Tree_210_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TTreeRow *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TTreeRow *)((G__getstructoffset())+sizeof(TTreeRow)*i);
   else  delete (TTreeRow *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_210_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTreeRow *dest = (TTreeRow*)(G__getstructoffset());
   *dest = (*(TTreeRow*)libp->para[0].ref);
   const TTreeRow& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFriendElement */
static int G__G__Tree_219_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFriendElement *p=NULL;
   if(G__getaryconstruct()) p=new TFriendElement[G__getaryconstruct()];
   else                    p=new TFriendElement;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TFriendElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFriendElement *p=NULL;
      p = new TFriendElement(
(TTree*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TFriendElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFriendElement *p=NULL;
      p = new TFriendElement(
(TTree*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(TFile*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TFriendElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFriendElement *p=NULL;
      p = new TFriendElement(
(TTree*)G__int(libp->para[0]),(TTree*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TFriendElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TFriendElement*)(G__getstructoffset()))->Connect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TFriendElement*)(G__getstructoffset()))->DisConnect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TFriendElement*)(G__getstructoffset()))->GetFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TFriendElement*)(G__getstructoffset()))->GetParentTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TFriendElement*)(G__getstructoffset()))->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TFriendElement*)(G__getstructoffset()))->GetTreeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TFriendElement*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TFriendElement*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TFriendElement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFriendElement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TFriendElement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TFriendElement::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TFriendElement*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFriendElement*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFriendElement*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFriendElement*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFriendElement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFriendElement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFriendElement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_219_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFriendElement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_219_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TFriendElement *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TFriendElement(*(TFriendElement*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TFriendElement);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFriendElement G__TTFriendElement;
static int G__G__Tree_219_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TFriendElement *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TFriendElement *)((G__getstructoffset())+sizeof(TFriendElement)*i);
   else  delete (TFriendElement *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_219_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFriendElement *dest = (TFriendElement*)(G__getstructoffset());
   *dest = (*(TFriendElement*)libp->para[0].ref);
   const TFriendElement& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TBranchRef */
static int G__G__Tree_220_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranchRef *p=NULL;
   if(G__getaryconstruct()) p=new TBranchRef[G__getaryconstruct()];
   else                    p=new TBranchRef;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranchRef);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranchRef *p=NULL;
      p = new TBranchRef((TTree*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranchRef);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranchRef*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranchRef*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBranchRef*)(G__getstructoffset()))->Fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchRef*)(G__getstructoffset()))->FillLeaves(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranchRef*)(G__getstructoffset()))->GetRefTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TBranchRef*)(G__getstructoffset()))->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TBranchRef*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TBranchRef*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchRef*)(G__getstructoffset()))->ReadLeaves(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranchRef*)(G__getstructoffset()))->Reset((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranchRef*)(G__getstructoffset()))->Reset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchRef*)(G__getstructoffset()))->SetParent((const TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchRef*)(G__getstructoffset()))->SetReadEntry((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TBranchRef::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchRef::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TBranchRef::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TBranchRef::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranchRef*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchRef*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchRef*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchRef*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchRef::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBranchRef::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchRef::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_220_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBranchRef::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TBranchRef G__TTBranchRef;
static int G__G__Tree_220_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TBranchRef *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TBranchRef *)((G__getstructoffset())+sizeof(TBranchRef)*i);
   else  delete (TBranchRef *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTreeFriendLeafIter */
static int G__G__Tree_223_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTreeFriendLeafIter *p=NULL;
   switch(libp->paran) {
   case 2:
      p = ::new((G__treedIsrcdIG__TreedOcxx_tag*)G__getgvp()) TTreeFriendLeafIter((const TTree*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      p = ::new((G__treedIsrcdIG__TreedOcxx_tag*)G__getgvp()) TTreeFriendLeafIter((const TTree*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TTreeFriendLeafIter);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTreeFriendLeafIter *p=NULL;
      p=::new((G__treedIsrcdIG__TreedOcxx_tag*)G__getgvp()) TTreeFriendLeafIter(*(TTreeFriendLeafIter*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TTreeFriendLeafIter);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TIterator& obj=((TTreeFriendLeafIter*)(G__getstructoffset()))->operator=(*(TIterator*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TTreeFriendLeafIter& obj=((TTreeFriendLeafIter*)(G__getstructoffset()))->operator=(*(TTreeFriendLeafIter*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTreeFriendLeafIter*)(G__getstructoffset()))->GetCollection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TTreeFriendLeafIter*)(G__getstructoffset()))->GetOption());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TTreeFriendLeafIter*)(G__getstructoffset()))->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTreeFriendLeafIter*)(G__getstructoffset()))->Reset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TTreeFriendLeafIter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTreeFriendLeafIter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TTreeFriendLeafIter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TTreeFriendLeafIter::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTreeFriendLeafIter*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTreeFriendLeafIter*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTreeFriendLeafIter*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTreeFriendLeafIter*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTreeFriendLeafIter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTreeFriendLeafIter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTreeFriendLeafIter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_223_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTreeFriendLeafIter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTreeFriendLeafIter G__TTTreeFriendLeafIter;
static int G__G__Tree_223_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TTreeFriendLeafIter *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TTreeFriendLeafIter *)((G__getstructoffset())+sizeof(TTreeFriendLeafIter)*i))->~G__TTTreeFriendLeafIter();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TTreeFriendLeafIter *)(G__getstructoffset()))->~G__TTTreeFriendLeafIter();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TChainProof */
static int G__G__Tree_225_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TChainProof *p=NULL;
      p = new TChainProof((TDSet*)G__int(libp->para[0]),(TTree*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TChainProof);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->AddFriend((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->AddFriend((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->AddFriend((const char*)G__int(libp->para[0]),(TFile*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->AddFriend((TTree*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->AddFriend((TTree*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->AddFriend((TTree*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->AddTotBytes((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->AddZipBytes((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->AutoSave((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->AutoSave());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->Branch((TCollection*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->Branch((TCollection*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->Branch((TCollection*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->Branch((TCollection*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->Branch((TList*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->Branch((TList*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->Branch((TList*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(TClonesArray**)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(TClonesArray**)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Branch((const char*)G__int(libp->para[0]),(TClonesArray**)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Bronch((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Bronch((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Bronch((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->BranchOld((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->BranchOld((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->BranchOld((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(void*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->BranchRef());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->BuildIndex((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->BuildIndex((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->BuildStreamerInfo((TClass*)G__int(libp->para[0]),(void*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->BuildStreamerInfo((TClass*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->CloneTree((Long64_t)G__Longlong(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->CloneTree((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->CloneTree());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->CopyAddresses((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->CopyEntries((TTree*)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->CopyEntries((TTree*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->CopyTree((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChainProof*)(G__getstructoffset()))->Debug());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Delete((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Delete();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->DropBuffers((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->Fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->FindBranch((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->FindLeaf((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 7:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Fit(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])
,(Long64_t)G__Longlong(libp->para[6])));
      break;
   case 6:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Fit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Fit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Fit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Fit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Fit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TChainProof*)(G__getstructoffset()))->GetAlias((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetBranch((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChainProof*)(G__getstructoffset()))->GetBranchRef());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TChainProof*)(G__getstructoffset()))->GetBranchStatus((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TChainProof::GetBranchStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetChainEntryNumber((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetChainOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChainProof*)(G__getstructoffset()))->GetCurrentFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetDebugMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetDebugMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChainProof*)(G__getstructoffset()))->GetDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetEntriesFast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetEntriesFriend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetEstimate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->GetEntry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->GetEvent((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->GetEvent((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->GetEvent());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->GetEntryWithIndex((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->GetEntryWithIndex((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetEntryNumberWithBestIndex((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetEntryNumberWithBestIndex((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetEntryNumberWithIndex((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetEntryNumberWithIndex((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetEntryNumber((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChainProof*)(G__getstructoffset()))->GetFileNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TChainProof*)(G__getstructoffset()))->GetFriendAlias((TTree*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TChainProof*)(G__getstructoffset()))->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TChainProof*)(G__getstructoffset()))->GetIndexValues());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetIteratorOnAllLeaves((Bool_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetIteratorOnAllLeaves());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetLeaf((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetListOfClones());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetListOfBranches());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetListOfLeaves());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChainProof*)(G__getstructoffset()))->GetListOfFriends());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChainProof*)(G__getstructoffset()))->GetListOfAliases());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChainProof*)(G__getstructoffset()))->GetMakeClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetMaxEntryLoop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TChainProof*)(G__getstructoffset()))->GetMaximum((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)TChainProof::GetMaxTreeSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetMaxVirtualSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TChainProof*)(G__getstructoffset()))->GetMinimum((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->GetNbranches());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChainProof*)(G__getstructoffset()))->GetNotify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetPlayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChainProof*)(G__getstructoffset()))->GetPacketSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChainProof*)(G__getstructoffset()))->GetProof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetReadEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetReadEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChainProof*)(G__getstructoffset()))->GetScanField());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetSelect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->GetSelectedRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChainProof*)(G__getstructoffset()))->GetTimerInterval());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetTotBytes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChainProof*)(G__getstructoffset()))->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChainProof*)(G__getstructoffset()))->GetTreeIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChainProof*)(G__getstructoffset()))->GetTreeNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChainProof*)(G__getstructoffset()))->GetUpdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetUserInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetVar1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetVar2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetVar3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->GetVar4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TChainProof*)(G__getstructoffset()))->GetV1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TChainProof*)(G__getstructoffset()))->GetV2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TChainProof*)(G__getstructoffset()))->GetV3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TChainProof*)(G__getstructoffset()))->GetV4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TChainProof*)(G__getstructoffset()))->GetW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TChainProof*)(G__getstructoffset()))->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((const TChainProof*)(G__getstructoffset()))->GetZipBytes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->IncrementTotalBuffers((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TChainProof*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->LoadBaskets((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->LoadBaskets());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->LoadTree((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->LoadTreeFriend((Long64_t)G__Longlong(libp->para[0]),(TTree*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeClass((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeClass((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeClass());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeCode((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeCode());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeProxy((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeSelector((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TChainProof*)(G__getstructoffset()))->MakeSelector());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TChainProof*)(G__getstructoffset()))->MemoryFull((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Merge((TCollection*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TChainProof::MergeTrees((TList*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TChainProof*)(G__getstructoffset()))->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Principal((const char*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Principal());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TChainProof*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TChainProof*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Process((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Progress((Long64_t)G__Longlong(libp->para[0]),(Long64_t)G__Longlong(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Process((TSelector*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Project((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Project((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Project((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Project((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Project((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TChainProof*)(G__getstructoffset()))->Query());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->ReadFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->ReadFile((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Refresh();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->RemoveFriend((TTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Reset((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Reset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->ResetBranchAddresses();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]),(Long64_t)G__Longlong(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Scan((const char*)G__int(libp->para[0])));
      break;
   case 0:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->Scan());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TChainProof*)(G__getstructoffset()))->SetAlias((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetAutoSave((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetAutoSave();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetBasketSize((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetBasketSize((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetBranchAddress((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(TClass*)G__int(libp->para[2]),(EDataType)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetBranchStatus((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])
,(UInt_t*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetBranchStatus((const char*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetBranchStatus((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      TChainProof::SetBranchStyle((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      TChainProof::SetBranchStyle();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetChainOffset((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetChainOffset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetCircular((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetDebug((Int_t)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1])
,(Long64_t)G__Longlong(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetDebug((Int_t)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetDebug((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetDebug();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetDirectory((TDirectory*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->SetEntries((Long64_t)G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetEstimate((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetEstimate();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetFileNumber((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetFileNumber();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetMakeClass((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetMaxEntryLoop((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetMaxEntryLoop();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      TChainProof::SetMaxTreeSize((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      TChainProof::SetMaxTreeSize();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetMaxVirtualSize((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetMaxVirtualSize();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetNotify((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetObject((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetScanField((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetScanField();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetTimerInterval((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetTimerInterval();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetTreeIndex((TVirtualIndex*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetWeight((Double_t)G__double(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetWeight((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetWeight();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetUpdate((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->SetUpdate();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Show((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Show((Long64_t)G__Longlong(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Show();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->StartViewer();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->UnbinnedFit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4]),(Long64_t)G__Longlong(libp->para[5])));
      break;
   case 5:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->UnbinnedFit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])
,(Long64_t)G__Longlong(libp->para[4])));
      break;
   case 4:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->UnbinnedFit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3])));
      break;
   case 3:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->UnbinnedFit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7,110,(G__int64)((TChainProof*)(G__getstructoffset()))->UnbinnedFit((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->UseCurrentStyle();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->ConnectProof((TVirtualProof*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->ReleaseProof();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TChainProof::MakeChainProof((TDSet*)G__int(libp->para[0]),(TVirtualProof*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TChainProof::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TChainProof::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_6_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TChainProof::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_7_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TChainProof::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_8_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChainProof*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_9_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_0_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_1_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainProof*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_2_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TChainProof::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_3_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TChainProof::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_4_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TChainProof::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_225_5_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TChainProof::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TChainProof G__TTChainProof;
static int G__G__Tree_225_6_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TChainProof *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TChainProof *)((G__getstructoffset())+sizeof(TChainProof)*i);
   else  delete (TChainProof *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TNtuple */
static int G__G__Tree_226_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNtuple *p=NULL;
   if(G__getaryconstruct()) p=new TNtuple[G__getaryconstruct()];
   else                    p=new TNtuple;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TNtuple);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNtuple *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TNtuple(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TNtuple(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TNtuple);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNtuple*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill((const Float_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 15:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill(
(Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]),(Float_t)G__double(libp->para[9])
,(Float_t)G__double(libp->para[10]),(Float_t)G__double(libp->para[11])
,(Float_t)G__double(libp->para[12]),(Float_t)G__double(libp->para[13])
,(Float_t)G__double(libp->para[14])));
      break;
   case 14:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill(
(Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]),(Float_t)G__double(libp->para[9])
,(Float_t)G__double(libp->para[10]),(Float_t)G__double(libp->para[11])
,(Float_t)G__double(libp->para[12]),(Float_t)G__double(libp->para[13])));
      break;
   case 13:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill(
(Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]),(Float_t)G__double(libp->para[9])
,(Float_t)G__double(libp->para[10]),(Float_t)G__double(libp->para[11])
,(Float_t)G__double(libp->para[12])));
      break;
   case 12:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill(
(Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]),(Float_t)G__double(libp->para[9])
,(Float_t)G__double(libp->para[10]),(Float_t)G__double(libp->para[11])));
      break;
   case 11:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill(
(Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]),(Float_t)G__double(libp->para[9])
,(Float_t)G__double(libp->para[10])));
      break;
   case 10:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill(
(Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]),(Float_t)G__double(libp->para[9])));
      break;
   case 9:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill(
(Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8])));
      break;
   case 8:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill(
(Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill(
(Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TNtuple*)(G__getstructoffset()))->Fill((Float_t)G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TNtuple*)(G__getstructoffset()))->GetNvar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TNtuple*)(G__getstructoffset()))->GetArgs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((TNtuple*)(G__getstructoffset()))->ReadFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TNtuple*)(G__getstructoffset()))->ReadFile((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNtuple*)(G__getstructoffset()))->ResetBranchAddresses();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TNtuple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNtuple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TNtuple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TNtuple::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNtuple*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNtuple*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNtuple*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNtuple*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNtuple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNtuple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNtuple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_226_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNtuple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TNtuple G__TTNtuple;
static int G__G__Tree_226_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TNtuple *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TNtuple *)((G__getstructoffset())+sizeof(TNtuple)*i);
   else  delete (TNtuple *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TBranchClones */
static int G__G__Tree_227_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranchClones *p=NULL;
   if(G__getaryconstruct()) p=new TBranchClones[G__getaryconstruct()];
   else                    p=new TBranchClones;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranchClones);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBranchClones *p=NULL;
   switch(libp->paran) {
   case 5:
      p = new TBranchClones(
(const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TBranchClones(
(const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TBranchClones(
(const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TBranchClones((const char*)G__int(libp->para[0]),(void*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TBranchClones);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchClones*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBranchClones*)(G__getstructoffset()))->Fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TBranchClones*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TBranchClones*)(G__getstructoffset()))->GetEntry((Long64_t)G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TBranchClones*)(G__getstructoffset()))->GetEntry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TBranchClones*)(G__getstructoffset()))->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranchClones*)(G__getstructoffset()))->GetList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TBranchClones*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TBranchClones*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TBranchClones*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TBranchClones*)(G__getstructoffset()))->Reset((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TBranchClones*)(G__getstructoffset()))->Reset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchClones*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchClones*)(G__getstructoffset()))->SetBasketSize((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TBranchClones::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchClones::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TBranchClones::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TBranchClones::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBranchClones*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchClones*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchClones*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBranchClones*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchClones::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBranchClones::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBranchClones::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_227_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBranchClones::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TBranchClones G__TTBranchClones;
static int G__G__Tree_227_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TBranchClones *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TBranchClones *)((G__getstructoffset())+sizeof(TBranchClones)*i);
   else  delete (TBranchClones *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLeafL */
static int G__G__Tree_231_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafL *p=NULL;
   if(G__getaryconstruct()) p=new TLeafL[G__getaryconstruct()];
   else                    p=new TLeafL;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafL);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafL *p=NULL;
      p = new TLeafL((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafL);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->Export((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->FillBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeafL*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeafL*)(G__getstructoffset()))->GetMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeafL*)(G__getstructoffset()))->GetMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((const TLeafL*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((const TLeafL*)(G__getstructoffset()))->GetValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TLeafL*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->Import((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TLeafL*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TLeafL*)(G__getstructoffset()))->PrintValue();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->ReadBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->ReadBasketExport(*(TBuffer*)libp->para[0].ref,(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->ReadValue(*(ifstream*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->SetAddress();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->SetMaximum((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->SetMinimum((Long64_t)G__Longlong(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLeafL::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafL::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLeafL::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLeafL::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafL*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafL*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafL::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafL::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafL::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_231_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafL::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_231_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLeafL *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLeafL(*(TLeafL*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafL);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLeafL G__TTLeafL;
static int G__G__Tree_231_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLeafL *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLeafL *)((G__getstructoffset())+sizeof(TLeafL)*i);
   else  delete (TLeafL *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_231_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafL *dest = (TLeafL*)(G__getstructoffset());
   *dest = (*(TLeafL*)libp->para[0].ref);
   const TLeafL& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLeafElement */
static int G__G__Tree_233_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafElement *p=NULL;
   if(G__getaryconstruct()) p=new TLeafElement[G__getaryconstruct()];
   else                    p=new TLeafElement;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafElement *p=NULL;
      p = new TLeafElement(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeafElement*)(G__getstructoffset()))->GetLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TLeafElement*)(G__getstructoffset()))->GetMethodCall((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeafElement*)(G__getstructoffset()))->GetMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeafElement*)(G__getstructoffset()))->GetNdata());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeafElement*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((const TLeafElement*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((const TLeafElement*)(G__getstructoffset()))->GetValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letdouble(result7,100,(double)((const TLeafElement*)(G__getstructoffset()))->GetValueSubArray((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7,100,(double)((const TLeafElement*)(G__getstructoffset()))->GetValueSubArray((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((const TLeafElement*)(G__getstructoffset()))->GetValueSubArray());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TLeafElement*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TLeafElement*)(G__getstructoffset()))->IsOnTerminalBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TLeafElement*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TLeafElement*)(G__getstructoffset()))->PrintValue();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafElement*)(G__getstructoffset()))->SetLeafCount((TLeaf*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLeafElement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafElement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLeafElement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLeafElement::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafElement*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafElement*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafElement*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafElement*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafElement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafElement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafElement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_233_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafElement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_233_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLeafElement *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLeafElement(*(TLeafElement*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafElement);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLeafElement G__TTLeafElement;
static int G__G__Tree_233_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLeafElement *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLeafElement *)((G__getstructoffset())+sizeof(TLeafElement)*i);
   else  delete (TLeafElement *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_233_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafElement *dest = (TLeafElement*)(G__getstructoffset());
   *dest = (*(TLeafElement*)libp->para[0].ref);
   const TLeafElement& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLeafC */
static int G__G__Tree_235_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafC *p=NULL;
   if(G__getaryconstruct()) p=new TLeafC[G__getaryconstruct()];
   else                    p=new TLeafC;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafC);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafC *p=NULL;
      p = new TLeafC((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafC);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafC*)(G__getstructoffset()))->Export((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafC*)(G__getstructoffset()))->FillBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeafC*)(G__getstructoffset()))->GetMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLeafC*)(G__getstructoffset()))->GetMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeafC*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((const TLeafC*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((const TLeafC*)(G__getstructoffset()))->GetValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TLeafC*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeafC*)(G__getstructoffset()))->GetValueString());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafC*)(G__getstructoffset()))->Import((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TLeafC*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TLeafC*)(G__getstructoffset()))->PrintValue();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafC*)(G__getstructoffset()))->ReadBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafC*)(G__getstructoffset()))->ReadBasketExport(*(TBuffer*)libp->para[0].ref,(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafC*)(G__getstructoffset()))->ReadValue(*(ifstream*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeafC*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeafC*)(G__getstructoffset()))->SetAddress();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLeafC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLeafC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLeafC::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafC*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafC*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafC*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafC*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_235_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_235_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLeafC *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLeafC(*(TLeafC*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafC);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLeafC G__TTLeafC;
static int G__G__Tree_235_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLeafC *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLeafC *)((G__getstructoffset())+sizeof(TLeafC)*i);
   else  delete (TLeafC *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_235_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafC *dest = (TLeafC*)(G__getstructoffset());
   *dest = (*(TLeafC*)libp->para[0].ref);
   const TLeafC& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSelectorScalar */
static int G__G__Tree_236_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSelectorScalar *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TSelectorScalar((const char*)G__int(libp->para[0]),(Long64_t)G__Longlong(libp->para[1]));
      break;
   case 1:
      p = new TSelectorScalar((const char*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TSelectorScalar[G__getaryconstruct()];
   else                    p=new TSelectorScalar;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TSelectorScalar);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSelectorScalar*)(G__getstructoffset()))->Inc((Long_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSelectorScalar*)(G__getstructoffset()))->Inc();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSelectorScalar*)(G__getstructoffset()))->Merge((TCollection*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSelectorScalar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSelectorScalar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSelectorScalar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSelectorScalar::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSelectorScalar*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorScalar*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorScalar*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSelectorScalar*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSelectorScalar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSelectorScalar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSelectorScalar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_236_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSelectorScalar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_236_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TSelectorScalar *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TSelectorScalar(*(TSelectorScalar*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TSelectorScalar);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSelectorScalar G__TTSelectorScalar;
static int G__G__Tree_236_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSelectorScalar *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSelectorScalar *)((G__getstructoffset())+sizeof(TSelectorScalar)*i);
   else  delete (TSelectorScalar *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_236_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSelectorScalar *dest = (TSelectorScalar*)(G__getstructoffset());
   *dest = (*(TSelectorScalar*)libp->para[0].ref);
   const TSelectorScalar& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TChainElement */
static int G__G__Tree_238_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TChainElement *p=NULL;
   if(G__getaryconstruct()) p=new TChainElement[G__getaryconstruct()];
   else                    p=new TChainElement;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TChainElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TChainElement *p=NULL;
      p = new TChainElement((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TChainElement);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->CreatePackets();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TChainElement*)(G__getstructoffset()))->GetBaddress());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TChainElement*)(G__getstructoffset()))->GetBaddressClassName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TChainElement*)(G__getstructoffset()))->GetBaddressIsPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TChainElement*)(G__getstructoffset()))->GetBaddressType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChainElement*)(G__getstructoffset()))->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TChainElement*)(G__getstructoffset()))->GetPackets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChainElement*)(G__getstructoffset()))->GetPacketSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TChainElement*)(G__getstructoffset()))->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TChainElement*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TChainElement*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->SetBaddress((void*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->SetBaddressClassName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->SetBaddressIsPtr((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->SetBaddressType((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->SetNumberEntries((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->SetPacketSize((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->SetPacketSize();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->SetStatus((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TChainElement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TChainElement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TChainElement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TChainElement::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TChainElement*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TChainElement*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TChainElement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TChainElement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TChainElement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_238_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TChainElement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_238_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TChainElement *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TChainElement(*(TChainElement*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TChainElement);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TChainElement G__TTChainElement;
static int G__G__Tree_238_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TChainElement *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TChainElement *)((G__getstructoffset())+sizeof(TChainElement)*i);
   else  delete (TChainElement *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_238_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TChainElement *dest = (TChainElement*)(G__getstructoffset());
   *dest = (*(TChainElement*)libp->para[0].ref);
   const TChainElement& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLeafO */
static int G__G__Tree_239_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafO *p=NULL;
   if(G__getaryconstruct()) p=new TLeafO[G__getaryconstruct()];
   else                    p=new TLeafO;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafO);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafO *p=NULL;
      p = new TLeafO((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafO);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafO*)(G__getstructoffset()))->Export((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafO*)(G__getstructoffset()))->FillBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeafO*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((const TLeafO*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((const TLeafO*)(G__getstructoffset()))->GetValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TLeafO*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafO*)(G__getstructoffset()))->Import((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TLeafO*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TLeafO*)(G__getstructoffset()))->PrintValue();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafO*)(G__getstructoffset()))->ReadBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafO*)(G__getstructoffset()))->ReadBasketExport(*(TBuffer*)libp->para[0].ref,(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafO*)(G__getstructoffset()))->ReadValue(*(ifstream*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeafO*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeafO*)(G__getstructoffset()))->SetAddress();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLeafO::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafO::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLeafO::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLeafO::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafO*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafO*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafO*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafO*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafO::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafO::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafO::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_239_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafO::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_239_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLeafO *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLeafO(*(TLeafO*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafO);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLeafO G__TTLeafO;
static int G__G__Tree_239_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLeafO *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLeafO *)((G__getstructoffset())+sizeof(TLeafO)*i);
   else  delete (TLeafO *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_239_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafO *dest = (TLeafO*)(G__getstructoffset());
   *dest = (*(TLeafO*)libp->para[0].ref);
   const TLeafO& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TNtupleD */
static int G__G__Tree_240_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNtupleD *p=NULL;
   if(G__getaryconstruct()) p=new TNtupleD[G__getaryconstruct()];
   else                    p=new TNtupleD;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TNtupleD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNtupleD *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TNtupleD(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TNtupleD(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TNtupleD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNtupleD*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill((const Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 15:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]),(Double_t)G__double(libp->para[7])
,(Double_t)G__double(libp->para[8]),(Double_t)G__double(libp->para[9])
,(Double_t)G__double(libp->para[10]),(Double_t)G__double(libp->para[11])
,(Double_t)G__double(libp->para[12]),(Double_t)G__double(libp->para[13])
,(Double_t)G__double(libp->para[14])));
      break;
   case 14:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]),(Double_t)G__double(libp->para[7])
,(Double_t)G__double(libp->para[8]),(Double_t)G__double(libp->para[9])
,(Double_t)G__double(libp->para[10]),(Double_t)G__double(libp->para[11])
,(Double_t)G__double(libp->para[12]),(Double_t)G__double(libp->para[13])));
      break;
   case 13:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]),(Double_t)G__double(libp->para[7])
,(Double_t)G__double(libp->para[8]),(Double_t)G__double(libp->para[9])
,(Double_t)G__double(libp->para[10]),(Double_t)G__double(libp->para[11])
,(Double_t)G__double(libp->para[12])));
      break;
   case 12:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]),(Double_t)G__double(libp->para[7])
,(Double_t)G__double(libp->para[8]),(Double_t)G__double(libp->para[9])
,(Double_t)G__double(libp->para[10]),(Double_t)G__double(libp->para[11])));
      break;
   case 11:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]),(Double_t)G__double(libp->para[7])
,(Double_t)G__double(libp->para[8]),(Double_t)G__double(libp->para[9])
,(Double_t)G__double(libp->para[10])));
      break;
   case 10:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]),(Double_t)G__double(libp->para[7])
,(Double_t)G__double(libp->para[8]),(Double_t)G__double(libp->para[9])));
      break;
   case 9:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]),(Double_t)G__double(libp->para[7])
,(Double_t)G__double(libp->para[8])));
      break;
   case 8:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]),(Double_t)G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TNtupleD*)(G__getstructoffset()))->Fill((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TNtupleD*)(G__getstructoffset()))->GetNvar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TNtupleD*)(G__getstructoffset()))->GetArgs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letLonglong(result7,110,(G__int64)((TNtupleD*)(G__getstructoffset()))->ReadFile((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7,110,(G__int64)((TNtupleD*)(G__getstructoffset()))->ReadFile((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNtupleD*)(G__getstructoffset()))->ResetBranchAddresses();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TNtupleD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNtupleD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TNtupleD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TNtupleD::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNtupleD*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNtupleD*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNtupleD*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNtupleD*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNtupleD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNtupleD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNtupleD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_240_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNtupleD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TNtupleD G__TTNtupleD;
static int G__G__Tree_240_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TNtupleD *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TNtupleD *)((G__getstructoffset())+sizeof(TNtupleD)*i);
   else  delete (TNtupleD *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLeafB */
static int G__G__Tree_241_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafB *p=NULL;
   if(G__getaryconstruct()) p=new TLeafB[G__getaryconstruct()];
   else                    p=new TLeafB;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafB);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafB *p=NULL;
      p = new TLeafB((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafB);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafB*)(G__getstructoffset()))->Export((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafB*)(G__getstructoffset()))->FillBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeafB*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,100,(double)((const TLeafB*)(G__getstructoffset()))->GetValue((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,100,(double)((const TLeafB*)(G__getstructoffset()))->GetValue());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TLeafB*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafB*)(G__getstructoffset()))->Import((TClonesArray*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TLeafB*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TLeafB*)(G__getstructoffset()))->PrintValue();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafB*)(G__getstructoffset()))->ReadBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafB*)(G__getstructoffset()))->ReadBasketExport(*(TBuffer*)libp->para[0].ref,(TClonesArray*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafB*)(G__getstructoffset()))->ReadValue(*(ifstream*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeafB*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeafB*)(G__getstructoffset()))->SetAddress();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLeafB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLeafB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLeafB::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafB*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafB*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafB*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafB*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_241_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_241_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLeafB *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLeafB(*(TLeafB*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafB);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLeafB G__TTLeafB;
static int G__G__Tree_241_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLeafB *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLeafB *)((G__getstructoffset())+sizeof(TLeafB)*i);
   else  delete (TLeafB *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_241_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafB *dest = (TLeafB*)(G__getstructoffset());
   *dest = (*(TLeafB*)libp->para[0].ref);
   const TLeafB& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TLeafObject */
static int G__G__Tree_242_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafObject *p=NULL;
   if(G__getaryconstruct()) p=new TLeafObject[G__getaryconstruct()];
   else                    p=new TLeafObject;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafObject);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafObject *p=NULL;
      p = new TLeafObject((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafObject);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafObject*)(G__getstructoffset()))->FillBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafObject*)(G__getstructoffset()))->GetClass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TLeafObject*)(G__getstructoffset()))->GetMethodCall((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafObject*)(G__getstructoffset()))->GetObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TLeafObject*)(G__getstructoffset()))->GetTypeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TLeafObject*)(G__getstructoffset()))->GetValuePointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TLeafObject*)(G__getstructoffset()))->IsOnTerminalBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TLeafObject*)(G__getstructoffset()))->IsVirtual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TLeafObject*)(G__getstructoffset()))->Notify());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TLeafObject*)(G__getstructoffset()))->PrintValue((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TLeafObject*)(G__getstructoffset()))->PrintValue();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafObject*)(G__getstructoffset()))->ReadBasket(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeafObject*)(G__getstructoffset()))->SetAddress((void*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeafObject*)(G__getstructoffset()))->SetAddress();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLeafObject*)(G__getstructoffset()))->SetVirtual((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLeafObject*)(G__getstructoffset()))->SetVirtual();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLeafObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLeafObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLeafObject::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLeafObject*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafObject*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafObject*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLeafObject*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLeafObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree_242_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLeafObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Tree_242_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TLeafObject *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TLeafObject(*(TLeafObject*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__TreeLN_TLeafObject);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLeafObject G__TTLeafObject;
static int G__G__Tree_242_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLeafObject *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLeafObject *)((G__getstructoffset())+sizeof(TLeafObject)*i);
   else  delete (TLeafObject *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Tree_242_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLeafObject *dest = (TLeafObject*)(G__getstructoffset());
   *dest = (*(TLeafObject*)libp->para[0].ref);
   const TLeafObject& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__G__Tree__4_31(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TEventList *pobj,xobj=operator+(*(TEventList*)libp->para[0].ref,*(TEventList*)libp->para[1].ref);
        pobj=new TEventList(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__5_31(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TEventList *pobj,xobj=operator-(*(TEventList*)libp->para[0].ref,*(TEventList*)libp->para[1].ref);
        pobj=new TEventList(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__6_31(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TEventList *pobj,xobj=operator*(*(TEventList*)libp->para[0].ref,*(TEventList*)libp->para[1].ref);
        pobj=new TEventList(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__0_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator+(*(TCut*)libp->para[0].ref,(const char*)G__int(libp->para[1]));
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__1_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator+((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref);
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__2_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator+(*(TCut*)libp->para[0].ref,*(TCut*)libp->para[1].ref);
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__3_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator*(*(TCut*)libp->para[0].ref,(const char*)G__int(libp->para[1]));
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__4_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator*((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref);
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__5_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator*(*(TCut*)libp->para[0].ref,*(TCut*)libp->para[1].ref);
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__6_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator&&(*(TCut*)libp->para[0].ref,(const char*)G__int(libp->para[1]));
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__7_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator&&((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref);
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__8_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator&&(*(TCut*)libp->para[0].ref,*(TCut*)libp->para[1].ref);
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__9_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator||(*(TCut*)libp->para[0].ref,(const char*)G__int(libp->para[1]));
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__0_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator||((const char*)G__int(libp->para[0]),*(TCut*)libp->para[1].ref);
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__1_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator||(*(TCut*)libp->para[0].ref,*(TCut*)libp->para[1].ref);
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Tree__2_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TCut *pobj,xobj=operator!(*(TCut*)libp->para[0].ref);
        pobj=new TCut(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* TTree */

/* TSelector */

/* TEventList */

/* TDSet */

/* TCut */

/* TChain */

/* TDSetElementPfn */

/* TDSetElementMsn */

/* TDSetElement */

/* TVirtualIndex */

/* TVirtualTreePlayer */

/* TBranch */

/* TBasket */

/* TLeaf */

/* TLeafS */

/* TSelectorCint */

/* TBranchObject */

/* TTreeResult */

/* TLeafI */

/* TBranchElement */

/* TVirtualBranchBrowsable */

/* TMethodBrowsable */

/* TNonSplitBrowsable */

/* TCollectionPropertyBrowsable */

/* TCollectionMethodBrowsable */

/* TLeafF */

/* TLeafD */

/* TTreeRow */

/* TFriendElement */

/* TBranchRef */

/* TTreeFriendLeafIter */

/* TChainProof */

/* TNtuple */

/* TBranchClones */

/* TLeafL */

/* TLeafElement */

/* TLeafC */

/* TSelectorScalar */

/* TChainElement */

/* TLeafO */

/* TNtupleD */

/* TLeafB */

/* TLeafObject */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Tree {
 public:
  G__Sizep2memfuncG__Tree() {p=&G__Sizep2memfuncG__Tree::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Tree::*p)();
};

size_t G__get_sizep2memfuncG__Tree()
{
  G__Sizep2memfuncG__Tree a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Tree() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TTree))) {
     TTree *G__Lderived;
     G__Lderived=(TTree*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TTree),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TTree),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TTree),G__get_linked_tagnum(&G__G__TreeLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TTree),G__get_linked_tagnum(&G__G__TreeLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TTree),G__get_linked_tagnum(&G__G__TreeLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TSelector))) {
     TSelector *G__Lderived;
     G__Lderived=(TSelector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelector),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TEventList))) {
     TEventList *G__Lderived;
     G__Lderived=(TEventList*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TEventList),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TEventList),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TDSet))) {
     TDSet *G__Lderived;
     G__Lderived=(TDSet*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSet),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSet),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TCut))) {
     TCut *G__Lderived;
     G__Lderived=(TCut*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TCut),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TCut),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TChain))) {
     TChain *G__Lderived;
     G__Lderived=(TChain*)0x1000;
     {
       TTree *G__Lpbase=(TTree*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChain),G__get_linked_tagnum(&G__G__TreeLN_TTree),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChain),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChain),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChain),G__get_linked_tagnum(&G__G__TreeLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChain),G__get_linked_tagnum(&G__G__TreeLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChain),G__get_linked_tagnum(&G__G__TreeLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn))) {
     TDSetElementPfn *G__Lderived;
     G__Lderived=(TDSetElementPfn*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn))) {
     TDSetElementMsn *G__Lderived;
     G__Lderived=(TDSetElementMsn*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TDSetElement))) {
     TDSetElement *G__Lderived;
     G__Lderived=(TDSetElement*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElement),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TVirtualIndex))) {
     TVirtualIndex *G__Lderived;
     G__Lderived=(TVirtualIndex*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualIndex),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualIndex),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer))) {
     TVirtualTreePlayer *G__Lderived;
     G__Lderived=(TVirtualTreePlayer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TBranch))) {
     TBranch *G__Lderived;
     G__Lderived=(TBranch*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranch),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranch),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranch),G__get_linked_tagnum(&G__G__TreeLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TBasket))) {
     TBasket *G__Lderived;
     G__Lderived=(TBasket*)0x1000;
     {
       TKey *G__Lpbase=(TKey*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBasket),G__get_linked_tagnum(&G__G__TreeLN_TKey),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBasket),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBasket),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TLeaf))) {
     TLeaf *G__Lderived;
     G__Lderived=(TLeaf*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeaf),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeaf),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TLeafS))) {
     TLeafS *G__Lderived;
     G__Lderived=(TLeafS*)0x1000;
     {
       TLeaf *G__Lpbase=(TLeaf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafS),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafS),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafS),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TSelectorCint))) {
     TSelectorCint *G__Lderived;
     G__Lderived=(TSelectorCint*)0x1000;
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelectorCint),G__get_linked_tagnum(&G__G__TreeLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelectorCint),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TBranchObject))) {
     TBranchObject *G__Lderived;
     G__Lderived=(TBranchObject*)0x1000;
     {
       TBranch *G__Lpbase=(TBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchObject),G__get_linked_tagnum(&G__G__TreeLN_TBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchObject),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchObject),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchObject),G__get_linked_tagnum(&G__G__TreeLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TTreeResult))) {
     TTreeResult *G__Lderived;
     G__Lderived=(TTreeResult*)0x1000;
     {
       TSQLResult *G__Lpbase=(TSQLResult*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeResult),G__get_linked_tagnum(&G__G__TreeLN_TSQLResult),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeResult),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TLeafI))) {
     TLeafI *G__Lderived;
     G__Lderived=(TLeafI*)0x1000;
     {
       TLeaf *G__Lpbase=(TLeaf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafI),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafI),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafI),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TBranchElement))) {
     TBranchElement *G__Lderived;
     G__Lderived=(TBranchElement*)0x1000;
     {
       TBranch *G__Lpbase=(TBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),G__get_linked_tagnum(&G__G__TreeLN_TBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),G__get_linked_tagnum(&G__G__TreeLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable))) {
     TVirtualBranchBrowsable *G__Lderived;
     G__Lderived=(TVirtualBranchBrowsable*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TMethodBrowsable))) {
     TMethodBrowsable *G__Lderived;
     G__Lderived=(TMethodBrowsable*)0x1000;
     {
       TVirtualBranchBrowsable *G__Lpbase=(TVirtualBranchBrowsable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TMethodBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TMethodBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TMethodBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TNonSplitBrowsable))) {
     TNonSplitBrowsable *G__Lderived;
     G__Lderived=(TNonSplitBrowsable*)0x1000;
     {
       TVirtualBranchBrowsable *G__Lpbase=(TVirtualBranchBrowsable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNonSplitBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNonSplitBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNonSplitBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TCollectionPropertyBrowsable))) {
     TCollectionPropertyBrowsable *G__Lderived;
     G__Lderived=(TCollectionPropertyBrowsable*)0x1000;
     {
       TVirtualBranchBrowsable *G__Lpbase=(TVirtualBranchBrowsable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionPropertyBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionPropertyBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionPropertyBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TCollectionMethodBrowsable))) {
     TCollectionMethodBrowsable *G__Lderived;
     G__Lderived=(TCollectionMethodBrowsable*)0x1000;
     {
       TMethodBrowsable *G__Lpbase=(TMethodBrowsable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionMethodBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TMethodBrowsable),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualBranchBrowsable *G__Lpbase=(TVirtualBranchBrowsable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionMethodBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionMethodBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionMethodBrowsable),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TLeafF))) {
     TLeafF *G__Lderived;
     G__Lderived=(TLeafF*)0x1000;
     {
       TLeaf *G__Lpbase=(TLeaf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafF),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafF),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafF),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TLeafD))) {
     TLeafD *G__Lderived;
     G__Lderived=(TLeafD*)0x1000;
     {
       TLeaf *G__Lpbase=(TLeaf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafD),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafD),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafD),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TTreeRow))) {
     TTreeRow *G__Lderived;
     G__Lderived=(TTreeRow*)0x1000;
     {
       TSQLRow *G__Lpbase=(TSQLRow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeRow),G__get_linked_tagnum(&G__G__TreeLN_TSQLRow),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeRow),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TFriendElement))) {
     TFriendElement *G__Lderived;
     G__Lderived=(TFriendElement*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TBranchRef))) {
     TBranchRef *G__Lderived;
     G__Lderived=(TBranchRef*)0x1000;
     {
       TBranch *G__Lpbase=(TBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchRef),G__get_linked_tagnum(&G__G__TreeLN_TBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchRef),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchRef),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchRef),G__get_linked_tagnum(&G__G__TreeLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TTreeFriendLeafIter))) {
     TTreeFriendLeafIter *G__Lderived;
     G__Lderived=(TTreeFriendLeafIter*)0x1000;
     {
       TIterator *G__Lpbase=(TIterator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeFriendLeafIter),G__get_linked_tagnum(&G__G__TreeLN_TIterator),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TChainProof))) {
     TChainProof *G__Lderived;
     G__Lderived=(TChainProof*)0x1000;
     {
       TTree *G__Lpbase=(TTree*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainProof),G__get_linked_tagnum(&G__G__TreeLN_TTree),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainProof),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainProof),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainProof),G__get_linked_tagnum(&G__G__TreeLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainProof),G__get_linked_tagnum(&G__G__TreeLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainProof),G__get_linked_tagnum(&G__G__TreeLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TNtuple))) {
     TNtuple *G__Lderived;
     G__Lderived=(TNtuple*)0x1000;
     {
       TTree *G__Lpbase=(TTree*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtuple),G__get_linked_tagnum(&G__G__TreeLN_TTree),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtuple),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtuple),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtuple),G__get_linked_tagnum(&G__G__TreeLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtuple),G__get_linked_tagnum(&G__G__TreeLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtuple),G__get_linked_tagnum(&G__G__TreeLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TBranchClones))) {
     TBranchClones *G__Lderived;
     G__Lderived=(TBranchClones*)0x1000;
     {
       TBranch *G__Lpbase=(TBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchClones),G__get_linked_tagnum(&G__G__TreeLN_TBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchClones),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchClones),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchClones),G__get_linked_tagnum(&G__G__TreeLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TLeafL))) {
     TLeafL *G__Lderived;
     G__Lderived=(TLeafL*)0x1000;
     {
       TLeaf *G__Lpbase=(TLeaf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafL),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafL),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafL),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TLeafElement))) {
     TLeafElement *G__Lderived;
     G__Lderived=(TLeafElement*)0x1000;
     {
       TLeaf *G__Lpbase=(TLeaf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafElement),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafElement),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafElement),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TLeafC))) {
     TLeafC *G__Lderived;
     G__Lderived=(TLeafC*)0x1000;
     {
       TLeaf *G__Lpbase=(TLeaf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafC),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafC),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafC),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TSelectorScalar))) {
     TSelectorScalar *G__Lderived;
     G__Lderived=(TSelectorScalar*)0x1000;
     {
       TParameter<long long> *G__Lpbase=(TParameter<long long>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelectorScalar),G__get_linked_tagnum(&G__G__TreeLN_TParameterlElongsPlonggR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelectorScalar),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TParameterlElongsPlonggR))) {
     TParameter<long long> *G__Lderived;
     G__Lderived=(TParameter<long long>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TParameterlElongsPlonggR),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TChainElement))) {
     TChainElement *G__Lderived;
     G__Lderived=(TChainElement*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainElement),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainElement),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TLeafO))) {
     TLeafO *G__Lderived;
     G__Lderived=(TLeafO*)0x1000;
     {
       TLeaf *G__Lpbase=(TLeaf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafO),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafO),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafO),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TNtupleD))) {
     TNtupleD *G__Lderived;
     G__Lderived=(TNtupleD*)0x1000;
     {
       TTree *G__Lpbase=(TTree*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtupleD),G__get_linked_tagnum(&G__G__TreeLN_TTree),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtupleD),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtupleD),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtupleD),G__get_linked_tagnum(&G__G__TreeLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtupleD),G__get_linked_tagnum(&G__G__TreeLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtupleD),G__get_linked_tagnum(&G__G__TreeLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TLeafB))) {
     TLeafB *G__Lderived;
     G__Lderived=(TLeafB*)0x1000;
     {
       TLeaf *G__Lpbase=(TLeaf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafB),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafB),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafB),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__TreeLN_TLeafObject))) {
     TLeafObject *G__Lderived;
     G__Lderived=(TLeafObject*)0x1000;
     {
       TLeaf *G__Lpbase=(TLeaf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafObject),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafObject),G__get_linked_tagnum(&G__G__TreeLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafObject),G__get_linked_tagnum(&G__G__TreeLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Tree() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,
-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__TreeLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__TreeLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreeLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__TreeLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__TreeLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("MethodCreateListOfBrowsables_t",89,-1,0,
G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable));
   G__setnewtype(-1,"Int_t (*MethodCreateListOfBrowsables_t)",0);
   G__search_typename2("list<MethodCreateListOfBrowsables_t>",117,G__get_linked_tagnum(&G__G__TreeLN_listlEvoidmUcOallocatorlEvoidmUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("list<void*>",117,G__get_linked_tagnum(&G__G__TreeLN_listlEvoidmUcOallocatorlEvoidmUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("TParameter<Long64_t>",117,G__get_linked_tagnum(&G__G__TreeLN_TParameterlElongsPlonggR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TTree */
static void G__setup_memvarTTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TTree));
   { TTree *p; p=(TTree*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEntries=",0,"Number of entries");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fTotBytes=",0,"Total number of bytes in all branches before compression");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fZipBytes=",0,"Total number of bytes in all branches after compression");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fSavedBytes=",0,"Number of autosaved bytes");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWeight=",0,"Tree weight (see TTree::SetWeight)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTimerInterval=",0,"Timer interval in milliseconds");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fScanField=",0,"Number of runs before prompting in Scan");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fUpdate=",0,"Update frequency for EntryLoop");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fMaxEntries=",0,"Maximum number of entries in case of circular buffers");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fMaxEntryLoop=",0,"Maximum number of entries to process");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fMaxVirtualSize=",0,"Maximum total size of buffers kept in memory");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fAutoSave=",0,"Autosave tree when fAutoSave bytes produced");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEstimate=",0,"Number of entries to estimate histogram limits");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fChainOffset=",0,"! Offset of 1st entry of this Tree in a TChain");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fReadEntry=",0,"! Number of the entry being processed");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fTotalBuffers=",0,"! Total number of bytes in branch buffers");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPacketSize=",0,"! Number of entries in one packet for parallel root");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNfill=",0,"! Local for EntryLoop");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDebug=",0,"! Debug level");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fDebugMin=",0,"! First entry number to debug");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fDebugMax=",0,"! Last entry number to debug");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMakeClass=",0,"! not zero when processing code generated by MakeClass");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFileNumber=",0,"! current file number (if file extensions)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TObject),-1,-1,2,"fNotify=",0,"! Object to be notified when loading a Tree");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TDirectory),-1,-1,2,"fDirectory=",0,"! Pointer to directory holding this tree");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,-1,2,"fBranches=",0,"List of Branches");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,-1,2,"fLeaves=",0,"Direct pointers to individual branch leaves");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,2,"fAliases=",0,"List of aliases for expressions based on the tree branches.");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,-1,2,"fEventList=",0,"! Pointer to event selection list (if one)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TArrayD),-1,-1,2,"fIndexValues=",0,"Sorted index values");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TArrayI),-1,-1,2,"fIndex=",0,"Index of sorted values");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TVirtualIndex),-1,-1,2,"fTreeIndex=",0,"Pointer to the tree Index (if any)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,2,"fFriends=",0,"pointer to list of friend elements");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,2,"fUserInfo=",0,"pointer to a list of user objects associated to this Tree");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer),-1,-1,2,"fPlayer=",0,"! Pointer to current Tree player");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,2,"fClones=",0,"! List of cloned trees which share our addresses");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TBranchRef),-1,-1,2,"fBranchRef=",0,"Branch supporting the TRefTable (if any)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"fgBranchStyle=",0,"Old/New branch style");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-2,2,"fgMaxTreeSize=",0,"Maximum size of a file containg a Tree");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TTreecLcLdA),-1,-2,1,"kForceRead=2048",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TTreecLcLdA),-1,-2,1,"kFriendLock=131072",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSelector */
static void G__setup_memvarTSelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelector));
   { TSelector *p; p=(TSelector*)0x1000; if (p) { }
   G__memvar_setup((void*)((G__G__TreeLN_TSelector_PR*)p)->G__OS_fStatus(),105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStatus=",0,"selector status");
   G__memvar_setup((void*)((G__G__TreeLN_TSelector_PR*)p)->G__OS_fOption(),117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,2,"fOption=",0,"option given to TTree::Process");
   G__memvar_setup((void*)((G__G__TreeLN_TSelector_PR*)p)->G__OS_fObject(),85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TObject),-1,-1,2,"fObject=",0,"current object if processing object (vs. TTree)");
   G__memvar_setup((void*)((G__G__TreeLN_TSelector_PR*)p)->G__OS_fInput(),85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,2,"fInput=",0,"list of objects available during processing (on PROOF)");
   G__memvar_setup((void*)((G__G__TreeLN_TSelector_PR*)p)->G__OS_fOutput(),85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,2,"fOutput=",0,"list of objects created during processing (on PROOF)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEventList */
static void G__setup_memvarTEventList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TEventList));
   { TEventList *p; p=(TEventList*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fN=",0,"Number of elements in the list");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSize=",0,"Size of array");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDelta=",0,"Increment size");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fReapply=",0,"If true, TTree::Draw will 'reapply' the original cut");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fList=",0,"[fN]Array of elements");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TDirectory),-1,-1,2,"fDirectory=",0,"! Pointer to directory holding this tree");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSet */
static void G__setup_memvarTDSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSet));
   { TDSet *p; p=(TDSet*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,4,"fObjName=",0,"name of objects to be analyzed (e.g. TTree name)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,4,"fElements=",0,"-> list of TDSetElements");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsTree=",0,"true if type is a TTree (or TTree derived)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TIter),-1,-1,4,"fIterator=",0,"! iterator on fElements");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,4,"fElementsMsn=",0,"-> list of mass storage names and the located files");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,-1,4,"fEventList=",0,"! event list for processing");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TDSetElement),-1,-1,2,"fCurrent=",0,"! current element");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCut */
static void G__setup_memvarTCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TCut));
   { TCut *p; p=(TCut*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TChain */
static void G__setup_memvarTChain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TChain));
   { TChain *p; p=(TChain*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTreeOffsetLen=",0,"Current size of fTreeOffset array");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtrees=",0,"Number of Trees");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTreeNumber=",0,"! Current Tree number in fTreeOffset table");
   G__memvar_setup((void*)NULL,78,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fTreeOffset=",0,"[fTreeOffsetLen]Array of variables");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxCacheSize=",0,"! Max cache size passed to TFile's");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPageSize=",0,"! Cache page size passed to TFile's");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCanDeleteRefs=",0,"! if true, TProcessIDs are deleted when closing a file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,-1,2,"fTree=",0,"! Pointer to current tree");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TFile),-1,-1,2,"fFile=",0,"! Pointer to current file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,-1,2,"fFiles=",0,"->  List of file names containing the Trees");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,2,"fStatus=",0,"->  List of active/inactive branches");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TChainProof),-1,-1,2,"fChainProof=",0,"! wrapper class for a TDSet if this chain is to be");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TChaincLcLdA),-1,-2,1,"kGlobalWeight=32768",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TChaincLcLdA),-1,-2,1,"kAutoDelete=65536",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TChaincLcLdA),-1,-2,1,"kBigNumber=1234567890",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSetElementPfn */
static void G__setup_memvarTDSetElementPfn(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn));
   { TDSetElementPfn *p; p=(TDSetElementPfn*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,4,"fPfn=",0,"Physical File Name");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,4,"fMsn=",0,"Mass Storage Name");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,4,"fCen=",0,"Computing Element Name");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fSize=",0,"Size in bytes");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSetElementMsn */
static void G__setup_memvarTDSetElementMsn(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn));
   { TDSetElementMsn *p; p=(TDSetElementMsn*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,4,"fMsn=",0,"Mass Storage Name");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNfiles=",0,"Number of files");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fDataSize=",0,"Size of file on mass storage");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNSiteDaemons=",0,"Number of daemons");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxSiteDaemons=",0,"Max number of daemons");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fDataPerSiteDaemon=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fMaxDataPerSiteDaemon=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDSetElement */
static void G__setup_memvarTDSetElement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElement));
   { TDSetElement *p; p=(TDSetElement*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,4,"fFileName=",0,"physical or logical file name");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,4,"fObjName=",0,"name of objects to be analyzed in this file");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,4,"fDirectory=",0,"directory in file where to look for objects");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fFirst=",0,"first entry to process");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fNum=",0,"number of entries to process");
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__TreeLN_TDSet),-1,-1,4,"fSet=",0,"set to which element belongs");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,4,"fMsd=",0,"mass storage domain name");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,4,"fPfnList=",0,"physical location information for Grid files");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TIter),-1,-1,4,"fIterator=",0,"! iterator on fPfnList");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn),-1,-1,4,"fCurrent=",0,"! current element of fPfnList");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fTDSetOffset=",0,"! offset in the whole TDSet of the first");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,-1,4,"fEventList=",0,"event list to be used in processing");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fValid=",0,"whether or not the input values are valid");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEntries=",0,"total number of possible entries in file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVirtualIndex */
static void G__setup_memvarTVirtualIndex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualIndex));
   { TVirtualIndex *p; p=(TVirtualIndex*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,-1,2,"fTree=",0,"! pointer to Tree");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVirtualTreePlayer */
static void G__setup_memvarTVirtualTreePlayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer));
   { TVirtualTreePlayer *p; p=(TVirtualTreePlayer*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgPlayer=",0,"Pointer to class of Tree player");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer),-1,-2,4,"fgCurrent=",0,"Pointer to current Tree player");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TBranch */
static void G__setup_memvarTBranch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranch));
   { TBranch *p; p=(TBranch*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TBranchcLcLdA),-1,-2,1,"kAutoDelete=32768",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"fgCount=",0,"! branch counter");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCompress=",0,"(=1 branch is compressed, 0 otherwise)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBasketSize=",0,"Initial Size of  Basket Buffer");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEntryOffsetLen=",0,"Initial Length of fEntryOffset table in the basket buffers");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWriteBasket=",0,"Last basket number written");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEntryNumber=",0,"Current entry number (last one filled in this branch)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fOffset=",0,"Offset of this branch");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxBaskets=",0,"Maximum number of Baskets so far");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSplitLevel=",0,"Branch split level");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNleaves=",0,"! Number of leaves");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fReadBasket=",0,"! Current basket number when reading");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fReadEntry=",0,"! Current entry number when reading");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fEntries=",0,"Number of entries");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fTotBytes=",0,"Total number of bytes in all leaves before compression");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fZipBytes=",0,"Total number of bytes in all leaves after compression");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,-1,2,"fBranches=",0,"-> List of Branches of this branch");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,-1,2,"fLeaves=",0,"-> List of leaves of this branch");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,-1,2,"fBaskets=",0,"-> List of baskets of this branch");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNBasketRAM=",0,"! Number of baskets in fBasketRAM");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBasketRAM=",0,"! [fNBasketRAM] table of basket numbers in memory");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBasketBytes=",0,"[fMaxBaskets] Lenght of baskets on file");
   G__memvar_setup((void*)NULL,78,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fBasketEntry=",0,"[fMaxBaskets] Table of first entry in eack basket");
   G__memvar_setup((void*)NULL,78,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fBasketSeek=",0,"[fMaxBaskets] Addresses of baskets on file");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,-1,2,"fTree=",0,"! Pointer to Tree header");
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,2,"fAddress=",0,"! Address of 1st leaf (variable or object)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TDirectory),-1,-1,2,"fDirectory=",0,"! Pointer to directory where this branch buffers are stored");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,2,"fFileName=",0,"Name of file where buffers are stored (\"\" if in same file as Tree header)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TBuffer),-1,-1,2,"fEntryBuffer=",0,"! Buffer used to directly pass the content without streaming");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,2,"fBrowsables=",0,"! List of TVirtualBranchBrowsables used for Browse()");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSkipZip=",0,"!After being read, the buffer will not be unziped.");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TBasket */
static void G__setup_memvarTBasket(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TBasket));
   { TBasket *p; p=(TBasket*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBufferSize=",0,"fBuffer length in bytes");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNevBufSize=",0,"Length in Int_t of fEntryOffset OR fixed length of each entry if fEntryOffset is null!");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNevBuf=",0,"Number of entries in basket");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLast=",0,"Pointer to last used byte in basket");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fHeaderOnly=",0,"True when only the basket header must be read/written");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDisplacement=",0,"![fNevBuf] Displacement of entries in fBuffer(TKey)");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEntryOffset=",0,"[fNevBuf] Offset of entries in fBuffer(TKey)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,-1,2,"fBranch=",0,"Pointer to the basket support branch");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLeaf */
static void G__setup_memvarTLeaf(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeaf));
   { TLeaf *p; p=(TLeaf*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdata=",0,"! Number of elements in fAddress data buffer");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLen=",0,"Number of fixed length elements");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLenType=",0,"Number of bytes for this data type");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fOffset=",0,"Offset in ClonesArray object (if one)");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsRange=",0,"(=kTRUE if leaf has a range, kFALSE otherwise)");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsUnsigned=",0,"(=kTRUE if unsigned, kFALSE otherwise)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,-1,2,"fLeafCount=",0,"Pointer to Leaf count if variable length");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,-1,2,"fBranch=",0,"! Pointer to supporting branch");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TLeafcLcLdA),-1,-2,1,"kIndirectAddress=2048",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TLeafcLcLdA),-1,-2,1,"kNewValue=4096",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLeafS */
static void G__setup_memvarTLeafS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafS));
   { TLeafS *p; p=(TLeafS*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fMinimum=",0,"Minimum value if leaf range is specified");
   G__memvar_setup((void*)NULL,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fMaximum=",0,"Maximum value if leaf range is specified");
   G__memvar_setup((void*)NULL,83,0,0,-1,G__defined_typename("Short_t"),-1,2,"fValue=",0,"!Pointer to data buffer");
   G__memvar_setup((void*)NULL,83,2,0,-1,G__defined_typename("Short_t"),-1,2,"fPointer=",0,"!Address of pointer to data buffer");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSelectorCint */
static void G__setup_memvarTSelectorCint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelectorCint));
   { TSelectorCint *p; p=(TSelectorCint*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__ClassInfo),-1,-1,2,"fClass=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncVersion=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncInit=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncBegin=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncSlBegin=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncNotif=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncSlTerm=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncTerm=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncCut=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncFill=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncProc=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncOption=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncObj=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncInp=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc),-1,-1,2,"fFuncOut=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TSelector),-1,-1,2,"fIntSelector=",0,"Pointer to interpreted selector (if interpreted)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TBranchObject */
static void G__setup_memvarTBranchObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchObject));
   { TBranchObject *p; p=(TBranchObject*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TBranchObjectcLcLdA),-1,-2,1,"kWarn=4096",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,2,"fClassName=",0,"Class name of referenced object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TObject),-1,-1,2,"fOldObject=",0,"!Pointer to old object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTreeResult */
static void G__setup_memvarTTreeResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeResult));
   { TTreeResult *p; p=(TTreeResult*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fColumnCount=",0,"number of columns in result");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,4,"fFields=",0,"[fColumnCount] array containing field strings");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,-1,4,"fResult=",0,"query result (TTreeRow objects)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNextRow=",0,"row iterator");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLeafI */
static void G__setup_memvarTLeafI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafI));
   { TLeafI *p; p=(TLeafI*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMinimum=",0,"Minimum value if leaf range is specified");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaximum=",0,"Maximum value if leaf range is specified");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fValue=",0,"!Pointer to data buffer");
   G__memvar_setup((void*)NULL,73,2,0,-1,G__defined_typename("Int_t"),-1,2,"fPointer=",0,"!Address of pointer to data buffer");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TBranchElement */
static void G__setup_memvarTBranchElement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchElement));
   { TBranchElement *p; p=(TBranchElement*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TBranchElementcLcLdA),-1,-2,1,"kWarn=8192",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TBranchElementcLcLdA),-1,-2,1,"kBranchFolder=16384",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TBranchElementcLcLdA),-1,-2,1,"kDeleteObject=65536",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,2,"fClassName=",0,"Class name of referenced object");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,2,"fParentName=",0,"Name of parent class");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,2,"fClonesName=",0,"Name of class in TClonesArray (if any)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TVirtualCollectionProxy),-1,-1,2,"fCollProxy=",0,"! collection interface (if any)");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCheckSum=",0,"CheckSum of class");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fClassVersion=",0,"Version number of class");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fID=",0,"element serial number in fInfo");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"branch type");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStreamerType=",0,"branch streamer type");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaximum=",0,"Maximum entries for a TClonesArray or variable array");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSTLtype=",0,"!STL container type");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdata=",0,"!Number of data in this branch");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),-1,-1,2,"fBranchCount=",0,"pointer to primary branchcount branch");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),-1,-1,2,"fBranchCount2=",0,"pointer to secondary branchcount branch");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TStreamerInfo),-1,-1,2,"fInfo=",0,"!Pointer to StreamerInfo");
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,2,"fObject=",0,"!Pointer to object at *fAddress");
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,2,"fBranchPointer=",0,"!Pointer to object for a master branch");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVirtualBranchBrowsable */
static void G__setup_memvarTVirtualBranchBrowsable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable));
   { TVirtualBranchBrowsable *p; p=(TVirtualBranchBrowsable*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,-1,4,"fBranch=",0,"pointer to the branch element representing the top object");
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable),-1,-1,4,"fParent=",0,"parent method if this method is member of a returned class");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,-1,4,"fLeaves=",0,"pointer to laves");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-1,4,"fClass=",0,"pointer to TClass representing our type (i.e. return type for methods), 0 if basic type");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fTypeIsPointer=",0,"return type is pointer to class");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_listlEvoidmUcOallocatorlEvoidmUgRsPgR),G__defined_typename("list<MethodCreateListOfBrowsables_t>"),-2,4,"fgGenerators=",0,"list of MethodCreateListOfBrowsables_t called by CreateListOfBrowsables");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fgGeneratorsSet=",0,"have we set the generators yet? empty is not good enough - user might have removed them");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMethodBrowsable */
static void G__setup_memvarTMethodBrowsable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TMethodBrowsable));
   { TMethodBrowsable *p; p=(TMethodBrowsable*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TMethod),-1,-1,4,"fMethod=",0,"pointer to a method");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TNonSplitBrowsable */
static void G__setup_memvarTNonSplitBrowsable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TNonSplitBrowsable));
   { TNonSplitBrowsable *p; p=(TNonSplitBrowsable*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCollectionPropertyBrowsable */
static void G__setup_memvarTCollectionPropertyBrowsable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionPropertyBrowsable));
   { TCollectionPropertyBrowsable *p; p=(TCollectionPropertyBrowsable*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,4,"fDraw=",0,"string to send to TTree::Draw(), NOT by GetScope()!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCollectionMethodBrowsable */
static void G__setup_memvarTCollectionMethodBrowsable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionMethodBrowsable));
   { TCollectionMethodBrowsable *p; p=(TCollectionMethodBrowsable*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLeafF */
static void G__setup_memvarTLeafF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafF));
   { TLeafF *p; p=(TLeafF*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fMinimum=",0,"Minimum value if leaf range is specified");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fMaximum=",0,"Maximum value if leaf range is specified");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fValue=",0,"!Pointer to data buffer");
   G__memvar_setup((void*)NULL,70,2,0,-1,G__defined_typename("Float_t"),-1,2,"fPointer=",0,"!Addresss of pointer to data buffer!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLeafD */
static void G__setup_memvarTLeafD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafD));
   { TLeafD *p; p=(TLeafD*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinimum=",0,"Minimum value if leaf range is specified");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaximum=",0,"Maximum value if leaf range is specified");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fValue=",0,"!Pointer to data buffer");
   G__memvar_setup((void*)NULL,68,2,0,-1,G__defined_typename("Double_t"),-1,2,"fPointer=",0,"!Address of pointer to data buffer");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTreeRow */
static void G__setup_memvarTTreeRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeRow));
   { TTreeRow *p; p=(TTreeRow*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fColumnCount=",0,"number of columns in row");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFields=",0,"[fColumnCount] index in fRow of the end of each field");
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,4,"fRow=",0,"string with all the fColumnCount fields");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TTreeRow),-1,-1,4,"fOriginal=",0,"! pointer to original row");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFriendElement */
static void G__setup_memvarTFriendElement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TFriendElement));
   { TFriendElement *p; p=(TFriendElement*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,-1,2,"fParentTree=",0,"!pointer to the parent TTree");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,-1,2,"fTree=",0,"!pointer to the TTree described by this element");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TFile),-1,-1,2,"fFile=",0,"!pointer to the file containing the friend TTree");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,2,"fTreeName=",0,"name of the friend TTree");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fOwnFile=",0,"true if file is managed by this class");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TFriendElementcLcLdA),-1,-2,1,"kFromChain=2048",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TBranchRef */
static void G__setup_memvarTBranchRef(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchRef));
   { TBranchRef *p; p=(TBranchRef*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TRefTable),-1,-1,2,"fRefTable=",0,"pointer to the TRefTable");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTreeFriendLeafIter */
static void G__setup_memvarTTreeFriendLeafIter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeFriendLeafIter));
   { TTreeFriendLeafIter *p; p=(TTreeFriendLeafIter*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,-1,2,"fTree=",0,"tree being iterated");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TIterator),-1,-1,2,"fLeafIter=",0,"current leaf sub-iterator.");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TIterator),-1,-1,2,"fTreeIter=",0,"current tree sub-iterator.");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDirection=",0,"iteration direction");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TChainProof */
static void G__setup_memvarTChainProof(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainProof));
   { TChainProof *p; p=(TChainProof*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,-1,2,"fTree=",0,"dummy tree");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TDSet),-1,-1,2,"fSet=",0,"TDSet");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TVirtualProof),-1,-1,2,"fProof=",0,"PROOF");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TDrawFeedback),-1,-1,2,"fDrawFeedback=",0,"feedback handler");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TNtuple */
static void G__setup_memvarTNtuple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtuple));
   { TNtuple *p; p=(TNtuple*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNvar=",0,"Number of columns");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fArgs=",0,"! [fNvar] Array of variables");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TBranchClones */
static void G__setup_memvarTBranchClones(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchClones));
   { TBranchClones *p; p=(TBranchClones*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClonesArray),-1,-1,2,"fList=",0,"!Pointer to the clonesarray");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRead=",0,"!flag = 1 if clonesarray has been read");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fN=",0,"!Number of elements in ClonesArray");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdataMax=",0,"!Maximum value of fN");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,2,"fClassName=",0,"name of the class of the objets in the ClonesArray");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,-1,2,"fBranchCount=",0,"Branch with clones count");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLeafL */
static void G__setup_memvarTLeafL(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafL));
   { TLeafL *p; p=(TLeafL*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fMinimum=",0,"Minimum value if leaf range is specified");
   G__memvar_setup((void*)NULL,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fMaximum=",0,"Maximum value if leaf range is specified");
   G__memvar_setup((void*)NULL,78,0,0,-1,G__defined_typename("Long64_t"),-1,2,"fValue=",0,"!Pointer to data buffer");
   G__memvar_setup((void*)NULL,78,2,0,-1,G__defined_typename("Long64_t"),-1,2,"fPointer=",0,"!Address of pointer to data buffer");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLeafElement */
static void G__setup_memvarTLeafElement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafElement));
   { TLeafElement *p; p=(TLeafElement*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,2,"fAbsAddress=",0,"! Absolute leaf Address");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fID=",0,"element serial number in fInfo");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"leaf type");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLeafC */
static void G__setup_memvarTLeafC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafC));
   { TLeafC *p; p=(TLeafC*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMinimum=",0,"Minimum value if leaf range is specified");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaximum=",0,"Maximum value if leaf range is specified");
   G__memvar_setup((void*)NULL,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fValue=",0,"!Pointer to data buffer");
   G__memvar_setup((void*)NULL,67,2,0,-1,G__defined_typename("Char_t"),-1,2,"fPointer=",0,"!Address of pointer to data buffer");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSelectorScalar */
static void G__setup_memvarTSelectorScalar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelectorScalar));
   { TSelectorScalar *p; p=(TSelectorScalar*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TChainElement */
static void G__setup_memvarTChainElement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainElement));
   { TChainElement *p; p=(TChainElement*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEntries=",0,"Number of entries in the tree of this chain element");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPackets=",0,"Number of packets");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPacketSize=",0,"Number of events in one packet for parallel root");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStatus=",0,"branch status when used as a branch");
   G__memvar_setup((void*)NULL,89,0,0,-1,-1,-1,2,"fBaddress=",0,"!branch address when used as a branch");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__TreeLN_TString),-1,-1,2,"fBaddressClassName=",0,"!Name of the class pointed to by fBaddress");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fBaddressType=",0,"!Type of the value pointed to by fBaddress");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBaddressIsPtr=",0,"!True if the address is a pointer to an address");
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,2,"fPackets=",0,"!Packet descriptor string");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLeafO */
static void G__setup_memvarTLeafO(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafO));
   { TLeafO *p; p=(TLeafO*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMinimum=",0,"Minimum value if leaf range is specified");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMaximum=",0,"Maximum value if leaf range is specified");
   G__memvar_setup((void*)NULL,71,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fValue=",0,"!Pointer to data buffer");
   G__memvar_setup((void*)NULL,71,2,0,-1,G__defined_typename("Bool_t"),-1,2,"fPointer=",0,"!Address of a pointer to data buffer!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TNtupleD */
static void G__setup_memvarTNtupleD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtupleD));
   { TNtupleD *p; p=(TNtupleD*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNvar=",0,"Number of columns");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fArgs=",0,"! [fNvar] Array of variables");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLeafB */
static void G__setup_memvarTLeafB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafB));
   { TLeafB *p; p=(TLeafB*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fMinimum=",0,"Minimum value if leaf range is specified");
   G__memvar_setup((void*)NULL,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fMaximum=",0,"Maximum value if leaf range is specified");
   G__memvar_setup((void*)NULL,67,0,0,-1,G__defined_typename("Char_t"),-1,2,"fValue=",0,"!Pointer to data buffer");
   G__memvar_setup((void*)NULL,67,2,0,-1,G__defined_typename("Char_t"),-1,2,"fPointer=",0,"!Address of a pointer to data buffer!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TLeafObject */
static void G__setup_memvarTLeafObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafObject));
   { TLeafObject *p; p=(TLeafObject*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-1,2,"fClass=",0,"! pointer to class");
   G__memvar_setup((void*)NULL,89,2,0,-1,-1,-1,2,"fObjAddress=",0,"! Address of Pointer to object");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fVirtual=",0,"Support for Virtuality");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__TreeLN_TLeafObjectcLcLdA),-1,-2,1,"kWarn=4096",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Tree() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTTree(void) {
   /* TTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TTree));
   G__memfunc_setup("AddClone",762,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNameByIndex",1364,(G__InterfaceMethod)NULL,67,-1,-1,0,3,1,2,9,
"u 'TString' - 1 - varexp I - 'Int_t' 0 - index "
"i - 'Int_t' 0 - colindex",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("KeepCircular",1210,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeIndex",886,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"u 'TString' - 1 - varexp I - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ChangeFile",966,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__TreeLN_TFile),-1,0,1,1,2,0,"U 'TFile' - 0 - file",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BranchImp",884,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,6,1,2,0,
"C - - 10 - branchname C - - 10 - classname "
"U 'TClass' - 0 - ptrClass Y - - 0 - addobj "
"i - 'Int_t' 0 - bufsize i - 'Int_t' 0 - splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BranchImp",884,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,5,1,2,0,
"C - - 10 - branchname U 'TClass' - 0 - ptrClass "
"Y - - 0 - addobj i - 'Int_t' 0 - bufsize "
"i - 'Int_t' 0 - splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CheckBranchAddressType",2196,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,4,1,2,0,
"U 'TBranch' - 0 - branch U 'TClass' - 0 - ptrClass "
"i 'EDataType' - 0 - datatype g - 'Bool_t' 0 - ptr",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TTree",484,G__G__Tree_127_9_0,105,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTree",484,G__G__Tree_127_0_1,105,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,3,1,1,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 99 splitlevel",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddFriend",865,G__G__Tree_127_1_1,85,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,2,1,1,0,
"C - - 10 - treename C - - 10 \"\" filename",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddFriend",865,G__G__Tree_127_2_1,85,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,2,1,1,0,
"C - - 10 - treename U 'TFile' - 0 - file",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddFriend",865,G__G__Tree_127_3_1,85,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,3,1,1,0,
"U 'TTree' - 0 - tree C - - 10 \"\" alias "
"g - 'Bool_t' 0 kFALSE warn",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddTotBytes",1095,G__G__Tree_127_4_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - tot",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddZipBytes",1091,G__G__Tree_127_5_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - zip",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AutoSave",808,G__G__Tree_127_6_1,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_127_7_1,105,-1,G__defined_typename("Int_t"),0,4,1,1,0,
"U 'TCollection' - 0 - list i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 99 splitlevel C - - 10 \"\" name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_127_8_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"U 'TList' - 0 - list i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 99 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_127_9_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - folder i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 99 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_127_0_2,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,4,1,1,0,
"C - - 10 - name Y - - 0 - address "
"C - - 10 - leaflist i - 'Int_t' 0 32000 bufsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Bronch",604,G__G__Tree_127_1_2,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,5,1,1,0,
"C - - 10 - name C - - 10 - classname "
"Y - - 0 - addobj i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 99 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BranchOld",877,G__G__Tree_127_2_2,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,5,1,1,0,
"C - - 10 - name C - - 10 - classname "
"Y - - 0 - addobj i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 1 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BranchRef",875,G__G__Tree_127_3_2,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Browse",626,G__G__Tree_127_4_2,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildIndex",1000,G__G__Tree_127_5_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - majorname C - - 10 \"0\" minorname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildStreamerInfo",1727,G__G__Tree_127_6_2,85,G__get_linked_tagnum(&G__G__TreeLN_TStreamerInfo),-1,0,2,1,1,0,
"U 'TClass' - 0 - cl Y - - 0 0 pointer",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CloneTree",897,G__G__Tree_127_7_2,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,2,1,1,0,
"n - 'Long64_t' 0 -1 nentries C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CopyAddresses",1337,G__G__Tree_127_8_2,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - tree",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CopyEntries",1141,G__G__Tree_127_9_2,110,-1,G__defined_typename("Long64_t"),0,2,1,1,0,
"U 'TTree' - 0 - tree n - 'Long64_t' 0 -1 nentries",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CopyTree",811,G__G__Tree_127_0_3,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,4,1,1,0,
"C - - 10 - selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Debug",487,G__G__Tree_127_1_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Delete",595,G__G__Tree_127_2_3,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_127_3_3,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_127_4_3,110,-1,G__defined_typename("Long64_t"),0,5,1,1,0,
"C - - 10 - varexp u 'TCut' - 11 - selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_127_5_3,110,-1,G__defined_typename("Long64_t"),0,5,1,1,0,
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("DropBaskets",1122,G__G__Tree_127_6_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DropBuffers",1122,G__G__Tree_127_7_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - nbytes",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fill",391,G__G__Tree_127_8_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindBranch",975,G__G__Tree_127_9_3,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindLeaf",761,G__G__Tree_127_0_4,85,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fit",291,G__G__Tree_127_1_4,110,-1,G__defined_typename("Long64_t"),0,7,1,1,0,
"C - - 10 - funcname C - - 10 - varexp "
"C - - 10 \"\" selection C - 'Option_t' 10 \"\" option "
"C - 'Option_t' 10 \"\" goption n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("GetAlias",778,G__G__Tree_127_2_4,67,-1,-1,0,1,1,1,9,"C - - 10 - aliasName",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranch",878,G__G__Tree_127_3_4,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchRef",1163,G__G__Tree_127_4_4,85,G__get_linked_tagnum(&G__G__TreeLN_TBranchRef),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchStatus",1522,G__G__Tree_127_5_4,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"C - - 10 - branchname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchStyle",1407,G__G__Tree_127_6_4,105,-1,G__defined_typename("Int_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Int_t (*)())(&TTree::GetBranchStyle),0);
   G__memfunc_setup("GetChainEntryNumber",1918,G__G__Tree_127_7_4,110,-1,G__defined_typename("Long64_t"),0,1,1,1,8,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetChainOffset",1386,G__G__Tree_127_8_4,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCurrentFile",1411,G__G__Tree_127_9_4,85,G__get_linked_tagnum(&G__G__TreeLN_TFile),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDebugMax",1069,G__G__Tree_127_0_5,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDebugMin",1067,G__G__Tree_127_1_5,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDirectory",1237,G__G__Tree_127_2_5,85,G__get_linked_tagnum(&G__G__TreeLN_TDirectory),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntries",1018,G__G__Tree_127_3_5,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntriesFast",1416,G__G__Tree_127_4_5,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntriesFriend",1618,G__G__Tree_127_5_5,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEstimate",1116,G__G__Tree_127_6_5,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntry",818,G__G__Tree_127_7_5,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"n - 'Long64_t' 0 0 entry i - 'Int_t' 0 0 getall",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEvent",802,G__G__Tree_127_8_5,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"n - 'Long64_t' 0 0 entry i - 'Int_t' 0 0 getall",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntryWithIndex",1734,G__G__Tree_127_9_5,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - major i - 'Int_t' 0 0 minor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntryNumberWithBestIndex",2749,G__G__Tree_127_0_6,110,-1,G__defined_typename("Long64_t"),0,2,1,1,8,
"i - 'Int_t' 0 - major i - 'Int_t' 0 0 minor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntryNumberWithIndex",2351,G__G__Tree_127_1_6,110,-1,G__defined_typename("Long64_t"),0,2,1,1,8,
"i - 'Int_t' 0 - major i - 'Int_t' 0 0 minor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEventList",1214,G__G__Tree_127_2_6,85,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntryNumber",1435,G__G__Tree_127_3_6,110,-1,G__defined_typename("Long64_t"),0,1,1,1,8,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFileNumber",1289,G__G__Tree_127_4_6,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFriendAlias",1378,G__G__Tree_127_5_6,67,-1,-1,0,1,1,1,9,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetHistogram",1230,G__G__Tree_127_6_6,85,G__get_linked_tagnum(&G__G__TreeLN_TH1),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetIndex",792,G__G__Tree_127_7_6,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetIndexValues",1416,G__G__Tree_127_8_6,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetIteratorOnAllLeaves",2208,G__G__Tree_127_9_6,85,G__get_linked_tagnum(&G__G__TreeLN_TIterator),-1,0,1,1,1,0,"g - 'Bool_t' 0 kIterForward dir",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLeaf",664,G__G__Tree_127_0_7,85,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfClones",1493,G__G__Tree_127_1_7,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfBranches",1687,G__G__Tree_127_2_7,85,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfLeaves",1489,G__G__Tree_127_3_7,85,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfFriends",1596,G__G__Tree_127_4_7,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfAliases",1587,G__G__Tree_127_5_7,85,G__get_linked_tagnum(&G__G__TreeLN_TSeqCollection),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMakeClass",1172,G__G__Tree_127_6_7,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaxEntryLoop",1522,G__G__Tree_127_7_7,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaximum",1022,G__G__Tree_127_8_7,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"C - - 10 - columname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaxTreeSize",1393,G__G__Tree_127_9_7,110,-1,G__defined_typename("Long64_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Long64_t (*)())(&TTree::GetMaxTreeSize),0);
   G__memfunc_setup("GetMaxVirtualSize",1736,G__G__Tree_127_0_8,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMinimum",1020,G__G__Tree_127_1_8,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"C - - 10 - columname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNbranches",1204,G__G__Tree_127_2_8,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNotify",921,G__G__Tree_127_3_8,85,G__get_linked_tagnum(&G__G__TreeLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPlayer",909,G__G__Tree_127_4_8,85,G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPacketSize",1299,G__G__Tree_127_5_8,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetReadEntry",1198,G__G__Tree_127_6_8,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetReadEvent",1182,G__G__Tree_127_7_8,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetScanField",1161,G__G__Tree_127_8_8,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSelect",896,G__G__Tree_127_9_8,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSelectedRows",1524,G__G__Tree_127_0_9,110,-1,G__defined_typename("Long64_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTimerInterval",1638,G__G__Tree_127_1_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTotBytes",1118,G__G__Tree_127_2_9,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTree",688,G__G__Tree_127_3_9,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTreeIndex",1192,G__G__Tree_127_4_9,85,G__get_linked_tagnum(&G__G__TreeLN_TVirtualIndex),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTreeNumber",1305,G__G__Tree_127_5_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUpdate",899,G__G__Tree_127_6_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUserInfo",1099,G__G__Tree_127_7_9,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetVar1",634,G__G__Tree_127_8_9,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVar2",635,G__G__Tree_127_9_9,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVar3",636,G__G__Tree_127_0_10,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVar4",637,G__G__Tree_127_1_10,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetV1",423,G__G__Tree_127_2_10,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetV2",424,G__G__Tree_127_3_10,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetV3",425,G__G__Tree_127_4_10,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetV4",426,G__G__Tree_127_5_10,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetW",375,G__G__Tree_127_6_10,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetWeight",904,G__G__Tree_127_7_10,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetZipBytes",1114,G__G__Tree_127_8_10,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IncrementTotalBuffers",2166,G__G__Tree_127_9_10,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - nbytes",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsFolder",792,G__G__Tree_127_0_11,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LoadBaskets",1101,G__G__Tree_127_1_11,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"n - 'Long64_t' 0 2000000000 maxmemory",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LoadTree",784,G__G__Tree_127_2_11,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LoadTreeFriend",1384,G__G__Tree_127_3_11,110,-1,G__defined_typename("Long64_t"),0,2,1,1,0,
"n - 'Long64_t' 0 - entry U 'TTree' - 0 - T",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeClass",884,G__G__Tree_127_4_11,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 0 classname C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeCode",761,G__G__Tree_127_5_11,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 0 filename",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeProxy",928,G__G__Tree_127_6_11,105,-1,G__defined_typename("Int_t"),0,5,1,1,0,
"C - - 10 - classname C - - 10 0 macrofilename "
"C - - 10 0 cutfilename C - - 10 0 option "
"i - 'Int_t' 0 3 maxUnrolling",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeSelector",1215,G__G__Tree_127_7_11,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 0 selector",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MemoryFull",1036,G__G__Tree_127_8_11,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"i - 'Int_t' 0 - nbytes",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Merge",496,G__G__Tree_127_9_11,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"U 'TCollection' - 0 - list",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MergeTrees",1011,G__G__Tree_127_0_12,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,1,3,1,0,"U 'TList' - 0 - list",(char*)NULL,(void*)(TTree* (*)(TList*))(&TTree::MergeTrees),0);
   G__memfunc_setup("Notify",633,G__G__Tree_127_1_12,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Principal",930,G__G__Tree_127_2_12,85,G__get_linked_tagnum(&G__G__TreeLN_TPrincipal),-1,0,5,1,1,0,
"C - - 10 \"\" varexp C - - 10 \"\" selection "
"C - 'Option_t' 10 \"np\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Tree_127_3_12,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Process",735,G__G__Tree_127_4_12,110,-1,G__defined_typename("Long64_t"),0,4,1,1,0,
"C - - 10 - filename C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Process",735,G__G__Tree_127_5_12,110,-1,G__defined_typename("Long64_t"),0,4,1,1,0,
"U 'TSelector' - 0 - selector C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Project",727,G__G__Tree_127_6_12,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"C - - 10 - hname C - - 10 - varexp "
"C - - 10 \"\" selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Query",534,G__G__Tree_127_7_12,85,G__get_linked_tagnum(&G__G__TreeLN_TSQLResult),-1,0,5,1,1,0,
"C - - 10 \"\" varexp C - - 10 \"\" selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFile",764,G__G__Tree_127_8_12,110,-1,G__defined_typename("Long64_t"),0,2,1,1,0,
"C - - 10 - filename C - - 10 \"\" branchDescriptor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Refresh",719,G__G__Tree_127_9_12,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RemoveFriend",1222,G__G__Tree_127_0_13,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Tree_127_1_13,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetBranchAddresses",2031,G__G__Tree_127_2_13,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Scan",389,G__G__Tree_127_3_13,110,-1,G__defined_typename("Long64_t"),0,5,1,1,0,
"C - - 10 \"\" varexp C - - 10 \"\" selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetAlias",790,G__G__Tree_127_4_13,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"C - - 10 - aliasName C - - 10 - aliasFormula",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAutoSave",1108,G__G__Tree_127_5_13,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 10000000 autos",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBasketSize",1313,G__G__Tree_127_6_13,121,-1,-1,0,2,1,1,0,
"C - - 10 - bname i - 'Int_t' 0 16000 buffsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchAddress",1600,G__G__Tree_127_7_13,121,-1,-1,0,5,1,1,0,
"C - - 10 - bname Y - - 0 - add "
"U 'TClass' - 0 - realClass i 'EDataType' - 0 - datatype "
"g - 'Bool_t' 0 - ptr",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchStatus",1534,G__G__Tree_127_8_13,121,-1,-1,0,3,1,1,0,
"C - - 10 - bname g - 'Bool_t' 0 1 status "
"H - 'UInt_t' 0 0 found",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchStyle",1419,G__G__Tree_127_9_13,121,-1,-1,0,1,3,1,0,"i - 'Int_t' 0 1 style","style=0 for old branch, =1 for new branch style",(void*)(void (*)(Int_t))(&TTree::SetBranchStyle),0);
   G__memfunc_setup("SetChainOffset",1398,G__G__Tree_127_0_14,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 offset",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetCircular",1121,G__G__Tree_127_1_14,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - maxEntries",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDebug",787,G__G__Tree_127_2_14,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 1 level n - 'Long64_t' 0 0 min "
"n - 'Long64_t' 0 9999999 max","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetDirectory",1249,G__G__Tree_127_3_14,121,-1,-1,0,1,1,1,0,"U 'TDirectory' - 0 - dir",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetEntries",1030,G__G__Tree_127_4_14,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"n - 'Long64_t' 0 -1 n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetEstimate",1128,G__G__Tree_127_5_14,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 10000 nentries",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFileNumber",1301,G__G__Tree_127_6_14,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 number",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetEventList",1226,G__G__Tree_127_7_14,121,-1,-1,0,1,1,1,0,"U 'TEventList' - 0 - list",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMakeClass",1184,G__G__Tree_127_8_14,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - make",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMaxEntryLoop",1534,G__G__Tree_127_9_14,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 1000000000 maxev","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetMaxTreeSize",1405,G__G__Tree_127_0_15,121,-1,-1,0,1,3,1,0,"n - 'Long64_t' 0 1900000000 maxsize",(char*)NULL,(void*)(void (*)(Long64_t))(&TTree::SetMaxTreeSize),0);
   G__memfunc_setup("SetMaxVirtualSize",1748,G__G__Tree_127_1_15,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 0 size","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetName",685,G__G__Tree_127_2_15,121,-1,-1,0,1,1,1,0,"C - - 10 - name","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetNotify",933,G__G__Tree_127_3_15,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetObject",899,G__G__Tree_127_4_15,121,-1,-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - title",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetScanField",1173,G__G__Tree_127_5_15,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 50 n","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetTimerInterval",1650,G__G__Tree_127_6_15,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 333 msec",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTreeIndex",1204,G__G__Tree_127_7_15,121,-1,-1,0,1,1,1,0,"U 'TVirtualIndex' - 0 - index",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetWeight",916,G__G__Tree_127_8_15,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 1 w C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetUpdate",911,G__G__Tree_127_9_15,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 freq",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Show",417,G__G__Tree_127_0_16,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 -1 entry i - 'Int_t' 0 20 lenmax",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StartViewer",1152,G__G__Tree_127_1_16,121,-1,-1,0,0,1,1,0,"","*MENU*",(void*)NULL,1);
   G__memfunc_setup("UnbinnedFit",1110,G__G__Tree_127_2_16,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"C - - 10 - funcname C - - 10 - varexp "
"C - - 10 \"\" selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UseCurrentStyle",1569,G__G__Tree_127_3_16,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_127_4_16,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TTree::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_127_5_16,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTree::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_127_6_16,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TTree::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_127_7_16,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TTree::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_127_8_16,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_127_9_16,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_127_0_17,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_127_1_17,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_127_2_17,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTree::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_127_3_17,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTree::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_127_4_17,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTree::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_127_5_17,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTree::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TTree",610,G__G__Tree_127_6_17,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSelector(void) {
   /* TSelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelector));
   G__memfunc_setup("TSelector",917,G__G__Tree_128_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TSelector),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Version",742,G__G__Tree_128_2_0,105,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Init",404,G__G__Tree_128_3_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Begin",485,G__G__Tree_128_4_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveBegin",992,G__G__Tree_128_5_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Notify",633,G__G__Tree_128_6_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOption",921,G__G__Tree_128_7_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStatus",932,G__G__Tree_128_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ProcessCut",1035,G__G__Tree_128_9_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"n - 'Long64_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ProcessFill",1126,G__G__Tree_128_0_1,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Process",735,G__G__Tree_128_1_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"n - 'Long64_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetOption",933,G__G__Tree_128_2_1,121,-1,-1,0,1,1,1,0,"C - - 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetObject",899,G__G__Tree_128_3_1,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetInputList",1240,G__G__Tree_128_4_1,121,-1,-1,0,1,1,1,0,"U 'TList' - 0 - input",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetStatus",944,G__G__Tree_128_5_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - status",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOutputList",1357,G__G__Tree_128_6_1,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveTerminate",1444,G__G__Tree_128_7_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Terminate",937,G__G__Tree_128_8_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSelector",1121,G__G__Tree_128_9_1,85,G__get_linked_tagnum(&G__G__TreeLN_TSelector),-1,0,1,3,1,0,"C - - 10 - filename",(char*)NULL,(void*)(TSelector* (*)(const char*))(&TSelector::GetSelector),0);
   G__memfunc_setup("Class",502,G__G__Tree_128_0_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSelector::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_128_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSelector::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_128_2_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSelector::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_128_3_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSelector::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_128_4_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_128_5_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_128_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_128_7_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_128_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSelector::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_128_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSelector::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_128_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSelector::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_128_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSelector::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TSelector",917,G__G__Tree_128_2_3,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TSelector),-1,0,1,1,1,0,"u 'TSelector' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TSelector",1043,G__G__Tree_128_3_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_128_4_3,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TSelector),-1,1,1,1,1,0,"u 'TSelector' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEventList(void) {
   /* TEventList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TEventList));
   G__memfunc_setup("TEventList",1010,G__G__Tree_129_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TEventList",1010,G__G__Tree_129_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,0,4,1,1,0,
"C - - 10 - name C - - 10 \"\" title "
"i - 'Int_t' 0 0 initsize i - 'Int_t' 0 0 delta",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TEventList",1010,G__G__Tree_129_3_0,105,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,0,1,1,1,0,"u 'TEventList' - 11 - list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Tree_129_4_0,121,-1,-1,0,1,1,1,0,"U 'TEventList' - 10 - list",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clear",487,G__G__Tree_129_5_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Contains",831,G__G__Tree_129_6_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"i - 'Int_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Enter",510,G__G__Tree_129_7_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDirectory",1237,G__G__Tree_129_8_0,85,G__get_linked_tagnum(&G__G__TreeLN_TDirectory),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntry",818,G__G__Tree_129_9_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetIndex",792,G__G__Tree_129_0_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"i - 'Int_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetList",700,G__G__Tree_129_1_1,73,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetN",366,G__G__Tree_129_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetReapplyCut",1321,G__G__Tree_129_3_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSize",699,G__G__Tree_129_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Intersect",945,G__G__Tree_129_5_1,121,-1,-1,0,1,1,1,0,"U 'TEventList' - 10 - list",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Merge",496,G__G__Tree_129_6_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TCollection' - 0 - list",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Tree_129_7_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Tree_129_8_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Resize",626,G__G__Tree_129_9_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 delta",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDelta",790,G__G__Tree_129_0_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 100 delta",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDirectory",1249,G__G__Tree_129_1_2,121,-1,-1,0,1,1,1,0,"U 'TDirectory' - 0 - dir",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetName",685,G__G__Tree_129_2_2,121,-1,-1,0,1,1,1,0,"C - - 10 - name","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetReapplyCut",1333,G__G__Tree_129_3_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE apply","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("Sort",424,G__G__Tree_129_4_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Subtract",840,G__G__Tree_129_5_2,121,-1,-1,0,1,1,1,0,"U 'TEventList' - 10 - list",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator=",937,G__G__Tree_129_6_2,117,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,1,1,1,1,0,"u 'TEventList' - 11 - list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Tree_129_7_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TEventList::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_129_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventList::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_129_9_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TEventList::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_129_0_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TEventList::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_129_1_3,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_129_2_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_129_3_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_129_4_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_129_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventList::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_129_6_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TEventList::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_129_7_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TEventList::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_129_8_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TEventList::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TEventList",1136,G__G__Tree_129_9_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSet(void) {
   /* TDSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSet));
   G__memfunc_setup("GridAdd",655,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,5,1,2,0,
"C - - 10 - file C - - 10 0 objname "
"C - - 10 0 dir n - 'Long64_t' 0 0 first "
"n - 'Long64_t' 0 -1 num",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GridAddElementMsn",1671,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TDSetElementPfn' - 0 - dsepfn",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSet",452,G__G__Tree_130_3_0,105,G__get_linked_tagnum(&G__G__TreeLN_TDSet),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSet",452,G__G__Tree_130_4_0,105,G__get_linked_tagnum(&G__G__TreeLN_TDSet),-1,0,3,1,1,0,
"C - - 10 - type C - - 10 \"*\" objname "
"C - - 10 \"/\" dir",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Tree_130_5_0,103,-1,G__defined_typename("Bool_t"),0,6,1,1,0,
"C - - 10 - file C - - 10 0 objname "
"C - - 10 0 dir n - 'Long64_t' 0 0 first "
"n - 'Long64_t' 0 -1 num C - - 10 0 msd",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Add",265,G__G__Tree_130_6_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'TDSet' - 0 - set",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddFriend",865,G__G__Tree_130_7_0,121,-1,-1,0,1,1,1,0,"U 'TDSet' - 0 - friendset",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddQuery",799,G__G__Tree_130_8_0,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"C - - 10 - path C - - 10 - file "
"C - - 10 0 conditions",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Request",745,G__G__Tree_130_9_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Connect",714,G__G__Tree_130_0_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Process",735,G__G__Tree_130_1_1,105,-1,G__defined_typename("Int_t"),0,5,1,1,0,
"C - - 10 - selector C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 -1 nentries n - 'Long64_t' 0 0 firstentry "
"U 'TEventList' - 0 0 evl","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_130_2_1,105,-1,G__defined_typename("Int_t"),0,5,1,1,0,
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 -1 nentries "
"n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_130_3_1,105,-1,G__defined_typename("Int_t"),0,5,1,1,0,
"C - - 10 - varexp u 'TCut' - 11 - selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 -1 nentries "
"n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_130_4_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Tree_130_5_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetObjName",968,G__G__Tree_130_6_1,121,-1,-1,0,1,1,1,0,"C - - 10 - objname",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetDirectory",1249,G__G__Tree_130_7_1,121,-1,-1,0,1,1,1,0,"C - - 10 - dir",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsTree",588,G__G__Tree_130_8_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsValid",684,G__G__Tree_130_9_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ElementsValid",1325,G__G__Tree_130_0_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetType",706,G__G__Tree_130_1_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetObjName",956,G__G__Tree_130_2_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDirectory",1237,G__G__Tree_130_3_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfElements",1710,G__G__Tree_130_4_2,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfElementsMsn",2012,G__G__Tree_130_5_2,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GridPack",773,G__G__Tree_130_6_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GridPrintPackList",1710,G__G__Tree_130_7_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Tree_130_8_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Next",415,G__G__Tree_130_9_2,85,G__get_linked_tagnum(&G__G__TreeLN_TDSetElement),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Current",739,G__G__Tree_130_0_3,85,G__get_linked_tagnum(&G__G__TreeLN_TDSetElement),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntries",1018,G__G__Tree_130_1_3,110,-1,G__defined_typename("Long64_t"),0,4,3,1,0,
"g - 'Bool_t' 0 - isTree C - - 10 - filename "
"C - - 10 - path C - - 10 - objname",(char*)NULL,(void*)(Long64_t (*)(Bool_t,const char*,const char*,const char*))(&TDSet::GetEntries),0);
   G__memfunc_setup("AddInput",793,G__G__Tree_130_2_3,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ClearInput",1015,G__G__Tree_130_3_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOutput",945,G__G__Tree_130_4_3,85,G__get_linked_tagnum(&G__G__TreeLN_TObject),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOutputList",1357,G__G__Tree_130_5_3,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("StartViewer",1152,G__G__Tree_130_6_3,121,-1,-1,0,0,1,1,0,"","*MENU*",(void*)NULL,1);
   G__memfunc_setup("GetTreeHeader",1273,G__G__Tree_130_7_3,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,1,1,1,0,"U 'TVirtualProof' - 0 - proof",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeTDSet",834,G__G__Tree_130_8_3,85,G__get_linked_tagnum(&G__G__TreeLN_TDSet),-1,0,1,3,1,0,"U 'TChain' - 0 - chain",(char*)NULL,(void*)(TDSet* (*)(TChain*))(&TDSet::MakeTDSet),0);
   G__memfunc_setup("SetEventList",1226,G__G__Tree_130_9_3,121,-1,-1,0,1,1,1,0,"U 'TEventList' - 0 - evl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEventList",1214,G__G__Tree_130_0_4,85,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Validate",810,G__G__Tree_130_1_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Validate",810,G__G__Tree_130_2_4,121,-1,-1,0,1,1,1,0,"U 'TDSet' - 0 - dset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Tree_130_3_4,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDSet::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_130_4_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSet::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_130_5_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDSet::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_130_6_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDSet::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_130_7_4,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_130_8_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_130_9_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_130_0_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_130_1_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSet::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_130_2_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDSet::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_130_3_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSet::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_130_4_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDSet::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TDSet",452,G__G__Tree_130_5_5,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TDSet),-1,0,1,1,1,0,"u 'TDSet' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSet",578,G__G__Tree_130_6_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_130_7_5,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TDSet),-1,1,1,1,1,0,"u 'TDSet' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCut(void) {
   /* TCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TCut));
   G__memfunc_setup("TCut",384,G__G__Tree_131_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCut",384,G__G__Tree_131_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,1,1,1,0,"C - - 10 - title",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCut",384,G__G__Tree_131_3_0,105,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - title",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCut",384,G__G__Tree_131_4_0,105,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,1,1,1,0,"u 'TCut' - 11 - cut",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Tree_131_5_0,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,1,1,1,1,0,"C - - 10 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Tree_131_6_0,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,1,1,1,1,0,"u 'TCut' - 11 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Tree_131_7_0,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,1,1,1,1,0,"C - - 10 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Tree_131_8_0,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,1,1,1,1,0,"u 'TCut' - 11 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Tree_131_9_0,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,1,1,1,1,0,"C - - 10 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Tree_131_0_1,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,1,1,1,1,0,"u 'TCut' - 11 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator const char*",1947,G__G__Tree_131_1_1,67,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Tree_131_2_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCut::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_131_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCut::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_131_4_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCut::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_131_5_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCut::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_131_6_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_131_7_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_131_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_131_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_131_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCut::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_131_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCut::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_131_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCut::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_131_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCut::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TCut",510,G__G__Tree_131_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTChain(void) {
   /* TChain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TChain));
   G__memfunc_setup("ReleaseChainProof",1706,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TChain",567,G__G__Tree_132_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TChain),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TChain",567,G__G__Tree_132_3_0,105,G__get_linked_tagnum(&G__G__TreeLN_TChain),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 \"\" title",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Tree_132_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TChain' - 0 - chain",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Add",265,G__G__Tree_132_5_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - name n - 'Long64_t' 0 kBigNumber nentries",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddFile",649,G__G__Tree_132_6_0,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - name n - 'Long64_t' 0 kBigNumber nentries "
"C - - 10 \"\" tname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddFriend",865,G__G__Tree_132_7_0,85,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,2,1,1,0,
"C - - 10 - chainname C - - 10 \"\" dummy",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddFriend",865,G__G__Tree_132_8_0,85,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,2,1,1,0,
"C - - 10 - chainname U 'TFile' - 0 - dummy",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddFriend",865,G__G__Tree_132_9_0,85,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,3,1,1,0,
"U 'TTree' - 0 - chain C - - 10 - alias "
"g - 'Bool_t' 0 kFALSE warn",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Browse",626,G__G__Tree_132_0_1,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CanDeleteRefs",1269,G__G__Tree_132_1_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE flag",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CreatePackets",1311,G__G__Tree_132_2_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_132_3_1,110,-1,G__defined_typename("Long64_t"),0,5,1,1,0,
"C - - 10 - varexp u 'TCut' - 11 - selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 kBigNumber nentries "
"n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_132_4_1,110,-1,G__defined_typename("Long64_t"),0,5,1,1,0,
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 kBigNumber nentries "
"n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_132_5_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fill",391,G__G__Tree_132_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindBranch",975,G__G__Tree_132_7_1,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindLeaf",761,G__G__Tree_132_8_1,85,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranch",878,G__G__Tree_132_9_1,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchStatus",1522,G__G__Tree_132_0_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"C - - 10 - branchname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetChainEntryNumber",1918,G__G__Tree_132_1_2,110,-1,G__defined_typename("Long64_t"),0,1,1,1,8,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNtrees",913,G__G__Tree_132_2_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntries",1018,G__G__Tree_132_3_2,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntry",818,G__G__Tree_132_4_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"n - 'Long64_t' 0 0 entry i - 'Int_t' 0 0 getall",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntryWithIndex",1734,G__G__Tree_132_5_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - major i - 'Int_t' 0 0 minor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFile",672,G__G__Tree_132_6_2,85,G__get_linked_tagnum(&G__G__TreeLN_TFile),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLeaf",664,G__G__Tree_132_7_2,85,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfBranches",1687,G__G__Tree_132_8_2,85,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfFiles",1380,G__G__Tree_132_9_2,85,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfLeaves",1489,G__G__Tree_132_0_3,85,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAlias",778,G__G__Tree_132_1_3,67,-1,-1,0,1,1,1,9,"C - - 10 - aliasName",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaximum",1022,G__G__Tree_132_2_3,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"C - - 10 - columname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMinimum",1020,G__G__Tree_132_3_3,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"C - - 10 - columname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNbranches",1204,G__G__Tree_132_4_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetReadEntry",1198,G__G__Tree_132_5_3,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStatus",932,G__G__Tree_132_6_3,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTree",688,G__G__Tree_132_7_3,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTreeNumber",1305,G__G__Tree_132_8_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTreeOffset",1303,G__G__Tree_132_9_3,78,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTreeOffsetLen",1590,G__G__Tree_132_0_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWeight",904,G__G__Tree_132_1_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LoadBaskets",1101,G__G__Tree_132_2_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"n - 'Long64_t' 0 - maxmemory",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LoadTree",784,G__G__Tree_132_3_4,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Loop",410,G__G__Tree_132_4_4,121,-1,-1,0,3,1,1,0,
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 kBigNumber nentries "
"n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("ls",223,G__G__Tree_132_5_4,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Merge",496,G__G__Tree_132_6_4,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Merge",496,G__G__Tree_132_7_4,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"U 'TCollection' - 0 - list",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Merge",496,G__G__Tree_132_8_4,110,-1,G__defined_typename("Long64_t"),0,3,1,1,0,
"U 'TFile' - 0 - file i - 'Int_t' 0 - basketsize "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Tree_132_9_4,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Process",735,G__G__Tree_132_0_5,110,-1,G__defined_typename("Long64_t"),0,4,1,1,0,
"C - - 10 - filename C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 kBigNumber nentries n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Process",735,G__G__Tree_132_1_5,110,-1,G__defined_typename("Long64_t"),0,4,1,1,0,
"U 'TSelector' - 0 - selector C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 kBigNumber nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Tree_132_2_5,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Scan",389,G__G__Tree_132_3_5,110,-1,G__defined_typename("Long64_t"),0,5,1,1,0,
"C - - 10 \"\" varexp C - - 10 \"\" selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetAutoDelete",1304,G__G__Tree_132_4_5,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE autodel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchAddress",1600,G__G__Tree_132_5_5,121,-1,-1,0,2,1,1,0,
"C - - 10 - bname Y - - 0 - add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchAddress",1600,G__G__Tree_132_6_5,121,-1,-1,0,5,1,1,0,
"C - - 10 - bname Y - - 0 - add "
"U 'TClass' - 0 - realClass i 'EDataType' - 0 - datatype "
"g - 'Bool_t' 0 - ptr",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchStatus",1534,G__G__Tree_132_7_5,121,-1,-1,0,3,1,1,0,
"C - - 10 - bname g - 'Bool_t' 0 1 status "
"H - 'UInt_t' 0 0 found",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDirectory",1249,G__G__Tree_132_8_5,121,-1,-1,0,1,1,1,0,"U 'TDirectory' - 0 - dir",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMakeClass",1184,G__G__Tree_132_9_5,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - make",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPacketSize",1311,G__G__Tree_132_0_6,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 100 size",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetProof",818,G__G__Tree_132_1_6,121,-1,-1,0,1,1,1,0,"U 'TVirtualProof' - 0 (TVirtualProof*)-1 proof",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetWeight",916,G__G__Tree_132_2_6,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 1 w C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UseCache",769,G__G__Tree_132_3_6,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 10 maxCacheSize i - 'Int_t' 0 TCache::kDfltPageSize pageSize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_132_4_6,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TChain::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_132_5_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TChain::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_132_6_6,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TChain::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_132_7_6,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TChain::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_132_8_6,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_132_9_6,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_132_0_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_132_1_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_132_2_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TChain::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_132_3_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TChain::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_132_4_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TChain::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_132_5_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TChain::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TChain",693,G__G__Tree_132_6_7,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSetElementPfn(void) {
   /* TDSetElementPfn */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn));
   G__memfunc_setup("TDSetElementPfn",1458,G__G__Tree_133_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn),-1,0,3,1,1,0,
"C - - 10 0 pfn C - - 10 0 msn "
"n - 'Long64_t' 0 -1 size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPfn",580,G__G__Tree_133_2_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMsn",590,G__G__Tree_133_3_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCen",566,G__G__Tree_133_4_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetCen",578,G__G__Tree_133_5_0,121,-1,-1,0,1,1,1,0,"C - - 10 - cen",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetCen",578,G__G__Tree_133_6_0,121,-1,-1,0,1,1,1,0,"u 'TString' - 11 - cen",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSize",699,G__G__Tree_133_7_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Tree_133_8_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_133_9_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDSetElementPfn::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_133_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetElementPfn::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_133_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDSetElementPfn::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_133_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDSetElementPfn::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_133_3_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_133_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_133_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_133_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_133_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetElementPfn::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_133_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDSetElementPfn::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_133_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetElementPfn::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_133_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDSetElementPfn::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TDSetElementPfn",1458,G__G__Tree_133_1_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn),-1,0,1,1,1,0,"u 'TDSetElementPfn' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSetElementPfn",1584,G__G__Tree_133_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_133_3_2,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn),-1,1,1,1,1,0,"u 'TDSetElementPfn' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSetElementMsn(void) {
   /* TDSetElementMsn */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn));
   G__memfunc_setup("TDSetElementMsn",1468,G__G__Tree_134_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSetElementMsn",1468,G__G__Tree_134_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn),-1,0,1,1,1,0,"U 'TDSetElementPfn' - 0 - dse",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMsn",590,G__G__Tree_134_3_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNfiles",897,G__G__Tree_134_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDataSize",1077,G__G__Tree_134_5_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetName",673,G__G__Tree_134_6_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNSiteDaemons",1482,G__G__Tree_134_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNSiteDaemons",1494,G__G__Tree_134_8_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ndaemons",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaxSiteDaemons",1698,G__G__Tree_134_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDataPerSiteDaemon",1962,G__G__Tree_134_0_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaxDataPerSiteDaemon",2256,G__G__Tree_134_1_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMaxDataPerSiteDaemon",2268,G__G__Tree_134_2_1,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - maxdata",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMaxSiteDaemons",1710,G__G__Tree_134_3_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - maxdaemons",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Increment",933,G__G__Tree_134_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddData",643,G__G__Tree_134_5_1,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"n - 'Long64_t' 0 - datasize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Tree_134_6_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_134_7_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDSetElementMsn::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_134_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetElementMsn::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_134_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDSetElementMsn::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_134_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDSetElementMsn::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_134_1_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_134_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_134_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_134_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_134_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetElementMsn::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_134_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDSetElementMsn::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_134_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetElementMsn::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_134_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDSetElementMsn::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TDSetElementMsn",1468,G__G__Tree_134_9_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn),-1,0,1,1,1,0,"u 'TDSetElementMsn' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSetElementMsn",1594,G__G__Tree_134_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_134_1_3,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn),-1,1,1,1,1,0,"u 'TDSetElementMsn' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDSetElement(void) {
   /* TDSetElement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElement));
   G__memfunc_setup("TDSetElement",1166,G__G__Tree_135_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TDSetElement),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDSetElement",1166,G__G__Tree_135_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TDSetElement),-1,0,7,1,1,0,
"U 'TDSet' - 10 - set C - - 10 - file "
"C - - 10 0 objname C - - 10 0 dir "
"n - 'Long64_t' 0 0 first n - 'Long64_t' 0 -1 num "
"C - - 10 0 msd",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddPfn",557,G__G__Tree_135_3_0,121,-1,-1,0,3,1,1,0,
"C - - 10 - pfn C - - 10 0 se "
"n - 'Long64_t' 0 -1 size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFileName",1057,G__G__Tree_135_4_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFirstPfnElement",1814,G__G__Tree_135_5_0,85,G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFirst",808,G__G__Tree_135_6_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFirst",820,G__G__Tree_135_7_0,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - first",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNum",592,G__G__Tree_135_8_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMsd",580,G__G__Tree_135_9_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNum",604,G__G__Tree_135_0_1,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - num",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetValid",784,G__G__Tree_135_1_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumPfnList",1296,G__G__Tree_135_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetObjName",956,G__G__Tree_135_3_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDirectory",1237,G__G__Tree_135_4_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Reset",515,G__G__Tree_135_5_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Next",415,G__G__Tree_135_6_1,85,G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Tree_135_7_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" options",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTDSetOffset",1355,G__G__Tree_135_8_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTDSetOffset",1367,G__G__Tree_135_9_1,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - offset",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEventList",1214,G__G__Tree_135_0_2,85,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetEventList",1226,G__G__Tree_135_1_2,121,-1,-1,0,1,1,1,0,"U 'TEventList' - 0 - aList",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Validate",810,G__G__Tree_135_2_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Validate",810,G__G__Tree_135_3_2,121,-1,-1,0,1,1,1,0,"U 'TDSetElement' - 0 - elem",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Compare",711,G__G__Tree_135_4_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsSortable",1016,G__G__Tree_135_5_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_135_6_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDSetElement::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_135_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetElement::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_135_8_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDSetElement::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_135_9_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDSetElement::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_135_0_3,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_135_1_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_135_2_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_135_3_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_135_4_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetElement::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_135_5_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDSetElement::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_135_6_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDSetElement::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_135_7_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDSetElement::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TDSetElement",1166,G__G__Tree_135_8_3,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TDSetElement),-1,0,1,1,1,0,"u 'TDSetElement' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TDSetElement",1292,G__G__Tree_135_9_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVirtualIndex(void) {
   /* TVirtualIndex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualIndex));
   G__memfunc_setup("GetEntryNumberFriend",2035,G__G__Tree_171_2_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TTree' - 10 - -",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetEntryNumberWithIndex",2351,G__G__Tree_171_3_0,110,-1,G__defined_typename("Long64_t"),0,2,1,1,8,
"i - 'Int_t' 0 - major i - 'Int_t' 0 - minor",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetEntryNumberWithBestIndex",2749,G__G__Tree_171_4_0,110,-1,G__defined_typename("Long64_t"),0,2,1,1,8,
"i - 'Int_t' 0 - major i - 'Int_t' 0 - minor",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetMajorName",1178,G__G__Tree_171_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetMinorName",1190,G__G__Tree_171_6_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetN",366,G__G__Tree_171_7_0,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetTree",688,G__G__Tree_171_8_0,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTree",700,G__G__Tree_171_9_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 10 - T",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Class",502,G__G__Tree_171_0_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TVirtualIndex::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_171_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualIndex::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_171_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TVirtualIndex::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_171_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TVirtualIndex::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_171_4_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_171_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_171_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_171_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_171_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualIndex::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_171_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualIndex::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_171_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualIndex::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_171_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualIndex::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TVirtualIndex",1457,G__G__Tree_171_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_171_3_2,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TVirtualIndex),-1,1,1,1,1,0,"u 'TVirtualIndex' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVirtualTreePlayer(void) {
   /* TVirtualTreePlayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer));
   G__memfunc_setup("BuildIndex",1000,G__G__Tree_172_2_0,85,G__get_linked_tagnum(&G__G__TreeLN_TVirtualIndex),-1,0,3,1,1,0,
"U 'TTree' - 10 - T C - - 10 - majorname "
"C - - 10 - minorname",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("CopyTree",811,G__G__Tree_172_3_0,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,4,1,1,0,
"C - - 10 - selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("DrawScript",1027,G__G__Tree_172_4_0,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"C - - 10 - wrapperPrefix C - - 10 - macrofilename "
"C - - 10 - cutfilename C - 'Option_t' 10 - option "
"n - 'Long64_t' 0 - nentries n - 'Long64_t' 0 - firstentry",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("DrawSelect",1006,G__G__Tree_172_5_0,110,-1,G__defined_typename("Long64_t"),0,5,1,1,0,
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 - option n - 'Long64_t' 0 - nentries "
"n - 'Long64_t' 0 - firstentry",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Fit",291,G__G__Tree_172_6_0,110,-1,G__defined_typename("Long64_t"),0,7,1,1,0,
"C - - 10 - formula C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 - option "
"C - 'Option_t' 10 - goption n - 'Long64_t' 0 - nentries "
"n - 'Long64_t' 0 - firstentry",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetDimension",1222,G__G__Tree_172_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetHistogram",1230,G__G__Tree_172_8_0,85,G__get_linked_tagnum(&G__G__TreeLN_TH1),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetNfill",789,G__G__Tree_172_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetSelectedRows",1524,G__G__Tree_172_0_1,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetSelect",896,G__G__Tree_172_1_1,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetVar1",634,G__G__Tree_172_2_1,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetVar2",635,G__G__Tree_172_3_1,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetVar3",636,G__G__Tree_172_4_1,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetVar4",637,G__G__Tree_172_5_1,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetV1",423,G__G__Tree_172_6_1,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetV2",424,G__G__Tree_172_7_1,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetV3",425,G__G__Tree_172_8_1,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetV4",426,G__G__Tree_172_9_1,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetW",375,G__G__Tree_172_0_2,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("MakeClass",884,G__G__Tree_172_1_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - classname C - - 10 - option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("MakeCode",761,G__G__Tree_172_2_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - filename",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("MakeProxy",928,G__G__Tree_172_3_2,105,-1,G__defined_typename("Int_t"),0,5,1,1,0,
"C - - 10 - classname C - - 10 0 macrofilename "
"C - - 10 0 cutfilename C - - 10 0 option "
"i - 'Int_t' 0 3 maxUnrolling",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Principal",930,G__G__Tree_172_4_2,85,G__get_linked_tagnum(&G__G__TreeLN_TPrincipal),-1,0,5,1,1,0,
"C - - 10 \"\" varexp C - - 10 \"\" selection "
"C - 'Option_t' 10 \"np\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Process",735,G__G__Tree_172_5_2,110,-1,G__defined_typename("Long64_t"),0,4,1,1,0,
"C - - 10 - filename C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Process",735,G__G__Tree_172_6_2,110,-1,G__defined_typename("Long64_t"),0,4,1,1,0,
"U 'TSelector' - 0 - selector C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Scan",389,G__G__Tree_172_7_2,110,-1,G__defined_typename("Long64_t"),0,5,1,1,0,
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 - option n - 'Long64_t' 0 - nentries "
"n - 'Long64_t' 0 - firstentry",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Query",534,G__G__Tree_172_8_2,85,G__get_linked_tagnum(&G__G__TreeLN_TSQLResult),-1,0,5,1,1,0,
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 - option n - 'Long64_t' 0 - nentries "
"n - 'Long64_t' 0 - firstentry",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetEstimate",1128,G__G__Tree_172_9_2,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - n",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetTree",700,G__G__Tree_172_0_3,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - t",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("StartViewer",1152,G__G__Tree_172_1_3,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("UnbinnedFit",1110,G__G__Tree_172_2_3,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"C - - 10 - formula C - - 10 - varexp "
"C - - 10 - selection C - 'Option_t' 10 - option "
"n - 'Long64_t' 0 - nentries n - 'Long64_t' 0 - firstentry",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("UpdateFormulaLeaves",1945,G__G__Tree_172_3_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetCurrentPlayer",1648,G__G__Tree_172_4_3,85,G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TVirtualTreePlayer* (*)())(&TVirtualTreePlayer::GetCurrentPlayer),0);
   G__memfunc_setup("TreePlayer",1021,G__G__Tree_172_5_3,85,G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer),-1,0,1,3,1,0,"U 'TTree' - 0 - obj",(char*)NULL,(void*)(TVirtualTreePlayer* (*)(TTree*))(&TVirtualTreePlayer::TreePlayer),0);
   G__memfunc_setup("SetPlayer",921,G__G__Tree_172_6_3,121,-1,-1,0,1,3,1,0,"C - - 10 - player",(char*)NULL,(void*)(void (*)(const char*))(&TVirtualTreePlayer::SetPlayer),0);
   G__memfunc_setup("Class",502,G__G__Tree_172_7_3,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TVirtualTreePlayer::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_172_8_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualTreePlayer::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_172_9_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TVirtualTreePlayer::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_172_0_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TVirtualTreePlayer::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_172_1_4,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_172_2_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_172_3_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_172_4_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_172_5_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualTreePlayer::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_172_6_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualTreePlayer::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_172_7_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualTreePlayer::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_172_8_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualTreePlayer::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TVirtualTreePlayer",1974,G__G__Tree_172_9_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_172_0_5,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer),-1,1,1,1,1,0,"u 'TVirtualTreePlayer' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTBranch(void) {
   /* TBranch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranch));
   G__memfunc_setup("SetSkipZip",1014,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"g - 'Bool_t' 0 kTRUE skip",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("WriteBasket",1125,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TBasket' - 0 - basket",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TBranch",674,G__G__Tree_173_3_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TBranch",674,G__G__Tree_173_4_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,5,1,1,0,
"C - - 10 - name Y - - 0 - address "
"C - - 10 - leaflist i - 'Int_t' 0 32000 basketsize "
"i - 'Int_t' 0 -1 compress",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Browse",626,G__G__Tree_173_5_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DropBaskets",1122,G__G__Tree_173_6_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fill",391,G__G__Tree_173_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillLeaves",999,G__G__Tree_173_8_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindBranch",975,G__G__Tree_173_9_0,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindLeaf",761,G__G__Tree_173_0_1,85,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAddress",998,G__G__Tree_173_1_1,67,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBasketSize",1301,G__G__Tree_173_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetClassName",1175,G__G__Tree_173_3_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCompressionLevel",1962,G__G__Tree_173_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntry",818,G__G__Tree_173_5_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"n - 'Long64_t' 0 0 entry i - 'Int_t' 0 0 getall",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntryExport",1460,G__G__Tree_173_6_1,105,-1,G__defined_typename("Int_t"),0,4,1,1,0,
"n - 'Long64_t' 0 - entry i - 'Int_t' 0 - getall "
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEvent",802,G__G__Tree_173_7_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"n - 'Long64_t' 0 0 entry",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntryOffsetLen",1720,G__G__Tree_173_8_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetIconName",1066,G__G__Tree_173_9_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLeaf",664,G__G__Tree_173_0_2,85,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,1,1,1,8,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBasket",890,G__G__Tree_173_1_2,85,G__get_linked_tagnum(&G__G__TreeLN_TBasket),-1,0,1,1,1,0,"i - 'Int_t' 0 - basket",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBasketBytes",1409,G__G__Tree_173_2_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBasketEntry",1420,G__G__Tree_173_3_2,78,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBasketSeek",1282,G__G__Tree_173_4_2,110,-1,G__defined_typename("Long64_t"),0,1,1,1,8,"i - 'Int_t' 0 - basket",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBrowsables",1332,G__G__Tree_173_5_2,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDirectory",1237,G__G__Tree_173_6_2,85,G__get_linked_tagnum(&G__G__TreeLN_TDirectory),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFile",672,G__G__Tree_173_7_2,85,G__get_linked_tagnum(&G__G__TreeLN_TFile),-1,0,1,1,1,0,"i - 'Int_t' 0 0 mode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFileName",1057,G__G__Tree_173_8_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOffset",903,G__G__Tree_173_9_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetReadBasket",1270,G__G__Tree_173_0_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetReadEntry",1198,G__G__Tree_173_1_3,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWriteBasket",1413,G__G__Tree_173_2_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTotalSize",1215,G__G__Tree_173_3_3,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTotBytes",1118,G__G__Tree_173_4_3,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetZipBytes",1114,G__G__Tree_173_5_3,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntryNumber",1435,G__G__Tree_173_6_3,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfBaskets",1598,G__G__Tree_173_7_3,85,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfBranches",1687,G__G__Tree_173_8_3,85,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfLeaves",1489,G__G__Tree_173_9_3,85,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaxBaskets",1299,G__G__Tree_173_0_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNleaves",1006,G__G__Tree_173_1_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSplitLevel",1316,G__G__Tree_173_2_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntries",1018,G__G__Tree_173_3_4,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTree",688,G__G__Tree_173_4_4,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRow",600,G__G__Tree_173_5_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMother",911,G__G__Tree_173_6_4,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSubBranch",1176,G__G__Tree_173_7_4,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,1,1,1,8,"U 'TBranch' - 10 - br",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsAutoDelete",1192,G__G__Tree_173_8_4,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsFolder",792,G__G__Tree_173_9_4,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("KeepCircular",1210,G__G__Tree_173_0_5,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - maxEntries",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LoadBaskets",1101,G__G__Tree_173_1_5,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Tree_173_2_5,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasket",982,G__G__Tree_173_3_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadLeaves",988,G__G__Tree_173_4_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Refresh",719,G__G__Tree_173_5_5,121,-1,-1,0,1,1,1,0,"U 'TBranch' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Tree_173_6_5,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetAddress",1225,G__G__Tree_173_7_5,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetReadEntry",1425,G__G__Tree_173_8_5,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_173_9_5,121,-1,-1,0,1,1,1,0,"Y - - 0 - add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAutoDelete",1304,G__G__Tree_173_0_6,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE autodel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBasketSize",1313,G__G__Tree_173_1_6,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - buffsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBufferAddress",1612,G__G__Tree_173_2_6,121,-1,-1,0,1,1,1,0,"U 'TBuffer' - 0 - entryBuffer",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetCompressionLevel",1974,G__G__Tree_173_3_6,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 level",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetEntryOffsetLen",1732,G__G__Tree_173_4_6,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - len",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFile",684,G__G__Tree_173_5_6,121,-1,-1,0,1,1,1,0,"U 'TFile' - 0 0 file",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFile",684,G__G__Tree_173_6_6,121,-1,-1,0,1,1,1,0,"C - - 10 - filename",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetOffset",915,G__G__Tree_173_7_6,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 offset",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTree",700,G__G__Tree_173_8_6,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - tree",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UpdateAddress",1321,G__G__Tree_173_9_6,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetCount",1036,G__G__Tree_173_0_7,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TBranch::ResetCount),0);
   G__memfunc_setup("Class",502,G__G__Tree_173_1_7,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TBranch::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_173_2_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranch::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_173_3_7,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TBranch::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_173_4_7,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TBranch::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_173_5_7,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_173_6_7,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_173_7_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_173_8_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_173_9_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranch::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_173_0_8,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBranch::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_173_1_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranch::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_173_2_8,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBranch::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TBranch",800,G__G__Tree_173_3_8,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTBasket(void) {
   /* TBasket */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TBasket));
   G__memfunc_setup("TBasket",686,G__G__Tree_174_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBasket),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TBasket",686,G__G__Tree_174_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBasket),-1,0,3,1,1,0,
"C - - 10 - name C - - 10 - title "
"U 'TBranch' - 0 - branch",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AdjustSize",1030,G__G__Tree_174_3_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - newsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeleteEntryOffset",1740,G__G__Tree_174_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DropBuffers",1122,G__G__Tree_174_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranch",878,G__G__Tree_174_6_0,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBufferSize",1301,G__G__Tree_174_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDisplacement",1529,G__G__Tree_174_8_0,73,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntryOffset",1433,G__G__Tree_174_9_0,73,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntryPointer",1555,G__G__Tree_174_0_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - Entry",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNevBuf",870,G__G__Tree_174_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNevBufSize",1281,G__G__Tree_174_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLast",692,G__G__Tree_174_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MoveEntries",1137,G__G__Tree_174_4_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - dentries",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasketBuffers",1699,G__G__Tree_174_5_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"n - 'Long64_t' 0 - pos i - 'Int_t' 0 - len "
"U 'TFile' - 0 - file",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadBasketBytes",1501,G__G__Tree_174_6_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"n - 'Long64_t' 0 - pos U 'TFile' - 0 - file",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBranch",890,G__G__Tree_174_7_1,121,-1,-1,0,1,1,1,0,"U 'TBranch' - 0 - branch",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNevBufSize",1293,G__G__Tree_174_8_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetReadMode",1069,G__G__Tree_174_9_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetWriteMode",1212,G__G__Tree_174_0_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Update",611,G__G__Tree_174_1_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - newlast",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Update",611,G__G__Tree_174_2_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - newlast i - 'Int_t' 0 - skipped",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WriteBuffer",1125,G__G__Tree_174_3_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_174_4_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TBasket::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_174_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBasket::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_174_6_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TBasket::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_174_7_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TBasket::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_174_8_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_174_9_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_174_0_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_174_1_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_174_2_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBasket::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_174_3_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBasket::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_174_4_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBasket::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_174_5_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBasket::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TBasket",686,G__G__Tree_174_6_3,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TBasket),-1,0,1,1,1,0,"u 'TBasket' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TBasket",812,G__G__Tree_174_7_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_174_8_3,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TBasket),-1,1,1,1,1,0,"u 'TBasket' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLeaf(void) {
   /* TLeaf */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeaf));
   G__memfunc_setup("TLeaf",460,G__G__Tree_179_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLeaf",460,G__G__Tree_179_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Browse",626,G__G__Tree_179_3_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Export",642,G__G__Tree_179_4_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillBasket",993,G__G__Tree_179_5_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranch",878,G__G__Tree_179_6_0,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLeafCount",1185,G__G__Tree_179_7_0,85,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLeafCounter",1400,G__G__Tree_179_8_0,85,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,1,1,1,8,"i - 'Int_t' 1 - countval",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLen",575,G__G__Tree_179_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLenStatic",1191,G__G__Tree_179_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLenType",993,G__G__Tree_179_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaximum",1022,G__G__Tree_179_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMinimum",1020,G__G__Tree_179_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNdata",776,G__G__Tree_179_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOffset",903,G__G__Tree_179_5_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_179_6_1,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_179_7_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValue",797,G__G__Tree_179_8_1,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Import",635,G__G__Tree_179_9_1,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsOnTerminalBranch",1795,G__G__Tree_179_0_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsRange",681,G__G__Tree_179_1_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsUnsigned",1017,G__G__Tree_179_2_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_179_3_2,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 0 -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasket",982,G__G__Tree_179_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasketExport",1624,G__G__Tree_179_5_2,121,-1,-1,0,3,1,1,0,
"u 'TBuffer' - 1 - - U 'TClonesArray' - 0 - - "
"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadValue",889,G__G__Tree_179_6_2,121,-1,-1,0,1,1,1,0,"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetAddress",1225,G__G__Tree_179_7_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"Y - - 0 - add g - 'Bool_t' 0 kFALSE destructor",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_179_8_2,121,-1,-1,0,1,1,1,0,"Y - - 0 0 add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranch",890,G__G__Tree_179_9_2,121,-1,-1,0,1,1,1,0,"U 'TBranch' - 0 - branch",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLeafCount",1197,G__G__Tree_179_0_3,121,-1,-1,0,1,1,1,0,"U 'TLeaf' - 0 - leaf",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLen",587,G__G__Tree_179_1_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 len",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetOffset",915,G__G__Tree_179_2_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 offset",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRange",793,G__G__Tree_179_3_3,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE range",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetUnsigned",1129,G__G__Tree_179_4_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_179_5_3,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLeaf::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_179_6_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeaf::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_179_7_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLeaf::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_179_8_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLeaf::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_179_9_3,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_179_0_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_179_1_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_179_2_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_179_3_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeaf::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_179_4_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeaf::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_179_5_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeaf::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_179_6_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeaf::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLeaf",460,G__G__Tree_179_7_4,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,1,1,1,0,"u 'TLeaf' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLeaf",586,G__G__Tree_179_8_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_179_9_4,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,1,1,1,1,0,"u 'TLeaf' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLeafS(void) {
   /* TLeafS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafS));
   G__memfunc_setup("TLeafS",543,G__G__Tree_188_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafS),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLeafS",543,G__G__Tree_188_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafS),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Export",642,G__G__Tree_188_3_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillBasket",993,G__G__Tree_188_4_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_188_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValue",797,G__G__Tree_188_6_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_188_7_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Import",635,G__G__Tree_188_8_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_188_9_0,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasket",982,G__G__Tree_188_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasketExport",1624,G__G__Tree_188_1_1,121,-1,-1,0,3,1,1,0,
"u 'TBuffer' - 1 - b U 'TClonesArray' - 0 - list "
"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadValue",889,G__G__Tree_188_2_1,121,-1,-1,0,1,1,1,0,"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_188_3_1,121,-1,-1,0,1,1,1,0,"Y - - 0 0 add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_188_4_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLeafS::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_188_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafS::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_188_6_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLeafS::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_188_7_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLeafS::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_188_8_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_188_9_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_188_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_188_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_188_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafS::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_188_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafS::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_188_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafS::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_188_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafS::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLeafS",543,G__G__Tree_188_6_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TLeafS),-1,0,1,1,1,0,"u 'TLeafS' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLeafS",669,G__G__Tree_188_7_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_188_8_2,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TLeafS),-1,1,1,1,1,0,"u 'TLeafS' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSelectorCint(void) {
   /* TSelectorCint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelectorCint));
   G__memfunc_setup("SetFuncProto",1228,(G__InterfaceMethod)NULL,121,-1,-1,0,5,1,4,0,
"U 'G__CallFunc' - 0 - cf U 'G__ClassInfo' - 0 - cl "
"C - - 10 - fname C - - 10 - argtype "
"g - 'Bool_t' 0 kTRUE required",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSelectorCint",1315,G__G__Tree_190_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TSelectorCint),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Build",496,G__G__Tree_190_3_0,121,-1,-1,0,2,1,1,0,
"U 'TSelector' - 0 - iselector U 'G__ClassInfo' - 0 - cl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Version",742,G__G__Tree_190_4_0,105,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Init",404,G__G__Tree_190_5_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Begin",485,G__G__Tree_190_6_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - tree",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveBegin",992,G__G__Tree_190_7_0,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Notify",633,G__G__Tree_190_8_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ProcessCut",1035,G__G__Tree_190_9_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ProcessFill",1126,G__G__Tree_190_0_1,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Process",735,G__G__Tree_190_1_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetOption",933,G__G__Tree_190_2_1,121,-1,-1,0,1,1,1,0,"C - - 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetObject",899,G__G__Tree_190_3_1,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetInputList",1240,G__G__Tree_190_4_1,121,-1,-1,0,1,1,1,0,"U 'TList' - 0 - input",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOutputList",1357,G__G__Tree_190_5_1,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SlaveTerminate",1444,G__G__Tree_190_6_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Terminate",937,G__G__Tree_190_7_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_190_8_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSelectorCint::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_190_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSelectorCint::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_190_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSelectorCint::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_190_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSelectorCint::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_190_2_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_190_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_190_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_190_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_190_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSelectorCint::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_190_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSelectorCint::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_190_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSelectorCint::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_190_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSelectorCint::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TSelectorCint",1315,G__G__Tree_190_0_3,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TSelectorCint),-1,0,1,1,1,0,"u 'TSelectorCint' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TSelectorCint",1441,G__G__Tree_190_1_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_190_2_3,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TSelectorCint),-1,1,1,1,1,0,"u 'TSelectorCint' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTBranchObject(void) {
   /* TBranchObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchObject));
   G__memfunc_setup("TBranchObject",1273,G__G__Tree_191_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranchObject),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TBranchObject",1273,G__G__Tree_191_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranchObject),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - classname "
"Y - - 0 - addobj i - 'Int_t' 0 32000 basketsize "
"i - 'Int_t' 0 0 splitlevel i - 'Int_t' 0 -1 compress",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Browse",626,G__G__Tree_191_3_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fill",391,G__G__Tree_191_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetClassName",1175,G__G__Tree_191_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetObjClassName",1458,G__G__Tree_191_6_0,67,-1,-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntry",818,G__G__Tree_191_7_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"n - 'Long64_t' 0 0 entry i - 'Int_t' 0 0 getall",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsFolder",792,G__G__Tree_191_8_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Tree_191_9_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Tree_191_0_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_191_1_1,121,-1,-1,0,1,1,1,0,"Y - - 0 - addobj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAutoDelete",1304,G__G__Tree_191_2_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE autodel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBasketSize",1313,G__G__Tree_191_3_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - buffsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UpdateAddress",1321,G__G__Tree_191_4_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_191_5_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TBranchObject::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_191_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchObject::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_191_7_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TBranchObject::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_191_8_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TBranchObject::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_191_9_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_191_0_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_191_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_191_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_191_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchObject::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_191_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBranchObject::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_191_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchObject::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_191_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBranchObject::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TBranchObject",1399,G__G__Tree_191_7_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTreeResult(void) {
   /* TTreeResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeResult));
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,4,0,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddField",749,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,0,
"i - 'Int_t' 0 - field C - - 10 - fieldname",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddRow",577,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TSQLRow' - 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTreeResult",1123,G__G__Tree_194_4_0,105,G__get_linked_tagnum(&G__G__TreeLN_TTreeResult),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTreeResult",1123,G__G__Tree_194_5_0,105,G__get_linked_tagnum(&G__G__TreeLN_TTreeResult),-1,0,1,1,1,0,"i - 'Int_t' 0 - nfields",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__Tree_194_6_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFieldCount",1293,G__G__Tree_194_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFieldName",1157,G__G__Tree_194_8_0,67,-1,-1,0,1,1,1,1,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRows",715,G__G__Tree_194_9_0,85,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Next",415,G__G__Tree_194_0_1,85,G__get_linked_tagnum(&G__G__TreeLN_TSQLRow),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_194_1_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TTreeResult::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_194_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTreeResult::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_194_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TTreeResult::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_194_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TTreeResult::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_194_5_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_194_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_194_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_194_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_194_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTreeResult::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_194_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTreeResult::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_194_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTreeResult::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_194_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTreeResult::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TTreeResult",1123,G__G__Tree_194_3_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TTreeResult),-1,0,1,1,1,0,"u 'TTreeResult' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TTreeResult",1249,G__G__Tree_194_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_194_5_2,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TTreeResult),-1,1,1,1,1,0,"u 'TTreeResult' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLeafI(void) {
   /* TLeafI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafI));
   G__memfunc_setup("TLeafI",533,G__G__Tree_196_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafI),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLeafI",533,G__G__Tree_196_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafI),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Export",642,G__G__Tree_196_3_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillBasket",993,G__G__Tree_196_4_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_196_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaximum",1022,G__G__Tree_196_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMinimum",1020,G__G__Tree_196_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValue",797,G__G__Tree_196_8_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_196_9_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Import",635,G__G__Tree_196_0_1,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_196_1_1,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasket",982,G__G__Tree_196_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasketExport",1624,G__G__Tree_196_3_1,121,-1,-1,0,3,1,1,0,
"u 'TBuffer' - 1 - b U 'TClonesArray' - 0 - list "
"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadValue",889,G__G__Tree_196_4_1,121,-1,-1,0,1,1,1,0,"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_196_5_1,121,-1,-1,0,1,1,1,0,"Y - - 0 0 add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMaximum",1034,G__G__Tree_196_6_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - max",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMinimum",1032,G__G__Tree_196_7_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - min",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_196_8_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLeafI::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_196_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafI::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_196_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLeafI::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_196_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLeafI::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_196_2_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_196_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_196_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_196_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_196_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafI::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_196_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafI::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_196_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafI::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_196_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafI::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLeafI",533,G__G__Tree_196_0_3,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TLeafI),-1,0,1,1,1,0,"u 'TLeafI' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLeafI",659,G__G__Tree_196_1_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_196_2_3,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TLeafI),-1,1,1,1,1,0,"u 'TLeafI' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTBranchElement(void) {
   /* TBranchElement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchElement));
   G__memfunc_setup("IsMissingCollection",1954,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCollectionProxy",1870,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__TreeLN_TVirtualCollectionProxy),-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDataMemberOffset",1881,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,4,0,
"U 'TClass' - 10 - cl C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TBranchElement",1388,G__G__Tree_198_4_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TBranchElement",1388,G__G__Tree_198_5_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),-1,0,7,1,1,0,
"C - - 10 - name U 'TStreamerInfo' - 0 - sinfo "
"i - 'Int_t' 0 - id C - - 0 - pointer "
"i - 'Int_t' 0 32000 basketsize i - 'Int_t' 0 0 splitlevel "
"i - 'Int_t' 0 0 btype",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TBranchElement",1388,G__G__Tree_198_6_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),-1,0,5,1,1,0,
"C - - 10 - name U 'TClonesArray' - 0 - clones "
"i - 'Int_t' 0 32000 basketsize i - 'Int_t' 0 0 splitlevel "
"i - 'Int_t' 0 -1 compress",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TBranchElement",1388,G__G__Tree_198_7_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),-1,0,5,1,1,0,
"C - - 10 - name U 'TVirtualCollectionProxy' - 0 - cont "
"i - 'Int_t' 0 32000 basketsize i - 'Int_t' 0 0 splitlevel "
"i - 'Int_t' 0 -1 compress",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Branch",590,G__G__Tree_198_8_0,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - folder i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 99 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_198_9_0,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,4,1,1,0,
"C - - 10 - name Y - - 0 - address "
"C - - 10 - leaflist i - 'Int_t' 0 32000 bufsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_198_0_1,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,5,1,1,0,
"C - - 10 - name C - - 10 - classname "
"Y - - 0 - addobj i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 99 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Browse",626,G__G__Tree_198_1_1,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildTitle",1010,G__G__Tree_198_2_1,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Fill",391,G__G__Tree_198_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillLeaves",999,G__G__Tree_198_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchCount",1399,G__G__Tree_198_5_1,85,G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBranchCount2",1449,G__G__Tree_198_6_1,85,G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCheckSum",1075,G__G__Tree_198_7_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetClassName",1175,G__G__Tree_198_8_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetClonesName",1285,G__G__Tree_198_9_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntry",818,G__G__Tree_198_0_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"n - 'Long64_t' 0 0 entry i - 'Int_t' 0 0 getall",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetIconName",1066,G__G__Tree_198_1_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetID",429,G__G__Tree_198_2_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInfo",684,G__G__Tree_198_3_2,85,G__get_linked_tagnum(&G__G__TreeLN_TStreamerInfo),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetObject",887,G__G__Tree_198_4_2,67,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetParentName",1291,G__G__Tree_198_5_2,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaximum",1022,G__G__Tree_198_6_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNdata",776,G__G__Tree_198_7_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetType",706,G__G__Tree_198_8_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetStreamerType",1541,G__G__Tree_198_9_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_198_0_3,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValue",797,G__G__Tree_198_1_3,100,-1,G__defined_typename("Double_t"),0,3,1,1,8,
"i - 'Int_t' 0 - i i - 'Int_t' 0 - len "
"g - 'Bool_t' 0 kFALSE subarr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_198_2_3,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsBranchFolder",1382,G__G__Tree_198_3_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsFolder",792,G__G__Tree_198_4_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Notify",633,G__G__Tree_198_5_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Tree_198_6_3,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_198_7_3,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadLeaves",988,G__G__Tree_198_8_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Tree_198_9_3,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetAddress",1225,G__G__Tree_198_0_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_198_1_4,121,-1,-1,0,1,1,1,0,"Y - - 0 - addobj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAutoDelete",1304,G__G__Tree_198_2_4,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE autodel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBasketSize",1313,G__G__Tree_198_3_4,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - buffsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchCount",1411,G__G__Tree_198_4_4,121,-1,-1,0,1,1,1,0,"U 'TBranchElement' - 0 - bre",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchCount2",1461,G__G__Tree_198_5_4,121,-1,-1,0,1,1,1,0,"U 'TBranchElement' - 0 - bre",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchFolder",1494,G__G__Tree_198_6_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetClassName",1187,G__G__Tree_198_7_4,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetParentName",1303,G__G__Tree_198_8_4,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetupAddresses",1455,G__G__Tree_198_9_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetType",718,G__G__Tree_198_0_5,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - btype",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Unroll",636,G__G__Tree_198_1_5,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"C - - 10 - name U 'TClass' - 0 - cltop "
"U 'TClass' - 0 - cl i - 'Int_t' 0 - basketsize "
"i - 'Int_t' 0 - splitlevel i - 'Int_t' 0 - btype",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_198_2_5,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TBranchElement::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_198_3_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchElement::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_198_4_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TBranchElement::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_198_5_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TBranchElement::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_198_6_5,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_198_7_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_198_8_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_198_9_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_198_0_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchElement::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_198_1_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBranchElement::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_198_2_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchElement::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_198_3_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBranchElement::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TBranchElement",1514,G__G__Tree_198_4_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVirtualBranchBrowsable(void) {
   /* TVirtualBranchBrowsable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable));
   G__memfunc_setup("Browse",626,G__G__Tree_199_1_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetIconName",1066,G__G__Tree_199_2_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetScope",794,G__G__Tree_199_3_0,121,-1,-1,0,1,1,1,8,"u 'TString' - 1 - scope",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsFolder",792,G__G__Tree_199_4_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillListOfBrowsables",2028,G__G__Tree_199_5_0,105,-1,G__defined_typename("Int_t"),0,3,3,1,0,
"u 'TList' - 1 - list U 'TBranch' - 10 - branch "
"U 'TVirtualBranchBrowsable' - 10 0 parent",(char*)NULL,(void*)(Int_t (*)(TList&,const TBranch*,const TVirtualBranchBrowsable*))(&TVirtualBranchBrowsable::FillListOfBrowsables),0);
   G__memfunc_setup("GetBranch",878,G__G__Tree_199_6_0,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetParent",906,G__G__Tree_199_7_0,85,G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetClassType",1208,G__G__Tree_199_8_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TypeIsPointer",1343,G__G__Tree_199_9_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLeaves",896,G__G__Tree_199_0_1,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVirtualBranchBrowsable",2346,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable),-1,0,4,1,2,0,
"U 'TBranch' - 10 - b U 'TClass' - 0 - type "
"g - 'Bool_t' 0 - typeIsPointer U 'TVirtualBranchBrowsable' - 10 0 parent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCollectionContainedType",2659,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,3,3,2,0,
"U 'TBranch' - 10 - b U 'TVirtualBranchBrowsable' - 10 - parent "
"U 'TClass' - 1 - contained",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRegisteredGenerators",2376,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__TreeLN_listlEvoidmUcOallocatorlEvoidmUgRsPgR),G__defined_typename("list<MethodCreateListOfBrowsables_t>"),1,0,3,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RegisterGenerator",1772,(G__InterfaceMethod)NULL,121,-1,-1,0,1,3,2,0,"Y - 'TVirtualBranchBrowsable::MethodCreateListOfBrowsables_t' 0 - generator",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UnregisterGenerator",1999,(G__InterfaceMethod)NULL,121,-1,-1,0,1,3,2,0,"Y - 'TVirtualBranchBrowsable::MethodCreateListOfBrowsables_t' 0 - generator",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetType",718,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TClass' - 0 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTypeIsPointer",1643,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"g - 'Bool_t' 0 kTRUE set",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RegisterDefaultGenerators",2596,(G__InterfaceMethod)NULL,121,-1,-1,0,0,3,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Tree_199_9_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TVirtualBranchBrowsable::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_199_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualBranchBrowsable::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_199_1_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TVirtualBranchBrowsable::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_199_2_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TVirtualBranchBrowsable::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_199_3_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_199_4_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_199_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_199_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_199_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualBranchBrowsable::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_199_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualBranchBrowsable::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_199_9_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVirtualBranchBrowsable::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_199_0_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVirtualBranchBrowsable::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TVirtualBranchBrowsable",2346,G__G__Tree_199_1_3,(int)('i'),
G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable),-1,0,1,1,1,0,"u 'TVirtualBranchBrowsable' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TVirtualBranchBrowsable",2472,G__G__Tree_199_2_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMethodBrowsable(void) {
   /* TMethodBrowsable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TMethodBrowsable));
   G__memfunc_setup("GetBrowsables",1332,G__G__Tree_204_1_0,105,-1,G__defined_typename("Int_t"),0,3,3,1,0,
"u 'TList' - 1 - list U 'TBranch' - 10 - branch "
"U 'TVirtualBranchBrowsable' - 10 0 parent",(char*)NULL,(void*)(Int_t (*)(TList&,const TBranch*,const TVirtualBranchBrowsable*))(&TMethodBrowsable::GetBrowsables),0);
   G__memfunc_setup("GetIconName",1066,G__G__Tree_204_2_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsMethodBrowsable",1726,G__G__Tree_204_3_0,103,-1,G__defined_typename("Bool_t"),0,1,3,1,0,"U 'TMethod' - 10 - m",(char*)NULL,(void*)(Bool_t (*)(const TMethod*))(&TMethodBrowsable::IsMethodBrowsable),0);
   G__memfunc_setup("Register",837,G__G__Tree_204_4_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMethodBrowsable::Register),0);
   G__memfunc_setup("Unregister",1064,G__G__Tree_204_5_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMethodBrowsable::Unregister),0);
   G__memfunc_setup("GetBrowsableMethodsForClass",2738,(G__InterfaceMethod)NULL,121,-1,-1,0,2,3,2,0,
"U 'TClass' - 0 - cl u 'TList' - 1 - list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMethodBrowsable",1622,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__TreeLN_TMethodBrowsable),-1,0,3,1,2,0,
"U 'TBranch' - 10 - branch U 'TMethod' - 0 - m "
"U 'TVirtualBranchBrowsable' - 10 0 parent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Tree_204_8_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMethodBrowsable::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_204_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMethodBrowsable::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_204_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMethodBrowsable::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_204_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMethodBrowsable::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_204_2_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_204_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_204_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_204_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_204_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMethodBrowsable::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_204_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMethodBrowsable::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_204_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMethodBrowsable::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_204_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMethodBrowsable::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMethodBrowsable",1622,G__G__Tree_204_0_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TMethodBrowsable),-1,0,1,1,1,0,"u 'TMethodBrowsable' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMethodBrowsable",1748,G__G__Tree_204_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTNonSplitBrowsable(void) {
   /* TNonSplitBrowsable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TNonSplitBrowsable));
   G__memfunc_setup("GetBrowsables",1332,G__G__Tree_205_1_0,105,-1,G__defined_typename("Int_t"),0,3,3,1,0,
"u 'TList' - 1 - list U 'TBranch' - 10 - branch "
"U 'TVirtualBranchBrowsable' - 10 0 parent",(char*)NULL,(void*)(Int_t (*)(TList&,const TBranch*,const TVirtualBranchBrowsable*))(&TNonSplitBrowsable::GetBrowsables),0);
   G__memfunc_setup("Register",837,G__G__Tree_205_2_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TNonSplitBrowsable::Register),0);
   G__memfunc_setup("Unregister",1064,G__G__Tree_205_3_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TNonSplitBrowsable::Unregister),0);
   G__memfunc_setup("TNonSplitBrowsable",1836,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__TreeLN_TNonSplitBrowsable),-1,0,3,1,2,0,
"U 'TStreamerElement' - 10 - element U 'TBranch' - 10 - branch "
"U 'TVirtualBranchBrowsable' - 10 0 parent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Tree_205_5_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TNonSplitBrowsable::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_205_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNonSplitBrowsable::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_205_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TNonSplitBrowsable::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_205_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TNonSplitBrowsable::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_205_9_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_205_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_205_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_205_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_205_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNonSplitBrowsable::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_205_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNonSplitBrowsable::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_205_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNonSplitBrowsable::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_205_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNonSplitBrowsable::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TNonSplitBrowsable",1836,G__G__Tree_205_7_1,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TNonSplitBrowsable),-1,0,1,1,1,0,"u 'TNonSplitBrowsable' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TNonSplitBrowsable",1962,G__G__Tree_205_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCollectionPropertyBrowsable(void) {
   /* TCollectionPropertyBrowsable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionPropertyBrowsable));
   G__memfunc_setup("Browse",626,G__G__Tree_206_1_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBrowsables",1332,G__G__Tree_206_2_0,105,-1,G__defined_typename("Int_t"),0,3,3,1,0,
"u 'TList' - 1 - list U 'TBranch' - 10 - branch "
"U 'TVirtualBranchBrowsable' - 10 0 parent",(char*)NULL,(void*)(Int_t (*)(TList&,const TBranch*,const TVirtualBranchBrowsable*))(&TCollectionPropertyBrowsable::GetBrowsables),0);
   G__memfunc_setup("GetDraw",686,G__G__Tree_206_3_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Register",837,G__G__Tree_206_4_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCollectionPropertyBrowsable::Register),0);
   G__memfunc_setup("Unregister",1064,G__G__Tree_206_5_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCollectionPropertyBrowsable::Unregister),0);
   G__memfunc_setup("TCollectionPropertyBrowsable",2918,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__TreeLN_TCollectionPropertyBrowsable),-1,0,5,1,2,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - draw U 'TBranch' - 10 - branch "
"U 'TVirtualBranchBrowsable' - 10 0 parent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Tree_206_7_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCollectionPropertyBrowsable::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_206_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCollectionPropertyBrowsable::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_206_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCollectionPropertyBrowsable::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_206_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCollectionPropertyBrowsable::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_206_1_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_206_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_206_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_206_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_206_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCollectionPropertyBrowsable::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_206_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCollectionPropertyBrowsable::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_206_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCollectionPropertyBrowsable::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_206_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCollectionPropertyBrowsable::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TCollectionPropertyBrowsable",2918,G__G__Tree_206_9_1,(int)('i'),
G__get_linked_tagnum(&G__G__TreeLN_TCollectionPropertyBrowsable),-1,0,1,1,1,0,"u 'TCollectionPropertyBrowsable' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TCollectionPropertyBrowsable",3044,G__G__Tree_206_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCollectionMethodBrowsable(void) {
   /* TCollectionMethodBrowsable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionMethodBrowsable));
   G__memfunc_setup("GetBrowsables",1332,G__G__Tree_207_1_0,105,-1,G__defined_typename("Int_t"),0,3,3,1,0,
"u 'TList' - 1 - list U 'TBranch' - 10 - branch "
"U 'TVirtualBranchBrowsable' - 10 0 parent",(char*)NULL,(void*)(Int_t (*)(TList&,const TBranch*,const TVirtualBranchBrowsable*))(&TCollectionMethodBrowsable::GetBrowsables),0);
   G__memfunc_setup("Register",837,G__G__Tree_207_2_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCollectionMethodBrowsable::Register),0);
   G__memfunc_setup("Unregister",1064,G__G__Tree_207_3_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCollectionMethodBrowsable::Unregister),0);
   G__memfunc_setup("TCollectionMethodBrowsable",2658,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__TreeLN_TCollectionMethodBrowsable),-1,0,3,1,2,0,
"U 'TBranch' - 10 - branch U 'TMethod' - 0 - m "
"U 'TVirtualBranchBrowsable' - 10 0 parent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Tree_207_5_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCollectionMethodBrowsable::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_207_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCollectionMethodBrowsable::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_207_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCollectionMethodBrowsable::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_207_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCollectionMethodBrowsable::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_207_9_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_207_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_207_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_207_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_207_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCollectionMethodBrowsable::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_207_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCollectionMethodBrowsable::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_207_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCollectionMethodBrowsable::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_207_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCollectionMethodBrowsable::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TCollectionMethodBrowsable",2658,G__G__Tree_207_7_1,(int)('i'),
G__get_linked_tagnum(&G__G__TreeLN_TCollectionMethodBrowsable),-1,0,1,1,1,0,"u 'TCollectionMethodBrowsable' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TCollectionMethodBrowsable",2784,G__G__Tree_207_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLeafF(void) {
   /* TLeafF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafF));
   G__memfunc_setup("TLeafF",530,G__G__Tree_208_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafF),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLeafF",530,G__G__Tree_208_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafF),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Export",642,G__G__Tree_208_3_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillBasket",993,G__G__Tree_208_4_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_208_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValue",797,G__G__Tree_208_6_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_208_7_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Import",635,G__G__Tree_208_8_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_208_9_0,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasket",982,G__G__Tree_208_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasketExport",1624,G__G__Tree_208_1_1,121,-1,-1,0,3,1,1,0,
"u 'TBuffer' - 1 - b U 'TClonesArray' - 0 - list "
"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadValue",889,G__G__Tree_208_2_1,121,-1,-1,0,1,1,1,0,"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_208_3_1,121,-1,-1,0,1,1,1,0,"Y - - 0 0 add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_208_4_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLeafF::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_208_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafF::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_208_6_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLeafF::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_208_7_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLeafF::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_208_8_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_208_9_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_208_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_208_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_208_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafF::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_208_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafF::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_208_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafF::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_208_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafF::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLeafF",530,G__G__Tree_208_6_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TLeafF),-1,0,1,1,1,0,"u 'TLeafF' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLeafF",656,G__G__Tree_208_7_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_208_8_2,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TLeafF),-1,1,1,1,1,0,"u 'TLeafF' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLeafD(void) {
   /* TLeafD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafD));
   G__memfunc_setup("TLeafD",528,G__G__Tree_209_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafD),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLeafD",528,G__G__Tree_209_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafD),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Export",642,G__G__Tree_209_3_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillBasket",993,G__G__Tree_209_4_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_209_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValue",797,G__G__Tree_209_6_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_209_7_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Import",635,G__G__Tree_209_8_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_209_9_0,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasket",982,G__G__Tree_209_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasketExport",1624,G__G__Tree_209_1_1,121,-1,-1,0,3,1,1,0,
"u 'TBuffer' - 1 - b U 'TClonesArray' - 0 - list "
"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadValue",889,G__G__Tree_209_2_1,121,-1,-1,0,1,1,1,0,"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_209_3_1,121,-1,-1,0,1,1,1,0,"Y - - 0 0 add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_209_4_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLeafD::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_209_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafD::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_209_6_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLeafD::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_209_7_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLeafD::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_209_8_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_209_9_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_209_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_209_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_209_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafD::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_209_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafD::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_209_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafD::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_209_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafD::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLeafD",528,G__G__Tree_209_6_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TLeafD),-1,0,1,1,1,0,"u 'TLeafD' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLeafD",654,G__G__Tree_209_7_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_209_8_2,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TLeafD),-1,1,1,1,1,0,"u 'TLeafD' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTreeRow(void) {
   /* TTreeRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeRow));
   G__memfunc_setup("TTreeRow",796,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__TreeLN_TTreeRow),-1,0,1,1,4,0,"U 'TSQLRow' - 0 - original",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,4,0,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTreeRow",796,G__G__Tree_210_3_0,105,G__get_linked_tagnum(&G__G__TreeLN_TTreeRow),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTreeRow",796,G__G__Tree_210_4_0,105,G__get_linked_tagnum(&G__G__TreeLN_TTreeRow),-1,0,1,1,1,0,"i - 'Int_t' 0 - nfields",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTreeRow",796,G__G__Tree_210_5_0,105,G__get_linked_tagnum(&G__G__TreeLN_TTreeRow),-1,0,3,1,1,0,
"i - 'Int_t' 0 - nfields I - 'Int_t' 10 - fields "
"C - - 10 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__Tree_210_6_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFieldLength",1382,G__G__Tree_210_7_0,107,-1,G__defined_typename("ULong_t"),0,1,1,1,0,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetField",772,G__G__Tree_210_8_0,67,-1,-1,0,1,1,1,1,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRow",612,G__G__Tree_210_9_0,121,-1,-1,0,2,1,1,0,
"I - 'Int_t' 10 - fields C - - 10 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Tree_210_0_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TTreeRow::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_210_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTreeRow::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_210_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TTreeRow::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_210_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TTreeRow::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_210_4_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_210_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_210_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_210_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_210_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTreeRow::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_210_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTreeRow::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_210_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTreeRow::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_210_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTreeRow::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TTreeRow",796,G__G__Tree_210_2_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TTreeRow),-1,0,1,1,1,0,"u 'TTreeRow' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TTreeRow",922,G__G__Tree_210_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_210_4_2,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TTreeRow),-1,1,1,1,1,0,"u 'TTreeRow' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFriendElement(void) {
   /* TFriendElement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TFriendElement));
   G__memfunc_setup("TFriendElement",1398,G__G__Tree_219_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TFriendElement",1398,G__G__Tree_219_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,3,1,1,0,
"U 'TTree' - 0 - tree C - - 10 - treename "
"C - - 10 - filename",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TFriendElement",1398,G__G__Tree_219_3_0,105,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,3,1,1,0,
"U 'TTree' - 0 - tree C - - 10 - treename "
"U 'TFile' - 0 - file",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TFriendElement",1398,G__G__Tree_219_4_0,105,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,3,1,1,0,
"U 'TTree' - 0 - tree U 'TTree' - 0 - friendtree "
"C - - 10 - alias",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Connect",714,G__G__Tree_219_5_0,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DisConnect",1002,G__G__Tree_219_6_0,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFile",672,G__G__Tree_219_7_0,85,G__get_linked_tagnum(&G__G__TreeLN_TFile),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParentTree",1306,G__G__Tree_219_8_0,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTree",688,G__G__Tree_219_9_0,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTreeName",1073,G__G__Tree_219_0_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ls",223,G__G__Tree_219_1_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_219_2_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TFriendElement::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_219_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFriendElement::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_219_4_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TFriendElement::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_219_5_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TFriendElement::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_219_6_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_219_7_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_219_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_219_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_219_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFriendElement::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_219_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFriendElement::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_219_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFriendElement::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_219_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFriendElement::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TFriendElement",1398,G__G__Tree_219_4_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,1,1,1,0,"u 'TFriendElement' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TFriendElement",1524,G__G__Tree_219_5_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_219_6_2,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,1,1,1,1,0,"u 'TFriendElement' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTBranchRef(void) {
   /* TBranchRef */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchRef));
   G__memfunc_setup("TBranchRef",959,G__G__Tree_220_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranchRef),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TBranchRef",959,G__G__Tree_220_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranchRef),-1,0,1,1,1,0,"U 'TTree' - 0 - tree",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clear",487,G__G__Tree_220_3_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fill",391,G__G__Tree_220_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillLeaves",999,G__G__Tree_220_5_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRefTable",1061,G__G__Tree_220_6_0,85,G__get_linked_tagnum(&G__G__TreeLN_TRefTable),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Notify",633,G__G__Tree_220_7_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Tree_220_8_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadLeaves",988,G__G__Tree_220_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Tree_220_0_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetParent",918,G__G__Tree_220_1_1,121,-1,-1,0,1,1,1,0,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetReadEntry",1210,G__G__Tree_220_2_1,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_220_3_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TBranchRef::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_220_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchRef::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_220_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TBranchRef::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_220_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TBranchRef::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_220_7_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_220_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_220_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_220_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_220_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchRef::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_220_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBranchRef::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_220_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchRef::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_220_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBranchRef::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TBranchRef",1085,G__G__Tree_220_5_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTreeFriendLeafIter(void) {
   /* TTreeFriendLeafIter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeFriendLeafIter));
   G__memfunc_setup("TTreeFriendLeafIter",1864,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__TreeLN_TTreeFriendLeafIter),-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTreeFriendLeafIter",1864,G__G__Tree_223_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TTreeFriendLeafIter),-1,0,2,1,1,0,
"U 'TTree' - 10 - t g - 'Bool_t' 0 kIterForward dir",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTreeFriendLeafIter",1864,G__G__Tree_223_3_0,105,G__get_linked_tagnum(&G__G__TreeLN_TTreeFriendLeafIter),-1,0,1,1,1,0,"u 'TTreeFriendLeafIter' - 11 - iter",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Tree_223_4_0,117,G__get_linked_tagnum(&G__G__TreeLN_TIterator),-1,1,1,1,1,0,"u 'TIterator' - 11 - rhs",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator=",937,G__G__Tree_223_5_0,117,G__get_linked_tagnum(&G__G__TreeLN_TTreeFriendLeafIter),-1,1,1,1,1,0,"u 'TTreeFriendLeafIter' - 11 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCollection",1324,G__G__Tree_223_6_0,85,G__get_linked_tagnum(&G__G__TreeLN_TCollection),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOption",921,G__G__Tree_223_7_0,67,-1,G__defined_typename("Option_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Next",415,G__G__Tree_223_8_0,85,G__get_linked_tagnum(&G__G__TreeLN_TObject),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Tree_223_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_223_0_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TTreeFriendLeafIter::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_223_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTreeFriendLeafIter::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_223_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TTreeFriendLeafIter::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_223_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TTreeFriendLeafIter::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_223_4_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_223_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_223_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_223_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_223_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTreeFriendLeafIter::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_223_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTreeFriendLeafIter::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_223_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTreeFriendLeafIter::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_223_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTreeFriendLeafIter::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TTreeFriendLeafIter",1990,G__G__Tree_223_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTChainProof(void) {
   /* TChainProof */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainProof));
   G__memfunc_setup("AddClone",762,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNameByIndex",1364,(G__InterfaceMethod)NULL,67,-1,-1,0,3,1,2,9,
"u 'TString' - 1 - varexp I - 'Int_t' 0 - index "
"i - 'Int_t' 0 - colindex",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("KeepCircular",1210,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeIndex",886,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"u 'TString' - 1 - varexp I - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ChangeFile",966,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__TreeLN_TFile),-1,0,1,1,2,0,"U 'TFile' - 0 - file",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TChainProof",1085,G__G__Tree_225_6_0,105,G__get_linked_tagnum(&G__G__TreeLN_TChainProof),-1,0,2,1,1,0,
"U 'TDSet' - 0 - set U 'TTree' - 0 - tree",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddFriend",865,G__G__Tree_225_7_0,85,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,2,1,1,0,
"C - - 10 - treename C - - 10 \"\" filename",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddFriend",865,G__G__Tree_225_8_0,85,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,2,1,1,0,
"C - - 10 - treename U 'TFile' - 0 - file",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddFriend",865,G__G__Tree_225_9_0,85,G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),-1,0,3,1,1,0,
"U 'TTree' - 0 - tree C - - 10 \"\" alias "
"g - 'Bool_t' 0 kFALSE warn",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddTotBytes",1095,G__G__Tree_225_0_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - tot",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddZipBytes",1091,G__G__Tree_225_1_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - zip",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AutoSave",808,G__G__Tree_225_2_1,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_225_3_1,105,-1,G__defined_typename("Int_t"),0,4,1,1,0,
"U 'TCollection' - 0 - list i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 99 splitlevel C - - 10 \"\" name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_225_4_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"U 'TList' - 0 - list i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 99 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_225_5_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - folder i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 99 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_225_6_1,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,4,1,1,0,
"C - - 10 - name Y - - 0 - address "
"C - - 10 - leaflist i - 'Int_t' 0 32000 bufsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_225_7_1,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,4,1,1,0,
"C - - 10 - name Y - - 0 - clonesaddress "
"i - 'Int_t' 0 32000 bufsize i - 'Int_t' 0 1 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Branch",590,G__G__Tree_225_8_1,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,4,1,1,0,
"C - - 10 - name U 'TClonesArray' - 2 - clonesaddress "
"i - 'Int_t' 0 32000 bufsize i - 'Int_t' 0 1 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Bronch",604,G__G__Tree_225_9_1,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,5,1,1,0,
"C - - 10 - name C - - 10 - classname "
"Y - - 0 - addobj i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 99 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BranchOld",877,G__G__Tree_225_0_2,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,5,1,1,0,
"C - - 10 - name C - - 10 - classname "
"Y - - 0 - addobj i - 'Int_t' 0 32000 bufsize "
"i - 'Int_t' 0 1 splitlevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BranchRef",875,G__G__Tree_225_1_2,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Browse",626,G__G__Tree_225_2_2,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildIndex",1000,G__G__Tree_225_3_2,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 - majorname C - - 10 \"0\" minorname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildStreamerInfo",1727,G__G__Tree_225_4_2,85,G__get_linked_tagnum(&G__G__TreeLN_TStreamerInfo),-1,0,2,1,1,0,
"U 'TClass' - 0 - cl Y - - 0 0 pointer",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CloneTree",897,G__G__Tree_225_5_2,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,2,1,1,0,
"n - 'Long64_t' 0 -1 nentries C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CopyAddresses",1337,G__G__Tree_225_6_2,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - tree",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CopyEntries",1141,G__G__Tree_225_7_2,110,-1,G__defined_typename("Long64_t"),0,2,1,1,0,
"U 'TTree' - 0 - tree n - 'Long64_t' 0 -1 nentries",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CopyTree",811,G__G__Tree_225_8_2,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,4,1,1,0,
"C - - 10 - selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Debug",487,G__G__Tree_225_9_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Delete",595,G__G__Tree_225_0_3,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_225_1_3,110,-1,G__defined_typename("Long64_t"),0,5,1,1,0,
"C - - 10 - varexp u 'TCut' - 11 - selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_225_2_3,110,-1,G__defined_typename("Long64_t"),0,5,1,1,0,
"C - - 10 - varexp C - - 10 - selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Tree_225_3_3,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DropBuffers",1122,G__G__Tree_225_4_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - nbytes",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fill",391,G__G__Tree_225_5_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindBranch",975,G__G__Tree_225_6_3,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindLeaf",761,G__G__Tree_225_7_3,85,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fit",291,G__G__Tree_225_8_3,110,-1,G__defined_typename("Long64_t"),0,7,1,1,0,
"C - - 10 - funcname C - - 10 - varexp "
"C - - 10 \"\" selection C - 'Option_t' 10 \"\" option "
"C - 'Option_t' 10 \"\" goption n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("GetAlias",778,G__G__Tree_225_9_3,67,-1,-1,0,1,1,1,9,"C - - 10 - aliasName",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranch",878,G__G__Tree_225_0_4,85,G__get_linked_tagnum(&G__G__TreeLN_TBranch),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchRef",1163,G__G__Tree_225_1_4,85,G__get_linked_tagnum(&G__G__TreeLN_TBranchRef),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchStatus",1522,G__G__Tree_225_2_4,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"C - - 10 - branchname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchStyle",1407,G__G__Tree_225_3_4,105,-1,G__defined_typename("Int_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Int_t (*)())(&TChainProof::GetBranchStyle),0);
   G__memfunc_setup("GetChainEntryNumber",1918,G__G__Tree_225_4_4,110,-1,G__defined_typename("Long64_t"),0,1,1,1,8,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetChainOffset",1386,G__G__Tree_225_5_4,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCurrentFile",1411,G__G__Tree_225_6_4,85,G__get_linked_tagnum(&G__G__TreeLN_TFile),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDebugMax",1069,G__G__Tree_225_7_4,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDebugMin",1067,G__G__Tree_225_8_4,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDirectory",1237,G__G__Tree_225_9_4,85,G__get_linked_tagnum(&G__G__TreeLN_TDirectory),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntries",1018,G__G__Tree_225_0_5,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntriesFast",1416,G__G__Tree_225_1_5,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntriesFriend",1618,G__G__Tree_225_2_5,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEstimate",1116,G__G__Tree_225_3_5,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntry",818,G__G__Tree_225_4_5,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"n - 'Long64_t' 0 0 entry i - 'Int_t' 0 0 getall",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEvent",802,G__G__Tree_225_5_5,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"n - 'Long64_t' 0 0 entry i - 'Int_t' 0 0 getall",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEntryWithIndex",1734,G__G__Tree_225_6_5,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - major i - 'Int_t' 0 0 minor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntryNumberWithBestIndex",2749,G__G__Tree_225_7_5,110,-1,G__defined_typename("Long64_t"),0,2,1,1,8,
"i - 'Int_t' 0 - major i - 'Int_t' 0 0 minor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntryNumberWithIndex",2351,G__G__Tree_225_8_5,110,-1,G__defined_typename("Long64_t"),0,2,1,1,8,
"i - 'Int_t' 0 - major i - 'Int_t' 0 0 minor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntryNumber",1435,G__G__Tree_225_9_5,110,-1,G__defined_typename("Long64_t"),0,1,1,1,8,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFileNumber",1289,G__G__Tree_225_0_6,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFriendAlias",1378,G__G__Tree_225_1_6,67,-1,-1,0,1,1,1,9,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetHistogram",1230,G__G__Tree_225_2_6,85,G__get_linked_tagnum(&G__G__TreeLN_TH1),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetIndex",792,G__G__Tree_225_3_6,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetIndexValues",1416,G__G__Tree_225_4_6,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetIteratorOnAllLeaves",2208,G__G__Tree_225_5_6,85,G__get_linked_tagnum(&G__G__TreeLN_TIterator),-1,0,1,1,1,0,"g - 'Bool_t' 0 kIterForward dir",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLeaf",664,G__G__Tree_225_6_6,85,G__get_linked_tagnum(&G__G__TreeLN_TLeaf),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfClones",1493,G__G__Tree_225_7_6,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfBranches",1687,G__G__Tree_225_8_6,85,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfLeaves",1489,G__G__Tree_225_9_6,85,G__get_linked_tagnum(&G__G__TreeLN_TObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfFriends",1596,G__G__Tree_225_0_7,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfAliases",1587,G__G__Tree_225_1_7,85,G__get_linked_tagnum(&G__G__TreeLN_TSeqCollection),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMakeClass",1172,G__G__Tree_225_2_7,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaxEntryLoop",1522,G__G__Tree_225_3_7,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaximum",1022,G__G__Tree_225_4_7,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"C - - 10 - columname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaxTreeSize",1393,G__G__Tree_225_5_7,110,-1,G__defined_typename("Long64_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Long64_t (*)())(&TChainProof::GetMaxTreeSize),0);
   G__memfunc_setup("GetMaxVirtualSize",1736,G__G__Tree_225_6_7,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMinimum",1020,G__G__Tree_225_7_7,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"C - - 10 - columname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNbranches",1204,G__G__Tree_225_8_7,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNotify",921,G__G__Tree_225_9_7,85,G__get_linked_tagnum(&G__G__TreeLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPlayer",909,G__G__Tree_225_0_8,85,G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPacketSize",1299,G__G__Tree_225_1_8,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetProof",806,G__G__Tree_225_2_8,85,G__get_linked_tagnum(&G__G__TreeLN_TVirtualProof),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetReadEntry",1198,G__G__Tree_225_3_8,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetReadEvent",1182,G__G__Tree_225_4_8,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetScanField",1161,G__G__Tree_225_5_8,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSelect",896,G__G__Tree_225_6_8,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSelectedRows",1524,G__G__Tree_225_7_8,110,-1,G__defined_typename("Long64_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTimerInterval",1638,G__G__Tree_225_8_8,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTotBytes",1118,G__G__Tree_225_9_8,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTree",688,G__G__Tree_225_0_9,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTreeIndex",1192,G__G__Tree_225_1_9,85,G__get_linked_tagnum(&G__G__TreeLN_TVirtualIndex),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTreeNumber",1305,G__G__Tree_225_2_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUpdate",899,G__G__Tree_225_3_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUserInfo",1099,G__G__Tree_225_4_9,85,G__get_linked_tagnum(&G__G__TreeLN_TList),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetVar1",634,G__G__Tree_225_5_9,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVar2",635,G__G__Tree_225_6_9,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVar3",636,G__G__Tree_225_7_9,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVar4",637,G__G__Tree_225_8_9,85,G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetV1",423,G__G__Tree_225_9_9,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetV2",424,G__G__Tree_225_0_10,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetV3",425,G__G__Tree_225_1_10,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetV4",426,G__G__Tree_225_2_10,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetW",375,G__G__Tree_225_3_10,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetWeight",904,G__G__Tree_225_4_10,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetZipBytes",1114,G__G__Tree_225_5_10,110,-1,G__defined_typename("Long64_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IncrementTotalBuffers",2166,G__G__Tree_225_6_10,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - nbytes",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsFolder",792,G__G__Tree_225_7_10,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LoadBaskets",1101,G__G__Tree_225_8_10,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"n - 'Long64_t' 0 2000000000 maxmemory",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LoadTree",784,G__G__Tree_225_9_10,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"n - 'Long64_t' 0 - entry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LoadTreeFriend",1384,G__G__Tree_225_0_11,110,-1,G__defined_typename("Long64_t"),0,2,1,1,0,
"n - 'Long64_t' 0 - entry U 'TTree' - 0 - T",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeClass",884,G__G__Tree_225_1_11,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"C - - 10 0 classname C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeCode",761,G__G__Tree_225_2_11,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 0 filename",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeProxy",928,G__G__Tree_225_3_11,105,-1,G__defined_typename("Int_t"),0,5,1,1,0,
"C - - 10 - classname C - - 10 0 macrofilename "
"C - - 10 0 cutfilename C - - 10 0 option "
"i - 'Int_t' 0 3 maxUnrolling",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeSelector",1215,G__G__Tree_225_4_11,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 0 selector",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MemoryFull",1036,G__G__Tree_225_5_11,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"i - 'Int_t' 0 - nbytes",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Merge",496,G__G__Tree_225_6_11,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"U 'TCollection' - 0 - list",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MergeTrees",1011,G__G__Tree_225_7_11,85,G__get_linked_tagnum(&G__G__TreeLN_TTree),-1,0,1,3,1,0,"U 'TList' - 0 - list",(char*)NULL,(void*)(TTree* (*)(TList*))(&TChainProof::MergeTrees),0);
   G__memfunc_setup("Notify",633,G__G__Tree_225_8_11,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Principal",930,G__G__Tree_225_9_11,85,G__get_linked_tagnum(&G__G__TreeLN_TPrincipal),-1,0,5,1,1,0,
"C - - 10 \"\" varexp C - - 10 \"\" selection "
"C - 'Option_t' 10 \"np\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Tree_225_0_12,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Process",735,G__G__Tree_225_1_12,110,-1,G__defined_typename("Long64_t"),0,4,1,1,0,
"C - - 10 - filename C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Progress",853,G__G__Tree_225_2_12,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 - total n - 'Long64_t' 0 - processed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Process",735,G__G__Tree_225_3_12,110,-1,G__defined_typename("Long64_t"),0,4,1,1,0,
"U 'TSelector' - 0 - selector C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Project",727,G__G__Tree_225_4_12,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"C - - 10 - hname C - - 10 - varexp "
"C - - 10 \"\" selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Query",534,G__G__Tree_225_5_12,85,G__get_linked_tagnum(&G__G__TreeLN_TSQLResult),-1,0,5,1,1,0,
"C - - 10 \"\" varexp C - - 10 \"\" selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadFile",764,G__G__Tree_225_6_12,110,-1,G__defined_typename("Long64_t"),0,2,1,1,0,
"C - - 10 - filename C - - 10 \"\" branchDescriptor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Refresh",719,G__G__Tree_225_7_12,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RemoveFriend",1222,G__G__Tree_225_8_12,121,-1,-1,0,1,1,1,0,"U 'TTree' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Tree_225_9_12,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetBranchAddresses",2031,G__G__Tree_225_0_13,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Scan",389,G__G__Tree_225_1_13,110,-1,G__defined_typename("Long64_t"),0,5,1,1,0,
"C - - 10 \"\" varexp C - - 10 \"\" selection "
"C - 'Option_t' 10 \"\" option n - 'Long64_t' 0 1000000000 nentries "
"n - 'Long64_t' 0 0 firstentry","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetAlias",790,G__G__Tree_225_2_13,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"C - - 10 - aliasName C - - 10 - aliasFormula",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAutoSave",1108,G__G__Tree_225_3_13,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 10000000 autos",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBasketSize",1313,G__G__Tree_225_4_13,121,-1,-1,0,2,1,1,0,
"C - - 10 - bname i - 'Int_t' 0 16000 buffsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchAddress",1600,G__G__Tree_225_5_13,121,-1,-1,0,5,1,1,0,
"C - - 10 - bname Y - - 0 - add "
"U 'TClass' - 0 - realClass i 'EDataType' - 0 - datatype "
"g - 'Bool_t' 0 - ptr",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchStatus",1534,G__G__Tree_225_6_13,121,-1,-1,0,3,1,1,0,
"C - - 10 - bname g - 'Bool_t' 0 1 status "
"H - 'UInt_t' 0 0 found",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBranchStyle",1419,G__G__Tree_225_7_13,121,-1,-1,0,1,3,1,0,"i - 'Int_t' 0 1 style","style=0 for old branch, =1 for new branch style",(void*)(void (*)(Int_t))(&TChainProof::SetBranchStyle),0);
   G__memfunc_setup("SetChainOffset",1398,G__G__Tree_225_8_13,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 offset",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetCircular",1121,G__G__Tree_225_9_13,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - maxEntries",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDebug",787,G__G__Tree_225_0_14,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 1 level n - 'Long64_t' 0 0 min "
"n - 'Long64_t' 0 9999999 max","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetDirectory",1249,G__G__Tree_225_1_14,121,-1,-1,0,1,1,1,0,"U 'TDirectory' - 0 - dir",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetEntries",1030,G__G__Tree_225_2_14,110,-1,G__defined_typename("Long64_t"),0,1,1,1,0,"n - 'Long64_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetEstimate",1128,G__G__Tree_225_3_14,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 10000 nentries",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFileNumber",1301,G__G__Tree_225_4_14,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 number",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMakeClass",1184,G__G__Tree_225_5_14,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - make",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMaxEntryLoop",1534,G__G__Tree_225_6_14,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 1000000000 maxev","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetMaxTreeSize",1405,G__G__Tree_225_7_14,121,-1,-1,0,1,3,1,0,"n - 'Long64_t' 0 1900000000 maxsize",(char*)NULL,(void*)(void (*)(Long64_t))(&TChainProof::SetMaxTreeSize),0);
   G__memfunc_setup("SetMaxVirtualSize",1748,G__G__Tree_225_8_14,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 0 size","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetName",685,G__G__Tree_225_9_14,121,-1,-1,0,1,1,1,0,"C - - 10 - name","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetNotify",933,G__G__Tree_225_0_15,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetObject",899,G__G__Tree_225_1_15,121,-1,-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - title",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetScanField",1173,G__G__Tree_225_2_15,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 50 n","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetTimerInterval",1650,G__G__Tree_225_3_15,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 333 msec",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTreeIndex",1204,G__G__Tree_225_4_15,121,-1,-1,0,1,1,1,0,"U 'TVirtualIndex' - 0 - index",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetWeight",916,G__G__Tree_225_5_15,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 1 w C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetUpdate",911,G__G__Tree_225_6_15,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 freq",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Show",417,G__G__Tree_225_7_15,121,-1,-1,0,2,1,1,0,
"n - 'Long64_t' 0 -1 entry i - 'Int_t' 0 20 lenmax",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StartViewer",1152,G__G__Tree_225_8_15,121,-1,-1,0,0,1,1,0,"","*MENU*",(void*)NULL,1);
   G__memfunc_setup("UnbinnedFit",1110,G__G__Tree_225_9_15,110,-1,G__defined_typename("Long64_t"),0,6,1,1,0,
"C - - 10 - funcname C - - 10 - varexp "
"C - - 10 \"\" selection C - 'Option_t' 10 \"\" option "
"n - 'Long64_t' 0 1000000000 nentries n - 'Long64_t' 0 0 firstentry",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UseCurrentStyle",1569,G__G__Tree_225_0_16,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ConnectProof",1232,G__G__Tree_225_1_16,121,-1,-1,0,1,1,1,0,"U 'TVirtualProof' - 0 - proof",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReleaseProof",1223,G__G__Tree_225_2_16,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeChainProof",1383,G__G__Tree_225_3_16,85,G__get_linked_tagnum(&G__G__TreeLN_TChainProof),-1,0,2,3,1,0,
"U 'TDSet' - 0 - set U 'TVirtualProof' - 0 - proof",(char*)NULL,(void*)(TChainProof* (*)(TDSet*,TVirtualProof*))(&TChainProof::MakeChainProof),0);
   G__memfunc_setup("Class",502,G__G__Tree_225_4_16,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TChainProof::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_225_5_16,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TChainProof::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_225_6_16,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TChainProof::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_225_7_16,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TChainProof::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_225_8_16,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_225_9_16,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_225_0_17,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_225_1_17,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_225_2_17,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TChainProof::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_225_3_17,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TChainProof::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_225_4_17,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TChainProof::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_225_5_17,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TChainProof::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TChainProof",1211,G__G__Tree_225_6_17,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTNtuple(void) {
   /* TNtuple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtuple));
   G__memfunc_setup("Fill",391,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TNtuple",716,G__G__Tree_226_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TNtuple),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TNtuple",716,G__G__Tree_226_3_0,105,G__get_linked_tagnum(&G__G__TreeLN_TNtuple),-1,0,4,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - varlist i - 'Int_t' 0 32000 bufsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Browse",626,G__G__Tree_226_4_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fill",391,G__G__Tree_226_5_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"F - 'Float_t' 10 - x",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fill",391,G__G__Tree_226_6_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - x0",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Fill",391,G__G__Tree_226_7_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - x0",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Fill",391,G__G__Tree_226_8_0,105,-1,G__defined_typename("Int_t"),0,15,1,1,0,
"f - 'Float_t' 0 - x0 f - 'Float_t' 0 0 x1 "
"f - 'Float_t' 0 0 x2 f - 'Float_t' 0 0 x3 "
"f - 'Float_t' 0 0 x4 f - 'Float_t' 0 0 x5 "
"f - 'Float_t' 0 0 x6 f - 'Float_t' 0 0 x7 "
"f - 'Float_t' 0 0 x8 f - 'Float_t' 0 0 x9 "
"f - 'Float_t' 0 0 x10 f - 'Float_t' 0 0 x11 "
"f - 'Float_t' 0 0 x12 f - 'Float_t' 0 0 x13 "
"f - 'Float_t' 0 0 x14",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNvar",695,G__G__Tree_226_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetArgs",685,G__G__Tree_226_0_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadFile",764,G__G__Tree_226_1_1,110,-1,G__defined_typename("Long64_t"),0,2,1,1,0,
"C - - 10 - filename C - - 10 \"\" branchDescriptor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetBranchAddresses",2031,G__G__Tree_226_2_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_226_3_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TNtuple::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_226_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNtuple::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_226_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TNtuple::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_226_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TNtuple::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_226_7_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_226_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_226_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_226_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_226_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNtuple::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_226_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNtuple::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_226_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNtuple::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_226_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNtuple::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TNtuple",842,G__G__Tree_226_5_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTBranchClones(void) {
   /* TBranchClones */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchClones));
   G__memfunc_setup("TBranchClones",1286,G__G__Tree_227_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranchClones),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TBranchClones",1286,G__G__Tree_227_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TBranchClones),-1,0,5,1,1,0,
"C - - 10 - name Y - - 0 - clonesaddress "
"i - 'Int_t' 0 32000 basketsize i - 'Int_t' 0 -1 compress "
"i - 'Int_t' 0 1 splitlevel",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Browse",626,G__G__Tree_227_3_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fill",391,G__G__Tree_227_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntry",818,G__G__Tree_227_5_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"n - 'Long64_t' 0 0 entry i - 'Int_t' 0 0 getall",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetN",366,G__G__Tree_227_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetList",700,G__G__Tree_227_7_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClonesArray),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsFolder",792,G__G__Tree_227_8_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Tree_227_9_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__G__Tree_227_0_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_227_1_1,121,-1,-1,0,1,1,1,0,"Y - - 0 - add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBasketSize",1313,G__G__Tree_227_2_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - buffsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_227_3_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TBranchClones::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_227_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchClones::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_227_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TBranchClones::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_227_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TBranchClones::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_227_7_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_227_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_227_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_227_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_227_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchClones::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_227_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBranchClones::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_227_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBranchClones::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_227_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBranchClones::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TBranchClones",1412,G__G__Tree_227_5_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLeafL(void) {
   /* TLeafL */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafL));
   G__memfunc_setup("TLeafL",536,G__G__Tree_231_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafL),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLeafL",536,G__G__Tree_231_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafL),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Export",642,G__G__Tree_231_3_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillBasket",993,G__G__Tree_231_4_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_231_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaximum",1022,G__G__Tree_231_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMinimum",1020,G__G__Tree_231_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValue",797,G__G__Tree_231_8_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_231_9_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Import",635,G__G__Tree_231_0_1,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_231_1_1,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasket",982,G__G__Tree_231_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasketExport",1624,G__G__Tree_231_3_1,121,-1,-1,0,3,1,1,0,
"u 'TBuffer' - 1 - b U 'TClonesArray' - 0 - list "
"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadValue",889,G__G__Tree_231_4_1,121,-1,-1,0,1,1,1,0,"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_231_5_1,121,-1,-1,0,1,1,1,0,"Y - - 0 0 add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMaximum",1034,G__G__Tree_231_6_1,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - max",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMinimum",1032,G__G__Tree_231_7_1,121,-1,-1,0,1,1,1,0,"n - 'Long64_t' 0 - min",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_231_8_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLeafL::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_231_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafL::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_231_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLeafL::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_231_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLeafL::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_231_2_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_231_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_231_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_231_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_231_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafL::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_231_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafL::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_231_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafL::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_231_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafL::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLeafL",536,G__G__Tree_231_0_3,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TLeafL),-1,0,1,1,1,0,"u 'TLeafL' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLeafL",662,G__G__Tree_231_1_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_231_2_3,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TLeafL),-1,1,1,1,1,0,"u 'TLeafL' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLeafElement(void) {
   /* TLeafElement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafElement));
   G__memfunc_setup("TLeafElement",1174,G__G__Tree_233_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafElement),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLeafElement",1174,G__G__Tree_233_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafElement),-1,0,3,1,1,0,
"C - - 10 - name i - 'Int_t' 0 - id "
"i - 'Int_t' 0 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLen",575,G__G__Tree_233_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMethodCall",1277,G__G__Tree_233_4_0,85,G__get_linked_tagnum(&G__G__TreeLN_TMethodCall),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaximum",1022,G__G__Tree_233_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNdata",776,G__G__Tree_233_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_233_7_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValue",797,G__G__Tree_233_8_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValueSubArray",1606,G__G__Tree_233_9_0,100,-1,G__defined_typename("Double_t"),0,2,1,1,8,
"i - 'Int_t' 0 0 i i - 'Int_t' 0 0 j",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_233_0_1,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsOnTerminalBranch",1795,G__G__Tree_233_1_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_233_2_1,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLeafCount",1197,G__G__Tree_233_3_1,121,-1,-1,0,1,1,1,0,"U 'TLeaf' - 0 - leaf",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_233_4_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLeafElement::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_233_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafElement::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_233_6_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLeafElement::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_233_7_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLeafElement::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_233_8_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_233_9_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_233_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_233_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_233_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafElement::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_233_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafElement::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_233_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafElement::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_233_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafElement::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLeafElement",1174,G__G__Tree_233_6_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TLeafElement),-1,0,1,1,1,0,"u 'TLeafElement' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLeafElement",1300,G__G__Tree_233_7_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_233_8_2,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TLeafElement),-1,1,1,1,1,0,"u 'TLeafElement' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLeafC(void) {
   /* TLeafC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafC));
   G__memfunc_setup("TLeafC",527,G__G__Tree_235_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafC),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLeafC",527,G__G__Tree_235_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafC),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Export",642,G__G__Tree_235_3_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillBasket",993,G__G__Tree_235_4_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaximum",1022,G__G__Tree_235_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMinimum",1020,G__G__Tree_235_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_235_7_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValue",797,G__G__Tree_235_8_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_235_9_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValueString",1428,G__G__Tree_235_0_1,67,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Import",635,G__G__Tree_235_1_1,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_235_2_1,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasket",982,G__G__Tree_235_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasketExport",1624,G__G__Tree_235_4_1,121,-1,-1,0,3,1,1,0,
"u 'TBuffer' - 1 - b U 'TClonesArray' - 0 - list "
"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadValue",889,G__G__Tree_235_5_1,121,-1,-1,0,1,1,1,0,"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_235_6_1,121,-1,-1,0,1,1,1,0,"Y - - 0 0 add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_235_7_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLeafC::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_235_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafC::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_235_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLeafC::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_235_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLeafC::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_235_1_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_235_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_235_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_235_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_235_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafC::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_235_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafC::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_235_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafC::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_235_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafC::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLeafC",527,G__G__Tree_235_9_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TLeafC),-1,0,1,1,1,0,"u 'TLeafC' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLeafC",653,G__G__Tree_235_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_235_1_3,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TLeafC),-1,1,1,1,1,0,"u 'TLeafC' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSelectorScalar(void) {
   /* TSelectorScalar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelectorScalar));
   G__memfunc_setup("TSelectorScalar",1515,G__G__Tree_236_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TSelectorScalar),-1,0,2,1,1,0,
"C - - 10 \"\" name n - 'Long64_t' 0 0 val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Inc",282,G__G__Tree_236_2_0,121,-1,-1,0,1,1,1,0,"l - 'Long_t' 0 1 n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Merge",496,G__G__Tree_236_3_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TCollection' - 0 - list",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Tree_236_4_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSelectorScalar::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_236_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSelectorScalar::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_236_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSelectorScalar::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_236_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSelectorScalar::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_236_8_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_236_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_236_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_236_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_236_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSelectorScalar::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_236_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSelectorScalar::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_236_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSelectorScalar::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_236_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSelectorScalar::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TSelectorScalar",1515,G__G__Tree_236_6_1,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TSelectorScalar),-1,0,1,1,1,0,"u 'TSelectorScalar' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TSelectorScalar",1641,G__G__Tree_236_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_236_8_1,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TSelectorScalar),-1,1,1,1,1,0,"u 'TSelectorScalar' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTChainElement(void) {
   /* TChainElement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainElement));
   G__memfunc_setup("TChainElement",1281,G__G__Tree_238_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TChainElement),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TChainElement",1281,G__G__Tree_238_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TChainElement),-1,0,2,1,1,0,
"C - - 10 - title C - - 10 - filename",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreatePackets",1311,G__G__Tree_238_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBaddress",1096,G__G__Tree_238_4_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBaddressClassName",1983,G__G__Tree_238_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBaddressIsPtr",1594,G__G__Tree_238_6_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBaddressType",1514,G__G__Tree_238_7_0,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEntries",1018,G__G__Tree_238_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPackets",1003,G__G__Tree_238_9_0,67,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPacketSize",1299,G__G__Tree_238_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStatus",932,G__G__Tree_238_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ls",223,G__G__Tree_238_2_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBaddress",1108,G__G__Tree_238_3_1,121,-1,-1,0,1,1,1,0,"Y - - 0 - add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBaddressClassName",1995,G__G__Tree_238_4_1,121,-1,-1,0,1,1,1,0,"C - - 10 - clname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBaddressIsPtr",1606,G__G__Tree_238_5_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - isptr",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBaddressType",1526,G__G__Tree_238_6_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - type",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetNumberEntries",1647,G__G__Tree_238_7_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPacketSize",1311,G__G__Tree_238_8_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 100 size",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetStatus",944,G__G__Tree_238_9_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - status",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_238_0_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TChainElement::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_238_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TChainElement::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_238_2_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TChainElement::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_238_3_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TChainElement::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_238_4_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_238_5_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_238_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_238_7_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_238_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TChainElement::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_238_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TChainElement::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_238_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TChainElement::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_238_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TChainElement::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TChainElement",1281,G__G__Tree_238_2_3,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TChainElement),-1,0,1,1,1,0,"u 'TChainElement' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TChainElement",1407,G__G__Tree_238_3_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_238_4_3,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TChainElement),-1,1,1,1,1,0,"u 'TChainElement' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLeafO(void) {
   /* TLeafO */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafO));
   G__memfunc_setup("TLeafO",539,G__G__Tree_239_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafO),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLeafO",539,G__G__Tree_239_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafO),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Export",642,G__G__Tree_239_3_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillBasket",993,G__G__Tree_239_4_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_239_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValue",797,G__G__Tree_239_6_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_239_7_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Import",635,G__G__Tree_239_8_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_239_9_0,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasket",982,G__G__Tree_239_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasketExport",1624,G__G__Tree_239_1_1,121,-1,-1,0,3,1,1,0,
"u 'TBuffer' - 1 - b U 'TClonesArray' - 0 - list "
"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadValue",889,G__G__Tree_239_2_1,121,-1,-1,0,1,1,1,0,"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_239_3_1,121,-1,-1,0,1,1,1,0,"Y - - 0 0 add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_239_4_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLeafO::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_239_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafO::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_239_6_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLeafO::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_239_7_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLeafO::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_239_8_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_239_9_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_239_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_239_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_239_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafO::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_239_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafO::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_239_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafO::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_239_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafO::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLeafO",539,G__G__Tree_239_6_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TLeafO),-1,0,1,1,1,0,"u 'TLeafO' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLeafO",665,G__G__Tree_239_7_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_239_8_2,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TLeafO),-1,1,1,1,1,0,"u 'TLeafO' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTNtupleD(void) {
   /* TNtupleD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtupleD));
   G__memfunc_setup("Fill",391,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TNtupleD",784,G__G__Tree_240_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TNtupleD),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TNtupleD",784,G__G__Tree_240_3_0,105,G__get_linked_tagnum(&G__G__TreeLN_TNtupleD),-1,0,4,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - varlist i - 'Int_t' 0 32000 bufsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Browse",626,G__G__Tree_240_4_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fill",391,G__G__Tree_240_5_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"D - 'Double_t' 10 - x",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Fill",391,G__G__Tree_240_6_0,105,-1,G__defined_typename("Int_t"),0,15,1,1,0,
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - x1 "
"d - 'Double_t' 0 0 x2 d - 'Double_t' 0 0 x3 "
"d - 'Double_t' 0 0 x4 d - 'Double_t' 0 0 x5 "
"d - 'Double_t' 0 0 x6 d - 'Double_t' 0 0 x7 "
"d - 'Double_t' 0 0 x8 d - 'Double_t' 0 0 x9 "
"d - 'Double_t' 0 0 x10 d - 'Double_t' 0 0 x11 "
"d - 'Double_t' 0 0 x12 d - 'Double_t' 0 0 x13 "
"d - 'Double_t' 0 0 x14",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNvar",695,G__G__Tree_240_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetArgs",685,G__G__Tree_240_8_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadFile",764,G__G__Tree_240_9_0,110,-1,G__defined_typename("Long64_t"),0,2,1,1,0,
"C - - 10 - filename C - - 10 \"\" branchDescriptor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetBranchAddresses",2031,G__G__Tree_240_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_240_1_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TNtupleD::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_240_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNtupleD::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_240_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TNtupleD::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_240_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TNtupleD::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_240_5_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_240_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_240_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_240_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_240_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNtupleD::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_240_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNtupleD::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_240_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNtupleD::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_240_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNtupleD::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TNtupleD",910,G__G__Tree_240_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLeafB(void) {
   /* TLeafB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafB));
   G__memfunc_setup("TLeafB",526,G__G__Tree_241_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafB),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLeafB",526,G__G__Tree_241_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafB),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Export",642,G__G__Tree_241_3_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillBasket",993,G__G__Tree_241_4_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_241_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValue",797,G__G__Tree_241_6_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_241_7_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Import",635,G__G__Tree_241_8_0,121,-1,-1,0,2,1,1,0,
"U 'TClonesArray' - 0 - list i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_241_9_0,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasket",982,G__G__Tree_241_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasketExport",1624,G__G__Tree_241_1_1,121,-1,-1,0,3,1,1,0,
"u 'TBuffer' - 1 - b U 'TClonesArray' - 0 - list "
"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadValue",889,G__G__Tree_241_2_1,121,-1,-1,0,1,1,1,0,"u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - s",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_241_3_1,121,-1,-1,0,1,1,1,0,"Y - - 0 0 add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_241_4_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLeafB::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_241_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafB::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_241_6_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLeafB::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_241_7_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLeafB::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_241_8_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_241_9_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_241_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_241_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_241_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafB::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_241_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafB::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_241_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafB::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_241_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafB::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLeafB",526,G__G__Tree_241_6_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TLeafB),-1,0,1,1,1,0,"u 'TLeafB' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLeafB",652,G__G__Tree_241_7_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_241_8_2,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TLeafB),-1,1,1,1,1,0,"u 'TLeafB' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTLeafObject(void) {
   /* TLeafObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafObject));
   G__memfunc_setup("TLeafObject",1059,G__G__Tree_242_1_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafObject),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLeafObject",1059,G__G__Tree_242_2_0,105,G__get_linked_tagnum(&G__G__TreeLN_TLeafObject),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FillBasket",993,G__G__Tree_242_3_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetClass",790,G__G__Tree_242_4_0,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMethodCall",1277,G__G__Tree_242_5_0,85,G__get_linked_tagnum(&G__G__TreeLN_TMethodCall),-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetObject",887,G__G__Tree_242_6_0,85,G__get_linked_tagnum(&G__G__TreeLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTypeName",1091,G__G__Tree_242_7_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetValuePointer",1534,G__G__Tree_242_8_0,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsOnTerminalBranch",1795,G__G__Tree_242_9_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsVirtual",931,G__G__Tree_242_0_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Notify",633,G__G__Tree_242_1_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintValue",1034,G__G__Tree_242_2_1,121,-1,-1,0,1,1,1,8,"i - 'Int_t' 0 0 i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReadBasket",982,G__G__Tree_242_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAddress",1010,G__G__Tree_242_4_1,121,-1,-1,0,1,1,1,0,"Y - - 0 0 add",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetVirtual",1043,G__G__Tree_242_5_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE virt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Tree_242_6_1,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLeafObject::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Tree_242_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafObject::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Tree_242_8_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLeafObject::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Tree_242_9_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLeafObject::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Tree_242_0_2,85,G__get_linked_tagnum(&G__G__TreeLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Tree_242_1_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Tree_242_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Tree_242_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Tree_242_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafObject::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Tree_242_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafObject::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Tree_242_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLeafObject::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Tree_242_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLeafObject::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TLeafObject",1059,G__G__Tree_242_8_2,(int)('i'),G__get_linked_tagnum(&G__G__TreeLN_TLeafObject),-1,0,1,1,1,0,"u 'TLeafObject' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TLeafObject",1185,G__G__Tree_242_9_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Tree_242_0_3,(int)('u'),G__get_linked_tagnum(&G__G__TreeLN_TLeafObject),-1,1,1,1,1,0,"u 'TLeafObject' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Tree() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Tree() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
   G__memfunc_setup("operator+",919,G__G__Tree__4_31,117,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,0,2,1,1,0,
"u 'TEventList' - 11 - list1 u 'TEventList' - 11 - list2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Tree__5_31,117,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,0,2,1,1,0,
"u 'TEventList' - 11 - list1 u 'TEventList' - 11 - list2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Tree__6_31,117,G__get_linked_tagnum(&G__G__TreeLN_TEventList),-1,0,2,1,1,0,
"u 'TEventList' - 11 - list1 u 'TEventList' - 11 - list2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Tree__0_38,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"u 'TCut' - 11 - lhs C - - 10 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Tree__1_38,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"C - - 10 - lhs u 'TCut' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Tree__2_38,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"u 'TCut' - 11 - lhs u 'TCut' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Tree__3_38,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"u 'TCut' - 11 - lhs C - - 10 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Tree__4_38,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"C - - 10 - lhs u 'TCut' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Tree__5_38,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"u 'TCut' - 11 - lhs u 'TCut' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator&&",952,G__G__Tree__6_38,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"u 'TCut' - 11 - lhs C - - 10 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator&&",952,G__G__Tree__7_38,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"C - - 10 - lhs u 'TCut' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator&&",952,G__G__Tree__8_38,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"u 'TCut' - 11 - lhs u 'TCut' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator||",1124,G__G__Tree__9_38,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"u 'TCut' - 11 - lhs C - - 10 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator||",1124,G__G__Tree__0_39,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"C - - 10 - lhs u 'TCut' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator||",1124,G__G__Tree__1_39,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,2,1,1,0,
"u 'TCut' - 11 - lhs u 'TCut' - 11 - rhs",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator!",909,G__G__Tree__2_39,117,G__get_linked_tagnum(&G__G__TreeLN_TCut),-1,0,1,1,1,0,"u 'TCut' - 11 - rhs",(char*)NULL
,(void*)NULL,0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Tree() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__TreeLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TVirtualCollectionProxy = { "TVirtualCollectionProxy" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TMethod = { "TMethod" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TStreamerInfo = { "TStreamerInfo" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TStreamerElement = { "TStreamerElement" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TIterator = { "TIterator" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TIter = { "TIter" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TKey = { "TKey" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TVirtualProof = { "TVirtualProof" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TEventList = { "TEventList" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TDSet = { "TDSet" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TCut = { "TCut" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TDSetElementPfn = { "TDSetElementPfn" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TDSetElementMsn = { "TDSetElementMsn" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TDSetElement = { "TDSetElement" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_G__ClassInfo = { "G__ClassInfo" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TMethodCall = { "TMethodCall" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TTreeFormula = { "TTreeFormula" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TSQLResult = { "TSQLResult" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TPrincipal = { "TPrincipal" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TVirtualIndex = { "TVirtualIndex" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TVirtualTreePlayer = { "TVirtualTreePlayer" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TBasket = { "TBasket" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TLeaf = { "TLeaf" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TBranchcLcLdA = { "TBranch::$" , 101 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafcLcLdA = { "TLeaf::$" , 101 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafS = { "TLeafS" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_G__CallFunc = { "G__CallFunc" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TSelectorCint = { "TSelectorCint" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TBranchObject = { "TBranchObject" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TBranchObjectcLcLdA = { "TBranchObject::$" , 101 , -1 };
G__linked_taginfo G__G__TreeLN_TSQLRow = { "TSQLRow" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TTreeResult = { "TTreeResult" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafI = { "TLeafI" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TBranchElement = { "TBranchElement" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TVirtualBranchBrowsable = { "TVirtualBranchBrowsable" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_listlEvoidmUcOallocatorlEvoidmUgRsPgR = { "list<void*,allocator<void*> >" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TMethodBrowsable = { "TMethodBrowsable" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TNonSplitBrowsable = { "TNonSplitBrowsable" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TCollectionPropertyBrowsable = { "TCollectionPropertyBrowsable" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TCollectionMethodBrowsable = { "TCollectionMethodBrowsable" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafF = { "TLeafF" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafD = { "TLeafD" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TTreeRow = { "TTreeRow" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_EDataType = { "EDataType" , 101 , -1 };
G__linked_taginfo G__G__TreeLN_TFriendElement = { "TFriendElement" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TBranchRef = { "TBranchRef" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TTreecLcLdA = { "TTree::$" , 101 , -1 };
G__linked_taginfo G__G__TreeLN_TTreeFriendLeafIter = { "TTreeFriendLeafIter" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TDrawFeedback = { "TDrawFeedback" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TChainProof = { "TChainProof" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TNtuple = { "TNtuple" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TBranchClones = { "TBranchClones" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TRefTable = { "TRefTable" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafL = { "TLeafL" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TBranchElementcLcLdA = { "TBranchElement::$" , 101 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafElement = { "TLeafElement" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TChaincLcLdA = { "TChain::$" , 101 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafC = { "TLeafC" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TSelectorScalar = { "TSelectorScalar" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TParameterlElongsPlonggR = { "TParameter<long long>" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TChainElement = { "TChainElement" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafO = { "TLeafO" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TNtupleD = { "TNtupleD" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafB = { "TLeafB" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafObject = { "TLeafObject" , 99 , -1 };
G__linked_taginfo G__G__TreeLN_TLeafObjectcLcLdA = { "TLeafObject::$" , 101 , -1 };
G__linked_taginfo G__G__TreeLN_TFriendElementcLcLdA = { "TFriendElement::$" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Tree() {
  G__G__TreeLN_TClass.tagnum = -1 ;
  G__G__TreeLN_TBuffer.tagnum = -1 ;
  G__G__TreeLN_TMemberInspector.tagnum = -1 ;
  G__G__TreeLN_TObject.tagnum = -1 ;
  G__G__TreeLN_TNamed.tagnum = -1 ;
  G__G__TreeLN_TVirtualCollectionProxy.tagnum = -1 ;
  G__G__TreeLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__TreeLN_TList.tagnum = -1 ;
  G__G__TreeLN_TBrowser.tagnum = -1 ;
  G__G__TreeLN_TObjArray.tagnum = -1 ;
  G__G__TreeLN_TMethod.tagnum = -1 ;
  G__G__TreeLN_TStreamerInfo.tagnum = -1 ;
  G__G__TreeLN_TStreamerElement.tagnum = -1 ;
  G__G__TreeLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__TreeLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__TreeLN_TCollection.tagnum = -1 ;
  G__G__TreeLN_TIterator.tagnum = -1 ;
  G__G__TreeLN_TString.tagnum = -1 ;
  G__G__TreeLN_TIter.tagnum = -1 ;
  G__G__TreeLN_TSeqCollection.tagnum = -1 ;
  G__G__TreeLN_TFile.tagnum = -1 ;
  G__G__TreeLN_TDirectory.tagnum = -1 ;
  G__G__TreeLN_TKey.tagnum = -1 ;
  G__G__TreeLN_TVirtualProof.tagnum = -1 ;
  G__G__TreeLN_TTree.tagnum = -1 ;
  G__G__TreeLN_TSelector.tagnum = -1 ;
  G__G__TreeLN_TEventList.tagnum = -1 ;
  G__G__TreeLN_TDSet.tagnum = -1 ;
  G__G__TreeLN_TCut.tagnum = -1 ;
  G__G__TreeLN_TChain.tagnum = -1 ;
  G__G__TreeLN_TDSetElementPfn.tagnum = -1 ;
  G__G__TreeLN_TDSetElementMsn.tagnum = -1 ;
  G__G__TreeLN_TDSetElement.tagnum = -1 ;
  G__G__TreeLN_TClonesArray.tagnum = -1 ;
  G__G__TreeLN_G__ClassInfo.tagnum = -1 ;
  G__G__TreeLN_TMethodCall.tagnum = -1 ;
  G__G__TreeLN_TH1.tagnum = -1 ;
  G__G__TreeLN_TTreeFormula.tagnum = -1 ;
  G__G__TreeLN_TSQLResult.tagnum = -1 ;
  G__G__TreeLN_TPrincipal.tagnum = -1 ;
  G__G__TreeLN_TVirtualIndex.tagnum = -1 ;
  G__G__TreeLN_TVirtualTreePlayer.tagnum = -1 ;
  G__G__TreeLN_TBranch.tagnum = -1 ;
  G__G__TreeLN_TBasket.tagnum = -1 ;
  G__G__TreeLN_TAttFill.tagnum = -1 ;
  G__G__TreeLN_TLeaf.tagnum = -1 ;
  G__G__TreeLN_TBranchcLcLdA.tagnum = -1 ;
  G__G__TreeLN_TLeafcLcLdA.tagnum = -1 ;
  G__G__TreeLN_TLeafS.tagnum = -1 ;
  G__G__TreeLN_G__CallFunc.tagnum = -1 ;
  G__G__TreeLN_TSelectorCint.tagnum = -1 ;
  G__G__TreeLN_TBranchObject.tagnum = -1 ;
  G__G__TreeLN_TBranchObjectcLcLdA.tagnum = -1 ;
  G__G__TreeLN_TSQLRow.tagnum = -1 ;
  G__G__TreeLN_TTreeResult.tagnum = -1 ;
  G__G__TreeLN_TLeafI.tagnum = -1 ;
  G__G__TreeLN_TBranchElement.tagnum = -1 ;
  G__G__TreeLN_TVirtualBranchBrowsable.tagnum = -1 ;
  G__G__TreeLN_listlEvoidmUcOallocatorlEvoidmUgRsPgR.tagnum = -1 ;
  G__G__TreeLN_TMethodBrowsable.tagnum = -1 ;
  G__G__TreeLN_TNonSplitBrowsable.tagnum = -1 ;
  G__G__TreeLN_TCollectionPropertyBrowsable.tagnum = -1 ;
  G__G__TreeLN_TCollectionMethodBrowsable.tagnum = -1 ;
  G__G__TreeLN_TLeafF.tagnum = -1 ;
  G__G__TreeLN_TLeafD.tagnum = -1 ;
  G__G__TreeLN_TTreeRow.tagnum = -1 ;
  G__G__TreeLN_TAttLine.tagnum = -1 ;
  G__G__TreeLN_TAttMarker.tagnum = -1 ;
  G__G__TreeLN_TArrayD.tagnum = -1 ;
  G__G__TreeLN_TArrayI.tagnum = -1 ;
  G__G__TreeLN_EDataType.tagnum = -1 ;
  G__G__TreeLN_TFriendElement.tagnum = -1 ;
  G__G__TreeLN_TBranchRef.tagnum = -1 ;
  G__G__TreeLN_TTreecLcLdA.tagnum = -1 ;
  G__G__TreeLN_TTreeFriendLeafIter.tagnum = -1 ;
  G__G__TreeLN_TDrawFeedback.tagnum = -1 ;
  G__G__TreeLN_TChainProof.tagnum = -1 ;
  G__G__TreeLN_TNtuple.tagnum = -1 ;
  G__G__TreeLN_TBranchClones.tagnum = -1 ;
  G__G__TreeLN_TRefTable.tagnum = -1 ;
  G__G__TreeLN_TLeafL.tagnum = -1 ;
  G__G__TreeLN_TBranchElementcLcLdA.tagnum = -1 ;
  G__G__TreeLN_TLeafElement.tagnum = -1 ;
  G__G__TreeLN_TChaincLcLdA.tagnum = -1 ;
  G__G__TreeLN_TLeafC.tagnum = -1 ;
  G__G__TreeLN_TSelectorScalar.tagnum = -1 ;
  G__G__TreeLN_TParameterlElongsPlonggR.tagnum = -1 ;
  G__G__TreeLN_TChainElement.tagnum = -1 ;
  G__G__TreeLN_TLeafO.tagnum = -1 ;
  G__G__TreeLN_TNtupleD.tagnum = -1 ;
  G__G__TreeLN_TLeafB.tagnum = -1 ;
  G__G__TreeLN_TLeafObject.tagnum = -1 ;
  G__G__TreeLN_TLeafObjectcLcLdA.tagnum = -1 ;
  G__G__TreeLN_TFriendElementcLcLdA.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Tree() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__TreeLN_TClass);
   G__get_linked_tagnum(&G__G__TreeLN_TBuffer);
   G__get_linked_tagnum(&G__G__TreeLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__TreeLN_TObject);
   G__get_linked_tagnum(&G__G__TreeLN_TNamed);
   G__get_linked_tagnum(&G__G__TreeLN_TVirtualCollectionProxy);
   G__get_linked_tagnum(&G__G__TreeLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__G__TreeLN_TList);
   G__get_linked_tagnum(&G__G__TreeLN_TBrowser);
   G__get_linked_tagnum(&G__G__TreeLN_TObjArray);
   G__get_linked_tagnum(&G__G__TreeLN_TMethod);
   G__get_linked_tagnum(&G__G__TreeLN_TStreamerInfo);
   G__get_linked_tagnum(&G__G__TreeLN_TStreamerElement);
   G__get_linked_tagnum(&G__G__TreeLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__TreeLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__TreeLN_TCollection);
   G__get_linked_tagnum(&G__G__TreeLN_TIterator);
   G__get_linked_tagnum(&G__G__TreeLN_TString);
   G__get_linked_tagnum(&G__G__TreeLN_TIter);
   G__get_linked_tagnum(&G__G__TreeLN_TSeqCollection);
   G__get_linked_tagnum(&G__G__TreeLN_TFile);
   G__get_linked_tagnum(&G__G__TreeLN_TDirectory);
   G__get_linked_tagnum(&G__G__TreeLN_TKey);
   G__get_linked_tagnum(&G__G__TreeLN_TVirtualProof);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TTree),sizeof(TTree),-1,128256,"Tree descriptor (the main ROOT I/O class)",G__setup_memvarTTree,G__setup_memfuncTTree);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelector),sizeof(TSelector),-1,292096,"A utility class for tree and object processing",G__setup_memvarTSelector,G__setup_memfuncTSelector);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TEventList),sizeof(TEventList),-1,130816,"A list of selected entries in a TTree.",G__setup_memvarTEventList,G__setup_memfuncTEventList);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSet),sizeof(TDSet),-1,324864,"Data set for remote processing (PROOF)",G__setup_memvarTDSet,G__setup_memfuncTDSet);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TCut),sizeof(TCut),-1,327424,"A specialized string object used for TTree selections",G__setup_memvarTCut,G__setup_memfuncTCut);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TChain),sizeof(TChain),-1,128256,"A chain of TTrees",G__setup_memvarTChain,G__setup_memfuncTChain);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElementPfn),sizeof(TDSetElementPfn),-1,292096,"Describing physical locations of LFNs",G__setup_memvarTDSetElementPfn,G__setup_memfuncTDSetElementPfn);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElementMsn),sizeof(TDSetElementMsn),-1,324864,"Describing the files to be processed in a mass storage system",G__setup_memvarTDSetElementMsn,G__setup_memfuncTDSetElementMsn);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TDSetElement),sizeof(TDSetElement),-1,324864,"A TDSet element",G__setup_memvarTDSetElement,G__setup_memfuncTDSetElement);
   G__get_linked_tagnum(&G__G__TreeLN_TClonesArray);
   G__get_linked_tagnum(&G__G__TreeLN_G__ClassInfo);
   G__get_linked_tagnum(&G__G__TreeLN_TMethodCall);
   G__get_linked_tagnum(&G__G__TreeLN_TH1);
   G__get_linked_tagnum(&G__G__TreeLN_TTreeFormula);
   G__get_linked_tagnum(&G__G__TreeLN_TSQLResult);
   G__get_linked_tagnum(&G__G__TreeLN_TPrincipal);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualIndex),sizeof(TVirtualIndex),-1,324871,"Abstract interface for Tree Index",G__setup_memvarTVirtualIndex,G__setup_memfuncTVirtualIndex);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualTreePlayer),sizeof(TVirtualTreePlayer),-1,29984,"Abstract interface for Tree players",G__setup_memvarTVirtualTreePlayer,G__setup_memfuncTVirtualTreePlayer);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranch),sizeof(TBranch),-1,128256,"Branch descriptor",G__setup_memvarTBranch,G__setup_memfuncTBranch);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TBasket),sizeof(TBasket),-1,128256,"the TBranch buffers",G__setup_memvarTBasket,G__setup_memfuncTBasket);
   G__get_linked_tagnum(&G__G__TreeLN_TAttFill);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeaf),sizeof(TLeaf),-1,128256,"Leaf: description of a Branch data type",G__setup_memvarTLeaf,G__setup_memfuncTLeaf);
   G__get_linked_tagnum(&G__G__TreeLN_TBranchcLcLdA);
   G__get_linked_tagnum(&G__G__TreeLN_TLeafcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafS),sizeof(TLeafS),-1,324864,"A TLeaf for a 16 bit Integer data type.",G__setup_memvarTLeafS,G__setup_memfuncTLeafS);
   G__get_linked_tagnum(&G__G__TreeLN_G__CallFunc);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelectorCint),sizeof(TSelectorCint),-1,292096,"A utility class for tree and object processing (interpreted version)",G__setup_memvarTSelectorCint,G__setup_memfuncTSelectorCint);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchObject),sizeof(TBranchObject),-1,128256,"Branch in case of an object",G__setup_memvarTBranchObject,G__setup_memfuncTBranchObject);
   G__get_linked_tagnum(&G__G__TreeLN_TBranchObjectcLcLdA);
   G__get_linked_tagnum(&G__G__TreeLN_TSQLRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeResult),sizeof(TTreeResult),-1,324864,"TTree query result",G__setup_memvarTTreeResult,G__setup_memfuncTTreeResult);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafI),sizeof(TLeafI),-1,324864,"A TLeaf for an Integer data type.",G__setup_memvarTLeafI,G__setup_memfuncTLeafI);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchElement),sizeof(TBranchElement),-1,128256,"Branch in case of an object",G__setup_memvarTBranchElement,G__setup_memfuncTBranchElement);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TVirtualBranchBrowsable),sizeof(TVirtualBranchBrowsable),-1,324608,"Base class for helper objects used for browsing",G__setup_memvarTVirtualBranchBrowsable,G__setup_memfuncTVirtualBranchBrowsable);
   G__get_linked_tagnum(&G__G__TreeLN_listlEvoidmUcOallocatorlEvoidmUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TMethodBrowsable),sizeof(TMethodBrowsable),-1,324608,"Helper object to browse methods",G__setup_memvarTMethodBrowsable,G__setup_memfuncTMethodBrowsable);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TNonSplitBrowsable),sizeof(TNonSplitBrowsable),-1,324608,"Helper object to browse unsplit objects",G__setup_memvarTNonSplitBrowsable,G__setup_memfuncTNonSplitBrowsable);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionPropertyBrowsable),sizeof(TCollectionPropertyBrowsable),-1,324608,"Helper object to add browsable collection properties",G__setup_memvarTCollectionPropertyBrowsable,G__setup_memfuncTCollectionPropertyBrowsable);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TCollectionMethodBrowsable),sizeof(TCollectionMethodBrowsable),-1,324608,"Helper object to browse a collection's methods",G__setup_memvarTCollectionMethodBrowsable,G__setup_memfuncTCollectionMethodBrowsable);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafF),sizeof(TLeafF),-1,324864,"A TLeaf for a 32 bit floating point data type.",G__setup_memvarTLeafF,G__setup_memfuncTLeafF);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafD),sizeof(TLeafD),-1,324864,"A TLeaf for a 64 bit floating point data type.",G__setup_memvarTLeafD,G__setup_memfuncTLeafD);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeRow),sizeof(TTreeRow),-1,128256,"One row of an TTree query result",G__setup_memvarTTreeRow,G__setup_memfuncTTreeRow);
   G__get_linked_tagnum(&G__G__TreeLN_TAttLine);
   G__get_linked_tagnum(&G__G__TreeLN_TAttMarker);
   G__get_linked_tagnum(&G__G__TreeLN_TArrayD);
   G__get_linked_tagnum(&G__G__TreeLN_TArrayI);
   G__get_linked_tagnum(&G__G__TreeLN_EDataType);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TFriendElement),sizeof(TFriendElement),-1,324864,"A friend element of another TTree",G__setup_memvarTFriendElement,G__setup_memfuncTFriendElement);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchRef),sizeof(TBranchRef),-1,324864,"to support referenced objects on other branches",G__setup_memvarTBranchRef,G__setup_memfuncTBranchRef);
   G__get_linked_tagnum(&G__G__TreeLN_TTreecLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TTreeFriendLeafIter),sizeof(TTreeFriendLeafIter),-1,36608,"Linked list iterator",G__setup_memvarTTreeFriendLeafIter,G__setup_memfuncTTreeFriendLeafIter);
   G__get_linked_tagnum(&G__G__TreeLN_TDrawFeedback);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainProof),sizeof(TChainProof),-1,128000,"TChain proxy for running chains on PROOF",G__setup_memvarTChainProof,G__setup_memfuncTChainProof);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtuple),sizeof(TNtuple),-1,128256,"A simple tree with branches of floats.",G__setup_memvarTNtuple,G__setup_memfuncTNtuple);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TBranchClones),sizeof(TBranchClones),-1,128256,"Branch in case of an array of clone objects",G__setup_memvarTBranchClones,G__setup_memfuncTBranchClones);
   G__get_linked_tagnum(&G__G__TreeLN_TRefTable);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafL),sizeof(TLeafL),-1,324864,"A TLeaf for a 64 bit Integer data type.",G__setup_memvarTLeafL,G__setup_memfuncTLeafL);
   G__get_linked_tagnum(&G__G__TreeLN_TBranchElementcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafElement),sizeof(TLeafElement),-1,324864,"A TLeaf for a general object derived from TObject.",G__setup_memvarTLeafElement,G__setup_memfuncTLeafElement);
   G__get_linked_tagnum(&G__G__TreeLN_TChaincLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafC),sizeof(TLeafC),-1,324864,"A TLeaf for a variable length string.",G__setup_memvarTLeafC,G__setup_memfuncTLeafC);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TSelectorScalar),sizeof(TSelectorScalar),-1,324864,"Mergable scalar",G__setup_memvarTSelectorScalar,G__setup_memfuncTSelectorScalar);
   G__get_linked_tagnum(&G__G__TreeLN_TParameterlElongsPlonggR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TChainElement),sizeof(TChainElement),-1,62720,"A chain element",G__setup_memvarTChainElement,G__setup_memfuncTChainElement);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafO),sizeof(TLeafO),-1,324864,"A TLeaf for an 8 bit Integer data type.",G__setup_memvarTLeafO,G__setup_memfuncTLeafO);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TNtupleD),sizeof(TNtupleD),-1,128256,"A simple tree with branches of floats.",G__setup_memvarTNtupleD,G__setup_memfuncTNtupleD);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafB),sizeof(TLeafB),-1,324864,"A TLeaf for an 8 bit Integer data type.",G__setup_memvarTLeafB,G__setup_memfuncTLeafB);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__TreeLN_TLeafObject),sizeof(TLeafObject),-1,128256,"A TLeaf for a general object derived from TObject.",G__setup_memvarTLeafObject,G__setup_memfuncTLeafObject);
   G__get_linked_tagnum(&G__G__TreeLN_TLeafObjectcLcLdA);
   G__get_linked_tagnum(&G__G__TreeLN_TFriendElementcLcLdA);
}
extern "C" void G__cpp_setupG__Tree(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Tree()");
  G__set_cpp_environmentG__Tree();
  G__cpp_setup_tagtableG__Tree();

  G__cpp_setup_inheritanceG__Tree();

  G__cpp_setup_typetableG__Tree();

  G__cpp_setup_memvarG__Tree();

  G__cpp_setup_memfuncG__Tree();
  G__cpp_setup_globalG__Tree();
  G__cpp_setup_funcG__Tree();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Tree();
  return;
}
class G__cpp_setup_initG__Tree {
  public:
    G__cpp_setup_initG__Tree() { G__add_setup_func("G__Tree",(G__incsetup)(&G__cpp_setupG__Tree)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Tree() { G__remove_setup_func("G__Tree"); }
};
G__cpp_setup_initG__Tree G__cpp_setup_initializerG__Tree;

