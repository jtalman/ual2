// quad file
void propagate(UAL::Probe& probe)
{
std::cout << __FILE__ << " enter quad propagate\n";
std::cout << " m_l: " << m_l << "\n";
std::cout << " vD:  " << vD  << "\n";
std::cout << "line  " << __LINE__ << "\n";
 PAC::Bunch& bunch      = static_cast<PAC::Bunch&>(probe);
std::cout << "line  " << __LINE__ << "\n";
 tofD                   = m_l/vD;
std::cout << "line  " << __LINE__ << "\n";
 PacElemMultipole* mult = m_mdata.m_mlt;
std::cout << "line  " << __LINE__ << "\n";
// double* data           = m_mdata.m_mlt->data();
// double q               = data[2];
std::cout << " m_q:   " << m_q   << "\n";
 for(int ip = 1; ip < bunch.size(); ip++) {
  PAC::Position& pacP   = bunch[ip].getPosition();
  pacPmy                = &pacP;
  passDrift( m_l/2., tofD/2. );
  pacP[1]              -= m_q*pacP[0];
  pacP[3]              += m_q*pacP[2];
  #include"quadSpinEvolve"
  passDrift( m_l/2., tofD/2. );
 }
 tofDT                 +=tofD;
 sDT                   += m_l;
std::cout << __FILE__ << " leave quad propagate\n";
}
