//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:31:31 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__MySQL.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TMySQLServer_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMySQLServer_IsA(const void*);
   static void delete_TMySQLServer(void *p);
   static void deleteArray_TMySQLServer(void *p);
   static void destruct_TMySQLServer(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMySQLServer*)
   {
      ::TMySQLServer *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMySQLServer", ::TMySQLServer::Class_Version(), "mysql/inc/TMySQLServer.h", 30,
                  typeid(::TMySQLServer), DefineBehavior(ptr, ptr),
                  &::TMySQLServer::Dictionary, &TMySQLServer_IsA, 0,
                  sizeof(::TMySQLServer) );
      instance.SetDelete(&delete_TMySQLServer);
      instance.SetDeleteArray(&deleteArray_TMySQLServer);
      instance.SetDestructor(&destruct_TMySQLServer);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMySQLServer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMySQLResult_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMySQLResult_IsA(const void*);
   static void delete_TMySQLResult(void *p);
   static void deleteArray_TMySQLResult(void *p);
   static void destruct_TMySQLResult(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMySQLResult*)
   {
      ::TMySQLResult *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMySQLResult", ::TMySQLResult::Class_Version(), "mysql/inc/TMySQLResult.h", 30,
                  typeid(::TMySQLResult), DefineBehavior(ptr, ptr),
                  &::TMySQLResult::Dictionary, &TMySQLResult_IsA, 0,
                  sizeof(::TMySQLResult) );
      instance.SetDelete(&delete_TMySQLResult);
      instance.SetDeleteArray(&deleteArray_TMySQLResult);
      instance.SetDestructor(&destruct_TMySQLResult);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMySQLResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMySQLRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMySQLRow_IsA(const void*);
   static void delete_TMySQLRow(void *p);
   static void deleteArray_TMySQLRow(void *p);
   static void destruct_TMySQLRow(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMySQLRow*)
   {
      ::TMySQLRow *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMySQLRow", ::TMySQLRow::Class_Version(), "mysql/inc/TMySQLRow.h", 30,
                  typeid(::TMySQLRow), DefineBehavior(ptr, ptr),
                  &::TMySQLRow::Dictionary, &TMySQLRow_IsA, 0,
                  sizeof(::TMySQLRow) );
      instance.SetDelete(&delete_TMySQLRow);
      instance.SetDeleteArray(&deleteArray_TMySQLRow);
      instance.SetDestructor(&destruct_TMySQLRow);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMySQLRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TMySQLServer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMySQLServer::Class_Name()
{
   return "TMySQLServer";
}

//______________________________________________________________________________
const char *TMySQLServer::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMySQLServer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMySQLServer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMySQLServer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMySQLServer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMySQLServer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMySQLServer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMySQLServer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMySQLResult::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMySQLResult::Class_Name()
{
   return "TMySQLResult";
}

//______________________________________________________________________________
const char *TMySQLResult::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMySQLResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMySQLResult::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMySQLResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMySQLResult::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMySQLResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMySQLResult::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMySQLResult*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMySQLRow::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMySQLRow::Class_Name()
{
   return "TMySQLRow";
}

//______________________________________________________________________________
const char *TMySQLRow::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMySQLRow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMySQLRow::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMySQLRow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMySQLRow::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMySQLRow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMySQLRow::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMySQLRow*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TMySQLServer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMySQLServer.

   TSQLServer::Streamer(R__b);
}

//______________________________________________________________________________
void TMySQLServer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMySQLServer.

      TClass *R__cl = ::TMySQLServer::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMySQL", &fMySQL);
      TSQLServer::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMySQLServer_IsA(const void *obj) {
      return ((::TMySQLServer*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TMySQLServer(void *p) {
      delete ((::TMySQLServer*)p);
   }
   static void deleteArray_TMySQLServer(void *p) {
      delete [] ((::TMySQLServer*)p);
   }
   static void destruct_TMySQLServer(void *p) {
      typedef ::TMySQLServer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMySQLServer

//______________________________________________________________________________
void TMySQLResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMySQLResult.

   TSQLResult::Streamer(R__b);
}

//______________________________________________________________________________
void TMySQLResult::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMySQLResult.

      TClass *R__cl = ::TMySQLResult::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fResult", &fResult);
      R__insp.Inspect(R__cl, R__parent, "*fFieldInfo", &fFieldInfo);
      TSQLResult::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMySQLResult_IsA(const void *obj) {
      return ((::TMySQLResult*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TMySQLResult(void *p) {
      delete ((::TMySQLResult*)p);
   }
   static void deleteArray_TMySQLResult(void *p) {
      delete [] ((::TMySQLResult*)p);
   }
   static void destruct_TMySQLResult(void *p) {
      typedef ::TMySQLResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMySQLResult

//______________________________________________________________________________
void TMySQLRow::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMySQLRow.

   TSQLRow::Streamer(R__b);
}

//______________________________________________________________________________
void TMySQLRow::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMySQLRow.

      TClass *R__cl = ::TMySQLRow::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fResult", &fResult);
      R__insp.Inspect(R__cl, R__parent, "*fFields", &fFields);
      R__insp.Inspect(R__cl, R__parent, "*fFieldLength", &fFieldLength);
      TSQLRow::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMySQLRow_IsA(const void *obj) {
      return ((::TMySQLRow*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TMySQLRow(void *p) {
      delete ((::TMySQLRow*)p);
   }
   static void deleteArray_TMySQLRow(void *p) {
      delete [] ((::TMySQLRow*)p);
   }
   static void destruct_TMySQLRow(void *p) {
      typedef ::TMySQLRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMySQLRow

/********************************************************
* mysql/src/G__MySQL.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__MySQL();

extern "C" void G__set_cpp_environmentG__MySQL() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("mysql/inc/TMySQLServer.h");
  G__add_compiledheader("mysql/inc/TMySQLResult.h");
  G__add_compiledheader("mysql/inc/TMySQLRow.h");
  G__cpp_reset_tagtableG__MySQL();
}
class G__mysqldIsrcdIG__MySQLdOcxx_tag {};

void* operator new(size_t size,G__mysqldIsrcdIG__MySQLdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__mysqldIsrcdIG__MySQLdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_mysqldIsrcdIG__MySQLdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__MySQL() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TMySQLServer */
static int G__G__MySQL_130_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMySQLServer *p=NULL;
      p = new TMySQLServer(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMySQLServer*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMySQLServer*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TMySQLServer*)(G__getstructoffset()))->Query((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMySQLServer*)(G__getstructoffset()))->SelectDataBase((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TMySQLServer*)(G__getstructoffset()))->GetDataBases((const char*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TMySQLServer*)(G__getstructoffset()))->GetDataBases());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TMySQLServer*)(G__getstructoffset()))->GetTables((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TMySQLServer*)(G__getstructoffset()))->GetTables((const char*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TMySQLServer*)(G__getstructoffset()))->GetColumns((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TMySQLServer*)(G__getstructoffset()))->GetColumns((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMySQLServer*)(G__getstructoffset()))->CreateDataBase((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMySQLServer*)(G__getstructoffset()))->DropDataBase((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMySQLServer*)(G__getstructoffset()))->Reload());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMySQLServer*)(G__getstructoffset()))->Shutdown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TMySQLServer*)(G__getstructoffset()))->ServerInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMySQLServer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMySQLServer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMySQLServer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMySQLServer::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMySQLServer*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMySQLServer*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMySQLServer*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMySQLServer*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMySQLServer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMySQLServer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMySQLServer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_130_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMySQLServer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MySQL_130_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMySQLServer *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMySQLServer(*(TMySQLServer*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMySQLServer G__TTMySQLServer;
static int G__G__MySQL_130_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMySQLServer *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMySQLServer *)((G__getstructoffset())+sizeof(TMySQLServer)*i);
   else  delete (TMySQLServer *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MySQL_130_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMySQLServer *dest = (TMySQLServer*)(G__getstructoffset());
   *dest = (*(TMySQLServer*)libp->para[0].ref);
   const TMySQLServer& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMySQLResult */
static int G__G__MySQL_134_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMySQLResult *p=NULL;
      p = new TMySQLResult((void*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMySQLResult*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMySQLResult*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMySQLResult*)(G__getstructoffset()))->GetFieldCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TMySQLResult*)(G__getstructoffset()))->GetFieldName((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TMySQLResult*)(G__getstructoffset()))->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMySQLResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMySQLResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMySQLResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMySQLResult::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMySQLResult*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMySQLResult*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMySQLResult*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMySQLResult*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMySQLResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMySQLResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMySQLResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_134_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMySQLResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MySQL_134_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMySQLResult *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMySQLResult(*(TMySQLResult*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMySQLResult G__TTMySQLResult;
static int G__G__MySQL_134_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMySQLResult *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMySQLResult *)((G__getstructoffset())+sizeof(TMySQLResult)*i);
   else  delete (TMySQLResult *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MySQL_134_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMySQLResult *dest = (TMySQLResult*)(G__getstructoffset());
   *dest = (*(TMySQLResult*)libp->para[0].ref);
   const TMySQLResult& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMySQLRow */
static int G__G__MySQL_135_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMySQLRow *p=NULL;
      p = new TMySQLRow((void*)G__int(libp->para[0]),(ULong_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMySQLRow*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMySQLRow*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((TMySQLRow*)(G__getstructoffset()))->GetFieldLength((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TMySQLRow*)(G__getstructoffset()))->GetField((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMySQLRow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMySQLRow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMySQLRow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMySQLRow::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMySQLRow*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMySQLRow*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMySQLRow*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMySQLRow*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMySQLRow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMySQLRow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMySQLRow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__MySQL_135_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMySQLRow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__MySQL_135_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMySQLRow *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMySQLRow(*(TMySQLRow*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMySQLRow G__TTMySQLRow;
static int G__G__MySQL_135_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMySQLRow *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMySQLRow *)((G__getstructoffset())+sizeof(TMySQLRow)*i);
   else  delete (TMySQLRow *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__MySQL_135_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMySQLRow *dest = (TMySQLRow*)(G__getstructoffset());
   *dest = (*(TMySQLRow*)libp->para[0].ref);
   const TMySQLRow& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TMySQLServer */

/* TMySQLResult */

/* TMySQLRow */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__MySQL {
 public:
  G__Sizep2memfuncG__MySQL() {p=&G__Sizep2memfuncG__MySQL::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__MySQL::*p)();
};

size_t G__get_sizep2memfuncG__MySQL()
{
  G__Sizep2memfuncG__MySQL a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__MySQL() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer))) {
     TMySQLServer *G__Lderived;
     G__Lderived=(TMySQLServer*)0x1000;
     {
       TSQLServer *G__Lpbase=(TSQLServer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer),G__get_linked_tagnum(&G__G__MySQLLN_TSQLServer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer),G__get_linked_tagnum(&G__G__MySQLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult))) {
     TMySQLResult *G__Lderived;
     G__Lderived=(TMySQLResult*)0x1000;
     {
       TSQLResult *G__Lpbase=(TSQLResult*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult),G__get_linked_tagnum(&G__G__MySQLLN_TSQLResult),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult),G__get_linked_tagnum(&G__G__MySQLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow))) {
     TMySQLRow *G__Lderived;
     G__Lderived=(TMySQLRow*)0x1000;
     {
       TSQLRow *G__Lpbase=(TSQLRow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow),G__get_linked_tagnum(&G__G__MySQLLN_TSQLRow),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow),G__get_linked_tagnum(&G__G__MySQLLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__MySQL() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__MySQLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MySQLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MySQLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MySQLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MySQLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TMySQLServer */
static void G__setup_memvarTMySQLServer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer));
   { TMySQLServer *p; p=(TMySQLServer*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_MYSQL),-1,-1,4,"fMySQL=",0,"connection to MySQL server");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMySQLResult */
static void G__setup_memvarTMySQLResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult));
   { TMySQLResult *p; p=(TMySQLResult*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_MYSQL_RES),-1,-1,4,"fResult=",0,"query result (rows)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_MYSQL_FIELD),-1,-1,4,"fFieldInfo=",0,"info for each field in the row");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMySQLRow */
static void G__setup_memvarTMySQLRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow));
   { TMySQLRow *p; p=(TMySQLRow*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_MYSQL_RES),-1,-1,4,"fResult=",0,"current result set");
   G__memvar_setup((void*)NULL,67,2,0,-1,G__defined_typename("MYSQL_ROW"),-1,4,"fFields=",0,"current row");
   G__memvar_setup((void*)NULL,75,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fFieldLength=",0,"length of each field in the row");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__MySQL() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTMySQLServer(void) {
   /* TMySQLServer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer));
   G__memfunc_setup("TMySQLServer",1153,G__G__MySQL_130_1_0,105,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer),-1,0,3,1,1,0,
"C - - 10 - db C - - 10 - uid "
"C - - 10 - pw",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__MySQL_130_2_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Query",534,G__G__MySQL_130_3_0,85,G__get_linked_tagnum(&G__G__MySQLLN_TSQLResult),-1,0,1,1,1,0,"C - - 10 - sql",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SelectDataBase",1365,G__G__MySQL_130_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - dbname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDataBases",1160,G__G__MySQL_130_5_0,85,G__get_linked_tagnum(&G__G__MySQLLN_TSQLResult),-1,0,1,1,1,0,"C - - 10 0 wild",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTables",891,G__G__MySQL_130_6_0,85,G__get_linked_tagnum(&G__G__MySQLLN_TSQLResult),-1,0,2,1,1,0,
"C - - 10 - dbname C - - 10 0 wild",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetColumns",1025,G__G__MySQL_130_7_0,85,G__get_linked_tagnum(&G__G__MySQLLN_TSQLResult),-1,0,3,1,1,0,
"C - - 10 - dbname C - - 10 - table "
"C - - 10 0 wild",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CreateDataBase",1353,G__G__MySQL_130_8_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - dbname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DropDataBase",1162,G__G__MySQL_130_9_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - dbname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reload",599,G__G__MySQL_130_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Shutdown",860,G__G__MySQL_130_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ServerInfo",1027,G__G__MySQL_130_2_1,67,-1,-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__MySQL_130_3_1,85,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMySQLServer::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__MySQL_130_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMySQLServer::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__MySQL_130_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMySQLServer::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__MySQL_130_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMySQLServer::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__MySQL_130_7_1,85,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__MySQL_130_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__MySQL_130_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MySQL_130_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__MySQL_130_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMySQLServer::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MySQL_130_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMySQLServer::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__MySQL_130_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMySQLServer::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MySQL_130_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMySQLServer::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMySQLServer",1153,G__G__MySQL_130_5_2,(int)('i'),G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer),-1,0,1,1,1,0,"u 'TMySQLServer' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMySQLServer",1279,G__G__MySQL_130_6_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__MySQL_130_7_2,(int)('u'),G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer),-1,1,1,1,1,0,"u 'TMySQLServer' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMySQLResult(void) {
   /* TMySQLResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult));
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,4,0,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMySQLResult",1161,G__G__MySQL_134_2_0,105,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult),-1,0,1,1,1,0,"Y - - 0 - result",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__MySQL_134_3_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFieldCount",1293,G__G__MySQL_134_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFieldName",1157,G__G__MySQL_134_5_0,67,-1,-1,0,1,1,1,1,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Next",415,G__G__MySQL_134_6_0,85,G__get_linked_tagnum(&G__G__MySQLLN_TSQLRow),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__MySQL_134_7_0,85,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMySQLResult::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__MySQL_134_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMySQLResult::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__MySQL_134_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMySQLResult::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__MySQL_134_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMySQLResult::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__MySQL_134_1_1,85,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__MySQL_134_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__MySQL_134_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MySQL_134_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__MySQL_134_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMySQLResult::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MySQL_134_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMySQLResult::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__MySQL_134_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMySQLResult::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MySQL_134_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMySQLResult::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMySQLResult",1161,G__G__MySQL_134_9_1,(int)('i'),G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult),-1,0,1,1,1,0,"u 'TMySQLResult' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMySQLResult",1287,G__G__MySQL_134_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__MySQL_134_1_2,(int)('u'),G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult),-1,1,1,1,1,0,"u 'TMySQLResult' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMySQLRow(void) {
   /* TMySQLRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow));
   G__memfunc_setup("IsValid",684,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,4,0,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMySQLRow",834,G__G__MySQL_135_2_0,105,G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow),-1,0,2,1,1,0,
"Y - - 0 - result k - 'ULong_t' 0 - rowHandle",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Close",502,G__G__MySQL_135_3_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFieldLength",1382,G__G__MySQL_135_4_0,107,-1,G__defined_typename("ULong_t"),0,1,1,1,0,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetField",772,G__G__MySQL_135_5_0,67,-1,-1,0,1,1,1,1,"i - 'Int_t' 0 - field",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__MySQL_135_6_0,85,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMySQLRow::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__MySQL_135_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMySQLRow::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__MySQL_135_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMySQLRow::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__MySQL_135_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMySQLRow::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__MySQL_135_0_1,85,G__get_linked_tagnum(&G__G__MySQLLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__MySQL_135_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__MySQL_135_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__MySQL_135_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__MySQL_135_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMySQLRow::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__MySQL_135_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMySQLRow::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__MySQL_135_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMySQLRow::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__MySQL_135_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMySQLRow::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMySQLRow",834,G__G__MySQL_135_8_1,(int)('i'),G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow),-1,0,1,1,1,0,"u 'TMySQLRow' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMySQLRow",960,G__G__MySQL_135_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__MySQL_135_0_2,(int)('u'),G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow),-1,1,1,1,1,0,"u 'TMySQLRow' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__MySQL() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__MySQL() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__MySQL() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__MySQLLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TSQLResult = { "TSQLResult" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TSQLServer = { "TSQLServer" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_MYSQL = { "MYSQL" , 115 , -1 };
G__linked_taginfo G__G__MySQLLN_TMySQLServer = { "TMySQLServer" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TSQLRow = { "TSQLRow" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_MYSQL_RES = { "MYSQL_RES" , 115 , -1 };
G__linked_taginfo G__G__MySQLLN_MYSQL_FIELD = { "MYSQL_FIELD" , 115 , -1 };
G__linked_taginfo G__G__MySQLLN_TMySQLResult = { "TMySQLResult" , 99 , -1 };
G__linked_taginfo G__G__MySQLLN_TMySQLRow = { "TMySQLRow" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__MySQL() {
  G__G__MySQLLN_TClass.tagnum = -1 ;
  G__G__MySQLLN_TBuffer.tagnum = -1 ;
  G__G__MySQLLN_TMemberInspector.tagnum = -1 ;
  G__G__MySQLLN_TObject.tagnum = -1 ;
  G__G__MySQLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__MySQLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MySQLLN_TSQLResult.tagnum = -1 ;
  G__G__MySQLLN_TSQLServer.tagnum = -1 ;
  G__G__MySQLLN_MYSQL.tagnum = -1 ;
  G__G__MySQLLN_TMySQLServer.tagnum = -1 ;
  G__G__MySQLLN_TSQLRow.tagnum = -1 ;
  G__G__MySQLLN_MYSQL_RES.tagnum = -1 ;
  G__G__MySQLLN_MYSQL_FIELD.tagnum = -1 ;
  G__G__MySQLLN_TMySQLResult.tagnum = -1 ;
  G__G__MySQLLN_TMySQLRow.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__MySQL() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__MySQLLN_TClass);
   G__get_linked_tagnum(&G__G__MySQLLN_TBuffer);
   G__get_linked_tagnum(&G__G__MySQLLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__MySQLLN_TObject);
   G__get_linked_tagnum(&G__G__MySQLLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__MySQLLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__MySQLLN_TSQLResult);
   G__get_linked_tagnum(&G__G__MySQLLN_TSQLServer);
   G__get_linked_tagnum(&G__G__MySQLLN_MYSQL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLServer),sizeof(TMySQLServer),-1,62464,"Connection to MySQL server",G__setup_memvarTMySQLServer,G__setup_memfuncTMySQLServer);
   G__get_linked_tagnum(&G__G__MySQLLN_TSQLRow);
   G__get_linked_tagnum(&G__G__MySQLLN_MYSQL_RES);
   G__get_linked_tagnum(&G__G__MySQLLN_MYSQL_FIELD);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLResult),sizeof(TMySQLResult),-1,62464,"MySQL query result",G__setup_memvarTMySQLResult,G__setup_memfuncTMySQLResult);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MySQLLN_TMySQLRow),sizeof(TMySQLRow),-1,62464,"One row of MySQL query result",G__setup_memvarTMySQLRow,G__setup_memfuncTMySQLRow);
}
extern "C" void G__cpp_setupG__MySQL(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__MySQL()");
  G__set_cpp_environmentG__MySQL();
  G__cpp_setup_tagtableG__MySQL();

  G__cpp_setup_inheritanceG__MySQL();

  G__cpp_setup_typetableG__MySQL();

  G__cpp_setup_memvarG__MySQL();

  G__cpp_setup_memfuncG__MySQL();
  G__cpp_setup_globalG__MySQL();
  G__cpp_setup_funcG__MySQL();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__MySQL();
  return;
}
class G__cpp_setup_initG__MySQL {
  public:
    G__cpp_setup_initG__MySQL() { G__add_setup_func("G__MySQL",(G__incsetup)(&G__cpp_setupG__MySQL)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__MySQL() { G__remove_setup_func("G__MySQL"); }
};
G__cpp_setup_initG__MySQL G__cpp_setup_initializerG__MySQL;

