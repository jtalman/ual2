/*****************************************************************************/
/*                                                                           */
/*                             initRTMySQL.mysql                             */
/*                                                                           */
/* (c) 2005 by the Board of Trustees of the Leland Stanford, Jr., University */
/*                            All Rights Reserved                            */
/*       Produced by Jacek Becla for Stanford University under contract      */
/*              DE-AC02-76SF00515 with the Department of Energy              */
/*****************************************************************************/

# $Id: initRTMySQL.mysql,v 1.15 2005/03/24 20:20:10 becla Exp $

DROP DATABASE IF EXISTS xrdmon_kan;

CREATE DATABASE IF NOT EXISTS xrdmon_kan;
USE xrdmon_kan;

CREATE TABLE IF NOT EXISTS rtOpenedSessions (
  id            INT NOT NULL PRIMARY KEY,
  userId        INT NOT NULL,
  pId           INT NOT NULL,
  clientHId     INT NOT NULL,
  serverHId     INT NOT NULL
);
CREATE INDEX rtOpenedSession_id_index        USING BTREE ON rtOpenedSessions(id);
CREATE INDEX rtOpenedSession_userId_index    USING BTREE ON rtOpenedSessions(userId);
CREATE INDEX rtOpenedSession_pId_index       USING BTREE ON rtOpenedSessions(pId);
CREATE INDEX rtOpenedSession_clientHId_index USING BTREE ON rtOpenedSessions(clientHId);
CREATE INDEX rtOpenedSession_serverHId_index USING BTREE ON rtOpenedSessions(serverHId);



CREATE TABLE IF NOT EXISTS rtClosedSessions (
  id            INT NOT NULL PRIMARY KEY,
  userId        INT NOT NULL,
  pId           INT NOT NULL,
  clientHId     INT NOT NULL,
  serverHId     INT NOT NULL,
  duration      INT NOT NULL,
  disconnectT   DATETIME NOT NULL
);
CREATE INDEX rtClosedSession_id_index        USING BTREE ON rtClosedSessions(id);
CREATE INDEX rtClosedSession_userId_index    USING BTREE ON rtClosedSessions(userId);
CREATE INDEX rtClosedSession_pId_index       USING BTREE ON rtClosedSessions(pId);
CREATE INDEX rtClosedSession_clientHId_index USING BTREE ON rtClosedSessions(clientHId);
CREATE INDEX rtClosedSession_serverHId_index USING BTREE ON rtClosedSessions(serverHId);



CREATE TABLE IF NOT EXISTS rtOpenedFiles (
  id            INT NOT NULL PRIMARY KEY,
  sessionId     INT NOT NULL,
  pathId        INT NOT NULL,
  openT         DATETIME NOT NULL
);
CREATE INDEX rtOpenedFiles_id_index        USING BTREE ON rtOpenedFiles(id);
CREATE INDEX rtOpenedFiles_sessionId_index USING BTREE ON rtOpenedFiles(sessionId);
CREATE INDEX rtOpenedFiles_pathId_index    USING BTREE ON rtOpenedFiles(pathId);



CREATE TABLE IF NOT EXISTS rtClosedFiles (
  id            INT NOT NULL PRIMARY KEY,
  sessionId     INT NOT NULL,
  pathId	INT NOT NULL,
  openT         DATETIME NOT NULL,
  closeT        DATETIME NOT NULL,
  bytesR        BIGINT UNSIGNED NOT NULL,
  bytesW        BIGINT UNSIGNED NOT NULL
);
CREATE INDEX rtClosedFiles_id_index        USING BTREE ON rtClosedFiles(id);
CREATE INDEX rtClosedFiles_sessionId_index USING BTREE ON rtClosedFiles(sessionId);
CREATE INDEX rtClosedFiles_pathId_index    USING BTREE ON rtClosedFiles(pathId);



CREATE TABLE IF NOT EXISTS users (
  id            INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  userName      VARCHAR(24) NOT NULL
);

CREATE INDEX users_id_index USING BTREE ON users(id);



CREATE TABLE IF NOT EXISTS hosts (
  id            INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  hostName      VARCHAR(64) NOT NULL
);
CREATE INDEX hosts_id_index USING BTREE ON hosts(id);


CREATE TABLE IF NOT EXISTS paths (
  id            INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  typeId        TINYINT NOT NULL,   # BaBar specific
  skimId        TINYINT NOT NULL,   # BaBar specific
  path          VARCHAR(256) NOT NULL
);
CREATE INDEX paths_id_index         USING BTREE ON paths(id);
CREATE INDEX paths_typeId_index     USING BTREE ON paths(typeId);
CREATE INDEX paths_skimId_index     USING BTREE ON paths(skimId);
##CREATE INDEX paths_path_index ON paths(path(256));


# one row per minute, keeps last 60 minutes
CREATE TABLE IF NOT EXISTS statsLastHour (
  seqNo         TINYINT NOT NULL PRIMARY KEY,
  date          DATETIME,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT
);
CREATE INDEX statsLastHour_date_index USING BTREE ON statsLastHour(date);


# one row per hour, keeps last 24 hours
CREATE TABLE IF NOT EXISTS statsLastDay (
  seqNo         TINYINT NOT NULL PRIMARY KEY,
  date          DATE,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT,
  minJobs       SMALLINT,
  minUsers      SMALLINT,
  minUniqueF    INT,
  minNonUniqueF INT,
  maxJobs       SMALLINT,
  maxUsers      SMALLINT,
  maxUniqueF    INT,
  maxNonUniqueF INT
);
CREATE INDEX statsLastDay_date_index  USING BTREE ON statsLastDay(date);


# one row per day, keeps last 31 days
CREATE TABLE IF NOT EXISTS statsLastMonth (
  seqNo         TINYINT NOT NULL PRIMARY KEY,
  date          DATE,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT,
  minJobs       SMALLINT,
  minUsers      SMALLINT,
  minUniqueF    INT,
  minNonUniqueF INT,
  maxJobs       SMALLINT,
  maxUsers      SMALLINT,
  maxUniqueF    INT,
  maxNonUniqueF INT
);
CREATE INDEX statsLastMonth_date_index USING BTREE ON statsLastMonth(date);


# one row per month, growing indefinitely
CREATE TABLE IF NOT EXISTS statsAllMonths (
  date          DATE,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT,
  minJobs       SMALLINT,
  minUsers      SMALLINT,
  minUniqueF    INT,
  minNonUniqueF INT,
  maxJobs       SMALLINT,
  maxUsers      SMALLINT,
  maxUniqueF    INT,
  maxNonUniqueF INT
);
CREATE INDEX statsLastMonth_date_index USING BTREE ON statsLastMonth(date);


# reflects changes since last entry, and last update
CREATE TABLE IF NOT EXISTS rtChanges (
  jobs          SMALLINT,
  jobs_p        FLOAT,
  users         SMALLINT,
  users_p       FLOAT,
  uniqueF       SMALLINT,
  uniqueF_p     FLOAT,
  nonUniqueF    SMALLINT,
  nonUniqueF_p  FLOAT,
  lastUpdate    DATETIME
);

###########################
### BaBar specific below
###########################


# e.g.: SP, PR, SPskims, PRskims
CREATE TABLE IF NOT EXISTS fileTypes (
  name         VARCHAR(16),
  id           TINYINT NOT NULL AUTO_INCREMENT PRIMARY KEY
);


CREATE TABLE IF NOT EXISTS skimNames (
  name         VARCHAR(32),
  id           TINYINT NOT NULL AUTO_INCREMENT PRIMARY KEY
);
CREATE INDEX skims_id_index      USING BTREE ON skimNames(id);
