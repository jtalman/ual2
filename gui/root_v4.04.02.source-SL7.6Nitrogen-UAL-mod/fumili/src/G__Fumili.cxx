//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:29:44 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__Fumili.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TFumili_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TFumili_IsA(const void*);
   static void *new_TFumili(void *p = 0);
   static void *newArray_TFumili(Long_t size);
   static void delete_TFumili(void *p);
   static void deleteArray_TFumili(void *p);
   static void destruct_TFumili(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TFumili*)
   {
      ::TFumili *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TFumili", ::TFumili::Class_Version(), "fumili/inc/TFumili.h", 21,
                  typeid(::TFumili), DefineBehavior(ptr, ptr),
                  &::TFumili::Dictionary, &TFumili_IsA, 0,
                  sizeof(::TFumili) );
      instance.SetNew(&new_TFumili);
      instance.SetNewArray(&newArray_TFumili);
      instance.SetDelete(&delete_TFumili);
      instance.SetDeleteArray(&deleteArray_TFumili);
      instance.SetDestructor(&destruct_TFumili);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TFumili*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TFumili::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFumili::Class_Name()
{
   return "TFumili";
}

//______________________________________________________________________________
const char *TFumili::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TFumili*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFumili::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TFumili*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFumili::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TFumili*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFumili::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TFumili*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TFumili::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFumili.

   TVirtualFitter::Streamer(R__b);
}

//______________________________________________________________________________
void TFumili::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFumili.

      TClass *R__cl = ::TFumili::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMaxParam", &fMaxParam);
      R__insp.Inspect(R__cl, R__parent, "fMaxParam2", &fMaxParam2);
      R__insp.Inspect(R__cl, R__parent, "fNlog", &fNlog);
      R__insp.Inspect(R__cl, R__parent, "fNfcn", &fNfcn);
      R__insp.Inspect(R__cl, R__parent, "fNED1", &fNED1);
      R__insp.Inspect(R__cl, R__parent, "fNED2", &fNED2);
      R__insp.Inspect(R__cl, R__parent, "fNED12", &fNED12);
      R__insp.Inspect(R__cl, R__parent, "fNpar", &fNpar);
      R__insp.Inspect(R__cl, R__parent, "fNstepDec", &fNstepDec);
      R__insp.Inspect(R__cl, R__parent, "fNlimMul", &fNlimMul);
      R__insp.Inspect(R__cl, R__parent, "fNmaxIter", &fNmaxIter);
      R__insp.Inspect(R__cl, R__parent, "fLastFixed", &fLastFixed);
      R__insp.Inspect(R__cl, R__parent, "fENDFLG", &fENDFLG);
      R__insp.Inspect(R__cl, R__parent, "fINDFLG[5]", fINDFLG);
      R__insp.Inspect(R__cl, R__parent, "fGRAD", &fGRAD);
      R__insp.Inspect(R__cl, R__parent, "fWARN", &fWARN);
      R__insp.Inspect(R__cl, R__parent, "fDEBUG", &fDEBUG);
      R__insp.Inspect(R__cl, R__parent, "fLogLike", &fLogLike);
      R__insp.Inspect(R__cl, R__parent, "fNumericDerivatives", &fNumericDerivatives);
      R__insp.Inspect(R__cl, R__parent, "*fZ0", &fZ0);
      R__insp.Inspect(R__cl, R__parent, "*fZ", &fZ);
      R__insp.Inspect(R__cl, R__parent, "*fGr", &fGr);
      R__insp.Inspect(R__cl, R__parent, "*fParamError", &fParamError);
      R__insp.Inspect(R__cl, R__parent, "*fSumLog", &fSumLog);
      R__insp.Inspect(R__cl, R__parent, "*fEXDA", &fEXDA);
      R__insp.Inspect(R__cl, R__parent, "*fA", &fA);
      R__insp.Inspect(R__cl, R__parent, "*fPL0", &fPL0);
      R__insp.Inspect(R__cl, R__parent, "*fPL", &fPL);
      R__insp.Inspect(R__cl, R__parent, "*fDA", &fDA);
      R__insp.Inspect(R__cl, R__parent, "*fAMX", &fAMX);
      R__insp.Inspect(R__cl, R__parent, "*fAMN", &fAMN);
      R__insp.Inspect(R__cl, R__parent, "*fR", &fR);
      R__insp.Inspect(R__cl, R__parent, "*fDF", &fDF);
      R__insp.Inspect(R__cl, R__parent, "*fCmPar", &fCmPar);
      R__insp.Inspect(R__cl, R__parent, "fS", &fS);
      R__insp.Inspect(R__cl, R__parent, "fEPS", &fEPS);
      R__insp.Inspect(R__cl, R__parent, "fRP", &fRP);
      R__insp.Inspect(R__cl, R__parent, "fAKAPPA", &fAKAPPA);
      R__insp.Inspect(R__cl, R__parent, "fGT", &fGT);
      R__insp.Inspect(R__cl, R__parent, "*fANames", &fANames);
      R__insp.Inspect(R__cl, R__parent, "fCword", &fCword);
      fCword.ShowMembers(R__insp, strcat(R__parent,"fCword.")); R__parent[R__ncp] = 0;
      TVirtualFitter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TFumili_IsA(const void *obj) {
      return ((::TFumili*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TFumili(void *p) {
      return  p ? new(p) ::TFumili : new ::TFumili;
   }
   static void *newArray_TFumili(Long_t size) {
      return new ::TFumili[size];
   }
   // Wrapper around operator delete
   static void delete_TFumili(void *p) {
      delete ((::TFumili*)p);
   }
   static void deleteArray_TFumili(void *p) {
      delete [] ((::TFumili*)p);
   }
   static void destruct_TFumili(void *p) {
      typedef ::TFumili current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFumili

/********************************************************
* fumili/src/G__Fumili.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__Fumili();

extern "C" void G__set_cpp_environmentG__Fumili() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("fumili/inc/TFumili.h");
  G__cpp_reset_tagtableG__Fumili();
}
class G__fumilidIsrcdIG__FumilidOcxx_tag {};

void* operator new(size_t size,G__fumilidIsrcdIG__FumilidOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__fumilidIsrcdIG__FumilidOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_fumilidIsrcdIG__FumilidOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__Fumili() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TFumili */
static int G__G__Fumili_133_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFumili *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TFumili((Int_t)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TFumili[G__getaryconstruct()];
   else                    p=new TFumili;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__FumiliLN_TFumili);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->BuildArrays();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TFumili*)(G__getstructoffset()))->Chisquare((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->DeleteArrays();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->Derivatives((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TFumili*)(G__getstructoffset()))->Eval(*(Int_t*)G__Intref(&libp->para[0]),(Double_t*)G__int(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),(Double_t*)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TFumili*)(G__getstructoffset()))->EvalTFN((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TFumili*)(G__getstructoffset()))->ExecuteCommand((const char*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TFumili*)(G__getstructoffset()))->ExecuteSetCommand((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->FixParameter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TFumili*)(G__getstructoffset()))->GetCovarianceMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TFumili*)(G__getstructoffset()))->GetCovarianceMatrixElement((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFumili*)(G__getstructoffset()))->GetErrors((Int_t)G__int(libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFumili*)(G__getstructoffset()))->GetNumberTotalParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFumili*)(G__getstructoffset()))->GetNumberFreeParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TFumili*)(G__getstructoffset()))->GetPL0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TFumili*)(G__getstructoffset()))->GetParError((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TFumili*)(G__getstructoffset()))->GetParameter((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFumili*)(G__getstructoffset()))->GetParameter((Int_t)G__int(libp->para[0]),(char*)G__int(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4]),*(Double_t*)G__Doubleref(&libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFumili*)(G__getstructoffset()))->GetStats(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Int_t*)G__Intref(&libp->para[3])
,*(Int_t*)G__Intref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TFumili*)(G__getstructoffset()))->GetSumLog((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TFumili*)(G__getstructoffset()))->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->InvertZ((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TFumili*)(G__getstructoffset()))->IsFixed((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TFumili*)(G__getstructoffset()))->Minimize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TFumili*)(G__getstructoffset()))->PrintResults((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->ReleaseParameter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TFumili*)(G__getstructoffset()))->SGZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->SetData((Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->SetFitMethod((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TFumili*)(G__getstructoffset()))->SetParameter((Int_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->SetParNumber((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TFumili::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFumili::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TFumili::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TFumili::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TFumili*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFumili*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFumili::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFumili::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFumili::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Fumili_133_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFumili::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Fumili_133_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TFumili *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TFumili(*(TFumili*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__FumiliLN_TFumili);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFumili G__TTFumili;
static int G__G__Fumili_133_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TFumili *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TFumili *)((G__getstructoffset())+sizeof(TFumili)*i);
   else  delete (TFumili *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Fumili_133_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFumili *dest = (TFumili*)(G__getstructoffset());
   *dest = (*(TFumili*)libp->para[0].ref);
   const TFumili& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TFumili */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Fumili {
 public:
  G__Sizep2memfuncG__Fumili() {p=&G__Sizep2memfuncG__Fumili::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Fumili::*p)();
};

size_t G__get_sizep2memfuncG__Fumili()
{
  G__Sizep2memfuncG__Fumili a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Fumili() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FumiliLN_TFumili))) {
     TFumili *G__Lderived;
     G__Lderived=(TFumili*)0x1000;
     {
       TVirtualFitter *G__Lpbase=(TVirtualFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili),G__get_linked_tagnum(&G__G__FumiliLN_TVirtualFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili),G__get_linked_tagnum(&G__G__FumiliLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili),G__get_linked_tagnum(&G__G__FumiliLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Fumili() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__FumiliLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FumiliLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FumiliLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FumiliLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FumiliLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TFumili */
static void G__setup_memvarTFumili(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili));
   { TFumili *p; p=(TFumili*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxParam=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxParam2=",0,"fMaxParam*fMaxParam");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNlog=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNfcn=",0,"Number of FCN calls;");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNED1=",0,"Number of experimental vectors X=(x1,x2,...xK)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNED2=",0,"K - Length of vector X plus 2 (for chi2)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNED12=",0,"fNED1+fNED2");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNpar=",0,"fNpar - number of parameters");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNstepDec=",0,"fNstepDec - maximum number of step decreasing counter");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNlimMul=",0,"fNlimMul - after fNlimMul successful iterations permits four-fold increasing of fPL");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNmaxIter=",0,"fNmaxIter - maximum number of iterations");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLastFixed=",0,"Last fixed parameter number");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fENDFLG=",0,"End flag of fit ");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fINDFLG[5]=",0,"internal flags;");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fGRAD=",0,"user calculated gradients  ");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fWARN=",0,"warnings");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDEBUG=",0,"debug info");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fLogLike=",0,"LogLikelihood flag");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fNumericDerivatives=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ0=",0,"[fMaxParam2] Matrix of approximate second derivatives of objective function");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,"[fMaxParam2] Invers fZ0 matrix - covariance matrix");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGr=",0,"[fMaxParam] Gradients of objective function");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fParamError=",0,"[fMaxParam] Parameter errors");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSumLog=",0,"[fNlog]");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEXDA=",0,"[fNED12] experimental data poInt_ter");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fA=",0,"[fMaxParam] Fit parameter array");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPL0=",0,"[fMaxParam] Step initial bounds");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPL=",0,"[fMaxParam] Limits for parameters step. If <0, then parameter is fixed");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDA=",0,"[fMaxParam] Parameter step");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAMX=",0,"[fMaxParam] Maximum param value");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAMN=",0,"[fMaxParam] Minimum param value");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR=",0,"[fMaxParam] Correlation factors");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDF=",0,"[fMaxParam] // First derivatives of theoretical function ");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCmPar=",0,"[fMaxParam] parameters of commands");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fS=",0,"fS - objective function value (return)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEPS=",0,"fEPS - required precision of parameters. If fEPS<0 then ");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRP=",0,"Precision of fit ( machine zero on CDC 6000) quite old yeh?");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAKAPPA=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGT=",0,"Expected function change in next iteration");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__FumiliLN_TString),-1,-1,4,"fANames=",0,"[fMaxParam] Parameter names");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__FumiliLN_TString),-1,-1,4,"fCword=",0,"Command string");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__FumiliLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Fumili() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTFumili(void) {
   /* TFumili */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili));
   G__memfunc_setup("TFumili",698,G__G__Fumili_133_1_0,105,G__get_linked_tagnum(&G__G__FumiliLN_TFumili),-1,0,1,1,1,0,"i - 'Int_t' 0 25 maxpar",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BuildArrays",1122,G__G__Fumili_133_2_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Chisquare",933,G__G__Fumili_133_3_0,100,-1,G__defined_typename("Double_t"),0,2,1,1,8,
"i - 'Int_t' 0 - npar D - 'Double_t' 0 - params",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clear",487,G__G__Fumili_133_4_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeleteArrays",1221,G__G__Fumili_133_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Derivatives",1158,G__G__Fumili_133_6_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Eval",392,G__G__Fumili_133_7_0,105,-1,G__defined_typename("Int_t"),0,5,1,1,0,
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - grad "
"d - 'Double_t' 1 - fval D - 'Double_t' 0 - par "
"i - 'Int_t' 0 - flag","Evaluate the minimisation function",(void*)NULL,0);
   G__memfunc_setup("EvalTFN",624,G__G__Fumili_133_8_0,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"D - 'Double_t' 0 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ExecuteCommand",1426,G__G__Fumili_133_9_0,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - command D - 'Double_t' 0 - args "
"i - 'Int_t' 0 - nargs",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteSetCommand",1726,G__G__Fumili_133_0_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FixParameter",1224,G__G__Fumili_133_1_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCovarianceMatrix",1936,G__G__Fumili_133_2_1,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCovarianceMatrixElement",2650,G__G__Fumili_133_3_1,100,-1,G__defined_typename("Double_t"),0,2,1,1,8,
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetErrors",925,G__G__Fumili_133_4_1,105,-1,G__defined_typename("Int_t"),0,5,1,1,8,
"i - 'Int_t' 0 - ipar d - 'Double_t' 1 - eplus "
"d - 'Double_t' 1 - eminus d - 'Double_t' 1 - eparab "
"d - 'Double_t' 1 - globcc",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumberTotalParameters",2465,G__G__Fumili_133_5_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumberFreeParameters",2335,G__G__Fumili_133_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPL0",492,G__G__Fumili_133_7_1,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetParError",1101,G__G__Fumili_133_8_1,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParameter",1217,G__G__Fumili_133_9_1,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParameter",1217,G__G__Fumili_133_0_2,105,-1,G__defined_typename("Int_t"),0,6,1,1,8,
"i - 'Int_t' 0 - ipar C - - 0 - name "
"d - 'Double_t' 1 - value d - 'Double_t' 1 - verr "
"d - 'Double_t' 1 - vlow d - 'Double_t' 1 - vhigh",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStats",815,G__G__Fumili_133_1_2,105,-1,G__defined_typename("Int_t"),0,5,1,1,8,
"d - 'Double_t' 1 - amin d - 'Double_t' 1 - edm "
"d - 'Double_t' 1 - errdef i - 'Int_t' 1 - nvpar "
"i - 'Int_t' 1 - nparx",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSumLog",887,G__G__Fumili_133_2_2,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetZ",378,G__G__Fumili_133_3_2,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InvertZ",722,G__G__Fumili_133_4_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsFixed",684,G__G__Fumili_133_5_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Minimize",834,G__G__Fumili_133_6_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PrintResults",1279,G__G__Fumili_133_7_2,121,-1,-1,0,2,1,1,8,
"i - 'Int_t' 0 - k d - 'Double_t' 0 - p",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReleaseParameter",1634,G__G__Fumili_133_8_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SGZ",244,G__G__Fumili_133_9_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetData",678,G__G__Fumili_133_0_3,121,-1,-1,0,3,1,1,0,
"D - 'Double_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFitMethod",1200,G__G__Fumili_133_1_3,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetParameter",1229,G__G__Fumili_133_2_3,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"i - 'Int_t' 0 - ipar C - - 10 - parname "
"d - 'Double_t' 0 - value d - 'Double_t' 0 - verr "
"d - 'Double_t' 0 - vlow d - 'Double_t' 0 - vhigh",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetParNumber",1208,G__G__Fumili_133_3_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ParNum",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Fumili_133_4_3,85,G__get_linked_tagnum(&G__G__FumiliLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TFumili::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Fumili_133_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFumili::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Fumili_133_6_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TFumili::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Fumili_133_7_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TFumili::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Fumili_133_8_3,85,G__get_linked_tagnum(&G__G__FumiliLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Fumili_133_9_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Fumili_133_0_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Fumili_133_1_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Fumili_133_2_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFumili::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Fumili_133_3_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFumili::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Fumili_133_4_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFumili::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Fumili_133_5_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFumili::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TFumili",698,G__G__Fumili_133_6_4,(int)('i'),G__get_linked_tagnum(&G__G__FumiliLN_TFumili),-1,0,1,1,1,0,"u 'TFumili' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TFumili",824,G__G__Fumili_133_7_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Fumili_133_8_4,(int)('u'),G__get_linked_tagnum(&G__G__FumiliLN_TFumili),-1,1,1,1,1,0,"u 'TFumili' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Fumili() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)(&gFumili),85,0,0,G__get_linked_tagnum(&G__G__FumiliLN_TFumili),-1,-1,1,"gFumili=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Fumili() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Fumili() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__FumiliLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TVirtualFitter = { "TVirtualFitter" , 99 , -1 };
G__linked_taginfo G__G__FumiliLN_TFumili = { "TFumili" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Fumili() {
  G__G__FumiliLN_TClass.tagnum = -1 ;
  G__G__FumiliLN_TBuffer.tagnum = -1 ;
  G__G__FumiliLN_TMemberInspector.tagnum = -1 ;
  G__G__FumiliLN_TObject.tagnum = -1 ;
  G__G__FumiliLN_TNamed.tagnum = -1 ;
  G__G__FumiliLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__FumiliLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FumiliLN_TString.tagnum = -1 ;
  G__G__FumiliLN_TVirtualFitter.tagnum = -1 ;
  G__G__FumiliLN_TFumili.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Fumili() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__FumiliLN_TClass);
   G__get_linked_tagnum(&G__G__FumiliLN_TBuffer);
   G__get_linked_tagnum(&G__G__FumiliLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__FumiliLN_TObject);
   G__get_linked_tagnum(&G__G__FumiliLN_TNamed);
   G__get_linked_tagnum(&G__G__FumiliLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__FumiliLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__FumiliLN_TString);
   G__get_linked_tagnum(&G__G__FumiliLN_TVirtualFitter);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__FumiliLN_TFumili),sizeof(TFumili),-1,62720,"The FUMILI Minimization package",G__setup_memvarTFumili,G__setup_memfuncTFumili);
}
extern "C" void G__cpp_setupG__Fumili(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Fumili()");
  G__set_cpp_environmentG__Fumili();
  G__cpp_setup_tagtableG__Fumili();

  G__cpp_setup_inheritanceG__Fumili();

  G__cpp_setup_typetableG__Fumili();

  G__cpp_setup_memvarG__Fumili();

  G__cpp_setup_memfuncG__Fumili();
  G__cpp_setup_globalG__Fumili();
  G__cpp_setup_funcG__Fumili();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Fumili();
  return;
}
class G__cpp_setup_initG__Fumili {
  public:
    G__cpp_setup_initG__Fumili() { G__add_setup_func("G__Fumili",(G__incsetup)(&G__cpp_setupG__Fumili)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Fumili() { G__remove_setup_func("G__Fumili"); }
};
G__cpp_setup_initG__Fumili G__cpp_setup_initializerG__Fumili;

