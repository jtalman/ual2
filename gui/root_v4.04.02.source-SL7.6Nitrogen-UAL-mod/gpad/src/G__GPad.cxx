//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:25:56 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__GPad.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCanvas_IsA(const void*);
   static void *new_TCanvas(void *p = 0);
   static void *newArray_TCanvas(Long_t size);
   static void delete_TCanvas(void *p);
   static void deleteArray_TCanvas(void *p);
   static void destruct_TCanvas(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCanvas*)
   {
      ::TCanvas *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCanvas", ::TCanvas::Class_Version(), "gpad/inc/TCanvas.h", 48,
                  typeid(::TCanvas), DefineBehavior(ptr, ptr),
                  &::TCanvas::Dictionary, &TCanvas_IsA, 1,
                  sizeof(::TCanvas) );
      instance.SetNew(&new_TCanvas);
      instance.SetNewArray(&newArray_TCanvas);
      instance.SetDelete(&delete_TCanvas);
      instance.SetDeleteArray(&deleteArray_TCanvas);
      instance.SetDestructor(&destruct_TCanvas);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPad_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPad_IsA(const void*);
   static void *new_TPad(void *p = 0);
   static void *newArray_TPad(Long_t size);
   static void delete_TPad(void *p);
   static void deleteArray_TPad(void *p);
   static void destruct_TPad(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPad*)
   {
      ::TPad *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPad", ::TPad::Class_Version(), "gpad/inc/TPad.h", 33,
                  typeid(::TPad), DefineBehavior(ptr, ptr),
                  &::TPad::Dictionary, &TPad_IsA, 1,
                  sizeof(::TPad) );
      instance.SetNew(&new_TPad);
      instance.SetNewArray(&newArray_TPad);
      instance.SetDelete(&delete_TPad);
      instance.SetDeleteArray(&deleteArray_TPad);
      instance.SetDestructor(&destruct_TPad);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPad*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAttCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAttCanvas_IsA(const void*);
   static void *new_TAttCanvas(void *p = 0);
   static void *newArray_TAttCanvas(Long_t size);
   static void delete_TAttCanvas(void *p);
   static void deleteArray_TAttCanvas(void *p);
   static void destruct_TAttCanvas(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAttCanvas*)
   {
      ::TAttCanvas *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAttCanvas", ::TAttCanvas::Class_Version(), "gpad/inc/TAttCanvas.h", 33,
                  typeid(::TAttCanvas), DefineBehavior(ptr, ptr),
                  &::TAttCanvas::Dictionary, &TAttCanvas_IsA, 4,
                  sizeof(::TAttCanvas) );
      instance.SetNew(&new_TAttCanvas);
      instance.SetNewArray(&newArray_TAttCanvas);
      instance.SetDelete(&delete_TAttCanvas);
      instance.SetDeleteArray(&deleteArray_TAttCanvas);
      instance.SetDestructor(&destruct_TAttCanvas);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAttCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TControlBar_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TControlBar_IsA(const void*);
   static void *new_TControlBar(void *p = 0);
   static void *newArray_TControlBar(Long_t size);
   static void delete_TControlBar(void *p);
   static void deleteArray_TControlBar(void *p);
   static void destruct_TControlBar(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TControlBar*)
   {
      ::TControlBar *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TControlBar", ::TControlBar::Class_Version(), "gpad/inc/TControlBar.h", 37,
                  typeid(::TControlBar), DefineBehavior(ptr, ptr),
                  &::TControlBar::Dictionary, &TControlBar_IsA, 4,
                  sizeof(::TControlBar) );
      instance.SetNew(&new_TControlBar);
      instance.SetNewArray(&newArray_TControlBar);
      instance.SetDelete(&delete_TControlBar);
      instance.SetDeleteArray(&deleteArray_TControlBar);
      instance.SetDestructor(&destruct_TControlBar);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TControlBar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDialogCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDialogCanvas_IsA(const void*);
   static void *new_TDialogCanvas(void *p = 0);
   static void *newArray_TDialogCanvas(Long_t size);
   static void delete_TDialogCanvas(void *p);
   static void deleteArray_TDialogCanvas(void *p);
   static void destruct_TDialogCanvas(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDialogCanvas*)
   {
      ::TDialogCanvas *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDialogCanvas", ::TDialogCanvas::Class_Version(), "gpad/inc/TDialogCanvas.h", 31,
                  typeid(::TDialogCanvas), DefineBehavior(ptr, ptr),
                  &::TDialogCanvas::Dictionary, &TDialogCanvas_IsA, 4,
                  sizeof(::TDialogCanvas) );
      instance.SetNew(&new_TDialogCanvas);
      instance.SetNewArray(&newArray_TDialogCanvas);
      instance.SetDelete(&delete_TDialogCanvas);
      instance.SetDeleteArray(&deleteArray_TDialogCanvas);
      instance.SetDestructor(&destruct_TDialogCanvas);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDialogCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAttMarkerCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAttMarkerCanvas_IsA(const void*);
   static void *new_TAttMarkerCanvas(void *p = 0);
   static void *newArray_TAttMarkerCanvas(Long_t size);
   static void delete_TAttMarkerCanvas(void *p);
   static void deleteArray_TAttMarkerCanvas(void *p);
   static void destruct_TAttMarkerCanvas(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAttMarkerCanvas*)
   {
      ::TAttMarkerCanvas *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAttMarkerCanvas", ::TAttMarkerCanvas::Class_Version(), "gpad/inc/TAttMarkerCanvas.h", 28,
                  typeid(::TAttMarkerCanvas), DefineBehavior(ptr, ptr),
                  &::TAttMarkerCanvas::Dictionary, &TAttMarkerCanvas_IsA, 4,
                  sizeof(::TAttMarkerCanvas) );
      instance.SetNew(&new_TAttMarkerCanvas);
      instance.SetNewArray(&newArray_TAttMarkerCanvas);
      instance.SetDelete(&delete_TAttMarkerCanvas);
      instance.SetDeleteArray(&deleteArray_TAttMarkerCanvas);
      instance.SetDestructor(&destruct_TAttMarkerCanvas);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAttMarkerCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSlider_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSlider_IsA(const void*);
   static void *new_TSlider(void *p = 0);
   static void *newArray_TSlider(Long_t size);
   static void delete_TSlider(void *p);
   static void deleteArray_TSlider(void *p);
   static void destruct_TSlider(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSlider*)
   {
      ::TSlider *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSlider", ::TSlider::Class_Version(), "gpad/inc/TSlider.h", 31,
                  typeid(::TSlider), DefineBehavior(ptr, ptr),
                  &::TSlider::Dictionary, &TSlider_IsA, 4,
                  sizeof(::TSlider) );
      instance.SetNew(&new_TSlider);
      instance.SetNewArray(&newArray_TSlider);
      instance.SetDelete(&delete_TSlider);
      instance.SetDeleteArray(&deleteArray_TSlider);
      instance.SetDestructor(&destruct_TSlider);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSlider*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSliderBox_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSliderBox_IsA(const void*);
   static void *new_TSliderBox(void *p = 0);
   static void *newArray_TSliderBox(Long_t size);
   static void delete_TSliderBox(void *p);
   static void deleteArray_TSliderBox(void *p);
   static void destruct_TSliderBox(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSliderBox*)
   {
      ::TSliderBox *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSliderBox", ::TSliderBox::Class_Version(), "gpad/inc/TSliderBox.h", 31,
                  typeid(::TSliderBox), DefineBehavior(ptr, ptr),
                  &::TSliderBox::Dictionary, &TSliderBox_IsA, 4,
                  sizeof(::TSliderBox) );
      instance.SetNew(&new_TSliderBox);
      instance.SetNewArray(&newArray_TSliderBox);
      instance.SetDelete(&delete_TSliderBox);
      instance.SetDeleteArray(&deleteArray_TSliderBox);
      instance.SetDestructor(&destruct_TSliderBox);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSliderBox*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TControlBarButton_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TControlBarButton_IsA(const void*);
   static void *new_TControlBarButton(void *p = 0);
   static void *newArray_TControlBarButton(Long_t size);
   static void delete_TControlBarButton(void *p);
   static void deleteArray_TControlBarButton(void *p);
   static void destruct_TControlBarButton(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TControlBarButton*)
   {
      ::TControlBarButton *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TControlBarButton", ::TControlBarButton::Class_Version(), "gpad/inc/TControlBarButton.h", 35,
                  typeid(::TControlBarButton), DefineBehavior(ptr, ptr),
                  &::TControlBarButton::Dictionary, &TControlBarButton_IsA, 4,
                  sizeof(::TControlBarButton) );
      instance.SetNew(&new_TControlBarButton);
      instance.SetNewArray(&newArray_TControlBarButton);
      instance.SetDelete(&delete_TControlBarButton);
      instance.SetDeleteArray(&deleteArray_TControlBarButton);
      instance.SetDestructor(&destruct_TControlBarButton);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TControlBarButton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDrawPanelHist_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDrawPanelHist_IsA(const void*);
   static void *new_TDrawPanelHist(void *p = 0);
   static void *newArray_TDrawPanelHist(Long_t size);
   static void delete_TDrawPanelHist(void *p);
   static void deleteArray_TDrawPanelHist(void *p);
   static void destruct_TDrawPanelHist(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDrawPanelHist*)
   {
      ::TDrawPanelHist *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDrawPanelHist", ::TDrawPanelHist::Class_Version(), "gpad/inc/TDrawPanelHist.h", 33,
                  typeid(::TDrawPanelHist), DefineBehavior(ptr, ptr),
                  &::TDrawPanelHist::Dictionary, &TDrawPanelHist_IsA, 4,
                  sizeof(::TDrawPanelHist) );
      instance.SetNew(&new_TDrawPanelHist);
      instance.SetNewArray(&newArray_TDrawPanelHist);
      instance.SetDelete(&delete_TDrawPanelHist);
      instance.SetDeleteArray(&deleteArray_TDrawPanelHist);
      instance.SetDestructor(&destruct_TDrawPanelHist);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDrawPanelHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TButton_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TButton_IsA(const void*);
   static void *new_TButton(void *p = 0);
   static void *newArray_TButton(Long_t size);
   static void delete_TButton(void *p);
   static void deleteArray_TButton(void *p);
   static void destruct_TButton(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TButton*)
   {
      ::TButton *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TButton", ::TButton::Class_Version(), "gpad/inc/TButton.h", 32,
                  typeid(::TButton), DefineBehavior(ptr, ptr),
                  &::TButton::Dictionary, &TButton_IsA, 4,
                  sizeof(::TButton) );
      instance.SetNew(&new_TButton);
      instance.SetNewArray(&newArray_TButton);
      instance.SetDelete(&delete_TButton);
      instance.SetDeleteArray(&deleteArray_TButton);
      instance.SetDestructor(&destruct_TButton);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TButton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGroupButton_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGroupButton_IsA(const void*);
   static void *new_TGroupButton(void *p = 0);
   static void *newArray_TGroupButton(Long_t size);
   static void delete_TGroupButton(void *p);
   static void deleteArray_TGroupButton(void *p);
   static void destruct_TGroupButton(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGroupButton*)
   {
      ::TGroupButton *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGroupButton", ::TGroupButton::Class_Version(), "gpad/inc/TGroupButton.h", 34,
                  typeid(::TGroupButton), DefineBehavior(ptr, ptr),
                  &::TGroupButton::Dictionary, &TGroupButton_IsA, 4,
                  sizeof(::TGroupButton) );
      instance.SetNew(&new_TGroupButton);
      instance.SetNewArray(&newArray_TGroupButton);
      instance.SetDelete(&delete_TGroupButton);
      instance.SetDeleteArray(&deleteArray_TGroupButton);
      instance.SetDestructor(&destruct_TGroupButton);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGroupButton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TClassTree_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TClassTree_IsA(const void*);
   static void *new_TClassTree(void *p = 0);
   static void *newArray_TClassTree(Long_t size);
   static void delete_TClassTree(void *p);
   static void deleteArray_TClassTree(void *p);
   static void destruct_TClassTree(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TClassTree*)
   {
      ::TClassTree *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TClassTree", ::TClassTree::Class_Version(), "gpad/inc/TClassTree.h", 30,
                  typeid(::TClassTree), DefineBehavior(ptr, ptr),
                  &::TClassTree::Dictionary, &TClassTree_IsA, 1,
                  sizeof(::TClassTree) );
      instance.SetNew(&new_TClassTree);
      instance.SetNewArray(&newArray_TClassTree);
      instance.SetDelete(&delete_TClassTree);
      instance.SetDeleteArray(&deleteArray_TClassTree);
      instance.SetDestructor(&destruct_TClassTree);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TClassTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TUtilPad_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TUtilPad_IsA(const void*);
   static void *new_TUtilPad(void *p = 0);
   static void *newArray_TUtilPad(Long_t size);
   static void delete_TUtilPad(void *p);
   static void deleteArray_TUtilPad(void *p);
   static void destruct_TUtilPad(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TUtilPad*)
   {
      ::TUtilPad *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TUtilPad", ::TUtilPad::Class_Version(), "gpad/inc/TUtilPad.h", 29,
                  typeid(::TUtilPad), DefineBehavior(ptr, ptr),
                  &::TUtilPad::Dictionary, &TUtilPad_IsA, 0,
                  sizeof(::TUtilPad) );
      instance.SetNew(&new_TUtilPad);
      instance.SetNewArray(&newArray_TUtilPad);
      instance.SetDelete(&delete_TUtilPad);
      instance.SetDeleteArray(&deleteArray_TUtilPad);
      instance.SetDestructor(&destruct_TUtilPad);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TUtilPad*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TFitPanel_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TFitPanel_IsA(const void*);
   static void *new_TFitPanel(void *p = 0);
   static void *newArray_TFitPanel(Long_t size);
   static void delete_TFitPanel(void *p);
   static void deleteArray_TFitPanel(void *p);
   static void destruct_TFitPanel(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TFitPanel*)
   {
      ::TFitPanel *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TFitPanel", ::TFitPanel::Class_Version(), "gpad/inc/TFitPanel.h", 33,
                  typeid(::TFitPanel), DefineBehavior(ptr, ptr),
                  &::TFitPanel::Dictionary, &TFitPanel_IsA, 4,
                  sizeof(::TFitPanel) );
      instance.SetNew(&new_TFitPanel);
      instance.SetNewArray(&newArray_TFitPanel);
      instance.SetDelete(&delete_TFitPanel);
      instance.SetDeleteArray(&deleteArray_TFitPanel);
      instance.SetDestructor(&destruct_TFitPanel);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TFitPanel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAttLineCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAttLineCanvas_IsA(const void*);
   static void *new_TAttLineCanvas(void *p = 0);
   static void *newArray_TAttLineCanvas(Long_t size);
   static void delete_TAttLineCanvas(void *p);
   static void deleteArray_TAttLineCanvas(void *p);
   static void destruct_TAttLineCanvas(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAttLineCanvas*)
   {
      ::TAttLineCanvas *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAttLineCanvas", ::TAttLineCanvas::Class_Version(), "gpad/inc/TAttLineCanvas.h", 28,
                  typeid(::TAttLineCanvas), DefineBehavior(ptr, ptr),
                  &::TAttLineCanvas::Dictionary, &TAttLineCanvas_IsA, 4,
                  sizeof(::TAttLineCanvas) );
      instance.SetNew(&new_TAttLineCanvas);
      instance.SetNewArray(&newArray_TAttLineCanvas);
      instance.SetDelete(&delete_TAttLineCanvas);
      instance.SetDeleteArray(&deleteArray_TAttLineCanvas);
      instance.SetDestructor(&destruct_TAttLineCanvas);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAttLineCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TInspectCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TInspectCanvas_IsA(const void*);
   static void *new_TInspectCanvas(void *p = 0);
   static void *newArray_TInspectCanvas(Long_t size);
   static void delete_TInspectCanvas(void *p);
   static void deleteArray_TInspectCanvas(void *p);
   static void destruct_TInspectCanvas(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TInspectCanvas*)
   {
      ::TInspectCanvas *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TInspectCanvas", ::TInspectCanvas::Class_Version(), "gpad/inc/TInspectCanvas.h", 33,
                  typeid(::TInspectCanvas), DefineBehavior(ptr, ptr),
                  &::TInspectCanvas::Dictionary, &TInspectCanvas_IsA, 4,
                  sizeof(::TInspectCanvas) );
      instance.SetNew(&new_TInspectCanvas);
      instance.SetNewArray(&newArray_TInspectCanvas);
      instance.SetDelete(&delete_TInspectCanvas);
      instance.SetDeleteArray(&deleteArray_TInspectCanvas);
      instance.SetDestructor(&destruct_TInspectCanvas);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TInspectCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAttFillCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAttFillCanvas_IsA(const void*);
   static void *new_TAttFillCanvas(void *p = 0);
   static void *newArray_TAttFillCanvas(Long_t size);
   static void delete_TAttFillCanvas(void *p);
   static void deleteArray_TAttFillCanvas(void *p);
   static void destruct_TAttFillCanvas(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAttFillCanvas*)
   {
      ::TAttFillCanvas *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAttFillCanvas", ::TAttFillCanvas::Class_Version(), "gpad/inc/TAttFillCanvas.h", 28,
                  typeid(::TAttFillCanvas), DefineBehavior(ptr, ptr),
                  &::TAttFillCanvas::Dictionary, &TAttFillCanvas_IsA, 4,
                  sizeof(::TAttFillCanvas) );
      instance.SetNew(&new_TAttFillCanvas);
      instance.SetNewArray(&newArray_TAttFillCanvas);
      instance.SetDelete(&delete_TAttFillCanvas);
      instance.SetDeleteArray(&deleteArray_TAttFillCanvas);
      instance.SetDestructor(&destruct_TAttFillCanvas);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAttFillCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TViewer3DPad_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TViewer3DPad_IsA(const void*);
   static void delete_TViewer3DPad(void *p);
   static void deleteArray_TViewer3DPad(void *p);
   static void destruct_TViewer3DPad(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TViewer3DPad*)
   {
      ::TViewer3DPad *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TViewer3DPad", ::TViewer3DPad::Class_Version(), "gpad/inc/TViewer3DPad.h", 30,
                  typeid(::TViewer3DPad), DefineBehavior(ptr, ptr),
                  &::TViewer3DPad::Dictionary, &TViewer3DPad_IsA, 0,
                  sizeof(::TViewer3DPad) );
      instance.SetDelete(&delete_TViewer3DPad);
      instance.SetDeleteArray(&deleteArray_TViewer3DPad);
      instance.SetDestructor(&destruct_TViewer3DPad);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TViewer3DPad*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TFitPanelGraph_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TFitPanelGraph_IsA(const void*);
   static void *new_TFitPanelGraph(void *p = 0);
   static void *newArray_TFitPanelGraph(Long_t size);
   static void delete_TFitPanelGraph(void *p);
   static void deleteArray_TFitPanelGraph(void *p);
   static void destruct_TFitPanelGraph(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TFitPanelGraph*)
   {
      ::TFitPanelGraph *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TFitPanelGraph", ::TFitPanelGraph::Class_Version(), "gpad/inc/TFitPanelGraph.h", 33,
                  typeid(::TFitPanelGraph), DefineBehavior(ptr, ptr),
                  &::TFitPanelGraph::Dictionary, &TFitPanelGraph_IsA, 4,
                  sizeof(::TFitPanelGraph) );
      instance.SetNew(&new_TFitPanelGraph);
      instance.SetNewArray(&newArray_TFitPanelGraph);
      instance.SetDelete(&delete_TFitPanelGraph);
      instance.SetDeleteArray(&deleteArray_TFitPanelGraph);
      instance.SetDestructor(&destruct_TFitPanelGraph);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TFitPanelGraph*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPaveClass_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPaveClass_IsA(const void*);
   static void *new_TPaveClass(void *p = 0);
   static void *newArray_TPaveClass(Long_t size);
   static void delete_TPaveClass(void *p);
   static void deleteArray_TPaveClass(void *p);
   static void destruct_TPaveClass(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPaveClass*)
   {
      ::TPaveClass *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPaveClass", ::TPaveClass::Class_Version(), "gpad/inc/TPaveClass.h", 31,
                  typeid(::TPaveClass), DefineBehavior(ptr, ptr),
                  &::TPaveClass::Dictionary, &TPaveClass_IsA, 4,
                  sizeof(::TPaveClass) );
      instance.SetNew(&new_TPaveClass);
      instance.SetNewArray(&newArray_TPaveClass);
      instance.SetDelete(&delete_TPaveClass);
      instance.SetDeleteArray(&deleteArray_TPaveClass);
      instance.SetDestructor(&destruct_TPaveClass);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPaveClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAttTextCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAttTextCanvas_IsA(const void*);
   static void *new_TAttTextCanvas(void *p = 0);
   static void *newArray_TAttTextCanvas(Long_t size);
   static void delete_TAttTextCanvas(void *p);
   static void deleteArray_TAttTextCanvas(void *p);
   static void destruct_TAttTextCanvas(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAttTextCanvas*)
   {
      ::TAttTextCanvas *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAttTextCanvas", ::TAttTextCanvas::Class_Version(), "gpad/inc/TAttTextCanvas.h", 28,
                  typeid(::TAttTextCanvas), DefineBehavior(ptr, ptr),
                  &::TAttTextCanvas::Dictionary, &TAttTextCanvas_IsA, 4,
                  sizeof(::TAttTextCanvas) );
      instance.SetNew(&new_TAttTextCanvas);
      instance.SetNewArray(&newArray_TAttTextCanvas);
      instance.SetDelete(&delete_TAttTextCanvas);
      instance.SetDeleteArray(&deleteArray_TAttTextCanvas);
      instance.SetDestructor(&destruct_TAttTextCanvas);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAttTextCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCanvas::Class_Name()
{
   return "TCanvas";
}

//______________________________________________________________________________
const char *TCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPad::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPad::Class_Name()
{
   return "TPad";
}

//______________________________________________________________________________
const char *TPad::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPad*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPad::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPad*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPad::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPad*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPad::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPad*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAttCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttCanvas::Class_Name()
{
   return "TAttCanvas";
}

//______________________________________________________________________________
const char *TAttCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAttCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAttCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAttCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAttCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TControlBar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TControlBar::Class_Name()
{
   return "TControlBar";
}

//______________________________________________________________________________
const char *TControlBar::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TControlBar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TControlBar::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TControlBar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TControlBar::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TControlBar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TControlBar::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TControlBar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDialogCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDialogCanvas::Class_Name()
{
   return "TDialogCanvas";
}

//______________________________________________________________________________
const char *TDialogCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDialogCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDialogCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDialogCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDialogCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDialogCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDialogCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDialogCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAttMarkerCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttMarkerCanvas::Class_Name()
{
   return "TAttMarkerCanvas";
}

//______________________________________________________________________________
const char *TAttMarkerCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAttMarkerCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttMarkerCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAttMarkerCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttMarkerCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAttMarkerCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttMarkerCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAttMarkerCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSlider::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSlider::Class_Name()
{
   return "TSlider";
}

//______________________________________________________________________________
const char *TSlider::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSlider*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSlider::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSlider*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSlider::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSlider*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSlider::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSlider*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSliderBox::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSliderBox::Class_Name()
{
   return "TSliderBox";
}

//______________________________________________________________________________
const char *TSliderBox::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSliderBox*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSliderBox::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSliderBox*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSliderBox::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSliderBox*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSliderBox::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSliderBox*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TControlBarButton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TControlBarButton::Class_Name()
{
   return "TControlBarButton";
}

//______________________________________________________________________________
const char *TControlBarButton::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TControlBarButton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TControlBarButton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TControlBarButton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TControlBarButton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TControlBarButton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TControlBarButton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TControlBarButton*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDrawPanelHist::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDrawPanelHist::Class_Name()
{
   return "TDrawPanelHist";
}

//______________________________________________________________________________
const char *TDrawPanelHist::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDrawPanelHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDrawPanelHist::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDrawPanelHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDrawPanelHist::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDrawPanelHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDrawPanelHist::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDrawPanelHist*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TButton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TButton::Class_Name()
{
   return "TButton";
}

//______________________________________________________________________________
const char *TButton::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TButton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TButton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TButton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TButton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TButton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TButton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TButton*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGroupButton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGroupButton::Class_Name()
{
   return "TGroupButton";
}

//______________________________________________________________________________
const char *TGroupButton::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGroupButton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGroupButton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGroupButton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGroupButton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGroupButton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGroupButton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGroupButton*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TClassTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TClassTree::Class_Name()
{
   return "TClassTree";
}

//______________________________________________________________________________
const char *TClassTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TClassTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TClassTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TClassTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TClassTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TClassTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TClassTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TClassTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TUtilPad::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TUtilPad::Class_Name()
{
   return "TUtilPad";
}

//______________________________________________________________________________
const char *TUtilPad::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TUtilPad*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TUtilPad::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TUtilPad*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TUtilPad::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TUtilPad*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TUtilPad::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TUtilPad*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFitPanel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFitPanel::Class_Name()
{
   return "TFitPanel";
}

//______________________________________________________________________________
const char *TFitPanel::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TFitPanel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFitPanel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TFitPanel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFitPanel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TFitPanel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFitPanel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TFitPanel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAttLineCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttLineCanvas::Class_Name()
{
   return "TAttLineCanvas";
}

//______________________________________________________________________________
const char *TAttLineCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAttLineCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttLineCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAttLineCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttLineCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAttLineCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttLineCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAttLineCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TInspectCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TInspectCanvas::Class_Name()
{
   return "TInspectCanvas";
}

//______________________________________________________________________________
const char *TInspectCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TInspectCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TInspectCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TInspectCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TInspectCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TInspectCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TInspectCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TInspectCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAttFillCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttFillCanvas::Class_Name()
{
   return "TAttFillCanvas";
}

//______________________________________________________________________________
const char *TAttFillCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAttFillCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttFillCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAttFillCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttFillCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAttFillCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttFillCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAttFillCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TViewer3DPad::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TViewer3DPad::Class_Name()
{
   return "TViewer3DPad";
}

//______________________________________________________________________________
const char *TViewer3DPad::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TViewer3DPad*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TViewer3DPad::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TViewer3DPad*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TViewer3DPad::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TViewer3DPad*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TViewer3DPad::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TViewer3DPad*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFitPanelGraph::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFitPanelGraph::Class_Name()
{
   return "TFitPanelGraph";
}

//______________________________________________________________________________
const char *TFitPanelGraph::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TFitPanelGraph*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFitPanelGraph::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TFitPanelGraph*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFitPanelGraph::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TFitPanelGraph*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFitPanelGraph::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TFitPanelGraph*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPaveClass::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPaveClass::Class_Name()
{
   return "TPaveClass";
}

//______________________________________________________________________________
const char *TPaveClass::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPaveClass*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPaveClass::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPaveClass*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPaveClass::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPaveClass*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPaveClass::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPaveClass*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAttTextCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttTextCanvas::Class_Name()
{
   return "TAttTextCanvas";
}

//______________________________________________________________________________
const char *TAttTextCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAttTextCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttTextCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAttTextCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttTextCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAttTextCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttTextCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAttTextCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TAttCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttCanvas.

   if (R__b.IsReading()) {
      TAttCanvas::Class()->ReadBuffer(R__b, this);
   } else {
      TAttCanvas::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TAttCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAttCanvas.

      TClass *R__cl = ::TAttCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fXBetween", &fXBetween);
      R__insp.Inspect(R__cl, R__parent, "fYBetween", &fYBetween);
      R__insp.Inspect(R__cl, R__parent, "fTitleFromTop", &fTitleFromTop);
      R__insp.Inspect(R__cl, R__parent, "fXdate", &fXdate);
      R__insp.Inspect(R__cl, R__parent, "fYdate", &fYdate);
      R__insp.Inspect(R__cl, R__parent, "fAdate", &fAdate);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAttCanvas_IsA(const void *obj) {
      return ((::TAttCanvas*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TAttCanvas(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAttCanvas : new ::TAttCanvas;
   }
   static void *newArray_TAttCanvas(Long_t size) {
      return new ::TAttCanvas[size];
   }
   // Wrapper around operator delete
   static void delete_TAttCanvas(void *p) {
      delete ((::TAttCanvas*)p);
   }
   static void deleteArray_TAttCanvas(void *p) {
      delete [] ((::TAttCanvas*)p);
   }
   static void destruct_TAttCanvas(void *p) {
      typedef ::TAttCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttCanvas

//______________________________________________________________________________
void TButton::Streamer(TBuffer &R__b)
{
   // Stream an object of class TButton.

   if (R__b.IsReading()) {
      TButton::Class()->ReadBuffer(R__b, this);
   } else {
      TButton::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TButton::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TButton.

      TClass *R__cl = ::TButton::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fFocused", &fFocused);
      R__insp.Inspect(R__cl, R__parent, "fFraming", &fFraming);
      R__insp.Inspect(R__cl, R__parent, "fMethod", &fMethod);
      fMethod.ShowMembers(R__insp, strcat(R__parent,"fMethod.")); R__parent[R__ncp] = 0;
      TPad::ShowMembers(R__insp, R__parent);
      TAttText::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TButton_IsA(const void *obj) {
      return ((::TButton*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TButton(void *p) {
      return  p ? new(p) ::TButton : new ::TButton;
   }
   static void *newArray_TButton(Long_t size) {
      return new ::TButton[size];
   }
   // Wrapper around operator delete
   static void delete_TButton(void *p) {
      delete ((::TButton*)p);
   }
   static void deleteArray_TButton(void *p) {
      delete [] ((::TButton*)p);
   }
   static void destruct_TButton(void *p) {
      typedef ::TButton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TButton

//______________________________________________________________________________
void TCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCanvas.

      TClass *R__cl = ::TCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCatt", &fCatt);
      fCatt.ShowMembers(R__insp, strcat(R__parent,"fCatt.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDISPLAY", &fDISPLAY);
      fDISPLAY.ShowMembers(R__insp, strcat(R__parent,"fDISPLAY.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXsizeUser", &fXsizeUser);
      R__insp.Inspect(R__cl, R__parent, "fYsizeUser", &fYsizeUser);
      R__insp.Inspect(R__cl, R__parent, "fXsizeReal", &fXsizeReal);
      R__insp.Inspect(R__cl, R__parent, "fYsizeReal", &fYsizeReal);
      R__insp.Inspect(R__cl, R__parent, "fHighLightColor", &fHighLightColor);
      R__insp.Inspect(R__cl, R__parent, "fDoubleBuffer", &fDoubleBuffer);
      R__insp.Inspect(R__cl, R__parent, "fWindowTopX", &fWindowTopX);
      R__insp.Inspect(R__cl, R__parent, "fWindowTopY", &fWindowTopY);
      R__insp.Inspect(R__cl, R__parent, "fWindowWidth", &fWindowWidth);
      R__insp.Inspect(R__cl, R__parent, "fWindowHeight", &fWindowHeight);
      R__insp.Inspect(R__cl, R__parent, "fCw", &fCw);
      R__insp.Inspect(R__cl, R__parent, "fCh", &fCh);
      R__insp.Inspect(R__cl, R__parent, "fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__parent, "fEventX", &fEventX);
      R__insp.Inspect(R__cl, R__parent, "fEventY", &fEventY);
      R__insp.Inspect(R__cl, R__parent, "fCanvasID", &fCanvasID);
      R__insp.Inspect(R__cl, R__parent, "*fSelected", &fSelected);
      R__insp.Inspect(R__cl, R__parent, "fSelectedX", &fSelectedX);
      R__insp.Inspect(R__cl, R__parent, "fSelectedY", &fSelectedY);
      R__insp.Inspect(R__cl, R__parent, "fSelectedOpt", &fSelectedOpt);
      fSelectedOpt.ShowMembers(R__insp, strcat(R__parent,"fSelectedOpt.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fSelectedPad", &fSelectedPad);
      R__insp.Inspect(R__cl, R__parent, "*fPadSave", &fPadSave);
      R__insp.Inspect(R__cl, R__parent, "*fCanvasImp", &fCanvasImp);
      R__insp.Inspect(R__cl, R__parent, "*fContextMenu", &fContextMenu);
      R__insp.Inspect(R__cl, R__parent, "fBatch", &fBatch);
      R__insp.Inspect(R__cl, R__parent, "fUpdating", &fUpdating);
      R__insp.Inspect(R__cl, R__parent, "fRetained", &fRetained);
      R__insp.Inspect(R__cl, R__parent, "fShowEventStatus", &fShowEventStatus);
      R__insp.Inspect(R__cl, R__parent, "fAutoExec", &fAutoExec);
      R__insp.Inspect(R__cl, R__parent, "fMoveOpaque", &fMoveOpaque);
      R__insp.Inspect(R__cl, R__parent, "fResizeOpaque", &fResizeOpaque);
      R__insp.Inspect(R__cl, R__parent, "fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__parent, "fShowToolBar", &fShowToolBar);
      R__insp.Inspect(R__cl, R__parent, "fShowEditor", &fShowEditor);
      TPad::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCanvas_IsA(const void *obj) {
      return ((::TCanvas*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TCanvas(void *p) {
      return  p ? new(p) ::TCanvas : new ::TCanvas;
   }
   static void *newArray_TCanvas(Long_t size) {
      return new ::TCanvas[size];
   }
   // Wrapper around operator delete
   static void delete_TCanvas(void *p) {
      delete ((::TCanvas*)p);
   }
   static void deleteArray_TCanvas(void *p) {
      delete [] ((::TCanvas*)p);
   }
   static void destruct_TCanvas(void *p) {
      typedef ::TCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCanvas

//______________________________________________________________________________
void TClassTree::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TClassTree.

      TClass *R__cl = ::TClassTree::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fClasses", &fClasses);
      fClasses.ShowMembers(R__insp, strcat(R__parent,"fClasses.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fYoffset", &fYoffset);
      R__insp.Inspect(R__cl, R__parent, "fLabelDx", &fLabelDx);
      R__insp.Inspect(R__cl, R__parent, "fNclasses", &fNclasses);
      R__insp.Inspect(R__cl, R__parent, "fShowCod", &fShowCod);
      R__insp.Inspect(R__cl, R__parent, "fShowMul", &fShowMul);
      R__insp.Inspect(R__cl, R__parent, "fShowHas", &fShowHas);
      R__insp.Inspect(R__cl, R__parent, "fShowRef", &fShowRef);
      R__insp.Inspect(R__cl, R__parent, "*fCstatus", &fCstatus);
      R__insp.Inspect(R__cl, R__parent, "*fNdata", &fNdata);
      R__insp.Inspect(R__cl, R__parent, "*fParents", &fParents);
      R__insp.Inspect(R__cl, R__parent, "*fCparent", &fCparent);
      R__insp.Inspect(R__cl, R__parent, "*fDerived", &fDerived);
      R__insp.Inspect(R__cl, R__parent, "*fCpointer", &fCpointer);
      R__insp.Inspect(R__cl, R__parent, "*fCnames", &fCnames);
      R__insp.Inspect(R__cl, R__parent, "*fCtitles", &fCtitles);
      R__insp.Inspect(R__cl, R__parent, "*fOptions", &fOptions);
      R__insp.Inspect(R__cl, R__parent, "fSourceDir", &fSourceDir);
      fSourceDir.ShowMembers(R__insp, strcat(R__parent,"fSourceDir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fLinks", &fLinks);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TClassTree_IsA(const void *obj) {
      return ((::TClassTree*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TClassTree(void *p) {
      return  p ? new(p) ::TClassTree : new ::TClassTree;
   }
   static void *newArray_TClassTree(Long_t size) {
      return new ::TClassTree[size];
   }
   // Wrapper around operator delete
   static void delete_TClassTree(void *p) {
      delete ((::TClassTree*)p);
   }
   static void deleteArray_TClassTree(void *p) {
      delete [] ((::TClassTree*)p);
   }
   static void destruct_TClassTree(void *p) {
      typedef ::TClassTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TClassTree

//______________________________________________________________________________
void TControlBar::Streamer(TBuffer &R__b)
{
   // Stream an object of class TControlBar.

   if (R__b.IsReading()) {
      TControlBar::Class()->ReadBuffer(R__b, this);
   } else {
      TControlBar::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TControlBar::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TControlBar.

      TClass *R__cl = ::TControlBar::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fControlBarImp", &fControlBarImp);
      R__insp.Inspect(R__cl, R__parent, "fOrientation", &fOrientation);
      R__insp.Inspect(R__cl, R__parent, "*fButtons", &fButtons);
      R__insp.Inspect(R__cl, R__parent, "fNoroc", &fNoroc);
      TControlBarButton::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TControlBar_IsA(const void *obj) {
      return ((::TControlBar*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TControlBar(void *p) {
      return  p ? new(p) ::TControlBar : new ::TControlBar;
   }
   static void *newArray_TControlBar(Long_t size) {
      return new ::TControlBar[size];
   }
   // Wrapper around operator delete
   static void delete_TControlBar(void *p) {
      delete ((::TControlBar*)p);
   }
   static void deleteArray_TControlBar(void *p) {
      delete [] ((::TControlBar*)p);
   }
   static void destruct_TControlBar(void *p) {
      typedef ::TControlBar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TControlBar

//______________________________________________________________________________
void TControlBarButton::Streamer(TBuffer &R__b)
{
   // Stream an object of class TControlBarButton.

   if (R__b.IsReading()) {
      TControlBarButton::Class()->ReadBuffer(R__b, this);
   } else {
      TControlBarButton::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TControlBarButton::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TControlBarButton.

      TClass *R__cl = ::TControlBarButton::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "fAction", &fAction);
      fAction.ShowMembers(R__insp, strcat(R__parent,"fAction.")); R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TControlBarButton_IsA(const void *obj) {
      return ((::TControlBarButton*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TControlBarButton(void *p) {
      return  p ? new(p) ::TControlBarButton : new ::TControlBarButton;
   }
   static void *newArray_TControlBarButton(Long_t size) {
      return new ::TControlBarButton[size];
   }
   // Wrapper around operator delete
   static void delete_TControlBarButton(void *p) {
      delete ((::TControlBarButton*)p);
   }
   static void deleteArray_TControlBarButton(void *p) {
      delete [] ((::TControlBarButton*)p);
   }
   static void destruct_TControlBarButton(void *p) {
      typedef ::TControlBarButton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TControlBarButton

//______________________________________________________________________________
void TDialogCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDialogCanvas.

   if (R__b.IsReading()) {
      TDialogCanvas::Class()->ReadBuffer(R__b, this);
   } else {
      TDialogCanvas::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDialogCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDialogCanvas.

      TClass *R__cl = ::TDialogCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fRefObject", &fRefObject);
      R__insp.Inspect(R__cl, R__parent, "*fRefPad", &fRefPad);
      TCanvas::ShowMembers(R__insp, R__parent);
      TAttText::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDialogCanvas_IsA(const void *obj) {
      return ((::TDialogCanvas*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDialogCanvas(void *p) {
      return  p ? new(p) ::TDialogCanvas : new ::TDialogCanvas;
   }
   static void *newArray_TDialogCanvas(Long_t size) {
      return new ::TDialogCanvas[size];
   }
   // Wrapper around operator delete
   static void delete_TDialogCanvas(void *p) {
      delete ((::TDialogCanvas*)p);
   }
   static void deleteArray_TDialogCanvas(void *p) {
      delete [] ((::TDialogCanvas*)p);
   }
   static void destruct_TDialogCanvas(void *p) {
      typedef ::TDialogCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDialogCanvas

//______________________________________________________________________________
void TAttLineCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttLineCanvas.

   if (R__b.IsReading()) {
      TAttLineCanvas::Class()->ReadBuffer(R__b, this);
   } else {
      TAttLineCanvas::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TAttLineCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAttLineCanvas.

      TClass *R__cl = ::TAttLineCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TDialogCanvas::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAttLineCanvas_IsA(const void *obj) {
      return ((::TAttLineCanvas*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TAttLineCanvas(void *p) {
      return  p ? new(p) ::TAttLineCanvas : new ::TAttLineCanvas;
   }
   static void *newArray_TAttLineCanvas(Long_t size) {
      return new ::TAttLineCanvas[size];
   }
   // Wrapper around operator delete
   static void delete_TAttLineCanvas(void *p) {
      delete ((::TAttLineCanvas*)p);
   }
   static void deleteArray_TAttLineCanvas(void *p) {
      delete [] ((::TAttLineCanvas*)p);
   }
   static void destruct_TAttLineCanvas(void *p) {
      typedef ::TAttLineCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttLineCanvas

//______________________________________________________________________________
void TAttFillCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttFillCanvas.

   if (R__b.IsReading()) {
      TAttFillCanvas::Class()->ReadBuffer(R__b, this);
   } else {
      TAttFillCanvas::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TAttFillCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAttFillCanvas.

      TClass *R__cl = ::TAttFillCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TDialogCanvas::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAttFillCanvas_IsA(const void *obj) {
      return ((::TAttFillCanvas*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TAttFillCanvas(void *p) {
      return  p ? new(p) ::TAttFillCanvas : new ::TAttFillCanvas;
   }
   static void *newArray_TAttFillCanvas(Long_t size) {
      return new ::TAttFillCanvas[size];
   }
   // Wrapper around operator delete
   static void delete_TAttFillCanvas(void *p) {
      delete ((::TAttFillCanvas*)p);
   }
   static void deleteArray_TAttFillCanvas(void *p) {
      delete [] ((::TAttFillCanvas*)p);
   }
   static void destruct_TAttFillCanvas(void *p) {
      typedef ::TAttFillCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttFillCanvas

//______________________________________________________________________________
void TAttTextCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttTextCanvas.

   if (R__b.IsReading()) {
      TAttTextCanvas::Class()->ReadBuffer(R__b, this);
   } else {
      TAttTextCanvas::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TAttTextCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAttTextCanvas.

      TClass *R__cl = ::TAttTextCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TDialogCanvas::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAttTextCanvas_IsA(const void *obj) {
      return ((::TAttTextCanvas*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TAttTextCanvas(void *p) {
      return  p ? new(p) ::TAttTextCanvas : new ::TAttTextCanvas;
   }
   static void *newArray_TAttTextCanvas(Long_t size) {
      return new ::TAttTextCanvas[size];
   }
   // Wrapper around operator delete
   static void delete_TAttTextCanvas(void *p) {
      delete ((::TAttTextCanvas*)p);
   }
   static void deleteArray_TAttTextCanvas(void *p) {
      delete [] ((::TAttTextCanvas*)p);
   }
   static void destruct_TAttTextCanvas(void *p) {
      typedef ::TAttTextCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttTextCanvas

//______________________________________________________________________________
void TAttMarkerCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttMarkerCanvas.

   if (R__b.IsReading()) {
      TAttMarkerCanvas::Class()->ReadBuffer(R__b, this);
   } else {
      TAttMarkerCanvas::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TAttMarkerCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAttMarkerCanvas.

      TClass *R__cl = ::TAttMarkerCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TDialogCanvas::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAttMarkerCanvas_IsA(const void *obj) {
      return ((::TAttMarkerCanvas*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TAttMarkerCanvas(void *p) {
      return  p ? new(p) ::TAttMarkerCanvas : new ::TAttMarkerCanvas;
   }
   static void *newArray_TAttMarkerCanvas(Long_t size) {
      return new ::TAttMarkerCanvas[size];
   }
   // Wrapper around operator delete
   static void delete_TAttMarkerCanvas(void *p) {
      delete ((::TAttMarkerCanvas*)p);
   }
   static void deleteArray_TAttMarkerCanvas(void *p) {
      delete [] ((::TAttMarkerCanvas*)p);
   }
   static void destruct_TAttMarkerCanvas(void *p) {
      typedef ::TAttMarkerCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttMarkerCanvas

//______________________________________________________________________________
void TDrawPanelHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDrawPanelHist.

   if (R__b.IsReading()) {
      TDrawPanelHist::Class()->ReadBuffer(R__b, this);
   } else {
      TDrawPanelHist::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDrawPanelHist::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDrawPanelHist.

      TClass *R__cl = ::TDrawPanelHist::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fOption", &fOption);
      fOption.ShowMembers(R__insp, strcat(R__parent,"fOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fSlider", &fSlider);
      R__insp.Inspect(R__cl, R__parent, "*fHistogram", &fHistogram);
      TDialogCanvas::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDrawPanelHist_IsA(const void *obj) {
      return ((::TDrawPanelHist*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDrawPanelHist(void *p) {
      return  p ? new(p) ::TDrawPanelHist : new ::TDrawPanelHist;
   }
   static void *newArray_TDrawPanelHist(Long_t size) {
      return new ::TDrawPanelHist[size];
   }
   // Wrapper around operator delete
   static void delete_TDrawPanelHist(void *p) {
      delete ((::TDrawPanelHist*)p);
   }
   static void deleteArray_TDrawPanelHist(void *p) {
      delete [] ((::TDrawPanelHist*)p);
   }
   static void destruct_TDrawPanelHist(void *p) {
      typedef ::TDrawPanelHist current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDrawPanelHist

//______________________________________________________________________________
void TFitPanel::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFitPanel.

   if (R__b.IsReading()) {
      TFitPanel::Class()->ReadBuffer(R__b, this);
   } else {
      TFitPanel::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TFitPanel::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFitPanel.

      TClass *R__cl = ::TFitPanel::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fOption", &fOption);
      fOption.ShowMembers(R__insp, strcat(R__parent,"fOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fFunction", &fFunction);
      fFunction.ShowMembers(R__insp, strcat(R__parent,"fFunction.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSame", &fSame);
      fSame.ShowMembers(R__insp, strcat(R__parent,"fSame.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fSlider", &fSlider);
      R__insp.Inspect(R__cl, R__parent, "*fObjectFit", &fObjectFit);
      TDialogCanvas::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TFitPanel_IsA(const void *obj) {
      return ((::TFitPanel*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TFitPanel(void *p) {
      return  p ? new(p) ::TFitPanel : new ::TFitPanel;
   }
   static void *newArray_TFitPanel(Long_t size) {
      return new ::TFitPanel[size];
   }
   // Wrapper around operator delete
   static void delete_TFitPanel(void *p) {
      delete ((::TFitPanel*)p);
   }
   static void deleteArray_TFitPanel(void *p) {
      delete [] ((::TFitPanel*)p);
   }
   static void destruct_TFitPanel(void *p) {
      typedef ::TFitPanel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFitPanel

//______________________________________________________________________________
void TFitPanelGraph::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFitPanelGraph.

   if (R__b.IsReading()) {
      TFitPanelGraph::Class()->ReadBuffer(R__b, this);
   } else {
      TFitPanelGraph::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TFitPanelGraph::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFitPanelGraph.

      TClass *R__cl = ::TFitPanelGraph::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TFitPanel::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TFitPanelGraph_IsA(const void *obj) {
      return ((::TFitPanelGraph*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TFitPanelGraph(void *p) {
      return  p ? new(p) ::TFitPanelGraph : new ::TFitPanelGraph;
   }
   static void *newArray_TFitPanelGraph(Long_t size) {
      return new ::TFitPanelGraph[size];
   }
   // Wrapper around operator delete
   static void delete_TFitPanelGraph(void *p) {
      delete ((::TFitPanelGraph*)p);
   }
   static void deleteArray_TFitPanelGraph(void *p) {
      delete [] ((::TFitPanelGraph*)p);
   }
   static void destruct_TFitPanelGraph(void *p) {
      typedef ::TFitPanelGraph current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFitPanelGraph

//______________________________________________________________________________
void TGroupButton::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGroupButton.

   if (R__b.IsReading()) {
      TGroupButton::Class()->ReadBuffer(R__b, this);
   } else {
      TGroupButton::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGroupButton::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGroupButton.

      TClass *R__cl = ::TGroupButton::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TButton::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGroupButton_IsA(const void *obj) {
      return ((::TGroupButton*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGroupButton(void *p) {
      return  p ? new(p) ::TGroupButton : new ::TGroupButton;
   }
   static void *newArray_TGroupButton(Long_t size) {
      return new ::TGroupButton[size];
   }
   // Wrapper around operator delete
   static void delete_TGroupButton(void *p) {
      delete ((::TGroupButton*)p);
   }
   static void deleteArray_TGroupButton(void *p) {
      delete [] ((::TGroupButton*)p);
   }
   static void destruct_TGroupButton(void *p) {
      typedef ::TGroupButton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGroupButton

//______________________________________________________________________________
void TInspectCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TInspectCanvas.

   if (R__b.IsReading()) {
      TInspectCanvas::Class()->ReadBuffer(R__b, this);
   } else {
      TInspectCanvas::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TInspectCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TInspectCanvas.

      TClass *R__cl = ::TInspectCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fBackward", &fBackward);
      R__insp.Inspect(R__cl, R__parent, "*fForward", &fForward);
      R__insp.Inspect(R__cl, R__parent, "*fObjects", &fObjects);
      R__insp.Inspect(R__cl, R__parent, "*fCurObject", &fCurObject);
      TCanvas::ShowMembers(R__insp, R__parent);
      TAttText::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TInspectCanvas_IsA(const void *obj) {
      return ((::TInspectCanvas*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TInspectCanvas(void *p) {
      return  p ? new(p) ::TInspectCanvas : new ::TInspectCanvas;
   }
   static void *newArray_TInspectCanvas(Long_t size) {
      return new ::TInspectCanvas[size];
   }
   // Wrapper around operator delete
   static void delete_TInspectCanvas(void *p) {
      delete ((::TInspectCanvas*)p);
   }
   static void deleteArray_TInspectCanvas(void *p) {
      delete [] ((::TInspectCanvas*)p);
   }
   static void destruct_TInspectCanvas(void *p) {
      typedef ::TInspectCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TInspectCanvas

//______________________________________________________________________________
void TPad::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPad.

      TClass *R__cl = ::TPad::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTip", &fTip);
      R__insp.Inspect(R__cl, R__parent, "fX1", &fX1);
      R__insp.Inspect(R__cl, R__parent, "fY1", &fY1);
      R__insp.Inspect(R__cl, R__parent, "fX2", &fX2);
      R__insp.Inspect(R__cl, R__parent, "fY2", &fY2);
      R__insp.Inspect(R__cl, R__parent, "fXtoAbsPixelk", &fXtoAbsPixelk);
      R__insp.Inspect(R__cl, R__parent, "fXtoPixelk", &fXtoPixelk);
      R__insp.Inspect(R__cl, R__parent, "fXtoPixel", &fXtoPixel);
      R__insp.Inspect(R__cl, R__parent, "fYtoAbsPixelk", &fYtoAbsPixelk);
      R__insp.Inspect(R__cl, R__parent, "fYtoPixelk", &fYtoPixelk);
      R__insp.Inspect(R__cl, R__parent, "fYtoPixel", &fYtoPixel);
      R__insp.Inspect(R__cl, R__parent, "fUtoAbsPixelk", &fUtoAbsPixelk);
      R__insp.Inspect(R__cl, R__parent, "fUtoPixelk", &fUtoPixelk);
      R__insp.Inspect(R__cl, R__parent, "fUtoPixel", &fUtoPixel);
      R__insp.Inspect(R__cl, R__parent, "fVtoAbsPixelk", &fVtoAbsPixelk);
      R__insp.Inspect(R__cl, R__parent, "fVtoPixelk", &fVtoPixelk);
      R__insp.Inspect(R__cl, R__parent, "fVtoPixel", &fVtoPixel);
      R__insp.Inspect(R__cl, R__parent, "fAbsPixeltoXk", &fAbsPixeltoXk);
      R__insp.Inspect(R__cl, R__parent, "fPixeltoXk", &fPixeltoXk);
      R__insp.Inspect(R__cl, R__parent, "fPixeltoX", &fPixeltoX);
      R__insp.Inspect(R__cl, R__parent, "fAbsPixeltoYk", &fAbsPixeltoYk);
      R__insp.Inspect(R__cl, R__parent, "fPixeltoYk", &fPixeltoYk);
      R__insp.Inspect(R__cl, R__parent, "fPixeltoY", &fPixeltoY);
      R__insp.Inspect(R__cl, R__parent, "fXlowNDC", &fXlowNDC);
      R__insp.Inspect(R__cl, R__parent, "fYlowNDC", &fYlowNDC);
      R__insp.Inspect(R__cl, R__parent, "fWNDC", &fWNDC);
      R__insp.Inspect(R__cl, R__parent, "fHNDC", &fHNDC);
      R__insp.Inspect(R__cl, R__parent, "fAbsXlowNDC", &fAbsXlowNDC);
      R__insp.Inspect(R__cl, R__parent, "fAbsYlowNDC", &fAbsYlowNDC);
      R__insp.Inspect(R__cl, R__parent, "fAbsWNDC", &fAbsWNDC);
      R__insp.Inspect(R__cl, R__parent, "fAbsHNDC", &fAbsHNDC);
      R__insp.Inspect(R__cl, R__parent, "fUxmin", &fUxmin);
      R__insp.Inspect(R__cl, R__parent, "fUymin", &fUymin);
      R__insp.Inspect(R__cl, R__parent, "fUxmax", &fUxmax);
      R__insp.Inspect(R__cl, R__parent, "fUymax", &fUymax);
      R__insp.Inspect(R__cl, R__parent, "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__parent, "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__parent, "fAspectRatio", &fAspectRatio);
      R__insp.Inspect(R__cl, R__parent, "fPixmapID", &fPixmapID);
      R__insp.Inspect(R__cl, R__parent, "fNumber", &fNumber);
      R__insp.Inspect(R__cl, R__parent, "fTickx", &fTickx);
      R__insp.Inspect(R__cl, R__parent, "fTicky", &fTicky);
      R__insp.Inspect(R__cl, R__parent, "fLogx", &fLogx);
      R__insp.Inspect(R__cl, R__parent, "fLogy", &fLogy);
      R__insp.Inspect(R__cl, R__parent, "fLogz", &fLogz);
      R__insp.Inspect(R__cl, R__parent, "fPadPaint", &fPadPaint);
      R__insp.Inspect(R__cl, R__parent, "fCrosshair", &fCrosshair);
      R__insp.Inspect(R__cl, R__parent, "fCrosshairPos", &fCrosshairPos);
      R__insp.Inspect(R__cl, R__parent, "fBorderSize", &fBorderSize);
      R__insp.Inspect(R__cl, R__parent, "fBorderMode", &fBorderMode);
      R__insp.Inspect(R__cl, R__parent, "fModified", &fModified);
      R__insp.Inspect(R__cl, R__parent, "fGridx", &fGridx);
      R__insp.Inspect(R__cl, R__parent, "fGridy", &fGridy);
      R__insp.Inspect(R__cl, R__parent, "fAbsCoord", &fAbsCoord);
      R__insp.Inspect(R__cl, R__parent, "fEditable", &fEditable);
      R__insp.Inspect(R__cl, R__parent, "fFixedAspectRatio", &fFixedAspectRatio);
      R__insp.Inspect(R__cl, R__parent, "*fMother", &fMother);
      R__insp.Inspect(R__cl, R__parent, "*fCanvas", &fCanvas);
      R__insp.Inspect(R__cl, R__parent, "*fPrimitives", &fPrimitives);
      R__insp.Inspect(R__cl, R__parent, "*fExecs", &fExecs);
      R__insp.Inspect(R__cl, R__parent, "fName", &fName);
      fName.ShowMembers(R__insp, strcat(R__parent,"fName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTitle", &fTitle);
      fTitle.ShowMembers(R__insp, strcat(R__parent,"fTitle.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fFrame", &fFrame);
      R__insp.Inspect(R__cl, R__parent, "*fView", &fView);
      R__insp.Inspect(R__cl, R__parent, "*fPadPointer", &fPadPointer);
      R__insp.Inspect(R__cl, R__parent, "*fPadView3D", &fPadView3D);
      R__insp.Inspect(R__cl, R__parent, "*fViewer3D", &fViewer3D);
      TVirtualPad::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPad_IsA(const void *obj) {
      return ((::TPad*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TPad(void *p) {
      return  p ? new(p) ::TPad : new ::TPad;
   }
   static void *newArray_TPad(Long_t size) {
      return new ::TPad[size];
   }
   // Wrapper around operator delete
   static void delete_TPad(void *p) {
      delete ((::TPad*)p);
   }
   static void deleteArray_TPad(void *p) {
      delete [] ((::TPad*)p);
   }
   static void destruct_TPad(void *p) {
      typedef ::TPad current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPad

//______________________________________________________________________________
void TPaveClass::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPaveClass.

   if (R__b.IsReading()) {
      TPaveClass::Class()->ReadBuffer(R__b, this);
   } else {
      TPaveClass::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TPaveClass::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPaveClass.

      TClass *R__cl = ::TPaveClass::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fClassTree", &fClassTree);
      TPaveLabel::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPaveClass_IsA(const void *obj) {
      return ((::TPaveClass*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TPaveClass(void *p) {
      return  p ? new(p) ::TPaveClass : new ::TPaveClass;
   }
   static void *newArray_TPaveClass(Long_t size) {
      return new ::TPaveClass[size];
   }
   // Wrapper around operator delete
   static void delete_TPaveClass(void *p) {
      delete ((::TPaveClass*)p);
   }
   static void deleteArray_TPaveClass(void *p) {
      delete [] ((::TPaveClass*)p);
   }
   static void destruct_TPaveClass(void *p) {
      typedef ::TPaveClass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPaveClass

//______________________________________________________________________________
void TSlider::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSlider.

   if (R__b.IsReading()) {
      TSlider::Class()->ReadBuffer(R__b, this);
   } else {
      TSlider::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TSlider::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSlider.

      TClass *R__cl = ::TSlider::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinimum", &fMinimum);
      R__insp.Inspect(R__cl, R__parent, "fMaximum", &fMaximum);
      R__insp.Inspect(R__cl, R__parent, "*fObject", &fObject);
      R__insp.Inspect(R__cl, R__parent, "fMethod", &fMethod);
      fMethod.ShowMembers(R__insp, strcat(R__parent,"fMethod.")); R__parent[R__ncp] = 0;
      TPad::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSlider_IsA(const void *obj) {
      return ((::TSlider*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TSlider(void *p) {
      return  p ? new(p) ::TSlider : new ::TSlider;
   }
   static void *newArray_TSlider(Long_t size) {
      return new ::TSlider[size];
   }
   // Wrapper around operator delete
   static void delete_TSlider(void *p) {
      delete ((::TSlider*)p);
   }
   static void deleteArray_TSlider(void *p) {
      delete [] ((::TSlider*)p);
   }
   static void destruct_TSlider(void *p) {
      typedef ::TSlider current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSlider

//______________________________________________________________________________
void TSliderBox::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSliderBox.

   if (R__b.IsReading()) {
      TSliderBox::Class()->ReadBuffer(R__b, this);
   } else {
      TSliderBox::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TSliderBox::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSliderBox.

      TClass *R__cl = ::TSliderBox::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSlider", &fSlider);
      TWbox::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSliderBox_IsA(const void *obj) {
      return ((::TSliderBox*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TSliderBox(void *p) {
      return  p ? new(p) ::TSliderBox : new ::TSliderBox;
   }
   static void *newArray_TSliderBox(Long_t size) {
      return new ::TSliderBox[size];
   }
   // Wrapper around operator delete
   static void delete_TSliderBox(void *p) {
      delete ((::TSliderBox*)p);
   }
   static void deleteArray_TSliderBox(void *p) {
      delete [] ((::TSliderBox*)p);
   }
   static void destruct_TSliderBox(void *p) {
      typedef ::TSliderBox current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSliderBox

//______________________________________________________________________________
void TUtilPad::Streamer(TBuffer &R__b)
{
   // Stream an object of class TUtilPad.

   TVirtualUtilPad::Streamer(R__b);
}

//______________________________________________________________________________
void TUtilPad::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TUtilPad.

      TClass *R__cl = ::TUtilPad::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TVirtualUtilPad::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TUtilPad_IsA(const void *obj) {
      return ((::TUtilPad*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TUtilPad(void *p) {
      return  p ? new(p) ::TUtilPad : new ::TUtilPad;
   }
   static void *newArray_TUtilPad(Long_t size) {
      return new ::TUtilPad[size];
   }
   // Wrapper around operator delete
   static void delete_TUtilPad(void *p) {
      delete ((::TUtilPad*)p);
   }
   static void deleteArray_TUtilPad(void *p) {
      delete [] ((::TUtilPad*)p);
   }
   static void destruct_TUtilPad(void *p) {
      typedef ::TUtilPad current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TUtilPad

//______________________________________________________________________________
void TViewer3DPad::Streamer(TBuffer &R__b)
{
   // Stream an object of class TViewer3DPad.

   TVirtualViewer3D::Streamer(R__b);
}

//______________________________________________________________________________
void TViewer3DPad::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TViewer3DPad.

      TClass *R__cl = ::TViewer3DPad::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fBuilding", &fBuilding);
      TVirtualViewer3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TViewer3DPad_IsA(const void *obj) {
      return ((::TViewer3DPad*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TViewer3DPad(void *p) {
      delete ((::TViewer3DPad*)p);
   }
   static void deleteArray_TViewer3DPad(void *p) {
      delete [] ((::TViewer3DPad*)p);
   }
   static void destruct_TViewer3DPad(void *p) {
      typedef ::TViewer3DPad current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TViewer3DPad

/********************************************************
* gpad/src/G__GPad.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__GPad();

extern "C" void G__set_cpp_environmentG__GPad() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("gpad/inc/TAttMarkerCanvas.h");
  G__add_compiledheader("gpad/inc/TAttCanvas.h");
  G__add_compiledheader("gpad/inc/TSliderBox.h");
  G__add_compiledheader("gpad/inc/TControlBar.h");
  G__add_compiledheader("gpad/inc/TPad.h");
  G__add_compiledheader("gpad/inc/TDrawPanelHist.h");
  G__add_compiledheader("gpad/inc/TGroupButton.h");
  G__add_compiledheader("gpad/inc/TClassTree.h");
  G__add_compiledheader("gpad/inc/TUtilPad.h");
  G__add_compiledheader("gpad/inc/TFitPanel.h");
  G__add_compiledheader("gpad/inc/TAttLineCanvas.h");
  G__add_compiledheader("gpad/inc/TInspectCanvas.h");
  G__add_compiledheader("gpad/inc/TAttFillCanvas.h");
  G__add_compiledheader("gpad/inc/TViewer3DPad.h");
  G__add_compiledheader("gpad/inc/TControlBarButton.h");
  G__add_compiledheader("gpad/inc/TFitPanelGraph.h");
  G__add_compiledheader("gpad/inc/TDialogCanvas.h");
  G__add_compiledheader("gpad/inc/TPaveClass.h");
  G__add_compiledheader("gpad/inc/TSlider.h");
  G__add_compiledheader("gpad/inc/TCreatePrimitives.h");
  G__add_compiledheader("gpad/inc/TButton.h");
  G__add_compiledheader("gpad/inc/TAttTextCanvas.h");
  G__add_compiledheader("gpad/inc/TCanvas.h");
  G__cpp_reset_tagtableG__GPad();
}
class G__gpaddIsrcdIG__GPaddOcxx_tag {};

void* operator new(size_t size,G__gpaddIsrcdIG__GPaddOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__gpaddIsrcdIG__GPaddOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_gpaddIsrcdIG__GPaddOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__GPad() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TCanvas */
static int G__G__GPad_199_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCanvas *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TCanvas((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TCanvas[G__getaryconstruct()];
   else                    p=new TCanvas;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCanvas *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TCanvas((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TCanvas((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCanvas *p=NULL;
      p = new TCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCanvas *p=NULL;
      p = new TCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCanvas *p=NULL;
      p = new TCanvas(
(const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TCanvas*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TCanvas*)(G__getstructoffset()))->cd());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Delete((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Delete();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->DisconnectWidget();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((const TCanvas*)(G__getstructoffset()))->DrawClone((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((const TCanvas*)(G__getstructoffset()))->DrawClone());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TCanvas*)(G__getstructoffset()))->DrawClonePad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->EditorBar();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->EnterLeave((TPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->FeedbackMode((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Flush();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->UseCurrentStyle();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->ForceUpdate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TCanvas*)(G__getstructoffset()))->GetDISPLAY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCanvas*)(G__getstructoffset()))->GetContextMenu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCanvas*)(G__getstructoffset()))->GetDoubleBuffer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCanvas*)(G__getstructoffset()))->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCanvas*)(G__getstructoffset()))->GetEventX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCanvas*)(G__getstructoffset()))->GetEventY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((const TCanvas*)(G__getstructoffset()))->GetHighLightColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCanvas*)(G__getstructoffset()))->GetPadSave());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCanvas*)(G__getstructoffset()))->GetSelected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCanvas*)(G__getstructoffset()))->GetSelectedX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCanvas*)(G__getstructoffset()))->GetSelectedY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TCanvas*)(G__getstructoffset()))->GetSelectedOpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCanvas*)(G__getstructoffset()))->GetSelectedPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCanvas*)(G__getstructoffset()))->GetShowEventStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCanvas*)(G__getstructoffset()))->GetShowToolBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCanvas*)(G__getstructoffset()))->GetShowEditor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCanvas*)(G__getstructoffset()))->GetAutoExec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TCanvas*)(G__getstructoffset()))->GetXsizeUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TCanvas*)(G__getstructoffset()))->GetYsizeUser());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TCanvas*)(G__getstructoffset()))->GetXsizeReal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TCanvas*)(G__getstructoffset()))->GetYsizeReal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TCanvas*)(G__getstructoffset()))->GetCanvasID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCanvas*)(G__getstructoffset()))->GetCanvasImp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TCanvas*)(G__getstructoffset()))->GetWindowTopX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TCanvas*)(G__getstructoffset()))->GetWindowTopY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TCanvas*)(G__getstructoffset()))->GetWindowWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TCanvas*)(G__getstructoffset()))->GetWindowHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TCanvas*)(G__getstructoffset()))->GetWw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TCanvas*)(G__getstructoffset()))->GetWh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->GetCanvasPar(*(Int_t*)G__Intref(&libp->para[0]),*(Int_t*)G__Intref(&libp->para[1])
,*(UInt_t*)G__UIntref(&libp->para[2]),*(UInt_t*)G__UIntref(&libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->HandleInput((EEventType)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCanvas*)(G__getstructoffset()))->HasMenuBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Iconify();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCanvas*)(G__getstructoffset()))->IsBatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCanvas*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCanvas*)(G__getstructoffset()))->IsRetained());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TCanvas*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TCanvas*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->MoveOpaque((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->MoveOpaque();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCanvas*)(G__getstructoffset()))->OpaqueMoving());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TCanvas*)(G__getstructoffset()))->OpaqueResizing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TCanvas*)(G__getstructoffset()))->Pick((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,libp->para[2].ref?*(TObjLink**)libp->para[2].ref:*(TObjLink**)(&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TCanvas*)(G__getstructoffset()))->Pick((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(TObject*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Picked((TPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->ProcessedEvent((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(TObject*)G__int(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Selected((TVirtualPad*)G__int(libp->para[0]),(TObject*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Closed();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Resize((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Resize();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->ResizeOpaque((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->ResizeOpaque();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SaveSource((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SaveSource((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SaveSource();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetCursor((ECursor)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetDoubleBuffer((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetDoubleBuffer();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetFixedAspectRatio((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetFixedAspectRatio();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetWindowPosition((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetWindowSize((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetCanvasSize((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetHighLightColor((Color_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetSelected((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetSelectedPad((TPad*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Show();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Size((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Size((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Size();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetBatch((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetBatch();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      TCanvas::SetFolder((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      TCanvas::SetFolder();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetRetained((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetRetained();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetTitle((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->SetTitle();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_0_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->ToggleEventStatus();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_1_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->ToggleAutoExec();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_2_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->ToggleToolBar();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_3_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->ToggleEditor();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_4_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Update();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_5_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCanvas::MakeDefCanvas();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_6_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_7_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_8_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_9_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCanvas::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_0_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCanvas*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_1_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_2_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_3_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCanvas*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_4_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_5_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_6_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_199_7_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCanvas G__TTCanvas;
static int G__G__GPad_199_8_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCanvas *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCanvas *)((G__getstructoffset())+sizeof(TCanvas)*i);
   else  delete (TCanvas *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPad */
static int G__G__GPad_205_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPad *p=NULL;
   if(G__getaryconstruct()) p=new TPad[G__getaryconstruct()];
   else                    p=new TPad;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TPad);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPad *p=NULL;
   switch(libp->paran) {
   case 9:
      p = new TPad(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Color_t)G__int(libp->para[6]),(Short_t)G__int(libp->para[7])
,(Short_t)G__int(libp->para[8]));
      break;
   case 8:
      p = new TPad(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Color_t)G__int(libp->para[6]),(Short_t)G__int(libp->para[7]));
      break;
   case 7:
      p = new TPad(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Color_t)G__int(libp->para[6]));
      break;
   case 6:
      p = new TPad(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TPad);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->AbsCoordinates((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TPad*)(G__getstructoffset()))->AbsPixeltoX((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TPad*)(G__getstructoffset()))->AbsPixeltoY((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->AbsPixeltoXY((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->AddExec((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->AutoExec();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->cd());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPad*)(G__getstructoffset()))->Clip((Float_t*)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPad*)(G__getstructoffset()))->Clip((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPad*)(G__getstructoffset()))->ClippingCode((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Closed();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->CopyPixmap();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->CopyPixmaps();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->DeleteExec((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Divide();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->DrawClassObject((const TObject*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->DrawClassObject((const TObject*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPad::DrawColorTable();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->DrawCrosshair();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->DrawFrame((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(const char*)G__int(libp->para[4])));
      break;
   case 4:
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->DrawFrame((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->FindObject((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->FindObject((const TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->UseCurrentStyle();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((const TPad*)(G__getstructoffset()))->GetBorderMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((const TPad*)(G__getstructoffset()))->GetBorderSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetCrosshair());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetCanvasID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->GetFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetEventX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetEventY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((const TPad*)(G__getstructoffset()))->GetHighLightColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->GetRange(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->GetRangeAxis(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->GetPadPar(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetXlowNDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetYlowNDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetWNDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetHNDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TPad*)(G__getstructoffset()))->GetWw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const TPad*)(G__getstructoffset()))->GetWh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetAbsXlowNDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetAbsYlowNDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetAbsWNDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetAbsHNDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetAspectRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetUxmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetUymin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetUxmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetUymax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->GetGridx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->GetGridy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetTickx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetTicky());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetX1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetX2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetY1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->GetY2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPad::GetMaxPickDistance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetListOfPrimitives());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetListOfExecs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetPrimitive((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetSelected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetPad((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetPadPointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetPadSave());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetSelectedPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetView());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetView3D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetLogx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetLogy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetLogz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetMother());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TPad*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TPad*)(G__getstructoffset()))->GetTitle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->GetVirtCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetPadPaint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->GetPixmapID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((const TPad*)(G__getstructoffset()))->Hash());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->HasCrosshair());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->HighLight((Color_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->HighLight((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->HighLight();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->HasFixedAspectRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->IsBatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->IsEditable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->IsModified());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->IsRetained());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->IsVertical());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TPad*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TPad*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Modified((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Modified();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->OpaqueMoving());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TPad*)(G__getstructoffset()))->OpaqueResizing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->PadtoX((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->PadtoY((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintBox((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Option_t*)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintBox((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_11(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintFillArea((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintFillArea((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintFillArea((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintFillArea((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintFillAreaHatches((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintHatches((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3])
,(Double_t*)G__int(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPadFrame((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintLine((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintLineNDC((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintLine3D((Float_t*)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintLine3D((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPolyLine((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPolyLine((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_12(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPolyLine((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPolyLine((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPolyLine3D((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPolyLineNDC((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPolyLineNDC((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPolyMarker((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPolyMarker((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPolyMarker((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintPolyMarker((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintModified();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintText((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(const char*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PaintTextNDC((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(const char*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->Pick((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,libp->para[2].ref?*(TObjLink**)libp->para[2].ref:*(TObjLink**)(&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TPad*)(G__getstructoffset()))->PixeltoX((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_13(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TPad*)(G__getstructoffset()))->PixeltoY((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->PixeltoXY((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Pop();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TPad*)(G__getstructoffset()))->Print((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TPad*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Print((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Range((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->RangeChanged();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->RangeAxis((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->RangeAxisChanged();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->RecursiveRemove((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_14(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->RedrawAxis((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->RedrawAxis();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->ResetView3D((TPadView3D*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->ResetView3D();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->ResizePad((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->ResizePad();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SaveAs((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SaveAs();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetBorderMode((Short_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetBorderSize((Short_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetCanvas((TCanvas*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetCanvasSize((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetCrosshair((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetCrosshair();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetCursor((ECursor)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_15(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetDoubleBuffer((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetDoubleBuffer();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetDrawOption((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetDrawOption();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetEditable((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetEditable();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetFixedAspectRatio((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetFixedAspectRatio();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetGrid((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetGrid((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetGrid();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetGridx((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetGridx();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetGridy((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetGridy();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetFillStyle((Style_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetLogx((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetLogx();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetLogy((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetLogy();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_16(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetLogz((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetLogz();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetNumber((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 9:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetPad(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Color_t)G__int(libp->para[6]),(Short_t)G__int(libp->para[7])
,(Short_t)G__int(libp->para[8]));
      break;
   case 8:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetPad(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Color_t)G__int(libp->para[6]),(Short_t)G__int(libp->para[7]));
      break;
   case 7:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetPad(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Color_t)G__int(libp->para[6]));
      break;
   case 6:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetPad((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetPad((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetAttFillPS((Color_t)G__int(libp->para[0]),(Style_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetAttLinePS((Color_t)G__int(libp->para[0]),(Style_t)G__int(libp->para[1])
,(Width_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetAttMarkerPS((Color_t)G__int(libp->para[0]),(Style_t)G__int(libp->para[1])
,(Size_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetAttTextPS((Int_t)G__int(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Color_t)G__int(libp->para[2]),(Style_t)G__int(libp->para[3])
,(Float_t)G__double(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      TPad::SetMaxPickDistance((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      TPad::SetMaxPickDistance();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_17(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetSelected((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetTicks((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetTicks((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetTicks();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetTickx((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetTickx();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetTicky((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetTicky();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetTitle((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetTitle();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetTheta((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetTheta();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetPhi((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetPhi();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetToolTipText((const char*)G__int(libp->para[0]),(Long_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetToolTipText((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetVertical((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetVertical();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->SetView((TView*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_18(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Update();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->UtoAbsPixel((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->VtoAbsPixel((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->UtoPixel((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->VtoPixel((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->WaitPrimitive((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->WaitPrimitive((const char*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->WaitPrimitive());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->XtoAbsPixel((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->YtoAbsPixel((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->XtoPad((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TPad*)(G__getstructoffset()))->YtoPad((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_19(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->XtoPixel((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_20(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPad*)(G__getstructoffset()))->YtoPixel((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_20(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TPad*)(G__getstructoffset()))->XYtoAbsPixel((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,*(Int_t*)G__Intref(&libp->para[2]),*(Int_t*)G__Intref(&libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_20(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TPad*)(G__getstructoffset()))->XYtoPixel((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,*(Int_t*)G__Intref(&libp->para[2]),*(Int_t*)G__Intref(&libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_20(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->CreateToolTip((const TBox*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Long_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_20(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->DeleteToolTip((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_20(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->ResetToolTip((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_20(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->CloseToolTip((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_20(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->x3d((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->x3d();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_20(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->GetViewer3D((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TPad*)(G__getstructoffset()))->GetViewer3D());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_20(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->ReleaseViewer3D((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->ReleaseViewer3D();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_21(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPad::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_21(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPad::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_2_21(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPad::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_3_21(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPad::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_4_21(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPad*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_5_21(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_6_21(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_7_21(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPad*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_8_21(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPad::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_9_21(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPad::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_0_22(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPad::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_205_1_22(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPad::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPad G__TTPad;
static int G__G__GPad_205_2_22(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPad *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPad *)((G__getstructoffset())+sizeof(TPad)*i);
   else  delete (TPad *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAttCanvas */
static int G__G__GPad_207_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttCanvas *p=NULL;
   if(G__getaryconstruct()) p=new TAttCanvas[G__getaryconstruct()];
   else p=::new((G__gpaddIsrcdIG__GPaddOcxx_tag*)G__getgvp()) TAttCanvas;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TAttCanvas*)(G__getstructoffset()))->Copy(*(TAttCanvas*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TAttCanvas*)(G__getstructoffset()))->GetAdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TAttCanvas*)(G__getstructoffset()))->GetTitleFromTop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TAttCanvas*)(G__getstructoffset()))->GetXBetween());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TAttCanvas*)(G__getstructoffset()))->GetXdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TAttCanvas*)(G__getstructoffset()))->GetYBetween());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TAttCanvas*)(G__getstructoffset()))->GetYdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TAttCanvas*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TAttCanvas*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TAttCanvas*)(G__getstructoffset()))->ResetAttCanvas((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TAttCanvas*)(G__getstructoffset()))->ResetAttCanvas();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttCanvas*)(G__getstructoffset()))->SetAdate((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttCanvas*)(G__getstructoffset()))->SetTitleFromTop((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttCanvas*)(G__getstructoffset()))->SetXBetween((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttCanvas*)(G__getstructoffset()))->SetXdate((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttCanvas*)(G__getstructoffset()))->SetYBetween((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttCanvas*)(G__getstructoffset()))->SetYdate((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAttCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAttCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAttCanvas::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAttCanvas*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttCanvas*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttCanvas*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttCanvas*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_207_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GPad_207_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TAttCanvas *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TAttCanvas(*(TAttCanvas*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttCanvas G__TTAttCanvas;
static int G__G__GPad_207_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAttCanvas *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TAttCanvas *)((G__getstructoffset())+sizeof(TAttCanvas)*i))->~G__TTAttCanvas();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TAttCanvas *)(G__getstructoffset()))->~G__TTAttCanvas();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_207_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttCanvas *dest = (TAttCanvas*)(G__getstructoffset());
   *dest = (*(TAttCanvas*)libp->para[0].ref);
   const TAttCanvas& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TControlBar */
static int G__G__GPad_210_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TControlBar *p=NULL;
   if(G__getaryconstruct()) p=new TControlBar[G__getaryconstruct()];
   else                    p=new TControlBar;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TControlBar);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TControlBar *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TControlBar((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TControlBar((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TControlBar);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TControlBar *p=NULL;
      p = new TControlBar(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TControlBar);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->AddButton((TControlBarButton*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->AddButton(*(TControlBarButton*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->AddButton((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->AddButton((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->AddButton((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->AddControlBar((TControlBar*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->AddControlBar(*(TControlBar*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->AddSeparator();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TControlBar*)(G__getstructoffset()))->GetClicked());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TControlBar*)(G__getstructoffset()))->GetControlBarImp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TControlBar*)(G__getstructoffset()))->GetListOfButtons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TControlBar*)(G__getstructoffset()))->GetNumberOfColumns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TControlBar*)(G__getstructoffset()))->GetNumberOfRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TControlBar*)(G__getstructoffset()))->GetOrientation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->Hide();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->SetFont((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->SetTextColor((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->SetNumberOfColumns((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->SetNumberOfRows((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->SetOrientation((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->SetOrientation((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->Show();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TControlBar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TControlBar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TControlBar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TControlBar::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TControlBar*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBar*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TControlBar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TControlBar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TControlBar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_210_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TControlBar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GPad_210_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TControlBar *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TControlBar(*(TControlBar*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TControlBar);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TControlBar G__TTControlBar;
static int G__G__GPad_210_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TControlBar *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TControlBar *)((G__getstructoffset())+sizeof(TControlBar)*i);
   else  delete (TControlBar *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_210_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TControlBar *dest = (TControlBar*)(G__getstructoffset());
   *dest = (*(TControlBar*)libp->para[0].ref);
   const TControlBar& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDialogCanvas */
static int G__G__GPad_212_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDialogCanvas *p=NULL;
   if(G__getaryconstruct()) p=new TDialogCanvas[G__getaryconstruct()];
   else                    p=new TDialogCanvas;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDialogCanvas *p=NULL;
      p = new TDialogCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDialogCanvas *p=NULL;
      p = new TDialogCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UInt_t)G__int(libp->para[4]),(UInt_t)G__int(libp->para[5]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->Apply((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->Apply();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->BuildStandardButtons();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->Divide();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDialogCanvas*)(G__getstructoffset()))->GetRefObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDialogCanvas*)(G__getstructoffset()))->GetRefPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->Range((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->RecursiveRemove((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->SetBorderMode((Short_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->SetGrid((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->SetGrid((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->SetGrid();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->SetLogx((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->SetLogx();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->SetLogy((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->SetLogy();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->SetName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->SetRefObject((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->SetRefPad((TPad*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->x3d((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->x3d();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDialogCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDialogCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDialogCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDialogCanvas::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDialogCanvas*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDialogCanvas*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDialogCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDialogCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDialogCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_212_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDialogCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDialogCanvas G__TTDialogCanvas;
static int G__G__GPad_212_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDialogCanvas *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDialogCanvas *)((G__getstructoffset())+sizeof(TDialogCanvas)*i);
   else  delete (TDialogCanvas *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAttMarkerCanvas */
static int G__G__GPad_213_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttMarkerCanvas *p=NULL;
   if(G__getaryconstruct()) p=new TAttMarkerCanvas[G__getaryconstruct()];
   else                    p=new TAttMarkerCanvas;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttMarkerCanvas *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TAttMarkerCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TAttMarkerCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TAttMarkerCanvas((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttMarkerCanvas*)(G__getstructoffset()))->UpdateMarkerAttributes((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAttMarkerCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttMarkerCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAttMarkerCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAttMarkerCanvas::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAttMarkerCanvas*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttMarkerCanvas*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttMarkerCanvas*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttMarkerCanvas*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttMarkerCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttMarkerCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttMarkerCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_213_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttMarkerCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttMarkerCanvas G__TTAttMarkerCanvas;
static int G__G__GPad_213_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAttMarkerCanvas *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TAttMarkerCanvas *)((G__getstructoffset())+sizeof(TAttMarkerCanvas)*i);
   else  delete (TAttMarkerCanvas *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSlider */
static int G__G__GPad_216_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSlider *p=NULL;
   if(G__getaryconstruct()) p=new TSlider[G__getaryconstruct()];
   else                    p=new TSlider;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TSlider);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSlider *p=NULL;
   switch(libp->paran) {
   case 9:
      p = new TSlider(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Color_t)G__int(libp->para[6]),(Short_t)G__int(libp->para[7])
,(Short_t)G__int(libp->para[8]));
      break;
   case 8:
      p = new TSlider(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Color_t)G__int(libp->para[6]),(Short_t)G__int(libp->para[7]));
      break;
   case 7:
      p = new TSlider(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Color_t)G__int(libp->para[6]));
      break;
   case 6:
      p = new TSlider(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TSlider);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSlider*)(G__getstructoffset()))->GetObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TSlider*)(G__getstructoffset()))->GetMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TSlider*)(G__getstructoffset()))->GetMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TSlider*)(G__getstructoffset()))->GetMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->SetMethod((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->SetObject((TObject*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->SetObject();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->SetMinimum((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->SetMinimum();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->SetMaximum((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->SetMaximum();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->SetRange((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->SetRange((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->SetRange();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSlider::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSlider::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSlider::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSlider::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSlider*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSlider*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSlider::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSlider::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSlider::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_216_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSlider::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSlider G__TTSlider;
static int G__G__GPad_216_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSlider *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSlider *)((G__getstructoffset())+sizeof(TSlider)*i);
   else  delete (TSlider *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSliderBox */
static int G__G__GPad_217_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSliderBox *p=NULL;
   if(G__getaryconstruct()) p=new TSliderBox[G__getaryconstruct()];
   else                    p=new TSliderBox;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TSliderBox);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSliderBox *p=NULL;
   switch(libp->paran) {
   case 7:
      p = new TSliderBox(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Color_t)G__int(libp->para[4]),(Short_t)G__int(libp->para[5])
,(Short_t)G__int(libp->para[6]));
      break;
   case 6:
      p = new TSliderBox(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Color_t)G__int(libp->para[4]),(Short_t)G__int(libp->para[5]));
      break;
   case 5:
      p = new TSliderBox(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Color_t)G__int(libp->para[4]));
      break;
   case 4:
      p = new TSliderBox(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TSliderBox);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSliderBox*)(G__getstructoffset()))->ExecuteEvent((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSliderBox*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSliderBox*)(G__getstructoffset()))->SetSlider((TSlider*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSliderBox::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSliderBox::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSliderBox::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSliderBox::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSliderBox*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSliderBox*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSliderBox*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSliderBox*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSliderBox::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSliderBox::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSliderBox::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_217_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSliderBox::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GPad_217_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TSliderBox *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TSliderBox(*(TSliderBox*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TSliderBox);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSliderBox G__TTSliderBox;
static int G__G__GPad_217_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSliderBox *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSliderBox *)((G__getstructoffset())+sizeof(TSliderBox)*i);
   else  delete (TSliderBox *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_217_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSliderBox *dest = (TSliderBox*)(G__getstructoffset());
   *dest = (*(TSliderBox*)libp->para[0].ref);
   const TSliderBox& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TControlBarButton */
static int G__G__GPad_218_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TControlBarButton *p=NULL;
   if(G__getaryconstruct()) p=new TControlBarButton[G__getaryconstruct()];
   else                    p=new TControlBarButton;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TControlBarButton *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TControlBarButton(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(const char*)G__int(libp->para[3]));
      break;
   case 3:
      p = new TControlBarButton(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TControlBarButton((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TControlBarButton((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBarButton*)(G__getstructoffset()))->Create();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBarButton*)(G__getstructoffset()))->Action();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TControlBarButton*)(G__getstructoffset()))->GetAction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TControlBarButton*)(G__getstructoffset()))->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBarButton*)(G__getstructoffset()))->SetAction((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBarButton*)(G__getstructoffset()))->SetType((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBarButton*)(G__getstructoffset()))->SetType((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TControlBarButton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TControlBarButton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TControlBarButton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TControlBarButton::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TControlBarButton*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBarButton*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBarButton*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TControlBarButton*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TControlBarButton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TControlBarButton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TControlBarButton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_218_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TControlBarButton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GPad_218_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TControlBarButton *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TControlBarButton(*(TControlBarButton*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TControlBarButton G__TTControlBarButton;
static int G__G__GPad_218_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TControlBarButton *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TControlBarButton *)((G__getstructoffset())+sizeof(TControlBarButton)*i);
   else  delete (TControlBarButton *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_218_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TControlBarButton *dest = (TControlBarButton*)(G__getstructoffset());
   *dest = (*(TControlBarButton*)libp->para[0].ref);
   const TControlBarButton& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDrawPanelHist */
static int G__G__GPad_223_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDrawPanelHist *p=NULL;
   if(G__getaryconstruct()) p=new TDrawPanelHist[G__getaryconstruct()];
   else                    p=new TDrawPanelHist;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDrawPanelHist *p=NULL;
      p = new TDrawPanelHist(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])
,(const TVirtualPad*)G__int(libp->para[4]),(const TObject*)G__int(libp->para[5]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->AddOption((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->Apply((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->Apply();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->BuildStandardButtons();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->ExecuteEvent((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDrawPanelHist*)(G__getstructoffset()))->GetHistogram());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->RecursiveRemove((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->SetDefaults();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->SetSame();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDrawPanelHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDrawPanelHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDrawPanelHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDrawPanelHist::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDrawPanelHist*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDrawPanelHist*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDrawPanelHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDrawPanelHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDrawPanelHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_223_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDrawPanelHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDrawPanelHist G__TTDrawPanelHist;
static int G__G__GPad_223_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDrawPanelHist *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDrawPanelHist *)((G__getstructoffset())+sizeof(TDrawPanelHist)*i);
   else  delete (TDrawPanelHist *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TButton */
static int G__G__GPad_224_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TButton *p=NULL;
   if(G__getaryconstruct()) p=new TButton[G__getaryconstruct()];
   else                    p=new TButton;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TButton);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TButton *p=NULL;
      p = new TButton(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TButton);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Divide();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->ExecuteEvent((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TButton*)(G__getstructoffset()))->GetMethod());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->PaintModified();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Range((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetBorderMode((Short_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetFraming((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetFraming();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TButton*)(G__getstructoffset()))->GetFraming());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetGrid((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetGrid((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetGrid();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetLogx((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetLogx();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetLogy((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetLogy();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetMethod((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->SetName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->x3d((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->x3d();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TButton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TButton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TButton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TButton::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TButton*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TButton*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TButton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TButton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TButton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_224_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TButton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TButton G__TTButton;
static int G__G__GPad_224_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TButton *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TButton *)((G__getstructoffset())+sizeof(TButton)*i);
   else  delete (TButton *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGroupButton */
static int G__G__GPad_225_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGroupButton *p=NULL;
   if(G__getaryconstruct()) p=new TGroupButton[G__getaryconstruct()];
   else                    p=new TGroupButton;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TGroupButton);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGroupButton *p=NULL;
      p = new TGroupButton(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TGroupButton);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGroupButton*)(G__getstructoffset()))->DisplayColorTable((const char*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGroupButton*)(G__getstructoffset()))->ExecuteAction();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGroupButton*)(G__getstructoffset()))->ExecuteEvent((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGroupButton*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGroupButton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGroupButton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGroupButton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGroupButton::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGroupButton*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGroupButton*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGroupButton*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGroupButton*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGroupButton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGroupButton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGroupButton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_225_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGroupButton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGroupButton G__TTGroupButton;
static int G__G__GPad_225_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGroupButton *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGroupButton *)((G__getstructoffset())+sizeof(TGroupButton)*i);
   else  delete (TGroupButton *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TClassTree */
static int G__G__GPad_227_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TClassTree *p=NULL;
   if(G__getaryconstruct()) p=new TClassTree[G__getaryconstruct()];
   else                    p=new TClassTree;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TClassTree);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TClassTree *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TClassTree((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TClassTree((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TClassTree);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->Draw((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TClassTree*)(G__getstructoffset()))->FindClass((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TClassTree*)(G__getstructoffset()))->GetClasses());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TClassTree*)(G__getstructoffset()))->GetSourceDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TClassTree*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TClassTree*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->SaveAs((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->SaveAs();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->SetClasses((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->SetClasses((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->SetSourceDir((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->SetSourceDir();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->SetYoffset((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->SetYoffset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->SetLabelDx((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->SetLabelDx();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->ShowClassesUsedBy((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->ShowClassesUsing((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->ShowLinks((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->ShowLinks();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TClassTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TClassTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TClassTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TClassTree::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TClassTree*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TClassTree*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TClassTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TClassTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TClassTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_227_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TClassTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GPad_227_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TClassTree *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TClassTree(*(TClassTree*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TClassTree);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TClassTree G__TTClassTree;
static int G__G__GPad_227_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TClassTree *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TClassTree *)((G__getstructoffset())+sizeof(TClassTree)*i);
   else  delete (TClassTree *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_227_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TClassTree *dest = (TClassTree*)(G__getstructoffset());
   *dest = (*(TClassTree*)libp->para[0].ref);
   const TClassTree& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TUtilPad */
static int G__G__GPad_229_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TUtilPad *p=NULL;
   if(G__getaryconstruct()) p=new TUtilPad[G__getaryconstruct()];
   else                    p=new TUtilPad;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TUtilPad);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtilPad*)(G__getstructoffset()))->DrawPanel((const TVirtualPad*)G__int(libp->para[0]),(const TObject*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtilPad*)(G__getstructoffset()))->FitPanel((const TVirtualPad*)G__int(libp->para[0]),(const TObject*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtilPad*)(G__getstructoffset()))->FitPanelGraph((const TVirtualPad*)G__int(libp->para[0]),(const TObject*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtilPad*)(G__getstructoffset()))->InspectCanvas((const TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtilPad*)(G__getstructoffset()))->MakeCanvas((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtilPad*)(G__getstructoffset()))->RemoveObject((TObject*)G__int(libp->para[0]),(const TObject*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      TUtilPad::SetPanelVersion((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      TUtilPad::SetPanelVersion();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TUtilPad::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TUtilPad::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TUtilPad::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TUtilPad::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TUtilPad*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtilPad*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtilPad*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtilPad*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TUtilPad::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TUtilPad::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TUtilPad::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_229_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TUtilPad::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GPad_229_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TUtilPad *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TUtilPad(*(TUtilPad*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TUtilPad);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TUtilPad G__TTUtilPad;
static int G__G__GPad_229_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TUtilPad *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TUtilPad *)((G__getstructoffset())+sizeof(TUtilPad)*i);
   else  delete (TUtilPad *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_229_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TUtilPad *dest = (TUtilPad*)(G__getstructoffset());
   *dest = (*(TUtilPad*)libp->para[0].ref);
   const TUtilPad& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFitPanel */
static int G__G__GPad_230_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFitPanel *p=NULL;
   if(G__getaryconstruct()) p=new TFitPanel[G__getaryconstruct()];
   else                    p=new TFitPanel;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TFitPanel);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFitPanel *p=NULL;
      p = new TFitPanel(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])
,(const TVirtualPad*)G__int(libp->para[4]),(const TObject*)G__int(libp->para[5]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TFitPanel);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->AddOption((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->Apply((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->Apply();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->BuildStandardButtons();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->ExecuteEvent((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TFitPanel*)(G__getstructoffset()))->GetObjectFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->RecursiveRemove((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->SetDefaults();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->SetFunction((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->SetSame();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TFitPanel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFitPanel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TFitPanel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TFitPanel::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TFitPanel*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanel*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFitPanel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFitPanel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFitPanel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_230_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFitPanel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFitPanel G__TTFitPanel;
static int G__G__GPad_230_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TFitPanel *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TFitPanel *)((G__getstructoffset())+sizeof(TFitPanel)*i);
   else  delete (TFitPanel *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAttLineCanvas */
static int G__G__GPad_231_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttLineCanvas *p=NULL;
   if(G__getaryconstruct()) p=new TAttLineCanvas[G__getaryconstruct()];
   else                    p=new TAttLineCanvas;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttLineCanvas *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TAttLineCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TAttLineCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TAttLineCanvas((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttLineCanvas*)(G__getstructoffset()))->UpdateLineAttributes((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAttLineCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttLineCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAttLineCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAttLineCanvas::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAttLineCanvas*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttLineCanvas*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttLineCanvas*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttLineCanvas*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttLineCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttLineCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttLineCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_231_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttLineCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttLineCanvas G__TTAttLineCanvas;
static int G__G__GPad_231_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAttLineCanvas *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TAttLineCanvas *)((G__getstructoffset())+sizeof(TAttLineCanvas)*i);
   else  delete (TAttLineCanvas *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TInspectCanvas */
static int G__G__GPad_232_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TInspectCanvas *p=NULL;
   if(G__getaryconstruct()) p=new TInspectCanvas[G__getaryconstruct()];
   else                    p=new TInspectCanvas;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TInspectCanvas *p=NULL;
      p = new TInspectCanvas((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TInspectCanvas*)(G__getstructoffset()))->GetBackward());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TInspectCanvas*)(G__getstructoffset()))->GetForward());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TInspectCanvas*)(G__getstructoffset()))->GetCurObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TInspectCanvas*)(G__getstructoffset()))->GetObjects());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TInspectCanvas::GoBackward();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TInspectCanvas::GoForward();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TInspectCanvas::Inspector((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->InspectObject((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->RecursiveRemove((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->Divide((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->Divide();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetGrid((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetGrid((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetGrid();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetGridx((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetGridx();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetGridy((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetGridy();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetLogx((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetLogx();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetLogy((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetLogy();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetLogz((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetLogz();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetTickx((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetTickx();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetTicky((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->SetTicky();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->x3d((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->x3d();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TInspectCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TInspectCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TInspectCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TInspectCanvas::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TInspectCanvas*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TInspectCanvas*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TInspectCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TInspectCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TInspectCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_232_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TInspectCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TInspectCanvas G__TTInspectCanvas;
static int G__G__GPad_232_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TInspectCanvas *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TInspectCanvas *)((G__getstructoffset())+sizeof(TInspectCanvas)*i);
   else  delete (TInspectCanvas *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAttFillCanvas */
static int G__G__GPad_233_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttFillCanvas *p=NULL;
   if(G__getaryconstruct()) p=new TAttFillCanvas[G__getaryconstruct()];
   else                    p=new TAttFillCanvas;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttFillCanvas *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TAttFillCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TAttFillCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TAttFillCanvas((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttFillCanvas*)(G__getstructoffset()))->UpdateFillAttributes((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAttFillCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttFillCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAttFillCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAttFillCanvas::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAttFillCanvas*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttFillCanvas*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttFillCanvas*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttFillCanvas*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttFillCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttFillCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttFillCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_233_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttFillCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttFillCanvas G__TTAttFillCanvas;
static int G__G__GPad_233_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAttFillCanvas *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TAttFillCanvas *)((G__getstructoffset())+sizeof(TAttFillCanvas)*i);
   else  delete (TAttFillCanvas *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TViewer3DPad */
static int G__G__GPad_235_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TViewer3DPad *p=NULL;
      p=::new((G__gpaddIsrcdIG__GPaddOcxx_tag*)G__getgvp()) TViewer3DPad(*(TVirtualPad*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TViewer3DPad*)(G__getstructoffset()))->PreferLocalFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewer3DPad*)(G__getstructoffset()))->BeginScene();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TViewer3DPad*)(G__getstructoffset()))->BuildingScene());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewer3DPad*)(G__getstructoffset()))->EndScene();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,105,(long)((TViewer3DPad*)(G__getstructoffset()))->AddObject(*(TBuffer3D*)libp->para[0].ref,(Bool_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TViewer3DPad*)(G__getstructoffset()))->AddObject(*(TBuffer3D*)libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TViewer3DPad*)(G__getstructoffset()))->AddObject((UInt_t)G__int(libp->para[0]),*(TBuffer3D*)libp->para[1].ref
,(Bool_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TViewer3DPad*)(G__getstructoffset()))->AddObject((UInt_t)G__int(libp->para[0]),*(TBuffer3D*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TViewer3DPad*)(G__getstructoffset()))->OpenComposite(*(TBuffer3D*)libp->para[0].ref,(Bool_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TViewer3DPad*)(G__getstructoffset()))->OpenComposite(*(TBuffer3D*)libp->para[0].ref);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewer3DPad*)(G__getstructoffset()))->CloseComposite();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewer3DPad*)(G__getstructoffset()))->AddCompositeOp((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TViewer3DPad::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TViewer3DPad::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TViewer3DPad::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TViewer3DPad::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TViewer3DPad*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewer3DPad*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewer3DPad*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TViewer3DPad*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TViewer3DPad::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TViewer3DPad::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TViewer3DPad::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_235_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TViewer3DPad::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TViewer3DPad G__TTViewer3DPad;
static int G__G__GPad_235_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TViewer3DPad *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TViewer3DPad *)((G__getstructoffset())+sizeof(TViewer3DPad)*i))->~G__TTViewer3DPad();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TViewer3DPad *)(G__getstructoffset()))->~G__TTViewer3DPad();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFitPanelGraph */
static int G__G__GPad_236_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFitPanelGraph *p=NULL;
   if(G__getaryconstruct()) p=new TFitPanelGraph[G__getaryconstruct()];
   else                    p=new TFitPanelGraph;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFitPanelGraph *p=NULL;
      p = new TFitPanelGraph(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(UInt_t)G__int(libp->para[2]),(UInt_t)G__int(libp->para[3])
,(const TVirtualPad*)G__int(libp->para[4]),(const TObject*)G__int(libp->para[5]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TFitPanelGraph*)(G__getstructoffset()))->Apply((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TFitPanelGraph*)(G__getstructoffset()))->Apply();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanelGraph*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TFitPanelGraph::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFitPanelGraph::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TFitPanelGraph::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TFitPanelGraph::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TFitPanelGraph*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanelGraph*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanelGraph*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitPanelGraph*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFitPanelGraph::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFitPanelGraph::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFitPanelGraph::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_236_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFitPanelGraph::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFitPanelGraph G__TTFitPanelGraph;
static int G__G__GPad_236_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TFitPanelGraph *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TFitPanelGraph *)((G__getstructoffset())+sizeof(TFitPanelGraph)*i);
   else  delete (TFitPanelGraph *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPaveClass */
static int G__G__GPad_240_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPaveClass *p=NULL;
   if(G__getaryconstruct()) p=new TPaveClass[G__getaryconstruct()];
   else                    p=new TPaveClass;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TPaveClass);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPaveClass *p=NULL;
      p = new TPaveClass(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(const char*)G__int(libp->para[4]),(TClassTree*)G__int(libp->para[5]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TPaveClass);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPaveClass *p=NULL;
      p = new TPaveClass(*(TPaveClass*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TPaveClass);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TPaveClass*)(G__getstructoffset()))->Copy(*(TObject*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->DrawClasses((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->DrawClasses();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPaveClass*)(G__getstructoffset()))->GetClassTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->SaveAs((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->SaveAs();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->SetClasses((const char*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->SetClasses((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->SetClasses();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->ShowClassesUsedBy((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->ShowClassesUsedBy();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->ShowClassesUsing((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->ShowClassesUsing();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->SetClassTree((TClassTree*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->ShowLinks((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->ShowLinks();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPaveClass::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPaveClass::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPaveClass::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPaveClass::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPaveClass*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPaveClass*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPaveClass::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPaveClass::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPaveClass::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_240_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPaveClass::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPaveClass G__TTPaveClass;
static int G__G__GPad_240_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPaveClass *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPaveClass *)((G__getstructoffset())+sizeof(TPaveClass)*i);
   else  delete (TPaveClass *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GPad_240_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPaveClass *dest = (TPaveClass*)(G__getstructoffset());
   *dest = (*(TPaveClass*)libp->para[0].ref);
   const TPaveClass& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAttTextCanvas */
static int G__G__GPad_242_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttTextCanvas *p=NULL;
   if(G__getaryconstruct()) p=new TAttTextCanvas[G__getaryconstruct()];
   else                    p=new TAttTextCanvas;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAttTextCanvas *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TAttTextCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      p = new TAttTextCanvas(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TAttTextCanvas((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttTextCanvas*)(G__getstructoffset()))->UpdateTextAttributes((Int_t)G__int(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Float_t)G__double(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAttTextCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttTextCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAttTextCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAttTextCanvas::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAttTextCanvas*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttTextCanvas*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttTextCanvas*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAttTextCanvas*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttTextCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttTextCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAttTextCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GPad_242_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAttTextCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttTextCanvas G__TTAttTextCanvas;
static int G__G__GPad_242_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAttTextCanvas *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TAttTextCanvas *)((G__getstructoffset())+sizeof(TAttTextCanvas)*i);
   else  delete (TAttTextCanvas *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TCanvas */

/* TPad */

/* TAttCanvas */

/* TControlBar */

/* TDialogCanvas */

/* TAttMarkerCanvas */

/* TSlider */

/* TSliderBox */

/* TControlBarButton */

/* TDrawPanelHist */

/* TButton */

/* TGroupButton */

/* TClassTree */

/* TUtilPad */

/* TFitPanel */

/* TAttLineCanvas */

/* TInspectCanvas */

/* TAttFillCanvas */

/* TViewer3DPad */

/* TFitPanelGraph */

/* TPaveClass */

/* TAttTextCanvas */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__GPad {
 public:
  G__Sizep2memfuncG__GPad() {p=&G__Sizep2memfuncG__GPad::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__GPad::*p)();
};

size_t G__get_sizep2memfuncG__GPad()
{
  G__Sizep2memfuncG__GPad a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__GPad() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TCanvas))) {
     TCanvas *G__Lderived;
     G__Lderived=(TCanvas*)0x1000;
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TPad))) {
     TPad *G__Lderived;
     G__Lderived=(TPad*)0x1000;
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TControlBar))) {
     TControlBar *G__Lderived;
     G__Lderived=(TControlBar*)0x1000;
     {
       TControlBarButton *G__Lpbase=(TControlBarButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar),G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar),G__get_linked_tagnum(&G__G__GPadLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas))) {
     TDialogCanvas *G__Lderived;
     G__Lderived=(TDialogCanvas*)0x1000;
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas))) {
     TAttMarkerCanvas *G__Lderived;
     G__Lderived=(TAttMarkerCanvas*)0x1000;
     {
       TDialogCanvas *G__Lpbase=(TDialogCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),G__get_linked_tagnum(&G__G__GPadLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TSlider))) {
     TSlider *G__Lderived;
     G__Lderived=(TSlider*)0x1000;
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox))) {
     TSliderBox *G__Lderived;
     G__Lderived=(TSliderBox*)0x1000;
     {
       TWbox *G__Lpbase=(TWbox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),G__get_linked_tagnum(&G__G__GPadLN_TWbox),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TBox *G__Lpbase=(TBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),G__get_linked_tagnum(&G__G__GPadLN_TBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton))) {
     TControlBarButton *G__Lderived;
     G__Lderived=(TControlBarButton*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),G__get_linked_tagnum(&G__G__GPadLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist))) {
     TDrawPanelHist *G__Lderived;
     G__Lderived=(TDrawPanelHist*)0x1000;
     {
       TDialogCanvas *G__Lpbase=(TDialogCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),G__get_linked_tagnum(&G__G__GPadLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TButton))) {
     TButton *G__Lderived;
     G__Lderived=(TButton*)0x1000;
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton))) {
     TGroupButton *G__Lderived;
     G__Lderived=(TGroupButton*)0x1000;
     {
       TButton *G__Lpbase=(TButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TButton),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TClassTree))) {
     TClassTree *G__Lderived;
     G__Lderived=(TClassTree*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TClassTree),G__get_linked_tagnum(&G__G__GPadLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TClassTree),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TUtilPad))) {
     TUtilPad *G__Lderived;
     G__Lderived=(TUtilPad*)0x1000;
     {
       TVirtualUtilPad *G__Lpbase=(TVirtualUtilPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TUtilPad),G__get_linked_tagnum(&G__G__GPadLN_TVirtualUtilPad),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TUtilPad),G__get_linked_tagnum(&G__G__GPadLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TUtilPad),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel))) {
     TFitPanel *G__Lderived;
     G__Lderived=(TFitPanel*)0x1000;
     {
       TDialogCanvas *G__Lpbase=(TDialogCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),G__get_linked_tagnum(&G__G__GPadLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas))) {
     TAttLineCanvas *G__Lderived;
     G__Lderived=(TAttLineCanvas*)0x1000;
     {
       TDialogCanvas *G__Lpbase=(TDialogCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),G__get_linked_tagnum(&G__G__GPadLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas))) {
     TInspectCanvas *G__Lderived;
     G__Lderived=(TInspectCanvas*)0x1000;
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas))) {
     TAttFillCanvas *G__Lderived;
     G__Lderived=(TAttFillCanvas*)0x1000;
     {
       TDialogCanvas *G__Lpbase=(TDialogCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),G__get_linked_tagnum(&G__G__GPadLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad))) {
     TViewer3DPad *G__Lderived;
     G__Lderived=(TViewer3DPad*)0x1000;
     {
       TVirtualViewer3D *G__Lpbase=(TVirtualViewer3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad),G__get_linked_tagnum(&G__G__GPadLN_TVirtualViewer3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph))) {
     TFitPanelGraph *G__Lderived;
     G__Lderived=(TFitPanelGraph*)0x1000;
     {
       TFitPanel *G__Lpbase=(TFitPanel*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDialogCanvas *G__Lpbase=(TDialogCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),G__get_linked_tagnum(&G__G__GPadLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass))) {
     TPaveClass *G__Lderived;
     G__Lderived=(TPaveClass*)0x1000;
     {
       TPaveLabel *G__Lpbase=(TPaveLabel*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TPaveLabel),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TPave *G__Lpbase=(TPave*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TPave),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TBox *G__Lpbase=(TBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas))) {
     TAttTextCanvas *G__Lderived;
     G__Lderived=(TAttTextCanvas*)0x1000;
     {
       TDialogCanvas *G__Lpbase=(TDialogCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TCanvas *G__Lpbase=(TCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),G__get_linked_tagnum(&G__G__GPadLN_TCanvas),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPad *G__Lpbase=(TPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),G__get_linked_tagnum(&G__G__GPadLN_TPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TVirtualPad *G__Lpbase=(TVirtualPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),G__get_linked_tagnum(&G__G__GPadLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttPad *G__Lpbase=(TAttPad*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttPad),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),G__get_linked_tagnum(&G__G__GPadLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),G__get_linked_tagnum(&G__G__GPadLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__GPad() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,
-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__GPadLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GPadLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GPadLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GPadLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GPadLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("Style_t",115,-1,0,
-1);
   G__setnewtype(-1,"Style number (short)",0);
   G__search_typename2("Width_t",115,-1,0,
-1);
   G__setnewtype(-1,"Line width (short)",0);
   G__search_typename2("Color_t",115,-1,0,
-1);
   G__setnewtype(-1,"Color number (short)",0);
   G__search_typename2("Size_t",102,-1,0,
-1);
   G__setnewtype(-1,"Attribute size (float)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* EColor */

   /* ELineStyle */

   /* EMarkerStyle */

   /* TCanvas */
static void G__setup_memvarTCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas));
   { TCanvas *p; p=(TCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas),-1,-1,2,"fCatt=",0,"Canvas attributes");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fDISPLAY=",0,"Name of destination screen");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Size_t"),-1,2,"fXsizeUser=",0,"User specified size of canvas along X in CM");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Size_t"),-1,2,"fYsizeUser=",0,"User specified size of canvas along Y in CM");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Size_t"),-1,2,"fXsizeReal=",0,"Current size of canvas along X in CM");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Size_t"),-1,2,"fYsizeReal=",0,"Current size of canvas along Y in CM");
   G__memvar_setup((void*)NULL,115,0,0,-1,G__defined_typename("Color_t"),-1,2,"fHighLightColor=",0,"Highlight color of active pad");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDoubleBuffer=",0,"Double buffer flag (0=off, 1=on)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWindowTopX=",0,"Top X position of window (in pixels)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWindowTopY=",0,"Top Y position of window (in pixels)");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fWindowWidth=",0,"Width of window (including borders, etc.)");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fWindowHeight=",0,"Height of window (including menubar, borders, etc.)");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCw=",0,"Width of the canvas along X (pixels)");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fCh=",0,"Height of the canvas along Y (pixels)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEvent=",0,"!Type of current or last handled event");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventX=",0,"!Last X mouse position in canvas");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventY=",0,"!Last Y mouse position in canvas");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCanvasID=",0,"!Canvas identifier");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fSelected=",0,"!Currently selected object");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSelectedX=",0,"!X of selected object");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSelectedY=",0,"!Y of selected object");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fSelectedOpt=",0,"!Drawing option of selected object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,-1,2,"fSelectedPad=",0,"!Pad containing currently selected object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,-1,2,"fPadSave=",0,"!Pointer to saved pad in HandleInput");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TCanvasImp),-1,-1,2,"fCanvasImp=",0,"!Window system specific canvas implementation");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TContextMenu),-1,-1,2,"fContextMenu=",0,"!Context menu pointer");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBatch=",0,"!True when in batchmode");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUpdating=",0,"!True when Updating the canvas");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRetained=",0,"Retain structure flag");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fShowEventStatus=",0,"Show event status panel");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fAutoExec=",0,"To auto exec the list of pad TExecs");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMoveOpaque=",0,"Move objects in opaque mode");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fResizeOpaque=",0,"Resize objects in opaque mode");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMenuBar=",0,"False if no menubar is displayed");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"fgIsFolder=",0,"Indicates if canvas can be browsed as a folder");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fShowToolBar=",0,"Show toolbar");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fShowEditor=",0,"Show side frame or old Editor");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPad */
static void G__setup_memvarTPad(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad));
   { TPad *p; p=(TPad*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,4,"fTip=",0,"! tool tip associated with box");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX1=",0,"X of lower X coordinate");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY1=",0,"Y of lower Y coordinate");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX2=",0,"X of upper X coordinate");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY2=",0,"Y of upper Y coordinate");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXtoAbsPixelk=",0,"Conversion coefficient for X World to absolute pixel");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXtoPixelk=",0,"Conversion coefficient for X World to pixel");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXtoPixel=",0,"xpixel = fXtoPixelk + fXtoPixel*xworld");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYtoAbsPixelk=",0,"Conversion coefficient for Y World to absolute pixel");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYtoPixelk=",0,"Conversion coefficient for Y World to pixel");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYtoPixel=",0,"ypixel = fYtoPixelk + fYtoPixel*yworld");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUtoAbsPixelk=",0,"Conversion coefficient for U NDC to absolute pixel");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUtoPixelk=",0,"Conversion coefficient for U NDC to pixel");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUtoPixel=",0,"xpixel = fUtoPixelk + fUtoPixel*undc");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVtoAbsPixelk=",0,"Conversion coefficient for V NDC to absolute pixel");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVtoPixelk=",0,"Conversion coefficient for V NDC to pixel");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVtoPixel=",0,"ypixel = fVtoPixelk + fVtoPixel*vndc");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsPixeltoXk=",0,"Conversion coefficient for absolute pixel to X World");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPixeltoXk=",0,"Conversion coefficient for pixel to X World");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPixeltoX=",0,"xworld = fPixeltoXk + fPixeltoX*xpixel");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsPixeltoYk=",0,"Conversion coefficient for absolute pixel to Y World");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPixeltoYk=",0,"Conversion coefficient for pixel to Y World");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPixeltoY=",0,"yworld = fPixeltoYk + fPixeltoY*ypixel");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXlowNDC=",0,"X bottom left corner of pad in NDC [0,1]");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYlowNDC=",0,"Y bottom left corner of pad in NDC [0,1]");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWNDC=",0,"Width of pad along X in NDC");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHNDC=",0,"Height of pad along Y in NDC");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsXlowNDC=",0,"Absolute X top left corner of pad in NDC [0,1]");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsYlowNDC=",0,"Absolute Y top left corner of pad in NDC [0,1]");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsWNDC=",0,"Absolute Width of pad along X in NDC");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAbsHNDC=",0,"Absolute Height of pad along Y in NDC");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUxmin=",0,"Minimum value on the X axis");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUymin=",0,"Minimum value on the Y axis");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUxmax=",0,"Maximum value on the X axis");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fUymax=",0,"Maximum value on the Y axis");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"theta angle to view as lego/surface");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"phi angle   to view as lego/surface");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAspectRatio=",0,"ratio of w/h in case of fixed ratio");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPixmapID=",0,"! Off-screen pixmap identifier");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumber=",0,"pad number identifier");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTickx=",0,"Set to 1 if tick marks along X");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTicky=",0,"Set to 1 if tick marks along Y");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLogx=",0,"(=0 if X linear scale, =1 if log scale)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLogy=",0,"(=0 if Y linear scale, =1 if log scale)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLogz=",0,"(=0 if Z linear scale, =1 if log scale)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPadPaint=",0,"Set to 1 while painting the pad");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCrosshair=",0,"Crosshair type (0 if no crosshair requested)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCrosshairPos=",0,"Position of crosshair");
   G__memvar_setup((void*)NULL,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fBorderSize=",0,"pad bordersize in pixels");
   G__memvar_setup((void*)NULL,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"fBorderMode=",0,"Bordermode (-1=down, 0 = no border, 1=up)");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fModified=",0,"Set to true when pad is modified");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fGridx=",0,"Set to true if grid along X");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fGridy=",0,"Set to true if grid along Y");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fAbsCoord=",0,"Use absolute coordinates");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fEditable=",0,"True if canvas is editable");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFixedAspectRatio=",0,"True if fixed aspect ratio");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,-1,2,"fMother=",0,"! pointer to mother of the list");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TCanvas),-1,-1,2,"fCanvas=",0,"! Pointer to mother canvas");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,-1,2,"fPrimitives=",0,"->List of primitives (subpads)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,-1,2,"fExecs=",0,"List of commands to be executed when a pad event occurs");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fName=",0,"Pad name");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fTitle=",0,"Pad title");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TFrame),-1,-1,2,"fFrame=",0,"! Pointer to 2-D frame (if one exists)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TView),-1,-1,2,"fView=",0,"! Pointer to 3-D view (if one exists)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fPadPointer=",0,"! free pointer");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TPadView3D),-1,-1,2,"fPadView3D=",0,"! 3D View of this TPad");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"fgMaxPickDistance=",0,"Maximum Pick Distance");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TVirtualViewer3D),-1,-1,2,"fViewer3D=",0,"! Current 3D viewer ");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TPadcLcLdA),-1,-2,1,"kFraming=64",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TPadcLcLdA),-1,-2,1,"kHori=512",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TPadcLcLdA),-1,-2,1,"kPrintingPS=2048",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TPadcLcLdA),-1,-2,1,"kClearAfterCR=4096",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAttCanvas */
static void G__setup_memvarTAttCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas));
   { TAttCanvas *p; p=(TAttCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fXBetween=",0,"X distance between pads");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fYBetween=",0,"Y distance between pads");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTitleFromTop=",0,"Y distance of Global Title from top");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fXdate=",0,"X position where to draw the date");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fYdate=",0,"X position where to draw the date");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fAdate=",0,"Alignment for the date");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TControlBar */
static void G__setup_memvarTControlBar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar));
   { TControlBar *p; p=(TControlBar*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TControlBarImp),-1,-1,2,"fControlBarImp=",0,"system specific implementation");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fOrientation=",0,"orientation");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,-1,2,"fButtons=",0,"list of buttons");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNoroc=",0,"number of rows or columns");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TControlBarcLcLdA),-1,-2,1,"kVertical=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TControlBarcLcLdA),-1,-2,1,"kHorizontal=2",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDialogCanvas */
static void G__setup_memvarTDialogCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas));
   { TDialogCanvas *p; p=(TDialogCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fRefObject=",0,"Pointer to object to set attributes");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,-1,2,"fRefPad=",0,"Pad containing object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAttMarkerCanvas */
static void G__setup_memvarTAttMarkerCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas));
   { TAttMarkerCanvas *p; p=(TAttMarkerCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSlider */
static void G__setup_memvarTSlider(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider));
   { TSlider *p; p=(TSlider*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinimum=",0,"Slider minimum value in [0,1]");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaximum=",0,"Slider maximum value in [0,1]");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fObject=",0,"!Pointer to associated object");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fMethod=",0,"command to be executed when slider is changed");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSliderBox */
static void G__setup_memvarTSliderBox(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox));
   { TSliderBox *p; p=(TSliderBox*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TSlider),-1,-1,2,"fSlider=",0,"Pointer to slider");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TControlBarButton */
static void G__setup_memvarTControlBarButton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton));
   { TControlBarButton *p; p=(TControlBarButton*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"button type");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fAction=",0,"action to be executed");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButtoncLcLdA),-1,-2,1,"kButton=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButtoncLcLdA),-1,-2,1,"kDrawnButton=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButtoncLcLdA),-1,-2,1,"kSeparator=3",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDrawPanelHist */
static void G__setup_memvarTDrawPanelHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist));
   { TDrawPanelHist *p; p=(TDrawPanelHist*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fOption=",0,"Fitting options");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TSlider),-1,-1,2,"fSlider=",0,"Pointer to fitpanel slider");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fHistogram=",0,"Pointer to histogram");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TButton */
static void G__setup_memvarTButton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton));
   { TButton *p; p=(TButton*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFocused=",0,"If cursor is in...");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFraming=",0,"True if you want a frame to be painted when pressed");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fMethod=",0,"Method to be executed by this button");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGroupButton */
static void G__setup_memvarTGroupButton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton));
   { TGroupButton *p; p=(TGroupButton*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TClassTree */
static void G__setup_memvarTClassTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TClassTree));
   { TClassTree *p; p=(TClassTree*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fClasses=",0,"List of classes to be drawn");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fYoffset=",0,"offset at top of picture in per cent of pad");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fLabelDx=",0,"width along x of TPaveLabels in per cent of pad");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNclasses=",0,"current number of classes");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fShowCod=",0,"if 1 show classes referenced by implementation");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fShowMul=",0,"if 1 show multiple inheritance");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fShowHas=",0,"if 1 show \"has a\" relationship");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fShowRef=",0,"if 1 show classes relationship other than inheritance");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCstatus=",0,"[fNclasses] classes status");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdata=",0,"[fNclasses] Number of data members per class");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fParents=",0,"[fNclasses] parent number of classes (permanent)");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCparent=",0,"!parent number of classes (temporary)");
   G__memvar_setup((void*)NULL,67,2,0,-1,-1,-1,2,"fDerived=",0,"![fNclasses] table to indicate if i derives from j");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-1,2,"fCpointer=",0,"![fNclasses] pointers to the TClass objects");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fCnames=",0,"![fNclasses] class names");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fCtitles=",0,"![fNclasses] class titles");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fOptions=",0,"![fNclasses] List of options per class");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fSourceDir=",0,"Concatenated source directories");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,-1,2,"fLinks=",0,"![fNclasses] for each class, the list of referenced(ing) classes");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TUtilPad */
static void G__setup_memvarTUtilPad(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TUtilPad));
   { TUtilPad *p; p=(TUtilPad*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgPanelVersion=",0,"DrawPanel version (0=old, 1= new)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFitPanel */
static void G__setup_memvarTFitPanel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel));
   { TFitPanel *p; p=(TFitPanel*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fOption=",0,"Fitting options");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fFunction=",0,"Function to fit");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GPadLN_TString),-1,-1,2,"fSame=",0,"graphics option to superimpose new fit on existing picture");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TSlider),-1,-1,2,"fSlider=",0,"Pointer to fitpanel slider");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fObjectFit=",0,"Pointer to object to fit");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAttLineCanvas */
static void G__setup_memvarTAttLineCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas));
   { TAttLineCanvas *p; p=(TAttLineCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TInspectCanvas */
static void G__setup_memvarTInspectCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas));
   { TInspectCanvas *p; p=(TInspectCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TButton),-1,-1,2,"fBackward=",0,"Pointer to the Backward button");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TButton),-1,-1,2,"fForward=",0,"Pointer to the Forward button");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,-1,2,"fObjects=",0,"List of objects inspected");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,-1,2,"fCurObject=",0,"Pointer to object being inspected");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAttFillCanvas */
static void G__setup_memvarTAttFillCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas));
   { TAttFillCanvas *p; p=(TAttFillCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TViewer3DPad */
static void G__setup_memvarTViewer3DPad(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad));
   { TViewer3DPad *p; p=(TViewer3DPad*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,1,0,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),-1,-1,4,"fPad=",0,"the pad we paint into.");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fBuilding=",0,"is scene being built?");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFitPanelGraph */
static void G__setup_memvarTFitPanelGraph(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph));
   { TFitPanelGraph *p; p=(TFitPanelGraph*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPaveClass */
static void G__setup_memvarTPaveClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass));
   { TPaveClass *p; p=(TPaveClass*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClassTree),-1,-1,2,"fClassTree=",0,"Pointer to the TClassTree referencing this object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAttTextCanvas */
static void G__setup_memvarTAttTextCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas));
   { TAttTextCanvas *p; p=(TAttTextCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__GPad() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTCanvas(void) {
   /* TCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas));
   G__memfunc_setup("TCanvas",688,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GPadLN_TCanvas),-1,0,1,1,4,0,"u 'TCanvas' - 11 - canvas","cannot copy canvas, use TObject::Clone()",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GPadLN_TCanvas),-1,1,1,1,4,0,"u 'TCanvas' - 11 - rhs","idem",(void*)NULL,0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CopyPixmaps",1149,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawEventStatus",1556,(G__InterfaceMethod)NULL,121,-1,-1,0,4,1,4,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y U 'TObject' - 0 - selected",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RunAutoExec",1107,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Constructor",1190,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Constructor",1190,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - form",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Constructor",1190,(G__InterfaceMethod)NULL,121,-1,-1,0,4,1,2,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Constructor",1190,(G__InterfaceMethod)NULL,121,-1,-1,0,6,1,2,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - wtopx i - 'Int_t' 0 - wtopy "
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Destructor",1071,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCanvas",688,G__G__GPad_199_4_1,105,G__get_linked_tagnum(&G__G__GPadLN_TCanvas),-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE build",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCanvas",688,G__G__GPad_199_5_1,105,G__get_linked_tagnum(&G__G__GPadLN_TCanvas),-1,0,3,1,1,0,
"C - - 10 - name C - - 10 \"\" title "
"i - 'Int_t' 0 1 form",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCanvas",688,G__G__GPad_199_6_1,105,G__get_linked_tagnum(&G__G__GPadLN_TCanvas),-1,0,4,1,1,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCanvas",688,G__G__GPad_199_7_1,105,G__get_linked_tagnum(&G__G__GPadLN_TCanvas),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - wtopx i - 'Int_t' 0 - wtopy "
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCanvas",688,G__G__GPad_199_8_1,105,G__get_linked_tagnum(&G__G__GPadLN_TCanvas),-1,0,4,1,1,0,
"C - - 10 - name i - 'Int_t' 0 - ww "
"i - 'Int_t' 0 - wh i - 'Int_t' 0 - winid",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__GPad_199_9_1,85,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),-1,0,1,1,1,0,"i - 'Int_t' 0 0 subpadnumber",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Browse",626,G__G__GPad_199_0_2,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clear",487,G__G__GPad_199_1_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Close",502,G__G__GPad_199_2_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Delete",595,G__G__GPad_199_3_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DisconnectWidget",1646,G__G__GPad_199_4_2,121,-1,-1,0,0,1,1,0,"","used by TCanvasImp",(void*)NULL,0);
   G__memfunc_setup("Draw",398,G__G__GPad_199_5_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawClone",895,G__G__GPad_199_6_2,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("DrawClonePad",1172,G__G__GPad_199_7_2,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,0,1,1,0,"","*MENU*",(void*)NULL,1);
   G__memfunc_setup("EditorBar",892,G__G__GPad_199_8_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("EnterLeave",1003,G__G__GPad_199_9_2,121,-1,-1,0,2,1,1,0,
"U 'TPad' - 0 - prevSelPad U 'TObject' - 0 - prevSelObj",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FeedbackMode",1162,G__G__GPad_199_0_3,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - set",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Flush",514,G__G__GPad_199_1_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UseCurrentStyle",1569,G__G__GPad_199_2_3,121,-1,-1,0,0,1,1,0,"","*MENU*",(void*)NULL,1);
   G__memfunc_setup("ForceUpdate",1106,G__G__GPad_199_3_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDISPLAY",822,G__G__GPad_199_4_3,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetContextMenu",1434,G__G__GPad_199_5_3,85,G__get_linked_tagnum(&G__G__GPadLN_TContextMenu),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDoubleBuffer",1493,G__G__GPad_199_6_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEvent",802,G__G__GPad_199_7_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEventX",890,G__G__GPad_199_8_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEventY",891,G__G__GPad_199_9_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetHighLightColor",1687,G__G__GPad_199_0_4,115,-1,G__defined_typename("Color_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPadSave",964,G__G__GPad_199_1_4,85,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSelected",1097,G__G__GPad_199_2_4,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSelectedX",1185,G__G__GPad_199_3_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSelectedY",1186,G__G__GPad_199_4_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSelectedOpt",1404,G__G__GPad_199_5_4,67,-1,G__defined_typename("Option_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSelectedPad",1374,G__G__GPad_199_6_4,85,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetShowEventStatus",1863,G__G__GPad_199_7_4,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetShowToolBar",1396,G__G__GPad_199_8_4,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetShowEditor",1320,G__G__GPad_199_9_4,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAutoExec",1086,G__G__GPad_199_0_5,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetXsizeUser",1234,G__G__GPad_199_1_5,102,-1,G__defined_typename("Size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetYsizeUser",1235,G__G__GPad_199_2_5,102,-1,G__defined_typename("Size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetXsizeReal",1207,G__G__GPad_199_3_5,102,-1,G__defined_typename("Size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetYsizeReal",1208,G__G__GPad_199_4_5,102,-1,G__defined_typename("Size_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCanvasID",1033,G__G__GPad_199_5_5,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCanvasImp",1186,G__G__GPad_199_6_5,85,G__get_linked_tagnum(&G__G__GPadLN_TCanvasImp),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWindowTopX",1315,G__G__GPad_199_7_5,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWindowTopY",1316,G__G__GPad_199_8_5,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWindowWidth",1432,G__G__GPad_199_9_5,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWindowHeight",1521,G__G__GPad_199_0_6,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWw",494,G__G__GPad_199_1_6,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetWh",479,G__G__GPad_199_2_6,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCanvasPar",1183,G__G__GPad_199_3_6,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 1 - wtopx i - 'Int_t' 1 - wtopy "
"h - 'UInt_t' 1 - ww h - 'UInt_t' 1 - wh",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleInput",1116,G__G__GPad_199_4_6,121,-1,-1,0,3,1,1,0,
"i 'EEventType' - 0 - button i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HasMenuBar",966,G__G__GPad_199_5_6,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Iconify",721,G__G__GPad_199_6_6,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsBatch",670,G__G__GPad_199_7_6,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsFolder",792,G__G__GPad_199_8_6,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsRetained",1000,G__G__GPad_199_9_6,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ls",223,G__G__GPad_199_0_7,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MoveOpaque",1026,G__G__GPad_199_1_7,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 set",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("OpaqueMoving",1243,G__G__GPad_199_2_7,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OpaqueResizing",1462,G__G__GPad_199_3_7,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__GPad_199_4_7,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Pick",391,G__G__GPad_199_5_7,85,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,0,3,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"U 'TObjLink' - 1 - pickobj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Pick",391,G__G__GPad_199_6_7,85,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,0,3,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"U 'TObject' - 0 - prevSelObj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Picked",592,G__G__GPad_199_7_7,121,-1,-1,0,3,1,1,0,
"U 'TPad' - 0 - selpad U 'TObject' - 0 - selected "
"i - 'Int_t' 0 - event","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("ProcessedEvent",1450,G__G__GPad_199_8_7,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y U 'TObject' - 0 - selected","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Selected",809,G__G__GPad_199_9_7,121,-1,-1,0,3,1,1,0,
"U 'TVirtualPad' - 0 - pad U 'TObject' - 0 - obj "
"i - 'Int_t' 0 - event","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Closed",602,G__G__GPad_199_0_8,121,-1,-1,0,0,1,1,0,"","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("Resize",626,G__G__GPad_199_1_8,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeOpaque",1245,G__G__GPad_199_2_8,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 set",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SaveSource",1024,G__G__GPad_199_3_8,121,-1,-1,0,2,1,1,0,
"C - - 10 \"\" filename C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SavePrimitive",1352,G__G__GPad_199_4_8,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetCursor",938,G__G__GPad_199_5_8,121,-1,-1,0,1,1,1,0,"i 'ECursor' - 0 - cursor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDoubleBuffer",1505,G__G__GPad_199_6_8,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 mode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFixedAspectRatio",1915,G__G__GPad_199_7_8,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE fixed","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("SetWindowPosition",1785,G__G__GPad_199_8_8,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetWindowSize",1343,G__G__GPad_199_9_8,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetCanvasSize",1315,G__G__GPad_199_0_9,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetHighLightColor",1699,G__G__GPad_199_1_9,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSelected",1109,G__G__GPad_199_2_9,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetSelectedPad",1386,G__G__GPad_199_3_9,121,-1,-1,0,1,1,1,0,"U 'TPad' - 0 - pad",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Show",417,G__G__GPad_199_4_9,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Size",411,G__G__GPad_199_5_9,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 0 xsizeuser f - 'Float_t' 0 0 ysizeuser",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBatch",782,G__G__GPad_199_6_9,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE batch",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFolder",904,G__G__GPad_199_7_9,121,-1,-1,0,1,3,1,0,"g - 'Bool_t' 0 kTRUE isfolder",(char*)NULL,(void*)(void (*)(Bool_t))(&TCanvas::SetFolder),0);
   G__memfunc_setup("SetRetained",1112,G__G__GPad_199_8_9,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE retained",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTitle",814,G__G__GPad_199_9_9,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" title",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ToggleEventStatus",1768,G__G__GPad_199_0_10,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ToggleAutoExec",1408,G__G__GPad_199_1_10,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ToggleToolBar",1301,G__G__GPad_199_2_10,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ToggleEditor",1225,G__G__GPad_199_3_10,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Update",611,G__G__GPad_199_4_10,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeDefCanvas",1257,G__G__GPad_199_5_10,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCanvas::MakeDefCanvas),0);
   G__memfunc_setup("Class",502,G__G__GPad_199_6_10,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCanvas::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_199_7_10,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCanvas::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_199_8_10,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCanvas::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_199_9_10,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCanvas::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_199_0_11,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_199_1_11,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_199_2_11,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_199_3_11,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_199_4_11,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCanvas::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_199_5_11,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCanvas::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_199_6_11,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCanvas::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_199_7_11,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCanvas::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TCanvas",814,G__G__GPad_199_8_11,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPad(void) {
   /* TPad */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad));
   G__memfunc_setup("DestroyExternalViewer3D",2326,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,2,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteEvent",1237,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HideToolTip",1093,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"i - 'Int_t' 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintBorder",1114,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"s - 'Color_t' 0 - color g - 'Bool_t' 0 - tops",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PaintBorderPS",1277,(G__InterfaceMethod)NULL,121,-1,-1,0,8,1,2,0,
"d - 'Double_t' 0 - xl d - 'Double_t' 0 - yl "
"d - 'Double_t' 0 - xt d - 'Double_t' 0 - yt "
"i - 'Int_t' 0 - bmode i - 'Int_t' 0 - bsize "
"i - 'Int_t' 0 - dark i - 'Int_t' 0 - light",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintDate",890,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBatch",782,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"g - 'Bool_t' 0 kTRUE batch",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TPad",361,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,0,1,1,4,0,"u 'TPad' - 11 - pad","cannot copy pads, use TObject::Clone()",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,1,1,1,4,0,"u 'TPad' - 11 - rhs","idem",(void*)NULL,0);
   G__memfunc_setup("CopyBackgroundPixmap",2058,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,0,
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CopyBackgroundPixmaps",2173,(G__InterfaceMethod)NULL,121,-1,-1,0,4,1,4,0,
"U 'TPad' - 0 - start U 'TPad' - 0 - stop "
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPad",361,G__G__GPad_205_4_1,105,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPad",361,G__G__GPad_205_5_1,105,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,0,9,1,1,0,
"C - - 10 - name C - - 10 - title "
"d - 'Double_t' 0 - xlow d - 'Double_t' 0 - ylow "
"d - 'Double_t' 0 - xup d - 'Double_t' 0 - yup "
"s - 'Color_t' 0 -1 color s - 'Short_t' 0 -1 bordersize "
"s - 'Short_t' 0 -2 bordermode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AbsCoordinates",1425,G__G__GPad_205_6_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - set",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AbsPixeltoX",1107,G__G__GPad_205_7_1,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - px",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AbsPixeltoY",1108,G__G__GPad_205_8_1,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AbsPixeltoXY",1196,G__G__GPad_205_9_1,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - xpixel i - 'Int_t' 0 - ypixel "
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddExec",654,G__G__GPad_205_0_2,121,-1,-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - command",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AutoExec",798,G__G__GPad_205_1_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Browse",626,G__G__GPad_205_2_2,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("cd",199,G__G__GPad_205_3_2,85,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),-1,0,1,1,1,0,"i - 'Int_t' 0 0 subpadnumber",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clear",487,G__G__GPad_205_4_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clip",392,G__G__GPad_205_5_2,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"F - 'Float_t' 0 - x F - 'Float_t' 0 - y "
"f - 'Float_t' 0 - xclipl f - 'Float_t' 0 - yclipb "
"f - 'Float_t' 0 - xclipr f - 'Float_t' 0 - yclipt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clip",392,G__G__GPad_205_6_2,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"D - 'Double_t' 0 - x D - 'Double_t' 0 - y "
"d - 'Double_t' 0 - xclipl d - 'Double_t' 0 - yclipb "
"d - 'Double_t' 0 - xclipr d - 'Double_t' 0 - yclipt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClippingCode",1201,G__G__GPad_205_7_2,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - xcl1 d - 'Double_t' 0 - ycl1 "
"d - 'Double_t' 0 - xcl2 d - 'Double_t' 0 - ycl2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Close",502,G__G__GPad_205_8_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Closed",602,G__G__GPad_205_9_2,121,-1,-1,0,0,1,1,0,"","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("CopyPixmap",1034,G__G__GPad_205_0_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CopyPixmaps",1149,G__G__GPad_205_1_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeleteExec",984,G__G__GPad_205_2_3,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Divide",597,G__G__GPad_205_3_3,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 1 nx i - 'Int_t' 0 1 ny "
"f - 'Float_t' 0 0.01 xmargin f - 'Float_t' 0 0.01 ymargin "
"i - 'Int_t' 0 0 color","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__GPad_205_4_3,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawClassObject",1499,G__G__GPad_205_5_3,121,-1,-1,0,2,1,1,0,
"U 'TObject' - 10 - obj C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawColorTable",1397,G__G__GPad_205_6_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPad::DrawColorTable),0);
   G__memfunc_setup("DrawCrosshair",1340,G__G__GPad_205_7_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawFrame",889,G__G__GPad_205_8_3,85,G__get_linked_tagnum(&G__G__GPadLN_TH1F),-1,0,5,1,1,0,
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax "
"C - - 10 \"\" title",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindObject",984,G__G__GPad_205_9_3,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,1,1,1,8,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindObject",984,G__G__GPad_205_0_4,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,1,1,1,8,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UseCurrentStyle",1569,G__G__GPad_205_1_4,121,-1,-1,0,0,1,1,0,"","*MENU*",(void*)NULL,1);
   G__memfunc_setup("GetBorderMode",1283,G__G__GPad_205_2_4,115,-1,G__defined_typename("Short_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBorderSize",1305,G__G__GPad_205_3_4,115,-1,G__defined_typename("Short_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCrosshair",1230,G__G__GPad_205_4_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCanvasID",1033,G__G__GPad_205_5_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFrame",779,G__G__GPad_205_6_4,85,G__get_linked_tagnum(&G__G__GPadLN_TFrame),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEvent",802,G__G__GPad_205_7_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEventX",890,G__G__GPad_205_8_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEventY",891,G__G__GPad_205_9_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetHighLightColor",1687,G__G__GPad_205_0_5,115,-1,G__defined_typename("Color_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRange",781,G__G__GPad_205_1_5,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 1 - x1 d - 'Double_t' 1 - y1 "
"d - 'Double_t' 1 - x2 d - 'Double_t' 1 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRangeAxis",1186,G__G__GPad_205_2_5,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 1 - xmin d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - ymax",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPadPar",856,G__G__GPad_205_3_5,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 1 - xlow d - 'Double_t' 1 - ylow "
"d - 'Double_t' 1 - xup d - 'Double_t' 1 - yup",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetXlowNDC",927,G__G__GPad_205_4_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetYlowNDC",928,G__G__GPad_205_5_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetWNDC",588,G__G__GPad_205_6_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetHNDC",573,G__G__GPad_205_7_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetWw",494,G__G__GPad_205_8_5,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetWh",479,G__G__GPad_205_9_5,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAbsXlowNDC",1205,G__G__GPad_205_0_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAbsYlowNDC",1206,G__G__GPad_205_1_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAbsWNDC",866,G__G__GPad_205_2_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAbsHNDC",851,G__G__GPad_205_3_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAspectRatio",1407,G__G__GPad_205_4_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPhi",577,G__G__GPad_205_5_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTheta",790,G__G__GPad_205_6_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUxmin",817,G__G__GPad_205_7_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUymin",818,G__G__GPad_205_8_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUxmax",819,G__G__GPad_205_9_6,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUymax",820,G__G__GPad_205_0_7,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetGridx",798,G__G__GPad_205_1_7,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetGridy",799,G__G__GPad_205_2_7,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumber",905,G__G__GPad_205_3_7,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTickx",803,G__G__GPad_205_4_7,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTicky",804,G__G__GPad_205_5_7,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetX1",425,G__G__GPad_205_6_7,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetX2",426,G__G__GPad_205_7_7,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetY1",426,G__G__GPad_205_8_7,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetY2",427,G__G__GPad_205_9_7,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaxPickDistance",1784,G__G__GPad_205_0_8,105,-1,G__defined_typename("Int_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Int_t (*)())(&TPad::GetMaxPickDistance),0);
   G__memfunc_setup("GetListOfPrimitives",1949,G__G__GPad_205_1_8,85,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfExecs",1385,G__G__GPad_205_2_8,85,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPrimitive",1241,G__G__GPad_205_3_8,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,1,1,1,8,"C - - 10 - name","obsolete, use FindObject instead",(void*)NULL,1);
   G__memfunc_setup("GetSelected",1097,G__G__GPad_205_4_8,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPad",565,G__G__GPad_205_5_8,85,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),-1,0,1,1,1,8,"i - 'Int_t' 0 - subpadnumber",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPadPointer",1302,G__G__GPad_205_6_8,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPadSave",964,G__G__GPad_205_7_8,85,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSelectedPad",1374,G__G__GPad_205_8_8,85,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetView",699,G__G__GPad_205_9_8,85,G__get_linked_tagnum(&G__G__GPadLN_TView),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetView3D",818,G__G__GPad_205_0_9,85,G__get_linked_tagnum(&G__G__GPadLN_TPadView3D),-1,0,0,1,1,8,"","Return 3D View of this TPad",(void*)NULL,1);
   G__memfunc_setup("GetLogx",698,G__G__GPad_205_1_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLogy",699,G__G__GPad_205_2_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLogz",700,G__G__GPad_205_3_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMother",911,G__G__GPad_205_4_9,85,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetName",673,G__G__GPad_205_5_9,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTitle",802,G__G__GPad_205_6_9,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCanvas",892,G__G__GPad_205_7_9,85,G__get_linked_tagnum(&G__G__GPadLN_TCanvas),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetVirtCanvas",1313,G__G__GPad_205_8_9,85,G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPadPaint",1073,G__G__GPad_205_9_9,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPixmapID",1052,G__G__GPad_205_0_10,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Hash",388,G__G__GPad_205_1_10,107,-1,G__defined_typename("ULong_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HasCrosshair",1226,G__G__GPad_205_2_10,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HighLight",888,G__G__GPad_205_3_10,121,-1,-1,0,2,1,1,0,
"s - 'Color_t' 0 kRed col g - 'Bool_t' 0 kTRUE set",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HasFixedAspectRatio",1899,G__G__GPad_205_4_10,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsBatch",670,G__G__GPad_205_5_10,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsEditable",982,G__G__GPad_205_6_10,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsFolder",792,G__G__GPad_205_7_10,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsModified",989,G__G__GPad_205_8_10,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsRetained",1000,G__G__GPad_205_9_10,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsVertical",1014,G__G__GPad_205_0_11,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ls",223,G__G__GPad_205_1_11,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Modified",801,G__G__GPad_205_2_11,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 1 flag","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("OpaqueMoving",1243,G__G__GPad_205_3_11,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OpaqueResizing",1462,G__G__GPad_205_4_11,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PadtoX",592,G__G__GPad_205_5_11,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PadtoY",593,G__G__GPad_205_6_11,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"d - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__GPad_205_7_11,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintBox",805,G__G__GPad_205_8_11,121,-1,-1,0,5,1,1,0,
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintFillArea",1276,G__G__GPad_205_9_11,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintFillArea",1276,G__G__GPad_205_0_12,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintFillAreaHatches",1980,G__G__GPad_205_1_12,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y i - 'Int_t' 0 - FillStyle",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PaintHatches",1212,G__G__GPad_205_2_12,121,-1,-1,0,5,1,1,0,
"d - 'Double_t' 0 - dy d - 'Double_t' 0 - angle "
"i - 'Int_t' 0 - nn D - 'Double_t' 0 - xx "
"D - 'Double_t' 0 - yy",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PaintPadFrame",1276,G__G__GPad_205_3_12,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintLine",900,G__G__GPad_205_4_12,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintLineNDC",1113,G__G__GPad_205_5_12,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - u1 d - 'Double_t' 0 - v1 "
"d - 'Double_t' 0 - u2 d - 'Double_t' 0 - v2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintLine3D",1019,G__G__GPad_205_6_12,121,-1,-1,0,2,1,1,0,
"F - 'Float_t' 0 - p1 F - 'Float_t' 0 - p2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintLine3D",1019,G__G__GPad_205_7_12,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - p1 D - 'Double_t' 0 - p2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintPolyLine",1320,G__G__GPad_205_8_12,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintPolyLine",1320,G__G__GPad_205_9_12,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintPolyLine3D",1439,G__G__GPad_205_0_13,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - p",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintPolyLineNDC",1533,G__G__GPad_205_1_13,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintPolyMarker",1538,G__G__GPad_205_2_13,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintPolyMarker",1538,G__G__GPad_205_3_13,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintModified",1309,G__G__GPad_205_4_13,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintText",929,G__G__GPad_205_5_13,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"C - - 10 - text",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintTextNDC",1142,G__G__GPad_205_6_13,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - u d - 'Double_t' 0 - v "
"C - - 10 - text",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Pick",391,G__G__GPad_205_7_13,85,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,0,3,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"U 'TObjLink' - 1 - pickobj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PixeltoX",829,G__G__GPad_205_8_13,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - px",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PixeltoY",830,G__G__GPad_205_9_13,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PixeltoXY",918,G__G__GPad_205_0_14,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - xpixel i - 'Int_t' 0 - ypixel "
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Pop",303,G__G__GPad_205_1_14,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__GPad_205_2_14,121,-1,-1,0,1,1,1,8,"C - - 10 \"\" filename",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__GPad_205_3_14,121,-1,-1,0,2,1,1,0,
"C - - 10 - filename C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Range",493,G__G__GPad_205_4_14,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2","*MENU* *ARGS={x1=>fX1,y1=>fY1,x2=>fX2,y2=>fY2}",(void*)NULL,1);
   G__memfunc_setup("RangeChanged",1175,G__G__GPad_205_5_14,121,-1,-1,0,0,1,1,0,"","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("RangeAxis",898,G__G__GPad_205_6_14,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RangeAxisChanged",1580,G__G__GPad_205_7_14,121,-1,-1,0,0,1,1,0,"","*SIGNAL*",(void*)NULL,1);
   G__memfunc_setup("RecursiveRemove",1574,G__G__GPad_205_8_14,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RedrawAxis",1018,G__G__GPad_205_9_14,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetView3D",1045,G__G__GPad_205_0_15,121,-1,-1,0,1,1,1,0,"U 'TPadView3D' - 0 0 view",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizePad",903,G__G__GPad_205_1_15,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SaveAs",579,G__G__GPad_205_2_15,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" filename","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetBorderMode",1295,G__G__GPad_205_3_15,121,-1,-1,0,1,1,1,0,"s - 'Short_t' 0 - bordermode","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetBorderSize",1317,G__G__GPad_205_4_15,121,-1,-1,0,1,1,1,0,"s - 'Short_t' 0 - bordersize","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetCanvas",904,G__G__GPad_205_5_15,121,-1,-1,0,1,1,1,0,"U 'TCanvas' - 0 - c",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetCanvasSize",1315,G__G__GPad_205_6_15,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetCrosshair",1242,G__G__GPad_205_7_15,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 crhair","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("SetCursor",938,G__G__GPad_205_8_15,121,-1,-1,0,1,1,1,0,"i 'ECursor' - 0 - cursor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDoubleBuffer",1505,G__G__GPad_205_9_15,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 mode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDrawOption",1331,G__G__GPad_205_0_16,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetEditable",1094,G__G__GPad_205_1_16,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE mode","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("SetFixedAspectRatio",1915,G__G__GPad_205_2_16,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE fixed","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("SetGrid",690,G__G__GPad_205_3_16,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 1 valuex i - 'Int_t' 0 1 valuey",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetGridx",810,G__G__GPad_205_4_16,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("SetGridy",811,G__G__GPad_205_5_16,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("SetFillStyle",1220,G__G__GPad_205_6_16,121,-1,-1,0,1,1,1,0,"s - 'Style_t' 0 - fstyle",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLogx",710,G__G__GPad_205_7_16,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("SetLogy",711,G__G__GPad_205_8_16,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("SetLogz",712,G__G__GPad_205_9_16,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("SetNumber",917,G__G__GPad_205_0_17,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - number",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPad",577,G__G__GPad_205_1_17,121,-1,-1,0,9,1,1,0,
"C - - 10 - name C - - 10 - title "
"d - 'Double_t' 0 - xlow d - 'Double_t' 0 - ylow "
"d - 'Double_t' 0 - xup d - 'Double_t' 0 - yup "
"s - 'Color_t' 0 35 color s - 'Short_t' 0 5 bordersize "
"s - 'Short_t' 0 -1 bordermode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPad",577,G__G__GPad_205_2_17,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - xlow d - 'Double_t' 0 - ylow "
"d - 'Double_t' 0 - xup d - 'Double_t' 0 - yup",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAttFillPS",1151,G__G__GPad_205_3_17,121,-1,-1,0,2,1,1,0,
"s - 'Color_t' 0 - color s - 'Style_t' 0 - style",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAttLinePS",1152,G__G__GPad_205_4_17,121,-1,-1,0,3,1,1,0,
"s - 'Color_t' 0 - color s - 'Style_t' 0 - style "
"s - 'Width_t' 0 - lwidth",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAttMarkerPS",1370,G__G__GPad_205_5_17,121,-1,-1,0,3,1,1,0,
"s - 'Color_t' 0 - color s - 'Style_t' 0 - style "
"f - 'Size_t' 0 - msize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAttTextPS",1181,G__G__GPad_205_6_17,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 - align f - 'Float_t' 0 - angle "
"s - 'Color_t' 0 - color s - 'Style_t' 0 - font "
"f - 'Float_t' 0 - tsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMaxPickDistance",1796,G__G__GPad_205_7_17,121,-1,-1,0,1,3,1,0,"i - 'Int_t' 0 5 maxPick",(char*)NULL,(void*)(void (*)(Int_t))(&TPad::SetMaxPickDistance),0);
   G__memfunc_setup("SetName",685,G__G__GPad_205_8_17,121,-1,-1,0,1,1,1,0,"C - - 10 - name","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetSelected",1109,G__G__GPad_205_9_17,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTicks",810,G__G__GPad_205_0_18,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 1 valuex i - 'Int_t' 0 1 valuey",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTickx",815,G__G__GPad_205_1_18,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("SetTicky",816,G__G__GPad_205_2_18,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value","*TOGGLE*",(void*)NULL,1);
   G__memfunc_setup("SetTitle",814,G__G__GPad_205_3_18,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" title",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTheta",802,G__G__GPad_205_4_18,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 30 theta",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPhi",589,G__G__GPad_205_5_18,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 30 phi",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetToolTipText",1436,G__G__GPad_205_6_18,121,-1,-1,0,2,1,1,0,
"C - - 10 - text l - 'Long_t' 0 1000 delayms",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetVertical",1126,G__G__GPad_205_7_18,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE vert",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetView",711,G__G__GPad_205_8_18,121,-1,-1,0,1,1,1,0,"U 'TView' - 0 - view",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Update",611,G__G__GPad_205_9_18,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UtoAbsPixel",1104,G__G__GPad_205_0_19,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"d - 'Double_t' 0 - u",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("VtoAbsPixel",1105,G__G__GPad_205_1_19,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"d - 'Double_t' 0 - v",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UtoPixel",826,G__G__GPad_205_2_19,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"d - 'Double_t' 0 - u",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("VtoPixel",827,G__G__GPad_205_3_19,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"d - 'Double_t' 0 - v",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("WaitPrimitive",1358,G__G__GPad_205_4_19,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,2,1,1,0,
"C - - 10 \"\" pname C - - 10 \"\" emode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("XtoAbsPixel",1107,G__G__GPad_205_5_19,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("YtoAbsPixel",1108,G__G__GPad_205_6_19,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"d - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("XtoPad",592,G__G__GPad_205_7_19,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("YtoPad",593,G__G__GPad_205_8_19,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"d - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("XtoPixel",829,G__G__GPad_205_9_19,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("YtoPixel",830,G__G__GPad_205_0_20,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"d - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("XYtoAbsPixel",1196,G__G__GPad_205_1_20,121,-1,-1,0,4,1,1,8,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"i - 'Int_t' 1 - xpixel i - 'Int_t' 1 - ypixel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("XYtoPixel",918,G__G__GPad_205_2_20,121,-1,-1,0,4,1,1,8,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"i - 'Int_t' 1 - xpixel i - 'Int_t' 1 - ypixel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CreateToolTip",1311,G__G__GPad_205_3_20,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,3,1,1,0,
"U 'TBox' - 10 - b C - - 10 - text "
"l - 'Long_t' 0 - delayms",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeleteToolTip",1310,G__G__GPad_205_4_20,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - tip",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetToolTip",1230,G__G__GPad_205_5_20,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - tip",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CloseToolTip",1217,G__G__GPad_205_6_20,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - tip",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("x3d",271,G__G__GPad_205_7_20,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" type","Depreciated",(void*)NULL,1);
   G__memfunc_setup("GetViewer3D",1033,G__G__GPad_205_8_20,85,G__get_linked_tagnum(&G__G__GPadLN_TVirtualViewer3D),-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" type","*MENU*",(void*)NULL,1);
   G__memfunc_setup("ReleaseViewer3D",1450,G__G__GPad_205_9_20,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" type",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_205_0_21,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPad::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_205_1_21,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPad::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_205_2_21,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPad::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_205_3_21,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPad::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_205_4_21,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_205_5_21,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_205_6_21,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_205_7_21,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_205_8_21,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPad::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_205_9_21,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPad::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_205_0_22,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPad::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_205_1_22,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPad::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TPad",487,G__G__GPad_205_2_22,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAttCanvas(void) {
   /* TAttCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas));
   G__memfunc_setup("TAttCanvas",985,G__G__GPad_207_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Copy",411,G__G__GPad_207_2_0,121,-1,-1,0,1,1,1,8,"u 'TAttCanvas' - 1 - attcanvas",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAdate",767,G__G__GPad_207_3_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTitleFromTop",1513,G__G__GPad_207_4_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetXBetween",1090,G__G__GPad_207_5_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetXdate",790,G__G__GPad_207_6_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetYBetween",1091,G__G__GPad_207_7_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetYdate",791,G__G__GPad_207_8_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__GPad_207_9_0,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResetAttCanvas",1416,G__G__GPad_207_0_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAdate",779,G__G__GPad_207_1_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - adate",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTitleFromTop",1525,G__G__GPad_207_2_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - titlefromtop",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetXBetween",1102,G__G__GPad_207_3_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - xbetween",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetXdate",802,G__G__GPad_207_4_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - xdate",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetYBetween",1103,G__G__GPad_207_5_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - ybetween",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetYdate",803,G__G__GPad_207_6_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - ydate",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_207_7_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAttCanvas::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_207_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttCanvas::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_207_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAttCanvas::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_207_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAttCanvas::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_207_1_2,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_207_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_207_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_207_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_207_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttCanvas::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_207_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttCanvas::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_207_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttCanvas::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_207_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttCanvas::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TAttCanvas",985,G__G__GPad_207_9_2,(int)('i'),G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas),-1,0,1,1,1,0,"u 'TAttCanvas' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TAttCanvas",1111,G__G__GPad_207_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__GPad_207_1_3,(int)('u'),G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas),-1,1,1,1,1,0,"u 'TAttCanvas' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTControlBar(void) {
   /* TControlBar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar));
   G__memfunc_setup("Create",596,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,0,
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TControlBar",1098,G__G__GPad_210_3_0,105,G__get_linked_tagnum(&G__G__GPadLN_TControlBar),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TControlBar",1098,G__G__GPad_210_4_0,105,G__get_linked_tagnum(&G__G__GPadLN_TControlBar),-1,0,2,1,1,0,
"C - - 10 - orientation C - - 10 \"\" title",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TControlBar",1098,G__G__GPad_210_5_0,105,G__get_linked_tagnum(&G__G__GPadLN_TControlBar),-1,0,4,1,1,0,
"C - - 10 - orientation C - - 10 - title "
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddButton",901,G__G__GPad_210_6_0,121,-1,-1,0,1,1,1,0,"U 'TControlBarButton' - 0 - button",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddButton",901,G__G__GPad_210_7_0,121,-1,-1,0,1,1,1,0,"u 'TControlBarButton' - 1 - button",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddButton",901,G__G__GPad_210_8_0,121,-1,-1,0,4,1,1,0,
"C - - 10 - label C - - 10 - action "
"C - - 10 \"\" hint C - - 10 \"button\" type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddControlBar",1279,G__G__GPad_210_9_0,121,-1,-1,0,1,1,1,0,"U 'TControlBar' - 0 - controlBar",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddControlBar",1279,G__G__GPad_210_0_1,121,-1,-1,0,1,1,1,0,"u 'TControlBar' - 1 - controlBar",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddSeparator",1210,G__G__GPad_210_1_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetClicked",975,G__G__GPad_210_2_1,85,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetControlBarImp",1596,G__G__GPad_210_3_1,85,G__get_linked_tagnum(&G__G__GPadLN_TControlBarImp),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfButtons",1632,G__G__GPad_210_4_1,85,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumberOfColumns",1823,G__G__GPad_210_5_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumberOfRows",1513,G__G__GPad_210_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOrientation",1452,G__G__GPad_210_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Hide",378,G__G__GPad_210_8_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFont",707,G__G__GPad_210_9_1,121,-1,-1,0,1,1,1,0,"C - - 10 - fontName",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTextColor",1232,G__G__GPad_210_0_2,121,-1,-1,0,1,1,1,0,"C - - 10 - colorName",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNumberOfColumns",1835,G__G__GPad_210_1_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNumberOfRows",1525,G__G__GPad_210_2_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOrientation",1464,G__G__GPad_210_3_2,121,-1,-1,0,1,1,1,0,"C - - 10 - o",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetOrientation",1464,G__G__GPad_210_4_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - o",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Show",417,G__G__GPad_210_5_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GPad_210_6_2,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TControlBar::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_210_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TControlBar::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_210_8_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TControlBar::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_210_9_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TControlBar::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_210_0_3,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_210_1_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_210_2_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_210_3_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_210_4_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TControlBar::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_210_5_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TControlBar::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_210_6_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TControlBar::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_210_7_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TControlBar::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TControlBar",1098,G__G__GPad_210_8_3,(int)('i'),G__get_linked_tagnum(&G__G__GPadLN_TControlBar),-1,0,1,1,1,0,"u 'TControlBar' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TControlBar",1224,G__G__GPad_210_9_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__GPad_210_0_4,(int)('u'),G__get_linked_tagnum(&G__G__GPadLN_TControlBar),-1,1,1,1,1,0,"u 'TControlBar' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDialogCanvas(void) {
   /* TDialogCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas));
   G__memfunc_setup("TDialogCanvas",1280,G__G__GPad_212_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDialogCanvas",1280,G__G__GPad_212_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),-1,0,4,1,1,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDialogCanvas",1280,G__G__GPad_212_3_0,105,G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - wtopx i - 'Int_t' 0 - wtopy "
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__G__GPad_212_4_0,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildStandardButtons",2064,G__G__GPad_212_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Divide",597,G__G__GPad_212_6_0,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 1 nx i - 'Int_t' 0 1 ny "
"f - 'Float_t' 0 0.01 xmargin f - 'Float_t' 0 0.01 ymargin "
"i - 'Int_t' 0 0 color",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRefObject",1172,G__G__GPad_212_7_0,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRefPad",850,G__G__GPad_212_8_0,85,G__get_linked_tagnum(&G__G__GPadLN_TPad),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Range",493,G__G__GPad_212_9_0,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RecursiveRemove",1574,G__G__GPad_212_0_1,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBorderMode",1295,G__G__GPad_212_1_1,121,-1,-1,0,1,1,1,0,"s - 'Short_t' 0 - bordermode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetGrid",690,G__G__GPad_212_2_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 1 valuex i - 'Int_t' 0 1 valuey",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLogx",710,G__G__GPad_212_3_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLogy",711,G__G__GPad_212_4_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetName",685,G__G__GPad_212_5_1,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRefObject",1184,G__G__GPad_212_6_1,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRefPad",862,G__G__GPad_212_7_1,121,-1,-1,0,1,1,1,0,"U 'TPad' - 0 - pad",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("x3d",271,G__G__GPad_212_8_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_212_9_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDialogCanvas::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_212_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDialogCanvas::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_212_1_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDialogCanvas::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_212_2_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDialogCanvas::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_212_3_2,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_212_4_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_212_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_212_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_212_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDialogCanvas::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_212_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDialogCanvas::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_212_9_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDialogCanvas::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_212_0_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDialogCanvas::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TDialogCanvas",1406,G__G__GPad_212_1_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAttMarkerCanvas(void) {
   /* TAttMarkerCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas));
   G__memfunc_setup("TAttMarkerCanvas",1595,G__G__GPad_213_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TAttMarkerCanvas",1595,G__G__GPad_213_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),-1,0,4,1,1,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 400 ww i - 'Int_t' 0 600 wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UpdateMarkerAttributes",2284,G__G__GPad_213_3_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - col i - 'Int_t' 0 - sty "
"f - 'Float_t' 0 - msiz",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_213_4_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAttMarkerCanvas::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_213_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttMarkerCanvas::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_213_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAttMarkerCanvas::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_213_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAttMarkerCanvas::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_213_8_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_213_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_213_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_213_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_213_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttMarkerCanvas::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_213_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttMarkerCanvas::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_213_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttMarkerCanvas::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_213_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttMarkerCanvas::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TAttMarkerCanvas",1721,G__G__GPad_213_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSlider(void) {
   /* TSlider */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider));
   G__memfunc_setup("TSlider",695,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GPadLN_TSlider),-1,0,1,1,4,0,"u 'TSlider' - 11 - org","no copy, use TObject::Clone()",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GPadLN_TSlider),-1,1,1,1,4,0,"u 'TSlider' - 11 - rhs","idem",(void*)NULL,0);
   G__memfunc_setup("TSlider",695,G__G__GPad_216_3_0,105,G__get_linked_tagnum(&G__G__GPadLN_TSlider),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSlider",695,G__G__GPad_216_4_0,105,G__get_linked_tagnum(&G__G__GPadLN_TSlider),-1,0,9,1,1,0,
"C - - 10 - name C - - 10 - title "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"s - 'Color_t' 0 16 color s - 'Short_t' 0 2 bordersize "
"s - 'Short_t' 0 -1 bordermode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetObject",887,G__G__GPad_216_5_0,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMinimum",1020,G__G__GPad_216_6_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaximum",1022,G__G__GPad_216_7_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMethod",897,G__G__GPad_216_8_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__GPad_216_9_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__GPad_216_0_1,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMethod",909,G__G__GPad_216_1_1,121,-1,-1,0,1,1,1,0,"C - - 10 - method","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetObject",899,G__G__GPad_216_2_1,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 0 obj",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMinimum",1032,G__G__GPad_216_3_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 0 min",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMaximum",1034,G__G__GPad_216_4_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 1 max",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRange",793,G__G__GPad_216_5_1,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 0 xmin d - 'Double_t' 0 1 xmax",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_216_6_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSlider::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_216_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSlider::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_216_8_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSlider::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_216_9_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSlider::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_216_0_2,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_216_1_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_216_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_216_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_216_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSlider::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_216_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSlider::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_216_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSlider::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_216_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSlider::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TSlider",821,G__G__GPad_216_8_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSliderBox(void) {
   /* TSliderBox */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox));
   G__memfunc_setup("TSliderBox",992,G__G__GPad_217_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSliderBox",992,G__G__GPad_217_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),-1,0,7,1,1,0,
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"s - 'Color_t' 0 18 color s - 'Short_t' 0 2 bordersize "
"s - 'Short_t' 0 -1 bordermode",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ExecuteEvent",1237,G__G__GPad_217_3_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__GPad_217_4_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetSlider",911,G__G__GPad_217_5_0,121,-1,-1,0,1,1,1,0,"U 'TSlider' - 0 - slider",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GPad_217_6_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSliderBox::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_217_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSliderBox::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_217_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSliderBox::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_217_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSliderBox::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_217_0_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_217_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_217_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_217_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_217_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSliderBox::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_217_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSliderBox::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_217_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSliderBox::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_217_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSliderBox::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TSliderBox",992,G__G__GPad_217_8_1,(int)('i'),G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),-1,0,1,1,1,0,"u 'TSliderBox' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TSliderBox",1118,G__G__GPad_217_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__GPad_217_0_2,(int)('u'),G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),-1,1,1,1,1,0,"u 'TSliderBox' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTControlBarButton(void) {
   /* TControlBarButton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton));
   G__memfunc_setup("TControlBarButton",1734,G__G__GPad_218_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TControlBarButton",1734,G__G__GPad_218_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),-1,0,4,1,1,0,
"C - - 10 - label C - - 10 \"\" action "
"C - - 10 \"\" hint C - - 10 \"button\" type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Create",596,G__G__GPad_218_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Action",606,G__G__GPad_218_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAction",894,G__G__GPad_218_5_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetType",706,G__G__GPad_218_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAction",906,G__G__GPad_218_7_0,121,-1,-1,0,1,1,1,0,"C - - 10 - action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetType",718,G__G__GPad_218_8_0,121,-1,-1,0,1,1,1,0,"C - - 10 - type",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetType",718,G__G__GPad_218_9_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - type",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_218_0_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TControlBarButton::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_218_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TControlBarButton::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_218_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TControlBarButton::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_218_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TControlBarButton::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_218_4_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_218_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_218_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_218_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_218_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TControlBarButton::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_218_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TControlBarButton::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_218_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TControlBarButton::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_218_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TControlBarButton::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TControlBarButton",1734,G__G__GPad_218_2_2,(int)('i'),G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),-1,0,1,1,1,0,"u 'TControlBarButton' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TControlBarButton",1860,G__G__GPad_218_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__GPad_218_4_2,(int)('u'),G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),-1,1,1,1,1,0,"u 'TControlBarButton' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDrawPanelHist(void) {
   /* TDrawPanelHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist));
   G__memfunc_setup("TDrawPanelHist",1386,G__G__GPad_223_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDrawPanelHist",1386,G__G__GPad_223_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh "
"U 'TVirtualPad' - 10 - pad U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddOption",898,G__G__GPad_223_3_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Apply",518,G__G__GPad_223_4_0,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildStandardButtons",2064,G__G__GPad_223_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteEvent",1237,G__G__GPad_223_6_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetHistogram",1230,G__G__GPad_223_7_0,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RecursiveRemove",1574,G__G__GPad_223_8_0,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__GPad_223_9_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDefaults",1124,G__G__GPad_223_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetSame",690,G__G__GPad_223_1_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_223_2_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDrawPanelHist::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_223_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDrawPanelHist::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_223_4_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDrawPanelHist::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_223_5_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDrawPanelHist::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_223_6_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_223_7_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_223_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_223_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_223_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDrawPanelHist::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_223_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDrawPanelHist::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_223_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDrawPanelHist::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_223_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDrawPanelHist::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TDrawPanelHist",1512,G__G__GPad_223_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTButton(void) {
   /* TButton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton));
   G__memfunc_setup("TButton",720,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GPadLN_TButton),-1,0,1,1,4,0,"u 'TButton' - 11 - org","no copy ctor, use TObject::Clone()",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GPadLN_TButton),-1,1,1,1,4,0,"u 'TButton' - 11 - rhs","idem",(void*)NULL,0);
   G__memfunc_setup("TButton",720,G__G__GPad_224_3_0,105,G__get_linked_tagnum(&G__G__GPadLN_TButton),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TButton",720,G__G__GPad_224_4_0,105,G__get_linked_tagnum(&G__G__GPadLN_TButton),-1,0,6,1,1,0,
"C - - 10 - title C - - 10 - method "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Divide",597,G__G__GPad_224_5_0,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 1 nx i - 'Int_t' 0 1 ny "
"f - 'Float_t' 0 0.01 xmargin f - 'Float_t' 0 0.01 ymargin "
"i - 'Int_t' 0 0 color",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__GPad_224_6_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteEvent",1237,G__G__GPad_224_7_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMethod",897,G__G__GPad_224_8_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__GPad_224_9_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintModified",1309,G__G__GPad_224_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Range",493,G__G__GPad_224_1_1,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__GPad_224_2_1,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBorderMode",1295,G__G__GPad_224_3_1,121,-1,-1,0,1,1,1,0,"s - 'Short_t' 0 - bordermode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFraming",1008,G__G__GPad_224_4_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 1 f",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetFraming",996,G__G__GPad_224_5_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetGrid",690,G__G__GPad_224_6_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 1 valuex i - 'Int_t' 0 1 valuey",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLogx",710,G__G__GPad_224_7_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLogy",711,G__G__GPad_224_8_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMethod",909,G__G__GPad_224_9_1,121,-1,-1,0,1,1,1,0,"C - - 10 - method","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetName",685,G__G__GPad_224_0_2,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("x3d",271,G__G__GPad_224_1_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_224_2_2,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TButton::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_224_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TButton::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_224_4_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TButton::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_224_5_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TButton::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_224_6_2,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_224_7_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_224_8_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_224_9_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_224_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TButton::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_224_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TButton::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_224_2_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TButton::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_224_3_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TButton::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TButton",846,G__G__GPad_224_4_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGroupButton(void) {
   /* TGroupButton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton));
   G__memfunc_setup("TGroupButton",1245,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),-1,0,1,1,4,0,"u 'TGroupButton' - 11 - org","no copy, use TObject::Clone()",(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),-1,1,1,1,4,0,"u 'TGroupButton' - 11 - rhs","idem",(void*)NULL,0);
   G__memfunc_setup("TGroupButton",1245,G__G__GPad_225_3_0,105,G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGroupButton",1245,G__G__GPad_225_4_0,105,G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),-1,0,7,1,1,0,
"C - - 10 - groupname C - - 10 - title "
"C - - 10 - method d - 'Double_t' 0 - x1 "
"d - 'Double_t' 0 - y1 d - 'Double_t' 0 - x2 "
"d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DisplayColorTable",1725,G__G__GPad_225_5_0,121,-1,-1,0,5,1,1,0,
"C - - 10 - action d - 'Double_t' 0 - x0 "
"d - 'Double_t' 0 - y0 d - 'Double_t' 0 - wc "
"d - 'Double_t' 0 - hc",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteAction",1329,G__G__GPad_225_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteEvent",1237,G__G__GPad_225_7_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__GPad_225_8_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_225_9_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGroupButton::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_225_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGroupButton::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_225_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGroupButton::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_225_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGroupButton::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_225_3_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_225_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_225_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_225_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_225_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGroupButton::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_225_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGroupButton::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_225_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGroupButton::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_225_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGroupButton::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGroupButton",1371,G__G__GPad_225_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTClassTree(void) {
   /* TClassTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TClassTree));
   G__memfunc_setup("FindClassPosition",1740,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"C - - 10 - classname f - 'Float_t' 1 - x "
"f - 'Float_t' 1 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindClassesUsedBy",1691,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"i - 'Int_t' 0 - iclass",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindClassesUsing",1621,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"i - 'Int_t' 0 - iclass",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Mark",395,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GPadLN_TObjString),-1,0,3,1,2,0,
"C - - 10 - classname U 'TList' - 0 - los "
"i - 'Int_t' 0 - abit",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PaintClass",1010,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"i - 'Int_t' 0 - iclass f - 'Float_t' 0 - xleft "
"f - 'Float_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ScanClasses",1107,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"i - 'Int_t' 0 - iclass",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowCod",695,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowHas",701,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMul",719,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowRef",702,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TClassTree",986,G__G__GPad_227_2_1,105,G__get_linked_tagnum(&G__G__GPadLN_TClassTree),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TClassTree",986,G__G__GPad_227_3_1,105,G__get_linked_tagnum(&G__G__GPadLN_TClassTree),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 \"\" classes",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Draw",398,G__G__GPad_227_4_1,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" classes",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindClass",887,G__G__GPad_227_5_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - classname",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetClasses",1006,G__G__GPad_227_6_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSourceDir",1200,G__G__GPad_227_7_1,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ls",223,G__G__GPad_227_8_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__GPad_227_9_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SaveAs",579,G__G__GPad_227_0_2,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" filename",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetClasses",1018,G__G__GPad_227_1_2,121,-1,-1,0,2,1,1,0,
"C - - 10 - classes C - 'Option_t' 10 \"ID\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetSourceDir",1212,G__G__GPad_227_2_2,121,-1,-1,0,1,1,1,0,"C - - 10 \"src\" dir",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetYoffset",1036,G__G__GPad_227_3_2,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 0 offset",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLabelDx",968,G__G__GPad_227_4_2,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 0.15 labeldx",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowClassesUsedBy",1723,G__G__GPad_227_5_2,121,-1,-1,0,1,1,1,0,"C - - 10 - classes",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowClassesUsing",1653,G__G__GPad_227_6_2,121,-1,-1,0,1,1,1,0,"C - - 10 - classes",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowLinks",930,G__G__GPad_227_7_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"HMR\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_227_8_2,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TClassTree::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_227_9_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TClassTree::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_227_0_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TClassTree::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_227_1_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TClassTree::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_227_2_3,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_227_3_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_227_4_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_227_5_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_227_6_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TClassTree::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_227_7_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TClassTree::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_227_8_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TClassTree::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_227_9_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TClassTree::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TClassTree",986,G__G__GPad_227_0_4,(int)('i'),G__get_linked_tagnum(&G__G__GPadLN_TClassTree),-1,0,1,1,1,0,"u 'TClassTree' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TClassTree",1112,G__G__GPad_227_1_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__GPad_227_2_4,(int)('u'),G__get_linked_tagnum(&G__G__GPadLN_TClassTree),-1,1,1,1,1,0,"u 'TClassTree' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTUtilPad(void) {
   /* TUtilPad */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TUtilPad));
   G__memfunc_setup("TUtilPad",775,G__G__GPad_229_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TUtilPad),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawPanel",894,G__G__GPad_229_2_0,121,-1,-1,0,2,1,1,0,
"U 'TVirtualPad' - 10 - pad U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FitPanel",787,G__G__GPad_229_3_0,121,-1,-1,0,2,1,1,0,
"U 'TVirtualPad' - 10 - pad U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FitPanelGraph",1285,G__G__GPad_229_4_0,121,-1,-1,0,2,1,1,0,
"U 'TVirtualPad' - 10 - pad U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("InspectCanvas",1330,G__G__GPad_229_5_0,121,-1,-1,0,1,1,1,0,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeCanvas",986,G__G__GPad_229_6_0,121,-1,-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - wtopx i - 'Int_t' 0 - wtopy "
"i - 'Int_t' 0 - ww i - 'Int_t' 0 - wh",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RemoveObject",1221,G__G__GPad_229_7_0,121,-1,-1,0,2,1,1,0,
"U 'TObject' - 0 - parent U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPanelVersion",1538,G__G__GPad_229_8_0,121,-1,-1,0,1,3,1,0,"i - 'Int_t' 0 0 version",(char*)NULL,(void*)(void (*)(Int_t))(&TUtilPad::SetPanelVersion),0);
   G__memfunc_setup("Class",502,G__G__GPad_229_9_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TUtilPad::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_229_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TUtilPad::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_229_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TUtilPad::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_229_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TUtilPad::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_229_3_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_229_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_229_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_229_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_229_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TUtilPad::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_229_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TUtilPad::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_229_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TUtilPad::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_229_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TUtilPad::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TUtilPad",775,G__G__GPad_229_1_2,(int)('i'),G__get_linked_tagnum(&G__G__GPadLN_TUtilPad),-1,0,1,1,1,0,"u 'TUtilPad' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TUtilPad",901,G__G__GPad_229_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__GPad_229_3_2,(int)('u'),G__get_linked_tagnum(&G__G__GPadLN_TUtilPad),-1,1,1,1,1,0,"u 'TUtilPad' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFitPanel(void) {
   /* TFitPanel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel));
   G__memfunc_setup("TFitPanel",871,G__G__GPad_230_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TFitPanel",871,G__G__GPad_230_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh "
"U 'TVirtualPad' - 10 - pad U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddOption",898,G__G__GPad_230_3_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Apply",518,G__G__GPad_230_4_0,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildStandardButtons",2064,G__G__GPad_230_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteEvent",1237,G__G__GPad_230_6_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetObjectFit",1178,G__G__GPad_230_7_0,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RecursiveRemove",1574,G__G__GPad_230_8_0,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__GPad_230_9_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDefaults",1124,G__G__GPad_230_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFunction",1138,G__G__GPad_230_1_1,121,-1,-1,0,1,1,1,0,"C - - 10 - function",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetSame",690,G__G__GPad_230_2_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_230_3_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TFitPanel::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_230_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFitPanel::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_230_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TFitPanel::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_230_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TFitPanel::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_230_7_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_230_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_230_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_230_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_230_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFitPanel::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_230_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFitPanel::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_230_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFitPanel::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_230_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFitPanel::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TFitPanel",997,G__G__GPad_230_5_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAttLineCanvas(void) {
   /* TAttLineCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas));
   G__memfunc_setup("TAttLineCanvas",1377,G__G__GPad_231_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TAttLineCanvas",1377,G__G__GPad_231_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),-1,0,4,1,1,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 400 ww i - 'Int_t' 0 600 wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UpdateLineAttributes",2066,G__G__GPad_231_3_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - col i - 'Int_t' 0 - sty "
"i - 'Int_t' 0 - width",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_231_4_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAttLineCanvas::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_231_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttLineCanvas::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_231_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAttLineCanvas::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_231_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAttLineCanvas::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_231_8_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_231_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_231_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_231_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_231_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttLineCanvas::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_231_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttLineCanvas::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_231_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttLineCanvas::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_231_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttLineCanvas::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TAttLineCanvas",1503,G__G__GPad_231_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTInspectCanvas(void) {
   /* TInspectCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas));
   G__memfunc_setup("TInspectCanvas",1414,G__G__GPad_232_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TInspectCanvas",1414,G__G__GPad_232_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),-1,0,2,1,1,0,
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBackward",1087,G__G__GPad_232_3_0,85,G__get_linked_tagnum(&G__G__GPadLN_TButton),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetForward",1013,G__G__GPad_232_4_0,85,G__get_linked_tagnum(&G__G__GPadLN_TButton),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCurObject",1185,G__G__GPad_232_5_0,85,G__get_linked_tagnum(&G__G__GPadLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetObjects",1002,G__G__GPad_232_6_0,85,G__get_linked_tagnum(&G__G__GPadLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GoBackward",981,G__G__GPad_232_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TInspectCanvas::GoBackward),0);
   G__memfunc_setup("GoForward",907,G__G__GPad_232_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TInspectCanvas::GoForward),0);
   G__memfunc_setup("Inspector",951,G__G__GPad_232_9_0,121,-1,-1,0,1,3,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)(void (*)(TObject*))(&TInspectCanvas::Inspector),0);
   G__memfunc_setup("InspectObject",1325,G__G__GPad_232_0_1,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RecursiveRemove",1574,G__G__GPad_232_1_1,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Divide",597,G__G__GPad_232_2_1,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 1 nx i - 'Int_t' 0 1 ny "
"f - 'Float_t' 0 0.01 xmargin f - 'Float_t' 0 0.01 ymargin "
"i - 'Int_t' 0 0 color",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetGrid",690,G__G__GPad_232_3_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 1 valuex i - 'Int_t' 0 1 valuey",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetGridx",810,G__G__GPad_232_4_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetGridy",811,G__G__GPad_232_5_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLogx",710,G__G__GPad_232_6_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLogy",711,G__G__GPad_232_7_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLogz",712,G__G__GPad_232_8_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTickx",815,G__G__GPad_232_9_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTicky",816,G__G__GPad_232_0_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 value",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("x3d",271,G__G__GPad_232_1_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_232_2_2,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TInspectCanvas::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_232_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TInspectCanvas::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_232_4_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TInspectCanvas::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_232_5_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TInspectCanvas::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_232_6_2,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_232_7_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_232_8_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_232_9_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_232_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TInspectCanvas::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_232_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TInspectCanvas::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_232_2_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TInspectCanvas::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_232_3_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TInspectCanvas::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TInspectCanvas",1540,G__G__GPad_232_4_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAttFillCanvas(void) {
   /* TAttFillCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas));
   G__memfunc_setup("TAttFillCanvas",1376,G__G__GPad_233_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TAttFillCanvas",1376,G__G__GPad_233_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),-1,0,4,1,1,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 400 ww i - 'Int_t' 0 600 wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UpdateFillAttributes",2065,G__G__GPad_233_3_0,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - col i - 'Int_t' 0 - sty",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_233_4_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAttFillCanvas::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_233_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttFillCanvas::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_233_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAttFillCanvas::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_233_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAttFillCanvas::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_233_8_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_233_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_233_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_233_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_233_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttFillCanvas::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_233_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttFillCanvas::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_233_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttFillCanvas::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_233_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttFillCanvas::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TAttFillCanvas",1502,G__G__GPad_233_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTViewer3DPad(void) {
   /* TViewer3DPad */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad));
   G__memfunc_setup("TViewer3DPad",1106,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad),-1,0,1,1,4,0,"u 'TViewer3DPad' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad),-1,1,1,1,4,0,"u 'TViewer3DPad' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TViewer3DPad",1106,G__G__GPad_235_3_0,105,G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad),-1,0,1,1,1,0,"u 'TVirtualPad' - 1 - pad",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PreferLocalFrame",1594,G__G__GPad_235_4_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BeginScene",979,G__G__GPad_235_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildingScene",1308,G__G__GPad_235_6_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("EndScene",773,G__G__GPad_235_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddObject",864,G__G__GPad_235_8_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"u 'TBuffer3D' - 11 - buffer G - 'Bool_t' 0 0 addChildren",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddObject",864,G__G__GPad_235_9_0,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"h - 'UInt_t' 0 - placedID u 'TBuffer3D' - 11 - buffer "
"G - 'Bool_t' 0 0 addChildren",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OpenComposite",1349,G__G__GPad_235_0_1,121,-1,-1,0,2,1,1,0,
"u 'TBuffer3D' - 11 - buffer G - 'Bool_t' 0 0 addChildren",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CloseComposite",1449,G__G__GPad_235_1_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddCompositeOp",1403,G__G__GPad_235_2_1,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - operation",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_235_3_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TViewer3DPad::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_235_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TViewer3DPad::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_235_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TViewer3DPad::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_235_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TViewer3DPad::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_235_7_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_235_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_235_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_235_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_235_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TViewer3DPad::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_235_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TViewer3DPad::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_235_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TViewer3DPad::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_235_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TViewer3DPad::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TViewer3DPad",1232,G__G__GPad_235_5_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFitPanelGraph(void) {
   /* TFitPanelGraph */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph));
   G__memfunc_setup("TFitPanelGraph",1369,G__G__GPad_236_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TFitPanelGraph",1369,G__G__GPad_236_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"h - 'UInt_t' 0 - ww h - 'UInt_t' 0 - wh "
"U 'TVirtualPad' - 10 - pad U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__G__GPad_236_3_0,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__GPad_236_4_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_236_5_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TFitPanelGraph::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_236_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFitPanelGraph::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_236_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TFitPanelGraph::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_236_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TFitPanelGraph::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_236_9_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_236_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_236_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_236_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_236_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFitPanelGraph::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_236_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFitPanelGraph::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_236_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFitPanelGraph::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_236_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFitPanelGraph::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TFitPanelGraph",1495,G__G__GPad_236_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPaveClass(void) {
   /* TPaveClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass));
   G__memfunc_setup("TPaveClass",982,G__G__GPad_240_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPaveClass",982,G__G__GPad_240_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),-1,0,6,1,1,0,
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"C - - 10 - label U 'TClassTree' - 0 - classtree",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPaveClass",982,G__G__GPad_240_3_0,105,G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),-1,0,1,1,1,0,"u 'TPaveClass' - 11 - PaveVar",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Copy",411,G__G__GPad_240_4_0,121,-1,-1,0,1,1,1,8,"u 'TObject' - 1 - PaveVar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawClasses",1116,G__G__GPad_240_5_0,121,-1,-1,0,1,1,1,0,"C - - 10 \"this\" classes","*MENU*",(void*)NULL,1);
   G__memfunc_setup("GetClassTree",1190,G__G__GPad_240_6_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClassTree),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SaveAs",579,G__G__GPad_240_7_0,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" filename","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__GPad_240_8_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetClasses",1018,G__G__GPad_240_9_0,121,-1,-1,0,2,1,1,0,
"C - - 10 \"this\" classes C - 'Option_t' 10 \"ID\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("ShowClassesUsedBy",1723,G__G__GPad_240_0_1,121,-1,-1,0,1,1,1,0,"C - - 10 \"this\" classes","*MENU*",(void*)NULL,1);
   G__memfunc_setup("ShowClassesUsing",1653,G__G__GPad_240_1_1,121,-1,-1,0,1,1,1,0,"C - - 10 \"this\" classes","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetClassTree",1202,G__G__GPad_240_2_1,121,-1,-1,0,1,1,1,0,"U 'TClassTree' - 0 - classtree",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowLinks",930,G__G__GPad_240_3_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"HMR\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_240_4_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPaveClass::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_240_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPaveClass::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_240_6_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPaveClass::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_240_7_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPaveClass::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_240_8_1,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_240_9_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_240_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_240_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_240_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPaveClass::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_240_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPaveClass::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_240_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPaveClass::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_240_5_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPaveClass::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TPaveClass",1108,G__G__GPad_240_6_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__GPad_240_7_2,(int)('u'),G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),-1,1,1,1,1,0,"u 'TPaveClass' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAttTextCanvas(void) {
   /* TAttTextCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas));
   G__memfunc_setup("TAttTextCanvas",1406,G__G__GPad_242_1_0,105,G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TAttTextCanvas",1406,G__G__GPad_242_2_0,105,G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),-1,0,4,1,1,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 400 ww i - 'Int_t' 0 600 wh",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UpdateTextAttributes",2095,G__G__GPad_242_3_0,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 - align f - 'Float_t' 0 - angle "
"i - 'Int_t' 0 - col i - 'Int_t' 0 - font "
"f - 'Float_t' 0 - tsize",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GPad_242_4_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAttTextCanvas::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GPad_242_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttTextCanvas::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GPad_242_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAttTextCanvas::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GPad_242_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAttTextCanvas::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GPad_242_8_0,85,G__get_linked_tagnum(&G__G__GPadLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GPad_242_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GPad_242_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GPad_242_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GPad_242_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttTextCanvas::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GPad_242_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttTextCanvas::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GPad_242_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAttTextCanvas::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GPad_242_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAttTextCanvas::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TAttTextCanvas",1532,G__G__GPad_242_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__GPad() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EColor),-1,-1,1,"kWhite=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EColor),-1,-1,1,"kBlack=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EColor),-1,-1,1,"kRed=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EColor),-1,-1,1,"kGreen=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EColor),-1,-1,1,"kBlue=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EColor),-1,-1,1,"kYellow=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EColor),-1,-1,1,"kMagenta=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EColor),-1,-1,1,"kCyan=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_ELineStyle),-1,-1,1,"kSolid=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_ELineStyle),-1,-1,1,"kDashed=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_ELineStyle),-1,-1,1,"kDotted=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_ELineStyle),-1,-1,1,"kDashDotted=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kDot=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kPlus=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kStar=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kCircle=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kMultiply=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kFullDotSmall=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kFullDotMedium=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kFullDotLarge=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kOpenTriangleDown=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kFullCross=18",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kFullCircle=20",0,(char*)NULL);
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kFullSquare=21",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kFullTriangleUp=22",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kFullTriangleDown=23",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kOpenCircle=24",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kOpenSquare=25",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kOpenTriangleUp=26",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kOpenDiamond=27",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kOpenCross=28",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kFullStar=29",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),-1,-1,1,"kOpenStar=30",0,(char*)NULL);
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__GPad() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__GPad() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__GPadLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TObjLink = { "TObjLink" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TVirtualPad = { "TVirtualPad" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_EColor = { "EColor" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_ELineStyle = { "ELineStyle" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_EMarkerStyle = { "EMarkerStyle" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TAttPad = { "TAttPad" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttText = { "TAttText" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_ECursor = { "ECursor" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_EEventType = { "EEventType" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TView = { "TView" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TFrame = { "TFrame" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TBox = { "TBox" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TPadView3D = { "TPadView3D" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TVirtualViewer3D = { "TVirtualViewer3D" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TPadcLcLdA = { "TPad::$" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TAttCanvas = { "TAttCanvas" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TCanvasImp = { "TCanvasImp" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TContextMenu = { "TContextMenu" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TControlBar = { "TControlBar" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TDialogCanvas = { "TDialogCanvas" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttMarkerCanvas = { "TAttMarkerCanvas" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TWbox = { "TWbox" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TSlider = { "TSlider" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TSliderBox = { "TSliderBox" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TControlBarButton = { "TControlBarButton" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TControlBarButtoncLcLdA = { "TControlBarButton::$" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TControlBarImp = { "TControlBarImp" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TControlBarcLcLdA = { "TControlBar::$" , 101 , -1 };
G__linked_taginfo G__G__GPadLN_TDrawPanelHist = { "TDrawPanelHist" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TButton = { "TButton" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TGroupButton = { "TGroupButton" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TObjString = { "TObjString" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TClassTree = { "TClassTree" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TVirtualUtilPad = { "TVirtualUtilPad" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TUtilPad = { "TUtilPad" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TFitPanel = { "TFitPanel" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttLineCanvas = { "TAttLineCanvas" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TInspectCanvas = { "TInspectCanvas" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttFillCanvas = { "TAttFillCanvas" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TBuffer3D = { "TBuffer3D" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TViewer3DPad = { "TViewer3DPad" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TFitPanelGraph = { "TFitPanelGraph" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TPave = { "TPave" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TPaveLabel = { "TPaveLabel" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TPaveClass = { "TPaveClass" , 99 , -1 };
G__linked_taginfo G__G__GPadLN_TAttTextCanvas = { "TAttTextCanvas" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__GPad() {
  G__G__GPadLN_TClass.tagnum = -1 ;
  G__G__GPadLN_TBuffer.tagnum = -1 ;
  G__G__GPadLN_TMemberInspector.tagnum = -1 ;
  G__G__GPadLN_TObject.tagnum = -1 ;
  G__G__GPadLN_TNamed.tagnum = -1 ;
  G__G__GPadLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__GPadLN_TList.tagnum = -1 ;
  G__G__GPadLN_TBrowser.tagnum = -1 ;
  G__G__GPadLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__GPadLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GPadLN_TString.tagnum = -1 ;
  G__G__GPadLN_TObjLink.tagnum = -1 ;
  G__G__GPadLN_TVirtualPad.tagnum = -1 ;
  G__G__GPadLN_EColor.tagnum = -1 ;
  G__G__GPadLN_ELineStyle.tagnum = -1 ;
  G__G__GPadLN_EMarkerStyle.tagnum = -1 ;
  G__G__GPadLN_TAttPad.tagnum = -1 ;
  G__G__GPadLN_TAttLine.tagnum = -1 ;
  G__G__GPadLN_TAttFill.tagnum = -1 ;
  G__G__GPadLN_TAttText.tagnum = -1 ;
  G__G__GPadLN_ECursor.tagnum = -1 ;
  G__G__GPadLN_EEventType.tagnum = -1 ;
  G__G__GPadLN_TQObject.tagnum = -1 ;
  G__G__GPadLN_TView.tagnum = -1 ;
  G__G__GPadLN_TCanvas.tagnum = -1 ;
  G__G__GPadLN_TH1F.tagnum = -1 ;
  G__G__GPadLN_TFrame.tagnum = -1 ;
  G__G__GPadLN_TBox.tagnum = -1 ;
  G__G__GPadLN_TPadView3D.tagnum = -1 ;
  G__G__GPadLN_TVirtualViewer3D.tagnum = -1 ;
  G__G__GPadLN_TPad.tagnum = -1 ;
  G__G__GPadLN_TPadcLcLdA.tagnum = -1 ;
  G__G__GPadLN_TAttCanvas.tagnum = -1 ;
  G__G__GPadLN_TCanvasImp.tagnum = -1 ;
  G__G__GPadLN_TContextMenu.tagnum = -1 ;
  G__G__GPadLN_TControlBar.tagnum = -1 ;
  G__G__GPadLN_TDialogCanvas.tagnum = -1 ;
  G__G__GPadLN_TAttMarkerCanvas.tagnum = -1 ;
  G__G__GPadLN_TWbox.tagnum = -1 ;
  G__G__GPadLN_TSlider.tagnum = -1 ;
  G__G__GPadLN_TSliderBox.tagnum = -1 ;
  G__G__GPadLN_TControlBarButton.tagnum = -1 ;
  G__G__GPadLN_TControlBarButtoncLcLdA.tagnum = -1 ;
  G__G__GPadLN_TControlBarImp.tagnum = -1 ;
  G__G__GPadLN_TControlBarcLcLdA.tagnum = -1 ;
  G__G__GPadLN_TDrawPanelHist.tagnum = -1 ;
  G__G__GPadLN_TButton.tagnum = -1 ;
  G__G__GPadLN_TGroupButton.tagnum = -1 ;
  G__G__GPadLN_TObjString.tagnum = -1 ;
  G__G__GPadLN_TClassTree.tagnum = -1 ;
  G__G__GPadLN_TVirtualUtilPad.tagnum = -1 ;
  G__G__GPadLN_TUtilPad.tagnum = -1 ;
  G__G__GPadLN_TFitPanel.tagnum = -1 ;
  G__G__GPadLN_TAttLineCanvas.tagnum = -1 ;
  G__G__GPadLN_TInspectCanvas.tagnum = -1 ;
  G__G__GPadLN_TAttFillCanvas.tagnum = -1 ;
  G__G__GPadLN_TBuffer3D.tagnum = -1 ;
  G__G__GPadLN_TViewer3DPad.tagnum = -1 ;
  G__G__GPadLN_TFitPanelGraph.tagnum = -1 ;
  G__G__GPadLN_TPave.tagnum = -1 ;
  G__G__GPadLN_TPaveLabel.tagnum = -1 ;
  G__G__GPadLN_TPaveClass.tagnum = -1 ;
  G__G__GPadLN_TAttTextCanvas.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__GPad() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__GPadLN_TClass);
   G__get_linked_tagnum(&G__G__GPadLN_TBuffer);
   G__get_linked_tagnum(&G__G__GPadLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__GPadLN_TObject);
   G__get_linked_tagnum(&G__G__GPadLN_TNamed);
   G__get_linked_tagnum(&G__G__GPadLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__G__GPadLN_TList);
   G__get_linked_tagnum(&G__G__GPadLN_TBrowser);
   G__get_linked_tagnum(&G__G__GPadLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__GPadLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__GPadLN_TString);
   G__get_linked_tagnum(&G__G__GPadLN_TObjLink);
   G__get_linked_tagnum(&G__G__GPadLN_TVirtualPad);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_EColor),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_ELineStyle),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_EMarkerStyle),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum(&G__G__GPadLN_TAttPad);
   G__get_linked_tagnum(&G__G__GPadLN_TAttLine);
   G__get_linked_tagnum(&G__G__GPadLN_TAttFill);
   G__get_linked_tagnum(&G__G__GPadLN_TAttText);
   G__get_linked_tagnum(&G__G__GPadLN_ECursor);
   G__get_linked_tagnum(&G__G__GPadLN_EEventType);
   G__get_linked_tagnum(&G__G__GPadLN_TQObject);
   G__get_linked_tagnum(&G__G__GPadLN_TView);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TCanvas),sizeof(TCanvas),-1,130816,"Graphics canvas",G__setup_memvarTCanvas,G__setup_memfuncTCanvas);
   G__get_linked_tagnum(&G__G__GPadLN_TH1F);
   G__get_linked_tagnum(&G__G__GPadLN_TFrame);
   G__get_linked_tagnum(&G__G__GPadLN_TBox);
   G__get_linked_tagnum(&G__G__GPadLN_TPadView3D);
   G__get_linked_tagnum(&G__G__GPadLN_TVirtualViewer3D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TPad),sizeof(TPad),-1,130816,"A Graphics pad",G__setup_memvarTPad,G__setup_memfuncTPad);
   G__get_linked_tagnum(&G__G__GPadLN_TPadcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttCanvas),sizeof(TAttCanvas),-1,263424,"Canvas attributes",G__setup_memvarTAttCanvas,G__setup_memfuncTAttCanvas);
   G__get_linked_tagnum(&G__G__GPadLN_TCanvasImp);
   G__get_linked_tagnum(&G__G__GPadLN_TContextMenu);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBar),sizeof(TControlBar),-1,324864,"Control bar",G__setup_memvarTControlBar,G__setup_memfuncTControlBar);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TDialogCanvas),sizeof(TDialogCanvas),-1,324864,"A specialized canvas to set attributes.",G__setup_memvarTDialogCanvas,G__setup_memfuncTDialogCanvas);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttMarkerCanvas),sizeof(TAttMarkerCanvas),-1,324864,"A specialized dialog canvas to set marker attributes.",G__setup_memvarTAttMarkerCanvas,G__setup_memfuncTAttMarkerCanvas);
   G__get_linked_tagnum(&G__G__GPadLN_TWbox);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TSlider),sizeof(TSlider),-1,327424,"A user interface slider.",G__setup_memvarTSlider,G__setup_memfuncTSlider);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TSliderBox),sizeof(TSliderBox),-1,324864,"The moving box of a TSlider",G__setup_memvarTSliderBox,G__setup_memfuncTSliderBox);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TControlBarButton),sizeof(TControlBarButton),-1,324864,"The Control bar button",G__setup_memvarTControlBarButton,G__setup_memfuncTControlBarButton);
   G__get_linked_tagnum(&G__G__GPadLN_TControlBarButtoncLcLdA);
   G__get_linked_tagnum(&G__G__GPadLN_TControlBarImp);
   G__get_linked_tagnum(&G__G__GPadLN_TControlBarcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TDrawPanelHist),sizeof(TDrawPanelHist),-1,324864,"Class used to control histogram drawing options",G__setup_memvarTDrawPanelHist,G__setup_memfuncTDrawPanelHist);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TButton),sizeof(TButton),-1,327424,"A user interface button.",G__setup_memvarTButton,G__setup_memfuncTButton);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TGroupButton),sizeof(TGroupButton),-1,327424,"A user interface button in a group of buttons.",G__setup_memvarTGroupButton,G__setup_memfuncTGroupButton);
   G__get_linked_tagnum(&G__G__GPadLN_TObjString);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TClassTree),sizeof(TClassTree),-1,128256,"Manager class to draw classes inheritance tree and relations",G__setup_memvarTClassTree,G__setup_memfuncTClassTree);
   G__get_linked_tagnum(&G__G__GPadLN_TVirtualUtilPad);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TUtilPad),sizeof(TUtilPad),-1,62720,"misc. pad/canvas  utilities",G__setup_memvarTUtilPad,G__setup_memfuncTUtilPad);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanel),sizeof(TFitPanel),-1,324864,"Class used to control histograms fit panel",G__setup_memvarTFitPanel,G__setup_memfuncTFitPanel);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttLineCanvas),sizeof(TAttLineCanvas),-1,324864,"A specialized dialog canvas to set line attributes.",G__setup_memvarTAttLineCanvas,G__setup_memfuncTAttLineCanvas);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TInspectCanvas),sizeof(TInspectCanvas),-1,324864,"The canvas Inspector",G__setup_memvarTInspectCanvas,G__setup_memfuncTInspectCanvas);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttFillCanvas),sizeof(TAttFillCanvas),-1,324864,"A specialized dialog canvas to set fill attributes.",G__setup_memvarTAttFillCanvas,G__setup_memfuncTAttFillCanvas);
   G__get_linked_tagnum(&G__G__GPadLN_TBuffer3D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TViewer3DPad),sizeof(TViewer3DPad),-1,36352,"A 3D Viewer painter for TPads",G__setup_memvarTViewer3DPad,G__setup_memfuncTViewer3DPad);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TFitPanelGraph),sizeof(TFitPanelGraph),-1,324864,"Class used to control graphs fit panel",G__setup_memvarTFitPanelGraph,G__setup_memfuncTFitPanelGraph);
   G__get_linked_tagnum(&G__G__GPadLN_TPave);
   G__get_linked_tagnum(&G__G__GPadLN_TPaveLabel);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TPaveClass),sizeof(TPaveClass),-1,325376,"A TPaveLabel specialized for TClassTree objects",G__setup_memvarTPaveClass,G__setup_memfuncTPaveClass);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GPadLN_TAttTextCanvas),sizeof(TAttTextCanvas),-1,324864,"A specialized dialog canvas to set text attributes.",G__setup_memvarTAttTextCanvas,G__setup_memfuncTAttTextCanvas);
}
extern "C" void G__cpp_setupG__GPad(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__GPad()");
  G__set_cpp_environmentG__GPad();
  G__cpp_setup_tagtableG__GPad();

  G__cpp_setup_inheritanceG__GPad();

  G__cpp_setup_typetableG__GPad();

  G__cpp_setup_memvarG__GPad();

  G__cpp_setup_memfuncG__GPad();
  G__cpp_setup_globalG__GPad();
  G__cpp_setup_funcG__GPad();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__GPad();
  return;
}
class G__cpp_setup_initG__GPad {
  public:
    G__cpp_setup_initG__GPad() { G__add_setup_func("G__GPad",(G__incsetup)(&G__cpp_setupG__GPad)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__GPad() { G__remove_setup_func("G__GPad"); }
};
G__cpp_setup_initG__GPad G__cpp_setup_initializerG__GPad;

