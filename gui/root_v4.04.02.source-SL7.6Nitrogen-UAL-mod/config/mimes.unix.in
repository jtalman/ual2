# ROOT mime types
# Actions beginning with ! will be executed in the shell
# Actions beginning with -> are member functions of the selected
# object's class (not yet implemented, still hard coded in the
# class Browse() method).
# All other actions will be handed "as is" to the interpreter

[application/postscript]
pattern = *.e?ps
icon = ps_s.xpm ps_t.xpm
action = !ghostview %s

[application/pdf]
pattern = *.pdf
icon = pdf.xpm
action = !acroread %s

[application/x-deb]
pattern = *.deb
icon = deb_s.xpm deb_t.xpm
action = !xterm -e dpkg -I %s

[application/x-rpm]
pattern = *.rpm
icon = rpm_s.xpm rpm_t.xpm
action = !xterm -e rpm -qip %s

[audio/x-wav]
pattern = *.wave?
icon = audio_s.xpm
action = !vplay -s 22500 %s

[audio/basic]
pattern = *.snd *.au
icon = audio_s.xpm
action = !cat %s /dev/audio

[audio/midi]
pattern = *.midi?
icon = midi_s.xpm
action = !cat %s /dev/midi

[video/mpeg]
pattern = *.mpeg? *.mpg
icon = video_s.xpm
action = !xanim %s

[image/gif]
pattern = *.gif
icon = psp_s.xpm psp_t.xpm
action = TGMainFrame *m=0;if(!gClient->IsEditable())m=new TGMainFrame();m->SetWindowName("%s");TGPictureButton *b=new TGPictureButton(m,"%s");b->MapWindow();if(!gClient->IsEditable()){m->AddFrame(b);m->Resize();m->Move(300, 300);m->MapRaised();}

[image/jpeg]
pattern = *.jpeg *.jp[ge]
icon = psp_s.xpm psp_t.xpm
action = TGMainFrame *m=0;if(!gClient->IsEditable())m=new TGMainFrame();m->SetWindowName("%s");TGPictureButton *b=new TGPictureButton(m,"%s");b->MapWindow();if(!gClient->IsEditable()){m->AddFrame(b);m->Resize();m->Move(300, 300);m->MapRaised();}

[image/png]
pattern = *.png
icon = psp_s.xpm psp_t.xpm
action = TGMainFrame *m=0;if(!gClient->IsEditable())m=new TGMainFrame();m->SetWindowName("%s");TGPictureButton *b=new TGPictureButton(m,"%s");b->MapWindow();if(!gClient->IsEditable()){m->AddFrame(b);m->Resize();m->Move(300, 300);m->MapRaised();}

[image/tiff]
pattern = *.tiff?
icon = psp_s.xpm psp_t.xpm
action = TGMainFrame *m=0;if(!gClient->IsEditable())m=new TGMainFrame();m->SetWindowName("%s");TGPictureButton *b=new TGPictureButton(m,"%s");b->MapWindow();if(!gClient->IsEditable()){m->AddFrame(b);m->Resize();m->Move(300, 300);m->MapRaised();}

[image/x-xpixmap]
pattern = *.x[bp]m
icon = psp_s.xpm psp_t.xpm
action = TGMainFrame *m=0;if(!gClient->IsEditable())m=new TGMainFrame();m->SetWindowName("%s");TGPictureButton *b=new TGPictureButton(m,"%s");b->MapWindow();if(!gClient->IsEditable()){m->AddFrame(b);m->Resize();m->Move(300, 300);m->MapRaised();}

[image/bmp]
pattern = *.bmp
icon = psp_s.xpm psp_t.xpm
action = TGMainFrame *m=0;if(!gClient->IsEditable())m=new TGMainFrame();m->SetWindowName("%s");TGPictureButton *b=new TGPictureButton(m,"%s");b->MapWindow();if(!gClient->IsEditable()){m->AddFrame(b);m->Resize();m->Move(300, 300);m->MapRaised();}

[image/ico]
pattern = *.ico
icon = psp_s.xpm psp_t.xpm
action = TGMainFrame *m=0;if(!gClient->IsEditable())m=new TGMainFrame();m->SetWindowName("%s");TGPictureButton *b=new TGPictureButton(m,"%s");b->MapWindow();if(!gClient->IsEditable()){m->AddFrame(b);m->Resize();m->Move(300, 300);m->MapRaised();}

[image/cur]
pattern = *.cur
icon = psp_s.xpm psp_t.xpm
action = TGMainFrame *m=0;if(!gClient->IsEditable())m=new TGMainFrame();m->SetWindowName("%s");TGPictureButton *b=new TGPictureButton(m,"%s");b->MapWindow();if(!gClient->IsEditable()){m->AddFrame(b);m->Resize();m->Move(300, 300);m->MapRaised();}

[image/xcf]
pattern = *.xcf
icon = psp_s.xpm psp_t.xpm
action = TGMainFrame *m=0;if(!gClient->IsEditable())m=new TGMainFrame();m->SetWindowName("%s");TGPictureButton *b=new TGPictureButton(m,"%s");b->MapWindow();if(!gClient->IsEditable()){m->AddFrame(b);m->Resize();m->Move(300, 300);m->MapRaised();}

[image/ppm]
pattern = *.p[n]m
icon = psp_s.xpm psp_t.xpm
action = TGMainFrame *m=0;if(!gClient->IsEditable())m=new TGMainFrame();m->SetWindowName("%s");TGPictureButton *b=new TGPictureButton(m,"%s");b->MapWindow();if(!gClient->IsEditable()){m->AddFrame(b);m->Resize();m->Move(300, 300);m->MapRaised();}

[text/html]
pattern = *.html
icon = netscape.xpm
action = !netscape %s

[text/plain]
pattern = *.te?xt
icon = emacs.xpm
action = !xterm -e vi %s &

[text/tex]
pattern = *.tex
icon = tex.xpm
action = !xterm -e vi %s &

[settings/executable]
pattern = .bash_profile .bashrc .profile .login .kshrc .cshrc .xsession
icon = run_config.xpm
action = !xterm -e vi %s &

[settings/config]
pattern = .*rc *.conf
icon = settings.xpm
action = !xterm -e vi %s &

[text/source-c]
pattern = *.c
icon = c_src_s.xpm c_src_t.xpm
action = !xterm -e vi %s &

[text/source-h]
pattern = *.h *.H
icon = h_src_s.xpm h_src_t.xpm
action = !xterm -e vi %s &

[text/source-c++]
pattern = *.cxx *.cpp *.cc
icon = cpp_src_s.xpm cpp_src_t.xpm
action = !xterm -e vi %s &

[text/source-h++]
pattern = *.hxx *.hpp
icon = hpp_src_s.xpm hpp_src_t.xpm
action = !xterm -e vi %s &

[root/script]
pattern = *.C
icon = macro_s.xpm macro_t.xpm
action = .x %s

[root/file]
pattern = *.root
icon = rootdb_s.xpm rootdb_t.xpm
action = TFile *ftmp = new TFile("%s")

[hbook/file]
pattern = *.hbook
icon = rootdb_s.xpm rootdb_t.xpm
action = THbookFile *ftmp = new THbookFile("%s")

[root/tfile]
pattern = TFile TNetFile TRFIOFile TWebFile
icon = rootdb_s.xpm rootdb_t.xpm
action = ->Browse()

[root/th1]
pattern = TH1[CSFDIK]
icon = h1_s.xpm h1_t.xpm
action = ->Draw()

[root/th2]
pattern = TH2[CSFDI]
icon = h2_s.xpm h2_t.xpm
action = ->Draw()

[root/th3]
pattern = TH3[CSFDI]
icon = h3_s.xpm h3_t.xpm
action = ->Draw()

[root/tf1]
pattern = TF1
icon = f1_s.xpm f1_t.xpm
action = ->Draw()

[root/tf2]
pattern = TF2
icon = f2_s.xpm f2_t.xpm
action = ->Draw()

[root/tprofile]
pattern = TProfile
icon = profile_s.xpm profile_t.xpm
action = ->Draw()

[root/ttree]
pattern = TTree
icon = tree_s.xpm tree_t.xpm
action = ->Browse()

[root/tntuple]
pattern = TNtuple
icon = ntuple_s.xpm ntuple_t.xpm
action = ->Browse()

[root/tchain]
pattern = TChain
icon = chain_s.xpm chain_t.xpm
action = ->Browse()

[root/tbranchelement-folder]
pattern = TBranchElement-folder
icon = branch_folder_s.xpm branch_folder_t.xpm
action = ->Browse()

[root/tbranchelement-leaf]
pattern = TBranchElement-leaf
icon = leaf_s.xpm leaf_t.xpm
action = ->Browse()

[root/tleaf]
pattern = TLeaf*
icon = leaf_s.xpm leaf_t.xpm
action = ->Browse()

[root/tmethodbrowsable-leaf]
pattern = TMethodBrowsable-leaf
icon = leaf_method_s.xpm leaf_method_t.xpm
action = ->Browse()

[root/tmethodbrowsable-branch]
pattern = TMethodBrowsable-branch
icon = return_object_s.xpm return_object_t.xpm
action = ->Browse()

# actions used by GuiBuilder
[root/textbutton]
pattern = TGTextButton
icon = bld_textbutton.xpm bld_textbutton.xpm
action = new TGuiBldTextDialog("%s")

[root/radiobutton]
pattern = TGRadioButton
icon = bld_radiobutton.xpm bld_radiobutton.xpm
action = new TGuiBldTextDialog("%s")

[root/checkbutton]
pattern = TGCheckButton
icon = bld_checkbutton.xpm bld_checkbutton.xpm
action = new TGuiBldTextDialog("%s")

[root/label]
pattern = TGLabel
icon = bld_label.xpm bld_label.xpm
action = new TGuiBldTextDialog("%s")

[root/textentry]
pattern = TGTextEntry
icon = bld_entry.xpm bld_entry.xpm
action = new TGuiBldTextDialog("%s")

[root/groupframe]
pattern = TGGroupFrame
icon = bld_groupframe.xpm bld_groupframe.xpm
action = new TGuiBldTextDialog("%s")


