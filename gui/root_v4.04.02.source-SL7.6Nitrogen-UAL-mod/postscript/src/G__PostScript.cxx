//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:28:22 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__PostScript.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TImageDump_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TImageDump_IsA(const void*);
   static void *new_TImageDump(void *p = 0);
   static void *newArray_TImageDump(Long_t size);
   static void delete_TImageDump(void *p);
   static void deleteArray_TImageDump(void *p);
   static void destruct_TImageDump(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TImageDump*)
   {
      ::TImageDump *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TImageDump", ::TImageDump::Class_Version(), "postscript/inc/TImageDump.h", 30,
                  typeid(::TImageDump), DefineBehavior(ptr, ptr),
                  &::TImageDump::Dictionary, &TImageDump_IsA, 4,
                  sizeof(::TImageDump) );
      instance.SetNew(&new_TImageDump);
      instance.SetNewArray(&newArray_TImageDump);
      instance.SetDelete(&delete_TImageDump);
      instance.SetDeleteArray(&deleteArray_TImageDump);
      instance.SetDestructor(&destruct_TImageDump);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TImageDump*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSVG_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSVG_IsA(const void*);
   static void *new_TSVG(void *p = 0);
   static void *newArray_TSVG(Long_t size);
   static void delete_TSVG(void *p);
   static void deleteArray_TSVG(void *p);
   static void destruct_TSVG(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSVG*)
   {
      ::TSVG *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSVG", ::TSVG::Class_Version(), "postscript/inc/TSVG.h", 30,
                  typeid(::TSVG), DefineBehavior(ptr, ptr),
                  &::TSVG::Dictionary, &TSVG_IsA, 4,
                  sizeof(::TSVG) );
      instance.SetNew(&new_TSVG);
      instance.SetNewArray(&newArray_TSVG);
      instance.SetDelete(&delete_TSVG);
      instance.SetDeleteArray(&deleteArray_TSVG);
      instance.SetDestructor(&destruct_TSVG);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSVG*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPDF_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPDF_IsA(const void*);
   static void *new_TPDF(void *p = 0);
   static void *newArray_TPDF(Long_t size);
   static void delete_TPDF(void *p);
   static void deleteArray_TPDF(void *p);
   static void destruct_TPDF(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPDF*)
   {
      ::TPDF *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPDF", ::TPDF::Class_Version(), "postscript/inc/TPDF.h", 30,
                  typeid(::TPDF), DefineBehavior(ptr, ptr),
                  &::TPDF::Dictionary, &TPDF_IsA, 4,
                  sizeof(::TPDF) );
      instance.SetNew(&new_TPDF);
      instance.SetNewArray(&newArray_TPDF);
      instance.SetDelete(&delete_TPDF);
      instance.SetDeleteArray(&deleteArray_TPDF);
      instance.SetDestructor(&destruct_TPDF);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPDF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPostScript_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPostScript_IsA(const void*);
   static void *new_TPostScript(void *p = 0);
   static void *newArray_TPostScript(Long_t size);
   static void delete_TPostScript(void *p);
   static void deleteArray_TPostScript(void *p);
   static void destruct_TPostScript(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPostScript*)
   {
      ::TPostScript *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPostScript", ::TPostScript::Class_Version(), "postscript/inc/TPostScript.h", 31,
                  typeid(::TPostScript), DefineBehavior(ptr, ptr),
                  &::TPostScript::Dictionary, &TPostScript_IsA, 4,
                  sizeof(::TPostScript) );
      instance.SetNew(&new_TPostScript);
      instance.SetNewArray(&newArray_TPostScript);
      instance.SetDelete(&delete_TPostScript);
      instance.SetDeleteArray(&deleteArray_TPostScript);
      instance.SetDestructor(&destruct_TPostScript);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPostScript*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TImageDump::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TImageDump::Class_Name()
{
   return "TImageDump";
}

//______________________________________________________________________________
const char *TImageDump::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TImageDump*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TImageDump::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TImageDump*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TImageDump::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TImageDump*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TImageDump::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TImageDump*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSVG::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSVG::Class_Name()
{
   return "TSVG";
}

//______________________________________________________________________________
const char *TSVG::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSVG*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSVG::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSVG*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSVG::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSVG*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSVG::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSVG*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPDF::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPDF::Class_Name()
{
   return "TPDF";
}

//______________________________________________________________________________
const char *TPDF::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPDF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPDF::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPDF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPDF::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPDF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPDF::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPDF*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPostScript::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPostScript::Class_Name()
{
   return "TPostScript";
}

//______________________________________________________________________________
const char *TPostScript::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPostScript*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPostScript::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPostScript*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPostScript::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPostScript*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPostScript::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPostScript*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TPostScript::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPostScript.

   if (R__b.IsReading()) {
      TPostScript::Class()->ReadBuffer(R__b, this);
   } else {
      TPostScript::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TPostScript::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPostScript.

      TClass *R__cl = ::TPostScript::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fX1v", &fX1v);
      R__insp.Inspect(R__cl, R__parent, "fY1v", &fY1v);
      R__insp.Inspect(R__cl, R__parent, "fX2v", &fX2v);
      R__insp.Inspect(R__cl, R__parent, "fY2v", &fY2v);
      R__insp.Inspect(R__cl, R__parent, "fX1w", &fX1w);
      R__insp.Inspect(R__cl, R__parent, "fY1w", &fY1w);
      R__insp.Inspect(R__cl, R__parent, "fX2w", &fX2w);
      R__insp.Inspect(R__cl, R__parent, "fY2w", &fY2w);
      R__insp.Inspect(R__cl, R__parent, "fDXC", &fDXC);
      R__insp.Inspect(R__cl, R__parent, "fDYC", &fDYC);
      R__insp.Inspect(R__cl, R__parent, "fXC", &fXC);
      R__insp.Inspect(R__cl, R__parent, "fYC", &fYC);
      R__insp.Inspect(R__cl, R__parent, "fFX", &fFX);
      R__insp.Inspect(R__cl, R__parent, "fFY", &fFY);
      R__insp.Inspect(R__cl, R__parent, "fXVP1", &fXVP1);
      R__insp.Inspect(R__cl, R__parent, "fXVP2", &fXVP2);
      R__insp.Inspect(R__cl, R__parent, "fYVP1", &fYVP1);
      R__insp.Inspect(R__cl, R__parent, "fYVP2", &fYVP2);
      R__insp.Inspect(R__cl, R__parent, "fXVS1", &fXVS1);
      R__insp.Inspect(R__cl, R__parent, "fXVS2", &fXVS2);
      R__insp.Inspect(R__cl, R__parent, "fYVS1", &fYVS1);
      R__insp.Inspect(R__cl, R__parent, "fYVS2", &fYVS2);
      R__insp.Inspect(R__cl, R__parent, "fXsize", &fXsize);
      R__insp.Inspect(R__cl, R__parent, "fYsize", &fYsize);
      R__insp.Inspect(R__cl, R__parent, "fMaxsize", &fMaxsize);
      R__insp.Inspect(R__cl, R__parent, "fRed", &fRed);
      R__insp.Inspect(R__cl, R__parent, "fGreen", &fGreen);
      R__insp.Inspect(R__cl, R__parent, "fBlue", &fBlue);
      R__insp.Inspect(R__cl, R__parent, "fLineScale", &fLineScale);
      R__insp.Inspect(R__cl, R__parent, "fLineJoin", &fLineJoin);
      R__insp.Inspect(R__cl, R__parent, "fSave", &fSave);
      R__insp.Inspect(R__cl, R__parent, "fNXzone", &fNXzone);
      R__insp.Inspect(R__cl, R__parent, "fNYzone", &fNYzone);
      R__insp.Inspect(R__cl, R__parent, "fIXzone", &fIXzone);
      R__insp.Inspect(R__cl, R__parent, "fIYzone", &fIYzone);
      R__insp.Inspect(R__cl, R__parent, "fMarkerSizeCur", &fMarkerSizeCur);
      R__insp.Inspect(R__cl, R__parent, "fCurrentColor", &fCurrentColor);
      R__insp.Inspect(R__cl, R__parent, "fNpages", &fNpages);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "fMode", &fMode);
      R__insp.Inspect(R__cl, R__parent, "fClip", &fClip);
      R__insp.Inspect(R__cl, R__parent, "fBoundingBox", &fBoundingBox);
      R__insp.Inspect(R__cl, R__parent, "fClear", &fClear);
      R__insp.Inspect(R__cl, R__parent, "fClipStatus", &fClipStatus);
      R__insp.Inspect(R__cl, R__parent, "fRange", &fRange);
      R__insp.Inspect(R__cl, R__parent, "fZone", &fZone);
      R__insp.Inspect(R__cl, R__parent, "fPatterns[32]", fPatterns);
      R__insp.Inspect(R__cl, R__parent, "fNbinCT", &fNbinCT);
      R__insp.Inspect(R__cl, R__parent, "fNbCellW", &fNbCellW);
      R__insp.Inspect(R__cl, R__parent, "fNbCellLine", &fNbCellLine);
      R__insp.Inspect(R__cl, R__parent, "fMaxLines", &fMaxLines);
      R__insp.Inspect(R__cl, R__parent, "fLastCellRed", &fLastCellRed);
      R__insp.Inspect(R__cl, R__parent, "fLastCellGreen", &fLastCellGreen);
      R__insp.Inspect(R__cl, R__parent, "fLastCellBlue", &fLastCellBlue);
      R__insp.Inspect(R__cl, R__parent, "fNBSameColorCell", &fNBSameColorCell);
      TVirtualPS::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPostScript_IsA(const void *obj) {
      return ((::TPostScript*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TPostScript(void *p) {
      return  p ? new(p) ::TPostScript : new ::TPostScript;
   }
   static void *newArray_TPostScript(Long_t size) {
      return new ::TPostScript[size];
   }
   // Wrapper around operator delete
   static void delete_TPostScript(void *p) {
      delete ((::TPostScript*)p);
   }
   static void deleteArray_TPostScript(void *p) {
      delete [] ((::TPostScript*)p);
   }
   static void destruct_TPostScript(void *p) {
      typedef ::TPostScript current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPostScript

//______________________________________________________________________________
void TSVG::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSVG.

   if (R__b.IsReading()) {
      TSVG::Class()->ReadBuffer(R__b, this);
   } else {
      TSVG::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TSVG::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSVG.

      TClass *R__cl = ::TSVG::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fXsize", &fXsize);
      R__insp.Inspect(R__cl, R__parent, "fYsize", &fYsize);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "fBoundingBox", &fBoundingBox);
      R__insp.Inspect(R__cl, R__parent, "fRange", &fRange);
      R__insp.Inspect(R__cl, R__parent, "fYsizeSVG", &fYsizeSVG);
      TVirtualPS::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSVG_IsA(const void *obj) {
      return ((::TSVG*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TSVG(void *p) {
      return  p ? new(p) ::TSVG : new ::TSVG;
   }
   static void *newArray_TSVG(Long_t size) {
      return new ::TSVG[size];
   }
   // Wrapper around operator delete
   static void delete_TSVG(void *p) {
      delete ((::TSVG*)p);
   }
   static void deleteArray_TSVG(void *p) {
      delete [] ((::TSVG*)p);
   }
   static void destruct_TSVG(void *p) {
      typedef ::TSVG current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSVG

//______________________________________________________________________________
void TPDF::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPDF.

   if (R__b.IsReading()) {
      TPDF::Class()->ReadBuffer(R__b, this);
   } else {
      TPDF::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TPDF::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPDF.

      TClass *R__cl = ::TPDF::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRed", &fRed);
      R__insp.Inspect(R__cl, R__parent, "fGreen", &fGreen);
      R__insp.Inspect(R__cl, R__parent, "fBlue", &fBlue);
      R__insp.Inspect(R__cl, R__parent, "fXsize", &fXsize);
      R__insp.Inspect(R__cl, R__parent, "fYsize", &fYsize);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "fPageFormat", &fPageFormat);
      R__insp.Inspect(R__cl, R__parent, "fPageOrientation", &fPageOrientation);
      R__insp.Inspect(R__cl, R__parent, "fStartStream", &fStartStream);
      R__insp.Inspect(R__cl, R__parent, "*fObjPos", &fObjPos);
      R__insp.Inspect(R__cl, R__parent, "fObjPosSize", &fObjPosSize);
      R__insp.Inspect(R__cl, R__parent, "fNbObj", &fNbObj);
      R__insp.Inspect(R__cl, R__parent, "fNbPage", &fNbPage);
      R__insp.Inspect(R__cl, R__parent, "fCompress", &fCompress);
      R__insp.Inspect(R__cl, R__parent, "fRange", &fRange);
      TVirtualPS::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPDF_IsA(const void *obj) {
      return ((::TPDF*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TPDF(void *p) {
      return  p ? new(p) ::TPDF : new ::TPDF;
   }
   static void *newArray_TPDF(Long_t size) {
      return new ::TPDF[size];
   }
   // Wrapper around operator delete
   static void delete_TPDF(void *p) {
      delete ((::TPDF*)p);
   }
   static void deleteArray_TPDF(void *p) {
      delete [] ((::TPDF*)p);
   }
   static void destruct_TPDF(void *p) {
      typedef ::TPDF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPDF

//______________________________________________________________________________
void TImageDump::Streamer(TBuffer &R__b)
{
   // Stream an object of class TImageDump.

   if (R__b.IsReading()) {
      TImageDump::Class()->ReadBuffer(R__b, this);
   } else {
      TImageDump::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TImageDump::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TImageDump.

      TClass *R__cl = ::TImageDump::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fImage", &fImage);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      TVirtualPS::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TImageDump_IsA(const void *obj) {
      return ((::TImageDump*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TImageDump(void *p) {
      return  p ? new(p) ::TImageDump : new ::TImageDump;
   }
   static void *newArray_TImageDump(Long_t size) {
      return new ::TImageDump[size];
   }
   // Wrapper around operator delete
   static void delete_TImageDump(void *p) {
      delete ((::TImageDump*)p);
   }
   static void deleteArray_TImageDump(void *p) {
      delete [] ((::TImageDump*)p);
   }
   static void destruct_TImageDump(void *p) {
      typedef ::TImageDump current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TImageDump

/********************************************************
* postscript/src/G__PostScript.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__PostScript();

extern "C" void G__set_cpp_environmentG__PostScript() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("postscript/inc/TImageDump.h");
  G__add_compiledheader("postscript/inc/TSVG.h");
  G__add_compiledheader("postscript/inc/TPDF.h");
  G__add_compiledheader("postscript/inc/TPostScript.h");
  G__cpp_reset_tagtableG__PostScript();
}
class G__postscriptdIsrcdIG__PostScriptdOcxx_tag {};

void* operator new(size_t size,G__postscriptdIsrcdIG__PostScriptdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__postscriptdIsrcdIG__PostScriptdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_postscriptdIsrcdIG__PostScriptdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__PostScript() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TImageDump */
static int G__G__PostScript_136_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TImageDump *p=NULL;
   if(G__getaryconstruct()) p=new TImageDump[G__getaryconstruct()];
   else                    p=new TImageDump;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TImageDump *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TImageDump((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TImageDump((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->CellArrayBegin((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->CellArrayFill((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->CellArrayEnd();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->DrawBox((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->DrawFrame(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])
,(Int_t)G__int(libp->para[6]),(Int_t)G__int(libp->para[7]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->DrawPolyMarker((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->DrawPolyMarker((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->DrawPS((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->DrawPS((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->NewPage();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->Open((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->Open((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->Text((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(const char*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->SetColor((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TImageDump::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TImageDump::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TImageDump::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TImageDump::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TImageDump*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TImageDump*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TImageDump::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TImageDump::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TImageDump::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_136_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TImageDump::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__PostScript_136_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TImageDump *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TImageDump(*(TImageDump*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TImageDump G__TTImageDump;
static int G__G__PostScript_136_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TImageDump *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TImageDump *)((G__getstructoffset())+sizeof(TImageDump)*i);
   else  delete (TImageDump *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__PostScript_136_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TImageDump *dest = (TImageDump*)(G__getstructoffset());
   *dest = (*(TImageDump*)libp->para[0].ref);
   const TImageDump& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSVG */
static int G__G__PostScript_138_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSVG *p=NULL;
   if(G__getaryconstruct()) p=new TSVG[G__getaryconstruct()];
   else                    p=new TSVG;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TSVG);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSVG *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TSVG((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TSVG((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TSVG);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->CellArrayBegin((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->CellArrayFill((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->CellArrayEnd();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSVG*)(G__getstructoffset()))->CMtoSVG((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->DrawBox((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->DrawFrame(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])
,(Int_t)G__int(libp->para[6]),(Int_t)G__int(libp->para[7]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->DrawPolyLine((Int_t)G__int(libp->para[0]),(TPoints*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->DrawPolyLineNDC((Int_t)G__int(libp->para[0]),(TPoints*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->DrawPolyMarker((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->DrawPolyMarker((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->DrawPS((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->DrawPS((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->Initialize();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->MovePS((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->NewPage();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->Off();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->On();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->Open((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->Open((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->Range((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetColor((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetColor((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetFillColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetFillColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetLineColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetLineColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetLineStyle((Style_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetLineStyle();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetLineWidth((Width_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetLineWidth();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetLineScale((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetLineScale();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetMarkerColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetMarkerColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetTextColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->SetTextColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->Text((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(const char*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->TextNDC((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(const char*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSVG*)(G__getstructoffset()))->UtoSVG((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSVG*)(G__getstructoffset()))->VtoSVG((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSVG*)(G__getstructoffset()))->XtoSVG((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSVG*)(G__getstructoffset()))->YtoSVG((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSVG::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSVG::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSVG::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSVG::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSVG*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSVG*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSVG::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSVG::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSVG::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_138_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSVG::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__PostScript_138_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TSVG *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TSVG(*(TSVG*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TSVG);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSVG G__TTSVG;
static int G__G__PostScript_138_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSVG *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSVG *)((G__getstructoffset())+sizeof(TSVG)*i);
   else  delete (TSVG *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__PostScript_138_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSVG *dest = (TSVG*)(G__getstructoffset());
   *dest = (*(TSVG*)libp->para[0].ref);
   const TSVG& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPDF */
static int G__G__PostScript_139_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPDF *p=NULL;
   if(G__getaryconstruct()) p=new TPDF[G__getaryconstruct()];
   else                    p=new TPDF;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TPDF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPDF *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TPDF((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TPDF((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TPDF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->CellArrayBegin((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->CellArrayFill((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->CellArrayEnd();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TPDF*)(G__getstructoffset()))->CMtoPDF((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->DrawBox((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->DrawFrame(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])
,(Int_t)G__int(libp->para[6]),(Int_t)G__int(libp->para[7]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->DrawHatch((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Float_t*)G__int(libp->para[3])
,(Float_t*)G__int(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->DrawHatch((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3])
,(Double_t*)G__int(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->DrawPolyLine((Int_t)G__int(libp->para[0]),(TPoints*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->DrawPolyLineNDC((Int_t)G__int(libp->para[0]),(TPoints*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->DrawPolyMarker((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->DrawPolyMarker((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->DrawPS((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->DrawPS((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->LineTo((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->MoveTo((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->FontEncode();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->NewObject((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->NewPage();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->Off();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->On();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->Open((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->Open((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->PrintFast((Int_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->PrintFast((Int_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->PrintStr((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->PrintStr();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->Range((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetColor((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetColor((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetFillColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetFillColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetFillPatterns((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetLineColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetLineColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetLineStyle((Style_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetLineStyle();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetLineWidth((Width_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetLineWidth();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetMarkerColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetMarkerColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetTextColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->SetTextColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->Text((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(const char*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->TextNDC((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(const char*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->WriteCompressedBuffer();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TPDF*)(G__getstructoffset()))->UtoPDF((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TPDF*)(G__getstructoffset()))->VtoPDF((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TPDF*)(G__getstructoffset()))->XtoPDF((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TPDF*)(G__getstructoffset()))->YtoPDF((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPDF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPDF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPDF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPDF::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPDF*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPDF*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPDF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPDF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPDF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_139_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPDF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__PostScript_139_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TPDF *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TPDF(*(TPDF*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TPDF);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPDF G__TTPDF;
static int G__G__PostScript_139_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPDF *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPDF *)((G__getstructoffset())+sizeof(TPDF)*i);
   else  delete (TPDF *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__PostScript_139_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPDF *dest = (TPDF*)(G__getstructoffset());
   *dest = (*(TPDF*)libp->para[0].ref);
   const TPDF& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPostScript */
static int G__G__PostScript_140_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPostScript *p=NULL;
   if(G__getaryconstruct()) p=new TPostScript[G__getaryconstruct()];
   else                    p=new TPostScript;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPostScript *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TPostScript((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TPostScript((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->CellArrayBegin((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->CellArrayFill((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->CellArrayEnd();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->Close((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->Close();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPostScript*)(G__getstructoffset()))->CMtoPS((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->DefineMarkers();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->DrawBox((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->DrawFrame(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5])
,(Int_t)G__int(libp->para[6]),(Int_t)G__int(libp->para[7]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->DrawHatch((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Float_t*)G__int(libp->para[3])
,(Float_t*)G__int(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->DrawHatch((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3])
,(Double_t*)G__int(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->DrawPolyLine((Int_t)G__int(libp->para[0]),(TPoints*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->DrawPolyLineNDC((Int_t)G__int(libp->para[0]),(TPoints*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->DrawPolyMarker((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->DrawPolyMarker((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->DrawPS((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->DrawPS((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->FontEncode();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->Initialize();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->NewPage();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->Off();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->On();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->Open((const char*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->Open((const char*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SaveRestore((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetFillColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetFillColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetFillPatterns((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetLineColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetLineColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetLineJoin((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetLineJoin();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetLineStyle((Style_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetLineStyle();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetLineWidth((Width_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetLineWidth();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetLineScale((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetLineScale();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetMarkerColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetMarkerColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetTextColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetTextColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->MakeGreek();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->MovePS((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->Range((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetColor((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->SetColor((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->Text((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(const char*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->TextNDC((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(const char*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPostScript*)(G__getstructoffset()))->UtoPS((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPostScript*)(G__getstructoffset()))->VtoPS((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPostScript*)(G__getstructoffset()))->XtoPS((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPostScript*)(G__getstructoffset()))->YtoPS((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->Zone();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPostScript::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPostScript::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPostScript::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPostScript::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPostScript*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPostScript*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPostScript::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPostScript::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPostScript::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PostScript_140_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPostScript::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__PostScript_140_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TPostScript *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TPostScript(*(TPostScript*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPostScript G__TTPostScript;
static int G__G__PostScript_140_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPostScript *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPostScript *)((G__getstructoffset())+sizeof(TPostScript)*i);
   else  delete (TPostScript *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__PostScript_140_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPostScript *dest = (TPostScript*)(G__getstructoffset());
   *dest = (*(TPostScript*)libp->para[0].ref);
   const TPostScript& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TImageDump */

/* TSVG */

/* TPDF */

/* TPostScript */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__PostScript {
 public:
  G__Sizep2memfuncG__PostScript() {p=&G__Sizep2memfuncG__PostScript::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__PostScript::*p)();
};

size_t G__get_sizep2memfuncG__PostScript()
{
  G__Sizep2memfuncG__PostScript a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__PostScript() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump))) {
     TImageDump *G__Lderived;
     G__Lderived=(TImageDump*)0x1000;
     {
       TVirtualPS *G__Lpbase=(TVirtualPS*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),G__get_linked_tagnum(&G__G__PostScriptLN_TVirtualPS),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),G__get_linked_tagnum(&G__G__PostScriptLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),G__get_linked_tagnum(&G__G__PostScriptLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),G__get_linked_tagnum(&G__G__PostScriptLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),G__get_linked_tagnum(&G__G__PostScriptLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),G__get_linked_tagnum(&G__G__PostScriptLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),G__get_linked_tagnum(&G__G__PostScriptLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PostScriptLN_TSVG))) {
     TSVG *G__Lderived;
     G__Lderived=(TSVG*)0x1000;
     {
       TVirtualPS *G__Lpbase=(TVirtualPS*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),G__get_linked_tagnum(&G__G__PostScriptLN_TVirtualPS),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),G__get_linked_tagnum(&G__G__PostScriptLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),G__get_linked_tagnum(&G__G__PostScriptLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),G__get_linked_tagnum(&G__G__PostScriptLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),G__get_linked_tagnum(&G__G__PostScriptLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),G__get_linked_tagnum(&G__G__PostScriptLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),G__get_linked_tagnum(&G__G__PostScriptLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PostScriptLN_TPDF))) {
     TPDF *G__Lderived;
     G__Lderived=(TPDF*)0x1000;
     {
       TVirtualPS *G__Lpbase=(TVirtualPS*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),G__get_linked_tagnum(&G__G__PostScriptLN_TVirtualPS),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),G__get_linked_tagnum(&G__G__PostScriptLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),G__get_linked_tagnum(&G__G__PostScriptLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),G__get_linked_tagnum(&G__G__PostScriptLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),G__get_linked_tagnum(&G__G__PostScriptLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),G__get_linked_tagnum(&G__G__PostScriptLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),G__get_linked_tagnum(&G__G__PostScriptLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript))) {
     TPostScript *G__Lderived;
     G__Lderived=(TPostScript*)0x1000;
     {
       TVirtualPS *G__Lpbase=(TVirtualPS*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),G__get_linked_tagnum(&G__G__PostScriptLN_TVirtualPS),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),G__get_linked_tagnum(&G__G__PostScriptLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),G__get_linked_tagnum(&G__G__PostScriptLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),G__get_linked_tagnum(&G__G__PostScriptLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),G__get_linked_tagnum(&G__G__PostScriptLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),G__get_linked_tagnum(&G__G__PostScriptLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),G__get_linked_tagnum(&G__G__PostScriptLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__PostScript() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__PostScriptLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__PostScriptLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__PostScriptLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__PostScriptLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__PostScriptLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("Style_t",115,-1,0,
-1);
   G__setnewtype(-1,"Style number (short)",0);
   G__search_typename2("Width_t",115,-1,0,
-1);
   G__setnewtype(-1,"Line width (short)",0);
   G__search_typename2("Color_t",115,-1,0,
-1);
   G__setnewtype(-1,"Color number (short)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TImageDump */
static void G__setup_memvarTImageDump(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump));
   { TImageDump *p; p=(TImageDump*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__PostScriptLN_TImage),-1,-1,2,"fImage=",0,"image");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"PostScript workstation type   ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSVG */
static void G__setup_memvarTSVG(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TSVG));
   { TSVG *p; p=(TSVG*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fXsize=",0,"Page size along X");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fYsize=",0,"Page size along Y");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"Workstation type used to know if the SVG is open");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBoundingBox=",0,"True when the SVG header is printed");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRange=",0,"True when a range has been defined");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fYsizeSVG=",0,"Page's Y size in SVG units");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPDF */
static void G__setup_memvarTPDF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPDF));
   { TPDF *p; p=(TPDF*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRed=",0,"Per cent of red");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fGreen=",0,"Per cent of green");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fBlue=",0,"Per cent of blue");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fXsize=",0,"Page size along X");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fYsize=",0,"Page size along Y");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"Workstation type used to know if the PDF is open");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPageFormat=",0,"Page format (A4, Letter etc ...)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPageOrientation=",0,"Page orientation (Portrait, Landscape)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStartStream=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fObjPos=",0,"Objets position");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fObjPosSize=",0,"Real size of fObjPos");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbObj=",0,"Number of objects");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbPage=",0,"Number of pages");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCompress=",0,"True when fBuffer must be compressed");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRange=",0,"True when a range has been defined");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPostScript */
static void G__setup_memvarTPostScript(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript));
   { TPostScript *p; p=(TPostScript*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fX1v=",0,"X bottom left corner of paper");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fY1v=",0,"Y bottom left corner of paper");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fX2v=",0,"X top right corner of paper");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fY2v=",0,"Y top right corner of paper");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fX1w=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fY1w=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fX2w=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fY2w=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDXC=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDYC=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fXC=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fYC=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fFX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fFY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fXVP1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fXVP2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fYVP1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fYVP2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fXVS1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fXVS2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fYVS1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fYVS2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fXsize=",0,"Page size along X");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fYsize=",0,"Page size along Y");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fMaxsize=",0,"Largest dimension of X and Y");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRed=",0,"Per cent of red");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fGreen=",0,"Per cent of green");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fBlue=",0,"Per cent of blue");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fLineScale=",0,"Line width scale factor");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLineJoin=",0,"Appearance of joining lines");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSave=",0,"Number of gsave for restore");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNXzone=",0,"Number of zones along X");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNYzone=",0,"Number of zones along Y");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIXzone=",0,"Current zone along X");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIYzone=",0,"Current zone along Y");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fMarkerSizeCur=",0,"current transformed value of marker size");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCurrentColor=",0,"current Postscript color index");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNpages=",0,"number of pages");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"PostScript workstation type");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMode=",0,"PostScript mode");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fClip=",0,"Clipping mode");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fBoundingBox=",0,"True for Encapsulated PostScript");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fClear=",0,"True when page must be cleared");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fClipStatus=",0,"Clipping Indicator");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRange=",0,"True when a range has been defined");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fZone=",0,"Zone indicator");
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,2,"fPatterns[32]=",0,"Indicate if pattern n is defined");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbinCT=",0,"Number of entries in the current Cell Array");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbCellW=",0,"Number of boxes per line");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNbCellLine=",0,"Number of boxes in the current line");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxLines=",0,"Maximum number of lines in a PS array");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLastCellRed=",0,"Last red value");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLastCellGreen=",0,"Last green value");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLastCellBlue=",0,"Last blue value");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNBSameColorCell=",0,"Number of boxes with the same color");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"fgLineJoin=",0,"Appearance of joining lines");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__PostScript() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTImageDump(void) {
   /* TImageDump */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump));
   G__memfunc_setup("TImageDump",973,G__G__PostScript_136_1_0,105,G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TImageDump",973,G__G__PostScript_136_2_0,105,G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),-1,0,2,1,1,0,
"C - - 10 - filename i - 'Int_t' 0 -111 type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CellArrayBegin",1380,G__G__PostScript_136_3_0,121,-1,-1,0,6,1,1,0,
"i - 'Int_t' 0 - W i - 'Int_t' 0 - H "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - x2 "
"d - 'Double_t' 0 - y1 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CellArrayFill",1286,G__G__PostScript_136_4_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - r i - 'Int_t' 0 - g "
"i - 'Int_t' 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CellArrayEnd",1174,G__G__PostScript_136_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Close",502,G__G__PostScript_136_6_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawBox",695,G__G__PostScript_136_7_0,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawFrame",889,G__G__PostScript_136_8_0,121,-1,-1,0,8,1,1,0,
"d - 'Double_t' 0 - xl d - 'Double_t' 0 - yl "
"d - 'Double_t' 0 - xt d - 'Double_t' 0 - yt "
"i - 'Int_t' 0 - mode i - 'Int_t' 0 - border "
"i - 'Int_t' 0 - dark i - 'Int_t' 0 - light",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPolyMarker",1428,G__G__PostScript_136_9_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPolyMarker",1428,G__G__PostScript_136_0_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPS",561,G__G__PostScript_136_1_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - xw "
"F - 'Float_t' 0 - yw",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPS",561,G__G__PostScript_136_2_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - xw "
"D - 'Double_t' 0 - yw",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("NewPage",679,G__G__PostScript_136_3_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Open",402,G__G__PostScript_136_4_1,121,-1,-1,0,2,1,1,0,
"C - - 10 - filename i - 'Int_t' 0 -111 type",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Text",421,G__G__PostScript_136_5_1,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"C - - 10 - string",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetColor",811,G__G__PostScript_136_6_1,121,-1,-1,0,3,1,1,0,
"f - 'Float_t' 0 - r f - 'Float_t' 0 - g "
"f - 'Float_t' 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__PostScript_136_7_1,85,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TImageDump::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__PostScript_136_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TImageDump::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__PostScript_136_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TImageDump::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__PostScript_136_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TImageDump::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__PostScript_136_1_2,85,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__PostScript_136_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__PostScript_136_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PostScript_136_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__PostScript_136_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TImageDump::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PostScript_136_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TImageDump::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__PostScript_136_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TImageDump::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PostScript_136_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TImageDump::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TImageDump",973,G__G__PostScript_136_9_2,(int)('i'),G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),-1,0,1,1,1,0,"u 'TImageDump' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TImageDump",1099,G__G__PostScript_136_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__PostScript_136_1_3,(int)('u'),G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),-1,1,1,1,1,0,"u 'TImageDump' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSVG(void) {
   /* TSVG */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TSVG));
   G__memfunc_setup("TSVG",324,G__G__PostScript_138_1_0,105,G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSVG",324,G__G__PostScript_138_2_0,105,G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),-1,0,2,1,1,0,
"C - - 10 - filename i - 'Int_t' 0 -113 type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CellArrayBegin",1380,G__G__PostScript_138_3_0,121,-1,-1,0,6,1,1,0,
"i - 'Int_t' 0 - W i - 'Int_t' 0 - H "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - x2 "
"d - 'Double_t' 0 - y1 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CellArrayFill",1286,G__G__PostScript_138_4_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - r i - 'Int_t' 0 - g "
"i - 'Int_t' 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CellArrayEnd",1174,G__G__PostScript_138_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Close",502,G__G__PostScript_138_6_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CMtoSVG",611,G__G__PostScript_138_7_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - u",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawBox",695,G__G__PostScript_138_8_0,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawFrame",889,G__G__PostScript_138_9_0,121,-1,-1,0,8,1,1,0,
"d - 'Double_t' 0 - xl d - 'Double_t' 0 - yl "
"d - 'Double_t' 0 - xt d - 'Double_t' 0 - yt "
"i - 'Int_t' 0 - mode i - 'Int_t' 0 - border "
"i - 'Int_t' 0 - dark i - 'Int_t' 0 - light",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPolyLine",1210,G__G__PostScript_138_0_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - n U 'TPoints' - 0 - xy",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawPolyLineNDC",1423,G__G__PostScript_138_1_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - n U 'TPoints' - 0 - uv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawPolyMarker",1428,G__G__PostScript_138_2_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPolyMarker",1428,G__G__PostScript_138_3_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPS",561,G__G__PostScript_138_4_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - xw "
"F - 'Float_t' 0 - yw",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPS",561,G__G__PostScript_138_5_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - xw "
"D - 'Double_t' 0 - yw",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Initialize",1042,G__G__PostScript_138_6_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MovePS",570,G__G__PostScript_138_7_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NewPage",679,G__G__PostScript_138_8_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Off",283,G__G__PostScript_138_9_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("On",189,G__G__PostScript_138_0_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Open",402,G__G__PostScript_138_1_2,121,-1,-1,0,2,1,1,0,
"C - - 10 - filename i - 'Int_t' 0 -111 type",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Range",493,G__G__PostScript_138_2_2,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 - xrange f - 'Float_t' 0 - yrange",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetColor",811,G__G__PostScript_138_3_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 color",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetColor",811,G__G__PostScript_138_4_2,121,-1,-1,0,3,1,1,0,
"f - 'Float_t' 0 - r f - 'Float_t' 0 - g "
"f - 'Float_t' 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFillColor",1202,G__G__PostScript_138_5_2,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLineColor",1203,G__G__PostScript_138_6_2,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLineStyle",1221,G__G__PostScript_138_7_2,121,-1,-1,0,1,1,1,0,"s - 'Style_t' 0 1 linestyle",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLineWidth",1204,G__G__PostScript_138_8_2,121,-1,-1,0,1,1,1,0,"s - 'Width_t' 0 1 linewidth",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLineScale",1180,G__G__PostScript_138_9_2,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 3 -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMarkerColor",1421,G__G__PostScript_138_0_3,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTextColor",1232,G__G__PostScript_138_1_3,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Text",421,G__G__PostScript_138_2_3,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"C - - 10 - string",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TextNDC",634,G__G__PostScript_138_3_3,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - u d - 'Double_t' 0 - v "
"C - - 10 - string",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UtoSVG",552,G__G__PostScript_138_4_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - u",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("VtoSVG",553,G__G__PostScript_138_5_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - v",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XtoSVG",555,G__G__PostScript_138_6_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("YtoSVG",556,G__G__PostScript_138_7_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__PostScript_138_8_3,85,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSVG::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__PostScript_138_9_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSVG::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__PostScript_138_0_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSVG::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__PostScript_138_1_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSVG::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__PostScript_138_2_4,85,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__PostScript_138_3_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__PostScript_138_4_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PostScript_138_5_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__PostScript_138_6_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSVG::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PostScript_138_7_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSVG::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__PostScript_138_8_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSVG::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PostScript_138_9_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSVG::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TSVG",324,G__G__PostScript_138_0_5,(int)('i'),G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),-1,0,1,1,1,0,"u 'TSVG' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TSVG",450,G__G__PostScript_138_1_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__PostScript_138_2_5,(int)('u'),G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),-1,1,1,1,1,0,"u 'TSVG' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPDF(void) {
   /* TPDF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPDF));
   G__memfunc_setup("TPDF",302,G__G__PostScript_139_1_0,105,G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPDF",302,G__G__PostScript_139_2_0,105,G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),-1,0,2,1,1,0,
"C - - 10 - filename i - 'Int_t' 0 -111 type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CellArrayBegin",1380,G__G__PostScript_139_3_0,121,-1,-1,0,6,1,1,0,
"i - 'Int_t' 0 - W i - 'Int_t' 0 - H "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - x2 "
"d - 'Double_t' 0 - y1 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CellArrayFill",1286,G__G__PostScript_139_4_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - r i - 'Int_t' 0 - g "
"i - 'Int_t' 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CellArrayEnd",1174,G__G__PostScript_139_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Close",502,G__G__PostScript_139_6_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CMtoPDF",589,G__G__PostScript_139_7_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - u",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawBox",695,G__G__PostScript_139_8_0,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawFrame",889,G__G__PostScript_139_9_0,121,-1,-1,0,8,1,1,0,
"d - 'Double_t' 0 - xl d - 'Double_t' 0 - yl "
"d - 'Double_t' 0 - xt d - 'Double_t' 0 - yt "
"i - 'Int_t' 0 - mode i - 'Int_t' 0 - border "
"i - 'Int_t' 0 - dark i - 'Int_t' 0 - light",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawHatch",886,G__G__PostScript_139_0_1,121,-1,-1,0,5,1,1,0,
"f - 'Float_t' 0 - dy f - 'Float_t' 0 - angle "
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawHatch",886,G__G__PostScript_139_1_1,121,-1,-1,0,5,1,1,0,
"f - 'Float_t' 0 - dy f - 'Float_t' 0 - angle "
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawPolyLine",1210,G__G__PostScript_139_2_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - n U 'TPoints' - 0 - xy",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawPolyLineNDC",1423,G__G__PostScript_139_3_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - n U 'TPoints' - 0 - uv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawPolyMarker",1428,G__G__PostScript_139_4_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPolyMarker",1428,G__G__PostScript_139_5_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPS",561,G__G__PostScript_139_6_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - xw "
"F - 'Float_t' 0 - yw",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPS",561,G__G__PostScript_139_7_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - xw "
"D - 'Double_t' 0 - yw",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LineTo",587,G__G__PostScript_139_8_1,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MoveTo",602,G__G__PostScript_139_9_1,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FontEncode",997,G__G__PostScript_139_0_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NewObject",897,G__G__PostScript_139_1_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NewPage",679,G__G__PostScript_139_2_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Off",283,G__G__PostScript_139_3_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("On",189,G__G__PostScript_139_4_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Open",402,G__G__PostScript_139_5_2,121,-1,-1,0,2,1,1,0,
"C - - 10 - filename i - 'Int_t' 0 -111 type",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintFast",923,G__G__PostScript_139_6_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - nch C - - 10 \"\" string",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintStr",838,G__G__PostScript_139_7_2,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" string",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Range",493,G__G__PostScript_139_8_2,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 - xrange f - 'Float_t' 0 - yrange",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetColor",811,G__G__PostScript_139_9_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 color",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetColor",811,G__G__PostScript_139_0_3,121,-1,-1,0,3,1,1,0,
"f - 'Float_t' 0 - r f - 'Float_t' 0 - g "
"f - 'Float_t' 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFillColor",1202,G__G__PostScript_139_1_3,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFillPatterns",1540,G__G__PostScript_139_2_3,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - ipat i - 'Int_t' 0 - color",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetLineColor",1203,G__G__PostScript_139_3_3,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLineStyle",1221,G__G__PostScript_139_4_3,121,-1,-1,0,1,1,1,0,"s - 'Style_t' 0 1 linestyle",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLineWidth",1204,G__G__PostScript_139_5_3,121,-1,-1,0,1,1,1,0,"s - 'Width_t' 0 1 linewidth",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMarkerColor",1421,G__G__PostScript_139_6_3,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTextColor",1232,G__G__PostScript_139_7_3,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Text",421,G__G__PostScript_139_8_3,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"C - - 10 - string",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TextNDC",634,G__G__PostScript_139_9_3,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - u d - 'Double_t' 0 - v "
"C - - 10 - string",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("WriteCompressedBuffer",2170,G__G__PostScript_139_0_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UtoPDF",530,G__G__PostScript_139_1_4,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - u",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("VtoPDF",531,G__G__PostScript_139_2_4,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - v",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XtoPDF",533,G__G__PostScript_139_3_4,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("YtoPDF",534,G__G__PostScript_139_4_4,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__PostScript_139_5_4,85,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPDF::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__PostScript_139_6_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPDF::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__PostScript_139_7_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPDF::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__PostScript_139_8_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPDF::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__PostScript_139_9_4,85,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__PostScript_139_0_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__PostScript_139_1_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PostScript_139_2_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__PostScript_139_3_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPDF::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PostScript_139_4_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPDF::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__PostScript_139_5_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPDF::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PostScript_139_6_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPDF::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TPDF",302,G__G__PostScript_139_7_5,(int)('i'),G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),-1,0,1,1,1,0,"u 'TPDF' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TPDF",428,G__G__PostScript_139_8_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__PostScript_139_9_5,(int)('u'),G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),-1,1,1,1,1,0,"u 'TPDF' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPostScript(void) {
   /* TPostScript */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript));
   G__memfunc_setup("TPostScript",1135,G__G__PostScript_140_1_0,105,G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPostScript",1135,G__G__PostScript_140_2_0,105,G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),-1,0,2,1,1,0,
"C - - 10 - filename i - 'Int_t' 0 -111 type",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CellArrayBegin",1380,G__G__PostScript_140_3_0,121,-1,-1,0,6,1,1,0,
"i - 'Int_t' 0 - W i - 'Int_t' 0 - H "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - x2 "
"d - 'Double_t' 0 - y1 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CellArrayFill",1286,G__G__PostScript_140_4_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - r i - 'Int_t' 0 - g "
"i - 'Int_t' 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CellArrayEnd",1174,G__G__PostScript_140_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Close",502,G__G__PostScript_140_6_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CMtoPS",534,G__G__PostScript_140_7_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - u",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DefineMarkers",1312,G__G__PostScript_140_8_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawBox",695,G__G__PostScript_140_9_0,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawFrame",889,G__G__PostScript_140_0_1,121,-1,-1,0,8,1,1,0,
"d - 'Double_t' 0 - xl d - 'Double_t' 0 - yl "
"d - 'Double_t' 0 - xt d - 'Double_t' 0 - yt "
"i - 'Int_t' 0 - mode i - 'Int_t' 0 - border "
"i - 'Int_t' 0 - dark i - 'Int_t' 0 - light",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawHatch",886,G__G__PostScript_140_1_1,121,-1,-1,0,5,1,1,0,
"f - 'Float_t' 0 - dy f - 'Float_t' 0 - angle "
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawHatch",886,G__G__PostScript_140_2_1,121,-1,-1,0,5,1,1,0,
"f - 'Float_t' 0 - dy f - 'Float_t' 0 - angle "
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawPolyLine",1210,G__G__PostScript_140_3_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - n U 'TPoints' - 0 - xy",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawPolyLineNDC",1423,G__G__PostScript_140_4_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - n U 'TPoints' - 0 - uv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawPolyMarker",1428,G__G__PostScript_140_5_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPolyMarker",1428,G__G__PostScript_140_6_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPS",561,G__G__PostScript_140_7_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - xw "
"F - 'Float_t' 0 - yw",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPS",561,G__G__PostScript_140_8_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - xw "
"D - 'Double_t' 0 - yw",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FontEncode",997,G__G__PostScript_140_9_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Initialize",1042,G__G__PostScript_140_0_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NewPage",679,G__G__PostScript_140_1_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Off",283,G__G__PostScript_140_2_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("On",189,G__G__PostScript_140_3_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Open",402,G__G__PostScript_140_4_2,121,-1,-1,0,2,1,1,0,
"C - - 10 - filename i - 'Int_t' 0 -111 type",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SaveRestore",1139,G__G__PostScript_140_5_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - flag",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetFillColor",1202,G__G__PostScript_140_6_2,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFillPatterns",1540,G__G__PostScript_140_7_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - ipat i - 'Int_t' 0 - color",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetLineColor",1203,G__G__PostScript_140_8_2,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLineJoin",1092,G__G__PostScript_140_9_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 linejoin",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetLineStyle",1221,G__G__PostScript_140_0_3,121,-1,-1,0,1,1,1,0,"s - 'Style_t' 0 1 linestyle",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLineWidth",1204,G__G__PostScript_140_1_3,121,-1,-1,0,1,1,1,0,"s - 'Width_t' 0 1 linewidth",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLineScale",1180,G__G__PostScript_140_2_3,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 3 scale",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMarkerColor",1421,G__G__PostScript_140_3_3,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTextColor",1232,G__G__PostScript_140_4_3,121,-1,-1,0,1,1,1,0,"s - 'Color_t' 0 1 cindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MakeGreek",876,G__G__PostScript_140_5_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MovePS",570,G__G__PostScript_140_6_3,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Range",493,G__G__PostScript_140_7_3,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 - xrange f - 'Float_t' 0 - yrange",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetColor",811,G__G__PostScript_140_8_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 color",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetColor",811,G__G__PostScript_140_9_3,121,-1,-1,0,3,1,1,0,
"f - 'Float_t' 0 - r f - 'Float_t' 0 - g "
"f - 'Float_t' 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Text",421,G__G__PostScript_140_0_4,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"C - - 10 - string",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TextNDC",634,G__G__PostScript_140_1_4,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - u d - 'Double_t' 0 - v "
"C - - 10 - string",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UtoPS",475,G__G__PostScript_140_2_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - u",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("VtoPS",476,G__G__PostScript_140_3_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - v",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XtoPS",478,G__G__PostScript_140_4_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - x",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("YtoPS",479,G__G__PostScript_140_5_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Zone",412,G__G__PostScript_140_6_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__PostScript_140_7_4,85,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPostScript::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__PostScript_140_8_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPostScript::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__PostScript_140_9_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPostScript::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__PostScript_140_0_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPostScript::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__PostScript_140_1_5,85,G__get_linked_tagnum(&G__G__PostScriptLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__PostScript_140_2_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__PostScript_140_3_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PostScript_140_4_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__PostScript_140_5_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPostScript::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PostScript_140_6_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPostScript::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__PostScript_140_7_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPostScript::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PostScript_140_8_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPostScript::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TPostScript",1135,G__G__PostScript_140_9_5,(int)('i'),G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),-1,0,1,1,1,0,"u 'TPostScript' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TPostScript",1261,G__G__PostScript_140_0_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__PostScript_140_1_6,(int)('u'),G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),-1,1,1,1,1,0,"u 'TPostScript' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__PostScript() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__PostScript() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__PostScript() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__PostScriptLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TAttText = { "TAttText" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TVirtualPS = { "TVirtualPS" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TImage = { "TImage" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TImageDump = { "TImageDump" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TPoints = { "TPoints" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TSVG = { "TSVG" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TPDF = { "TPDF" , 99 , -1 };
G__linked_taginfo G__G__PostScriptLN_TPostScript = { "TPostScript" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__PostScript() {
  G__G__PostScriptLN_TClass.tagnum = -1 ;
  G__G__PostScriptLN_TBuffer.tagnum = -1 ;
  G__G__PostScriptLN_TMemberInspector.tagnum = -1 ;
  G__G__PostScriptLN_TObject.tagnum = -1 ;
  G__G__PostScriptLN_TNamed.tagnum = -1 ;
  G__G__PostScriptLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__PostScriptLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__PostScriptLN_TAttLine.tagnum = -1 ;
  G__G__PostScriptLN_TAttFill.tagnum = -1 ;
  G__G__PostScriptLN_TAttText.tagnum = -1 ;
  G__G__PostScriptLN_TAttMarker.tagnum = -1 ;
  G__G__PostScriptLN_TVirtualPS.tagnum = -1 ;
  G__G__PostScriptLN_TImage.tagnum = -1 ;
  G__G__PostScriptLN_TImageDump.tagnum = -1 ;
  G__G__PostScriptLN_TPoints.tagnum = -1 ;
  G__G__PostScriptLN_TSVG.tagnum = -1 ;
  G__G__PostScriptLN_TPDF.tagnum = -1 ;
  G__G__PostScriptLN_TPostScript.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__PostScript() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__PostScriptLN_TClass);
   G__get_linked_tagnum(&G__G__PostScriptLN_TBuffer);
   G__get_linked_tagnum(&G__G__PostScriptLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__PostScriptLN_TObject);
   G__get_linked_tagnum(&G__G__PostScriptLN_TNamed);
   G__get_linked_tagnum(&G__G__PostScriptLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__PostScriptLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__PostScriptLN_TAttLine);
   G__get_linked_tagnum(&G__G__PostScriptLN_TAttFill);
   G__get_linked_tagnum(&G__G__PostScriptLN_TAttText);
   G__get_linked_tagnum(&G__G__PostScriptLN_TAttMarker);
   G__get_linked_tagnum(&G__G__PostScriptLN_TVirtualPS);
   G__get_linked_tagnum(&G__G__PostScriptLN_TImage);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TImageDump),sizeof(TImageDump),-1,324864,"create image in batch mode",G__setup_memvarTImageDump,G__setup_memfuncTImageDump);
   G__get_linked_tagnum(&G__G__PostScriptLN_TPoints);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TSVG),sizeof(TSVG),-1,324864,"SVG driver",G__setup_memvarTSVG,G__setup_memfuncTSVG);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPDF),sizeof(TPDF),-1,324864,"PDF driver",G__setup_memvarTPDF,G__setup_memfuncTPDF);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__PostScriptLN_TPostScript),sizeof(TPostScript),-1,324864,"PostScript driver",G__setup_memvarTPostScript,G__setup_memfuncTPostScript);
}
extern "C" void G__cpp_setupG__PostScript(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__PostScript()");
  G__set_cpp_environmentG__PostScript();
  G__cpp_setup_tagtableG__PostScript();

  G__cpp_setup_inheritanceG__PostScript();

  G__cpp_setup_typetableG__PostScript();

  G__cpp_setup_memvarG__PostScript();

  G__cpp_setup_memfuncG__PostScript();
  G__cpp_setup_globalG__PostScript();
  G__cpp_setup_funcG__PostScript();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__PostScript();
  return;
}
class G__cpp_setup_initG__PostScript {
  public:
    G__cpp_setup_initG__PostScript() { G__add_setup_func("G__PostScript",(G__incsetup)(&G__cpp_setupG__PostScript)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__PostScript() { G__remove_setup_func("G__PostScript"); }
};
G__cpp_setup_initG__PostScript G__cpp_setup_initializerG__PostScript;

