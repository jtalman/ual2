//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:30:33 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__GuiBld.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TGuiBldTextDialog_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGuiBldTextDialog_IsA(const void*);
   static void delete_TGuiBldTextDialog(void *p);
   static void deleteArray_TGuiBldTextDialog(void *p);
   static void destruct_TGuiBldTextDialog(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGuiBldTextDialog*)
   {
      ::TGuiBldTextDialog *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGuiBldTextDialog", ::TGuiBldTextDialog::Class_Version(), "guibuilder/inc/TGuiBldQuickHandler.h", 31,
                  typeid(::TGuiBldTextDialog), DefineBehavior(ptr, ptr),
                  &::TGuiBldTextDialog::Dictionary, &TGuiBldTextDialog_IsA, 0,
                  sizeof(::TGuiBldTextDialog) );
      instance.SetDelete(&delete_TGuiBldTextDialog);
      instance.SetDeleteArray(&deleteArray_TGuiBldTextDialog);
      instance.SetDestructor(&destruct_TGuiBldTextDialog);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGuiBldTextDialog*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGuiBldQuickHandler_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGuiBldQuickHandler_IsA(const void*);
   static void *new_TGuiBldQuickHandler(void *p = 0);
   static void *newArray_TGuiBldQuickHandler(Long_t size);
   static void delete_TGuiBldQuickHandler(void *p);
   static void deleteArray_TGuiBldQuickHandler(void *p);
   static void destruct_TGuiBldQuickHandler(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGuiBldQuickHandler*)
   {
      ::TGuiBldQuickHandler *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGuiBldQuickHandler", ::TGuiBldQuickHandler::Class_Version(), "guibuilder/inc/TGuiBldQuickHandler.h", 52,
                  typeid(::TGuiBldQuickHandler), DefineBehavior(ptr, ptr),
                  &::TGuiBldQuickHandler::Dictionary, &TGuiBldQuickHandler_IsA, 0,
                  sizeof(::TGuiBldQuickHandler) );
      instance.SetNew(&new_TGuiBldQuickHandler);
      instance.SetNewArray(&newArray_TGuiBldQuickHandler);
      instance.SetDelete(&delete_TGuiBldQuickHandler);
      instance.SetDeleteArray(&deleteArray_TGuiBldQuickHandler);
      instance.SetDestructor(&destruct_TGuiBldQuickHandler);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGuiBldQuickHandler*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TRootGuiBuilder_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TRootGuiBuilder_IsA(const void*);
   static void *new_TRootGuiBuilder(void *p = 0);
   static void *newArray_TRootGuiBuilder(Long_t size);
   static void delete_TRootGuiBuilder(void *p);
   static void deleteArray_TRootGuiBuilder(void *p);
   static void destruct_TRootGuiBuilder(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TRootGuiBuilder*)
   {
      ::TRootGuiBuilder *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TRootGuiBuilder", ::TRootGuiBuilder::Class_Version(), "guibuilder/inc/TRootGuiBuilder.h", 41,
                  typeid(::TRootGuiBuilder), DefineBehavior(ptr, ptr),
                  &::TRootGuiBuilder::Dictionary, &TRootGuiBuilder_IsA, 0,
                  sizeof(::TRootGuiBuilder) );
      instance.SetNew(&new_TRootGuiBuilder);
      instance.SetNewArray(&newArray_TRootGuiBuilder);
      instance.SetDelete(&delete_TRootGuiBuilder);
      instance.SetDeleteArray(&deleteArray_TRootGuiBuilder);
      instance.SetDestructor(&destruct_TRootGuiBuilder);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TRootGuiBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGuiBldEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGuiBldEditor_IsA(const void*);
   static void *new_TGuiBldEditor(void *p = 0);
   static void *newArray_TGuiBldEditor(Long_t size);
   static void delete_TGuiBldEditor(void *p);
   static void deleteArray_TGuiBldEditor(void *p);
   static void destruct_TGuiBldEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGuiBldEditor*)
   {
      ::TGuiBldEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGuiBldEditor", ::TGuiBldEditor::Class_Version(), "guibuilder/inc/TGuiBldEditor.h", 33,
                  typeid(::TGuiBldEditor), DefineBehavior(ptr, ptr),
                  &::TGuiBldEditor::Dictionary, &TGuiBldEditor_IsA, 0,
                  sizeof(::TGuiBldEditor) );
      instance.SetNew(&new_TGuiBldEditor);
      instance.SetNewArray(&newArray_TGuiBldEditor);
      instance.SetDelete(&delete_TGuiBldEditor);
      instance.SetDeleteArray(&deleteArray_TGuiBldEditor);
      instance.SetDestructor(&destruct_TGuiBldEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGuiBldEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGuiBldDragManager_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGuiBldDragManager_IsA(const void*);
   static void *new_TGuiBldDragManager(void *p = 0);
   static void *newArray_TGuiBldDragManager(Long_t size);
   static void delete_TGuiBldDragManager(void *p);
   static void deleteArray_TGuiBldDragManager(void *p);
   static void destruct_TGuiBldDragManager(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGuiBldDragManager*)
   {
      ::TGuiBldDragManager *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGuiBldDragManager", ::TGuiBldDragManager::Class_Version(), "guibuilder/inc/TGuiBldDragManager.h", 47,
                  typeid(::TGuiBldDragManager), DefineBehavior(ptr, ptr),
                  &::TGuiBldDragManager::Dictionary, &TGuiBldDragManager_IsA, 0,
                  sizeof(::TGuiBldDragManager) );
      instance.SetNew(&new_TGuiBldDragManager);
      instance.SetNewArray(&newArray_TGuiBldDragManager);
      instance.SetDelete(&delete_TGuiBldDragManager);
      instance.SetDeleteArray(&deleteArray_TGuiBldDragManager);
      instance.SetDestructor(&destruct_TGuiBldDragManager);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGuiBldDragManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGuiBldHintsEditor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGuiBldHintsEditor_IsA(const void*);
   static void delete_TGuiBldHintsEditor(void *p);
   static void deleteArray_TGuiBldHintsEditor(void *p);
   static void destruct_TGuiBldHintsEditor(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGuiBldHintsEditor*)
   {
      ::TGuiBldHintsEditor *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGuiBldHintsEditor", ::TGuiBldHintsEditor::Class_Version(), "guibuilder/inc/TGuiBldHintsEditor.h", 33,
                  typeid(::TGuiBldHintsEditor), DefineBehavior(ptr, ptr),
                  &::TGuiBldHintsEditor::Dictionary, &TGuiBldHintsEditor_IsA, 0,
                  sizeof(::TGuiBldHintsEditor) );
      instance.SetDelete(&delete_TGuiBldHintsEditor);
      instance.SetDeleteArray(&deleteArray_TGuiBldHintsEditor);
      instance.SetDestructor(&destruct_TGuiBldHintsEditor);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGuiBldHintsEditor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGuiBldHintsButton_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGuiBldHintsButton_IsA(const void*);
   static void delete_TGuiBldHintsButton(void *p);
   static void deleteArray_TGuiBldHintsButton(void *p);
   static void destruct_TGuiBldHintsButton(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGuiBldHintsButton*)
   {
      ::TGuiBldHintsButton *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGuiBldHintsButton", ::TGuiBldHintsButton::Class_Version(), "guibuilder/inc/TGuiBldHintsButton.h", 28,
                  typeid(::TGuiBldHintsButton), DefineBehavior(ptr, ptr),
                  &::TGuiBldHintsButton::Dictionary, &TGuiBldHintsButton_IsA, 0,
                  sizeof(::TGuiBldHintsButton) );
      instance.SetDelete(&delete_TGuiBldHintsButton);
      instance.SetDeleteArray(&deleteArray_TGuiBldHintsButton);
      instance.SetDestructor(&destruct_TGuiBldHintsButton);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGuiBldHintsButton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TGuiBldTextDialog::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGuiBldTextDialog::Class_Name()
{
   return "TGuiBldTextDialog";
}

//______________________________________________________________________________
const char *TGuiBldTextDialog::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldTextDialog*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGuiBldTextDialog::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldTextDialog*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGuiBldTextDialog::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldTextDialog*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGuiBldTextDialog::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldTextDialog*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGuiBldQuickHandler::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGuiBldQuickHandler::Class_Name()
{
   return "TGuiBldQuickHandler";
}

//______________________________________________________________________________
const char *TGuiBldQuickHandler::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldQuickHandler*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGuiBldQuickHandler::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldQuickHandler*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGuiBldQuickHandler::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldQuickHandler*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGuiBldQuickHandler::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldQuickHandler*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRootGuiBuilder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRootGuiBuilder::Class_Name()
{
   return "TRootGuiBuilder";
}

//______________________________________________________________________________
const char *TRootGuiBuilder::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TRootGuiBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRootGuiBuilder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TRootGuiBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRootGuiBuilder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TRootGuiBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRootGuiBuilder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TRootGuiBuilder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGuiBldEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGuiBldEditor::Class_Name()
{
   return "TGuiBldEditor";
}

//______________________________________________________________________________
const char *TGuiBldEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGuiBldEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGuiBldEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGuiBldEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGuiBldDragManager::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGuiBldDragManager::Class_Name()
{
   return "TGuiBldDragManager";
}

//______________________________________________________________________________
const char *TGuiBldDragManager::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldDragManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGuiBldDragManager::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldDragManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGuiBldDragManager::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldDragManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGuiBldDragManager::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldDragManager*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGuiBldHintsEditor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGuiBldHintsEditor::Class_Name()
{
   return "TGuiBldHintsEditor";
}

//______________________________________________________________________________
const char *TGuiBldHintsEditor::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldHintsEditor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGuiBldHintsEditor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldHintsEditor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGuiBldHintsEditor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldHintsEditor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGuiBldHintsEditor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldHintsEditor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGuiBldHintsButton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGuiBldHintsButton::Class_Name()
{
   return "TGuiBldHintsButton";
}

//______________________________________________________________________________
const char *TGuiBldHintsButton::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldHintsButton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGuiBldHintsButton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGuiBldHintsButton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGuiBldHintsButton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldHintsButton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGuiBldHintsButton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGuiBldHintsButton*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TRootGuiBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRootGuiBuilder.

   TGuiBuilder::Streamer(R__b);
   TGMainFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TRootGuiBuilder::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TRootGuiBuilder.

      TClass *R__cl = ::TRootGuiBuilder::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fManager", &fManager);
      R__insp.Inspect(R__cl, R__parent, "*fToolBar", &fToolBar);
      R__insp.Inspect(R__cl, R__parent, "*fShutter", &fShutter);
      R__insp.Inspect(R__cl, R__parent, "*fMain", &fMain);
      R__insp.Inspect(R__cl, R__parent, "*fToolDock", &fToolDock);
      R__insp.Inspect(R__cl, R__parent, "*fShutterDock", &fShutterDock);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__parent, "*fMenuFile", &fMenuFile);
      R__insp.Inspect(R__cl, R__parent, "*fMenuWindow", &fMenuWindow);
      R__insp.Inspect(R__cl, R__parent, "*fMenuHelp", &fMenuHelp);
      R__insp.Inspect(R__cl, R__parent, "*fStatusBar", &fStatusBar);
      R__insp.Inspect(R__cl, R__parent, "*fSelected", &fSelected);
      R__insp.Inspect(R__cl, R__parent, "*fEditable", &fEditable);
      R__insp.Inspect(R__cl, R__parent, "*fEditor", &fEditor);
      TGuiBuilder::ShowMembers(R__insp, R__parent);
      TGMainFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TRootGuiBuilder_IsA(const void *obj) {
      return ((::TRootGuiBuilder*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TRootGuiBuilder(void *p) {
      return  p ? new(p) ::TRootGuiBuilder : new ::TRootGuiBuilder;
   }
   static void *newArray_TRootGuiBuilder(Long_t size) {
      return new ::TRootGuiBuilder[size];
   }
   // Wrapper around operator delete
   static void delete_TRootGuiBuilder(void *p) {
      delete ((::TRootGuiBuilder*)p);
   }
   static void deleteArray_TRootGuiBuilder(void *p) {
      delete [] ((::TRootGuiBuilder*)p);
   }
   static void destruct_TRootGuiBuilder(void *p) {
      typedef ::TRootGuiBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRootGuiBuilder

//______________________________________________________________________________
void TGuiBldDragManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGuiBldDragManager.

   TVirtualDragManager::Streamer(R__b);
   TGFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGuiBldDragManager::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGuiBldDragManager.

      TClass *R__cl = ::TGuiBldDragManager::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPimpl", &fPimpl);
      R__insp.Inspect(R__cl, R__parent, "*fBuilder", &fBuilder);
      R__insp.Inspect(R__cl, R__parent, "*fEditor", &fEditor);
      R__insp.Inspect(R__cl, R__parent, "*fQuickHandler", &fQuickHandler);
      R__insp.Inspect(R__cl, R__parent, "fLassoDrawn", &fLassoDrawn);
      R__insp.Inspect(R__cl, R__parent, "fPasteFileName", &fPasteFileName);
      fPasteFileName.ShowMembers(R__insp, strcat(R__parent,"fPasteFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSelectionIsOn", &fSelectionIsOn);
      R__insp.Inspect(R__cl, R__parent, "*fFrameMenu", &fFrameMenu);
      R__insp.Inspect(R__cl, R__parent, "*fLassoMenu", &fLassoMenu);
      R__insp.Inspect(R__cl, R__parent, "fTargetId", &fTargetId);
      R__insp.Inspect(R__cl, R__parent, "fDropStatus", &fDropStatus);
      TVirtualDragManager::ShowMembers(R__insp, R__parent);
      TGFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGuiBldDragManager_IsA(const void *obj) {
      return ((::TGuiBldDragManager*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGuiBldDragManager(void *p) {
      return  p ? new(p) ::TGuiBldDragManager : new ::TGuiBldDragManager;
   }
   static void *newArray_TGuiBldDragManager(Long_t size) {
      return new ::TGuiBldDragManager[size];
   }
   // Wrapper around operator delete
   static void delete_TGuiBldDragManager(void *p) {
      delete ((::TGuiBldDragManager*)p);
   }
   static void deleteArray_TGuiBldDragManager(void *p) {
      delete [] ((::TGuiBldDragManager*)p);
   }
   static void destruct_TGuiBldDragManager(void *p) {
      typedef ::TGuiBldDragManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGuiBldDragManager

//______________________________________________________________________________
void TGuiBldEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGuiBldEditor.

   TGCompositeFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGuiBldEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGuiBldEditor.

      TClass *R__cl = ::TGuiBldEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSelected", &fSelected);
      R__insp.Inspect(R__cl, R__parent, "*fNameFrame", &fNameFrame);
      R__insp.Inspect(R__cl, R__parent, "*fHintsFrame", &fHintsFrame);
      R__insp.Inspect(R__cl, R__parent, "*fBorderFrame", &fBorderFrame);
      R__insp.Inspect(R__cl, R__parent, "fEmbedded", &fEmbedded);
      TGCompositeFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGuiBldEditor_IsA(const void *obj) {
      return ((::TGuiBldEditor*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGuiBldEditor(void *p) {
      return  p ? new(p) ::TGuiBldEditor : new ::TGuiBldEditor;
   }
   static void *newArray_TGuiBldEditor(Long_t size) {
      return new ::TGuiBldEditor[size];
   }
   // Wrapper around operator delete
   static void delete_TGuiBldEditor(void *p) {
      delete ((::TGuiBldEditor*)p);
   }
   static void deleteArray_TGuiBldEditor(void *p) {
      delete [] ((::TGuiBldEditor*)p);
   }
   static void destruct_TGuiBldEditor(void *p) {
      typedef ::TGuiBldEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGuiBldEditor

//______________________________________________________________________________
void TGuiBldHintsButton::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGuiBldHintsButton.

   TGButton::Streamer(R__b);
}

//______________________________________________________________________________
void TGuiBldHintsButton::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGuiBldHintsButton.

      TClass *R__cl = ::TGuiBldHintsButton::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGButton::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGuiBldHintsButton_IsA(const void *obj) {
      return ((::TGuiBldHintsButton*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGuiBldHintsButton(void *p) {
      delete ((::TGuiBldHintsButton*)p);
   }
   static void deleteArray_TGuiBldHintsButton(void *p) {
      delete [] ((::TGuiBldHintsButton*)p);
   }
   static void destruct_TGuiBldHintsButton(void *p) {
      typedef ::TGuiBldHintsButton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGuiBldHintsButton

//______________________________________________________________________________
void TGuiBldHintsEditor::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGuiBldHintsEditor.

   TGVerticalFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGuiBldHintsEditor::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGuiBldHintsEditor.

      TClass *R__cl = ::TGuiBldHintsEditor::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fEditor", &fEditor);
      R__insp.Inspect(R__cl, R__parent, "*fExpandX", &fExpandX);
      R__insp.Inspect(R__cl, R__parent, "*fExpandY", &fExpandY);
      R__insp.Inspect(R__cl, R__parent, "*fCenterX", &fCenterX);
      R__insp.Inspect(R__cl, R__parent, "*fCenterY", &fCenterY);
      R__insp.Inspect(R__cl, R__parent, "*fHintsLeft", &fHintsLeft);
      R__insp.Inspect(R__cl, R__parent, "*fHintsRight", &fHintsRight);
      R__insp.Inspect(R__cl, R__parent, "*fHintsTop", &fHintsTop);
      R__insp.Inspect(R__cl, R__parent, "*fHintsBottom", &fHintsBottom);
      R__insp.Inspect(R__cl, R__parent, "*fPadTop", &fPadTop);
      R__insp.Inspect(R__cl, R__parent, "*fPadBottom", &fPadBottom);
      R__insp.Inspect(R__cl, R__parent, "*fPadLeft", &fPadLeft);
      R__insp.Inspect(R__cl, R__parent, "*fPadRight", &fPadRight);
      TGVerticalFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGuiBldHintsEditor_IsA(const void *obj) {
      return ((::TGuiBldHintsEditor*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGuiBldHintsEditor(void *p) {
      delete ((::TGuiBldHintsEditor*)p);
   }
   static void deleteArray_TGuiBldHintsEditor(void *p) {
      delete [] ((::TGuiBldHintsEditor*)p);
   }
   static void destruct_TGuiBldHintsEditor(void *p) {
      typedef ::TGuiBldHintsEditor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGuiBldHintsEditor

//______________________________________________________________________________
void TGuiBldQuickHandler::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGuiBldQuickHandler.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TGuiBldQuickHandler::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGuiBldQuickHandler.

      TClass *R__cl = ::TGuiBldQuickHandler::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSelected", &fSelected);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGuiBldQuickHandler_IsA(const void *obj) {
      return ((::TGuiBldQuickHandler*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGuiBldQuickHandler(void *p) {
      return  p ? new(p) ::TGuiBldQuickHandler : new ::TGuiBldQuickHandler;
   }
   static void *newArray_TGuiBldQuickHandler(Long_t size) {
      return new ::TGuiBldQuickHandler[size];
   }
   // Wrapper around operator delete
   static void delete_TGuiBldQuickHandler(void *p) {
      delete ((::TGuiBldQuickHandler*)p);
   }
   static void deleteArray_TGuiBldQuickHandler(void *p) {
      delete [] ((::TGuiBldQuickHandler*)p);
   }
   static void destruct_TGuiBldQuickHandler(void *p) {
      typedef ::TGuiBldQuickHandler current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGuiBldQuickHandler

//______________________________________________________________________________
void TGuiBldTextDialog::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGuiBldTextDialog.

   TGTransientFrame::Streamer(R__b);
}

//______________________________________________________________________________
void TGuiBldTextDialog::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGuiBldTextDialog.

      TClass *R__cl = ::TGuiBldTextDialog::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSelected", &fSelected);
      R__insp.Inspect(R__cl, R__parent, "*fEntry", &fEntry);
      R__insp.Inspect(R__cl, R__parent, "*fOK", &fOK);
      R__insp.Inspect(R__cl, R__parent, "*fCancel", &fCancel);
      R__insp.Inspect(R__cl, R__parent, "fSavedText", &fSavedText);
      fSavedText.ShowMembers(R__insp, strcat(R__parent,"fSavedText.")); R__parent[R__ncp] = 0;
      TGTransientFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGuiBldTextDialog_IsA(const void *obj) {
      return ((::TGuiBldTextDialog*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGuiBldTextDialog(void *p) {
      delete ((::TGuiBldTextDialog*)p);
   }
   static void deleteArray_TGuiBldTextDialog(void *p) {
      delete [] ((::TGuiBldTextDialog*)p);
   }
   static void destruct_TGuiBldTextDialog(void *p) {
      typedef ::TGuiBldTextDialog current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGuiBldTextDialog

/********************************************************
* guibuilder/src/G__GuiBld.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__GuiBld();

extern "C" void G__set_cpp_environmentG__GuiBld() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("guibuilder/inc/TGuiBldQuickHandler.h");
  G__add_compiledheader("guibuilder/inc/TGuiBldDragManager.h");
  G__add_compiledheader("guibuilder/inc/TGuiBldEditor.h");
  G__add_compiledheader("guibuilder/inc/TRootGuiBuilder.h");
  G__add_compiledheader("guibuilder/inc/TGuiBldHintsButton.h");
  G__add_compiledheader("guibuilder/inc/TGuiBldHintsEditor.h");
  G__cpp_reset_tagtableG__GuiBld();
}
class G__guibuilderdIsrcdIG__GuiBlddOcxx_tag {};

void* operator new(size_t size,G__guibuilderdIsrcdIG__GuiBlddOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__guibuilderdIsrcdIG__GuiBlddOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_guibuilderdIsrcdIG__GuiBlddOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__GuiBld() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TGuiBldTextDialog */
static int G__G__GuiBld_246_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGuiBldTextDialog *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TGuiBldTextDialog(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TGuiBldTextDialog((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TGuiBldTextDialog((const char*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldTextDialog*)(G__getstructoffset()))->DoCancel();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldTextDialog*)(G__getstructoffset()))->DoOK();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldTextDialog*)(G__getstructoffset()))->CloseWindow();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGuiBldTextDialog::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldTextDialog::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGuiBldTextDialog::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGuiBldTextDialog::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGuiBldTextDialog*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldTextDialog*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldTextDialog*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldTextDialog*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldTextDialog::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldTextDialog::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldTextDialog::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_246_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldTextDialog::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GuiBld_246_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGuiBldTextDialog *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGuiBldTextDialog(*(TGuiBldTextDialog*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGuiBldTextDialog G__TTGuiBldTextDialog;
static int G__G__GuiBld_246_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGuiBldTextDialog *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGuiBldTextDialog *)((G__getstructoffset())+sizeof(TGuiBldTextDialog)*i);
   else  delete (TGuiBldTextDialog *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGuiBldQuickHandler */
static int G__G__GuiBld_247_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGuiBldQuickHandler *p=NULL;
   if(G__getaryconstruct()) p=new TGuiBldQuickHandler[G__getaryconstruct()];
   else                    p=new TGuiBldQuickHandler;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldQuickHandler);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldQuickHandler*)(G__getstructoffset()))->HandleEvent((TGWindow*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGuiBldQuickHandler::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldQuickHandler::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGuiBldQuickHandler::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGuiBldQuickHandler::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGuiBldQuickHandler*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldQuickHandler*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldQuickHandler*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldQuickHandler*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldQuickHandler::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldQuickHandler::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldQuickHandler::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_247_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldQuickHandler::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GuiBld_247_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGuiBldQuickHandler *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGuiBldQuickHandler(*(TGuiBldQuickHandler*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldQuickHandler);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGuiBldQuickHandler G__TTGuiBldQuickHandler;
static int G__G__GuiBld_247_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGuiBldQuickHandler *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGuiBldQuickHandler *)((G__getstructoffset())+sizeof(TGuiBldQuickHandler)*i);
   else  delete (TGuiBldQuickHandler *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__GuiBld_247_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGuiBldQuickHandler *dest = (TGuiBldQuickHandler*)(G__getstructoffset());
   *dest = (*(TGuiBldQuickHandler*)libp->para[0].ref);
   const TGuiBldQuickHandler& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRootGuiBuilder */
static int G__G__GuiBld_251_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TRootGuiBuilder *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TRootGuiBuilder((const TGWindow*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TRootGuiBuilder[G__getaryconstruct()];
   else                    p=new TRootGuiBuilder;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->AddAction((TGuiBldAction*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->AddSection((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TRootGuiBuilder*)(G__getstructoffset()))->ExecuteAction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->HandleButtons();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->Show();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->Hide();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->ChangeSelected((TGFrame*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->Update();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TRootGuiBuilder*)(G__getstructoffset()))->IsSelectMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TRootGuiBuilder*)(G__getstructoffset()))->IsGrabButtonDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,103,(long)((TRootGuiBuilder*)(G__getstructoffset()))->OpenProject((Event_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,103,(long)((TRootGuiBuilder*)(G__getstructoffset()))->OpenProject());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,103,(long)((TRootGuiBuilder*)(G__getstructoffset()))->SaveProject((Event_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,103,(long)((TRootGuiBuilder*)(G__getstructoffset()))->SaveProject());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,103,(long)((TRootGuiBuilder*)(G__getstructoffset()))->NewProject((Event_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,103,(long)((TRootGuiBuilder*)(G__getstructoffset()))->NewProject());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TRootGuiBuilder*)(G__getstructoffset()))->HandleKey((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->HandleMenu((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->CloseWindow();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->HandleWindowClosed((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->UpdateStatusBar((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->UpdateStatusBar();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->EraseStatusBar();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TRootGuiBuilder*)(G__getstructoffset()))->FindEditableMdiFrame((const TGWindow*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TRootGuiBuilder*)(G__getstructoffset()))->GetEditor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TRootGuiBuilder::HSplitter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TRootGuiBuilder::VSplitter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TRootGuiBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TRootGuiBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TRootGuiBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TRootGuiBuilder::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TRootGuiBuilder*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRootGuiBuilder*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TRootGuiBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TRootGuiBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TRootGuiBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_251_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TRootGuiBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GuiBld_251_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TRootGuiBuilder *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TRootGuiBuilder(*(TRootGuiBuilder*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRootGuiBuilder G__TTRootGuiBuilder;
static int G__G__GuiBld_251_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TRootGuiBuilder *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TRootGuiBuilder *)((G__getstructoffset())+sizeof(TRootGuiBuilder)*i);
   else  delete (TRootGuiBuilder *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGuiBldEditor */
static int G__G__GuiBld_254_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGuiBldEditor *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TGuiBldEditor((const TGWindow*)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TGuiBldEditor[G__getaryconstruct()];
   else                    p=new TGuiBldEditor;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGuiBldEditor*)(G__getstructoffset()))->GetSelected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGuiBldEditor*)(G__getstructoffset()))->IsEmbedded());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->SetEmbedded((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->SetEmbedded();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->Hide();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->UpdateBorder((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->UpdateBackground((Pixel_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->UpdateForeground((Pixel_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->UpdateSelected((TGFrame*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->UpdateSelected();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->ChangeSelected((TGFrame*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGuiBldEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGuiBldEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGuiBldEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGuiBldEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_254_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GuiBld_254_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGuiBldEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGuiBldEditor(*(TGuiBldEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGuiBldEditor G__TTGuiBldEditor;
static int G__G__GuiBld_254_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGuiBldEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGuiBldEditor *)((G__getstructoffset())+sizeof(TGuiBldEditor)*i);
   else  delete (TGuiBldEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGuiBldDragManager */
static int G__G__GuiBld_256_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGuiBldDragManager*)(G__getstructoffset()))->InEditable((Window_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->SelectFrame((TGFrame*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->SelectFrame((TGFrame*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->GrabFrame((TGFrame*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->UngrabFrame();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->CheckDragResize((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGuiBldDragManager*)(G__getstructoffset()))->GetFramesInside((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->ToGrid(*(Int_t*)G__Intref(&libp->para[0]),*(Int_t*)G__Intref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->DoReplace((TGFrame*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->DeleteFrame((TGFrame*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleDelete((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleDelete();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleReturn((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleReturn();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleAlignment((Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleAlignment((Int_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleCut();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleCopy();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandlePaste();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleReplace();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleGrid();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->CloneEditable();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->Save((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->Save();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleLayoutOrder((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleLayoutOrder();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->DoResize();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->DoMove();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->DrawLasso();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->PlaceFrame((TGFrame*)G__int(libp->para[0]),(TGLayoutHints*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->ReparentFrames((TGFrame*)G__int(libp->para[0]),(TGCompositeFrame*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGuiBldDragManager*)(G__getstructoffset()))->FindCompositeFrame((Window_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->SetCursorType((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->CheckTargetUnderGrab();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HighlightCompositeFrame((Window_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->Compact((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->Compact();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->StartDrag((TGFrame*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->EndDrag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->Drop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->Cancel((Bool_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->Menu4Frame((TGFrame*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->Menu4Lasso((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->CreatePropertyEditor();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->SetPropertyEditor((TGuiBldEditor*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->DeletePropertyEditor();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->SetEditable((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->SetEditable();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->DoRedraw();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->SwitchEditable((TGFrame*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleEvent((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->RecognizeGesture((Event_t*)G__int(libp->para[0]),(TGFrame*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->RecognizeGesture((Event_t*)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleButtonPress((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleButtonRelease((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleButton((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleDoubleClick((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleKey((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleMotion((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleClientMessage((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleSelection((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleExpose((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleConfigureNotify((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleSelectionRequest((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleButon3Pressed((Event_t*)G__int(libp->para[0]),(TGFrame*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleButon3Pressed((Event_t*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGuiBldDragManager *p=NULL;
   if(G__getaryconstruct()) p=new TGuiBldDragManager[G__getaryconstruct()];
   else                    p=new TGuiBldDragManager;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->HandleTimer((TTimer*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleAction((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGuiBldDragManager*)(G__getstructoffset()))->IsMoveWaiting());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGuiBldDragManager*)(G__getstructoffset()))->IsLassoDrawn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGuiBldDragManager*)(G__getstructoffset()))->GetTarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGuiBldDragManager*)(G__getstructoffset()))->GetSelected());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->Snap2Grid();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->SetGridStep((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TGuiBldDragManager*)(G__getstructoffset()))->GetGridStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HandleUpdateSelected((TGFrame*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->HideGrabRectangles();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGuiBldDragManager*)(G__getstructoffset()))->IgnoreEvent((Event_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGuiBldDragManager*)(G__getstructoffset()))->GetStrartDragX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGuiBldDragManager*)(G__getstructoffset()))->GetStrartDragY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGuiBldDragManager*)(G__getstructoffset()))->GetEndDragX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGuiBldDragManager*)(G__getstructoffset()))->GetEndDragY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->ExecuteQuickAction((Event_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->BreakLayout();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->SwitchLayout();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGuiBldDragManager*)(G__getstructoffset()))->GetDropStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->SetBuilder((TRootGuiBuilder*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->Selected((TGFrame*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGuiBldDragManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldDragManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGuiBldDragManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGuiBldDragManager::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGuiBldDragManager*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldDragManager*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldDragManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldDragManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldDragManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_256_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldDragManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GuiBld_256_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGuiBldDragManager *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGuiBldDragManager(*(TGuiBldDragManager*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGuiBldDragManager G__TTGuiBldDragManager;
static int G__G__GuiBld_256_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGuiBldDragManager *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGuiBldDragManager *)((G__getstructoffset())+sizeof(TGuiBldDragManager)*i);
   else  delete (TGuiBldDragManager *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGuiBldHintsEditor */
static int G__G__GuiBld_257_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGuiBldHintsEditor *p=NULL;
      p = new TGuiBldHintsEditor((const TGWindow*)G__int(libp->para[0]),(TGuiBldEditor*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldHintsEditor*)(G__getstructoffset()))->ChangeSelected((TGFrame*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldHintsEditor*)(G__getstructoffset()))->UpdateState();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGuiBldHintsEditor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldHintsEditor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGuiBldHintsEditor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGuiBldHintsEditor::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGuiBldHintsEditor*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldHintsEditor*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldHintsEditor*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldHintsEditor*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldHintsEditor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldHintsEditor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldHintsEditor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_257_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldHintsEditor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GuiBld_257_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGuiBldHintsEditor *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGuiBldHintsEditor(*(TGuiBldHintsEditor*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGuiBldHintsEditor G__TTGuiBldHintsEditor;
static int G__G__GuiBld_257_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGuiBldHintsEditor *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGuiBldHintsEditor *)((G__getstructoffset())+sizeof(TGuiBldHintsEditor)*i);
   else  delete (TGuiBldHintsEditor *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGuiBldHintsButton */
static int G__G__GuiBld_281_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGuiBldHintsButton *p=NULL;
      p = new TGuiBldHintsButton((const TGWindow*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGuiBldHintsButton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldHintsButton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGuiBldHintsButton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGuiBldHintsButton::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGuiBldHintsButton*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldHintsButton*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldHintsButton*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGuiBldHintsButton*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldHintsButton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldHintsButton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGuiBldHintsButton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__GuiBld_281_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGuiBldHintsButton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__GuiBld_281_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGuiBldHintsButton *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGuiBldHintsButton(*(TGuiBldHintsButton*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGuiBldHintsButton G__TTGuiBldHintsButton;
static int G__G__GuiBld_281_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGuiBldHintsButton *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGuiBldHintsButton *)((G__getstructoffset())+sizeof(TGuiBldHintsButton)*i);
   else  delete (TGuiBldHintsButton *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TGuiBldTextDialog */

/* TGuiBldQuickHandler */

/* TRootGuiBuilder */

/* TGuiBldEditor */

/* TGuiBldDragManager */

/* TGuiBldHintsEditor */

/* TGuiBldHintsButton */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__GuiBld {
 public:
  G__Sizep2memfuncG__GuiBld() {p=&G__Sizep2memfuncG__GuiBld::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__GuiBld::*p)();
};

size_t G__get_sizep2memfuncG__GuiBld()
{
  G__Sizep2memfuncG__GuiBld a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__GuiBld() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog))) {
     TGuiBldTextDialog *G__Lderived;
     G__Lderived=(TGuiBldTextDialog*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog),G__get_linked_tagnum(&G__G__GuiBldLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog),G__get_linked_tagnum(&G__G__GuiBldLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog),G__get_linked_tagnum(&G__G__GuiBldLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog),G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog),G__get_linked_tagnum(&G__G__GuiBldLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog),G__get_linked_tagnum(&G__G__GuiBldLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog),G__get_linked_tagnum(&G__G__GuiBldLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog),G__get_linked_tagnum(&G__G__GuiBldLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldQuickHandler))) {
     TGuiBldQuickHandler *G__Lderived;
     G__Lderived=(TGuiBldQuickHandler*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldQuickHandler),G__get_linked_tagnum(&G__G__GuiBldLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder))) {
     TRootGuiBuilder *G__Lderived;
     G__Lderived=(TRootGuiBuilder*)0x1000;
     {
       TGuiBuilder *G__Lpbase=(TGuiBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),G__get_linked_tagnum(&G__G__GuiBldLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),G__get_linked_tagnum(&G__G__GuiBldLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),G__get_linked_tagnum(&G__G__GuiBldLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),G__get_linked_tagnum(&G__G__GuiBldLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),G__get_linked_tagnum(&G__G__GuiBldLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),G__get_linked_tagnum(&G__G__GuiBldLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor))) {
     TGuiBldEditor *G__Lderived;
     G__Lderived=(TGuiBldEditor*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager))) {
     TGuiBldDragManager *G__Lderived;
     G__Lderived=(TGuiBldDragManager*)0x1000;
     {
       TVirtualDragManager *G__Lpbase=(TVirtualDragManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager),G__get_linked_tagnum(&G__G__GuiBldLN_TVirtualDragManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager),G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager),G__get_linked_tagnum(&G__G__GuiBldLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager),G__get_linked_tagnum(&G__G__GuiBldLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager),G__get_linked_tagnum(&G__G__GuiBldLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager),G__get_linked_tagnum(&G__G__GuiBldLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor))) {
     TGuiBldHintsEditor *G__Lderived;
     G__Lderived=(TGuiBldHintsEditor*)0x1000;
     {
       TGVerticalFrame *G__Lpbase=(TGVerticalFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TGVerticalFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor),G__get_linked_tagnum(&G__G__GuiBldLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton))) {
     TGuiBldHintsButton *G__Lderived;
     G__Lderived=(TGuiBldHintsButton*)0x1000;
     {
       TGButton *G__Lpbase=(TGButton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),G__get_linked_tagnum(&G__G__GuiBldLN_TGButton),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),G__get_linked_tagnum(&G__G__GuiBldLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),G__get_linked_tagnum(&G__G__GuiBldLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),G__get_linked_tagnum(&G__G__GuiBldLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),G__get_linked_tagnum(&G__G__GuiBldLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),G__get_linked_tagnum(&G__G__GuiBldLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__GuiBld() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__GuiBldLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__GuiBldLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GuiBldLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__GuiBldLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__GuiBldLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("Window_t",107,-1,0,
-1);
   G__setnewtype(-1,"Window handle",0);
   G__search_typename2("Pixel_t",107,-1,0,
-1);
   G__setnewtype(-1,"Pixel value",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TGuiBldTextDialog */
static void G__setup_memvarTGuiBldTextDialog(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog));
   { TGuiBldTextDialog *p; p=(TGuiBldTextDialog*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGWindow),-1,-1,4,"fSelected=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGTextEntry),-1,-1,4,"fEntry=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGTextButton),-1,-1,4,"fOK=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGTextButton),-1,-1,4,"fCancel=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TString),-1,-1,4,"fSavedText=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGuiBldQuickHandler */
static void G__setup_memvarTGuiBldQuickHandler(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldQuickHandler));
   { TGuiBldQuickHandler *p; p=(TGuiBldQuickHandler*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGWindow),-1,-1,4,"fSelected=",0,"editted frame");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRootGuiBuilder */
static void G__setup_memvarTRootGuiBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder));
   { TRootGuiBuilder *p; p=(TRootGuiBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager),-1,-1,4,"fManager=",0,"drag and drop manager");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGToolBar),-1,-1,4,"fToolBar=",0,"guibuider toolbar");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGShutter),-1,-1,4,"fShutter=",0,"widget palette");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGMdiMainFrame),-1,-1,4,"fMain=",0,"main mdi frame");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGDockableFrame),-1,-1,4,"fToolDock=",0,"dockable frame where toolbar is located ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGDockableFrame),-1,-1,4,"fShutterDock=",0,"dockable frame where widget palette is located  ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGMdiMenuBar),-1,-1,4,"fMenuBar=",0,"guibuildere menu bar");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGPopupMenu),-1,-1,4,"fMenuFile=",0,"\"File\" popup menu");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGPopupMenu),-1,-1,4,"fMenuWindow=",0,"\"Window\" popup menu");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGPopupMenu),-1,-1,4,"fMenuHelp=",0,"\"Help\" popup menu");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGStatusBar),-1,-1,4,"fStatusBar=",0,"guibuilder status bar");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),-1,-1,4,"fSelected=",0,"selected frame");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGMdiFrame),-1,-1,4,"fEditable=",0,"mdi frame where editted frame is  located");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),-1,-1,4,"fEditor=",0,"frame property editor");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGuiBldEditor */
static void G__setup_memvarTGuiBldEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor));
   { TGuiBldEditor *p; p=(TGuiBldEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),-1,-1,4,"fSelected=",0,"editted frame");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldNameFrame),-1,-1,4,"fNameFrame=",0,"frame name");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor),-1,-1,4,"fHintsFrame=",0,"frame hints");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldBorderFrame),-1,-1,4,"fBorderFrame=",0,"frame border");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fEmbedded=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGuiBldDragManager */
static void G__setup_memvarTGuiBldDragManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager));
   { TGuiBldDragManager *p; p=(TGuiBldDragManager*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManagerPimpl),-1,-1,4,"fPimpl=",0,"private data");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),-1,-1,4,"fBuilder=",0,"pointer to gui builder");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),-1,-1,4,"fEditor=",0,"frame property editor");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldQuickHandler),-1,-1,4,"fQuickHandler=",0,"quick action handler");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fLassoDrawn=",0,"kTRUE if  lasso drawn");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TString),-1,-1,4,"fPasteFileName=",0,"paste_clippboard file name ");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSelectionIsOn=",0,"selection with Shift key pressed");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGPopupMenu),-1,-1,4,"fFrameMenu=",0,"context menu for frames");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGPopupMenu),-1,-1,4,"fLassoMenu=",0,"context menu for lasso drawn");
   G__memvar_setup((void*)NULL,107,0,0,-1,G__defined_typename("Window_t"),-1,4,"fTargetId=",0,"an id of window where drop ");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDropStatus=",0,"kTRUE if drop was successfull");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGuiBldHintsEditor */
static void G__setup_memvarTGuiBldHintsEditor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor));
   { TGuiBldHintsEditor *p; p=(TGuiBldHintsEditor*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),-1,-1,4,"fEditor=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),-1,-1,4,"fExpandX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),-1,-1,4,"fExpandY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),-1,-1,4,"fCenterX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),-1,-1,4,"fCenterY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGTextButton),-1,-1,4,"fHintsLeft=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGTextButton),-1,-1,4,"fHintsRight=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGTextButton),-1,-1,4,"fHintsTop=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGTextButton),-1,-1,4,"fHintsBottom=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGNumberEntry),-1,-1,4,"fPadTop=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGNumberEntry),-1,-1,4,"fPadBottom=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGNumberEntry),-1,-1,4,"fPadLeft=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TGNumberEntry),-1,-1,4,"fPadRight=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGuiBldHintsButton */
static void G__setup_memvarTGuiBldHintsButton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton));
   { TGuiBldHintsButton *p; p=(TGuiBldHintsButton*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__GuiBld() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTGuiBldTextDialog(void) {
   /* TGuiBldTextDialog */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog));
   G__memfunc_setup("TGuiBldTextDialog",1664,G__G__GuiBld_246_1_0,105,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog),-1,0,3,1,1,0,
"C - - 10 - win C - - 10 \"SetTitle(char*)\" setter "
"C - - 10 \"GetTitle()\" getter",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DoCancel",761,G__G__GuiBld_246_2_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DoOK",333,G__G__GuiBld_246_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CloseWindow",1134,G__G__GuiBld_246_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GuiBld_246_5_0,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGuiBldTextDialog::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GuiBld_246_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldTextDialog::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GuiBld_246_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGuiBldTextDialog::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GuiBld_246_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGuiBldTextDialog::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GuiBld_246_9_0,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GuiBld_246_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GuiBld_246_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GuiBld_246_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GuiBld_246_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldTextDialog::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GuiBld_246_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldTextDialog::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GuiBld_246_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldTextDialog::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GuiBld_246_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldTextDialog::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGuiBldTextDialog",1664,G__G__GuiBld_246_7_1,(int)('i'),G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog),-1,0,1,1,1,0,"u 'TGuiBldTextDialog' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGuiBldTextDialog",1790,G__G__GuiBld_246_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGuiBldQuickHandler(void) {
   /* TGuiBldQuickHandler */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldQuickHandler));
   G__memfunc_setup("TGuiBldQuickHandler",1862,G__G__GuiBld_247_1_0,105,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldQuickHandler),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleEvent",1102,G__G__GuiBld_247_2_0,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'TGWindow' - 0 - win",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__GuiBld_247_3_0,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGuiBldQuickHandler::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GuiBld_247_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldQuickHandler::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GuiBld_247_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGuiBldQuickHandler::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GuiBld_247_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGuiBldQuickHandler::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GuiBld_247_7_0,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GuiBld_247_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GuiBld_247_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GuiBld_247_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GuiBld_247_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldQuickHandler::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GuiBld_247_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldQuickHandler::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GuiBld_247_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldQuickHandler::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GuiBld_247_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldQuickHandler::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGuiBldQuickHandler",1862,G__G__GuiBld_247_5_1,(int)('i'),G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldQuickHandler),-1,0,1,1,1,0,"u 'TGuiBldQuickHandler' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGuiBldQuickHandler",1988,G__G__GuiBld_247_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__GuiBld_247_7_1,(int)('u'),G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldQuickHandler),-1,1,1,1,1,0,"u 'TGuiBldQuickHandler' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRootGuiBuilder(void) {
   /* TRootGuiBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder));
   G__memfunc_setup("InitMenu",809,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("EnableLassoButtons",1848,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"g - 'Bool_t' 0 kTRUE on",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("EnableSelectedButtons",2143,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"g - 'Bool_t' 0 kTRUE on",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("EnableEditButtons",1724,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"g - 'Bool_t' 0 kTRUE on",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BindKeys",793,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TRootGuiBuilder",1508,G__G__GuiBld_251_6_0,105,G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),-1,0,1,1,1,0,"U 'TGWindow' - 10 0 p",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddAction",871,G__G__GuiBld_251_7_0,121,-1,-1,0,2,1,1,0,
"U 'TGuiBldAction' - 0 - act C - - 10 - sect",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddSection",990,G__G__GuiBld_251_8_0,121,-1,-1,0,1,1,1,0,"C - - 10 - sect",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteAction",1329,G__G__GuiBld_251_9_0,85,G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleButtons",1339,G__G__GuiBld_251_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Show",417,G__G__GuiBld_251_1_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Hide",378,G__G__GuiBld_251_2_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ChangeSelected",1391,G__G__GuiBld_251_3_1,121,-1,-1,0,1,1,1,0,"U 'TGFrame' - 0 - f",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Update",611,G__G__GuiBld_251_4_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsSelectMode",1185,G__G__GuiBld_251_5_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsGrabButtonDown",1612,G__G__GuiBld_251_6_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("OpenProject",1129,G__G__GuiBld_251_7_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 0 event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SaveProject",1126,G__G__GuiBld_251_8_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 0 event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("NewProject",1025,G__G__GuiBld_251_9_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 0 event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleKey",885,G__G__GuiBld_251_0_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - event",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleMenu",993,G__G__GuiBld_251_1_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CloseWindow",1134,G__G__GuiBld_251_2_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleWindowClosed",1822,G__G__GuiBld_251_3_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UpdateStatusBar",1532,G__G__GuiBld_251_4_2,121,-1,-1,0,1,1,1,0,"C - - 10 0 text",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("EraseStatusBar",1417,G__G__GuiBld_251_5_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindEditableMdiFrame",1952,G__G__GuiBld_251_6_2,85,G__get_linked_tagnum(&G__G__GuiBldLN_TGMdiFrame),-1,0,1,1,1,0,"U 'TGWindow' - 10 - win",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEditor",903,G__G__GuiBld_251_7_2,85,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HSplitter",927,G__G__GuiBld_251_8_2,85,G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TGFrame* (*)())(&TRootGuiBuilder::HSplitter),0);
   G__memfunc_setup("VSplitter",941,G__G__GuiBld_251_9_2,85,G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TGFrame* (*)())(&TRootGuiBuilder::VSplitter),0);
   G__memfunc_setup("Class",502,G__G__GuiBld_251_0_3,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TRootGuiBuilder::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GuiBld_251_1_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TRootGuiBuilder::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GuiBld_251_2_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TRootGuiBuilder::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GuiBld_251_3_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TRootGuiBuilder::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GuiBld_251_4_3,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GuiBld_251_5_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GuiBld_251_6_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GuiBld_251_7_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GuiBld_251_8_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TRootGuiBuilder::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GuiBld_251_9_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TRootGuiBuilder::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GuiBld_251_0_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TRootGuiBuilder::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GuiBld_251_1_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TRootGuiBuilder::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TRootGuiBuilder",1508,G__G__GuiBld_251_2_4,(int)('i'),G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),-1,0,1,1,1,0,"u 'TRootGuiBuilder' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TRootGuiBuilder",1634,G__G__GuiBld_251_3_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGuiBldEditor(void) {
   /* TGuiBldEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor));
   G__memfunc_setup("TGuiBldEditor",1266,G__G__GuiBld_254_1_0,105,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),-1,0,1,1,1,0,"U 'TGWindow' - 10 0 p",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSelected",1097,G__G__GuiBld_254_2_0,85,G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsEmbedded",966,G__G__GuiBld_254_3_0,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetEmbedded",1078,G__G__GuiBld_254_4_0,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE e",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Hide",378,G__G__GuiBld_254_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UpdateBorder",1217,G__G__GuiBld_254_6_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UpdateBackground",1635,G__G__GuiBld_254_7_0,121,-1,-1,0,1,1,1,0,"k - 'Pixel_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UpdateForeground",1662,G__G__GuiBld_254_8_0,121,-1,-1,0,1,1,1,0,"k - 'Pixel_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UpdateSelected",1420,G__G__GuiBld_254_9_0,121,-1,-1,0,1,1,1,0,"U 'TGFrame' - 0 0 -","*SIGNAL*",(void*)NULL,0);
   G__memfunc_setup("ChangeSelected",1391,G__G__GuiBld_254_0_1,121,-1,-1,0,1,1,1,0,"U 'TGFrame' - 0 - -","*SIGNAL*",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GuiBld_254_1_1,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGuiBldEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GuiBld_254_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GuiBld_254_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGuiBldEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GuiBld_254_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGuiBldEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GuiBld_254_5_1,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GuiBld_254_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GuiBld_254_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GuiBld_254_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GuiBld_254_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GuiBld_254_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GuiBld_254_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GuiBld_254_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGuiBldEditor",1266,G__G__GuiBld_254_3_2,(int)('i'),G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),-1,0,1,1,1,0,"u 'TGuiBldEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGuiBldEditor",1392,G__G__GuiBld_254_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGuiBldDragManager(void) {
   /* TGuiBldDragManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager));
   G__memfunc_setup("Init",404,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawGrabRectangles",1810,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"U 'TGWindow' - 0 0 win",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawGrabRect",1176,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,4,0,
"i - 'Int_t' 0 - i i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FindLayoutFrame",1514,(G__InterfaceMethod)NULL,85,G__get_linked_tagnum(&G__G__GuiBldLN_TGCompositeFrame),-1,0,1,1,4,0,"U 'TGFrame' - 0 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsSelectedVisible",1715,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CloseMenus",1022,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InEditable",977,G__G__GuiBld_256_7_0,85,G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),-1,0,1,1,1,0,"k - 'Window_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SelectFrame",1099,G__G__GuiBld_256_8_0,121,-1,-1,0,2,1,1,0,
"U 'TGFrame' - 0 - frame g - 'Bool_t' 0 kFALSE add",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GrabFrame",871,G__G__GuiBld_256_9_0,121,-1,-1,0,1,1,1,0,"U 'TGFrame' - 0 - frame",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UngrabFrame",1098,G__G__GuiBld_256_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CheckDragResize",1486,G__G__GuiBld_256_1_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - event",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFramesInside",1498,G__G__GuiBld_256_2_1,85,G__get_linked_tagnum(&G__G__GuiBldLN_TList),-1,0,4,1,1,0,
"i - 'Int_t' 0 - x0 i - 'Int_t' 0 - y0 "
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ToGrid",585,G__G__GuiBld_256_3_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 1 - x i - 'Int_t' 1 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DoReplace",879,G__G__GuiBld_256_4_1,121,-1,-1,0,1,1,1,0,"U 'TGFrame' - 0 - frame",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeleteFrame",1086,G__G__GuiBld_256_5_1,121,-1,-1,0,1,1,1,0,"U 'TGFrame' - 0 - frame",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleDelete",1183,G__G__GuiBld_256_6_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE crop",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleReturn",1228,G__G__GuiBld_256_7_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kFALSE on",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleAlignment",1515,G__G__GuiBld_256_8_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - to g - 'Bool_t' 0 kFALSE lineup",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleCut",888,G__G__GuiBld_256_9_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleCopy",999,G__G__GuiBld_256_0_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandlePaste",1097,G__G__GuiBld_256_1_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleReplace",1288,G__G__GuiBld_256_2_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleGrid",978,G__G__GuiBld_256_3_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CloneEditable",1291,G__G__GuiBld_256_4_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Save",399,G__G__GuiBld_256_5_2,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" file",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleLayoutOrder",1734,G__G__GuiBld_256_6_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE forward",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DoResize",805,G__G__GuiBld_256_7_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DoMove",586,G__G__GuiBld_256_8_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawLasso",912,G__G__GuiBld_256_9_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PlaceFrame",976,G__G__GuiBld_256_0_3,121,-1,-1,0,2,1,1,0,
"U 'TGFrame' - 0 - - U 'TGLayoutHints' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReparentFrames",1439,G__G__GuiBld_256_1_3,121,-1,-1,0,2,1,1,0,
"U 'TGFrame' - 0 - newfr U 'TGCompositeFrame' - 0 - oldfr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FindCompositeFrame",1823,G__G__GuiBld_256_2_3,85,G__get_linked_tagnum(&G__G__GuiBldLN_TGCompositeFrame),-1,0,1,1,1,0,"k - 'Window_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetCursorType",1356,G__G__GuiBld_256_3_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - cur",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CheckTargetUnderGrab",1983,G__G__GuiBld_256_4_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HighlightCompositeFrame",2358,G__G__GuiBld_256_5_3,121,-1,-1,0,1,1,1,0,"k - 'Window_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Compact",711,G__G__GuiBld_256_6_3,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE global",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("StartDrag",908,G__G__GuiBld_256_7_3,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"U 'TGFrame' - 0 - src i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("EndDrag",661,G__G__GuiBld_256_8_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Drop",405,G__G__GuiBld_256_9_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Cancel",582,G__G__GuiBld_256_0_4,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"g - 'Bool_t' 0 - delSrc",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Menu4Frame",948,G__G__GuiBld_256_1_4,121,-1,-1,0,3,1,1,0,
"U 'TGFrame' - 0 - - i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Menu4Lasso",971,G__G__GuiBld_256_2_4,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - x i - 'Int_t' 0 - y",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CreatePropertyEditor",2080,G__G__GuiBld_256_3_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPropertyEditor",1784,G__G__GuiBld_256_4_4,121,-1,-1,0,1,1,1,0,"U 'TGuiBldEditor' - 0 - e",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeletePropertyEditor",2079,G__G__GuiBld_256_5_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetEditable",1094,G__G__GuiBld_256_6_4,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE on",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoRedraw",792,G__G__GuiBld_256_7_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SwitchEditable",1420,G__G__GuiBld_256_8_4,121,-1,-1,0,1,1,1,0,"U 'TGFrame' - 0 - frame",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleEvent",1102,G__G__GuiBld_256_9_4,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RecognizeGesture",1669,G__G__GuiBld_256_0_5,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"U 'Event_t' - 0 - - U 'TGFrame' - 0 0 frame",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleButtonPress",1749,G__G__GuiBld_256_1_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleButtonRelease",1929,G__G__GuiBld_256_2_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleButton",1224,G__G__GuiBld_256_3_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleDoubleClick",1677,G__G__GuiBld_256_4_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleKey",885,G__G__GuiBld_256_5_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleMotion",1218,G__G__GuiBld_256_6_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleClientMessage",1904,G__G__GuiBld_256_7_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleSelection",1522,G__G__GuiBld_256_8_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleExpose",1216,G__G__GuiBld_256_9_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleConfigureNotify",2151,G__G__GuiBld_256_0_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleSelectionRequest",2267,G__G__GuiBld_256_1_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleButon3Pressed",1885,G__G__GuiBld_256_2_6,121,-1,-1,0,2,1,1,0,
"U 'Event_t' - 0 - - U 'TGFrame' - 0 0 frame",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGuiBldDragManager",1732,G__G__GuiBld_256_3_6,105,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleTimer",1101,G__G__GuiBld_256_4_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'TTimer' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HandleAction",1194,G__G__GuiBld_256_5_6,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - act",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsMoveWaiting",1318,G__G__GuiBld_256_6_6,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsLassoDrawn",1210,G__G__GuiBld_256_7_6,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTarget",903,G__G__GuiBld_256_8_6,85,G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSelected",1097,G__G__GuiBld_256_9_6,85,G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Snap2Grid",842,G__G__GuiBld_256_0_7,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetGridStep",1102,G__G__GuiBld_256_1_7,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetGridStep",1090,G__G__GuiBld_256_2_7,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HandleUpdateSelected",2008,G__G__GuiBld_256_3_7,121,-1,-1,0,1,1,1,0,"U 'TGFrame' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HideGrabRectangles",1790,G__G__GuiBld_256_4_7,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IgnoreEvent",1126,G__G__GuiBld_256_5_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'Event_t' - 0 - e",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStrartDragX",1398,G__G__GuiBld_256_6_7,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStrartDragY",1399,G__G__GuiBld_256_7_7,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEndDragX",1037,G__G__GuiBld_256_8_7,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetEndDragY",1038,G__G__GuiBld_256_9_7,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteQuickAction",1838,G__G__GuiBld_256_0_8,121,-1,-1,0,1,1,1,0,"U 'Event_t' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BreakLayout",1123,G__G__GuiBld_256_1_8,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SwitchLayout",1264,G__G__GuiBld_256_2_8,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDropStatus",1337,G__G__GuiBld_256_3_8,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetBuilder",1011,G__G__GuiBld_256_4_8,121,-1,-1,0,1,1,1,0,"U 'TRootGuiBuilder' - 0 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Selected",809,G__G__GuiBld_256_5_8,121,-1,-1,0,1,1,1,0,"U 'TGFrame' - 0 - frame","*SIGNAL*",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GuiBld_256_6_8,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGuiBldDragManager::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GuiBld_256_7_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldDragManager::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GuiBld_256_8_8,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGuiBldDragManager::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GuiBld_256_9_8,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGuiBldDragManager::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GuiBld_256_0_9,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GuiBld_256_1_9,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GuiBld_256_2_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GuiBld_256_3_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GuiBld_256_4_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldDragManager::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GuiBld_256_5_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldDragManager::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GuiBld_256_6_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldDragManager::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GuiBld_256_7_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldDragManager::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGuiBldDragManager",1732,G__G__GuiBld_256_8_9,(int)('i'),G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager),-1,0,1,1,1,0,"u 'TGuiBldDragManager' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGuiBldDragManager",1858,G__G__GuiBld_256_9_9,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGuiBldHintsEditor(void) {
   /* TGuiBldHintsEditor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor));
   G__memfunc_setup("TGuiBldHintsEditor",1784,G__G__GuiBld_257_1_0,105,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor),-1,0,2,1,1,0,
"U 'TGWindow' - 10 - p U 'TGuiBldEditor' - 0 - e",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ChangeSelected",1391,G__G__GuiBld_257_2_0,121,-1,-1,0,1,1,1,0,"U 'TGFrame' - 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("UpdateState",1124,G__G__GuiBld_257_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GuiBld_257_4_0,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGuiBldHintsEditor::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GuiBld_257_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldHintsEditor::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GuiBld_257_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGuiBldHintsEditor::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GuiBld_257_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGuiBldHintsEditor::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GuiBld_257_8_0,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GuiBld_257_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GuiBld_257_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GuiBld_257_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GuiBld_257_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldHintsEditor::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GuiBld_257_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldHintsEditor::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GuiBld_257_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldHintsEditor::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GuiBld_257_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldHintsEditor::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGuiBldHintsEditor",1784,G__G__GuiBld_257_6_1,(int)('i'),G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor),-1,0,1,1,1,0,"u 'TGuiBldHintsEditor' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGuiBldHintsEditor",1910,G__G__GuiBld_257_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGuiBldHintsButton(void) {
   /* TGuiBldHintsButton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton));
   G__memfunc_setup("DrawExpandX",1094,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawExpandY",1095,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawCenterX",1095,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawCenterY",1096,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawTopLeft",1100,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawTopRight",1215,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawBottomLeft",1422,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawBottomRight",1537,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DoRedraw",792,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TGuiBldHintsButton",1805,G__G__GuiBld_281_0_1,105,G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),-1,0,2,1,1,0,
"U 'TGWindow' - 10 - p i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__GuiBld_281_1_1,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGuiBldHintsButton::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__GuiBld_281_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldHintsButton::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__GuiBld_281_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGuiBldHintsButton::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__GuiBld_281_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGuiBldHintsButton::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__GuiBld_281_5_1,85,G__get_linked_tagnum(&G__G__GuiBldLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__GuiBld_281_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__GuiBld_281_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__GuiBld_281_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__GuiBld_281_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldHintsButton::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__GuiBld_281_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldHintsButton::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__GuiBld_281_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGuiBldHintsButton::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__GuiBld_281_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGuiBldHintsButton::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGuiBldHintsButton",1805,G__G__GuiBld_281_3_2,(int)('i'),G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),-1,0,1,1,1,0,"u 'TGuiBldHintsButton' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGuiBldHintsButton",1931,G__G__GuiBld_281_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__GuiBld() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__GuiBld() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__GuiBld() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__GuiBldLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGTransientFrame = { "TGTransientFrame" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGuiBldTextDialog = { "TGuiBldTextDialog" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGuiBldQuickHandler = { "TGuiBldQuickHandler" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TVirtualDragManager = { "TVirtualDragManager" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGuiBldDragManagerPimpl = { "TGuiBldDragManagerPimpl" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TRootGuiBuilder = { "TRootGuiBuilder" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGuiBldEditor = { "TGuiBldEditor" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGuiBldDragManager = { "TGuiBldDragManager" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGuiBldHintsEditor = { "TGuiBldHintsEditor" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGuiBldNameFrame = { "TGuiBldNameFrame" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGuiBldBorderFrame = { "TGuiBldBorderFrame" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGuiBldAction = { "TGuiBldAction" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGuiBuilder = { "TGuiBuilder" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGShutter = { "TGShutter" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGMdiMainFrame = { "TGMdiMainFrame" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGDockableFrame = { "TGDockableFrame" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGMdiMenuBar = { "TGMdiMenuBar" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGStatusBar = { "TGStatusBar" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGToolBar = { "TGToolBar" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGMdiFrame = { "TGMdiFrame" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGWidget = { "TGWidget" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGButton = { "TGButton" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGuiBldHintsButton = { "TGuiBldHintsButton" , 99 , -1 };
G__linked_taginfo G__G__GuiBldLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__GuiBld() {
  G__G__GuiBldLN_TClass.tagnum = -1 ;
  G__G__GuiBldLN_TBuffer.tagnum = -1 ;
  G__G__GuiBldLN_TMemberInspector.tagnum = -1 ;
  G__G__GuiBldLN_TObject.tagnum = -1 ;
  G__G__GuiBldLN_TList.tagnum = -1 ;
  G__G__GuiBldLN_TTimer.tagnum = -1 ;
  G__G__GuiBldLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__GuiBldLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__GuiBldLN_TString.tagnum = -1 ;
  G__G__GuiBldLN_Event_t.tagnum = -1 ;
  G__G__GuiBldLN_TGObject.tagnum = -1 ;
  G__G__GuiBldLN_TGWindow.tagnum = -1 ;
  G__G__GuiBldLN_TQObject.tagnum = -1 ;
  G__G__GuiBldLN_TGFrame.tagnum = -1 ;
  G__G__GuiBldLN_TGCompositeFrame.tagnum = -1 ;
  G__G__GuiBldLN_TGLayoutHints.tagnum = -1 ;
  G__G__GuiBldLN_TGVerticalFrame.tagnum = -1 ;
  G__G__GuiBldLN_TGMainFrame.tagnum = -1 ;
  G__G__GuiBldLN_TGTransientFrame.tagnum = -1 ;
  G__G__GuiBldLN_TGTextEntry.tagnum = -1 ;
  G__G__GuiBldLN_TGTextButton.tagnum = -1 ;
  G__G__GuiBldLN_TGuiBldTextDialog.tagnum = -1 ;
  G__G__GuiBldLN_TGuiBldQuickHandler.tagnum = -1 ;
  G__G__GuiBldLN_TVirtualDragManager.tagnum = -1 ;
  G__G__GuiBldLN_TGuiBldDragManagerPimpl.tagnum = -1 ;
  G__G__GuiBldLN_TRootGuiBuilder.tagnum = -1 ;
  G__G__GuiBldLN_TGPopupMenu.tagnum = -1 ;
  G__G__GuiBldLN_TGuiBldEditor.tagnum = -1 ;
  G__G__GuiBldLN_TGuiBldDragManager.tagnum = -1 ;
  G__G__GuiBldLN_TGuiBldHintsEditor.tagnum = -1 ;
  G__G__GuiBldLN_TGuiBldNameFrame.tagnum = -1 ;
  G__G__GuiBldLN_TGuiBldBorderFrame.tagnum = -1 ;
  G__G__GuiBldLN_TGuiBldAction.tagnum = -1 ;
  G__G__GuiBldLN_TGuiBuilder.tagnum = -1 ;
  G__G__GuiBldLN_TGShutter.tagnum = -1 ;
  G__G__GuiBldLN_TGMdiMainFrame.tagnum = -1 ;
  G__G__GuiBldLN_TGDockableFrame.tagnum = -1 ;
  G__G__GuiBldLN_TGMdiMenuBar.tagnum = -1 ;
  G__G__GuiBldLN_TGStatusBar.tagnum = -1 ;
  G__G__GuiBldLN_TGToolBar.tagnum = -1 ;
  G__G__GuiBldLN_TGMdiFrame.tagnum = -1 ;
  G__G__GuiBldLN_TGWidget.tagnum = -1 ;
  G__G__GuiBldLN_TGButton.tagnum = -1 ;
  G__G__GuiBldLN_TGuiBldHintsButton.tagnum = -1 ;
  G__G__GuiBldLN_TGNumberEntry.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__GuiBld() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__GuiBldLN_TClass);
   G__get_linked_tagnum(&G__G__GuiBldLN_TBuffer);
   G__get_linked_tagnum(&G__G__GuiBldLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__GuiBldLN_TObject);
   G__get_linked_tagnum(&G__G__GuiBldLN_TList);
   G__get_linked_tagnum(&G__G__GuiBldLN_TTimer);
   G__get_linked_tagnum(&G__G__GuiBldLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__GuiBldLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__GuiBldLN_TString);
   G__get_linked_tagnum(&G__G__GuiBldLN_Event_t);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGObject);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGWindow);
   G__get_linked_tagnum(&G__G__GuiBldLN_TQObject);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGFrame);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGCompositeFrame);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGLayoutHints);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGVerticalFrame);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGMainFrame);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGTransientFrame);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGTextEntry);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGTextButton);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldTextDialog),sizeof(TGuiBldTextDialog),-1,62464,"text entry dialog",G__setup_memvarTGuiBldTextDialog,G__setup_memfuncTGuiBldTextDialog);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldQuickHandler),sizeof(TGuiBldQuickHandler),-1,29952,"frame property editor",G__setup_memvarTGuiBldQuickHandler,G__setup_memfuncTGuiBldQuickHandler);
   G__get_linked_tagnum(&G__G__GuiBldLN_TVirtualDragManager);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManagerPimpl);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TRootGuiBuilder),sizeof(TRootGuiBuilder),-1,62720,"ROOT GUI Builder",G__setup_memvarTRootGuiBuilder,G__setup_memfuncTRootGuiBuilder);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGPopupMenu);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldEditor),sizeof(TGuiBldEditor),-1,62720,"frame property editor",G__setup_memvarTGuiBldEditor,G__setup_memfuncTGuiBldEditor);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldDragManager),sizeof(TGuiBldDragManager),-1,62720,"drag and drop manager",G__setup_memvarTGuiBldDragManager,G__setup_memfuncTGuiBldDragManager);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsEditor),sizeof(TGuiBldHintsEditor),-1,62464,"layout hints editor",G__setup_memvarTGuiBldHintsEditor,G__setup_memfuncTGuiBldHintsEditor);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldNameFrame);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldBorderFrame);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldAction);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBuilder);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGShutter);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGMdiMainFrame);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGDockableFrame);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGMdiMenuBar);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGStatusBar);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGToolBar);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGMdiFrame);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGWidget);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGButton);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__GuiBldLN_TGuiBldHintsButton),sizeof(TGuiBldHintsButton),-1,62464,"button used to edit layout hints",G__setup_memvarTGuiBldHintsButton,G__setup_memfuncTGuiBldHintsButton);
   G__get_linked_tagnum(&G__G__GuiBldLN_TGNumberEntry);
}
extern "C" void G__cpp_setupG__GuiBld(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__GuiBld()");
  G__set_cpp_environmentG__GuiBld();
  G__cpp_setup_tagtableG__GuiBld();

  G__cpp_setup_inheritanceG__GuiBld();

  G__cpp_setup_typetableG__GuiBld();

  G__cpp_setup_memvarG__GuiBld();

  G__cpp_setup_memfuncG__GuiBld();
  G__cpp_setup_globalG__GuiBld();
  G__cpp_setup_funcG__GuiBld();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__GuiBld();
  return;
}
class G__cpp_setup_initG__GuiBld {
  public:
    G__cpp_setup_initG__GuiBld() { G__add_setup_func("G__GuiBld",(G__incsetup)(&G__cpp_setupG__GuiBld)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__GuiBld() { G__remove_setup_func("G__GuiBld"); }
};
G__cpp_setup_initG__GuiBld G__cpp_setup_initializerG__GuiBld;

