//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:29:29 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__Geom2.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TGeoPatternFinder_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternFinder_IsA(const void*);
   static void *new_TGeoPatternFinder(void *p = 0);
   static void *newArray_TGeoPatternFinder(Long_t size);
   static void delete_TGeoPatternFinder(void *p);
   static void deleteArray_TGeoPatternFinder(void *p);
   static void destruct_TGeoPatternFinder(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternFinder*)
   {
      ::TGeoPatternFinder *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternFinder", ::TGeoPatternFinder::Class_Version(), "geom/inc/TGeoPatternFinder.h", 35,
                  typeid(::TGeoPatternFinder), DefineBehavior(ptr, ptr),
                  &::TGeoPatternFinder::Dictionary, &TGeoPatternFinder_IsA, 4,
                  sizeof(::TGeoPatternFinder) );
      instance.SetNew(&new_TGeoPatternFinder);
      instance.SetNewArray(&newArray_TGeoPatternFinder);
      instance.SetDelete(&delete_TGeoPatternFinder);
      instance.SetDeleteArray(&deleteArray_TGeoPatternFinder);
      instance.SetDestructor(&destruct_TGeoPatternFinder);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternX_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternX_IsA(const void*);
   static void *new_TGeoPatternX(void *p = 0);
   static void *newArray_TGeoPatternX(Long_t size);
   static void delete_TGeoPatternX(void *p);
   static void deleteArray_TGeoPatternX(void *p);
   static void destruct_TGeoPatternX(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternX*)
   {
      ::TGeoPatternX *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternX", ::TGeoPatternX::Class_Version(), "geom/inc/TGeoPatternFinder.h", 79,
                  typeid(::TGeoPatternX), DefineBehavior(ptr, ptr),
                  &::TGeoPatternX::Dictionary, &TGeoPatternX_IsA, 4,
                  sizeof(::TGeoPatternX) );
      instance.SetNew(&new_TGeoPatternX);
      instance.SetNewArray(&newArray_TGeoPatternX);
      instance.SetDelete(&delete_TGeoPatternX);
      instance.SetDeleteArray(&deleteArray_TGeoPatternX);
      instance.SetDestructor(&destruct_TGeoPatternX);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternX*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternY_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternY_IsA(const void*);
   static void *new_TGeoPatternY(void *p = 0);
   static void *newArray_TGeoPatternY(Long_t size);
   static void delete_TGeoPatternY(void *p);
   static void deleteArray_TGeoPatternY(void *p);
   static void destruct_TGeoPatternY(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternY*)
   {
      ::TGeoPatternY *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternY", ::TGeoPatternY::Class_Version(), "geom/inc/TGeoPatternFinder.h", 104,
                  typeid(::TGeoPatternY), DefineBehavior(ptr, ptr),
                  &::TGeoPatternY::Dictionary, &TGeoPatternY_IsA, 4,
                  sizeof(::TGeoPatternY) );
      instance.SetNew(&new_TGeoPatternY);
      instance.SetNewArray(&newArray_TGeoPatternY);
      instance.SetDelete(&delete_TGeoPatternY);
      instance.SetDeleteArray(&deleteArray_TGeoPatternY);
      instance.SetDestructor(&destruct_TGeoPatternY);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternY*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternZ_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternZ_IsA(const void*);
   static void *new_TGeoPatternZ(void *p = 0);
   static void *newArray_TGeoPatternZ(Long_t size);
   static void delete_TGeoPatternZ(void *p);
   static void deleteArray_TGeoPatternZ(void *p);
   static void destruct_TGeoPatternZ(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternZ*)
   {
      ::TGeoPatternZ *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternZ", ::TGeoPatternZ::Class_Version(), "geom/inc/TGeoPatternFinder.h", 128,
                  typeid(::TGeoPatternZ), DefineBehavior(ptr, ptr),
                  &::TGeoPatternZ::Dictionary, &TGeoPatternZ_IsA, 4,
                  sizeof(::TGeoPatternZ) );
      instance.SetNew(&new_TGeoPatternZ);
      instance.SetNewArray(&newArray_TGeoPatternZ);
      instance.SetDelete(&delete_TGeoPatternZ);
      instance.SetDeleteArray(&deleteArray_TGeoPatternZ);
      instance.SetDestructor(&destruct_TGeoPatternZ);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternZ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternParaX_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternParaX_IsA(const void*);
   static void *new_TGeoPatternParaX(void *p = 0);
   static void *newArray_TGeoPatternParaX(Long_t size);
   static void delete_TGeoPatternParaX(void *p);
   static void deleteArray_TGeoPatternParaX(void *p);
   static void destruct_TGeoPatternParaX(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternParaX*)
   {
      ::TGeoPatternParaX *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternParaX", ::TGeoPatternParaX::Class_Version(), "geom/inc/TGeoPatternFinder.h", 152,
                  typeid(::TGeoPatternParaX), DefineBehavior(ptr, ptr),
                  &::TGeoPatternParaX::Dictionary, &TGeoPatternParaX_IsA, 4,
                  sizeof(::TGeoPatternParaX) );
      instance.SetNew(&new_TGeoPatternParaX);
      instance.SetNewArray(&newArray_TGeoPatternParaX);
      instance.SetDelete(&delete_TGeoPatternParaX);
      instance.SetDeleteArray(&deleteArray_TGeoPatternParaX);
      instance.SetDestructor(&destruct_TGeoPatternParaX);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternParaX*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternParaY_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternParaY_IsA(const void*);
   static void *new_TGeoPatternParaY(void *p = 0);
   static void *newArray_TGeoPatternParaY(Long_t size);
   static void delete_TGeoPatternParaY(void *p);
   static void deleteArray_TGeoPatternParaY(void *p);
   static void destruct_TGeoPatternParaY(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternParaY*)
   {
      ::TGeoPatternParaY *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternParaY", ::TGeoPatternParaY::Class_Version(), "geom/inc/TGeoPatternFinder.h", 177,
                  typeid(::TGeoPatternParaY), DefineBehavior(ptr, ptr),
                  &::TGeoPatternParaY::Dictionary, &TGeoPatternParaY_IsA, 4,
                  sizeof(::TGeoPatternParaY) );
      instance.SetNew(&new_TGeoPatternParaY);
      instance.SetNewArray(&newArray_TGeoPatternParaY);
      instance.SetDelete(&delete_TGeoPatternParaY);
      instance.SetDeleteArray(&deleteArray_TGeoPatternParaY);
      instance.SetDestructor(&destruct_TGeoPatternParaY);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternParaY*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternParaZ_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternParaZ_IsA(const void*);
   static void *new_TGeoPatternParaZ(void *p = 0);
   static void *newArray_TGeoPatternParaZ(Long_t size);
   static void delete_TGeoPatternParaZ(void *p);
   static void deleteArray_TGeoPatternParaZ(void *p);
   static void destruct_TGeoPatternParaZ(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternParaZ*)
   {
      ::TGeoPatternParaZ *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternParaZ", ::TGeoPatternParaZ::Class_Version(), "geom/inc/TGeoPatternFinder.h", 204,
                  typeid(::TGeoPatternParaZ), DefineBehavior(ptr, ptr),
                  &::TGeoPatternParaZ::Dictionary, &TGeoPatternParaZ_IsA, 4,
                  sizeof(::TGeoPatternParaZ) );
      instance.SetNew(&new_TGeoPatternParaZ);
      instance.SetNewArray(&newArray_TGeoPatternParaZ);
      instance.SetDelete(&delete_TGeoPatternParaZ);
      instance.SetDeleteArray(&deleteArray_TGeoPatternParaZ);
      instance.SetDestructor(&destruct_TGeoPatternParaZ);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternParaZ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternTrapZ_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternTrapZ_IsA(const void*);
   static void *new_TGeoPatternTrapZ(void *p = 0);
   static void *newArray_TGeoPatternTrapZ(Long_t size);
   static void delete_TGeoPatternTrapZ(void *p);
   static void deleteArray_TGeoPatternTrapZ(void *p);
   static void destruct_TGeoPatternTrapZ(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternTrapZ*)
   {
      ::TGeoPatternTrapZ *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternTrapZ", ::TGeoPatternTrapZ::Class_Version(), "geom/inc/TGeoPatternFinder.h", 232,
                  typeid(::TGeoPatternTrapZ), DefineBehavior(ptr, ptr),
                  &::TGeoPatternTrapZ::Dictionary, &TGeoPatternTrapZ_IsA, 4,
                  sizeof(::TGeoPatternTrapZ) );
      instance.SetNew(&new_TGeoPatternTrapZ);
      instance.SetNewArray(&newArray_TGeoPatternTrapZ);
      instance.SetDelete(&delete_TGeoPatternTrapZ);
      instance.SetDeleteArray(&deleteArray_TGeoPatternTrapZ);
      instance.SetDestructor(&destruct_TGeoPatternTrapZ);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternTrapZ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternCylR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternCylR_IsA(const void*);
   static void *new_TGeoPatternCylR(void *p = 0);
   static void *newArray_TGeoPatternCylR(Long_t size);
   static void delete_TGeoPatternCylR(void *p);
   static void deleteArray_TGeoPatternCylR(void *p);
   static void destruct_TGeoPatternCylR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternCylR*)
   {
      ::TGeoPatternCylR *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternCylR", ::TGeoPatternCylR::Class_Version(), "geom/inc/TGeoPatternFinder.h", 263,
                  typeid(::TGeoPatternCylR), DefineBehavior(ptr, ptr),
                  &::TGeoPatternCylR::Dictionary, &TGeoPatternCylR_IsA, 4,
                  sizeof(::TGeoPatternCylR) );
      instance.SetNew(&new_TGeoPatternCylR);
      instance.SetNewArray(&newArray_TGeoPatternCylR);
      instance.SetDelete(&delete_TGeoPatternCylR);
      instance.SetDeleteArray(&deleteArray_TGeoPatternCylR);
      instance.SetDestructor(&destruct_TGeoPatternCylR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternCylR*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternCylPhi_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternCylPhi_IsA(const void*);
   static void *new_TGeoPatternCylPhi(void *p = 0);
   static void *newArray_TGeoPatternCylPhi(Long_t size);
   static void delete_TGeoPatternCylPhi(void *p);
   static void deleteArray_TGeoPatternCylPhi(void *p);
   static void destruct_TGeoPatternCylPhi(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternCylPhi*)
   {
      ::TGeoPatternCylPhi *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternCylPhi", ::TGeoPatternCylPhi::Class_Version(), "geom/inc/TGeoPatternFinder.h", 286,
                  typeid(::TGeoPatternCylPhi), DefineBehavior(ptr, ptr),
                  &::TGeoPatternCylPhi::Dictionary, &TGeoPatternCylPhi_IsA, 4,
                  sizeof(::TGeoPatternCylPhi) );
      instance.SetNew(&new_TGeoPatternCylPhi);
      instance.SetNewArray(&newArray_TGeoPatternCylPhi);
      instance.SetDelete(&delete_TGeoPatternCylPhi);
      instance.SetDeleteArray(&deleteArray_TGeoPatternCylPhi);
      instance.SetDestructor(&destruct_TGeoPatternCylPhi);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternCylPhi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternSphR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternSphR_IsA(const void*);
   static void *new_TGeoPatternSphR(void *p = 0);
   static void *newArray_TGeoPatternSphR(Long_t size);
   static void delete_TGeoPatternSphR(void *p);
   static void deleteArray_TGeoPatternSphR(void *p);
   static void destruct_TGeoPatternSphR(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternSphR*)
   {
      ::TGeoPatternSphR *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternSphR", ::TGeoPatternSphR::Class_Version(), "geom/inc/TGeoPatternFinder.h", 312,
                  typeid(::TGeoPatternSphR), DefineBehavior(ptr, ptr),
                  &::TGeoPatternSphR::Dictionary, &TGeoPatternSphR_IsA, 4,
                  sizeof(::TGeoPatternSphR) );
      instance.SetNew(&new_TGeoPatternSphR);
      instance.SetNewArray(&newArray_TGeoPatternSphR);
      instance.SetDelete(&delete_TGeoPatternSphR);
      instance.SetDeleteArray(&deleteArray_TGeoPatternSphR);
      instance.SetDestructor(&destruct_TGeoPatternSphR);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternSphR*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternSphTheta_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternSphTheta_IsA(const void*);
   static void *new_TGeoPatternSphTheta(void *p = 0);
   static void *newArray_TGeoPatternSphTheta(Long_t size);
   static void delete_TGeoPatternSphTheta(void *p);
   static void deleteArray_TGeoPatternSphTheta(void *p);
   static void destruct_TGeoPatternSphTheta(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternSphTheta*)
   {
      ::TGeoPatternSphTheta *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternSphTheta", ::TGeoPatternSphTheta::Class_Version(), "geom/inc/TGeoPatternFinder.h", 335,
                  typeid(::TGeoPatternSphTheta), DefineBehavior(ptr, ptr),
                  &::TGeoPatternSphTheta::Dictionary, &TGeoPatternSphTheta_IsA, 4,
                  sizeof(::TGeoPatternSphTheta) );
      instance.SetNew(&new_TGeoPatternSphTheta);
      instance.SetNewArray(&newArray_TGeoPatternSphTheta);
      instance.SetDelete(&delete_TGeoPatternSphTheta);
      instance.SetDeleteArray(&deleteArray_TGeoPatternSphTheta);
      instance.SetDestructor(&destruct_TGeoPatternSphTheta);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternSphTheta*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternSphPhi_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternSphPhi_IsA(const void*);
   static void *new_TGeoPatternSphPhi(void *p = 0);
   static void *newArray_TGeoPatternSphPhi(Long_t size);
   static void delete_TGeoPatternSphPhi(void *p);
   static void deleteArray_TGeoPatternSphPhi(void *p);
   static void destruct_TGeoPatternSphPhi(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternSphPhi*)
   {
      ::TGeoPatternSphPhi *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternSphPhi", ::TGeoPatternSphPhi::Class_Version(), "geom/inc/TGeoPatternFinder.h", 363,
                  typeid(::TGeoPatternSphPhi), DefineBehavior(ptr, ptr),
                  &::TGeoPatternSphPhi::Dictionary, &TGeoPatternSphPhi_IsA, 4,
                  sizeof(::TGeoPatternSphPhi) );
      instance.SetNew(&new_TGeoPatternSphPhi);
      instance.SetNewArray(&newArray_TGeoPatternSphPhi);
      instance.SetDelete(&delete_TGeoPatternSphPhi);
      instance.SetDeleteArray(&deleteArray_TGeoPatternSphPhi);
      instance.SetDestructor(&destruct_TGeoPatternSphPhi);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternSphPhi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoPatternHoneycomb_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoPatternHoneycomb_IsA(const void*);
   static void *new_TGeoPatternHoneycomb(void *p = 0);
   static void *newArray_TGeoPatternHoneycomb(Long_t size);
   static void delete_TGeoPatternHoneycomb(void *p);
   static void deleteArray_TGeoPatternHoneycomb(void *p);
   static void destruct_TGeoPatternHoneycomb(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoPatternHoneycomb*)
   {
      ::TGeoPatternHoneycomb *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoPatternHoneycomb", ::TGeoPatternHoneycomb::Class_Version(), "geom/inc/TGeoPatternFinder.h", 386,
                  typeid(::TGeoPatternHoneycomb), DefineBehavior(ptr, ptr),
                  &::TGeoPatternHoneycomb::Dictionary, &TGeoPatternHoneycomb_IsA, 4,
                  sizeof(::TGeoPatternHoneycomb) );
      instance.SetNew(&new_TGeoPatternHoneycomb);
      instance.SetNewArray(&newArray_TGeoPatternHoneycomb);
      instance.SetDelete(&delete_TGeoPatternHoneycomb);
      instance.SetDeleteArray(&deleteArray_TGeoPatternHoneycomb);
      instance.SetDestructor(&destruct_TGeoPatternHoneycomb);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoPatternHoneycomb*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoNodePos_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoNodePos_IsA(const void*);
   static void *new_TGeoNodePos(void *p = 0);
   static void *newArray_TGeoNodePos(Long_t size);
   static void delete_TGeoNodePos(void *p);
   static void deleteArray_TGeoNodePos(void *p);
   static void destruct_TGeoNodePos(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoNodePos*)
   {
      ::TGeoNodePos *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoNodePos", ::TGeoNodePos::Class_Version(), "geom/inc/TGeoCache.h", 317,
                  typeid(::TGeoNodePos), DefineBehavior(ptr, ptr),
                  &::TGeoNodePos::Dictionary, &TGeoNodePos_IsA, 4,
                  sizeof(::TGeoNodePos) );
      instance.SetNew(&new_TGeoNodePos);
      instance.SetNewArray(&newArray_TGeoNodePos);
      instance.SetDelete(&delete_TGeoNodePos);
      instance.SetDeleteArray(&deleteArray_TGeoNodePos);
      instance.SetDestructor(&destruct_TGeoNodePos);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoNodePos*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatrixCache_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatrixCache_IsA(const void*);
   static void *new_TGeoMatrixCache(void *p = 0);
   static void *newArray_TGeoMatrixCache(Long_t size);
   static void delete_TGeoMatrixCache(void *p);
   static void deleteArray_TGeoMatrixCache(void *p);
   static void destruct_TGeoMatrixCache(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatrixCache*)
   {
      ::TGeoMatrixCache *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatrixCache", ::TGeoMatrixCache::Class_Version(), "geom/inc/TGeoCache.h", 275,
                  typeid(::TGeoMatrixCache), DefineBehavior(ptr, ptr),
                  &::TGeoMatrixCache::Dictionary, &TGeoMatrixCache_IsA, 4,
                  sizeof(::TGeoMatrixCache) );
      instance.SetNew(&new_TGeoMatrixCache);
      instance.SetNewArray(&newArray_TGeoMatrixCache);
      instance.SetDelete(&delete_TGeoMatrixCache);
      instance.SetDeleteArray(&deleteArray_TGeoMatrixCache);
      instance.SetDestructor(&destruct_TGeoMatrixCache);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatrixCache*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoNodeArray_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoNodeArray_IsA(const void*);
   static void *new_TGeoNodeArray(void *p = 0);
   static void *newArray_TGeoNodeArray(Long_t size);
   static void delete_TGeoNodeArray(void *p);
   static void deleteArray_TGeoNodeArray(void *p);
   static void destruct_TGeoNodeArray(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoNodeArray*)
   {
      ::TGeoNodeArray *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoNodeArray", ::TGeoNodeArray::Class_Version(), "geom/inc/TGeoCache.h", 373,
                  typeid(::TGeoNodeArray), DefineBehavior(ptr, ptr),
                  &::TGeoNodeArray::Dictionary, &TGeoNodeArray_IsA, 4,
                  sizeof(::TGeoNodeArray) );
      instance.SetNew(&new_TGeoNodeArray);
      instance.SetNewArray(&newArray_TGeoNodeArray);
      instance.SetDelete(&delete_TGeoNodeArray);
      instance.SetDeleteArray(&deleteArray_TGeoNodeArray);
      instance.SetDestructor(&destruct_TGeoNodeArray);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoNodeArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandler_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandler_IsA(const void*);
   static void delete_TGeoMatHandler(void *p);
   static void deleteArray_TGeoMatHandler(void *p);
   static void destruct_TGeoMatHandler(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandler*)
   {
      ::TGeoMatHandler *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandler", ::TGeoMatHandler::Class_Version(), "geom/inc/TGeoCache.h", 470,
                  typeid(::TGeoMatHandler), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandler::Dictionary, &TGeoMatHandler_IsA, 4,
                  sizeof(::TGeoMatHandler) );
      instance.SetDelete(&delete_TGeoMatHandler);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandler);
      instance.SetDestructor(&destruct_TGeoMatHandler);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandler*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoCacheState_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoCacheState_IsA(const void*);
   static void *new_TGeoCacheState(void *p = 0);
   static void *newArray_TGeoCacheState(Long_t size);
   static void delete_TGeoCacheState(void *p);
   static void deleteArray_TGeoCacheState(void *p);
   static void destruct_TGeoCacheState(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoCacheState*)
   {
      ::TGeoCacheState *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoCacheState", ::TGeoCacheState::Class_Version(), "geom/inc/TGeoCache.h", 43,
                  typeid(::TGeoCacheState), DefineBehavior(ptr, ptr),
                  &::TGeoCacheState::Dictionary, &TGeoCacheState_IsA, 4,
                  sizeof(::TGeoCacheState) );
      instance.SetNew(&new_TGeoCacheState);
      instance.SetNewArray(&newArray_TGeoCacheState);
      instance.SetDelete(&delete_TGeoCacheState);
      instance.SetDeleteArray(&deleteArray_TGeoCacheState);
      instance.SetDestructor(&destruct_TGeoCacheState);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoCacheState*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoCacheStateDummy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoCacheStateDummy_IsA(const void*);
   static void *new_TGeoCacheStateDummy(void *p = 0);
   static void *newArray_TGeoCacheStateDummy(Long_t size);
   static void delete_TGeoCacheStateDummy(void *p);
   static void deleteArray_TGeoCacheStateDummy(void *p);
   static void destruct_TGeoCacheStateDummy(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoCacheStateDummy*)
   {
      ::TGeoCacheStateDummy *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoCacheStateDummy", ::TGeoCacheStateDummy::Class_Version(), "geom/inc/TGeoCache.h", 72,
                  typeid(::TGeoCacheStateDummy), DefineBehavior(ptr, ptr),
                  &::TGeoCacheStateDummy::Dictionary, &TGeoCacheStateDummy_IsA, 4,
                  sizeof(::TGeoCacheStateDummy) );
      instance.SetNew(&new_TGeoCacheStateDummy);
      instance.SetNewArray(&newArray_TGeoCacheStateDummy);
      instance.SetDelete(&delete_TGeoCacheStateDummy);
      instance.SetDeleteArray(&deleteArray_TGeoCacheStateDummy);
      instance.SetDestructor(&destruct_TGeoCacheStateDummy);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoCacheStateDummy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoNodeCache_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoNodeCache_IsA(const void*);
   static void *new_TGeoNodeCache(void *p = 0);
   static void *newArray_TGeoNodeCache(Long_t size);
   static void delete_TGeoNodeCache(void *p);
   static void deleteArray_TGeoNodeCache(void *p);
   static void destruct_TGeoNodeCache(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoNodeCache*)
   {
      ::TGeoNodeCache *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoNodeCache", ::TGeoNodeCache::Class_Version(), "geom/inc/TGeoCache.h", 96,
                  typeid(::TGeoNodeCache), DefineBehavior(ptr, ptr),
                  &::TGeoNodeCache::Dictionary, &TGeoNodeCache_IsA, 4,
                  sizeof(::TGeoNodeCache) );
      instance.SetNew(&new_TGeoNodeCache);
      instance.SetNewArray(&newArray_TGeoNodeCache);
      instance.SetDelete(&delete_TGeoNodeCache);
      instance.SetDeleteArray(&deleteArray_TGeoNodeCache);
      instance.SetDestructor(&destruct_TGeoNodeCache);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoNodeCache*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoCacheDummy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoCacheDummy_IsA(const void*);
   static void *new_TGeoCacheDummy(void *p = 0);
   static void *newArray_TGeoCacheDummy(Long_t size);
   static void delete_TGeoCacheDummy(void *p);
   static void deleteArray_TGeoCacheDummy(void *p);
   static void destruct_TGeoCacheDummy(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoCacheDummy*)
   {
      ::TGeoCacheDummy *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoCacheDummy", ::TGeoCacheDummy::Class_Version(), "geom/inc/TGeoCache.h", 209,
                  typeid(::TGeoCacheDummy), DefineBehavior(ptr, ptr),
                  &::TGeoCacheDummy::Dictionary, &TGeoCacheDummy_IsA, 4,
                  sizeof(::TGeoCacheDummy) );
      instance.SetNew(&new_TGeoCacheDummy);
      instance.SetNewArray(&newArray_TGeoCacheDummy);
      instance.SetDelete(&delete_TGeoCacheDummy);
      instance.SetDeleteArray(&deleteArray_TGeoCacheDummy);
      instance.SetDestructor(&destruct_TGeoCacheDummy);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoCacheDummy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoNodeObjArray_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoNodeObjArray_IsA(const void*);
   static void *new_TGeoNodeObjArray(void *p = 0);
   static void *newArray_TGeoNodeObjArray(Long_t size);
   static void delete_TGeoNodeObjArray(void *p);
   static void deleteArray_TGeoNodeObjArray(void *p);
   static void destruct_TGeoNodeObjArray(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoNodeObjArray*)
   {
      ::TGeoNodeObjArray *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoNodeObjArray", ::TGeoNodeObjArray::Class_Version(), "geom/inc/TGeoCache.h", 429,
                  typeid(::TGeoNodeObjArray), DefineBehavior(ptr, ptr),
                  &::TGeoNodeObjArray::Dictionary, &TGeoNodeObjArray_IsA, 4,
                  sizeof(::TGeoNodeObjArray) );
      instance.SetNew(&new_TGeoNodeObjArray);
      instance.SetNewArray(&newArray_TGeoNodeObjArray);
      instance.SetDelete(&delete_TGeoNodeObjArray);
      instance.SetDeleteArray(&deleteArray_TGeoNodeObjArray);
      instance.SetDestructor(&destruct_TGeoNodeObjArray);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoNodeObjArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerId_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerId_IsA(const void*);
   static void *new_TGeoMatHandlerId(void *p = 0);
   static void *newArray_TGeoMatHandlerId(Long_t size);
   static void delete_TGeoMatHandlerId(void *p);
   static void deleteArray_TGeoMatHandlerId(void *p);
   static void destruct_TGeoMatHandlerId(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerId*)
   {
      ::TGeoMatHandlerId *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerId", ::TGeoMatHandlerId::Class_Version(), "geom/inc/TGeoCache.h", 496,
                  typeid(::TGeoMatHandlerId), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerId::Dictionary, &TGeoMatHandlerId_IsA, 4,
                  sizeof(::TGeoMatHandlerId) );
      instance.SetNew(&new_TGeoMatHandlerId);
      instance.SetNewArray(&newArray_TGeoMatHandlerId);
      instance.SetDelete(&delete_TGeoMatHandlerId);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerId);
      instance.SetDestructor(&destruct_TGeoMatHandlerId);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerId*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerX_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerX_IsA(const void*);
   static void *new_TGeoMatHandlerX(void *p = 0);
   static void *newArray_TGeoMatHandlerX(Long_t size);
   static void delete_TGeoMatHandlerX(void *p);
   static void deleteArray_TGeoMatHandlerX(void *p);
   static void destruct_TGeoMatHandlerX(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerX*)
   {
      ::TGeoMatHandlerX *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerX", ::TGeoMatHandlerX::Class_Version(), "geom/inc/TGeoCache.h", 527,
                  typeid(::TGeoMatHandlerX), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerX::Dictionary, &TGeoMatHandlerX_IsA, 4,
                  sizeof(::TGeoMatHandlerX) );
      instance.SetNew(&new_TGeoMatHandlerX);
      instance.SetNewArray(&newArray_TGeoMatHandlerX);
      instance.SetDelete(&delete_TGeoMatHandlerX);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerX);
      instance.SetDestructor(&destruct_TGeoMatHandlerX);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerX*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerY_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerY_IsA(const void*);
   static void *new_TGeoMatHandlerY(void *p = 0);
   static void *newArray_TGeoMatHandlerY(Long_t size);
   static void delete_TGeoMatHandlerY(void *p);
   static void deleteArray_TGeoMatHandlerY(void *p);
   static void destruct_TGeoMatHandlerY(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerY*)
   {
      ::TGeoMatHandlerY *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerY", ::TGeoMatHandlerY::Class_Version(), "geom/inc/TGeoCache.h", 553,
                  typeid(::TGeoMatHandlerY), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerY::Dictionary, &TGeoMatHandlerY_IsA, 4,
                  sizeof(::TGeoMatHandlerY) );
      instance.SetNew(&new_TGeoMatHandlerY);
      instance.SetNewArray(&newArray_TGeoMatHandlerY);
      instance.SetDelete(&delete_TGeoMatHandlerY);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerY);
      instance.SetDestructor(&destruct_TGeoMatHandlerY);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerY*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerZ_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerZ_IsA(const void*);
   static void *new_TGeoMatHandlerZ(void *p = 0);
   static void *newArray_TGeoMatHandlerZ(Long_t size);
   static void delete_TGeoMatHandlerZ(void *p);
   static void deleteArray_TGeoMatHandlerZ(void *p);
   static void destruct_TGeoMatHandlerZ(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerZ*)
   {
      ::TGeoMatHandlerZ *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerZ", ::TGeoMatHandlerZ::Class_Version(), "geom/inc/TGeoCache.h", 579,
                  typeid(::TGeoMatHandlerZ), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerZ::Dictionary, &TGeoMatHandlerZ_IsA, 4,
                  sizeof(::TGeoMatHandlerZ) );
      instance.SetNew(&new_TGeoMatHandlerZ);
      instance.SetNewArray(&newArray_TGeoMatHandlerZ);
      instance.SetDelete(&delete_TGeoMatHandlerZ);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerZ);
      instance.SetDestructor(&destruct_TGeoMatHandlerZ);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerZ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerXY_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerXY_IsA(const void*);
   static void *new_TGeoMatHandlerXY(void *p = 0);
   static void *newArray_TGeoMatHandlerXY(Long_t size);
   static void delete_TGeoMatHandlerXY(void *p);
   static void deleteArray_TGeoMatHandlerXY(void *p);
   static void destruct_TGeoMatHandlerXY(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerXY*)
   {
      ::TGeoMatHandlerXY *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerXY", ::TGeoMatHandlerXY::Class_Version(), "geom/inc/TGeoCache.h", 605,
                  typeid(::TGeoMatHandlerXY), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerXY::Dictionary, &TGeoMatHandlerXY_IsA, 4,
                  sizeof(::TGeoMatHandlerXY) );
      instance.SetNew(&new_TGeoMatHandlerXY);
      instance.SetNewArray(&newArray_TGeoMatHandlerXY);
      instance.SetDelete(&delete_TGeoMatHandlerXY);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerXY);
      instance.SetDestructor(&destruct_TGeoMatHandlerXY);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerXY*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerXZ_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerXZ_IsA(const void*);
   static void *new_TGeoMatHandlerXZ(void *p = 0);
   static void *newArray_TGeoMatHandlerXZ(Long_t size);
   static void delete_TGeoMatHandlerXZ(void *p);
   static void deleteArray_TGeoMatHandlerXZ(void *p);
   static void destruct_TGeoMatHandlerXZ(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerXZ*)
   {
      ::TGeoMatHandlerXZ *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerXZ", ::TGeoMatHandlerXZ::Class_Version(), "geom/inc/TGeoCache.h", 631,
                  typeid(::TGeoMatHandlerXZ), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerXZ::Dictionary, &TGeoMatHandlerXZ_IsA, 4,
                  sizeof(::TGeoMatHandlerXZ) );
      instance.SetNew(&new_TGeoMatHandlerXZ);
      instance.SetNewArray(&newArray_TGeoMatHandlerXZ);
      instance.SetDelete(&delete_TGeoMatHandlerXZ);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerXZ);
      instance.SetDestructor(&destruct_TGeoMatHandlerXZ);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerXZ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerYZ_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerYZ_IsA(const void*);
   static void *new_TGeoMatHandlerYZ(void *p = 0);
   static void *newArray_TGeoMatHandlerYZ(Long_t size);
   static void delete_TGeoMatHandlerYZ(void *p);
   static void deleteArray_TGeoMatHandlerYZ(void *p);
   static void destruct_TGeoMatHandlerYZ(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerYZ*)
   {
      ::TGeoMatHandlerYZ *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerYZ", ::TGeoMatHandlerYZ::Class_Version(), "geom/inc/TGeoCache.h", 657,
                  typeid(::TGeoMatHandlerYZ), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerYZ::Dictionary, &TGeoMatHandlerYZ_IsA, 4,
                  sizeof(::TGeoMatHandlerYZ) );
      instance.SetNew(&new_TGeoMatHandlerYZ);
      instance.SetNewArray(&newArray_TGeoMatHandlerYZ);
      instance.SetDelete(&delete_TGeoMatHandlerYZ);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerYZ);
      instance.SetDestructor(&destruct_TGeoMatHandlerYZ);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerYZ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerXYZ_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerXYZ_IsA(const void*);
   static void *new_TGeoMatHandlerXYZ(void *p = 0);
   static void *newArray_TGeoMatHandlerXYZ(Long_t size);
   static void delete_TGeoMatHandlerXYZ(void *p);
   static void deleteArray_TGeoMatHandlerXYZ(void *p);
   static void destruct_TGeoMatHandlerXYZ(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerXYZ*)
   {
      ::TGeoMatHandlerXYZ *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerXYZ", ::TGeoMatHandlerXYZ::Class_Version(), "geom/inc/TGeoCache.h", 683,
                  typeid(::TGeoMatHandlerXYZ), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerXYZ::Dictionary, &TGeoMatHandlerXYZ_IsA, 4,
                  sizeof(::TGeoMatHandlerXYZ) );
      instance.SetNew(&new_TGeoMatHandlerXYZ);
      instance.SetNewArray(&newArray_TGeoMatHandlerXYZ);
      instance.SetDelete(&delete_TGeoMatHandlerXYZ);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerXYZ);
      instance.SetDestructor(&destruct_TGeoMatHandlerXYZ);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerXYZ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerRot_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerRot_IsA(const void*);
   static void *new_TGeoMatHandlerRot(void *p = 0);
   static void *newArray_TGeoMatHandlerRot(Long_t size);
   static void delete_TGeoMatHandlerRot(void *p);
   static void deleteArray_TGeoMatHandlerRot(void *p);
   static void destruct_TGeoMatHandlerRot(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerRot*)
   {
      ::TGeoMatHandlerRot *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerRot", ::TGeoMatHandlerRot::Class_Version(), "geom/inc/TGeoCache.h", 709,
                  typeid(::TGeoMatHandlerRot), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerRot::Dictionary, &TGeoMatHandlerRot_IsA, 4,
                  sizeof(::TGeoMatHandlerRot) );
      instance.SetNew(&new_TGeoMatHandlerRot);
      instance.SetNewArray(&newArray_TGeoMatHandlerRot);
      instance.SetDelete(&delete_TGeoMatHandlerRot);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerRot);
      instance.SetDestructor(&destruct_TGeoMatHandlerRot);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerRot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerRotTr_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerRotTr_IsA(const void*);
   static void *new_TGeoMatHandlerRotTr(void *p = 0);
   static void *newArray_TGeoMatHandlerRotTr(Long_t size);
   static void delete_TGeoMatHandlerRotTr(void *p);
   static void deleteArray_TGeoMatHandlerRotTr(void *p);
   static void destruct_TGeoMatHandlerRotTr(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerRotTr*)
   {
      ::TGeoMatHandlerRotTr *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerRotTr", ::TGeoMatHandlerRotTr::Class_Version(), "geom/inc/TGeoCache.h", 737,
                  typeid(::TGeoMatHandlerRotTr), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerRotTr::Dictionary, &TGeoMatHandlerRotTr_IsA, 4,
                  sizeof(::TGeoMatHandlerRotTr) );
      instance.SetNew(&new_TGeoMatHandlerRotTr);
      instance.SetNewArray(&newArray_TGeoMatHandlerRotTr);
      instance.SetDelete(&delete_TGeoMatHandlerRotTr);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerRotTr);
      instance.SetDestructor(&destruct_TGeoMatHandlerRotTr);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerRotTr*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerScl_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerScl_IsA(const void*);
   static void *new_TGeoMatHandlerScl(void *p = 0);
   static void *newArray_TGeoMatHandlerScl(Long_t size);
   static void delete_TGeoMatHandlerScl(void *p);
   static void deleteArray_TGeoMatHandlerScl(void *p);
   static void destruct_TGeoMatHandlerScl(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerScl*)
   {
      ::TGeoMatHandlerScl *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerScl", ::TGeoMatHandlerScl::Class_Version(), "geom/inc/TGeoCache.h", 761,
                  typeid(::TGeoMatHandlerScl), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerScl::Dictionary, &TGeoMatHandlerScl_IsA, 4,
                  sizeof(::TGeoMatHandlerScl) );
      instance.SetNew(&new_TGeoMatHandlerScl);
      instance.SetNewArray(&newArray_TGeoMatHandlerScl);
      instance.SetDelete(&delete_TGeoMatHandlerScl);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerScl);
      instance.SetDestructor(&destruct_TGeoMatHandlerScl);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerScl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerTrScl_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerTrScl_IsA(const void*);
   static void *new_TGeoMatHandlerTrScl(void *p = 0);
   static void *newArray_TGeoMatHandlerTrScl(Long_t size);
   static void delete_TGeoMatHandlerTrScl(void *p);
   static void deleteArray_TGeoMatHandlerTrScl(void *p);
   static void destruct_TGeoMatHandlerTrScl(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerTrScl*)
   {
      ::TGeoMatHandlerTrScl *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerTrScl", ::TGeoMatHandlerTrScl::Class_Version(), "geom/inc/TGeoCache.h", 785,
                  typeid(::TGeoMatHandlerTrScl), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerTrScl::Dictionary, &TGeoMatHandlerTrScl_IsA, 4,
                  sizeof(::TGeoMatHandlerTrScl) );
      instance.SetNew(&new_TGeoMatHandlerTrScl);
      instance.SetNewArray(&newArray_TGeoMatHandlerTrScl);
      instance.SetDelete(&delete_TGeoMatHandlerTrScl);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerTrScl);
      instance.SetDestructor(&destruct_TGeoMatHandlerTrScl);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerTrScl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerRotScl_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerRotScl_IsA(const void*);
   static void *new_TGeoMatHandlerRotScl(void *p = 0);
   static void *newArray_TGeoMatHandlerRotScl(Long_t size);
   static void delete_TGeoMatHandlerRotScl(void *p);
   static void deleteArray_TGeoMatHandlerRotScl(void *p);
   static void destruct_TGeoMatHandlerRotScl(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerRotScl*)
   {
      ::TGeoMatHandlerRotScl *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerRotScl", ::TGeoMatHandlerRotScl::Class_Version(), "geom/inc/TGeoCache.h", 809,
                  typeid(::TGeoMatHandlerRotScl), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerRotScl::Dictionary, &TGeoMatHandlerRotScl_IsA, 4,
                  sizeof(::TGeoMatHandlerRotScl) );
      instance.SetNew(&new_TGeoMatHandlerRotScl);
      instance.SetNewArray(&newArray_TGeoMatHandlerRotScl);
      instance.SetDelete(&delete_TGeoMatHandlerRotScl);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerRotScl);
      instance.SetDestructor(&destruct_TGeoMatHandlerRotScl);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerRotScl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeoMatHandlerRotTrScl_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeoMatHandlerRotTrScl_IsA(const void*);
   static void *new_TGeoMatHandlerRotTrScl(void *p = 0);
   static void *newArray_TGeoMatHandlerRotTrScl(Long_t size);
   static void delete_TGeoMatHandlerRotTrScl(void *p);
   static void deleteArray_TGeoMatHandlerRotTrScl(void *p);
   static void destruct_TGeoMatHandlerRotTrScl(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeoMatHandlerRotTrScl*)
   {
      ::TGeoMatHandlerRotTrScl *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeoMatHandlerRotTrScl", ::TGeoMatHandlerRotTrScl::Class_Version(), "geom/inc/TGeoCache.h", 833,
                  typeid(::TGeoMatHandlerRotTrScl), DefineBehavior(ptr, ptr),
                  &::TGeoMatHandlerRotTrScl::Dictionary, &TGeoMatHandlerRotTrScl_IsA, 4,
                  sizeof(::TGeoMatHandlerRotTrScl) );
      instance.SetNew(&new_TGeoMatHandlerRotTrScl);
      instance.SetNewArray(&newArray_TGeoMatHandlerRotTrScl);
      instance.SetDelete(&delete_TGeoMatHandlerRotTrScl);
      instance.SetDeleteArray(&deleteArray_TGeoMatHandlerRotTrScl);
      instance.SetDestructor(&destruct_TGeoMatHandlerRotTrScl);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeoMatHandlerRotTrScl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TGeoPatternFinder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternFinder::Class_Name()
{
   return "TGeoPatternFinder";
}

//______________________________________________________________________________
const char *TGeoPatternFinder::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternFinder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternFinder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternFinder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternFinder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternX::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternX::Class_Name()
{
   return "TGeoPatternX";
}

//______________________________________________________________________________
const char *TGeoPatternX::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternX*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternX::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternX*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternX::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternX*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternX::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternX*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternY::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternY::Class_Name()
{
   return "TGeoPatternY";
}

//______________________________________________________________________________
const char *TGeoPatternY::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternY*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternY::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternY*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternY::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternY*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternY::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternY*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternZ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternZ::Class_Name()
{
   return "TGeoPatternZ";
}

//______________________________________________________________________________
const char *TGeoPatternZ::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternZ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternZ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternZ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternZ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternZ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternZ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternZ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternParaX::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternParaX::Class_Name()
{
   return "TGeoPatternParaX";
}

//______________________________________________________________________________
const char *TGeoPatternParaX::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternParaX*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternParaX::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternParaX*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternParaX::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternParaX*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternParaX::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternParaX*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternParaY::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternParaY::Class_Name()
{
   return "TGeoPatternParaY";
}

//______________________________________________________________________________
const char *TGeoPatternParaY::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternParaY*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternParaY::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternParaY*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternParaY::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternParaY*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternParaY::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternParaY*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternParaZ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternParaZ::Class_Name()
{
   return "TGeoPatternParaZ";
}

//______________________________________________________________________________
const char *TGeoPatternParaZ::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternParaZ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternParaZ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternParaZ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternParaZ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternParaZ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternParaZ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternParaZ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternTrapZ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternTrapZ::Class_Name()
{
   return "TGeoPatternTrapZ";
}

//______________________________________________________________________________
const char *TGeoPatternTrapZ::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternTrapZ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternTrapZ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternTrapZ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternTrapZ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternTrapZ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternTrapZ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternTrapZ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternCylR::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternCylR::Class_Name()
{
   return "TGeoPatternCylR";
}

//______________________________________________________________________________
const char *TGeoPatternCylR::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternCylR*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternCylR::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternCylR*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternCylR::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternCylR*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternCylR::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternCylR*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternCylPhi::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternCylPhi::Class_Name()
{
   return "TGeoPatternCylPhi";
}

//______________________________________________________________________________
const char *TGeoPatternCylPhi::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternCylPhi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternCylPhi::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternCylPhi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternCylPhi::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternCylPhi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternCylPhi::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternCylPhi*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternSphR::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternSphR::Class_Name()
{
   return "TGeoPatternSphR";
}

//______________________________________________________________________________
const char *TGeoPatternSphR::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternSphR*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternSphR::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternSphR*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternSphR::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternSphR*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternSphR::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternSphR*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternSphTheta::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternSphTheta::Class_Name()
{
   return "TGeoPatternSphTheta";
}

//______________________________________________________________________________
const char *TGeoPatternSphTheta::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternSphTheta*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternSphTheta::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternSphTheta*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternSphTheta::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternSphTheta*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternSphTheta::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternSphTheta*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternSphPhi::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternSphPhi::Class_Name()
{
   return "TGeoPatternSphPhi";
}

//______________________________________________________________________________
const char *TGeoPatternSphPhi::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternSphPhi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternSphPhi::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternSphPhi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternSphPhi::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternSphPhi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternSphPhi::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternSphPhi*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoPatternHoneycomb::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoPatternHoneycomb::Class_Name()
{
   return "TGeoPatternHoneycomb";
}

//______________________________________________________________________________
const char *TGeoPatternHoneycomb::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternHoneycomb*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoPatternHoneycomb::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoPatternHoneycomb*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoPatternHoneycomb::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternHoneycomb*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoPatternHoneycomb::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoPatternHoneycomb*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoNodePos::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoNodePos::Class_Name()
{
   return "TGeoNodePos";
}

//______________________________________________________________________________
const char *TGeoNodePos::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoNodePos*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoNodePos::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoNodePos*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoNodePos::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoNodePos*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoNodePos::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoNodePos*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatrixCache::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatrixCache::Class_Name()
{
   return "TGeoMatrixCache";
}

//______________________________________________________________________________
const char *TGeoMatrixCache::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatrixCache*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatrixCache::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatrixCache*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatrixCache::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatrixCache*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatrixCache::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatrixCache*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoNodeArray::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoNodeArray::Class_Name()
{
   return "TGeoNodeArray";
}

//______________________________________________________________________________
const char *TGeoNodeArray::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoNodeArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoNodeArray::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoNodeArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoNodeArray::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoNodeArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoNodeArray::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoNodeArray*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandler::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandler::Class_Name()
{
   return "TGeoMatHandler";
}

//______________________________________________________________________________
const char *TGeoMatHandler::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandler*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandler::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandler*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandler::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandler*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandler::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandler*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoCacheState::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoCacheState::Class_Name()
{
   return "TGeoCacheState";
}

//______________________________________________________________________________
const char *TGeoCacheState::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoCacheState*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoCacheState::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoCacheState*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoCacheState::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoCacheState*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoCacheState::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoCacheState*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoCacheStateDummy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoCacheStateDummy::Class_Name()
{
   return "TGeoCacheStateDummy";
}

//______________________________________________________________________________
const char *TGeoCacheStateDummy::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoCacheStateDummy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoCacheStateDummy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoCacheStateDummy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoCacheStateDummy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoCacheStateDummy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoCacheStateDummy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoCacheStateDummy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoNodeCache::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoNodeCache::Class_Name()
{
   return "TGeoNodeCache";
}

//______________________________________________________________________________
const char *TGeoNodeCache::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoNodeCache*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoNodeCache::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoNodeCache*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoNodeCache::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoNodeCache*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoNodeCache::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoNodeCache*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoCacheDummy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoCacheDummy::Class_Name()
{
   return "TGeoCacheDummy";
}

//______________________________________________________________________________
const char *TGeoCacheDummy::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoCacheDummy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoCacheDummy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoCacheDummy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoCacheDummy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoCacheDummy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoCacheDummy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoCacheDummy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoNodeObjArray::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoNodeObjArray::Class_Name()
{
   return "TGeoNodeObjArray";
}

//______________________________________________________________________________
const char *TGeoNodeObjArray::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoNodeObjArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoNodeObjArray::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoNodeObjArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoNodeObjArray::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoNodeObjArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoNodeObjArray::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoNodeObjArray*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerId::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerId::Class_Name()
{
   return "TGeoMatHandlerId";
}

//______________________________________________________________________________
const char *TGeoMatHandlerId::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerId*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerId::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerId*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerId::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerId*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerId::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerId*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerX::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerX::Class_Name()
{
   return "TGeoMatHandlerX";
}

//______________________________________________________________________________
const char *TGeoMatHandlerX::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerX*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerX::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerX*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerX::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerX*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerX::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerX*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerY::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerY::Class_Name()
{
   return "TGeoMatHandlerY";
}

//______________________________________________________________________________
const char *TGeoMatHandlerY::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerY*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerY::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerY*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerY::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerY*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerY::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerY*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerZ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerZ::Class_Name()
{
   return "TGeoMatHandlerZ";
}

//______________________________________________________________________________
const char *TGeoMatHandlerZ::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerZ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerZ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerZ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerZ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerZ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerZ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerZ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerXY::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerXY::Class_Name()
{
   return "TGeoMatHandlerXY";
}

//______________________________________________________________________________
const char *TGeoMatHandlerXY::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXY*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerXY::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXY*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerXY::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXY*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerXY::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXY*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerXZ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerXZ::Class_Name()
{
   return "TGeoMatHandlerXZ";
}

//______________________________________________________________________________
const char *TGeoMatHandlerXZ::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXZ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerXZ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXZ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerXZ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXZ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerXZ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXZ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerYZ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerYZ::Class_Name()
{
   return "TGeoMatHandlerYZ";
}

//______________________________________________________________________________
const char *TGeoMatHandlerYZ::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerYZ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerYZ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerYZ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerYZ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerYZ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerYZ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerYZ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerXYZ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerXYZ::Class_Name()
{
   return "TGeoMatHandlerXYZ";
}

//______________________________________________________________________________
const char *TGeoMatHandlerXYZ::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXYZ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerXYZ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXYZ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerXYZ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXYZ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerXYZ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerXYZ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerRot::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerRot::Class_Name()
{
   return "TGeoMatHandlerRot";
}

//______________________________________________________________________________
const char *TGeoMatHandlerRot::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerRot::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerRot::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerRot::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRot*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerRotTr::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerRotTr::Class_Name()
{
   return "TGeoMatHandlerRotTr";
}

//______________________________________________________________________________
const char *TGeoMatHandlerRotTr::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotTr*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerRotTr::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotTr*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerRotTr::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotTr*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerRotTr::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotTr*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerScl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerScl::Class_Name()
{
   return "TGeoMatHandlerScl";
}

//______________________________________________________________________________
const char *TGeoMatHandlerScl::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerScl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerScl::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerScl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerScl::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerScl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerScl::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerScl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerTrScl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerTrScl::Class_Name()
{
   return "TGeoMatHandlerTrScl";
}

//______________________________________________________________________________
const char *TGeoMatHandlerTrScl::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerTrScl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerTrScl::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerTrScl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerTrScl::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerTrScl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerTrScl::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerTrScl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerRotScl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerRotScl::Class_Name()
{
   return "TGeoMatHandlerRotScl";
}

//______________________________________________________________________________
const char *TGeoMatHandlerRotScl::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotScl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerRotScl::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotScl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerRotScl::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotScl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerRotScl::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotScl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeoMatHandlerRotTrScl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoMatHandlerRotTrScl::Class_Name()
{
   return "TGeoMatHandlerRotTrScl";
}

//______________________________________________________________________________
const char *TGeoMatHandlerRotTrScl::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotTrScl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoMatHandlerRotTrScl::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotTrScl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoMatHandlerRotTrScl::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotTrScl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoMatHandlerRotTrScl::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeoMatHandlerRotTrScl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TGeoPatternFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternFinder.

   if (R__b.IsReading()) {
      TGeoPatternFinder::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternFinder::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternFinder::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternFinder.

      TClass *R__cl = ::TGeoPatternFinder::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fStep", &fStep);
      R__insp.Inspect(R__cl, R__parent, "fStart", &fStart);
      R__insp.Inspect(R__cl, R__parent, "fEnd", &fEnd);
      R__insp.Inspect(R__cl, R__parent, "fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__parent, "fNdivisions", &fNdivisions);
      R__insp.Inspect(R__cl, R__parent, "fDivIndex", &fDivIndex);
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "*fVolume", &fVolume);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternFinder_IsA(const void *obj) {
      return ((::TGeoPatternFinder*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternFinder(void *p) {
      return  p ? new(p) ::TGeoPatternFinder : new ::TGeoPatternFinder;
   }
   static void *newArray_TGeoPatternFinder(Long_t size) {
      return new ::TGeoPatternFinder[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternFinder(void *p) {
      delete ((::TGeoPatternFinder*)p);
   }
   static void deleteArray_TGeoPatternFinder(void *p) {
      delete [] ((::TGeoPatternFinder*)p);
   }
   static void destruct_TGeoPatternFinder(void *p) {
      typedef ::TGeoPatternFinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternFinder

//______________________________________________________________________________
void TGeoPatternX::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternX.

   if (R__b.IsReading()) {
      TGeoPatternX::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternX::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternX::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternX.

      TClass *R__cl = ::TGeoPatternX::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternX_IsA(const void *obj) {
      return ((::TGeoPatternX*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternX(void *p) {
      return  p ? new(p) ::TGeoPatternX : new ::TGeoPatternX;
   }
   static void *newArray_TGeoPatternX(Long_t size) {
      return new ::TGeoPatternX[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternX(void *p) {
      delete ((::TGeoPatternX*)p);
   }
   static void deleteArray_TGeoPatternX(void *p) {
      delete [] ((::TGeoPatternX*)p);
   }
   static void destruct_TGeoPatternX(void *p) {
      typedef ::TGeoPatternX current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternX

//______________________________________________________________________________
void TGeoPatternY::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternY.

   if (R__b.IsReading()) {
      TGeoPatternY::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternY::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternY::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternY.

      TClass *R__cl = ::TGeoPatternY::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternY_IsA(const void *obj) {
      return ((::TGeoPatternY*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternY(void *p) {
      return  p ? new(p) ::TGeoPatternY : new ::TGeoPatternY;
   }
   static void *newArray_TGeoPatternY(Long_t size) {
      return new ::TGeoPatternY[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternY(void *p) {
      delete ((::TGeoPatternY*)p);
   }
   static void deleteArray_TGeoPatternY(void *p) {
      delete [] ((::TGeoPatternY*)p);
   }
   static void destruct_TGeoPatternY(void *p) {
      typedef ::TGeoPatternY current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternY

//______________________________________________________________________________
void TGeoPatternZ::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternZ.

   if (R__b.IsReading()) {
      TGeoPatternZ::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternZ::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternZ::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternZ.

      TClass *R__cl = ::TGeoPatternZ::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternZ_IsA(const void *obj) {
      return ((::TGeoPatternZ*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternZ(void *p) {
      return  p ? new(p) ::TGeoPatternZ : new ::TGeoPatternZ;
   }
   static void *newArray_TGeoPatternZ(Long_t size) {
      return new ::TGeoPatternZ[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternZ(void *p) {
      delete ((::TGeoPatternZ*)p);
   }
   static void deleteArray_TGeoPatternZ(void *p) {
      delete [] ((::TGeoPatternZ*)p);
   }
   static void destruct_TGeoPatternZ(void *p) {
      typedef ::TGeoPatternZ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternZ

//______________________________________________________________________________
void TGeoPatternParaX::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternParaX.

   if (R__b.IsReading()) {
      TGeoPatternParaX::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternParaX::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternParaX::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternParaX.

      TClass *R__cl = ::TGeoPatternParaX::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternParaX_IsA(const void *obj) {
      return ((::TGeoPatternParaX*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternParaX(void *p) {
      return  p ? new(p) ::TGeoPatternParaX : new ::TGeoPatternParaX;
   }
   static void *newArray_TGeoPatternParaX(Long_t size) {
      return new ::TGeoPatternParaX[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternParaX(void *p) {
      delete ((::TGeoPatternParaX*)p);
   }
   static void deleteArray_TGeoPatternParaX(void *p) {
      delete [] ((::TGeoPatternParaX*)p);
   }
   static void destruct_TGeoPatternParaX(void *p) {
      typedef ::TGeoPatternParaX current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternParaX

//______________________________________________________________________________
void TGeoPatternParaY::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternParaY.

   if (R__b.IsReading()) {
      TGeoPatternParaY::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternParaY::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternParaY::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternParaY.

      TClass *R__cl = ::TGeoPatternParaY::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTxy", &fTxy);
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternParaY_IsA(const void *obj) {
      return ((::TGeoPatternParaY*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternParaY(void *p) {
      return  p ? new(p) ::TGeoPatternParaY : new ::TGeoPatternParaY;
   }
   static void *newArray_TGeoPatternParaY(Long_t size) {
      return new ::TGeoPatternParaY[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternParaY(void *p) {
      delete ((::TGeoPatternParaY*)p);
   }
   static void deleteArray_TGeoPatternParaY(void *p) {
      delete [] ((::TGeoPatternParaY*)p);
   }
   static void destruct_TGeoPatternParaY(void *p) {
      typedef ::TGeoPatternParaY current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternParaY

//______________________________________________________________________________
void TGeoPatternParaZ::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternParaZ.

   if (R__b.IsReading()) {
      TGeoPatternParaZ::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternParaZ::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternParaZ::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternParaZ.

      TClass *R__cl = ::TGeoPatternParaZ::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTxz", &fTxz);
      R__insp.Inspect(R__cl, R__parent, "fTyz", &fTyz);
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternParaZ_IsA(const void *obj) {
      return ((::TGeoPatternParaZ*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternParaZ(void *p) {
      return  p ? new(p) ::TGeoPatternParaZ : new ::TGeoPatternParaZ;
   }
   static void *newArray_TGeoPatternParaZ(Long_t size) {
      return new ::TGeoPatternParaZ[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternParaZ(void *p) {
      delete ((::TGeoPatternParaZ*)p);
   }
   static void deleteArray_TGeoPatternParaZ(void *p) {
      delete [] ((::TGeoPatternParaZ*)p);
   }
   static void destruct_TGeoPatternParaZ(void *p) {
      typedef ::TGeoPatternParaZ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternParaZ

//______________________________________________________________________________
void TGeoPatternTrapZ::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternTrapZ.

   if (R__b.IsReading()) {
      TGeoPatternTrapZ::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternTrapZ::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternTrapZ::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternTrapZ.

      TClass *R__cl = ::TGeoPatternTrapZ::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTxz", &fTxz);
      R__insp.Inspect(R__cl, R__parent, "fTyz", &fTyz);
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternTrapZ_IsA(const void *obj) {
      return ((::TGeoPatternTrapZ*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternTrapZ(void *p) {
      return  p ? new(p) ::TGeoPatternTrapZ : new ::TGeoPatternTrapZ;
   }
   static void *newArray_TGeoPatternTrapZ(Long_t size) {
      return new ::TGeoPatternTrapZ[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternTrapZ(void *p) {
      delete ((::TGeoPatternTrapZ*)p);
   }
   static void deleteArray_TGeoPatternTrapZ(void *p) {
      delete [] ((::TGeoPatternTrapZ*)p);
   }
   static void destruct_TGeoPatternTrapZ(void *p) {
      typedef ::TGeoPatternTrapZ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternTrapZ

//______________________________________________________________________________
void TGeoPatternCylR::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternCylR.

   if (R__b.IsReading()) {
      TGeoPatternCylR::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternCylR::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternCylR::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternCylR.

      TClass *R__cl = ::TGeoPatternCylR::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternCylR_IsA(const void *obj) {
      return ((::TGeoPatternCylR*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternCylR(void *p) {
      return  p ? new(p) ::TGeoPatternCylR : new ::TGeoPatternCylR;
   }
   static void *newArray_TGeoPatternCylR(Long_t size) {
      return new ::TGeoPatternCylR[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternCylR(void *p) {
      delete ((::TGeoPatternCylR*)p);
   }
   static void deleteArray_TGeoPatternCylR(void *p) {
      delete [] ((::TGeoPatternCylR*)p);
   }
   static void destruct_TGeoPatternCylR(void *p) {
      typedef ::TGeoPatternCylR current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternCylR

//______________________________________________________________________________
void TGeoPatternCylPhi::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternCylPhi.

   if (R__b.IsReading()) {
      TGeoPatternCylPhi::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternCylPhi::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternCylPhi::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternCylPhi.

      TClass *R__cl = ::TGeoPatternCylPhi::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSinCos", &fSinCos);
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternCylPhi_IsA(const void *obj) {
      return ((::TGeoPatternCylPhi*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternCylPhi(void *p) {
      return  p ? new(p) ::TGeoPatternCylPhi : new ::TGeoPatternCylPhi;
   }
   static void *newArray_TGeoPatternCylPhi(Long_t size) {
      return new ::TGeoPatternCylPhi[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternCylPhi(void *p) {
      delete ((::TGeoPatternCylPhi*)p);
   }
   static void deleteArray_TGeoPatternCylPhi(void *p) {
      delete [] ((::TGeoPatternCylPhi*)p);
   }
   static void destruct_TGeoPatternCylPhi(void *p) {
      typedef ::TGeoPatternCylPhi current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternCylPhi

//______________________________________________________________________________
void TGeoPatternSphR::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternSphR.

   if (R__b.IsReading()) {
      TGeoPatternSphR::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternSphR::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternSphR::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternSphR.

      TClass *R__cl = ::TGeoPatternSphR::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternSphR_IsA(const void *obj) {
      return ((::TGeoPatternSphR*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternSphR(void *p) {
      return  p ? new(p) ::TGeoPatternSphR : new ::TGeoPatternSphR;
   }
   static void *newArray_TGeoPatternSphR(Long_t size) {
      return new ::TGeoPatternSphR[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternSphR(void *p) {
      delete ((::TGeoPatternSphR*)p);
   }
   static void deleteArray_TGeoPatternSphR(void *p) {
      delete [] ((::TGeoPatternSphR*)p);
   }
   static void destruct_TGeoPatternSphR(void *p) {
      typedef ::TGeoPatternSphR current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternSphR

//______________________________________________________________________________
void TGeoPatternSphTheta::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternSphTheta.

   if (R__b.IsReading()) {
      TGeoPatternSphTheta::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternSphTheta::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternSphTheta::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternSphTheta.

      TClass *R__cl = ::TGeoPatternSphTheta::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternSphTheta_IsA(const void *obj) {
      return ((::TGeoPatternSphTheta*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternSphTheta(void *p) {
      return  p ? new(p) ::TGeoPatternSphTheta : new ::TGeoPatternSphTheta;
   }
   static void *newArray_TGeoPatternSphTheta(Long_t size) {
      return new ::TGeoPatternSphTheta[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternSphTheta(void *p) {
      delete ((::TGeoPatternSphTheta*)p);
   }
   static void deleteArray_TGeoPatternSphTheta(void *p) {
      delete [] ((::TGeoPatternSphTheta*)p);
   }
   static void destruct_TGeoPatternSphTheta(void *p) {
      typedef ::TGeoPatternSphTheta current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternSphTheta

//______________________________________________________________________________
void TGeoPatternSphPhi::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternSphPhi.

   if (R__b.IsReading()) {
      TGeoPatternSphPhi::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternSphPhi::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternSphPhi::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternSphPhi.

      TClass *R__cl = ::TGeoPatternSphPhi::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternSphPhi_IsA(const void *obj) {
      return ((::TGeoPatternSphPhi*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternSphPhi(void *p) {
      return  p ? new(p) ::TGeoPatternSphPhi : new ::TGeoPatternSphPhi;
   }
   static void *newArray_TGeoPatternSphPhi(Long_t size) {
      return new ::TGeoPatternSphPhi[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternSphPhi(void *p) {
      delete ((::TGeoPatternSphPhi*)p);
   }
   static void deleteArray_TGeoPatternSphPhi(void *p) {
      delete [] ((::TGeoPatternSphPhi*)p);
   }
   static void destruct_TGeoPatternSphPhi(void *p) {
      typedef ::TGeoPatternSphPhi current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternSphPhi

//______________________________________________________________________________
void TGeoPatternHoneycomb::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoPatternHoneycomb.

   if (R__b.IsReading()) {
      TGeoPatternHoneycomb::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoPatternHoneycomb::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoPatternHoneycomb::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoPatternHoneycomb.

      TClass *R__cl = ::TGeoPatternHoneycomb::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNrows", &fNrows);
      R__insp.Inspect(R__cl, R__parent, "fAxisOnRows", &fAxisOnRows);
      R__insp.Inspect(R__cl, R__parent, "*fNdivisions", &fNdivisions);
      R__insp.Inspect(R__cl, R__parent, "*fStart", &fStart);
      TGeoPatternFinder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoPatternHoneycomb_IsA(const void *obj) {
      return ((::TGeoPatternHoneycomb*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoPatternHoneycomb(void *p) {
      return  p ? new(p) ::TGeoPatternHoneycomb : new ::TGeoPatternHoneycomb;
   }
   static void *newArray_TGeoPatternHoneycomb(Long_t size) {
      return new ::TGeoPatternHoneycomb[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoPatternHoneycomb(void *p) {
      delete ((::TGeoPatternHoneycomb*)p);
   }
   static void deleteArray_TGeoPatternHoneycomb(void *p) {
      delete [] ((::TGeoPatternHoneycomb*)p);
   }
   static void destruct_TGeoPatternHoneycomb(void *p) {
      typedef ::TGeoPatternHoneycomb current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoPatternHoneycomb

//______________________________________________________________________________
void TGeoMatHandler::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandler.

   if (R__b.IsReading()) {
      TGeoMatHandler::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandler::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandler::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandler.

      TClass *R__cl = ::TGeoMatHandler::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fLocation", &fLocation);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandler_IsA(const void *obj) {
      return ((::TGeoMatHandler*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandler(void *p) {
      delete ((::TGeoMatHandler*)p);
   }
   static void deleteArray_TGeoMatHandler(void *p) {
      delete [] ((::TGeoMatHandler*)p);
   }
   static void destruct_TGeoMatHandler(void *p) {
      typedef ::TGeoMatHandler current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandler

//______________________________________________________________________________
void TGeoMatHandlerId::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerId.

   if (R__b.IsReading()) {
      TGeoMatHandlerId::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerId::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerId::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerId.

      TClass *R__cl = ::TGeoMatHandlerId::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerId_IsA(const void *obj) {
      return ((::TGeoMatHandlerId*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerId(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerId : new ::TGeoMatHandlerId;
   }
   static void *newArray_TGeoMatHandlerId(Long_t size) {
      return new ::TGeoMatHandlerId[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerId(void *p) {
      delete ((::TGeoMatHandlerId*)p);
   }
   static void deleteArray_TGeoMatHandlerId(void *p) {
      delete [] ((::TGeoMatHandlerId*)p);
   }
   static void destruct_TGeoMatHandlerId(void *p) {
      typedef ::TGeoMatHandlerId current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerId

//______________________________________________________________________________
void TGeoMatHandlerX::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerX.

   if (R__b.IsReading()) {
      TGeoMatHandlerX::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerX::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerX::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerX.

      TClass *R__cl = ::TGeoMatHandlerX::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerX_IsA(const void *obj) {
      return ((::TGeoMatHandlerX*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerX(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerX : new ::TGeoMatHandlerX;
   }
   static void *newArray_TGeoMatHandlerX(Long_t size) {
      return new ::TGeoMatHandlerX[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerX(void *p) {
      delete ((::TGeoMatHandlerX*)p);
   }
   static void deleteArray_TGeoMatHandlerX(void *p) {
      delete [] ((::TGeoMatHandlerX*)p);
   }
   static void destruct_TGeoMatHandlerX(void *p) {
      typedef ::TGeoMatHandlerX current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerX

//______________________________________________________________________________
void TGeoMatHandlerY::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerY.

   if (R__b.IsReading()) {
      TGeoMatHandlerY::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerY::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerY::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerY.

      TClass *R__cl = ::TGeoMatHandlerY::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerY_IsA(const void *obj) {
      return ((::TGeoMatHandlerY*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerY(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerY : new ::TGeoMatHandlerY;
   }
   static void *newArray_TGeoMatHandlerY(Long_t size) {
      return new ::TGeoMatHandlerY[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerY(void *p) {
      delete ((::TGeoMatHandlerY*)p);
   }
   static void deleteArray_TGeoMatHandlerY(void *p) {
      delete [] ((::TGeoMatHandlerY*)p);
   }
   static void destruct_TGeoMatHandlerY(void *p) {
      typedef ::TGeoMatHandlerY current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerY

//______________________________________________________________________________
void TGeoMatHandlerZ::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerZ.

   if (R__b.IsReading()) {
      TGeoMatHandlerZ::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerZ::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerZ::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerZ.

      TClass *R__cl = ::TGeoMatHandlerZ::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerZ_IsA(const void *obj) {
      return ((::TGeoMatHandlerZ*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerZ(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerZ : new ::TGeoMatHandlerZ;
   }
   static void *newArray_TGeoMatHandlerZ(Long_t size) {
      return new ::TGeoMatHandlerZ[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerZ(void *p) {
      delete ((::TGeoMatHandlerZ*)p);
   }
   static void deleteArray_TGeoMatHandlerZ(void *p) {
      delete [] ((::TGeoMatHandlerZ*)p);
   }
   static void destruct_TGeoMatHandlerZ(void *p) {
      typedef ::TGeoMatHandlerZ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerZ

//______________________________________________________________________________
void TGeoMatHandlerXY::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerXY.

   if (R__b.IsReading()) {
      TGeoMatHandlerXY::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerXY::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerXY::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerXY.

      TClass *R__cl = ::TGeoMatHandlerXY::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerXY_IsA(const void *obj) {
      return ((::TGeoMatHandlerXY*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerXY(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerXY : new ::TGeoMatHandlerXY;
   }
   static void *newArray_TGeoMatHandlerXY(Long_t size) {
      return new ::TGeoMatHandlerXY[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerXY(void *p) {
      delete ((::TGeoMatHandlerXY*)p);
   }
   static void deleteArray_TGeoMatHandlerXY(void *p) {
      delete [] ((::TGeoMatHandlerXY*)p);
   }
   static void destruct_TGeoMatHandlerXY(void *p) {
      typedef ::TGeoMatHandlerXY current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerXY

//______________________________________________________________________________
void TGeoMatHandlerXZ::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerXZ.

   if (R__b.IsReading()) {
      TGeoMatHandlerXZ::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerXZ::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerXZ::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerXZ.

      TClass *R__cl = ::TGeoMatHandlerXZ::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerXZ_IsA(const void *obj) {
      return ((::TGeoMatHandlerXZ*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerXZ(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerXZ : new ::TGeoMatHandlerXZ;
   }
   static void *newArray_TGeoMatHandlerXZ(Long_t size) {
      return new ::TGeoMatHandlerXZ[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerXZ(void *p) {
      delete ((::TGeoMatHandlerXZ*)p);
   }
   static void deleteArray_TGeoMatHandlerXZ(void *p) {
      delete [] ((::TGeoMatHandlerXZ*)p);
   }
   static void destruct_TGeoMatHandlerXZ(void *p) {
      typedef ::TGeoMatHandlerXZ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerXZ

//______________________________________________________________________________
void TGeoMatHandlerYZ::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerYZ.

   if (R__b.IsReading()) {
      TGeoMatHandlerYZ::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerYZ::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerYZ::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerYZ.

      TClass *R__cl = ::TGeoMatHandlerYZ::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerYZ_IsA(const void *obj) {
      return ((::TGeoMatHandlerYZ*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerYZ(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerYZ : new ::TGeoMatHandlerYZ;
   }
   static void *newArray_TGeoMatHandlerYZ(Long_t size) {
      return new ::TGeoMatHandlerYZ[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerYZ(void *p) {
      delete ((::TGeoMatHandlerYZ*)p);
   }
   static void deleteArray_TGeoMatHandlerYZ(void *p) {
      delete [] ((::TGeoMatHandlerYZ*)p);
   }
   static void destruct_TGeoMatHandlerYZ(void *p) {
      typedef ::TGeoMatHandlerYZ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerYZ

//______________________________________________________________________________
void TGeoMatHandlerXYZ::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerXYZ.

   if (R__b.IsReading()) {
      TGeoMatHandlerXYZ::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerXYZ::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerXYZ::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerXYZ.

      TClass *R__cl = ::TGeoMatHandlerXYZ::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerXYZ_IsA(const void *obj) {
      return ((::TGeoMatHandlerXYZ*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerXYZ(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerXYZ : new ::TGeoMatHandlerXYZ;
   }
   static void *newArray_TGeoMatHandlerXYZ(Long_t size) {
      return new ::TGeoMatHandlerXYZ[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerXYZ(void *p) {
      delete ((::TGeoMatHandlerXYZ*)p);
   }
   static void deleteArray_TGeoMatHandlerXYZ(void *p) {
      delete [] ((::TGeoMatHandlerXYZ*)p);
   }
   static void destruct_TGeoMatHandlerXYZ(void *p) {
      typedef ::TGeoMatHandlerXYZ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerXYZ

//______________________________________________________________________________
void TGeoMatHandlerRot::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerRot.

   if (R__b.IsReading()) {
      TGeoMatHandlerRot::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerRot::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerRot::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerRot.

      TClass *R__cl = ::TGeoMatHandlerRot::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerRot_IsA(const void *obj) {
      return ((::TGeoMatHandlerRot*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerRot(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerRot : new ::TGeoMatHandlerRot;
   }
   static void *newArray_TGeoMatHandlerRot(Long_t size) {
      return new ::TGeoMatHandlerRot[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerRot(void *p) {
      delete ((::TGeoMatHandlerRot*)p);
   }
   static void deleteArray_TGeoMatHandlerRot(void *p) {
      delete [] ((::TGeoMatHandlerRot*)p);
   }
   static void destruct_TGeoMatHandlerRot(void *p) {
      typedef ::TGeoMatHandlerRot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerRot

//______________________________________________________________________________
void TGeoMatHandlerRotTr::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerRotTr.

   if (R__b.IsReading()) {
      TGeoMatHandlerRotTr::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerRotTr::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerRotTr::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerRotTr.

      TClass *R__cl = ::TGeoMatHandlerRotTr::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerRotTr_IsA(const void *obj) {
      return ((::TGeoMatHandlerRotTr*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerRotTr(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerRotTr : new ::TGeoMatHandlerRotTr;
   }
   static void *newArray_TGeoMatHandlerRotTr(Long_t size) {
      return new ::TGeoMatHandlerRotTr[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerRotTr(void *p) {
      delete ((::TGeoMatHandlerRotTr*)p);
   }
   static void deleteArray_TGeoMatHandlerRotTr(void *p) {
      delete [] ((::TGeoMatHandlerRotTr*)p);
   }
   static void destruct_TGeoMatHandlerRotTr(void *p) {
      typedef ::TGeoMatHandlerRotTr current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerRotTr

//______________________________________________________________________________
void TGeoMatHandlerScl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerScl.

   if (R__b.IsReading()) {
      TGeoMatHandlerScl::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerScl::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerScl::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerScl.

      TClass *R__cl = ::TGeoMatHandlerScl::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerScl_IsA(const void *obj) {
      return ((::TGeoMatHandlerScl*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerScl(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerScl : new ::TGeoMatHandlerScl;
   }
   static void *newArray_TGeoMatHandlerScl(Long_t size) {
      return new ::TGeoMatHandlerScl[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerScl(void *p) {
      delete ((::TGeoMatHandlerScl*)p);
   }
   static void deleteArray_TGeoMatHandlerScl(void *p) {
      delete [] ((::TGeoMatHandlerScl*)p);
   }
   static void destruct_TGeoMatHandlerScl(void *p) {
      typedef ::TGeoMatHandlerScl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerScl

//______________________________________________________________________________
void TGeoMatHandlerTrScl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerTrScl.

   if (R__b.IsReading()) {
      TGeoMatHandlerTrScl::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerTrScl::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerTrScl::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerTrScl.

      TClass *R__cl = ::TGeoMatHandlerTrScl::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerTrScl_IsA(const void *obj) {
      return ((::TGeoMatHandlerTrScl*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerTrScl(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerTrScl : new ::TGeoMatHandlerTrScl;
   }
   static void *newArray_TGeoMatHandlerTrScl(Long_t size) {
      return new ::TGeoMatHandlerTrScl[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerTrScl(void *p) {
      delete ((::TGeoMatHandlerTrScl*)p);
   }
   static void deleteArray_TGeoMatHandlerTrScl(void *p) {
      delete [] ((::TGeoMatHandlerTrScl*)p);
   }
   static void destruct_TGeoMatHandlerTrScl(void *p) {
      typedef ::TGeoMatHandlerTrScl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerTrScl

//______________________________________________________________________________
void TGeoMatHandlerRotScl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerRotScl.

   if (R__b.IsReading()) {
      TGeoMatHandlerRotScl::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerRotScl::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerRotScl::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerRotScl.

      TClass *R__cl = ::TGeoMatHandlerRotScl::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerRotScl_IsA(const void *obj) {
      return ((::TGeoMatHandlerRotScl*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerRotScl(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerRotScl : new ::TGeoMatHandlerRotScl;
   }
   static void *newArray_TGeoMatHandlerRotScl(Long_t size) {
      return new ::TGeoMatHandlerRotScl[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerRotScl(void *p) {
      delete ((::TGeoMatHandlerRotScl*)p);
   }
   static void deleteArray_TGeoMatHandlerRotScl(void *p) {
      delete [] ((::TGeoMatHandlerRotScl*)p);
   }
   static void destruct_TGeoMatHandlerRotScl(void *p) {
      typedef ::TGeoMatHandlerRotScl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerRotScl

//______________________________________________________________________________
void TGeoMatHandlerRotTrScl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatHandlerRotTrScl.

   if (R__b.IsReading()) {
      TGeoMatHandlerRotTrScl::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatHandlerRotTrScl::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatHandlerRotTrScl::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatHandlerRotTrScl.

      TClass *R__cl = ::TGeoMatHandlerRotTrScl::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TGeoMatHandler::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatHandlerRotTrScl_IsA(const void *obj) {
      return ((::TGeoMatHandlerRotTrScl*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatHandlerRotTrScl(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatHandlerRotTrScl : new ::TGeoMatHandlerRotTrScl;
   }
   static void *newArray_TGeoMatHandlerRotTrScl(Long_t size) {
      return new ::TGeoMatHandlerRotTrScl[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatHandlerRotTrScl(void *p) {
      delete ((::TGeoMatHandlerRotTrScl*)p);
   }
   static void deleteArray_TGeoMatHandlerRotTrScl(void *p) {
      delete [] ((::TGeoMatHandlerRotTrScl*)p);
   }
   static void destruct_TGeoMatHandlerRotTrScl(void *p) {
      typedef ::TGeoMatHandlerRotTrScl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatHandlerRotTrScl

//______________________________________________________________________________
void TGeoNodeArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoNodeArray.

   if (R__b.IsReading()) {
      TGeoNodeArray::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoNodeArray::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoNodeArray::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoNodeArray.

      TClass *R__cl = ::TGeoNodeArray::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNodeSize", &fNodeSize);
      R__insp.Inspect(R__cl, R__parent, "fNdaughters", &fNdaughters);
      R__insp.Inspect(R__cl, R__parent, "*fOffset", &fOffset);
      R__insp.Inspect(R__cl, R__parent, "fSize", &fSize);
      R__insp.Inspect(R__cl, R__parent, "fFirstFree", &fFirstFree);
      R__insp.Inspect(R__cl, R__parent, "fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__parent, "fNused", &fNused);
      R__insp.Inspect(R__cl, R__parent, "*fBitsArray", &fBitsArray);
      R__insp.Inspect(R__cl, R__parent, "*fArray", &fArray);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoNodeArray_IsA(const void *obj) {
      return ((::TGeoNodeArray*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoNodeArray(void *p) {
      return  p ? new(p) ::TGeoNodeArray : new ::TGeoNodeArray;
   }
   static void *newArray_TGeoNodeArray(Long_t size) {
      return new ::TGeoNodeArray[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoNodeArray(void *p) {
      delete ((::TGeoNodeArray*)p);
   }
   static void deleteArray_TGeoNodeArray(void *p) {
      delete [] ((::TGeoNodeArray*)p);
   }
   static void destruct_TGeoNodeArray(void *p) {
      typedef ::TGeoNodeArray current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoNodeArray

//______________________________________________________________________________
void R__TGeoNodeObjArray_fObjArray(TBuffer &R__b, void *R__p, int R__n)
{
   TObjArray** fObjArray = (TObjArray**)R__p;
   if (R__b.IsReading()) {
      delete [] *fObjArray;
      if (!R__n) return;
      *fObjArray = new TObjArray[R__n];
      TObjArray* R__s = *fObjArray;
      for (Int_t R__l = 0; R__l < R__n; R__l++) {
         R__s[R__l].Streamer(R__b);
      }
   } else {
      TObjArray* R__s = *fObjArray;
      for (Int_t R__l = 0; R__l < R__n; R__l++) {
         R__s[R__l].Streamer(R__b);
      }
   }
}

//______________________________________________________________________________
void TGeoNodeObjArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoNodeObjArray.

   if (R__b.IsReading()) {
      TGeoNodeObjArray::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoNodeObjArray::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoNodeObjArray::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoNodeObjArray.

      TClass *R__cl = ::TGeoNodeObjArray::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__parent, "*fObjArray", &fObjArray);
      R__cl->SetMemberStreamer("*fObjArray",R__TGeoNodeObjArray_fObjArray);
      R__insp.Inspect(R__cl, R__parent, "*fCurrent", &fCurrent);
      TGeoNodeArray::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoNodeObjArray_IsA(const void *obj) {
      return ((::TGeoNodeObjArray*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoNodeObjArray(void *p) {
      return  p ? new(p) ::TGeoNodeObjArray : new ::TGeoNodeObjArray;
   }
   static void *newArray_TGeoNodeObjArray(Long_t size) {
      return new ::TGeoNodeObjArray[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoNodeObjArray(void *p) {
      delete ((::TGeoNodeObjArray*)p);
   }
   static void deleteArray_TGeoNodeObjArray(void *p) {
      delete [] ((::TGeoNodeObjArray*)p);
   }
   static void destruct_TGeoNodeObjArray(void *p) {
      typedef ::TGeoNodeObjArray current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoNodeObjArray

//______________________________________________________________________________
void TGeoNodeCache::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoNodeCache.

   if (R__b.IsReading()) {
      TGeoNodeCache::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoNodeCache::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoNodeCache::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoNodeCache.

      TClass *R__cl = ::TGeoNodeCache::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fGeoCacheUsageRatio", &fGeoCacheUsageRatio);
      R__insp.Inspect(R__cl, R__parent, "fGeoCacheMaxDaughters", &fGeoCacheMaxDaughters);
      R__insp.Inspect(R__cl, R__parent, "fGeoCacheMaxSize", &fGeoCacheMaxSize);
      R__insp.Inspect(R__cl, R__parent, "fGeoCacheDefaultLevel", &fGeoCacheDefaultLevel);
      R__insp.Inspect(R__cl, R__parent, "fGeoCacheMaxLevels", &fGeoCacheMaxLevels);
      R__insp.Inspect(R__cl, R__parent, "fGeoCacheObjArrayInd", &fGeoCacheObjArrayInd);
      R__insp.Inspect(R__cl, R__parent, "fGeoCacheStackSize", &fGeoCacheStackSize);
      R__insp.Inspect(R__cl, R__parent, "fLevel", &fLevel);
      R__insp.Inspect(R__cl, R__parent, "fCurrentID", &fCurrentID);
      R__insp.Inspect(R__cl, R__parent, "fPath", &fPath);
      fPath.ShowMembers(R__insp, strcat(R__parent,"fPath.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fStack", &fStack);
      R__insp.Inspect(R__cl, R__parent, "*fNodeIdArray", &fNodeIdArray);
      R__insp.Inspect(R__cl, R__parent, "fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__parent, "fSize", &fSize);
      R__insp.Inspect(R__cl, R__parent, "fNused", &fNused);
      R__insp.Inspect(R__cl, R__parent, "fDefaultLevel", &fDefaultLevel);
      R__insp.Inspect(R__cl, R__parent, "fTopNode", &fTopNode);
      R__insp.Inspect(R__cl, R__parent, "fCount", &fCount);
      R__insp.Inspect(R__cl, R__parent, "fCountLimit", &fCountLimit);
      R__insp.Inspect(R__cl, R__parent, "fCurrentNode", &fCurrentNode);
      R__insp.Inspect(R__cl, R__parent, "fCurrentCache", &fCurrentCache);
      R__insp.Inspect(R__cl, R__parent, "fCurrentIndex", &fCurrentIndex);
      R__insp.Inspect(R__cl, R__parent, "*fBranch", &fBranch);
      R__insp.Inspect(R__cl, R__parent, "*fMatrices", &fMatrices);
      R__insp.Inspect(R__cl, R__parent, "fStackLevel", &fStackLevel);
      R__insp.Inspect(R__cl, R__parent, "*fGlobalMatrix", &fGlobalMatrix);
      R__insp.Inspect(R__cl, R__parent, "*fCache", &fCache);
      R__insp.Inspect(R__cl, R__parent, "*fMatrixPool", &fMatrixPool);
      R__insp.Inspect(R__cl, R__parent, "fIdBranch[30]", fIdBranch);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoNodeCache_IsA(const void *obj) {
      return ((::TGeoNodeCache*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoNodeCache(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoNodeCache : new ::TGeoNodeCache;
   }
   static void *newArray_TGeoNodeCache(Long_t size) {
      return new ::TGeoNodeCache[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoNodeCache(void *p) {
      delete ((::TGeoNodeCache*)p);
   }
   static void deleteArray_TGeoNodeCache(void *p) {
      delete [] ((::TGeoNodeCache*)p);
   }
   static void destruct_TGeoNodeCache(void *p) {
      typedef ::TGeoNodeCache current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoNodeCache

//______________________________________________________________________________
void TGeoCacheDummy::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoCacheDummy.

   if (R__b.IsReading()) {
      TGeoCacheDummy::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoCacheDummy::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoCacheDummy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoCacheDummy.

      TClass *R__cl = ::TGeoCacheDummy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fTop", &fTop);
      R__insp.Inspect(R__cl, R__parent, "*fNode", &fNode);
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "*fMatrixBranch", &fMatrixBranch);
      R__insp.Inspect(R__cl, R__parent, "*fMPB", &fMPB);
      R__insp.Inspect(R__cl, R__parent, "*fNodeBranch", &fNodeBranch);
      TGeoNodeCache::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoCacheDummy_IsA(const void *obj) {
      return ((::TGeoCacheDummy*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoCacheDummy(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoCacheDummy : new ::TGeoCacheDummy;
   }
   static void *newArray_TGeoCacheDummy(Long_t size) {
      return new ::TGeoCacheDummy[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoCacheDummy(void *p) {
      delete ((::TGeoCacheDummy*)p);
   }
   static void deleteArray_TGeoCacheDummy(void *p) {
      delete [] ((::TGeoCacheDummy*)p);
   }
   static void destruct_TGeoCacheDummy(void *p) {
      typedef ::TGeoCacheDummy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoCacheDummy

//______________________________________________________________________________
void TGeoMatrixCache::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoMatrixCache.

   if (R__b.IsReading()) {
      TGeoMatrixCache::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoMatrixCache::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoMatrixCache::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoMatrixCache.

      TClass *R__cl = ::TGeoMatrixCache::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fHandler", &fHandler);
      R__insp.Inspect(R__cl, R__parent, "fCacheId", &fCacheId);
      R__insp.Inspect(R__cl, R__parent, "fLength", &fLength);
      R__insp.Inspect(R__cl, R__parent, "fSize[7]", fSize);
      R__insp.Inspect(R__cl, R__parent, "fFree[7]", fFree);
      R__insp.Inspect(R__cl, R__parent, "*fCache[7]", &fCache);
      R__insp.Inspect(R__cl, R__parent, "*fBitsArray[7]", &fBitsArray);
      R__insp.Inspect(R__cl, R__parent, "*fHandlers", &fHandlers);
      R__insp.Inspect(R__cl, R__parent, "fGeoMinCacheSize", &fGeoMinCacheSize);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoMatrixCache_IsA(const void *obj) {
      return ((::TGeoMatrixCache*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoMatrixCache(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGeoMatrixCache : new ::TGeoMatrixCache;
   }
   static void *newArray_TGeoMatrixCache(Long_t size) {
      return new ::TGeoMatrixCache[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoMatrixCache(void *p) {
      delete ((::TGeoMatrixCache*)p);
   }
   static void deleteArray_TGeoMatrixCache(void *p) {
      delete [] ((::TGeoMatrixCache*)p);
   }
   static void destruct_TGeoMatrixCache(void *p) {
      typedef ::TGeoMatrixCache current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoMatrixCache

//______________________________________________________________________________
void TGeoNodePos::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoNodePos.

   if (R__b.IsReading()) {
      TGeoNodePos::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoNodePos::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoNodePos::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoNodePos.

      TClass *R__cl = ::TGeoNodePos::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNdaughters", &fNdaughters);
      R__insp.Inspect(R__cl, R__parent, "fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fCount", &fCount);
      R__insp.Inspect(R__cl, R__parent, "*fDaughters", &fDaughters);
      R__insp.Inspect(R__cl, R__parent, "*fNode", &fNode);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoNodePos_IsA(const void *obj) {
      return ((::TGeoNodePos*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoNodePos(void *p) {
      return  p ? new(p) ::TGeoNodePos : new ::TGeoNodePos;
   }
   static void *newArray_TGeoNodePos(Long_t size) {
      return new ::TGeoNodePos[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoNodePos(void *p) {
      delete ((::TGeoNodePos*)p);
   }
   static void deleteArray_TGeoNodePos(void *p) {
      delete [] ((::TGeoNodePos*)p);
   }
   static void destruct_TGeoNodePos(void *p) {
      typedef ::TGeoNodePos current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoNodePos

//______________________________________________________________________________
void TGeoCacheState::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoCacheState.

   if (R__b.IsReading()) {
      TGeoCacheState::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoCacheState::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoCacheState::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoCacheState.

      TClass *R__cl = ::TGeoCacheState::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fLevel", &fLevel);
      R__insp.Inspect(R__cl, R__parent, "fStart", &fStart);
      R__insp.Inspect(R__cl, R__parent, "fIdBranch[30]", fIdBranch);
      R__insp.Inspect(R__cl, R__parent, "*fPoint", &fPoint);
      R__insp.Inspect(R__cl, R__parent, "fOverlapping", &fOverlapping);
      R__insp.Inspect(R__cl, R__parent, "*fBranch", &fBranch);
      R__insp.Inspect(R__cl, R__parent, "*fMatrices", &fMatrices);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoCacheState_IsA(const void *obj) {
      return ((::TGeoCacheState*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoCacheState(void *p) {
      return  p ? new(p) ::TGeoCacheState : new ::TGeoCacheState;
   }
   static void *newArray_TGeoCacheState(Long_t size) {
      return new ::TGeoCacheState[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoCacheState(void *p) {
      delete ((::TGeoCacheState*)p);
   }
   static void deleteArray_TGeoCacheState(void *p) {
      delete [] ((::TGeoCacheState*)p);
   }
   static void destruct_TGeoCacheState(void *p) {
      typedef ::TGeoCacheState current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoCacheState

//______________________________________________________________________________
void TGeoCacheStateDummy::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoCacheStateDummy.

   if (R__b.IsReading()) {
      TGeoCacheStateDummy::Class()->ReadBuffer(R__b, this);
   } else {
      TGeoCacheStateDummy::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGeoCacheStateDummy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeoCacheStateDummy.

      TClass *R__cl = ::TGeoCacheStateDummy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fNodeBranch", &fNodeBranch);
      R__insp.Inspect(R__cl, R__parent, "*fMatrixBranch", &fMatrixBranch);
      R__insp.Inspect(R__cl, R__parent, "*fMatPtr", &fMatPtr);
      TGeoCacheState::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeoCacheStateDummy_IsA(const void *obj) {
      return ((::TGeoCacheStateDummy*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeoCacheStateDummy(void *p) {
      return  p ? new(p) ::TGeoCacheStateDummy : new ::TGeoCacheStateDummy;
   }
   static void *newArray_TGeoCacheStateDummy(Long_t size) {
      return new ::TGeoCacheStateDummy[size];
   }
   // Wrapper around operator delete
   static void delete_TGeoCacheStateDummy(void *p) {
      delete ((::TGeoCacheStateDummy*)p);
   }
   static void deleteArray_TGeoCacheStateDummy(void *p) {
      delete [] ((::TGeoCacheStateDummy*)p);
   }
   static void destruct_TGeoCacheStateDummy(void *p) {
      typedef ::TGeoCacheStateDummy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoCacheStateDummy

/********************************************************
* geom/src/G__Geom2.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__Geom2();

extern "C" void G__set_cpp_environmentG__Geom2() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("geom/inc/TGeoPatternFinder.h");
  G__add_compiledheader("geom/inc/TGeoCache.h");
  G__cpp_reset_tagtableG__Geom2();
}
class G__geomdIsrcdIG__Geom2dOcxx_tag {};

void* operator new(size_t size,G__geomdIsrcdIG__Geom2dOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__geomdIsrcdIG__Geom2dOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_geomdIsrcdIG__Geom2dOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__Geom2() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TGeoPatternFinder */
static int G__G__Geom2_167_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternFinder *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternFinder[G__getaryconstruct()];
   else                    p=new TGeoPatternFinder;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternFinder *p=NULL;
      p = new TGeoPatternFinder((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternFinder*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoPatternFinder*)(G__getstructoffset()))->GetByteCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoPatternFinder*)(G__getstructoffset()))->GetCurrent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoPatternFinder*)(G__getstructoffset()))->GetDivIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternFinder*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoPatternFinder*)(G__getstructoffset()))->GetNdiv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternFinder*)(G__getstructoffset()))->GetNodeOffset((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TGeoPatternFinder*)(G__getstructoffset()))->GetStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TGeoPatternFinder*)(G__getstructoffset()))->GetStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TGeoPatternFinder*)(G__getstructoffset()))->GetEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternFinder*)(G__getstructoffset()))->GetVolume());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternFinder*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternFinder*)(G__getstructoffset()))->SetDivIndex((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternFinder*)(G__getstructoffset()))->SetVolume((TGeoVolume*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternFinder::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternFinder*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternFinder*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternFinder*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternFinder*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_167_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_167_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternFinder *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternFinder(*(TGeoPatternFinder*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternFinder G__TTGeoPatternFinder;
static int G__G__Geom2_167_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternFinder *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternFinder *)((G__getstructoffset())+sizeof(TGeoPatternFinder)*i);
   else  delete (TGeoPatternFinder *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_167_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternFinder *dest = (TGeoPatternFinder*)(G__getstructoffset());
   *dest = (*(TGeoPatternFinder*)libp->para[0].ref);
   const TGeoPatternFinder& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternX */
static int G__G__Geom2_172_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternX *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternX[G__getaryconstruct()];
   else                    p=new TGeoPatternX;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternX *p=NULL;
      p = new TGeoPatternX((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternX *p=NULL;
      p = new TGeoPatternX(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternX *p=NULL;
      p = new TGeoPatternX(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternX*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternX*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternX*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternX::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternX::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternX::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternX::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternX*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternX*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternX*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternX*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternX::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternX::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternX::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_172_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternX::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_172_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternX *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternX(*(TGeoPatternX*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternX G__TTGeoPatternX;
static int G__G__Geom2_172_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternX *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternX *)((G__getstructoffset())+sizeof(TGeoPatternX)*i);
   else  delete (TGeoPatternX *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_172_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternX *dest = (TGeoPatternX*)(G__getstructoffset());
   *dest = (*(TGeoPatternX*)libp->para[0].ref);
   const TGeoPatternX& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternY */
static int G__G__Geom2_173_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternY *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternY[G__getaryconstruct()];
   else                    p=new TGeoPatternY;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternY *p=NULL;
      p = new TGeoPatternY((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternY *p=NULL;
      p = new TGeoPatternY(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternY *p=NULL;
      p = new TGeoPatternY(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternY*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternY*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternY*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternY::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternY::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternY::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternY::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternY*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternY*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternY*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternY*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternY::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternY::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternY::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_173_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternY::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_173_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternY *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternY(*(TGeoPatternY*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternY G__TTGeoPatternY;
static int G__G__Geom2_173_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternY *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternY *)((G__getstructoffset())+sizeof(TGeoPatternY)*i);
   else  delete (TGeoPatternY *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_173_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternY *dest = (TGeoPatternY*)(G__getstructoffset());
   *dest = (*(TGeoPatternY*)libp->para[0].ref);
   const TGeoPatternY& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternZ */
static int G__G__Geom2_174_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternZ *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternZ[G__getaryconstruct()];
   else                    p=new TGeoPatternZ;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternZ *p=NULL;
      p = new TGeoPatternZ((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternZ *p=NULL;
      p = new TGeoPatternZ(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternZ *p=NULL;
      p = new TGeoPatternZ(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternZ*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternZ*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternZ*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternZ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternZ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternZ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternZ::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternZ*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternZ*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternZ*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternZ*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternZ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternZ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternZ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_174_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternZ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_174_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternZ *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternZ(*(TGeoPatternZ*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternZ G__TTGeoPatternZ;
static int G__G__Geom2_174_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternZ *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternZ *)((G__getstructoffset())+sizeof(TGeoPatternZ)*i);
   else  delete (TGeoPatternZ *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_174_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternZ *dest = (TGeoPatternZ*)(G__getstructoffset());
   *dest = (*(TGeoPatternZ*)libp->para[0].ref);
   const TGeoPatternZ& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternParaX */
static int G__G__Geom2_175_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaX *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternParaX[G__getaryconstruct()];
   else                    p=new TGeoPatternParaX;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaX *p=NULL;
      p = new TGeoPatternParaX((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaX *p=NULL;
      p = new TGeoPatternParaX(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaX *p=NULL;
      p = new TGeoPatternParaX(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaX*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternParaX*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaX*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternParaX::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternParaX::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternParaX::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternParaX::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternParaX*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaX*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaX*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaX*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternParaX::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternParaX::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternParaX::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_175_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternParaX::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_175_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternParaX *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternParaX(*(TGeoPatternParaX*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternParaX G__TTGeoPatternParaX;
static int G__G__Geom2_175_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternParaX *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternParaX *)((G__getstructoffset())+sizeof(TGeoPatternParaX)*i);
   else  delete (TGeoPatternParaX *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_175_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaX *dest = (TGeoPatternParaX*)(G__getstructoffset());
   *dest = (*(TGeoPatternParaX*)libp->para[0].ref);
   const TGeoPatternParaX& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternParaY */
static int G__G__Geom2_176_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaY *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternParaY[G__getaryconstruct()];
   else                    p=new TGeoPatternParaY;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaY *p=NULL;
      p = new TGeoPatternParaY((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaY *p=NULL;
      p = new TGeoPatternParaY(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaY *p=NULL;
      p = new TGeoPatternParaY(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaY*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternParaY*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaY*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternParaY::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternParaY::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternParaY::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternParaY::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternParaY*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaY*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaY*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaY*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternParaY::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternParaY::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternParaY::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_176_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternParaY::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_176_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternParaY *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternParaY(*(TGeoPatternParaY*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternParaY G__TTGeoPatternParaY;
static int G__G__Geom2_176_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternParaY *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternParaY *)((G__getstructoffset())+sizeof(TGeoPatternParaY)*i);
   else  delete (TGeoPatternParaY *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_176_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaY *dest = (TGeoPatternParaY*)(G__getstructoffset());
   *dest = (*(TGeoPatternParaY*)libp->para[0].ref);
   const TGeoPatternParaY& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternParaZ */
static int G__G__Geom2_177_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaZ *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternParaZ[G__getaryconstruct()];
   else                    p=new TGeoPatternParaZ;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaZ *p=NULL;
      p = new TGeoPatternParaZ((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaZ *p=NULL;
      p = new TGeoPatternParaZ(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaZ *p=NULL;
      p = new TGeoPatternParaZ(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaZ*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternParaZ*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaZ*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternParaZ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternParaZ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternParaZ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternParaZ::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternParaZ*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaZ*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaZ*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternParaZ*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternParaZ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternParaZ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternParaZ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_177_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternParaZ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_177_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternParaZ *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternParaZ(*(TGeoPatternParaZ*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternParaZ G__TTGeoPatternParaZ;
static int G__G__Geom2_177_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternParaZ *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternParaZ *)((G__getstructoffset())+sizeof(TGeoPatternParaZ)*i);
   else  delete (TGeoPatternParaZ *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_177_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternParaZ *dest = (TGeoPatternParaZ*)(G__getstructoffset());
   *dest = (*(TGeoPatternParaZ*)libp->para[0].ref);
   const TGeoPatternParaZ& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternTrapZ */
static int G__G__Geom2_178_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternTrapZ *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternTrapZ[G__getaryconstruct()];
   else                    p=new TGeoPatternTrapZ;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternTrapZ *p=NULL;
      p = new TGeoPatternTrapZ((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternTrapZ *p=NULL;
      p = new TGeoPatternTrapZ(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternTrapZ *p=NULL;
      p = new TGeoPatternTrapZ(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TGeoPatternTrapZ*)(G__getstructoffset()))->GetTxz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TGeoPatternTrapZ*)(G__getstructoffset()))->GetTyz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternTrapZ*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternTrapZ*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternTrapZ*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternTrapZ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternTrapZ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternTrapZ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternTrapZ::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternTrapZ*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternTrapZ*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternTrapZ*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternTrapZ*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternTrapZ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternTrapZ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternTrapZ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_178_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternTrapZ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_178_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternTrapZ *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternTrapZ(*(TGeoPatternTrapZ*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternTrapZ G__TTGeoPatternTrapZ;
static int G__G__Geom2_178_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternTrapZ *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternTrapZ *)((G__getstructoffset())+sizeof(TGeoPatternTrapZ)*i);
   else  delete (TGeoPatternTrapZ *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_178_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternTrapZ *dest = (TGeoPatternTrapZ*)(G__getstructoffset());
   *dest = (*(TGeoPatternTrapZ*)libp->para[0].ref);
   const TGeoPatternTrapZ& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternCylR */
static int G__G__Geom2_179_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternCylR *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternCylR[G__getaryconstruct()];
   else                    p=new TGeoPatternCylR;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternCylR *p=NULL;
      p = new TGeoPatternCylR((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternCylR *p=NULL;
      p = new TGeoPatternCylR(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternCylR *p=NULL;
      p = new TGeoPatternCylR(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternCylR*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternCylR*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternCylR*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternCylR::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternCylR::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternCylR::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternCylR::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternCylR*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternCylR*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternCylR*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternCylR*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternCylR::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternCylR::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternCylR::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_179_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternCylR::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_179_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternCylR *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternCylR(*(TGeoPatternCylR*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternCylR G__TTGeoPatternCylR;
static int G__G__Geom2_179_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternCylR *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternCylR *)((G__getstructoffset())+sizeof(TGeoPatternCylR)*i);
   else  delete (TGeoPatternCylR *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_179_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternCylR *dest = (TGeoPatternCylR*)(G__getstructoffset());
   *dest = (*(TGeoPatternCylR*)libp->para[0].ref);
   const TGeoPatternCylR& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternCylPhi */
static int G__G__Geom2_180_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternCylPhi *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternCylPhi[G__getaryconstruct()];
   else                    p=new TGeoPatternCylPhi;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternCylPhi *p=NULL;
      p = new TGeoPatternCylPhi((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternCylPhi *p=NULL;
      p = new TGeoPatternCylPhi(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternCylPhi *p=NULL;
      p = new TGeoPatternCylPhi(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternCylPhi*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternCylPhi*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternCylPhi*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternCylPhi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternCylPhi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternCylPhi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternCylPhi::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternCylPhi*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternCylPhi*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternCylPhi*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternCylPhi*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternCylPhi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternCylPhi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternCylPhi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_180_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternCylPhi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_180_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternCylPhi *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternCylPhi(*(TGeoPatternCylPhi*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternCylPhi G__TTGeoPatternCylPhi;
static int G__G__Geom2_180_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternCylPhi *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternCylPhi *)((G__getstructoffset())+sizeof(TGeoPatternCylPhi)*i);
   else  delete (TGeoPatternCylPhi *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_180_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternCylPhi *dest = (TGeoPatternCylPhi*)(G__getstructoffset());
   *dest = (*(TGeoPatternCylPhi*)libp->para[0].ref);
   const TGeoPatternCylPhi& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternSphR */
static int G__G__Geom2_181_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphR *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternSphR[G__getaryconstruct()];
   else                    p=new TGeoPatternSphR;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphR *p=NULL;
      p = new TGeoPatternSphR((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphR *p=NULL;
      p = new TGeoPatternSphR(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphR *p=NULL;
      p = new TGeoPatternSphR(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphR*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternSphR*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphR*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternSphR::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternSphR::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternSphR::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternSphR::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternSphR*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphR*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphR*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphR*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternSphR::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternSphR::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternSphR::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_181_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternSphR::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_181_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternSphR *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternSphR(*(TGeoPatternSphR*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternSphR G__TTGeoPatternSphR;
static int G__G__Geom2_181_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternSphR *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternSphR *)((G__getstructoffset())+sizeof(TGeoPatternSphR)*i);
   else  delete (TGeoPatternSphR *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_181_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphR *dest = (TGeoPatternSphR*)(G__getstructoffset());
   *dest = (*(TGeoPatternSphR*)libp->para[0].ref);
   const TGeoPatternSphR& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternSphTheta */
static int G__G__Geom2_182_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphTheta *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternSphTheta[G__getaryconstruct()];
   else                    p=new TGeoPatternSphTheta;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphTheta *p=NULL;
      p = new TGeoPatternSphTheta((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphTheta *p=NULL;
      p = new TGeoPatternSphTheta(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphTheta *p=NULL;
      p = new TGeoPatternSphTheta(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphTheta*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternSphTheta*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphTheta*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternSphTheta::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternSphTheta::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternSphTheta::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternSphTheta::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternSphTheta*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphTheta*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphTheta*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphTheta*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternSphTheta::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternSphTheta::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternSphTheta::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_182_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternSphTheta::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_182_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternSphTheta *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternSphTheta(*(TGeoPatternSphTheta*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternSphTheta G__TTGeoPatternSphTheta;
static int G__G__Geom2_182_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternSphTheta *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternSphTheta *)((G__getstructoffset())+sizeof(TGeoPatternSphTheta)*i);
   else  delete (TGeoPatternSphTheta *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_182_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphTheta *dest = (TGeoPatternSphTheta*)(G__getstructoffset());
   *dest = (*(TGeoPatternSphTheta*)libp->para[0].ref);
   const TGeoPatternSphTheta& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternSphPhi */
static int G__G__Geom2_183_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphPhi *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternSphPhi[G__getaryconstruct()];
   else                    p=new TGeoPatternSphPhi;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphPhi *p=NULL;
      p = new TGeoPatternSphPhi((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphPhi *p=NULL;
      p = new TGeoPatternSphPhi(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphPhi *p=NULL;
      p = new TGeoPatternSphPhi(
(TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphPhi*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternSphPhi*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphPhi*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternSphPhi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternSphPhi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternSphPhi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternSphPhi::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternSphPhi*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphPhi*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphPhi*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternSphPhi*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternSphPhi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternSphPhi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternSphPhi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_183_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternSphPhi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_183_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternSphPhi *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternSphPhi(*(TGeoPatternSphPhi*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternSphPhi G__TTGeoPatternSphPhi;
static int G__G__Geom2_183_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternSphPhi *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternSphPhi *)((G__getstructoffset())+sizeof(TGeoPatternSphPhi)*i);
   else  delete (TGeoPatternSphPhi *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_183_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternSphPhi *dest = (TGeoPatternSphPhi*)(G__getstructoffset());
   *dest = (*(TGeoPatternSphPhi*)libp->para[0].ref);
   const TGeoPatternSphPhi& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoPatternHoneycomb */
static int G__G__Geom2_184_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternHoneycomb *p=NULL;
   if(G__getaryconstruct()) p=new TGeoPatternHoneycomb[G__getaryconstruct()];
   else                    p=new TGeoPatternHoneycomb;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternHoneycomb *p=NULL;
      p = new TGeoPatternHoneycomb((TGeoVolume*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternHoneycomb*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TGeoPatternHoneycomb*)(G__getstructoffset()))->FindNode((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoPatternHoneycomb::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternHoneycomb::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoPatternHoneycomb::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoPatternHoneycomb::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoPatternHoneycomb*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternHoneycomb*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternHoneycomb*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoPatternHoneycomb*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternHoneycomb::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternHoneycomb::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoPatternHoneycomb::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_184_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoPatternHoneycomb::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_184_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoPatternHoneycomb *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoPatternHoneycomb(*(TGeoPatternHoneycomb*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoPatternHoneycomb G__TTGeoPatternHoneycomb;
static int G__G__Geom2_184_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoPatternHoneycomb *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoPatternHoneycomb *)((G__getstructoffset())+sizeof(TGeoPatternHoneycomb)*i);
   else  delete (TGeoPatternHoneycomb *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_184_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoPatternHoneycomb *dest = (TGeoPatternHoneycomb*)(G__getstructoffset());
   *dest = (*(TGeoPatternHoneycomb*)libp->para[0].ref);
   const TGeoPatternHoneycomb& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoNodePos */
static int G__G__Geom2_260_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodePos *p=NULL;
   if(G__getaryconstruct()) p=new TGeoNodePos[G__getaryconstruct()];
   else                    p=new TGeoNodePos;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodePos *p=NULL;
      p = new TGeoNodePos((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoNodePos*)(G__getstructoffset()))->AddDaughter((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoNodePos*)(G__getstructoffset()))->AddMatrix((TGeoMatrix*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodePos*)(G__getstructoffset()))->ClearDaughter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodePos*)(G__getstructoffset()))->ClearMatrix();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodePos*)(G__getstructoffset()))->GetDaughter((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodePos*)(G__getstructoffset()))->GetMatrixInd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TGeoNodePos*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodePos*)(G__getstructoffset()))->GetNdaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoNodePos*)(G__getstructoffset()))->GetNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodePos*)(G__getstructoffset()))->GetUsageCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeoNodePos*)(G__getstructoffset()))->HasDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeoNodePos*)(G__getstructoffset()))->IsPersistent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodePos*)(G__getstructoffset()))->IncrementUsageCount();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodePos*)(G__getstructoffset()))->Map((TGeoNode*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodePos*)(G__getstructoffset()))->ResetCount();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodePos*)(G__getstructoffset()))->SetMatrix((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGeoNodePos*)(G__getstructoffset()))->SetPersistency((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGeoNodePos*)(G__getstructoffset()))->SetPersistency();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoNodePos::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodePos::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoNodePos::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoNodePos::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoNodePos*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodePos*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodePos*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodePos*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodePos::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoNodePos::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodePos::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_260_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoNodePos::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_260_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoNodePos *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoNodePos(*(TGeoNodePos*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoNodePos G__TTGeoNodePos;
static int G__G__Geom2_260_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoNodePos *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoNodePos *)((G__getstructoffset())+sizeof(TGeoNodePos)*i);
   else  delete (TGeoNodePos *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_260_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodePos *dest = (TGeoNodePos*)(G__getstructoffset());
   *dest = (*(TGeoNodePos*)libp->para[0].ref);
   const TGeoNodePos& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatrixCache */
static int G__G__Geom2_261_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatrixCache *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatrixCache[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatrixCache;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatrixCache *p=NULL;
      p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatrixCache((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoMatrixCache*)(G__getstructoffset()))->AddMatrix((TGeoMatrix*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatrixCache*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatrixCache*)(G__getstructoffset()))->ClearMatrix((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatrixCache*)(G__getstructoffset()))->GetMatrix((TGeoHMatrix*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatrixCache*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatrixCache*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatrixCache*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatrixCache*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatrixCache*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatrixCache*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatrixCache*)(G__getstructoffset()))->Status();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatrixCache::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatrixCache::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatrixCache::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatrixCache::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatrixCache*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatrixCache*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatrixCache*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatrixCache*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatrixCache::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatrixCache::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatrixCache::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_261_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatrixCache::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_261_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatrixCache *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatrixCache(*(TGeoMatrixCache*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatrixCache G__TTGeoMatrixCache;
static int G__G__Geom2_261_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatrixCache *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatrixCache *)((G__getstructoffset())+sizeof(TGeoMatrixCache)*i))->~G__TTGeoMatrixCache();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatrixCache *)(G__getstructoffset()))->~G__TTGeoMatrixCache();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_261_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatrixCache *dest = (TGeoMatrixCache*)(G__getstructoffset());
   *dest = (*(TGeoMatrixCache*)libp->para[0].ref);
   const TGeoMatrixCache& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoNodeArray */
static int G__G__Geom2_262_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodeArray *p=NULL;
   if(G__getaryconstruct()) p=new TGeoNodeArray[G__getaryconstruct()];
   else                    p=new TGeoNodeArray;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodeArray *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TGeoNodeArray((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TGeoNodeArray((Int_t)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoNodeArray*)(G__getstructoffset()))->AddDaughter((TGeoNode*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoNodeArray*)(G__getstructoffset()))->AddNode((TGeoNode*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoNodeArray*)(G__getstructoffset()))->AddMatrix((TGeoMatrix*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->ClearDaughter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->ClearMatrix();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->ClearNode();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->Compact();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->DeleteArray();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeArray*)(G__getstructoffset()))->GetDaughter((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeArray*)(G__getstructoffset()))->GetMatrixInd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeArray*)(G__getstructoffset()))->GetNdaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoNodeArray*)(G__getstructoffset()))->GetNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeArray*)(G__getstructoffset()))->GetNused());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeArray*)(G__getstructoffset()))->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeArray*)(G__getstructoffset()))->GetUsageCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeoNodeArray*)(G__getstructoffset()))->HasDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->IncreaseArray();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->IncrementUsageCount();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeoNodeArray*)(G__getstructoffset()))->IsPersistent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->SetMatrix((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->SetPersistency((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->SetPersistency();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoNodeArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodeArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoNodeArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoNodeArray::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoNodeArray*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeArray*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodeArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoNodeArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodeArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_262_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoNodeArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_262_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoNodeArray *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoNodeArray(*(TGeoNodeArray*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoNodeArray G__TTGeoNodeArray;
static int G__G__Geom2_262_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoNodeArray *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoNodeArray *)((G__getstructoffset())+sizeof(TGeoNodeArray)*i);
   else  delete (TGeoNodeArray *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_262_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodeArray *dest = (TGeoNodeArray*)(G__getstructoffset());
   *dest = (*(TGeoNodeArray*)libp->para[0].ref);
   const TGeoNodeArray& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandler */
static int G__G__Geom2_263_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandler*)(G__getstructoffset()))->SetLocation((Double_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandler*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandler*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandler*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandler*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandler*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandler*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandler*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandler*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandler::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandler::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandler::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandler::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandler*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandler*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandler*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandler*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandler::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandler::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandler::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_263_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandler::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandler G__TTGeoMatHandler;
static int G__G__Geom2_263_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandler *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandler *)((G__getstructoffset())+sizeof(TGeoMatHandler)*i))->~G__TTGeoMatHandler();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandler *)(G__getstructoffset()))->~G__TTGeoMatHandler();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_263_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandler *dest = (TGeoMatHandler*)(G__getstructoffset());
   *dest = (*(TGeoMatHandler*)libp->para[0].ref);
   const TGeoMatHandler& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoCacheState */
static int G__G__Geom2_264_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoCacheState *p=NULL;
   if(G__getaryconstruct()) p=new TGeoCacheState[G__getaryconstruct()];
   else                    p=new TGeoCacheState;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoCacheState *p=NULL;
      p = new TGeoCacheState((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TGeoCacheState*)(G__getstructoffset()))->SetState((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TGeoCacheState*)(G__getstructoffset()))->SetState((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeoCacheState*)(G__getstructoffset()))->GetState(*(Int_t*)G__Intref(&libp->para[0]),(Double_t*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoCacheState::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoCacheState::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoCacheState::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoCacheState::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoCacheState*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheState*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheState*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheState*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoCacheState::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoCacheState::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoCacheState::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_264_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoCacheState::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_264_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoCacheState *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoCacheState(*(TGeoCacheState*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoCacheState G__TTGeoCacheState;
static int G__G__Geom2_264_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoCacheState *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoCacheState *)((G__getstructoffset())+sizeof(TGeoCacheState)*i);
   else  delete (TGeoCacheState *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_264_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoCacheState *dest = (TGeoCacheState*)(G__getstructoffset());
   *dest = (*(TGeoCacheState*)libp->para[0].ref);
   const TGeoCacheState& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoCacheStateDummy */
static int G__G__Geom2_265_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoCacheStateDummy *p=NULL;
   if(G__getaryconstruct()) p=new TGeoCacheStateDummy[G__getaryconstruct()];
   else                    p=new TGeoCacheStateDummy;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoCacheStateDummy *p=NULL;
      p = new TGeoCacheStateDummy((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TGeoCacheStateDummy*)(G__getstructoffset()))->SetState((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TGeoCacheStateDummy*)(G__getstructoffset()))->SetState((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Bool_t)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeoCacheStateDummy*)(G__getstructoffset()))->GetState(*(Int_t*)G__Intref(&libp->para[0]),(Double_t*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoCacheStateDummy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoCacheStateDummy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoCacheStateDummy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoCacheStateDummy::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoCacheStateDummy*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheStateDummy*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheStateDummy*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheStateDummy*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoCacheStateDummy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoCacheStateDummy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoCacheStateDummy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_265_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoCacheStateDummy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_265_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoCacheStateDummy *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoCacheStateDummy(*(TGeoCacheStateDummy*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoCacheStateDummy G__TTGeoCacheStateDummy;
static int G__G__Geom2_265_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoCacheStateDummy *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoCacheStateDummy *)((G__getstructoffset())+sizeof(TGeoCacheStateDummy)*i);
   else  delete (TGeoCacheStateDummy *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_265_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoCacheStateDummy *dest = (TGeoCacheStateDummy*)(G__getstructoffset());
   *dest = (*(TGeoCacheStateDummy*)libp->para[0].ref);
   const TGeoCacheStateDummy& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoNodeCache */
static int G__G__Geom2_266_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodeCache *p=NULL;
   if(G__getaryconstruct()) p=new TGeoNodeCache[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoNodeCache;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodeCache *p=NULL;
      p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoNodeCache((Bool_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodeCache *p=NULL;
   switch(libp->paran) {
   case 2:
      p = ::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoNodeCache((Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      p = ::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoNodeCache((Int_t)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoNodeCache*)(G__getstructoffset()))->AddNode((TGeoNode*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->BuildIdArray();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->CacheId((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->CdCache();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->CdNode((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,103,(long)((TGeoNodeCache*)(G__getstructoffset()))->CdDown((Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((TGeoNodeCache*)(G__getstructoffset()))->CdDown((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->CdTop();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->CdUp();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->CleanCache();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->ClearDaughter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->ClearNode((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->Compact();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->FillIdBranch((const Int_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->FillIdBranch((const Int_t*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetIdBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->DeleteCaches();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGeoNodeCache*)(G__getstructoffset()))->DumpNodes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoNodeCache*)(G__getstructoffset()))->GetBranchNames((Int_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoNodeCache*)(G__getstructoffset()))->GetBranchNumbers((Int_t*)G__int(libp->para[0]),(Int_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoNodeCache*)(G__getstructoffset()))->GetBranchOnlys((Int_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetMatrices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetCurrentMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetCurrentNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetCurrentNodeId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetMother((Int_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetMother());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetStackLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetTopNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetFreeSpace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetMatrixPool());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetNfree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetNused());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TGeoNodeCache*)(G__getstructoffset()))->GetPath());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetNodeId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->GetUsageCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeoNodeCache*)(G__getstructoffset()))->HasIdArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->IncreasePool((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->IncrementUsageCount();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeCache*)(G__getstructoffset()))->Index((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeoNodeCache*)(G__getstructoffset()))->IsDummy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoNodeCache*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoNodeCache*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoNodeCache*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoNodeCache*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoNodeCache*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoNodeCache*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoNodeCache*)(G__getstructoffset()))->PrintNode();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TGeoNodeCache*)(G__getstructoffset()))->PushState((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TGeoNodeCache*)(G__getstructoffset()))->PushState((Bool_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TGeoNodeCache*)(G__getstructoffset()))->PushState((Bool_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,103,(long)((TGeoNodeCache*)(G__getstructoffset()))->PopState((Double_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,103,(long)((TGeoNodeCache*)(G__getstructoffset()))->PopState());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,103,(long)((TGeoNodeCache*)(G__getstructoffset()))->PopState((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((TGeoNodeCache*)(G__getstructoffset()))->PopState((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->PopDummy((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->PopDummy();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->Refresh();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->SetDefaultLevel((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGeoNodeCache*)(G__getstructoffset()))->SetPersistency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoNodeCache*)(G__getstructoffset()))->Status();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoNodeCache::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodeCache::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoNodeCache::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoNodeCache::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoNodeCache*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeCache*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodeCache::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoNodeCache::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodeCache::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_266_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoNodeCache::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_266_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoNodeCache *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoNodeCache(*(TGeoNodeCache*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoNodeCache G__TTGeoNodeCache;
static int G__G__Geom2_266_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoNodeCache *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoNodeCache *)((G__getstructoffset())+sizeof(TGeoNodeCache)*i))->~G__TTGeoNodeCache();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoNodeCache *)(G__getstructoffset()))->~G__TTGeoNodeCache();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_266_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodeCache *dest = (TGeoNodeCache*)(G__getstructoffset());
   *dest = (*(TGeoNodeCache*)libp->para[0].ref);
   const TGeoNodeCache& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoCacheDummy */
static int G__G__Geom2_267_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoCacheDummy *p=NULL;
   if(G__getaryconstruct()) p=new TGeoCacheDummy[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoCacheDummy;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoCacheDummy *p=NULL;
   switch(libp->paran) {
   case 2:
      p = ::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoCacheDummy((TGeoNode*)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1]));
      break;
   case 1:
      p = ::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoCacheDummy((TGeoNode*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,103,(long)((TGeoCacheDummy*)(G__getstructoffset()))->CdDown((Int_t)G__int(libp->para[0]),(Bool_t)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,103,(long)((TGeoCacheDummy*)(G__getstructoffset()))->CdDown((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->CdTop();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->CdUp();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->CleanCache();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->ClearDaughter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->ClearNode((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->Compact();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->DeleteCaches();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGeoCacheDummy*)(G__getstructoffset()))->DumpNodes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoCacheDummy*)(G__getstructoffset()))->GetBranchNames((Int_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoCacheDummy*)(G__getstructoffset()))->GetBranchNumbers((Int_t*)G__int(libp->para[0]),(Int_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoCacheDummy*)(G__getstructoffset()))->GetBranchOnlys((Int_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetCurrentMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetCurrentNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetFreeSpace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,89,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetMatrices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetMother((Int_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetMother());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetNfree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetNused());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((TGeoCacheDummy*)(G__getstructoffset()))->GetPath());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetNodeId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->GetUsageCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->IncreasePool((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->IncrementUsageCount();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->IsDummy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoCacheDummy*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoCacheDummy*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoCacheDummy*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoCacheDummy*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoCacheDummy*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoCacheDummy*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoCacheDummy*)(G__getstructoffset()))->PrintNode();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->Refresh();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TGeoCacheDummy*)(G__getstructoffset()))->SetPersistency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoCacheDummy*)(G__getstructoffset()))->Status();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoCacheDummy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoCacheDummy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoCacheDummy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoCacheDummy::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoCacheDummy*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoCacheDummy*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoCacheDummy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoCacheDummy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoCacheDummy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_267_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoCacheDummy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_267_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoCacheDummy *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoCacheDummy(*(TGeoCacheDummy*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoCacheDummy G__TTGeoCacheDummy;
static int G__G__Geom2_267_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoCacheDummy *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoCacheDummy *)((G__getstructoffset())+sizeof(TGeoCacheDummy)*i))->~G__TTGeoCacheDummy();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoCacheDummy *)(G__getstructoffset()))->~G__TTGeoCacheDummy();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_267_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoCacheDummy *dest = (TGeoCacheDummy*)(G__getstructoffset());
   *dest = (*(TGeoCacheDummy*)libp->para[0].ref);
   const TGeoCacheDummy& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoNodeObjArray */
static int G__G__Geom2_268_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodeObjArray *p=NULL;
   if(G__getaryconstruct()) p=new TGeoNodeObjArray[G__getaryconstruct()];
   else                    p=new TGeoNodeObjArray;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodeObjArray *p=NULL;
      p = new TGeoNodeObjArray((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoNodeObjArray*)(G__getstructoffset()))->AddDaughter((TGeoNode*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoNodeObjArray*)(G__getstructoffset()))->AddNode((TGeoNode*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeoNodeObjArray*)(G__getstructoffset()))->AddMatrix((TGeoMatrix*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->cd((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->ClearDaughter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->ClearMatrix();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->ClearNode();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeObjArray*)(G__getstructoffset()))->GetMatrixInd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeObjArray*)(G__getstructoffset()))->GetDaughter((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeObjArray*)(G__getstructoffset()))->GetNdaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoNodeObjArray*)(G__getstructoffset()))->GetNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeoNodeObjArray*)(G__getstructoffset()))->GetUsageCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeoNodeObjArray*)(G__getstructoffset()))->HasDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->IncreaseArray();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->IncrementUsageCount();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeoNodeObjArray*)(G__getstructoffset()))->IsPersistent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->SetPersistency((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->SetPersistency();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->SetMatrix((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoNodeObjArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodeObjArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoNodeObjArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoNodeObjArray::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoNodeObjArray*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoNodeObjArray*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodeObjArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoNodeObjArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoNodeObjArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_268_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoNodeObjArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_268_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoNodeObjArray *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoNodeObjArray(*(TGeoNodeObjArray*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoNodeObjArray G__TTGeoNodeObjArray;
static int G__G__Geom2_268_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoNodeObjArray *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeoNodeObjArray *)((G__getstructoffset())+sizeof(TGeoNodeObjArray)*i);
   else  delete (TGeoNodeObjArray *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_268_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoNodeObjArray *dest = (TGeoNodeObjArray*)(G__getstructoffset());
   *dest = (*(TGeoNodeObjArray*)libp->para[0].ref);
   const TGeoNodeObjArray& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerId */
static int G__G__Geom2_269_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerId *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerId[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerId;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerId);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerId*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerId*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerId*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerId*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerId*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerId*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerId*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerId*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerId::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerId::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerId::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerId::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerId*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerId*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerId*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerId*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerId::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerId::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerId::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_269_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerId::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_269_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerId *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerId(*(TGeoMatHandlerId*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerId);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerId G__TTGeoMatHandlerId;
static int G__G__Geom2_269_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerId *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerId *)((G__getstructoffset())+sizeof(TGeoMatHandlerId)*i))->~G__TTGeoMatHandlerId();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerId *)(G__getstructoffset()))->~G__TTGeoMatHandlerId();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_269_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerId *dest = (TGeoMatHandlerId*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerId*)libp->para[0].ref);
   const TGeoMatHandlerId& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerX */
static int G__G__Geom2_270_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerX *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerX[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerX;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerX);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerX*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerX*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerX*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerX*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerX*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerX*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerX*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerX*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerX::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerX::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerX::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerX::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerX*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerX*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerX*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerX*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerX::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerX::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerX::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_270_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerX::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_270_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerX *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerX(*(TGeoMatHandlerX*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerX);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerX G__TTGeoMatHandlerX;
static int G__G__Geom2_270_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerX *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerX *)((G__getstructoffset())+sizeof(TGeoMatHandlerX)*i))->~G__TTGeoMatHandlerX();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerX *)(G__getstructoffset()))->~G__TTGeoMatHandlerX();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_270_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerX *dest = (TGeoMatHandlerX*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerX*)libp->para[0].ref);
   const TGeoMatHandlerX& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerY */
static int G__G__Geom2_271_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerY *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerY[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerY;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerY);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerY*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerY*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerY*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerY*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerY*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerY*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerY*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerY*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerY::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerY::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerY::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerY::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerY*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerY*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerY*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerY*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerY::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerY::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerY::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_271_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerY::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_271_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerY *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerY(*(TGeoMatHandlerY*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerY);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerY G__TTGeoMatHandlerY;
static int G__G__Geom2_271_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerY *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerY *)((G__getstructoffset())+sizeof(TGeoMatHandlerY)*i))->~G__TTGeoMatHandlerY();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerY *)(G__getstructoffset()))->~G__TTGeoMatHandlerY();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_271_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerY *dest = (TGeoMatHandlerY*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerY*)libp->para[0].ref);
   const TGeoMatHandlerY& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerZ */
static int G__G__Geom2_272_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerZ *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerZ[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerZ;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerZ*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerZ*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerZ*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerZ*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerZ*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerZ*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerZ*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerZ*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerZ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerZ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerZ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerZ::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerZ*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerZ*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerZ*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerZ*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerZ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerZ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerZ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_272_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerZ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_272_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerZ *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerZ(*(TGeoMatHandlerZ*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerZ);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerZ G__TTGeoMatHandlerZ;
static int G__G__Geom2_272_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerZ *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerZ *)((G__getstructoffset())+sizeof(TGeoMatHandlerZ)*i))->~G__TTGeoMatHandlerZ();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerZ *)(G__getstructoffset()))->~G__TTGeoMatHandlerZ();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_272_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerZ *dest = (TGeoMatHandlerZ*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerZ*)libp->para[0].ref);
   const TGeoMatHandlerZ& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerXY */
static int G__G__Geom2_273_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerXY *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerXY[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerXY;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXY);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXY*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXY*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXY*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXY*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXY*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXY*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXY*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXY*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerXY::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerXY::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerXY::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerXY::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerXY*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXY*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXY*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXY*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerXY::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerXY::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerXY::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_273_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerXY::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_273_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerXY *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerXY(*(TGeoMatHandlerXY*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXY);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerXY G__TTGeoMatHandlerXY;
static int G__G__Geom2_273_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerXY *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerXY *)((G__getstructoffset())+sizeof(TGeoMatHandlerXY)*i))->~G__TTGeoMatHandlerXY();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerXY *)(G__getstructoffset()))->~G__TTGeoMatHandlerXY();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_273_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerXY *dest = (TGeoMatHandlerXY*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerXY*)libp->para[0].ref);
   const TGeoMatHandlerXY& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerXZ */
static int G__G__Geom2_274_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerXZ *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerXZ[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerXZ;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXZ*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXZ*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXZ*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXZ*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXZ*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXZ*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXZ*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXZ*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerXZ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerXZ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerXZ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerXZ::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerXZ*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXZ*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXZ*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXZ*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerXZ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerXZ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerXZ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_274_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerXZ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_274_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerXZ *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerXZ(*(TGeoMatHandlerXZ*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXZ);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerXZ G__TTGeoMatHandlerXZ;
static int G__G__Geom2_274_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerXZ *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerXZ *)((G__getstructoffset())+sizeof(TGeoMatHandlerXZ)*i))->~G__TTGeoMatHandlerXZ();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerXZ *)(G__getstructoffset()))->~G__TTGeoMatHandlerXZ();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_274_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerXZ *dest = (TGeoMatHandlerXZ*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerXZ*)libp->para[0].ref);
   const TGeoMatHandlerXZ& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerYZ */
static int G__G__Geom2_275_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerYZ *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerYZ[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerYZ;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerYZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerYZ*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerYZ*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerYZ*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerYZ*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerYZ*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerYZ*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerYZ*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerYZ*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerYZ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerYZ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerYZ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerYZ::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerYZ*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerYZ*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerYZ*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerYZ*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerYZ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerYZ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerYZ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_275_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerYZ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_275_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerYZ *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerYZ(*(TGeoMatHandlerYZ*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerYZ);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerYZ G__TTGeoMatHandlerYZ;
static int G__G__Geom2_275_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerYZ *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerYZ *)((G__getstructoffset())+sizeof(TGeoMatHandlerYZ)*i))->~G__TTGeoMatHandlerYZ();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerYZ *)(G__getstructoffset()))->~G__TTGeoMatHandlerYZ();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_275_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerYZ *dest = (TGeoMatHandlerYZ*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerYZ*)libp->para[0].ref);
   const TGeoMatHandlerYZ& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerXYZ */
static int G__G__Geom2_276_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerXYZ *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerXYZ[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerXYZ;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXYZ);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXYZ*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXYZ*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXYZ*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXYZ*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXYZ*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXYZ*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXYZ*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerXYZ*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerXYZ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerXYZ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerXYZ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerXYZ::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerXYZ*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXYZ*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXYZ*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerXYZ*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerXYZ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerXYZ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerXYZ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_276_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerXYZ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_276_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerXYZ *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerXYZ(*(TGeoMatHandlerXYZ*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXYZ);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerXYZ G__TTGeoMatHandlerXYZ;
static int G__G__Geom2_276_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerXYZ *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerXYZ *)((G__getstructoffset())+sizeof(TGeoMatHandlerXYZ)*i))->~G__TTGeoMatHandlerXYZ();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerXYZ *)(G__getstructoffset()))->~G__TTGeoMatHandlerXYZ();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_276_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerXYZ *dest = (TGeoMatHandlerXYZ*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerXYZ*)libp->para[0].ref);
   const TGeoMatHandlerXYZ& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerRot */
static int G__G__Geom2_277_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerRot *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerRot[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerRot;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRot);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRot*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRot*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRot*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRot*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRot*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRot*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRot*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRot*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerRot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerRot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerRot::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerRot*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRot*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRot*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRot*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerRot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_277_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerRot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_277_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerRot *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerRot(*(TGeoMatHandlerRot*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRot);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerRot G__TTGeoMatHandlerRot;
static int G__G__Geom2_277_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerRot *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerRot *)((G__getstructoffset())+sizeof(TGeoMatHandlerRot)*i))->~G__TTGeoMatHandlerRot();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerRot *)(G__getstructoffset()))->~G__TTGeoMatHandlerRot();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_277_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerRot *dest = (TGeoMatHandlerRot*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerRot*)libp->para[0].ref);
   const TGeoMatHandlerRot& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerRotTr */
static int G__G__Geom2_278_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerRotTr *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerRotTr[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerRotTr;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTr);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotTr*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotTr*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTr*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTr*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTr*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTr*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTr*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTr*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerRotTr::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRotTr::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerRotTr::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerRotTr::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerRotTr*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotTr*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotTr*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotTr*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRotTr::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerRotTr::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRotTr::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_278_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerRotTr::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_278_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerRotTr *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerRotTr(*(TGeoMatHandlerRotTr*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTr);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerRotTr G__TTGeoMatHandlerRotTr;
static int G__G__Geom2_278_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerRotTr *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerRotTr *)((G__getstructoffset())+sizeof(TGeoMatHandlerRotTr)*i))->~G__TTGeoMatHandlerRotTr();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerRotTr *)(G__getstructoffset()))->~G__TTGeoMatHandlerRotTr();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_278_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerRotTr *dest = (TGeoMatHandlerRotTr*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerRotTr*)libp->para[0].ref);
   const TGeoMatHandlerRotTr& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerScl */
static int G__G__Geom2_279_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerScl *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerScl[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerScl;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerScl);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerScl*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerScl*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerScl*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerScl*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerScl*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerScl*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerScl*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerScl*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerScl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerScl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerScl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerScl::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerScl*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerScl*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerScl*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerScl*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerScl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerScl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerScl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_279_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerScl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_279_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerScl *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerScl(*(TGeoMatHandlerScl*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerScl);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerScl G__TTGeoMatHandlerScl;
static int G__G__Geom2_279_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerScl *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerScl *)((G__getstructoffset())+sizeof(TGeoMatHandlerScl)*i))->~G__TTGeoMatHandlerScl();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerScl *)(G__getstructoffset()))->~G__TTGeoMatHandlerScl();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_279_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerScl *dest = (TGeoMatHandlerScl*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerScl*)libp->para[0].ref);
   const TGeoMatHandlerScl& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerTrScl */
static int G__G__Geom2_280_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerTrScl *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerTrScl[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerTrScl;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerTrScl);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerTrScl*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerTrScl*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerTrScl*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerTrScl*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerTrScl*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerTrScl*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerTrScl*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerTrScl*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerTrScl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerTrScl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerTrScl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerTrScl::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerTrScl*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerTrScl*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerTrScl*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerTrScl*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerTrScl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerTrScl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerTrScl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_280_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerTrScl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_280_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerTrScl *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerTrScl(*(TGeoMatHandlerTrScl*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerTrScl);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerTrScl G__TTGeoMatHandlerTrScl;
static int G__G__Geom2_280_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerTrScl *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerTrScl *)((G__getstructoffset())+sizeof(TGeoMatHandlerTrScl)*i))->~G__TTGeoMatHandlerTrScl();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerTrScl *)(G__getstructoffset()))->~G__TTGeoMatHandlerTrScl();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_280_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerTrScl *dest = (TGeoMatHandlerTrScl*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerTrScl*)libp->para[0].ref);
   const TGeoMatHandlerTrScl& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerRotScl */
static int G__G__Geom2_281_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerRotScl *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerRotScl[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerRotScl;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotScl);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotScl*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotScl*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotScl*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotScl*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotScl*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotScl*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotScl*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotScl*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerRotScl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRotScl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerRotScl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerRotScl::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerRotScl*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotScl*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotScl*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotScl*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRotScl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerRotScl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRotScl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_281_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerRotScl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_281_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerRotScl *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerRotScl(*(TGeoMatHandlerRotScl*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotScl);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerRotScl G__TTGeoMatHandlerRotScl;
static int G__G__Geom2_281_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerRotScl *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerRotScl *)((G__getstructoffset())+sizeof(TGeoMatHandlerRotScl)*i))->~G__TTGeoMatHandlerRotScl();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerRotScl *)(G__getstructoffset()))->~G__TTGeoMatHandlerRotScl();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_281_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerRotScl *dest = (TGeoMatHandlerRotScl*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerRotScl*)libp->para[0].ref);
   const TGeoMatHandlerRotScl& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeoMatHandlerRotTrScl */
static int G__G__Geom2_282_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerRotTrScl *p=NULL;
   if(G__getaryconstruct()) p=new TGeoMatHandlerRotTrScl[G__getaryconstruct()];
   else p=::new((G__geomdIsrcdIG__Geom2dOcxx_tag*)G__getgvp()) TGeoMatHandlerRotTrScl;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTrScl);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->AddMatrix((Double_t*)G__int(libp->para[0]),(TGeoMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->GetMatrix((Double_t*)G__int(libp->para[0]),(TGeoHMatrix*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->LocalToMaster((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->LocalToMasterVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->MasterToLocal((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->MasterToLocalVect((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->LocalToMasterBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->MasterToLocalBomb((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeoMatHandlerRotTrScl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRotTrScl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeoMatHandlerRotTrScl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeoMatHandlerRotTrScl::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeoMatHandlerRotTrScl*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRotTrScl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerRotTrScl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeoMatHandlerRotTrScl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Geom2_282_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeoMatHandlerRotTrScl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Geom2_282_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeoMatHandlerRotTrScl *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeoMatHandlerRotTrScl(*(TGeoMatHandlerRotTrScl*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTrScl);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoMatHandlerRotTrScl G__TTGeoMatHandlerRotTrScl;
static int G__G__Geom2_282_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeoMatHandlerRotTrScl *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TGeoMatHandlerRotTrScl *)((G__getstructoffset())+sizeof(TGeoMatHandlerRotTrScl)*i))->~G__TTGeoMatHandlerRotTrScl();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TGeoMatHandlerRotTrScl *)(G__getstructoffset()))->~G__TTGeoMatHandlerRotTrScl();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Geom2_282_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeoMatHandlerRotTrScl *dest = (TGeoMatHandlerRotTrScl*)(G__getstructoffset());
   *dest = (*(TGeoMatHandlerRotTrScl*)libp->para[0].ref);
   const TGeoMatHandlerRotTrScl& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TGeoPatternFinder */

/* TGeoPatternX */

/* TGeoPatternY */

/* TGeoPatternZ */

/* TGeoPatternParaX */

/* TGeoPatternParaY */

/* TGeoPatternParaZ */

/* TGeoPatternTrapZ */

/* TGeoPatternCylR */

/* TGeoPatternCylPhi */

/* TGeoPatternSphR */

/* TGeoPatternSphTheta */

/* TGeoPatternSphPhi */

/* TGeoPatternHoneycomb */

/* TGeoNodePos */

/* TGeoMatrixCache */

/* TGeoNodeArray */

/* TGeoMatHandler */

/* TGeoCacheState */

/* TGeoCacheStateDummy */

/* TGeoNodeCache */

/* TGeoCacheDummy */

/* TGeoNodeObjArray */

/* TGeoMatHandlerId */

/* TGeoMatHandlerX */

/* TGeoMatHandlerY */

/* TGeoMatHandlerZ */

/* TGeoMatHandlerXY */

/* TGeoMatHandlerXZ */

/* TGeoMatHandlerYZ */

/* TGeoMatHandlerXYZ */

/* TGeoMatHandlerRot */

/* TGeoMatHandlerRotTr */

/* TGeoMatHandlerScl */

/* TGeoMatHandlerTrScl */

/* TGeoMatHandlerRotScl */

/* TGeoMatHandlerRotTrScl */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Geom2 {
 public:
  G__Sizep2memfuncG__Geom2() {p=&G__Sizep2memfuncG__Geom2::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Geom2::*p)();
};

size_t G__get_sizep2memfuncG__Geom2()
{
  G__Sizep2memfuncG__Geom2 a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Geom2() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder))) {
     TGeoPatternFinder *G__Lderived;
     G__Lderived=(TGeoPatternFinder*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX))) {
     TGeoPatternX *G__Lderived;
     G__Lderived=(TGeoPatternX*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY))) {
     TGeoPatternY *G__Lderived;
     G__Lderived=(TGeoPatternY*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ))) {
     TGeoPatternZ *G__Lderived;
     G__Lderived=(TGeoPatternZ*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX))) {
     TGeoPatternParaX *G__Lderived;
     G__Lderived=(TGeoPatternParaX*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY))) {
     TGeoPatternParaY *G__Lderived;
     G__Lderived=(TGeoPatternParaY*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ))) {
     TGeoPatternParaZ *G__Lderived;
     G__Lderived=(TGeoPatternParaZ*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ))) {
     TGeoPatternTrapZ *G__Lderived;
     G__Lderived=(TGeoPatternTrapZ*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR))) {
     TGeoPatternCylR *G__Lderived;
     G__Lderived=(TGeoPatternCylR*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi))) {
     TGeoPatternCylPhi *G__Lderived;
     G__Lderived=(TGeoPatternCylPhi*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR))) {
     TGeoPatternSphR *G__Lderived;
     G__Lderived=(TGeoPatternSphR*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta))) {
     TGeoPatternSphTheta *G__Lderived;
     G__Lderived=(TGeoPatternSphTheta*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi))) {
     TGeoPatternSphPhi *G__Lderived;
     G__Lderived=(TGeoPatternSphPhi*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb))) {
     TGeoPatternHoneycomb *G__Lderived;
     G__Lderived=(TGeoPatternHoneycomb*)0x1000;
     {
       TGeoPatternFinder *G__Lpbase=(TGeoPatternFinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos))) {
     TGeoNodePos *G__Lderived;
     G__Lderived=(TGeoNodePos*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray))) {
     TGeoNodeArray *G__Lderived;
     G__Lderived=(TGeoNodeArray*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState))) {
     TGeoCacheState *G__Lderived;
     G__Lderived=(TGeoCacheState*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy))) {
     TGeoCacheStateDummy *G__Lderived;
     G__Lderived=(TGeoCacheStateDummy*)0x1000;
     {
       TGeoCacheState *G__Lpbase=(TGeoCacheState*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy),G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy))) {
     TGeoCacheDummy *G__Lderived;
     G__Lderived=(TGeoCacheDummy*)0x1000;
     {
       TGeoNodeCache *G__Lpbase=(TGeoNodeCache*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy),G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray))) {
     TGeoNodeObjArray *G__Lderived;
     G__Lderived=(TGeoNodeObjArray*)0x1000;
     {
       TGeoNodeArray *G__Lpbase=(TGeoNodeArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray),G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray),G__get_linked_tagnum(&G__G__Geom2LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerId))) {
     TGeoMatHandlerId *G__Lderived;
     G__Lderived=(TGeoMatHandlerId*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerId),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerX))) {
     TGeoMatHandlerX *G__Lderived;
     G__Lderived=(TGeoMatHandlerX*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerX),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerY))) {
     TGeoMatHandlerY *G__Lderived;
     G__Lderived=(TGeoMatHandlerY*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerY),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerZ))) {
     TGeoMatHandlerZ *G__Lderived;
     G__Lderived=(TGeoMatHandlerZ*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerZ),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXY))) {
     TGeoMatHandlerXY *G__Lderived;
     G__Lderived=(TGeoMatHandlerXY*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXY),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXZ))) {
     TGeoMatHandlerXZ *G__Lderived;
     G__Lderived=(TGeoMatHandlerXZ*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXZ),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerYZ))) {
     TGeoMatHandlerYZ *G__Lderived;
     G__Lderived=(TGeoMatHandlerYZ*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerYZ),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXYZ))) {
     TGeoMatHandlerXYZ *G__Lderived;
     G__Lderived=(TGeoMatHandlerXYZ*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXYZ),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRot))) {
     TGeoMatHandlerRot *G__Lderived;
     G__Lderived=(TGeoMatHandlerRot*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRot),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTr))) {
     TGeoMatHandlerRotTr *G__Lderived;
     G__Lderived=(TGeoMatHandlerRotTr*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTr),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerScl))) {
     TGeoMatHandlerScl *G__Lderived;
     G__Lderived=(TGeoMatHandlerScl*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerScl),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerTrScl))) {
     TGeoMatHandlerTrScl *G__Lderived;
     G__Lderived=(TGeoMatHandlerTrScl*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerTrScl),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotScl))) {
     TGeoMatHandlerRotScl *G__Lderived;
     G__Lderived=(TGeoMatHandlerRotScl*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotScl),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTrScl))) {
     TGeoMatHandlerRotTrScl *G__Lderived;
     G__Lderived=(TGeoMatHandlerRotTrScl*)0x1000;
     {
       TGeoMatHandler *G__Lpbase=(TGeoMatHandler*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTrScl),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Geom2() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__Geom2LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Geom2LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Geom2LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Geom2LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Geom2LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__Geom2LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Geom2LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Geom2LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Geom2LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Geom2LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__G__Geom2LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__Geom2LN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__Geom2LN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Geom2LN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__Geom2LN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__Geom2LN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TGeoPatternFinder */
static void G__setup_memvarTGeoPatternFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder));
   { TGeoPatternFinder *p; p=(TGeoPatternFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStep=",0,"division step length");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStart=",0,"starting point on divided axis");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEnd=",0,"ending point");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCurrent=",0,"current division element");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdivisions=",0,"number of divisions");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDivIndex=",0,"index of first div. node");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrix),-1,-1,2,"fMatrix=",0,"generic matrix");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoVolume),-1,-1,2,"fVolume=",0,"volume to which applies");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternX */
static void G__setup_memvarTGeoPatternX(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX));
   { TGeoPatternX *p; p=(TGeoPatternX*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternY */
static void G__setup_memvarTGeoPatternY(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY));
   { TGeoPatternY *p; p=(TGeoPatternY*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternZ */
static void G__setup_memvarTGeoPatternZ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ));
   { TGeoPatternZ *p; p=(TGeoPatternZ*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternParaX */
static void G__setup_memvarTGeoPatternParaX(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX));
   { TGeoPatternParaX *p; p=(TGeoPatternParaX*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternParaY */
static void G__setup_memvarTGeoPatternParaY(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY));
   { TGeoPatternParaY *p; p=(TGeoPatternParaY*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTxy=",0,"tangent of alpha");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternParaZ */
static void G__setup_memvarTGeoPatternParaZ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ));
   { TGeoPatternParaZ *p; p=(TGeoPatternParaZ*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTxz=",0,"tangent of alpha xz");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTyz=",0,"tangent of alpha yz");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternTrapZ */
static void G__setup_memvarTGeoPatternTrapZ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ));
   { TGeoPatternTrapZ *p; p=(TGeoPatternTrapZ*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTxz=",0,"tangent of alpha xz");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTyz=",0,"tangent of alpha yz");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternCylR */
static void G__setup_memvarTGeoPatternCylR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR));
   { TGeoPatternCylR *p; p=(TGeoPatternCylR*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternCylPhi */
static void G__setup_memvarTGeoPatternCylPhi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi));
   { TGeoPatternCylPhi *p; p=(TGeoPatternCylPhi*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSinCos=",0,"![2*fNdivisions] table of sines/cosines");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternSphR */
static void G__setup_memvarTGeoPatternSphR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR));
   { TGeoPatternSphR *p; p=(TGeoPatternSphR*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternSphTheta */
static void G__setup_memvarTGeoPatternSphTheta(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta));
   { TGeoPatternSphTheta *p; p=(TGeoPatternSphTheta*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternSphPhi */
static void G__setup_memvarTGeoPatternSphPhi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi));
   { TGeoPatternSphPhi *p; p=(TGeoPatternSphPhi*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoPatternHoneycomb */
static void G__setup_memvarTGeoPatternHoneycomb(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb));
   { TGeoPatternHoneycomb *p; p=(TGeoPatternHoneycomb*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNrows=",0,"number of rows");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fAxisOnRows=",0,"axis along each row");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNdivisions=",0,"[fNrows] number of divisions for each row");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fStart=",0,"[fNrows] starting points for each row");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoNodePos */
static void G__setup_memvarTGeoNodePos(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos));
   { TGeoNodePos *p; p=(TGeoNodePos*)0x1000; if (p) { }
   G__memvar_setup((void*)(&TGeoNodePos::kPersistentNodeMask),105,0,1,-1,G__defined_typename("Int_t"),-2,1,"kPersistentNodeMask=",0,"byte mask for persistent nodes");
   G__memvar_setup((void*)(&TGeoNodePos::kPersistentMatrixMask),98,0,1,-1,G__defined_typename("UChar_t"),-2,1,"kPersistentMatrixMask=",0,"byte mask for persistent matrices");
   G__memvar_setup((void*)(&TGeoNodePos::kNoMatrix),104,0,1,-1,G__defined_typename("UInt_t"),-2,1,"kNoMatrix=",0,"initial value for fGlobalMatrix");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNdaughters=",0,"number of daughters");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMatrix=",0,"index of global matrix");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCount=",0,"usage counter");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDaughters=",0,"[fNdaughters] list of daughters offsets");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,-1,4,"fNode=",0,"pointer to corresponding node from the logical tree");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatrixCache */
static void G__setup_memvarTGeoMatrixCache(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache));
   { TGeoMatrixCache *p; p=(TGeoMatrixCache*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMatrix=",0,"current global transformation");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHandler=",0,"current matrix handler");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCacheId=",0,"current cache id");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLength=",0,"length of current matrix");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fSize[7]=",0,"size of matrix caches");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fFree[7]=",0,"offset of first free matrices");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCache[7]=",0,"pointers to all caches");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TBits),-1,-1,4,"fBitsArray[7]=",0,"flags for matrix usage");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),-1,-1,4,"fHandlers=",0,"handlers for cached matrices");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fGeoMinCacheSize=",0,"minimum starting cache size");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoNodeArray */
static void G__setup_memvarTGeoNodeArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray));
   { TGeoNodeArray *p; p=(TGeoNodeArray*)0x1000; if (p) { }
   G__memvar_setup((void*)(&TGeoNodeArray::kGeoArrayMaxSize),105,0,1,-1,G__defined_typename("Int_t"),-2,1,"kGeoArrayMaxSize=",0,"maximum cache size");
   G__memvar_setup((void*)(&TGeoNodeArray::kGeoArrayInitSize),105,0,1,-1,G__defined_typename("Int_t"),-2,1,"kGeoArrayInitSize=",0,"initial cache size");
   G__memvar_setup((void*)(&TGeoNodeArray::kGeoReleasedSpace),105,0,1,-1,G__defined_typename("Int_t"),-2,1,"kGeoReleasedSpace=",0,"default number of nodes released on cleaning");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNodeSize=",0,"size of a node in bytes");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNdaughters=",0,"number of daughters for nodes in this array");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOffset=",0,"[fSize*fNodeSize] offset of the current node");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSize=",0,"number of nodes stored in array");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFirstFree=",0,"index of first free location");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCurrent=",0,"index of current node");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNused=",0,"number of used nodes");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TBits),-1,-1,2,"fBitsArray=",0,"occupancy flags");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fArray=",0,"array of nodes");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandler */
static void G__setup_memvarTGeoMatHandler(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler));
   { TGeoMatHandler *p; p=(TGeoMatHandler*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLocation=",0,"adress of current matrix");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoCacheState */
static void G__setup_memvarTGeoCacheState(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState));
   { TGeoCacheState *p; p=(TGeoCacheState*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLevel=",0,"level in the current branch");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStart=",0,"start level");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIdBranch[30]=",0,"ID branch");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPoint=",0,"last point in master frame");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fOverlapping=",0,"overlap flag");
   G__memvar_setup((void*)((long)(&p->fBranch)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"fBranch=",0,"last branch stored");
   G__memvar_setup((void*)((long)(&p->fMatrices)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMatrices=",0,"global matrices for last branch");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoCacheStateDummy */
static void G__setup_memvarTGeoCacheStateDummy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy));
   { TGeoCacheStateDummy *p; p=(TGeoCacheStateDummy*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNodeBranch)-(long)(p)),85,2,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,-1,1,"fNodeBranch=",0,"last node branch stored");
   G__memvar_setup((void*)((long)(&p->fMatrixBranch)-(long)(p)),85,2,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoHMatrix),-1,-1,1,"fMatrixBranch=",0,"global matrices for last branch");
   G__memvar_setup((void*)((long)(&p->fMatPtr)-(long)(p)),85,2,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoHMatrix),-1,-1,1,"fMatPtr=",0,"array of matrix pointers");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoNodeCache */
static void G__setup_memvarTGeoNodeCache(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache));
   { TGeoNodeCache *p; p=(TGeoNodeCache*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGeoCacheUsageRatio=",0,"percentage of total usage count that triggers persistency");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fGeoCacheMaxDaughters=",0,"max ndaugters for TGeoNodeArray");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fGeoCacheMaxSize=",0,"maximum initial cache size");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fGeoCacheDefaultLevel=",0,"default level down to store nodes");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fGeoCacheMaxLevels=",0,"maximum supported number of levels");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fGeoCacheObjArrayInd=",0,"maximum number of daughters stored as node arrays");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fGeoCacheStackSize=",0,"maximum size of the stack");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLevel=",0,"level in the current branch");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCurrentID=",0,"unique ID of current node");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TString),-1,-1,2,"fPath=",0,"path for current branch");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TObjArray),-1,-1,2,"fStack=",0,"stack of cache states");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNodeIdArray=",0,"! array of node id's");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIndex=",0,"index in array of ID's");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSize=",0,"current size of the cache");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNused=",0,"number of used nodes");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDefaultLevel=",0,"level down to which nodes will be persistent");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTopNode=",0,"top level physical node");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCount=",0,"total usage count");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCountLimit=",0,"count limit for which nodes become persistent");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrentNode=",0,"current physical node");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrentCache=",0,"current cache number");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrentIndex=",0,"index of current node in current cache");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBranch=",0,"nodes from current branch");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMatrices=",0,"matrix indices from current branch");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStackLevel=",0,"level in the stack of states");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoHMatrix),-1,-1,4,"fGlobalMatrix=",0,"current global matrix");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray),-1,-1,4,"fCache=",0,"[128] cache of node arrays");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache),-1,-1,2,"fMatrixPool=",0,"pool of compressed global matrices");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIdBranch[30]=",0,"current branch of indices");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoCacheDummy */
static void G__setup_memvarTGeoCacheDummy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy));
   { TGeoCacheDummy *p; p=(TGeoCacheDummy*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,-1,4,"fTop=",0,"top node");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,-1,4,"fNode=",0,"current node");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoHMatrix),-1,-1,4,"fMatrix=",0,"current matrix");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoHMatrix),-1,-1,4,"fMatrixBranch=",0,"current branch of global matrices");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoHMatrix),-1,-1,4,"fMPB=",0,"pre-built matrices");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,-1,4,"fNodeBranch=",0,"current branch of nodes");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoNodeObjArray */
static void G__setup_memvarTGeoNodeObjArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray));
   { TGeoNodeObjArray *p; p=(TGeoNodeObjArray*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIndex=",0,"index of current node");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TObjArray),-1,-1,4,"fObjArray=",0,"[fSize] array of TGeoNodePos objects");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos),-1,-1,4,"fCurrent=",0,"current node");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerId */
static void G__setup_memvarTGeoMatHandlerId(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerId));
   { TGeoMatHandlerId *p; p=(TGeoMatHandlerId*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerX */
static void G__setup_memvarTGeoMatHandlerX(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerX));
   { TGeoMatHandlerX *p; p=(TGeoMatHandlerX*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerY */
static void G__setup_memvarTGeoMatHandlerY(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerY));
   { TGeoMatHandlerY *p; p=(TGeoMatHandlerY*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerZ */
static void G__setup_memvarTGeoMatHandlerZ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerZ));
   { TGeoMatHandlerZ *p; p=(TGeoMatHandlerZ*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerXY */
static void G__setup_memvarTGeoMatHandlerXY(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXY));
   { TGeoMatHandlerXY *p; p=(TGeoMatHandlerXY*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerXZ */
static void G__setup_memvarTGeoMatHandlerXZ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXZ));
   { TGeoMatHandlerXZ *p; p=(TGeoMatHandlerXZ*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerYZ */
static void G__setup_memvarTGeoMatHandlerYZ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerYZ));
   { TGeoMatHandlerYZ *p; p=(TGeoMatHandlerYZ*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerXYZ */
static void G__setup_memvarTGeoMatHandlerXYZ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXYZ));
   { TGeoMatHandlerXYZ *p; p=(TGeoMatHandlerXYZ*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerRot */
static void G__setup_memvarTGeoMatHandlerRot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRot));
   { TGeoMatHandlerRot *p; p=(TGeoMatHandlerRot*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerRotTr */
static void G__setup_memvarTGeoMatHandlerRotTr(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTr));
   { TGeoMatHandlerRotTr *p; p=(TGeoMatHandlerRotTr*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerScl */
static void G__setup_memvarTGeoMatHandlerScl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerScl));
   { TGeoMatHandlerScl *p; p=(TGeoMatHandlerScl*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerTrScl */
static void G__setup_memvarTGeoMatHandlerTrScl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerTrScl));
   { TGeoMatHandlerTrScl *p; p=(TGeoMatHandlerTrScl*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerRotScl */
static void G__setup_memvarTGeoMatHandlerRotScl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotScl));
   { TGeoMatHandlerRotScl *p; p=(TGeoMatHandlerRotScl*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeoMatHandlerRotTrScl */
static void G__setup_memvarTGeoMatHandlerRotTrScl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTrScl));
   { TGeoMatHandlerRotTrScl *p; p=(TGeoMatHandlerRotTrScl*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Geom2() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTGeoPatternFinder(void) {
   /* TGeoPatternFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder));
   G__memfunc_setup("TGeoPatternFinder",1701,G__G__Geom2_167_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternFinder",1701,G__G__Geom2_167_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndiv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_167_3_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetByteCount",1213,G__G__Geom2_167_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCurrent",1027,G__G__Geom2_167_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDivIndex",1083,G__G__Geom2_167_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_167_7_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNdiv",689,G__G__Geom2_167_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNodeOffset",1293,G__G__Geom2_167_9_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetStart",814,G__G__Geom2_167_0_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetStep",700,G__G__Geom2_167_1_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEnd",567,G__G__Geom2_167_2_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVolume",920,G__G__Geom2_167_3_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoVolume),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FindNode",775,G__G__Geom2_167_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDivIndex",1095,G__G__Geom2_167_5_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetVolume",932,G__G__Geom2_167_6_1,121,-1,-1,0,1,1,1,0,"U 'TGeoVolume' - 0 - vol",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Geom2_167_7_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternFinder::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_167_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternFinder::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_167_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternFinder::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_167_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternFinder::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_167_1_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_167_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_167_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_167_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_167_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternFinder::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_167_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternFinder::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_167_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternFinder::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_167_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternFinder::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternFinder",1701,G__G__Geom2_167_9_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),-1,0,1,1,1,0,"u 'TGeoPatternFinder' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternFinder",1827,G__G__Geom2_167_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_167_1_3,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),-1,1,1,1,1,0,"u 'TGeoPatternFinder' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternX(void) {
   /* TGeoPatternX */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX));
   G__memfunc_setup("TGeoPatternX",1189,G__G__Geom2_172_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternX",1189,G__G__Geom2_172_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternX",1189,G__G__Geom2_172_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternX",1189,G__G__Geom2_172_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_172_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_172_6_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_172_7_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_172_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternX::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_172_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternX::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_172_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternX::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_172_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternX::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_172_2_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_172_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_172_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_172_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_172_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternX::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_172_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternX::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_172_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternX::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_172_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternX::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternX",1189,G__G__Geom2_172_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX),-1,0,1,1,1,0,"u 'TGeoPatternX' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternX",1315,G__G__Geom2_172_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_172_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX),-1,1,1,1,1,0,"u 'TGeoPatternX' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternY(void) {
   /* TGeoPatternY */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY));
   G__memfunc_setup("TGeoPatternY",1190,G__G__Geom2_173_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternY",1190,G__G__Geom2_173_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternY",1190,G__G__Geom2_173_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternY",1190,G__G__Geom2_173_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_173_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_173_6_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_173_7_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_173_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternY::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_173_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternY::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_173_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternY::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_173_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternY::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_173_2_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_173_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_173_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_173_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_173_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternY::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_173_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternY::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_173_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternY::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_173_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternY::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternY",1190,G__G__Geom2_173_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY),-1,0,1,1,1,0,"u 'TGeoPatternY' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternY",1316,G__G__Geom2_173_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_173_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY),-1,1,1,1,1,0,"u 'TGeoPatternY' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternZ(void) {
   /* TGeoPatternZ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ));
   G__memfunc_setup("TGeoPatternZ",1191,G__G__Geom2_174_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternZ",1191,G__G__Geom2_174_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternZ",1191,G__G__Geom2_174_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternZ",1191,G__G__Geom2_174_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_174_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_174_6_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_174_7_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_174_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternZ::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_174_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternZ::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_174_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternZ::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_174_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternZ::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_174_2_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_174_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_174_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_174_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_174_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternZ::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_174_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternZ::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_174_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternZ::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_174_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternZ::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternZ",1191,G__G__Geom2_174_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ),-1,0,1,1,1,0,"u 'TGeoPatternZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternZ",1317,G__G__Geom2_174_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_174_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ),-1,1,1,1,1,0,"u 'TGeoPatternZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternParaX(void) {
   /* TGeoPatternParaX */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX));
   G__memfunc_setup("TGeoPatternParaX",1577,G__G__Geom2_175_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternParaX",1577,G__G__Geom2_175_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternParaX",1577,G__G__Geom2_175_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternParaX",1577,G__G__Geom2_175_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_175_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_175_6_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_175_7_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_175_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternParaX::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_175_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternParaX::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_175_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternParaX::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_175_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternParaX::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_175_2_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_175_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_175_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_175_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_175_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternParaX::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_175_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternParaX::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_175_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternParaX::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_175_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternParaX::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternParaX",1577,G__G__Geom2_175_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX),-1,0,1,1,1,0,"u 'TGeoPatternParaX' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternParaX",1703,G__G__Geom2_175_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_175_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX),-1,1,1,1,1,0,"u 'TGeoPatternParaX' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternParaY(void) {
   /* TGeoPatternParaY */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY));
   G__memfunc_setup("TGeoPatternParaY",1578,G__G__Geom2_176_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternParaY",1578,G__G__Geom2_176_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternParaY",1578,G__G__Geom2_176_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternParaY",1578,G__G__Geom2_176_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_176_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_176_6_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_176_7_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_176_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternParaY::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_176_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternParaY::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_176_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternParaY::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_176_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternParaY::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_176_2_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_176_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_176_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_176_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_176_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternParaY::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_176_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternParaY::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_176_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternParaY::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_176_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternParaY::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternParaY",1578,G__G__Geom2_176_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY),-1,0,1,1,1,0,"u 'TGeoPatternParaY' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternParaY",1704,G__G__Geom2_176_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_176_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY),-1,1,1,1,1,0,"u 'TGeoPatternParaY' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternParaZ(void) {
   /* TGeoPatternParaZ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ));
   G__memfunc_setup("TGeoPatternParaZ",1579,G__G__Geom2_177_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternParaZ",1579,G__G__Geom2_177_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternParaZ",1579,G__G__Geom2_177_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternParaZ",1579,G__G__Geom2_177_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_177_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_177_6_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_177_7_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_177_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternParaZ::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_177_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternParaZ::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_177_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternParaZ::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_177_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternParaZ::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_177_2_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_177_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_177_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_177_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_177_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternParaZ::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_177_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternParaZ::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_177_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternParaZ::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_177_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternParaZ::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternParaZ",1579,G__G__Geom2_177_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ),-1,0,1,1,1,0,"u 'TGeoPatternParaZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternParaZ",1705,G__G__Geom2_177_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_177_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ),-1,1,1,1,1,0,"u 'TGeoPatternParaZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternTrapZ(void) {
   /* TGeoPatternTrapZ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ));
   G__memfunc_setup("TGeoPatternTrapZ",1598,G__G__Geom2_178_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternTrapZ",1598,G__G__Geom2_178_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternTrapZ",1598,G__G__Geom2_178_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternTrapZ",1598,G__G__Geom2_178_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTxz",614,G__G__Geom2_178_5_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTyz",615,G__G__Geom2_178_6_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_178_7_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_178_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_178_9_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_178_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternTrapZ::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_178_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternTrapZ::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_178_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternTrapZ::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_178_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternTrapZ::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_178_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_178_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_178_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_178_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_178_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternTrapZ::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_178_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternTrapZ::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_178_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternTrapZ::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_178_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternTrapZ::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternTrapZ",1598,G__G__Geom2_178_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ),-1,0,1,1,1,0,"u 'TGeoPatternTrapZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternTrapZ",1724,G__G__Geom2_178_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_178_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ),-1,1,1,1,1,0,"u 'TGeoPatternTrapZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternCylR(void) {
   /* TGeoPatternCylR */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR));
   G__memfunc_setup("TGeoPatternCylR",1479,G__G__Geom2_179_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternCylR",1479,G__G__Geom2_179_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternCylR",1479,G__G__Geom2_179_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternCylR",1479,G__G__Geom2_179_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_179_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_179_6_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_179_7_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_179_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternCylR::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_179_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternCylR::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_179_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternCylR::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_179_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternCylR::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_179_2_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_179_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_179_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_179_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_179_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternCylR::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_179_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternCylR::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_179_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternCylR::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_179_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternCylR::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternCylR",1479,G__G__Geom2_179_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR),-1,0,1,1,1,0,"u 'TGeoPatternCylR' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternCylR",1605,G__G__Geom2_179_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_179_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR),-1,1,1,1,1,0,"u 'TGeoPatternCylR' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternCylPhi(void) {
   /* TGeoPatternCylPhi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi));
   G__memfunc_setup("TGeoPatternCylPhi",1686,G__G__Geom2_180_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternCylPhi",1686,G__G__Geom2_180_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternCylPhi",1686,G__G__Geom2_180_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternCylPhi",1686,G__G__Geom2_180_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_180_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_180_6_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_180_7_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_180_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternCylPhi::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_180_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternCylPhi::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_180_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternCylPhi::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_180_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternCylPhi::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_180_2_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_180_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_180_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_180_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_180_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternCylPhi::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_180_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternCylPhi::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_180_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternCylPhi::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_180_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternCylPhi::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternCylPhi",1686,G__G__Geom2_180_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi),-1,0,1,1,1,0,"u 'TGeoPatternCylPhi' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternCylPhi",1812,G__G__Geom2_180_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_180_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi),-1,1,1,1,1,0,"u 'TGeoPatternCylPhi' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternSphR(void) {
   /* TGeoPatternSphR */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR));
   G__memfunc_setup("TGeoPatternSphR",1482,G__G__Geom2_181_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternSphR",1482,G__G__Geom2_181_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternSphR",1482,G__G__Geom2_181_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternSphR",1482,G__G__Geom2_181_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_181_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_181_6_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_181_7_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_181_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternSphR::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_181_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternSphR::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_181_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternSphR::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_181_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternSphR::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_181_2_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_181_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_181_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_181_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_181_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternSphR::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_181_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternSphR::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_181_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternSphR::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_181_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternSphR::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternSphR",1482,G__G__Geom2_181_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR),-1,0,1,1,1,0,"u 'TGeoPatternSphR' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternSphR",1608,G__G__Geom2_181_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_181_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR),-1,1,1,1,1,0,"u 'TGeoPatternSphR' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternSphTheta(void) {
   /* TGeoPatternSphTheta */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta));
   G__memfunc_setup("TGeoPatternSphTheta",1902,G__G__Geom2_182_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternSphTheta",1902,G__G__Geom2_182_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternSphTheta",1902,G__G__Geom2_182_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternSphTheta",1902,G__G__Geom2_182_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_182_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_182_6_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_182_7_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_182_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternSphTheta::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_182_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternSphTheta::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_182_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternSphTheta::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_182_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternSphTheta::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_182_2_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_182_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_182_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_182_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_182_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternSphTheta::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_182_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternSphTheta::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_182_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternSphTheta::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_182_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternSphTheta::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternSphTheta",1902,G__G__Geom2_182_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta),-1,0,1,1,1,0,"u 'TGeoPatternSphTheta' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternSphTheta",2028,G__G__Geom2_182_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_182_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta),-1,1,1,1,1,0,"u 'TGeoPatternSphTheta' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternSphPhi(void) {
   /* TGeoPatternSphPhi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi));
   G__memfunc_setup("TGeoPatternSphPhi",1689,G__G__Geom2_183_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternSphPhi",1689,G__G__Geom2_183_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternSphPhi",1689,G__G__Geom2_183_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi),-1,0,3,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - step",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternSphPhi",1689,G__G__Geom2_183_4_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi),-1,0,4,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - ndivisions "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_183_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_183_6_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__Geom2_183_7_0,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_183_8_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternSphPhi::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_183_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternSphPhi::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_183_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternSphPhi::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_183_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternSphPhi::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_183_2_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_183_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_183_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_183_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_183_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternSphPhi::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_183_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternSphPhi::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_183_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternSphPhi::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_183_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternSphPhi::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternSphPhi",1689,G__G__Geom2_183_0_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi),-1,0,1,1,1,0,"u 'TGeoPatternSphPhi' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternSphPhi",1815,G__G__Geom2_183_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_183_2_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi),-1,1,1,1,1,0,"u 'TGeoPatternSphPhi' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoPatternHoneycomb(void) {
   /* TGeoPatternHoneycomb */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb));
   G__memfunc_setup("TGeoPatternHoneycomb",2033,G__G__Geom2_184_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoPatternHoneycomb",2033,G__G__Geom2_184_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb),-1,0,2,1,1,0,
"U 'TGeoVolume' - 0 - vol i - 'Int_t' 0 - nrows",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_184_3_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - idiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindNode",775,G__G__Geom2_184_4_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,0,"D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_184_5_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoPatternHoneycomb::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_184_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternHoneycomb::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_184_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoPatternHoneycomb::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_184_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoPatternHoneycomb::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_184_9_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_184_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_184_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_184_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_184_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternHoneycomb::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_184_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternHoneycomb::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_184_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoPatternHoneycomb::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_184_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoPatternHoneycomb::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoPatternHoneycomb",2033,G__G__Geom2_184_7_1,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb),-1,0,1,1,1,0,"u 'TGeoPatternHoneycomb' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoPatternHoneycomb",2159,G__G__Geom2_184_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_184_9_1,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb),-1,1,1,1,1,0,"u 'TGeoPatternHoneycomb' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoNodePos(void) {
   /* TGeoNodePos */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos));
   G__memfunc_setup("TGeoNodePos",1063,G__G__Geom2_260_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoNodePos",1063,G__G__Geom2_260_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos),-1,0,1,1,1,0,"i - 'Int_t' 0 - ndaughters",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddDaughter",1085,G__G__Geom2_260_3_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - ind i - 'Int_t' 0 - nindex",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_260_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TGeoMatrix' - 0 - global",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ClearDaughter",1307,G__G__Geom2_260_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ind",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ClearMatrix",1116,G__G__Geom2_260_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDaughter",1108,G__G__Geom2_260_7_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"i - 'Int_t' 0 - ind",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixInd",1200,G__G__Geom2_260_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetName",673,G__G__Geom2_260_9_0,67,-1,-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNdaughters",1333,G__G__Geom2_260_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNode",678,G__G__Geom2_260_1_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUsageCount",1310,G__G__Geom2_260_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HasDaughters",1219,G__G__Geom2_260_3_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsPersistent",1261,G__G__Geom2_260_4_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IncrementUsageCount",1955,G__G__Geom2_260_5_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Map",286,G__G__Geom2_260_6_1,121,-1,-1,0,1,1,1,0,"U 'TGeoNode' - 0 - node",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ResetCount",1036,G__G__Geom2_260_7_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMatrix",929,G__G__Geom2_260_8_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - mat_ind",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPersistency",1477,G__G__Geom2_260_9_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE flag",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Geom2_260_0_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoNodePos::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_260_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodePos::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_260_2_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoNodePos::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_260_3_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoNodePos::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_260_4_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_260_5_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_260_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_260_7_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_260_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodePos::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_260_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoNodePos::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_260_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodePos::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_260_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoNodePos::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoNodePos",1063,G__G__Geom2_260_2_3,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos),-1,0,1,1,1,0,"u 'TGeoNodePos' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoNodePos",1189,G__G__Geom2_260_3_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_260_4_3,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos),-1,1,1,1,1,0,"u 'TGeoNodePos' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatrixCache(void) {
   /* TGeoMatrixCache */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache));
   G__memfunc_setup("IncreaseCache",1278,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoMatrixCache",1464,G__G__Geom2_261_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoMatrixCache",1464,G__G__Geom2_261_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache),-1,0,1,1,1,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_261_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("cd",199,G__G__Geom2_261_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - mindex",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ClearMatrix",1116,G__G__Geom2_261_6_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_261_7_0,121,-1,-1,0,1,1,1,8,"U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_261_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_261_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_261_0_1,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_261_1_1,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_261_2_1,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_261_3_1,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Status",644,G__G__Geom2_261_4_1,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Geom2_261_5_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatrixCache::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_261_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatrixCache::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_261_7_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatrixCache::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_261_8_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatrixCache::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_261_9_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_261_0_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_261_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_261_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_261_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatrixCache::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_261_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatrixCache::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_261_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatrixCache::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_261_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatrixCache::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatrixCache",1464,G__G__Geom2_261_7_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache),-1,0,1,1,1,0,"u 'TGeoMatrixCache' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatrixCache",1590,G__G__Geom2_261_8_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_261_9_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache),-1,1,1,1,1,0,"u 'TGeoMatrixCache' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoNodeArray(void) {
   /* TGeoNodeArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray));
   G__memfunc_setup("TGeoNodeArray",1268,G__G__Geom2_262_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoNodeArray",1268,G__G__Geom2_262_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray),-1,0,2,1,1,0,
"i - 'Int_t' 0 - ndaughters i - 'Int_t' 0 0 size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddDaughter",1085,G__G__Geom2_262_3_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"U 'TGeoNode' - 0 - node i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddNode",655,G__G__Geom2_262_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TGeoNode' - 0 - node",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_262_5_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TGeoMatrix' - 0 - global",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("cd",199,G__G__Geom2_262_6_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - inode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearDaughter",1307,G__G__Geom2_262_7_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearMatrix",1116,G__G__Geom2_262_8_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearNode",877,G__G__Geom2_262_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Compact",711,G__G__Geom2_262_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeleteArray",1106,G__G__Geom2_262_1_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDaughter",1108,G__G__Geom2_262_2_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"i - 'Int_t' 0 - ind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrixInd",1200,G__G__Geom2_262_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNdaughters",1333,G__G__Geom2_262_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNode",678,G__G__Geom2_262_5_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNused",799,G__G__Geom2_262_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSize",699,G__G__Geom2_262_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUsageCount",1310,G__G__Geom2_262_8_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HasDaughters",1219,G__G__Geom2_262_9_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IncreaseArray",1321,G__G__Geom2_262_0_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IncrementUsageCount",1955,G__G__Geom2_262_1_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsPersistent",1261,G__G__Geom2_262_2_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrix",929,G__G__Geom2_262_3_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - mind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPersistency",1477,G__G__Geom2_262_4_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE flag",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_262_5_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoNodeArray::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_262_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodeArray::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_262_7_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoNodeArray::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_262_8_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoNodeArray::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_262_9_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_262_0_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_262_1_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_262_2_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_262_3_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodeArray::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_262_4_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoNodeArray::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_262_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodeArray::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_262_6_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoNodeArray::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoNodeArray",1268,G__G__Geom2_262_7_3,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray),-1,0,1,1,1,0,"u 'TGeoNodeArray' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoNodeArray",1394,G__G__Geom2_262_8_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_262_9_3,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray),-1,1,1,1,1,0,"u 'TGeoNodeArray' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandler(void) {
   /* TGeoMatHandler */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler));
   G__memfunc_setup("SetLocation",1125,G__G__Geom2_263_2_0,121,-1,-1,0,1,1,1,0,"D - 'Double_t' 0 - add",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_263_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_263_4_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_263_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_263_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_263_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_263_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_263_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_263_0_1,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Class",502,G__G__Geom2_263_1_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandler::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_263_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandler::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_263_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandler::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_263_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandler::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_263_5_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_263_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_263_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_263_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_263_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandler::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_263_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandler::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_263_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandler::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_263_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandler::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandler",1485,G__G__Geom2_263_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_263_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),-1,1,1,1,1,0,"u 'TGeoMatHandler' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoCacheState(void) {
   /* TGeoCacheState */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState));
   G__memfunc_setup("TGeoCacheState",1348,G__G__Geom2_264_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoCacheState",1348,G__G__Geom2_264_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState),-1,0,1,1,1,0,"i - 'Int_t' 0 - capacity",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetState",813,G__G__Geom2_264_3_0,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - level i - 'Int_t' 0 - startlevel "
"g - 'Bool_t' 0 - ovlp D - 'Double_t' 0 0 point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetState",801,G__G__Geom2_264_4_0,103,-1,G__defined_typename("Bool_t"),0,2,1,1,8,
"i - 'Int_t' 1 - level D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_264_5_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoCacheState::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_264_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoCacheState::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_264_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoCacheState::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_264_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoCacheState::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_264_9_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_264_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_264_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_264_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_264_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoCacheState::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_264_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoCacheState::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_264_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoCacheState::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_264_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoCacheState::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoCacheState",1348,G__G__Geom2_264_7_1,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState),-1,0,1,1,1,0,"u 'TGeoCacheState' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoCacheState",1474,G__G__Geom2_264_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_264_9_1,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState),-1,1,1,1,1,0,"u 'TGeoCacheState' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoCacheStateDummy(void) {
   /* TGeoCacheStateDummy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy));
   G__memfunc_setup("TGeoCacheStateDummy",1872,G__G__Geom2_265_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoCacheStateDummy",1872,G__G__Geom2_265_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy),-1,0,1,1,1,0,"i - 'Int_t' 0 - capacity",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetState",813,G__G__Geom2_265_3_0,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - level i - 'Int_t' 0 - startlevel "
"g - 'Bool_t' 0 - ovlp D - 'Double_t' 0 0 point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetState",801,G__G__Geom2_265_4_0,103,-1,G__defined_typename("Bool_t"),0,2,1,1,8,
"i - 'Int_t' 1 - level D - 'Double_t' 0 - point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_265_5_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoCacheStateDummy::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_265_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoCacheStateDummy::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_265_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoCacheStateDummy::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_265_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoCacheStateDummy::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_265_9_0,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_265_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_265_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_265_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_265_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoCacheStateDummy::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_265_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoCacheStateDummy::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_265_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoCacheStateDummy::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_265_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoCacheStateDummy::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoCacheStateDummy",1872,G__G__Geom2_265_7_1,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy),-1,0,1,1,1,0,"u 'TGeoCacheStateDummy' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoCacheStateDummy",1998,G__G__Geom2_265_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_265_9_1,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy),-1,1,1,1,1,0,"u 'TGeoCacheStateDummy' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoNodeCache(void) {
   /* TGeoNodeCache */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache));
   G__memfunc_setup("TGeoNodeCache",1225,G__G__Geom2_266_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoNodeCache",1225,G__G__Geom2_266_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache),-1,0,1,1,1,0,"g - 'Bool_t' 0 - nodeid",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoNodeCache",1225,G__G__Geom2_266_3_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache),-1,0,2,1,1,0,
"i - 'Int_t' 0 - size g - 'Bool_t' 0 kFALSE nodeid",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddNode",655,G__G__Geom2_266_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TGeoNode' - 0 - node",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BuildIdArray",1180,G__G__Geom2_266_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CacheId",641,G__G__Geom2_266_6_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"i - 'Int_t' 0 - nindex",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CdCache",635,G__G__Geom2_266_7_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CdNode",557,G__G__Geom2_266_8_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - nodeid",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CdDown",575,G__G__Geom2_266_9_0,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"i - 'Int_t' 0 - index g - 'Bool_t' 0 kTRUE make",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CdTop",474,G__G__Geom2_266_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CdUp",364,G__G__Geom2_266_1_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CleanCache",951,G__G__Geom2_266_2_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearDaughter",1307,G__G__Geom2_266_3_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearNode",877,G__G__Geom2_266_4_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - nindex",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Compact",711,G__G__Geom2_266_5_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FillIdBranch",1154,G__G__Geom2_266_6_1,121,-1,-1,0,2,1,1,0,
"I - 'Int_t' 10 - br i - 'Int_t' 0 0 startlevel",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetIdBranch",1051,G__G__Geom2_266_7_1,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeleteCaches",1178,G__G__Geom2_266_8_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DumpNodes",911,G__G__Geom2_266_9_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranch",878,G__G__Geom2_266_0_2,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchNames",1378,G__G__Geom2_266_1_2,121,-1,-1,0,1,1,1,8,"I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchNumbers",1610,G__G__Geom2_266_2_2,121,-1,-1,0,2,1,1,8,
"I - 'Int_t' 0 - - I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchOnlys",1411,G__G__Geom2_266_3_2,121,-1,-1,0,1,1,1,8,"I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrices",1112,G__G__Geom2_266_4_2,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCurrentMatrix",1656,G__G__Geom2_266_5_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoHMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCurrentNode",1417,G__G__Geom2_266_6_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCurrentNodeId",1590,G__G__Geom2_266_7_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMother",911,G__G__Geom2_266_8_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,8,"i - 'Int_t' 0 1 up",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNode",678,G__G__Geom2_266_9_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStackLevel",1294,G__G__Geom2_266_0_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTopNode",985,G__G__Geom2_266_1_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLevel",792,G__G__Geom2_266_2_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFreeSpace",1166,G__G__Geom2_266_3_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrixPool",1327,G__G__Geom2_266_4_3,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNfree",784,G__G__Geom2_266_5_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNused",799,G__G__Geom2_266_6_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPath",685,G__G__Geom2_266_7_3,67,-1,-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNodeId",851,G__G__Geom2_266_8_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSize",699,G__G__Geom2_266_9_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUsageCount",1310,G__G__Geom2_266_0_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HasIdArray",968,G__G__Geom2_266_1_4,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IncreasePool",1220,G__G__Geom2_266_2_4,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IncrementUsageCount",1955,G__G__Geom2_266_3_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Index",504,G__G__Geom2_266_4_4,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"i - 'Int_t' 0 - nindex",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsDummy",712,G__G__Geom2_266_5_4,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_266_6_4,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_266_7_4,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_266_8_4,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_266_9_4,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_266_0_5,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_266_1_5,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintNode",915,G__G__Geom2_266_2_5,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PushState",929,G__G__Geom2_266_3_5,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"g - 'Bool_t' 0 - ovlp i - 'Int_t' 0 0 startlevel "
"D - 'Double_t' 0 0 point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PopState",816,G__G__Geom2_266_4_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"D - 'Double_t' 0 0 point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PopState",816,G__G__Geom2_266_5_5,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"i - 'Int_t' 0 - level D - 'Double_t' 0 0 point",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PopDummy",827,G__G__Geom2_266_6_5,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 9999 ipop",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Refresh",719,G__G__Geom2_266_7_5,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDefaultLevel",1513,G__G__Geom2_266_8_5,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - level",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPersistency",1477,G__G__Geom2_266_9_5,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Status",644,G__G__Geom2_266_0_6,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Geom2_266_1_6,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoNodeCache::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_266_2_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodeCache::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_266_3_6,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoNodeCache::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_266_4_6,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoNodeCache::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_266_5_6,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_266_6_6,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_266_7_6,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_266_8_6,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_266_9_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodeCache::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_266_0_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoNodeCache::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_266_1_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodeCache::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_266_2_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoNodeCache::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoNodeCache",1225,G__G__Geom2_266_3_7,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache),-1,0,1,1,1,0,"u 'TGeoNodeCache' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoNodeCache",1351,G__G__Geom2_266_4_7,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_266_5_7,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache),-1,1,1,1,1,0,"u 'TGeoNodeCache' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoCacheDummy(void) {
   /* TGeoCacheDummy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy));
   G__memfunc_setup("TGeoCacheDummy",1359,G__G__Geom2_267_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoCacheDummy",1359,G__G__Geom2_267_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy),-1,0,2,1,1,0,
"U 'TGeoNode' - 0 - top g - 'Bool_t' 0 kFALSE nodeid",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CdDown",575,G__G__Geom2_267_3_0,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"i - 'Int_t' 0 - index g - 'Bool_t' 0 kTRUE make",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CdTop",474,G__G__Geom2_267_4_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CdUp",364,G__G__Geom2_267_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CleanCache",951,G__G__Geom2_267_6_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearDaughter",1307,G__G__Geom2_267_7_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearNode",877,G__G__Geom2_267_8_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Compact",711,G__G__Geom2_267_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeleteCaches",1178,G__G__Geom2_267_0_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DumpNodes",911,G__G__Geom2_267_1_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranch",878,G__G__Geom2_267_2_1,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchNames",1378,G__G__Geom2_267_3_1,121,-1,-1,0,1,1,1,8,"I - 'Int_t' 0 - names",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchNumbers",1610,G__G__Geom2_267_4_1,121,-1,-1,0,2,1,1,8,
"I - 'Int_t' 0 - copyNumbers I - 'Int_t' 0 - volumeNumbers",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBranchOnlys",1411,G__G__Geom2_267_5_1,121,-1,-1,0,1,1,1,8,"I - 'Int_t' 0 - isonly",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCurrentMatrix",1656,G__G__Geom2_267_6_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoHMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCurrentNode",1417,G__G__Geom2_267_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetFreeSpace",1166,G__G__Geom2_267_8_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrices",1112,G__G__Geom2_267_9_1,89,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMother",911,G__G__Geom2_267_0_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,1,1,1,8,"i - 'Int_t' 0 1 up",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNode",678,G__G__Geom2_267_1_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNfree",784,G__G__Geom2_267_2_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNused",799,G__G__Geom2_267_3_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPath",685,G__G__Geom2_267_4_2,67,-1,-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNodeId",851,G__G__Geom2_267_5_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUsageCount",1310,G__G__Geom2_267_6_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IncreasePool",1220,G__G__Geom2_267_7_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IncrementUsageCount",1955,G__G__Geom2_267_8_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsDummy",712,G__G__Geom2_267_9_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_267_0_3,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_267_1_3,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_267_2_3,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_267_3_3,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_267_4_3,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_267_5_3,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintNode",915,G__G__Geom2_267_6_3,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Refresh",719,G__G__Geom2_267_7_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPersistency",1477,G__G__Geom2_267_8_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Status",644,G__G__Geom2_267_9_3,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Geom2_267_0_4,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoCacheDummy::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_267_1_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoCacheDummy::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_267_2_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoCacheDummy::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_267_3_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoCacheDummy::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_267_4_4,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_267_5_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_267_6_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_267_7_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_267_8_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoCacheDummy::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_267_9_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoCacheDummy::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_267_0_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoCacheDummy::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_267_1_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoCacheDummy::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoCacheDummy",1359,G__G__Geom2_267_2_5,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy),-1,0,1,1,1,0,"u 'TGeoCacheDummy' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoCacheDummy",1485,G__G__Geom2_267_3_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_267_4_5,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy),-1,1,1,1,1,0,"u 'TGeoCacheDummy' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoNodeObjArray(void) {
   /* TGeoNodeObjArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray));
   G__memfunc_setup("TGeoNodeObjArray",1551,G__G__Geom2_268_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeoNodeObjArray",1551,G__G__Geom2_268_2_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray),-1,0,1,1,1,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddDaughter",1085,G__G__Geom2_268_3_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"U 'TGeoNode' - 0 - node i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddNode",655,G__G__Geom2_268_4_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TGeoNode' - 0 - node",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_268_5_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TGeoMatrix' - 0 - global",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("cd",199,G__G__Geom2_268_6_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - inode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearDaughter",1307,G__G__Geom2_268_7_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearMatrix",1116,G__G__Geom2_268_8_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearNode",877,G__G__Geom2_268_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrixInd",1200,G__G__Geom2_268_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDaughter",1108,G__G__Geom2_268_1_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"i - 'Int_t' 0 - ind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNdaughters",1333,G__G__Geom2_268_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNode",678,G__G__Geom2_268_3_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUsageCount",1310,G__G__Geom2_268_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("HasDaughters",1219,G__G__Geom2_268_5_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IncreaseArray",1321,G__G__Geom2_268_6_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IncrementUsageCount",1955,G__G__Geom2_268_7_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsPersistent",1261,G__G__Geom2_268_8_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPersistency",1477,G__G__Geom2_268_9_1,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE flag",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrix",929,G__G__Geom2_268_0_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - mind",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_268_1_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoNodeObjArray::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_268_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodeObjArray::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_268_3_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoNodeObjArray::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_268_4_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoNodeObjArray::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_268_5_2,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_268_6_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_268_7_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_268_8_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_268_9_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodeObjArray::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_268_0_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoNodeObjArray::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_268_1_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoNodeObjArray::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_268_2_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoNodeObjArray::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoNodeObjArray",1551,G__G__Geom2_268_3_3,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray),-1,0,1,1,1,0,"u 'TGeoNodeObjArray' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoNodeObjArray",1677,G__G__Geom2_268_4_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_268_5_3,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray),-1,1,1,1,1,0,"u 'TGeoNodeObjArray' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerId(void) {
   /* TGeoMatHandlerId */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerId));
   G__memfunc_setup("TGeoMatHandlerId",1532,G__G__Geom2_269_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerId),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_269_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - - U 'TGeoMatrix' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_269_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - - U 'TGeoHMatrix' - 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_269_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_269_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_269_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_269_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_269_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_269_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_269_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerId::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_269_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerId::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_269_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerId::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_269_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerId::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_269_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_269_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_269_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_269_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_269_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerId::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_269_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerId::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_269_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerId::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_269_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerId::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerId",1532,G__G__Geom2_269_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerId),-1,0,1,1,1,0,"u 'TGeoMatHandlerId' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerId",1658,G__G__Geom2_269_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_269_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerId),-1,1,1,1,1,0,"u 'TGeoMatHandlerId' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerX(void) {
   /* TGeoMatHandlerX */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerX));
   G__memfunc_setup("TGeoMatHandlerX",1447,G__G__Geom2_270_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerX),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_270_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_270_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_270_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_270_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_270_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_270_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_270_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_270_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_270_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerX::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_270_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerX::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_270_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerX::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_270_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerX::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_270_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_270_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_270_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_270_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_270_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerX::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_270_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerX::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_270_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerX::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_270_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerX::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerX",1447,G__G__Geom2_270_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerX),-1,0,1,1,1,0,"u 'TGeoMatHandlerX' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerX",1573,G__G__Geom2_270_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_270_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerX),-1,1,1,1,1,0,"u 'TGeoMatHandlerX' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerY(void) {
   /* TGeoMatHandlerY */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerY));
   G__memfunc_setup("TGeoMatHandlerY",1448,G__G__Geom2_271_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerY),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_271_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_271_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_271_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_271_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_271_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_271_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_271_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_271_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_271_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerY::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_271_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerY::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_271_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerY::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_271_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerY::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_271_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_271_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_271_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_271_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_271_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerY::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_271_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerY::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_271_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerY::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_271_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerY::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerY",1448,G__G__Geom2_271_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerY),-1,0,1,1,1,0,"u 'TGeoMatHandlerY' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerY",1574,G__G__Geom2_271_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_271_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerY),-1,1,1,1,1,0,"u 'TGeoMatHandlerY' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerZ(void) {
   /* TGeoMatHandlerZ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerZ));
   G__memfunc_setup("TGeoMatHandlerZ",1449,G__G__Geom2_272_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerZ),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_272_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_272_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_272_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_272_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_272_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_272_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_272_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_272_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_272_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerZ::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_272_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerZ::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_272_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerZ::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_272_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerZ::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_272_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_272_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_272_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_272_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_272_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerZ::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_272_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerZ::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_272_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerZ::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_272_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerZ::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerZ",1449,G__G__Geom2_272_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerZ),-1,0,1,1,1,0,"u 'TGeoMatHandlerZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerZ",1575,G__G__Geom2_272_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_272_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerZ),-1,1,1,1,1,0,"u 'TGeoMatHandlerZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerXY(void) {
   /* TGeoMatHandlerXY */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXY));
   G__memfunc_setup("TGeoMatHandlerXY",1536,G__G__Geom2_273_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXY),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_273_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_273_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_273_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_273_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_273_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_273_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_273_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_273_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_273_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerXY::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_273_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerXY::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_273_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerXY::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_273_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerXY::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_273_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_273_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_273_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_273_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_273_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerXY::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_273_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerXY::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_273_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerXY::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_273_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerXY::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerXY",1536,G__G__Geom2_273_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXY),-1,0,1,1,1,0,"u 'TGeoMatHandlerXY' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerXY",1662,G__G__Geom2_273_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_273_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXY),-1,1,1,1,1,0,"u 'TGeoMatHandlerXY' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerXZ(void) {
   /* TGeoMatHandlerXZ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXZ));
   G__memfunc_setup("TGeoMatHandlerXZ",1537,G__G__Geom2_274_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXZ),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_274_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_274_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_274_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_274_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_274_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_274_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_274_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_274_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_274_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerXZ::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_274_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerXZ::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_274_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerXZ::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_274_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerXZ::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_274_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_274_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_274_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_274_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_274_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerXZ::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_274_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerXZ::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_274_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerXZ::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_274_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerXZ::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerXZ",1537,G__G__Geom2_274_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXZ),-1,0,1,1,1,0,"u 'TGeoMatHandlerXZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerXZ",1663,G__G__Geom2_274_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_274_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXZ),-1,1,1,1,1,0,"u 'TGeoMatHandlerXZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerYZ(void) {
   /* TGeoMatHandlerYZ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerYZ));
   G__memfunc_setup("TGeoMatHandlerYZ",1538,G__G__Geom2_275_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerYZ),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_275_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_275_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_275_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_275_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_275_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_275_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_275_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_275_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_275_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerYZ::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_275_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerYZ::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_275_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerYZ::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_275_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerYZ::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_275_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_275_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_275_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_275_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_275_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerYZ::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_275_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerYZ::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_275_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerYZ::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_275_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerYZ::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerYZ",1538,G__G__Geom2_275_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerYZ),-1,0,1,1,1,0,"u 'TGeoMatHandlerYZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerYZ",1664,G__G__Geom2_275_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_275_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerYZ),-1,1,1,1,1,0,"u 'TGeoMatHandlerYZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerXYZ(void) {
   /* TGeoMatHandlerXYZ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXYZ));
   G__memfunc_setup("TGeoMatHandlerXYZ",1626,G__G__Geom2_276_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXYZ),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_276_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_276_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_276_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_276_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_276_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_276_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_276_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_276_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_276_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerXYZ::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_276_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerXYZ::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_276_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerXYZ::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_276_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerXYZ::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_276_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_276_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_276_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_276_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_276_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerXYZ::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_276_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerXYZ::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_276_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerXYZ::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_276_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerXYZ::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerXYZ",1626,G__G__Geom2_276_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXYZ),-1,0,1,1,1,0,"u 'TGeoMatHandlerXYZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerXYZ",1752,G__G__Geom2_276_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_276_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXYZ),-1,1,1,1,1,0,"u 'TGeoMatHandlerXYZ' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerRot(void) {
   /* TGeoMatHandlerRot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRot));
   G__memfunc_setup("TGeoMatHandlerRot",1668,G__G__Geom2_277_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRot),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_277_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_277_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_277_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_277_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_277_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_277_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_277_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_277_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_277_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerRot::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_277_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRot::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_277_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerRot::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_277_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerRot::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_277_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_277_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_277_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_277_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_277_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRot::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_277_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerRot::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_277_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRot::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_277_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerRot::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerRot",1668,G__G__Geom2_277_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRot),-1,0,1,1,1,0,"u 'TGeoMatHandlerRot' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerRot",1794,G__G__Geom2_277_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_277_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRot),-1,1,1,1,1,0,"u 'TGeoMatHandlerRot' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerRotTr(void) {
   /* TGeoMatHandlerRotTr */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTr));
   G__memfunc_setup("TGeoMatHandlerRotTr",1866,G__G__Geom2_278_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTr),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_278_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_278_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_278_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_278_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_278_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_278_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_278_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_278_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_278_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerRotTr::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_278_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRotTr::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_278_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerRotTr::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_278_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerRotTr::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_278_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_278_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_278_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_278_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_278_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRotTr::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_278_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerRotTr::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_278_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRotTr::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_278_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerRotTr::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerRotTr",1866,G__G__Geom2_278_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTr),-1,0,1,1,1,0,"u 'TGeoMatHandlerRotTr' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerRotTr",1992,G__G__Geom2_278_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_278_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTr),-1,1,1,1,1,0,"u 'TGeoMatHandlerRotTr' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerScl(void) {
   /* TGeoMatHandlerScl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerScl));
   G__memfunc_setup("TGeoMatHandlerScl",1649,G__G__Geom2_279_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerScl),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_279_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_279_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_279_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_279_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_279_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_279_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_279_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_279_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_279_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerScl::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_279_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerScl::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_279_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerScl::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_279_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerScl::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_279_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_279_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_279_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_279_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_279_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerScl::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_279_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerScl::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_279_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerScl::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_279_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerScl::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerScl",1649,G__G__Geom2_279_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerScl),-1,0,1,1,1,0,"u 'TGeoMatHandlerScl' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerScl",1775,G__G__Geom2_279_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_279_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerScl),-1,1,1,1,1,0,"u 'TGeoMatHandlerScl' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerTrScl(void) {
   /* TGeoMatHandlerTrScl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerTrScl));
   G__memfunc_setup("TGeoMatHandlerTrScl",1847,G__G__Geom2_280_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerTrScl),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_280_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_280_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_280_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_280_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_280_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_280_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_280_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_280_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_280_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerTrScl::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_280_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerTrScl::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_280_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerTrScl::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_280_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerTrScl::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_280_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_280_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_280_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_280_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_280_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerTrScl::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_280_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerTrScl::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_280_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerTrScl::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_280_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerTrScl::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerTrScl",1847,G__G__Geom2_280_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerTrScl),-1,0,1,1,1,0,"u 'TGeoMatHandlerTrScl' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerTrScl",1973,G__G__Geom2_280_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_280_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerTrScl),-1,1,1,1,1,0,"u 'TGeoMatHandlerTrScl' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerRotScl(void) {
   /* TGeoMatHandlerRotScl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotScl));
   G__memfunc_setup("TGeoMatHandlerRotScl",1958,G__G__Geom2_281_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotScl),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_281_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_281_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_281_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_281_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_281_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_281_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_281_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_281_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_281_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerRotScl::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_281_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRotScl::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_281_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerRotScl::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_281_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerRotScl::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_281_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_281_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_281_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_281_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_281_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRotScl::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_281_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerRotScl::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_281_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRotScl::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_281_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerRotScl::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerRotScl",1958,G__G__Geom2_281_2_2,(int)('i'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotScl),-1,0,1,1,1,0,"u 'TGeoMatHandlerRotScl' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerRotScl",2084,G__G__Geom2_281_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_281_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotScl),-1,1,1,1,1,0,"u 'TGeoMatHandlerRotScl' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeoMatHandlerRotTrScl(void) {
   /* TGeoMatHandlerRotTrScl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTrScl));
   G__memfunc_setup("TGeoMatHandlerRotTrScl",2156,G__G__Geom2_282_1_0,105,G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTrScl),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddMatrix",894,G__G__Geom2_282_2_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - to U 'TGeoMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__Geom2_282_3_0,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - from U 'TGeoHMatrix' - 0 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMaster",1306,G__G__Geom2_282_4_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterVect",1708,G__G__Geom2_282_5_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocal",1306,G__G__Geom2_282_6_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalVect",1708,G__G__Geom2_282_7_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("LocalToMasterBomb",1690,G__G__Geom2_282_8_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("MasterToLocalBomb",1690,G__G__Geom2_282_9_0,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 10 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Geom2_282_0_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeoMatHandlerRotTrScl::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Geom2_282_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRotTrScl::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Geom2_282_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeoMatHandlerRotTrScl::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Geom2_282_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeoMatHandlerRotTrScl::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Geom2_282_4_1,85,G__get_linked_tagnum(&G__G__Geom2LN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Geom2_282_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Geom2_282_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Geom2_282_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Geom2_282_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRotTrScl::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Geom2_282_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerRotTrScl::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Geom2_282_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeoMatHandlerRotTrScl::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Geom2_282_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeoMatHandlerRotTrScl::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeoMatHandlerRotTrScl",2156,G__G__Geom2_282_2_2,(int)('i'),
G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTrScl),-1,0,1,1,1,0,"u 'TGeoMatHandlerRotTrScl' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeoMatHandlerRotTrScl",2282,G__G__Geom2_282_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Geom2_282_4_2,(int)('u'),G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTrScl),-1,1,1,1,1,0,"u 'TGeoMatHandlerRotTrScl' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Geom2() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Geom2() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Geom2() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__Geom2LN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatrix = { "TGeoMatrix" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoHMatrix = { "TGeoHMatrix" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoVolume = { "TGeoVolume" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoNode = { "TGeoNode" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternFinder = { "TGeoPatternFinder" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternX = { "TGeoPatternX" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternY = { "TGeoPatternY" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternZ = { "TGeoPatternZ" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternParaX = { "TGeoPatternParaX" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternParaY = { "TGeoPatternParaY" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternParaZ = { "TGeoPatternParaZ" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternTrapZ = { "TGeoPatternTrapZ" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternCylR = { "TGeoPatternCylR" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternCylPhi = { "TGeoPatternCylPhi" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternSphR = { "TGeoPatternSphR" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternSphTheta = { "TGeoPatternSphTheta" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternSphPhi = { "TGeoPatternSphPhi" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoPatternHoneycomb = { "TGeoPatternHoneycomb" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TBits = { "TBits" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoNodePos = { "TGeoNodePos" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatrixCache = { "TGeoMatrixCache" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoNodeArray = { "TGeoNodeArray" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandler = { "TGeoMatHandler" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoCacheState = { "TGeoCacheState" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoCacheStateDummy = { "TGeoCacheStateDummy" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoNodeCache = { "TGeoNodeCache" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoCacheDummy = { "TGeoCacheDummy" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoNodeObjArray = { "TGeoNodeObjArray" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerId = { "TGeoMatHandlerId" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerX = { "TGeoMatHandlerX" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerY = { "TGeoMatHandlerY" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerZ = { "TGeoMatHandlerZ" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerXY = { "TGeoMatHandlerXY" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerXZ = { "TGeoMatHandlerXZ" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerYZ = { "TGeoMatHandlerYZ" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerXYZ = { "TGeoMatHandlerXYZ" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerRot = { "TGeoMatHandlerRot" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerRotTr = { "TGeoMatHandlerRotTr" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerScl = { "TGeoMatHandlerScl" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerTrScl = { "TGeoMatHandlerTrScl" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerRotScl = { "TGeoMatHandlerRotScl" , 99 , -1 };
G__linked_taginfo G__G__Geom2LN_TGeoMatHandlerRotTrScl = { "TGeoMatHandlerRotTrScl" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Geom2() {
  G__G__Geom2LN_TClass.tagnum = -1 ;
  G__G__Geom2LN_TBuffer.tagnum = -1 ;
  G__G__Geom2LN_TMemberInspector.tagnum = -1 ;
  G__G__Geom2LN_TObject.tagnum = -1 ;
  G__G__Geom2LN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__Geom2LN_TObjArray.tagnum = -1 ;
  G__G__Geom2LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__Geom2LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Geom2LN_TString.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatrix.tagnum = -1 ;
  G__G__Geom2LN_TGeoHMatrix.tagnum = -1 ;
  G__G__Geom2LN_TGeoVolume.tagnum = -1 ;
  G__G__Geom2LN_TGeoNode.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternFinder.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternX.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternY.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternZ.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternParaX.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternParaY.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternParaZ.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternTrapZ.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternCylR.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternCylPhi.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternSphR.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternSphTheta.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternSphPhi.tagnum = -1 ;
  G__G__Geom2LN_TGeoPatternHoneycomb.tagnum = -1 ;
  G__G__Geom2LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__Geom2LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Geom2LN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__Geom2LN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__Geom2LN_TBits.tagnum = -1 ;
  G__G__Geom2LN_TGeoNodePos.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatrixCache.tagnum = -1 ;
  G__G__Geom2LN_TGeoNodeArray.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandler.tagnum = -1 ;
  G__G__Geom2LN_TGeoCacheState.tagnum = -1 ;
  G__G__Geom2LN_TGeoCacheStateDummy.tagnum = -1 ;
  G__G__Geom2LN_TGeoNodeCache.tagnum = -1 ;
  G__G__Geom2LN_TGeoCacheDummy.tagnum = -1 ;
  G__G__Geom2LN_TGeoNodeObjArray.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerId.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerX.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerY.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerZ.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerXY.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerXZ.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerYZ.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerXYZ.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerRot.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerRotTr.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerScl.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerTrScl.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerRotScl.tagnum = -1 ;
  G__G__Geom2LN_TGeoMatHandlerRotTrScl.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Geom2() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__Geom2LN_TClass);
   G__get_linked_tagnum(&G__G__Geom2LN_TBuffer);
   G__get_linked_tagnum(&G__G__Geom2LN_TMemberInspector);
   G__get_linked_tagnum(&G__G__Geom2LN_TObject);
   G__get_linked_tagnum(&G__G__Geom2LN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__G__Geom2LN_TObjArray);
   G__get_linked_tagnum(&G__G__Geom2LN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__Geom2LN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__Geom2LN_TString);
   G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrix);
   G__get_linked_tagnum(&G__G__Geom2LN_TGeoHMatrix);
   G__get_linked_tagnum(&G__G__Geom2LN_TGeoVolume);
   G__get_linked_tagnum(&G__G__Geom2LN_TGeoNode);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternFinder),sizeof(TGeoPatternFinder),-1,324864,"patterns to divide volumes",G__setup_memvarTGeoPatternFinder,G__setup_memfuncTGeoPatternFinder);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternX),sizeof(TGeoPatternX),-1,324864,"X division pattern",G__setup_memvarTGeoPatternX,G__setup_memfuncTGeoPatternX);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternY),sizeof(TGeoPatternY),-1,324864,"Y division pattern",G__setup_memvarTGeoPatternY,G__setup_memfuncTGeoPatternY);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternZ),sizeof(TGeoPatternZ),-1,324864,"Z division pattern",G__setup_memvarTGeoPatternZ,G__setup_memfuncTGeoPatternZ);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaX),sizeof(TGeoPatternParaX),-1,324864,"Para X division pattern",G__setup_memvarTGeoPatternParaX,G__setup_memfuncTGeoPatternParaX);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaY),sizeof(TGeoPatternParaY),-1,324864,"Para Y division pattern",G__setup_memvarTGeoPatternParaY,G__setup_memfuncTGeoPatternParaY);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternParaZ),sizeof(TGeoPatternParaZ),-1,324864,"Para Z division pattern",G__setup_memvarTGeoPatternParaZ,G__setup_memfuncTGeoPatternParaZ);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternTrapZ),sizeof(TGeoPatternTrapZ),-1,324864,"Trap od Gtra Z division pattern",G__setup_memvarTGeoPatternTrapZ,G__setup_memfuncTGeoPatternTrapZ);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylR),sizeof(TGeoPatternCylR),-1,324864,"Cylindrical R division pattern",G__setup_memvarTGeoPatternCylR,G__setup_memfuncTGeoPatternCylR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternCylPhi),sizeof(TGeoPatternCylPhi),-1,324864,"Cylindrical phi division pattern",G__setup_memvarTGeoPatternCylPhi,G__setup_memfuncTGeoPatternCylPhi);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphR),sizeof(TGeoPatternSphR),-1,324864,"spherical R division pattern",G__setup_memvarTGeoPatternSphR,G__setup_memfuncTGeoPatternSphR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphTheta),sizeof(TGeoPatternSphTheta),-1,324864,"spherical theta division pattern",G__setup_memvarTGeoPatternSphTheta,G__setup_memfuncTGeoPatternSphTheta);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternSphPhi),sizeof(TGeoPatternSphPhi),-1,324864,"Spherical phi division pattern",G__setup_memvarTGeoPatternSphPhi,G__setup_memfuncTGeoPatternSphPhi);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoPatternHoneycomb),sizeof(TGeoPatternHoneycomb),-1,324864,"pattern for honeycomb divisions",G__setup_memvarTGeoPatternHoneycomb,G__setup_memfuncTGeoPatternHoneycomb);
   G__get_linked_tagnum(&G__G__Geom2LN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum(&G__G__Geom2LN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__Geom2LN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum(&G__G__Geom2LN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__Geom2LN_TBits);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodePos),sizeof(TGeoNodePos),-1,324864,"the physical nodes",G__setup_memvarTGeoNodePos,G__setup_memfuncTGeoNodePos);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatrixCache),sizeof(TGeoMatrixCache),-1,296192,"cache of compressed global matrices",G__setup_memvarTGeoMatrixCache,G__setup_memfuncTGeoMatrixCache);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeArray),sizeof(TGeoNodeArray),-1,324864,"array of cached physical nodes",G__setup_memvarTGeoNodeArray,G__setup_memfuncTGeoNodeArray);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandler),sizeof(TGeoMatHandler),-1,263432,"global matrix cache handler",G__setup_memvarTGeoMatHandler,G__setup_memfuncTGeoMatHandler);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheState),sizeof(TGeoCacheState),-1,324864,"class storing the cache state",G__setup_memvarTGeoCacheState,G__setup_memfuncTGeoCacheState);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheStateDummy),sizeof(TGeoCacheStateDummy),-1,324864,"class storing the cache state",G__setup_memvarTGeoCacheStateDummy,G__setup_memfuncTGeoCacheStateDummy);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeCache),sizeof(TGeoNodeCache),-1,296192,"cache of reusable physical nodes",G__setup_memvarTGeoNodeCache,G__setup_memfuncTGeoNodeCache);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoCacheDummy),sizeof(TGeoCacheDummy),-1,296192,"dummy cache of physical nodes",G__setup_memvarTGeoCacheDummy,G__setup_memfuncTGeoCacheDummy);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoNodeObjArray),sizeof(TGeoNodeObjArray),-1,324864,"array of physical nodes objects",G__setup_memvarTGeoNodeObjArray,G__setup_memfuncTGeoNodeObjArray);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerId),sizeof(TGeoMatHandlerId),-1,263424,"global matrix cache handler id",G__setup_memvarTGeoMatHandlerId,G__setup_memfuncTGeoMatHandlerId);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerX),sizeof(TGeoMatHandlerX),-1,263424,"global matrix cache handler X",G__setup_memvarTGeoMatHandlerX,G__setup_memfuncTGeoMatHandlerX);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerY),sizeof(TGeoMatHandlerY),-1,263424,"global matrix cache handler Y",G__setup_memvarTGeoMatHandlerY,G__setup_memfuncTGeoMatHandlerY);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerZ),sizeof(TGeoMatHandlerZ),-1,263424,"global matrix cache handler Z",G__setup_memvarTGeoMatHandlerZ,G__setup_memfuncTGeoMatHandlerZ);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXY),sizeof(TGeoMatHandlerXY),-1,263424,"global matrix cache handler XY",G__setup_memvarTGeoMatHandlerXY,G__setup_memfuncTGeoMatHandlerXY);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXZ),sizeof(TGeoMatHandlerXZ),-1,263424,"global matrix cache handler XZ",G__setup_memvarTGeoMatHandlerXZ,G__setup_memfuncTGeoMatHandlerXZ);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerYZ),sizeof(TGeoMatHandlerYZ),-1,263424,"global matrix cache handler YZ",G__setup_memvarTGeoMatHandlerYZ,G__setup_memfuncTGeoMatHandlerYZ);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerXYZ),sizeof(TGeoMatHandlerXYZ),-1,263424,"global matrix cache handler XYZ",G__setup_memvarTGeoMatHandlerXYZ,G__setup_memfuncTGeoMatHandlerXYZ);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRot),sizeof(TGeoMatHandlerRot),-1,263424,"global matrix cache handler rot",G__setup_memvarTGeoMatHandlerRot,G__setup_memfuncTGeoMatHandlerRot);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTr),sizeof(TGeoMatHandlerRotTr),-1,263424,"global matrix cache handler rot-tr",G__setup_memvarTGeoMatHandlerRotTr,G__setup_memfuncTGeoMatHandlerRotTr);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerScl),sizeof(TGeoMatHandlerScl),-1,263424,"global matrix cache handler scale",G__setup_memvarTGeoMatHandlerScl,G__setup_memfuncTGeoMatHandlerScl);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerTrScl),sizeof(TGeoMatHandlerTrScl),-1,263424,"global matrix cache handler tr-scale",G__setup_memvarTGeoMatHandlerTrScl,G__setup_memfuncTGeoMatHandlerTrScl);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotScl),sizeof(TGeoMatHandlerRotScl),-1,263424,"global matrix cache handler rot-scale",G__setup_memvarTGeoMatHandlerRotScl,G__setup_memfuncTGeoMatHandlerRotScl);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__Geom2LN_TGeoMatHandlerRotTrScl),sizeof(TGeoMatHandlerRotTrScl),-1,263424,"global matrix cache handler rot-tr-scale",G__setup_memvarTGeoMatHandlerRotTrScl,G__setup_memfuncTGeoMatHandlerRotTrScl);
}
extern "C" void G__cpp_setupG__Geom2(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Geom2()");
  G__set_cpp_environmentG__Geom2();
  G__cpp_setup_tagtableG__Geom2();

  G__cpp_setup_inheritanceG__Geom2();

  G__cpp_setup_typetableG__Geom2();

  G__cpp_setup_memvarG__Geom2();

  G__cpp_setup_memfuncG__Geom2();
  G__cpp_setup_globalG__Geom2();
  G__cpp_setup_funcG__Geom2();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Geom2();
  return;
}
class G__cpp_setup_initG__Geom2 {
  public:
    G__cpp_setup_initG__Geom2() { G__add_setup_func("G__Geom2",(G__incsetup)(&G__cpp_setupG__Geom2)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Geom2() { G__remove_setup_func("G__Geom2"); }
};
G__cpp_setup_initG__Geom2 G__cpp_setup_initializerG__Geom2;

