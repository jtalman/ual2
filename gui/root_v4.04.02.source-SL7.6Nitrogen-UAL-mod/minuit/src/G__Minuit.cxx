//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:27:29 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__Minuit.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TLinearFitter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TLinearFitter_IsA(const void*);
   static void *new_TLinearFitter(void *p = 0);
   static void *newArray_TLinearFitter(Long_t size);
   static void delete_TLinearFitter(void *p);
   static void deleteArray_TLinearFitter(void *p);
   static void destruct_TLinearFitter(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TLinearFitter*)
   {
      ::TLinearFitter *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TLinearFitter", ::TLinearFitter::Class_Version(), "minuit/inc/TLinearFitter.h", 159,
                  typeid(::TLinearFitter), DefineBehavior(ptr, ptr),
                  &::TLinearFitter::Dictionary, &TLinearFitter_IsA, 4,
                  sizeof(::TLinearFitter) );
      instance.SetNew(&new_TLinearFitter);
      instance.SetNewArray(&newArray_TLinearFitter);
      instance.SetDelete(&delete_TLinearFitter);
      instance.SetDeleteArray(&deleteArray_TLinearFitter);
      instance.SetDestructor(&destruct_TLinearFitter);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TLinearFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMinuit_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMinuit_IsA(const void*);
   static void *new_TMinuit(void *p = 0);
   static void *newArray_TMinuit(Long_t size);
   static void delete_TMinuit(void *p);
   static void deleteArray_TMinuit(void *p);
   static void destruct_TMinuit(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMinuit*)
   {
      ::TMinuit *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMinuit", ::TMinuit::Class_Version(), "minuit/inc/TMinuit.h", 34,
                  typeid(::TMinuit), DefineBehavior(ptr, ptr),
                  &::TMinuit::Dictionary, &TMinuit_IsA, 4,
                  sizeof(::TMinuit) );
      instance.SetNew(&new_TMinuit);
      instance.SetNewArray(&newArray_TMinuit);
      instance.SetDelete(&delete_TMinuit);
      instance.SetDeleteArray(&deleteArray_TMinuit);
      instance.SetDestructor(&destruct_TMinuit);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMinuit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TFitter_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TFitter_IsA(const void*);
   static void *new_TFitter(void *p = 0);
   static void *newArray_TFitter(Long_t size);
   static void delete_TFitter(void *p);
   static void deleteArray_TFitter(void *p);
   static void destruct_TFitter(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TFitter*)
   {
      ::TFitter *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TFitter", ::TFitter::Class_Version(), "minuit/inc/TFitter.h", 30,
                  typeid(::TFitter), DefineBehavior(ptr, ptr),
                  &::TFitter::Dictionary, &TFitter_IsA, 4,
                  sizeof(::TFitter) );
      instance.SetNew(&new_TFitter);
      instance.SetNewArray(&newArray_TFitter);
      instance.SetDelete(&delete_TFitter);
      instance.SetDeleteArray(&deleteArray_TFitter);
      instance.SetDestructor(&destruct_TFitter);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TLinearFitter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLinearFitter::Class_Name()
{
   return "TLinearFitter";
}

//______________________________________________________________________________
const char *TLinearFitter::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TLinearFitter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLinearFitter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TLinearFitter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLinearFitter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TLinearFitter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLinearFitter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TLinearFitter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMinuit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMinuit::Class_Name()
{
   return "TMinuit";
}

//______________________________________________________________________________
const char *TMinuit::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMinuit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMinuit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMinuit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMinuit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMinuit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMinuit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMinuit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TFitter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TFitter::Class_Name()
{
   return "TFitter";
}

//______________________________________________________________________________
const char *TFitter::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TFitter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TFitter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TFitter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TFitter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TFitter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TFitter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TFitter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void R__TMinuit_fCpnam(TBuffer &R__b, void *R__p, int R__n)
{
   TString** fCpnam = (TString**)R__p;
   if (R__b.IsReading()) {
      delete [] *fCpnam;
      if (!R__n) return;
      *fCpnam = new TString[R__n];
      TString* R__s = *fCpnam;
      for (Int_t R__l = 0; R__l < R__n; R__l++) {
         R__s[R__l].Streamer(R__b);
      }
   } else {
      TString* R__s = *fCpnam;
      for (Int_t R__l = 0; R__l < R__n; R__l++) {
         R__s[R__l].Streamer(R__b);
      }
   }
}

//______________________________________________________________________________
void TMinuit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMinuit.

   if (R__b.IsReading()) {
      TMinuit::Class()->ReadBuffer(R__b, this);
   } else {
      TMinuit::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TMinuit::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMinuit.

      TClass *R__cl = ::TMinuit::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNpfix", &fNpfix);
      R__insp.Inspect(R__cl, R__parent, "fEmpty", &fEmpty);
      R__insp.Inspect(R__cl, R__parent, "fMaxpar", &fMaxpar);
      R__insp.Inspect(R__cl, R__parent, "fMaxint", &fMaxint);
      R__insp.Inspect(R__cl, R__parent, "fNpar", &fNpar);
      R__insp.Inspect(R__cl, R__parent, "fMaxext", &fMaxext);
      R__insp.Inspect(R__cl, R__parent, "fMaxIterations", &fMaxIterations);
      R__insp.Inspect(R__cl, R__parent, "fMaxpar5", &fMaxpar5);
      R__insp.Inspect(R__cl, R__parent, "fMaxcpt", &fMaxcpt);
      R__insp.Inspect(R__cl, R__parent, "fMaxpar2", &fMaxpar2);
      R__insp.Inspect(R__cl, R__parent, "fMaxpar1", &fMaxpar1);
      R__insp.Inspect(R__cl, R__parent, "fAmin", &fAmin);
      R__insp.Inspect(R__cl, R__parent, "fUp", &fUp);
      R__insp.Inspect(R__cl, R__parent, "fEDM", &fEDM);
      R__insp.Inspect(R__cl, R__parent, "fFval3", &fFval3);
      R__insp.Inspect(R__cl, R__parent, "fEpsi", &fEpsi);
      R__insp.Inspect(R__cl, R__parent, "fApsi", &fApsi);
      R__insp.Inspect(R__cl, R__parent, "fDcovar", &fDcovar);
      R__insp.Inspect(R__cl, R__parent, "fEpsmac", &fEpsmac);
      R__insp.Inspect(R__cl, R__parent, "fEpsma2", &fEpsma2);
      R__insp.Inspect(R__cl, R__parent, "fVlimlo", &fVlimlo);
      R__insp.Inspect(R__cl, R__parent, "fVlimhi", &fVlimhi);
      R__insp.Inspect(R__cl, R__parent, "fUndefi", &fUndefi);
      R__insp.Inspect(R__cl, R__parent, "fBigedm", &fBigedm);
      R__insp.Inspect(R__cl, R__parent, "fUpdflt", &fUpdflt);
      R__insp.Inspect(R__cl, R__parent, "fXmidcr", &fXmidcr);
      R__insp.Inspect(R__cl, R__parent, "fYmidcr", &fYmidcr);
      R__insp.Inspect(R__cl, R__parent, "fXdircr", &fXdircr);
      R__insp.Inspect(R__cl, R__parent, "fYdircr", &fYdircr);
      R__insp.Inspect(R__cl, R__parent, "*fU", &fU);
      R__insp.Inspect(R__cl, R__parent, "*fAlim", &fAlim);
      R__insp.Inspect(R__cl, R__parent, "*fBlim", &fBlim);
      R__insp.Inspect(R__cl, R__parent, "*fErp", &fErp);
      R__insp.Inspect(R__cl, R__parent, "*fErn", &fErn);
      R__insp.Inspect(R__cl, R__parent, "*fWerr", &fWerr);
      R__insp.Inspect(R__cl, R__parent, "*fGlobcc", &fGlobcc);
      R__insp.Inspect(R__cl, R__parent, "*fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "*fXt", &fXt);
      R__insp.Inspect(R__cl, R__parent, "*fDirin", &fDirin);
      R__insp.Inspect(R__cl, R__parent, "*fXs", &fXs);
      R__insp.Inspect(R__cl, R__parent, "*fXts", &fXts);
      R__insp.Inspect(R__cl, R__parent, "*fDirins", &fDirins);
      R__insp.Inspect(R__cl, R__parent, "*fGrd", &fGrd);
      R__insp.Inspect(R__cl, R__parent, "*fG2", &fG2);
      R__insp.Inspect(R__cl, R__parent, "*fGstep", &fGstep);
      R__insp.Inspect(R__cl, R__parent, "*fGin", &fGin);
      R__insp.Inspect(R__cl, R__parent, "*fDgrd", &fDgrd);
      R__insp.Inspect(R__cl, R__parent, "*fGrds", &fGrds);
      R__insp.Inspect(R__cl, R__parent, "*fG2s", &fG2s);
      R__insp.Inspect(R__cl, R__parent, "*fGsteps", &fGsteps);
      R__insp.Inspect(R__cl, R__parent, "*fVhmat", &fVhmat);
      R__insp.Inspect(R__cl, R__parent, "*fVthmat", &fVthmat);
      R__insp.Inspect(R__cl, R__parent, "*fP", &fP);
      R__insp.Inspect(R__cl, R__parent, "*fPstar", &fPstar);
      R__insp.Inspect(R__cl, R__parent, "*fPstst", &fPstst);
      R__insp.Inspect(R__cl, R__parent, "*fPbar", &fPbar);
      R__insp.Inspect(R__cl, R__parent, "*fPrho", &fPrho);
      R__insp.Inspect(R__cl, R__parent, "*fWord7", &fWord7);
      R__insp.Inspect(R__cl, R__parent, "*fXpt", &fXpt);
      R__insp.Inspect(R__cl, R__parent, "*fYpt", &fYpt);
      R__insp.Inspect(R__cl, R__parent, "*fCONTgcc", &fCONTgcc);
      R__insp.Inspect(R__cl, R__parent, "*fCONTw", &fCONTw);
      R__insp.Inspect(R__cl, R__parent, "*fFIXPyy", &fFIXPyy);
      R__insp.Inspect(R__cl, R__parent, "*fGRADgf", &fGRADgf);
      R__insp.Inspect(R__cl, R__parent, "*fHESSyy", &fHESSyy);
      R__insp.Inspect(R__cl, R__parent, "*fIMPRdsav", &fIMPRdsav);
      R__insp.Inspect(R__cl, R__parent, "*fIMPRy", &fIMPRy);
      R__insp.Inspect(R__cl, R__parent, "*fMATUvline", &fMATUvline);
      R__insp.Inspect(R__cl, R__parent, "*fMIGRflnu", &fMIGRflnu);
      R__insp.Inspect(R__cl, R__parent, "*fMIGRstep", &fMIGRstep);
      R__insp.Inspect(R__cl, R__parent, "*fMIGRgs", &fMIGRgs);
      R__insp.Inspect(R__cl, R__parent, "*fMIGRvg", &fMIGRvg);
      R__insp.Inspect(R__cl, R__parent, "*fMIGRxxs", &fMIGRxxs);
      R__insp.Inspect(R__cl, R__parent, "*fMNOTxdev", &fMNOTxdev);
      R__insp.Inspect(R__cl, R__parent, "*fMNOTw", &fMNOTw);
      R__insp.Inspect(R__cl, R__parent, "*fMNOTgcc", &fMNOTgcc);
      R__insp.Inspect(R__cl, R__parent, "*fPSDFs", &fPSDFs);
      R__insp.Inspect(R__cl, R__parent, "*fSEEKxmid", &fSEEKxmid);
      R__insp.Inspect(R__cl, R__parent, "*fSEEKxbest", &fSEEKxbest);
      R__insp.Inspect(R__cl, R__parent, "*fSIMPy", &fSIMPy);
      R__insp.Inspect(R__cl, R__parent, "*fVERTq", &fVERTq);
      R__insp.Inspect(R__cl, R__parent, "*fVERTs", &fVERTs);
      R__insp.Inspect(R__cl, R__parent, "*fVERTpp", &fVERTpp);
      R__insp.Inspect(R__cl, R__parent, "*fCOMDplist", &fCOMDplist);
      R__insp.Inspect(R__cl, R__parent, "*fPARSplist", &fPARSplist);
      R__insp.Inspect(R__cl, R__parent, "*fNvarl", &fNvarl);
      R__insp.Inspect(R__cl, R__parent, "*fNiofex", &fNiofex);
      R__insp.Inspect(R__cl, R__parent, "*fNexofi", &fNexofi);
      R__insp.Inspect(R__cl, R__parent, "*fIpfix", &fIpfix);
      R__insp.Inspect(R__cl, R__parent, "fNu", &fNu);
      R__insp.Inspect(R__cl, R__parent, "fIsysrd", &fIsysrd);
      R__insp.Inspect(R__cl, R__parent, "fIsyswr", &fIsyswr);
      R__insp.Inspect(R__cl, R__parent, "fIsyssa", &fIsyssa);
      R__insp.Inspect(R__cl, R__parent, "fNpagwd", &fNpagwd);
      R__insp.Inspect(R__cl, R__parent, "fNpagln", &fNpagln);
      R__insp.Inspect(R__cl, R__parent, "fNewpag", &fNewpag);
      R__insp.Inspect(R__cl, R__parent, "fIstkrd[10]", fIstkrd);
      R__insp.Inspect(R__cl, R__parent, "fNstkrd", &fNstkrd);
      R__insp.Inspect(R__cl, R__parent, "fIstkwr[10]", fIstkwr);
      R__insp.Inspect(R__cl, R__parent, "fNstkwr", &fNstkwr);
      R__insp.Inspect(R__cl, R__parent, "fISW[7]", fISW);
      R__insp.Inspect(R__cl, R__parent, "fIdbg[11]", fIdbg);
      R__insp.Inspect(R__cl, R__parent, "fNblock", &fNblock);
      R__insp.Inspect(R__cl, R__parent, "fIcomnd", &fIcomnd);
      R__insp.Inspect(R__cl, R__parent, "fNfcn", &fNfcn);
      R__insp.Inspect(R__cl, R__parent, "fNfcnmx", &fNfcnmx);
      R__insp.Inspect(R__cl, R__parent, "fNfcnlc", &fNfcnlc);
      R__insp.Inspect(R__cl, R__parent, "fNfcnfr", &fNfcnfr);
      R__insp.Inspect(R__cl, R__parent, "fItaur", &fItaur);
      R__insp.Inspect(R__cl, R__parent, "fIstrat", &fIstrat);
      R__insp.Inspect(R__cl, R__parent, "fNwrmes[2]", fNwrmes);
      R__insp.Inspect(R__cl, R__parent, "fNfcwar[20]", fNfcwar);
      R__insp.Inspect(R__cl, R__parent, "fIcirc[2]", fIcirc);
      R__insp.Inspect(R__cl, R__parent, "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "fKe1cr", &fKe1cr);
      R__insp.Inspect(R__cl, R__parent, "fKe2cr", &fKe2cr);
      R__insp.Inspect(R__cl, R__parent, "fLwarn", &fLwarn);
      R__insp.Inspect(R__cl, R__parent, "fLrepor", &fLrepor);
      R__insp.Inspect(R__cl, R__parent, "fLimset", &fLimset);
      R__insp.Inspect(R__cl, R__parent, "fLnolim", &fLnolim);
      R__insp.Inspect(R__cl, R__parent, "fLnewmn", &fLnewmn);
      R__insp.Inspect(R__cl, R__parent, "fLphead", &fLphead);
      R__insp.Inspect(R__cl, R__parent, "fGraphicsMode", &fGraphicsMode);
      R__insp.Inspect(R__cl, R__parent, "*fChpt", &fChpt);
      R__insp.Inspect(R__cl, R__parent, "*fCpnam", &fCpnam);
      R__cl->SetMemberStreamer("*fCpnam",R__TMinuit_fCpnam);
      R__insp.Inspect(R__cl, R__parent, "fCfrom", &fCfrom);
      fCfrom.ShowMembers(R__insp, strcat(R__parent,"fCfrom.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCstatu", &fCstatu);
      fCstatu.ShowMembers(R__insp, strcat(R__parent,"fCstatu.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCtitl", &fCtitl);
      fCtitl.ShowMembers(R__insp, strcat(R__parent,"fCtitl.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCword", &fCword);
      fCword.ShowMembers(R__insp, strcat(R__parent,"fCword.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCundef", &fCundef);
      fCundef.ShowMembers(R__insp, strcat(R__parent,"fCundef.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCvrsn", &fCvrsn);
      fCvrsn.ShowMembers(R__insp, strcat(R__parent,"fCvrsn.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCovmes[4]", fCovmes);
      R__insp.Inspect(R__cl, R__parent, "fOrigin[100]", fOrigin);
      R__insp.Inspect(R__cl, R__parent, "fWarmes[100]", fWarmes);
      R__insp.Inspect(R__cl, R__parent, "*fObjectFit", &fObjectFit);
      R__insp.Inspect(R__cl, R__parent, "*fPlot", &fPlot);
      R__insp.Inspect(R__cl, R__parent, "*fMethodCall", &fMethodCall);
      R__insp.Inspect(R__cl, R__parent, "fFCN", &fFCN);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMinuit_IsA(const void *obj) {
      return ((::TMinuit*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMinuit(void *p) {
      return  p ? new(p) ::TMinuit : new ::TMinuit;
   }
   static void *newArray_TMinuit(Long_t size) {
      return new ::TMinuit[size];
   }
   // Wrapper around operator delete
   static void delete_TMinuit(void *p) {
      delete ((::TMinuit*)p);
   }
   static void deleteArray_TMinuit(void *p) {
      delete [] ((::TMinuit*)p);
   }
   static void destruct_TMinuit(void *p) {
      typedef ::TMinuit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMinuit

//______________________________________________________________________________
void TFitter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TFitter.

   if (R__b.IsReading()) {
      TFitter::Class()->ReadBuffer(R__b, this);
   } else {
      TFitter::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TFitter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TFitter.

      TClass *R__cl = ::TFitter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNlog", &fNlog);
      R__insp.Inspect(R__cl, R__parent, "*fCovar", &fCovar);
      R__insp.Inspect(R__cl, R__parent, "*fSumLog", &fSumLog);
      R__insp.Inspect(R__cl, R__parent, "*fMinuit", &fMinuit);
      TVirtualFitter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TFitter_IsA(const void *obj) {
      return ((::TFitter*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TFitter(void *p) {
      return  p ? new(p) ::TFitter : new ::TFitter;
   }
   static void *newArray_TFitter(Long_t size) {
      return new ::TFitter[size];
   }
   // Wrapper around operator delete
   static void delete_TFitter(void *p) {
      delete ((::TFitter*)p);
   }
   static void deleteArray_TFitter(void *p) {
      delete [] ((::TFitter*)p);
   }
   static void destruct_TFitter(void *p) {
      typedef ::TFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFitter

//______________________________________________________________________________
void TLinearFitter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLinearFitter.

   if (R__b.IsReading()) {
      TLinearFitter::Class()->ReadBuffer(R__b, this);
   } else {
      TLinearFitter::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TLinearFitter::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TLinearFitter.

      TClass *R__cl = ::TLinearFitter::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fParams", &fParams);
      fParams.ShowMembers(R__insp, strcat(R__parent,"fParams.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fParCovar", &fParCovar);
      fParCovar.ShowMembers(R__insp, strcat(R__parent,"fParCovar.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTValues", &fTValues);
      fTValues.ShowMembers(R__insp, strcat(R__parent,"fTValues.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fParSign", &fParSign);
      fParSign.ShowMembers(R__insp, strcat(R__parent,"fParSign.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDesign", &fDesign);
      fDesign.ShowMembers(R__insp, strcat(R__parent,"fDesign.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDesignTemp", &fDesignTemp);
      fDesignTemp.ShowMembers(R__insp, strcat(R__parent,"fDesignTemp.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDesignTemp2", &fDesignTemp2);
      fDesignTemp2.ShowMembers(R__insp, strcat(R__parent,"fDesignTemp2.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDesignTemp3", &fDesignTemp3);
      fDesignTemp3.ShowMembers(R__insp, strcat(R__parent,"fDesignTemp3.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAtb", &fAtb);
      fAtb.ShowMembers(R__insp, strcat(R__parent,"fAtb.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAtbTemp", &fAtbTemp);
      fAtbTemp.ShowMembers(R__insp, strcat(R__parent,"fAtbTemp.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAtbTemp2", &fAtbTemp2);
      fAtbTemp2.ShowMembers(R__insp, strcat(R__parent,"fAtbTemp2.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fAtbTemp3", &fAtbTemp3);
      fAtbTemp3.ShowMembers(R__insp, strcat(R__parent,"fAtbTemp3.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fFixedParams", &fFixedParams);
      R__insp.Inspect(R__cl, R__parent, "fFunctions", &fFunctions);
      fFunctions.ShowMembers(R__insp, strcat(R__parent,"fFunctions.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fY", &fY);
      fY.ShowMembers(R__insp, strcat(R__parent,"fY.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fY2", &fY2);
      R__insp.Inspect(R__cl, R__parent, "fY2Temp", &fY2Temp);
      R__insp.Inspect(R__cl, R__parent, "fX", &fX);
      fX.ShowMembers(R__insp, strcat(R__parent,"fX.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fE", &fE);
      fE.ShowMembers(R__insp, strcat(R__parent,"fE.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fInputFunction", &fInputFunction);
      R__insp.Inspect(R__cl, R__parent, "fNpoints", &fNpoints);
      R__insp.Inspect(R__cl, R__parent, "fNfunctions", &fNfunctions);
      R__insp.Inspect(R__cl, R__parent, "fFormulaSize", &fFormulaSize);
      R__insp.Inspect(R__cl, R__parent, "fNdim", &fNdim);
      R__insp.Inspect(R__cl, R__parent, "fNfixed", &fNfixed);
      R__insp.Inspect(R__cl, R__parent, "fSpecial", &fSpecial);
      R__insp.Inspect(R__cl, R__parent, "*fFormula", &fFormula);
      R__insp.Inspect(R__cl, R__parent, "fIsSet", &fIsSet);
      R__insp.Inspect(R__cl, R__parent, "fStoreData", &fStoreData);
      R__insp.Inspect(R__cl, R__parent, "fCorrect", &fCorrect);
      R__insp.Inspect(R__cl, R__parent, "fChisquare", &fChisquare);
      TVirtualFitter::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TLinearFitter_IsA(const void *obj) {
      return ((::TLinearFitter*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TLinearFitter(void *p) {
      return  p ? new(p) ::TLinearFitter : new ::TLinearFitter;
   }
   static void *newArray_TLinearFitter(Long_t size) {
      return new ::TLinearFitter[size];
   }
   // Wrapper around operator delete
   static void delete_TLinearFitter(void *p) {
      delete ((::TLinearFitter*)p);
   }
   static void deleteArray_TLinearFitter(void *p) {
      delete [] ((::TLinearFitter*)p);
   }
   static void destruct_TLinearFitter(void *p) {
      typedef ::TLinearFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TLinearFitter

/********************************************************
* minuit/src/G__Minuit.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__Minuit();

extern "C" void G__set_cpp_environmentG__Minuit() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("minuit/inc/TLinearFitter.h");
  G__add_compiledheader("minuit/inc/TFitter.h");
  G__add_compiledheader("minuit/inc/TMinuit.h");
  G__cpp_reset_tagtableG__Minuit();
}
class G__minuitdIsrcdIG__MinuitdOcxx_tag {};

void* operator new(size_t size,G__minuitdIsrcdIG__MinuitdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__minuitdIsrcdIG__MinuitdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_minuitdIsrcdIG__MinuitdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__Minuit() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TLinearFitter */
static int G__G__Minuit_201_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLinearFitter *p=NULL;
   if(G__getaryconstruct()) p=new TLinearFitter[G__getaryconstruct()];
   else                    p=new TLinearFitter;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLinearFitter *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TLinearFitter(
(Int_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TLinearFitter((Int_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLinearFitter *p=NULL;
      p = new TLinearFitter((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TLinearFitter *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TLinearFitter((TFormula*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TLinearFitter((TFormula*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->AddPoint((Double_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->AddPoint((Double_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->AssignData((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3])
,(Double_t*)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->AssignData((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->ClearPoints();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->Chisquare();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->Eval();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TLinearFitter*)(G__getstructoffset()))->ExecuteCommand((const char*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->FixParameter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->FixParameter((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TLinearFitter*)(G__getstructoffset()))->GetChisquare());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TLinearFitter*)(G__getstructoffset()))->GetCovarianceMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->GetCovarianceMatrix(*(TMatrixD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TLinearFitter*)(G__getstructoffset()))->GetCovarianceMatrixElement((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->GetErrors(*(TVectorD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLinearFitter*)(G__getstructoffset()))->GetNumberTotalParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLinearFitter*)(G__getstructoffset()))->GetNumberFreeParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->GetParameters(*(TVectorD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TLinearFitter*)(G__getstructoffset()))->GetParameter((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TLinearFitter*)(G__getstructoffset()))->GetParError((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TLinearFitter*)(G__getstructoffset()))->GetParTValue((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TLinearFitter*)(G__getstructoffset()))->GetParSignificance((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TLinearFitter*)(G__getstructoffset()))->IsFixed((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((const TLinearFitter*)(G__getstructoffset()))->PrintResults((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((const TLinearFitter*)(G__getstructoffset()))->PrintResults((Int_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->ReleaseParameter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->SetDim((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->SetFormula((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->SetFormula((TFormula*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->StoreData((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TLinearFitter*)(G__getstructoffset()))->UpdateMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TLinearFitter*)(G__getstructoffset()))->Chisquare((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLinearFitter*)(G__getstructoffset()))->GetErrors((Int_t)G__int(libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLinearFitter*)(G__getstructoffset()))->GetParameter((Int_t)G__int(libp->para[0]),(char*)G__int(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4]),*(Double_t*)G__Doubleref(&libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TLinearFitter*)(G__getstructoffset()))->GetStats(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Int_t*)G__Intref(&libp->para[3])
,*(Int_t*)G__Intref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TLinearFitter*)(G__getstructoffset()))->GetSumLog((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->SetFitMethod((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TLinearFitter*)(G__getstructoffset()))->SetParameter((Int_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TLinearFitter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLinearFitter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TLinearFitter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TLinearFitter::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TLinearFitter*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TLinearFitter*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLinearFitter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLinearFitter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TLinearFitter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_201_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TLinearFitter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLinearFitter G__TTLinearFitter;
static int G__G__Minuit_201_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TLinearFitter *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TLinearFitter *)((G__getstructoffset())+sizeof(TLinearFitter)*i);
   else  delete (TLinearFitter *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMinuit */
static int G__G__Minuit_202_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMinuit *p=NULL;
   if(G__getaryconstruct()) p=new TMinuit[G__getaryconstruct()];
   else                    p=new TMinuit;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MinuitLN_TMinuit);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMinuit *p=NULL;
      p = new TMinuit((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MinuitLN_TMinuit);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->BuildArrays((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->BuildArrays();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)((const TMinuit*)(G__getstructoffset()))->Clone((const char*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((const TMinuit*)(G__getstructoffset()))->Clone());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMinuit*)(G__getstructoffset()))->Command((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,85,(long)((TMinuit*)(G__getstructoffset()))->Contour((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,85,(long)((TMinuit*)(G__getstructoffset()))->Contour((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   case 1:
   G__letint(result7,85,(long)((TMinuit*)(G__getstructoffset()))->Contour((Int_t)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)((TMinuit*)(G__getstructoffset()))->Contour());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMinuit*)(G__getstructoffset()))->DefineParameter((Int_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->DeleteArrays();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMinuit*)(G__getstructoffset()))->Eval((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),(Double_t*)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMinuit*)(G__getstructoffset()))->FixParameter((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMinuit*)(G__getstructoffset()))->GetMethodCall());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMinuit*)(G__getstructoffset()))->GetObjectFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMinuit*)(G__getstructoffset()))->GetMaxIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMinuit*)(G__getstructoffset()))->GetNumFixedPars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMinuit*)(G__getstructoffset()))->GetNumFreePars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMinuit*)(G__getstructoffset()))->GetNumPars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMinuit*)(G__getstructoffset()))->GetParameter((Int_t)G__int(libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMinuit*)(G__getstructoffset()))->GetPlot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMinuit*)(G__getstructoffset()))->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMinuit*)(G__getstructoffset()))->Migrad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnamin();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnbins(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4]),*(Int_t*)G__Intref(&libp->para[5])
,*(Double_t*)G__Doubleref(&libp->para[6]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mncalf((Double_t*)G__int(libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mncler();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mncntr((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(Int_t*)G__Intref(&libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mncomd((const char*)G__int(libp->para[0]),*(Int_t*)G__Intref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mncont((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3])
,(Double_t*)G__int(libp->para[4]),*(Int_t*)G__Intref(&libp->para[5]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mncrck(
*((TString*)G__int(libp->para[0])),(Int_t)G__int(libp->para[1])
,*(TString*)libp->para[2].ref,*(Int_t*)G__Intref(&libp->para[3])
,(Int_t)G__int(libp->para[4]),(Double_t*)G__int(libp->para[5])
,*(Int_t*)G__Intref(&libp->para[6]),*(Int_t*)G__Intref(&libp->para[7])
,(Int_t)G__int(libp->para[8]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mncros(*(Double_t*)G__Doubleref(&libp->para[0]),*(Int_t*)G__Intref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mncuve();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnderi();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mndxdi((Double_t)G__double(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mneig(
(Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Double_t*)G__int(libp->para[4]),(Double_t)G__double(libp->para[5])
,*(Int_t*)G__Intref(&libp->para[6]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnemat((Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnerrs((Int_t)G__int(libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mneval((Double_t)G__double(libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Int_t*)G__Intref(&libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnexcm((const char*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),*(Int_t*)G__Intref(&libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnexin((Double_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnfixp((Int_t)G__int(libp->para[0]),*(Int_t*)G__Intref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnfree((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mngrad();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnhelp(*((TString*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnhelp((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnhelp();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnhess();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnhes1();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnimpr();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mninex((Double_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mninit((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnlims();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnline((Double_t*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnmatu((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnmigr();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnmnos();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnmnot((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnparm(
(Int_t)G__int(libp->para[0]),*((TString*)G__int(libp->para[1]))
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,*(Int_t*)G__Intref(&libp->para[6]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnpars(*(TString*)libp->para[0].ref,*(Int_t*)G__Intref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnpfit((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnpint(*(Double_t*)G__Doubleref(&libp->para[0]),(Int_t)G__int(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnplot((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t)G__int(libp->para[5]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TMinuit*)(G__getstructoffset()))->mnpout(
(Int_t)G__int(libp->para[0]),*(TString*)libp->para[1].ref
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4]),*(Double_t*)G__Doubleref(&libp->para[5])
,*(Int_t*)G__Intref(&libp->para[6]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnprin((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnpsdf();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnrazz((Double_t)G__double(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),*(Int_t*)G__Intref(&libp->para[3])
,*(Int_t*)G__Intref(&libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnrn15(*(Double_t*)G__Doubleref(&libp->para[0]),*(Int_t*)G__Intref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnrset((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnsave();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnscan();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnseek();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnset();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnsimp();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnstat(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Int_t*)G__Intref(&libp->para[3])
,*(Int_t*)G__Intref(&libp->para[4]),*(Int_t*)G__Intref(&libp->para[5]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mntiny((Double_t)G__double(libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TMinuit*)(G__getstructoffset()))->mnunpt(*(TString*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnvert((Double_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(Int_t*)G__Intref(&libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnwarn((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->mnwerr();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMinuit*)(G__getstructoffset()))->Release((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMinuit*)(G__getstructoffset()))->SetErrorDef((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->SetFCN((void*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->SetFCN((void (*)(Int_t&, Double_t*, Double_t&f, Double_t*, Int_t))G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->SetGraphicsMode((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->SetGraphicsMode();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->SetMaxIterations((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->SetMaxIterations();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->SetObjectFit((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((TMinuit*)(G__getstructoffset()))->SetPrintLevel((Int_t)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((TMinuit*)(G__getstructoffset()))->SetPrintLevel());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMinuit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMinuit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMinuit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMinuit::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMinuit*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMinuit*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMinuit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMinuit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMinuit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_202_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMinuit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMinuit G__TTMinuit;
static int G__G__Minuit_202_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMinuit *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMinuit *)((G__getstructoffset())+sizeof(TMinuit)*i);
   else  delete (TMinuit *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Minuit_202_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMinuit *dest = (TMinuit*)(G__getstructoffset());
   *dest = (*(TMinuit*)libp->para[0].ref);
   const TMinuit& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFitter */
static int G__G__Minuit_203_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFitter *p=NULL;
   switch(libp->paran) {
   case 1:
      p = new TFitter((Int_t)G__int(libp->para[0]));
      break;
   case 0:
   if(G__getaryconstruct()) p=new TFitter[G__getaryconstruct()];
   else                    p=new TFitter;
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MinuitLN_TFitter);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TFitter*)(G__getstructoffset()))->Chisquare((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TFitter*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TFitter*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TFitter*)(G__getstructoffset()))->ExecuteCommand((const char*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitter*)(G__getstructoffset()))->FixParameter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TFitter*)(G__getstructoffset()))->GetCovarianceMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TFitter*)(G__getstructoffset()))->GetCovarianceMatrixElement((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFitter*)(G__getstructoffset()))->GetErrors((Int_t)G__int(libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFitter*)(G__getstructoffset()))->GetNumberTotalParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFitter*)(G__getstructoffset()))->GetNumberFreeParameters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TFitter*)(G__getstructoffset()))->GetParError((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TFitter*)(G__getstructoffset()))->GetParameter((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFitter*)(G__getstructoffset()))->GetParameter((Int_t)G__int(libp->para[0]),(char*)G__int(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Double_t*)G__Doubleref(&libp->para[3])
,*(Double_t*)G__Doubleref(&libp->para[4]),*(Double_t*)G__Doubleref(&libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TFitter*)(G__getstructoffset()))->GetStats(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]),*(Int_t*)G__Intref(&libp->para[3])
,*(Int_t*)G__Intref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TFitter*)(G__getstructoffset()))->GetSumLog((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TFitter*)(G__getstructoffset()))->IsFixed((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TFitter*)(G__getstructoffset()))->PrintResults((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitter*)(G__getstructoffset()))->ReleaseParameter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitter*)(G__getstructoffset()))->SetFCN((void*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitter*)(G__getstructoffset()))->SetFCN((void (*)(Int_t&, Double_t*, Double_t&f, Double_t*, Int_t))G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitter*)(G__getstructoffset()))->SetFitMethod((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TFitter*)(G__getstructoffset()))->SetParameter((Int_t)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TFitter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFitter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TFitter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TFitter::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TFitter*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitter*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitter*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TFitter*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFitter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFitter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TFitter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Minuit_203_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TFitter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Minuit_203_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TFitter *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TFitter(*(TFitter*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MinuitLN_TFitter);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFitter G__TTFitter;
static int G__G__Minuit_203_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TFitter *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TFitter *)((G__getstructoffset())+sizeof(TFitter)*i);
   else  delete (TFitter *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Minuit_203_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TFitter *dest = (TFitter*)(G__getstructoffset());
   *dest = (*(TFitter*)libp->para[0].ref);
   const TFitter& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TLinearFitter */

/* TMinuit */

/* TFitter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Minuit {
 public:
  G__Sizep2memfuncG__Minuit() {p=&G__Sizep2memfuncG__Minuit::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Minuit::*p)();
};

size_t G__get_sizep2memfuncG__Minuit()
{
  G__Sizep2memfuncG__Minuit a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Minuit() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter))) {
     TLinearFitter *G__Lderived;
     G__Lderived=(TLinearFitter*)0x1000;
     {
       TVirtualFitter *G__Lpbase=(TVirtualFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),G__get_linked_tagnum(&G__G__MinuitLN_TVirtualFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),G__get_linked_tagnum(&G__G__MinuitLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),G__get_linked_tagnum(&G__G__MinuitLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit))) {
     TMinuit *G__Lderived;
     G__Lderived=(TMinuit*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),G__get_linked_tagnum(&G__G__MinuitLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),G__get_linked_tagnum(&G__G__MinuitLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MinuitLN_TFitter))) {
     TFitter *G__Lderived;
     G__Lderived=(TFitter*)0x1000;
     {
       TVirtualFitter *G__Lpbase=(TVirtualFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter),G__get_linked_tagnum(&G__G__MinuitLN_TVirtualFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter),G__get_linked_tagnum(&G__G__MinuitLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter),G__get_linked_tagnum(&G__G__MinuitLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Minuit() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__MinuitLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MinuitLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MinuitLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MinuitLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("void (*)(Int_t&, Double_t*, Double_t&f, Double_t*, Int_t)",49,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TLinearFitter */
static void G__setup_memvarTLinearFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter));
   { TLinearFitter *p; p=(TLinearFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorD),-1,-1,4,"fParams=",0,"vector of parameters");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixDSym),-1,-1,4,"fParCovar=",0,"matrix of parameters' covariances");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorD),-1,-1,4,"fTValues=",0,"T-Values of parameters");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorD),-1,-1,4,"fParSign=",0,"significance levels of parameters");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixDSym),-1,-1,4,"fDesign=",0,"matrix AtA");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixDSym),-1,-1,4,"fDesignTemp=",0,"! temporary matrix, used for num.stability");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixDSym),-1,-1,4,"fDesignTemp2=",0,"!");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixDSym),-1,-1,4,"fDesignTemp3=",0,"!");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorD),-1,-1,4,"fAtb=",0,"vector Atb");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorD),-1,-1,4,"fAtbTemp=",0,"! temporary vector, used for num.stability");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorD),-1,-1,4,"fAtbTemp2=",0,"!");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorD),-1,-1,4,"fAtbTemp3=",0,"!");
   G__memvar_setup((void*)NULL,71,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFixedParams=",0,"array of fixed/released params");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TObjArray),-1,-1,4,"fFunctions=",0,"array of basis functions");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorD),-1,-1,4,"fY=",0,"the values being fit");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY2=",0,"sum of square of y, used for chisquare");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY2Temp=",0,"! temporary variable used for num.stability");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMatrixD),-1,-1,4,"fX=",0,"values of x");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TVectorD),-1,-1,4,"fE=",0,"the errors if they are known");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TFormula),-1,-1,4,"fInputFunction=",0,"the function being fit");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNpoints=",0,"number of points");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNfunctions=",0,"number of basis functions");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFormulaSize=",0,"length of the formula");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNdim=",0,"number of dimensions in the formula");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNfixed=",0,"number of fixed parameters");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSpecial=",0,"=100+n if fitting a polynomial of deg.n");
   G__memvar_setup((void*)NULL,67,0,0,-1,-1,-1,4,"fFormula=",0,"the formula");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsSet=",0,"Has the formula been set?");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fStoreData=",0,"Is the data stored?");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCorrect=",0,"correcting for the case y>>e");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChisquare=",0,"Chisquare of the fit");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMinuit */
static void G__setup_memvarTMinuit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit));
   { TMinuit *p; p=(TMinuit*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MinuitLN_TMinuitcLcLdA),-1,-2,1,"kMAXWARN=100",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpfix)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpfix=",0,"Number of fixed parameters");
   G__memvar_setup((void*)((long)(&p->fEmpty)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fEmpty=",0,"Initialization flag (1 = Minuit initialized)");
   G__memvar_setup((void*)((long)(&p->fMaxpar)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxpar=",0,"Maximum number of parameters");
   G__memvar_setup((void*)((long)(&p->fMaxint)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxint=",0,"Maximum number of internal parameters");
   G__memvar_setup((void*)((long)(&p->fNpar)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpar=",0,"Number of free parameters (total number of pars = fNpar + fNfix)");
   G__memvar_setup((void*)((long)(&p->fMaxext)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxext=",0,"Maximum number of external parameters");
   G__memvar_setup((void*)((long)(&p->fMaxIterations)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxIterations=",0,"Maximum number of iterations");
   G__memvar_setup((void*)((long)(&p->fMaxpar5)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxpar5=",0,"fMaxpar*(fMaxpar+1)/2");
   G__memvar_setup((void*)((long)(&p->fMaxcpt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxcpt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMaxpar2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxpar2=",0,"fMaxpar*fMaxpar");
   G__memvar_setup((void*)((long)(&p->fMaxpar1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxpar1=",0,"fMaxpar*(fMaxpar+1)");
   G__memvar_setup((void*)((long)(&p->fAmin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fAmin=",0,"Minimum value found for FCN");
   G__memvar_setup((void*)((long)(&p->fUp)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fUp=",0,"FCN+-UP defines errors (for chisquare fits UP=1)");
   G__memvar_setup((void*)((long)(&p->fEDM)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEDM=",0,"Estimated vertical distance to the minimum");
   G__memvar_setup((void*)((long)(&p->fFval3)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFval3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEpsi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEpsi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fApsi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fApsi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDcovar)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDcovar=",0,"Relative change in covariance matrix");
   G__memvar_setup((void*)((long)(&p->fEpsmac)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEpsmac=",0,"machine precision for floating points:");
   G__memvar_setup((void*)((long)(&p->fEpsma2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEpsma2=",0,"sqrt(fEpsmac)");
   G__memvar_setup((void*)((long)(&p->fVlimlo)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVlimlo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVlimhi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVlimhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fUndefi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fUndefi=",0,"Undefined number = -54321");
   G__memvar_setup((void*)((long)(&p->fBigedm)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fBigedm=",0,"Big EDM = 123456");
   G__memvar_setup((void*)((long)(&p->fUpdflt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fUpdflt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fXmidcr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXmidcr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fYmidcr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fYmidcr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fXdircr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXdircr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fYdircr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fYdircr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fU)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fU=",0,"[fMaxpar2] External (visible to user in FCN) value of parameters");
   G__memvar_setup((void*)((long)(&p->fAlim)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fAlim=",0,"[fMaxpar2] Lower limits for parameters. If zero no limits");
   G__memvar_setup((void*)((long)(&p->fBlim)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fBlim=",0,"[fMaxpar2] Upper limits for parameters");
   G__memvar_setup((void*)((long)(&p->fErp)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fErp=",0,"[fMaxpar] Positive Minos errors if calculated");
   G__memvar_setup((void*)((long)(&p->fErn)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fErn=",0,"[fMaxpar] Negative Minos errors if calculated");
   G__memvar_setup((void*)((long)(&p->fWerr)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fWerr=",0,"[fMaxpar] External parameters error (standard deviation, defined by UP)");
   G__memvar_setup((void*)((long)(&p->fGlobcc)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGlobcc=",0,"[fMaxpar] Global Correlation Coefficients");
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fX=",0,"[fMaxpar] Internal parameters values");
   G__memvar_setup((void*)((long)(&p->fXt)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXt=",0,"[fMaxpar] Internal parameters values X saved as Xt");
   G__memvar_setup((void*)((long)(&p->fDirin)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDirin=",0,"[fMaxpar] (Internal) step sizes for current step");
   G__memvar_setup((void*)((long)(&p->fXs)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXs=",0,"[fMaxpar] Internal parameters values saved for fixed params");
   G__memvar_setup((void*)((long)(&p->fXts)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXts=",0,"[fMaxpar] Internal parameters values X saved as Xt for fixed params");
   G__memvar_setup((void*)((long)(&p->fDirins)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDirins=",0,"[fMaxpar] (Internal) step sizes for current step for fixed params");
   G__memvar_setup((void*)((long)(&p->fGrd)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGrd=",0,"[fMaxpar] First derivatives");
   G__memvar_setup((void*)((long)(&p->fG2)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fG2=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fGstep)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGstep=",0,"[fMaxpar] Step sizes");
   G__memvar_setup((void*)((long)(&p->fGin)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGin=",0,"[fMaxpar2] ");
   G__memvar_setup((void*)((long)(&p->fDgrd)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDgrd=",0,"[fMaxpar] Uncertainties");
   G__memvar_setup((void*)((long)(&p->fGrds)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGrds=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fG2s)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fG2s=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fGsteps)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGsteps=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fVhmat)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVhmat=",0,"[fMaxpar5] (Internal) error matrix stored as Half MATrix, since it is symmetric");
   G__memvar_setup((void*)((long)(&p->fVthmat)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVthmat=",0,"[fMaxpar5] VHMAT is sometimes saved in VTHMAT, especially in MNMNOT");
   G__memvar_setup((void*)((long)(&p->fP)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fP=",0,"[fMaxpar1] ");
   G__memvar_setup((void*)((long)(&p->fPstar)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPstar=",0,"[fMaxpar2] ");
   G__memvar_setup((void*)((long)(&p->fPstst)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPstst=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fPbar)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPbar=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fPrho)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPrho=",0,"[fMaxpar] Minimum point of parabola");
   G__memvar_setup((void*)((long)(&p->fWord7)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fWord7=",0,"[fMaxpar] ");
   G__memvar_setup((void*)((long)(&p->fXpt)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXpt=",0,"[fMaxcpt] X array of points for contours");
   G__memvar_setup((void*)((long)(&p->fYpt)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fYpt=",0,"[fMaxcpt] Y array of points for contours");
   G__memvar_setup((void*)((long)(&p->fCONTgcc)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fCONTgcc=",0,"[fMaxpar] array used in mncont");
   G__memvar_setup((void*)((long)(&p->fCONTw)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fCONTw=",0,"[fMaxpar] array used in mncont");
   G__memvar_setup((void*)((long)(&p->fFIXPyy)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFIXPyy=",0,"[fMaxpar] array used in mnfixp");
   G__memvar_setup((void*)((long)(&p->fGRADgf)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fGRADgf=",0,"[fMaxpar] array used in mngrad");
   G__memvar_setup((void*)((long)(&p->fHESSyy)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fHESSyy=",0,"[fMaxpar] array used in mnhess");
   G__memvar_setup((void*)((long)(&p->fIMPRdsav)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fIMPRdsav=",0,"[fMaxpar] array used in mnimpr");
   G__memvar_setup((void*)((long)(&p->fIMPRy)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fIMPRy=",0,"[fMaxpar] array used in mnimpr");
   G__memvar_setup((void*)((long)(&p->fMATUvline)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMATUvline=",0,"[fMaxpar] array used in mnmatu");
   G__memvar_setup((void*)((long)(&p->fMIGRflnu)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMIGRflnu=",0,"[fMaxpar] array used in mnmigr");
   G__memvar_setup((void*)((long)(&p->fMIGRstep)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMIGRstep=",0,"[fMaxpar] array used in mnmigr");
   G__memvar_setup((void*)((long)(&p->fMIGRgs)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMIGRgs=",0,"[fMaxpar] array used in mnmigr");
   G__memvar_setup((void*)((long)(&p->fMIGRvg)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMIGRvg=",0,"[fMaxpar] array used in mnmigr");
   G__memvar_setup((void*)((long)(&p->fMIGRxxs)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMIGRxxs=",0,"[fMaxpar] array used in mnmigr");
   G__memvar_setup((void*)((long)(&p->fMNOTxdev)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMNOTxdev=",0,"[fMaxpar] array used in mnmnot");
   G__memvar_setup((void*)((long)(&p->fMNOTw)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMNOTw=",0,"[fMaxpar] array used in mnmnot");
   G__memvar_setup((void*)((long)(&p->fMNOTgcc)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMNOTgcc=",0,"[fMaxpar] array used in mnmnot");
   G__memvar_setup((void*)((long)(&p->fPSDFs)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPSDFs=",0,"[fMaxpar] array used in mnpsdf");
   G__memvar_setup((void*)((long)(&p->fSEEKxmid)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSEEKxmid=",0,"[fMaxpar] array used in mnseek");
   G__memvar_setup((void*)((long)(&p->fSEEKxbest)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSEEKxbest=",0,"[fMaxpar] array used in mnseek");
   G__memvar_setup((void*)((long)(&p->fSIMPy)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSIMPy=",0,"[fMaxpar] array used in mnsimp");
   G__memvar_setup((void*)((long)(&p->fVERTq)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVERTq=",0,"[fMaxpar] array used in mnvert");
   G__memvar_setup((void*)((long)(&p->fVERTs)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVERTs=",0,"[fMaxpar] array used in mnvert");
   G__memvar_setup((void*)((long)(&p->fVERTpp)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVERTpp=",0,"[fMaxpar] array used in mnvert");
   G__memvar_setup((void*)((long)(&p->fCOMDplist)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fCOMDplist=",0,"[fMaxpar] array used in mncomd");
   G__memvar_setup((void*)((long)(&p->fPARSplist)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPARSplist=",0,"[fMaxpar] array used in mnpars");
   G__memvar_setup((void*)((long)(&p->fNvarl)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNvarl=",0,"[fMaxpar2] parameters flag (-1=undefined, 0=constant..)");
   G__memvar_setup((void*)((long)(&p->fNiofex)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNiofex=",0,"[fMaxpar2] Internal parameters number, or zero if not currently variable");
   G__memvar_setup((void*)((long)(&p->fNexofi)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNexofi=",0,"[fMaxpar] External parameters number for currently variable parameters");
   G__memvar_setup((void*)((long)(&p->fIpfix)-(long)(p)),73,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIpfix=",0,"[fMaxpar] List of fixed parameters");
   G__memvar_setup((void*)((long)(&p->fNu)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIsysrd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIsysrd=",0,"standardInput unit");
   G__memvar_setup((void*)((long)(&p->fIsyswr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIsyswr=",0,"standard output unit");
   G__memvar_setup((void*)((long)(&p->fIsyssa)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIsyssa=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpagwd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpagwd=",0,"Page width");
   G__memvar_setup((void*)((long)(&p->fNpagln)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNpagln=",0,"Number of lines per page");
   G__memvar_setup((void*)((long)(&p->fNewpag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNewpag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIstkrd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIstkrd[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNstkrd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNstkrd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIstkwr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIstkwr[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNstkwr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNstkwr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fISW)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fISW[7]=",0,"Array of switches");
   G__memvar_setup((void*)((long)(&p->fIdbg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIdbg[11]=",0,"Array of internal debug switches");
   G__memvar_setup((void*)((long)(&p->fNblock)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNblock=",0,"Number of Minuit data blocks");
   G__memvar_setup((void*)((long)(&p->fIcomnd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIcomnd=",0,"Number of commands");
   G__memvar_setup((void*)((long)(&p->fNfcn)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNfcn=",0,"Number of calls to FCN");
   G__memvar_setup((void*)((long)(&p->fNfcnmx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNfcnmx=",0,"Maximum number of calls to FCN");
   G__memvar_setup((void*)((long)(&p->fNfcnlc)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNfcnlc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNfcnfr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNfcnfr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fItaur)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fItaur=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIstrat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIstrat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNwrmes)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNwrmes[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNfcwar)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNfcwar[20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIcirc)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fIcirc[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fStatus)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fStatus=",0,"Status flag for the last called Minuit function");
   G__memvar_setup((void*)((long)(&p->fKe1cr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fKe1cr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fKe2cr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fKe2cr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fLwarn)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLwarn=",0,"true if warning messges are to be put out (default=true)");
   G__memvar_setup((void*)((long)(&p->fLrepor)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLrepor=",0,"true if exceptional conditions are put out (default=false)");
   G__memvar_setup((void*)((long)(&p->fLimset)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLimset=",0,"true if a parameter is up against limits (for MINOS)");
   G__memvar_setup((void*)((long)(&p->fLnolim)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLnolim=",0,"true if there are no limits on any parameters (not yet used)");
   G__memvar_setup((void*)((long)(&p->fLnewmn)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLnewmn=",0,"true if the previous process has unexpectedly improved FCN");
   G__memvar_setup((void*)((long)(&p->fLphead)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fLphead=",0,"true if a heading should be put out for the next parameter definition");
   G__memvar_setup((void*)((long)(&p->fGraphicsMode)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fGraphicsMode=",0,"true if graphics mode on (default)");
   G__memvar_setup((void*)((long)(&p->fChpt)-(long)(p)),67,0,0,-1,-1,-1,1,"fChpt=",0,"!Character to be plotted at the X,Y contour positions");
   G__memvar_setup((void*)((long)(&p->fCpnam)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCpnam=",0,"[fMaxpar2] Array of parameters names");
   G__memvar_setup((void*)((long)(&p->fCfrom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCfrom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCstatu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCstatu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCtitl)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCtitl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCword)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCword=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCundef)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCundef=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCvrsn)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCvrsn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCovmes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fCovmes[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fOrigin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fOrigin[100]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWarmes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TString),-1,-1,1,"fWarmes[100]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fObjectFit)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TObject),-1,-1,1,"fObjectFit=",0,"Pointer to object being fitted");
   G__memvar_setup((void*)((long)(&p->fPlot)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TObject),-1,-1,1,"fPlot=",0,"Pointer to TGraph object created by mncont");
   G__memvar_setup((void*)((long)(&p->fMethodCall)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMethodCall),-1,-1,1,"fMethodCall=",0,"Pointer to MethodCall in case of interpreted function");
   G__memvar_setup((void*)((long)(&p->fFCN)-(long)(p)),49,0,0,-1,G__defined_typename("void (*)(Int_t&npar, Double_t*gin, Double_t&f, Double_t*u, Int_t flag)"),-1,1,"fFCN=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TFitter */
static void G__setup_memvarTFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter));
   { TFitter *p; p=(TFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNlog=",0,"Number of elements in fSunLog");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCovar=",0,"Covariance matrix");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSumLog=",0,"Sum of logs (array of fNlog elements)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),-1,-1,4,"fMinuit=",0,"pointer to the TMinuit object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Minuit() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTLinearFitter(void) {
   /* TLinearFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter));
   G__memfunc_setup("AddToDesign",1062,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,4,0,
"D - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - e",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GraphLinearFitter",1723,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Graph2DLinearFitter",1841,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("HistLinearFitter",1633,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MultiGraphLinearFitter",2246,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLinearFitter",1309,G__G__Minuit_201_6_0,105,G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLinearFitter",1309,G__G__Minuit_201_7_0,105,G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),-1,0,3,1,1,0,
"i - 'Int_t' 0 - ndim C - - 10 - formula "
"C - 'Option_t' 10 \"D\" opt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLinearFitter",1309,G__G__Minuit_201_8_0,105,G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),-1,0,1,1,1,0,"i - 'Int_t' 0 - ndim",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TLinearFitter",1309,G__G__Minuit_201_9_0,105,G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),-1,0,2,1,1,0,
"U 'TFormula' - 0 - function C - 'Option_t' 10 \"D\" opt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddPoint",787,G__G__Minuit_201_0_1,121,-1,-1,0,3,1,1,0,
"D - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 1 e",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AssignData",991,G__G__Minuit_201_1_1,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 - npoints i - 'Int_t' 0 - xncols "
"D - 'Double_t' 0 - x D - 'Double_t' 0 - y "
"D - 'Double_t' 0 0 e",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clear",487,G__G__Minuit_201_2_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ClearPoints",1124,G__G__Minuit_201_3_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Chisquare",933,G__G__Minuit_201_4_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Eval",392,G__G__Minuit_201_5_1,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteCommand",1426,G__G__Minuit_201_6_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - command D - 'Double_t' 0 - - "
"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FixParameter",1224,G__G__Minuit_201_7_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FixParameter",1224,G__G__Minuit_201_8_1,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - ipar d - 'Double_t' 0 - parvalue",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetChisquare",1221,G__G__Minuit_201_9_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCovarianceMatrix",1936,G__G__Minuit_201_0_2,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCovarianceMatrix",1936,G__G__Minuit_201_1_2,121,-1,-1,0,1,1,1,0,"u 'TMatrixD' - 1 - matr",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCovarianceMatrixElement",2650,G__G__Minuit_201_2_2,100,-1,G__defined_typename("Double_t"),0,2,1,1,8,
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetErrors",925,G__G__Minuit_201_3_2,121,-1,-1,0,1,1,1,0,"u 'TVectorD' - 1 - vpar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumberTotalParameters",2465,G__G__Minuit_201_4_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumberFreeParameters",2335,G__G__Minuit_201_5_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParameters",1332,G__G__Minuit_201_6_2,121,-1,-1,0,1,1,1,0,"u 'TVectorD' - 1 - vpar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParameter",1217,G__G__Minuit_201_7_2,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParError",1101,G__G__Minuit_201_8_2,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParTValue",1172,G__G__Minuit_201_9_2,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParSignificance",1798,G__G__Minuit_201_0_3,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsFixed",684,G__G__Minuit_201_1_3,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintResults",1279,G__G__Minuit_201_2_3,121,-1,-1,0,2,1,1,8,
"i - 'Int_t' 0 - level d - 'Double_t' 0 0 amin",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReleaseParameter",1634,G__G__Minuit_201_3_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDim",582,G__G__Minuit_201_4_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFormula",1026,G__G__Minuit_201_5_3,121,-1,-1,0,1,1,1,0,"C - - 10 - formula",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFormula",1026,G__G__Minuit_201_6_3,121,-1,-1,0,1,1,1,0,"U 'TFormula' - 0 - function",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StoreData",903,G__G__Minuit_201_7_3,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 - store",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UpdateMatrix",1240,G__G__Minuit_201_8_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Chisquare",933,G__G__Minuit_201_9_3,100,-1,G__defined_typename("Double_t"),0,2,1,1,8,
"i - 'Int_t' 0 - - D - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetErrors",925,G__G__Minuit_201_0_4,105,-1,G__defined_typename("Int_t"),0,5,1,1,8,
"i - 'Int_t' 0 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParameter",1217,G__G__Minuit_201_1_4,105,-1,G__defined_typename("Int_t"),0,6,1,1,8,
"i - 'Int_t' 0 - - C - - 0 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStats",815,G__G__Minuit_201_2_4,105,-1,G__defined_typename("Int_t"),0,5,1,1,8,
"d - 'Double_t' 1 - - d - 'Double_t' 1 - - "
"d - 'Double_t' 1 - - i - 'Int_t' 1 - - "
"i - 'Int_t' 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSumLog",887,G__G__Minuit_201_3_4,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFitMethod",1200,G__G__Minuit_201_4_4,121,-1,-1,0,1,1,1,0,"C - - 10 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetParameter",1229,G__G__Minuit_201_5_4,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"i - 'Int_t' 0 - - C - - 10 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Minuit_201_6_4,85,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TLinearFitter::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Minuit_201_7_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLinearFitter::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Minuit_201_8_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TLinearFitter::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Minuit_201_9_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TLinearFitter::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Minuit_201_0_5,85,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Minuit_201_1_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Minuit_201_2_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Minuit_201_3_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Minuit_201_4_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLinearFitter::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Minuit_201_5_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLinearFitter::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Minuit_201_6_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TLinearFitter::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Minuit_201_7_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TLinearFitter::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TLinearFitter",1435,G__G__Minuit_201_8_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMinuit(void) {
   /* TMinuit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit));
   G__memfunc_setup("TMinuit",714,(G__InterfaceMethod)NULL,105,G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),-1,0,1,1,4,0,"u 'TMinuit' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMinuit",714,G__G__Minuit_202_2_0,105,G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMinuit",714,G__G__Minuit_202_3_0,105,G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),-1,0,1,1,1,0,"i - 'Int_t' 0 - maxpar",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BuildArrays",1122,G__G__Minuit_202_4_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 15 maxpar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clone",497,G__G__Minuit_202_5_0,85,G__get_linked_tagnum(&G__G__MinuitLN_TObject),-1,0,1,1,1,8,"C - - 10 \"\" newname","Clone-Method to copy the function-pointer fFCN",(void*)NULL,1);
   G__memfunc_setup("Command",703,G__G__Minuit_202_6_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"C - - 10 - command",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Contour",746,G__G__Minuit_202_7_0,85,G__get_linked_tagnum(&G__G__MinuitLN_TObject),-1,0,3,1,1,0,
"i - 'Int_t' 0 10 npoints i - 'Int_t' 0 0 pa1 "
"i - 'Int_t' 0 1 pa2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DefineParameter",1516,G__G__Minuit_202_8_0,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"i - 'Int_t' 0 - parNo C - - 10 - name "
"d - 'Double_t' 0 - initVal d - 'Double_t' 0 - initErr "
"d - 'Double_t' 0 - lowerLimit d - 'Double_t' 0 - upperLimit",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DeleteArrays",1221,G__G__Minuit_202_9_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Eval",392,G__G__Minuit_202_0_1,105,-1,G__defined_typename("Int_t"),0,5,1,1,0,
"i - 'Int_t' 0 - npar D - 'Double_t' 0 - grad "
"d - 'Double_t' 1 - fval D - 'Double_t' 0 - par "
"i - 'Int_t' 0 - flag",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FixParameter",1224,G__G__Minuit_202_1_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - parNo",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMethodCall",1277,G__G__Minuit_202_2_1,85,G__get_linked_tagnum(&G__G__MinuitLN_TMethodCall),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetObjectFit",1178,G__G__Minuit_202_3_1,85,G__get_linked_tagnum(&G__G__MinuitLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaxIterations",1640,G__G__Minuit_202_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumFixedPars",1494,G__G__Minuit_202_5_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumFreePars",1384,G__G__Minuit_202_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumPars",998,G__G__Minuit_202_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParameter",1217,G__G__Minuit_202_8_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,8,
"i - 'Int_t' 0 - parNo d - 'Double_t' 1 - currentValue "
"d - 'Double_t' 1 - currentError",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPlot",703,G__G__Minuit_202_9_1,85,G__get_linked_tagnum(&G__G__MinuitLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStatus",932,G__G__Minuit_202_0_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Migrad",596,G__G__Minuit_202_1_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnamin",640,G__G__Minuit_202_2_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnbins",647,G__G__Minuit_202_3_2,121,-1,-1,0,7,1,1,0,
"d - 'Double_t' 0 - a1 d - 'Double_t' 0 - a2 "
"i - 'Int_t' 0 - naa d - 'Double_t' 1 - bl "
"d - 'Double_t' 1 - bh i - 'Int_t' 1 - nb "
"d - 'Double_t' 1 - bwid",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mncalf",625,G__G__Minuit_202_4_2,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - pvec d - 'Double_t' 1 - ycalf",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mncler",641,G__G__Minuit_202_5_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mncntr",658,G__G__Minuit_202_6_2,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - ke1 i - 'Int_t' 0 - ke2 "
"i - 'Int_t' 1 - ierrf",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mncomd",638,G__G__Minuit_202_7_2,121,-1,-1,0,2,1,1,0,
"C - - 10 - crdbin i - 'Int_t' 1 - icondn",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mncont",655,G__G__Minuit_202_8_2,121,-1,-1,0,6,1,1,0,
"i - 'Int_t' 0 - ke1 i - 'Int_t' 0 - ke2 "
"i - 'Int_t' 0 - nptu D - 'Double_t' 0 - xptu "
"D - 'Double_t' 0 - yptu i - 'Int_t' 1 - ierrf",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mncrck",638,G__G__Minuit_202_9_2,121,-1,-1,0,9,1,1,0,
"u 'TString' - 0 - crdbuf i - 'Int_t' 0 - maxcwd "
"u 'TString' - 1 - comand i - 'Int_t' 1 - lnc "
"i - 'Int_t' 0 - mxp D - 'Double_t' 0 - plist "
"i - 'Int_t' 1 - llist i - 'Int_t' 1 - ierr "
"i - 'Int_t' 0 - isyswr",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mncros",658,G__G__Minuit_202_0_3,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 1 - aopt i - 'Int_t' 1 - iercr",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mncuve",654,G__G__Minuit_202_1_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnderi",639,G__G__Minuit_202_2_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mndxdi",644,G__G__Minuit_202_3_3,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - pint i - 'Int_t' 0 - ipar "
"d - 'Double_t' 1 - dxdi",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mneig",528,G__G__Minuit_202_4_3,121,-1,-1,0,7,1,1,0,
"D - 'Double_t' 0 - a i - 'Int_t' 0 - ndima "
"i - 'Int_t' 0 - n i - 'Int_t' 0 - mits "
"D - 'Double_t' 0 - work d - 'Double_t' 0 - precis "
"i - 'Int_t' 1 - ifault",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnemat",642,G__G__Minuit_202_5_3,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - emat i - 'Int_t' 0 - ndim",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnerrs",663,G__G__Minuit_202_6_3,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 - number d - 'Double_t' 1 - eplus "
"d - 'Double_t' 1 - eminus d - 'Double_t' 1 - eparab "
"d - 'Double_t' 1 - gcc",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mneval",643,G__G__Minuit_202_7_3,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - anext d - 'Double_t' 1 - fnext "
"i - 'Int_t' 1 - ierev",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnexcm",648,G__G__Minuit_202_8_3,121,-1,-1,0,4,1,1,0,
"C - - 10 - comand D - 'Double_t' 0 - plist "
"i - 'Int_t' 0 - llist i - 'Int_t' 1 - ierflg",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnexin",655,G__G__Minuit_202_9_3,121,-1,-1,0,1,1,1,0,"D - 'Double_t' 0 - pint",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnfixp",658,G__G__Minuit_202_0_4,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - iint i - 'Int_t' 1 - ierr",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnfree",637,G__G__Minuit_202_1_4,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - k",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mngrad",633,G__G__Minuit_202_2_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnhelp",644,G__G__Minuit_202_3_4,121,-1,-1,0,1,1,1,0,"u 'TString' - 0 - comd",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnhelp",644,G__G__Minuit_202_4_4,121,-1,-1,0,1,1,1,0,"C - - 10 \"\" command",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnhess",654,G__G__Minuit_202_5_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnhes1",588,G__G__Minuit_202_6_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnimpr",659,G__G__Minuit_202_7_4,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mninex",655,G__G__Minuit_202_8_4,121,-1,-1,0,1,1,1,0,"D - 'Double_t' 0 - pint",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mninit",655,G__G__Minuit_202_9_4,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - i1 i - 'Int_t' 0 - i2 "
"i - 'Int_t' 0 - i3",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnlims",656,G__G__Minuit_202_0_5,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnline",643,G__G__Minuit_202_1_5,121,-1,-1,0,5,1,1,0,
"D - 'Double_t' 0 - start d - 'Double_t' 0 - fstart "
"D - 'Double_t' 0 - step d - 'Double_t' 0 - slope "
"d - 'Double_t' 0 - toler",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnmatu",658,G__G__Minuit_202_2_5,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - kode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnmigr",650,G__G__Minuit_202_3_5,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnmnos",664,G__G__Minuit_202_4_5,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnmnot",665,G__G__Minuit_202_5_5,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - ilax i - 'Int_t' 0 - ilax2 "
"d - 'Double_t' 1 - val2pl d - 'Double_t' 1 - val2mi",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnparm",651,G__G__Minuit_202_6_5,121,-1,-1,0,7,1,1,0,
"i - 'Int_t' 0 - k u 'TString' - 0 - cnamj "
"d - 'Double_t' 0 - uk d - 'Double_t' 0 - wk "
"d - 'Double_t' 0 - a d - 'Double_t' 0 - b "
"i - 'Int_t' 1 - ierflg",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnpars",657,G__G__Minuit_202_7_5,121,-1,-1,0,2,1,1,0,
"u 'TString' - 1 - crdbuf i - 'Int_t' 1 - icondn",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnpfit",654,G__G__Minuit_202_8_5,121,-1,-1,0,5,1,1,0,
"D - 'Double_t' 0 - parx2p D - 'Double_t' 0 - pary2p "
"i - 'Int_t' 0 - npar2p D - 'Double_t' 0 - coef2p "
"d - 'Double_t' 1 - sdev2p",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnpint",662,G__G__Minuit_202_9_5,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 1 - pexti i - 'Int_t' 0 - i "
"d - 'Double_t' 1 - pinti",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnplot",666,G__G__Minuit_202_0_6,121,-1,-1,0,6,1,1,0,
"D - 'Double_t' 0 - xpt D - 'Double_t' 0 - ypt "
"C - - 0 - chpt i - 'Int_t' 0 - nxypt "
"i - 'Int_t' 0 - npagwd i - 'Int_t' 0 - npagln",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnpout",675,G__G__Minuit_202_1_6,121,-1,-1,0,7,1,1,8,
"i - 'Int_t' 0 - iuext u 'TString' - 1 - chnam "
"d - 'Double_t' 1 - val d - 'Double_t' 1 - err "
"d - 'Double_t' 1 - xlolim d - 'Double_t' 1 - xuplim "
"i - 'Int_t' 1 - iuint",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnprin",660,G__G__Minuit_202_2_6,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - inkode d - 'Double_t' 0 - fval",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnpsdf",648,G__G__Minuit_202_3_6,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnrazz",674,G__G__Minuit_202_4_6,121,-1,-1,0,5,1,1,0,
"d - 'Double_t' 0 - ynew D - 'Double_t' 0 - pnew "
"D - 'Double_t' 0 - y i - 'Int_t' 1 - jh "
"i - 'Int_t' 1 - jl",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnrn15",545,G__G__Minuit_202_5_6,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 1 - val i - 'Int_t' 1 - inseed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnrset",665,G__G__Minuit_202_6_6,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - iopt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnsave",650,G__G__Minuit_202_7_6,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnscan",640,G__G__Minuit_202_8_6,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnseek",643,G__G__Minuit_202_9_6,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnset",551,G__G__Minuit_202_0_7,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnsimp",660,G__G__Minuit_202_1_7,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnstat",663,G__G__Minuit_202_2_7,121,-1,-1,0,6,1,1,0,
"d - 'Double_t' 1 - fmin d - 'Double_t' 1 - fedm "
"d - 'Double_t' 1 - errdef i - 'Int_t' 1 - npari "
"i - 'Int_t' 1 - nparx i - 'Int_t' 1 - istat",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mntiny",671,G__G__Minuit_202_3_7,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 - epsp1 d - 'Double_t' 1 - epsbak",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnunpt",674,G__G__Minuit_202_4_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TString' - 1 - cfname",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("mnvert",668,G__G__Minuit_202_5_7,121,-1,-1,0,5,1,1,0,
"D - 'Double_t' 0 - a i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - m i - 'Int_t' 0 - n "
"i - 'Int_t' 1 - ifail",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnwarn",659,G__G__Minuit_202_6_7,121,-1,-1,0,3,1,1,0,
"C - - 10 - copt C - - 10 - corg "
"C - - 10 - cmes",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("mnwerr",667,G__G__Minuit_202_7_7,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Release",705,G__G__Minuit_202_8_7,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - parNo",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetErrorDef",1093,G__G__Minuit_202_9_7,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"d - 'Double_t' 0 - up",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFCN",515,G__G__Minuit_202_0_8,121,-1,-1,0,1,1,1,0,"Y - - 0 - fcn",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFCN",515,G__G__Minuit_202_1_8,121,-1,-1,0,1,1,1,0,"1 - 'void (*)(Int_t&, Double_t*, Double_t&f, Double_t*, Int_t)' 0 - fcn",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetGraphicsMode",1506,G__G__Minuit_202_2_8,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE mode",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMaxIterations",1652,G__G__Minuit_202_3_8,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 500 maxiter",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetObjectFit",1190,G__G__Minuit_202_4_8,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPrintLevel",1329,G__G__Minuit_202_5_8,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 0 printLevel",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Minuit_202_6_8,85,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMinuit::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Minuit_202_7_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMinuit::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Minuit_202_8_8,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMinuit::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Minuit_202_9_8,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMinuit::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Minuit_202_0_9,85,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Minuit_202_1_9,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Minuit_202_2_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Minuit_202_3_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Minuit_202_4_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMinuit::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Minuit_202_5_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMinuit::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Minuit_202_6_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMinuit::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Minuit_202_7_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMinuit::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMinuit",840,G__G__Minuit_202_8_9,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Minuit_202_9_9,(int)('u'),G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),-1,1,1,1,1,0,"u 'TMinuit' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFitter(void) {
   /* TFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter));
   G__memfunc_setup("TFitter",706,G__G__Minuit_203_1_0,105,G__get_linked_tagnum(&G__G__MinuitLN_TFitter),-1,0,1,1,1,0,"i - 'Int_t' 0 25 maxpar",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Chisquare",933,G__G__Minuit_203_2_0,100,-1,G__defined_typename("Double_t"),0,2,1,1,8,
"i - 'Int_t' 0 - npar D - 'Double_t' 0 - params",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clear",487,G__G__Minuit_203_3_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteCommand",1426,G__G__Minuit_203_4_0,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"C - - 10 - command D - 'Double_t' 0 - args "
"i - 'Int_t' 0 - nargs",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FixParameter",1224,G__G__Minuit_203_5_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCovarianceMatrix",1936,G__G__Minuit_203_6_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCovarianceMatrixElement",2650,G__G__Minuit_203_7_0,100,-1,G__defined_typename("Double_t"),0,2,1,1,8,
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetErrors",925,G__G__Minuit_203_8_0,105,-1,G__defined_typename("Int_t"),0,5,1,1,8,
"i - 'Int_t' 0 - ipar d - 'Double_t' 1 - eplus "
"d - 'Double_t' 1 - eminus d - 'Double_t' 1 - eparab "
"d - 'Double_t' 1 - globcc",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumberTotalParameters",2465,G__G__Minuit_203_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumberFreeParameters",2335,G__G__Minuit_203_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParError",1101,G__G__Minuit_203_1_1,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParameter",1217,G__G__Minuit_203_2_1,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParameter",1217,G__G__Minuit_203_3_1,105,-1,G__defined_typename("Int_t"),0,6,1,1,8,
"i - 'Int_t' 0 - ipar C - - 0 - name "
"d - 'Double_t' 1 - value d - 'Double_t' 1 - verr "
"d - 'Double_t' 1 - vlow d - 'Double_t' 1 - vhigh",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetStats",815,G__G__Minuit_203_4_1,105,-1,G__defined_typename("Int_t"),0,5,1,1,8,
"d - 'Double_t' 1 - amin d - 'Double_t' 1 - edm "
"d - 'Double_t' 1 - errdef i - 'Int_t' 1 - nvpar "
"i - 'Int_t' 1 - nparx",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSumLog",887,G__G__Minuit_203_5_1,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsFixed",684,G__G__Minuit_203_6_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PrintResults",1279,G__G__Minuit_203_7_1,121,-1,-1,0,2,1,1,8,
"i - 'Int_t' 0 - level d - 'Double_t' 0 - amin",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ReleaseParameter",1634,G__G__Minuit_203_8_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ipar",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFCN",515,G__G__Minuit_203_9_1,121,-1,-1,0,1,1,1,0,"Y - - 0 - fcn",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFCN",515,G__G__Minuit_203_0_2,121,-1,-1,0,1,1,1,0,"1 - 'void (*)(Int_t&, Double_t*, Double_t&f, Double_t*, Int_t)' 0 - fcn",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetFitMethod",1200,G__G__Minuit_203_1_2,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetParameter",1229,G__G__Minuit_203_2_2,105,-1,G__defined_typename("Int_t"),0,6,1,1,0,
"i - 'Int_t' 0 - ipar C - - 10 - parname "
"d - 'Double_t' 0 - value d - 'Double_t' 0 - verr "
"d - 'Double_t' 0 - vlow d - 'Double_t' 0 - vhigh",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Minuit_203_3_2,85,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TFitter::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Minuit_203_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFitter::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Minuit_203_5_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TFitter::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Minuit_203_6_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TFitter::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Minuit_203_7_2,85,G__get_linked_tagnum(&G__G__MinuitLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Minuit_203_8_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Minuit_203_9_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Minuit_203_0_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Minuit_203_1_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFitter::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Minuit_203_2_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFitter::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Minuit_203_3_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TFitter::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Minuit_203_4_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TFitter::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TFitter",706,G__G__Minuit_203_5_3,(int)('i'),G__get_linked_tagnum(&G__G__MinuitLN_TFitter),-1,0,1,1,1,0,"u 'TFitter' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TFitter",832,G__G__Minuit_203_6_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Minuit_203_7_3,(int)('u'),G__get_linked_tagnum(&G__G__MinuitLN_TFitter),-1,1,1,1,1,0,"u 'TFitter' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Minuit() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gMinuit),85,0,0,G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),-1,-1,1,"gMinuit=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Minuit() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Minuit() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__MinuitLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMethodCall = { "TMethodCall" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TVectorD = { "TVectorD" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixD = { "TMatrixD" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMatrixDSym = { "TMatrixDSym" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TFormula = { "TFormula" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TVirtualFitter = { "TVirtualFitter" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TLinearFitter = { "TLinearFitter" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMinuit = { "TMinuit" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TFitter = { "TFitter" , 99 , -1 };
G__linked_taginfo G__G__MinuitLN_TMinuitcLcLdA = { "TMinuit::$" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Minuit() {
  G__G__MinuitLN_TClass.tagnum = -1 ;
  G__G__MinuitLN_TBuffer.tagnum = -1 ;
  G__G__MinuitLN_TMemberInspector.tagnum = -1 ;
  G__G__MinuitLN_TObject.tagnum = -1 ;
  G__G__MinuitLN_TNamed.tagnum = -1 ;
  G__G__MinuitLN_TObjArray.tagnum = -1 ;
  G__G__MinuitLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__MinuitLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MinuitLN_TString.tagnum = -1 ;
  G__G__MinuitLN_TMethodCall.tagnum = -1 ;
  G__G__MinuitLN_TVectorD.tagnum = -1 ;
  G__G__MinuitLN_TMatrixD.tagnum = -1 ;
  G__G__MinuitLN_TMatrixDSym.tagnum = -1 ;
  G__G__MinuitLN_TFormula.tagnum = -1 ;
  G__G__MinuitLN_TVirtualFitter.tagnum = -1 ;
  G__G__MinuitLN_TLinearFitter.tagnum = -1 ;
  G__G__MinuitLN_TMinuit.tagnum = -1 ;
  G__G__MinuitLN_TFitter.tagnum = -1 ;
  G__G__MinuitLN_TMinuitcLcLdA.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Minuit() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__MinuitLN_TClass);
   G__get_linked_tagnum(&G__G__MinuitLN_TBuffer);
   G__get_linked_tagnum(&G__G__MinuitLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__MinuitLN_TObject);
   G__get_linked_tagnum(&G__G__MinuitLN_TNamed);
   G__get_linked_tagnum(&G__G__MinuitLN_TObjArray);
   G__get_linked_tagnum(&G__G__MinuitLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__MinuitLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__MinuitLN_TString);
   G__get_linked_tagnum(&G__G__MinuitLN_TMethodCall);
   G__get_linked_tagnum(&G__G__MinuitLN_TVectorD);
   G__get_linked_tagnum(&G__G__MinuitLN_TMatrixD);
   G__get_linked_tagnum(&G__G__MinuitLN_TMatrixDSym);
   G__get_linked_tagnum(&G__G__MinuitLN_TFormula);
   G__get_linked_tagnum(&G__G__MinuitLN_TVirtualFitter);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MinuitLN_TLinearFitter),sizeof(TLinearFitter),-1,324864,"fit a set of data points with a linear combination of functions",G__setup_memvarTLinearFitter,G__setup_memfuncTLinearFitter);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MinuitLN_TMinuit),sizeof(TMinuit),-1,325376,"The MINUIT minimisation package",G__setup_memvarTMinuit,G__setup_memfuncTMinuit);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MinuitLN_TFitter),sizeof(TFitter),-1,324864,"The ROOT standard fitter based on TMinuit",G__setup_memvarTFitter,G__setup_memfuncTFitter);
   G__get_linked_tagnum(&G__G__MinuitLN_TMinuitcLcLdA);
}
extern "C" void G__cpp_setupG__Minuit(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Minuit()");
  G__set_cpp_environmentG__Minuit();
  G__cpp_setup_tagtableG__Minuit();

  G__cpp_setup_inheritanceG__Minuit();

  G__cpp_setup_typetableG__Minuit();

  G__cpp_setup_memvarG__Minuit();

  G__cpp_setup_memfuncG__Minuit();
  G__cpp_setup_globalG__Minuit();
  G__cpp_setup_funcG__Minuit();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Minuit();
  return;
}
class G__cpp_setup_initG__Minuit {
  public:
    G__cpp_setup_initG__Minuit() { G__add_setup_func("G__Minuit",(G__incsetup)(&G__cpp_setupG__Minuit)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Minuit() { G__remove_setup_func("G__Minuit"); }
};
G__cpp_setup_initG__Minuit G__cpp_setup_initializerG__Minuit;

