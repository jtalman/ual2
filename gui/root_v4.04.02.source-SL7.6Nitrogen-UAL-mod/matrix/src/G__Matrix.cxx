//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:23:27 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__Matrix.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TMatrixFBase_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFBase_IsA(const void*);
   static void delete_TMatrixFBase(void *p);
   static void deleteArray_TMatrixFBase(void *p);
   static void destruct_TMatrixFBase(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFBase*)
   {
      ::TMatrixFBase *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFBase", ::TMatrixFBase::Class_Version(), "matrix/inc/TMatrixFBase.h", 48,
                  typeid(::TMatrixFBase), DefineBehavior(ptr, ptr),
                  &::TMatrixFBase::Dictionary, &TMatrixFBase_IsA, 1,
                  sizeof(::TMatrixFBase) );
      instance.SetDelete(&delete_TMatrixFBase);
      instance.SetDeleteArray(&deleteArray_TMatrixFBase);
      instance.SetDestructor(&destruct_TMatrixFBase);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDBase_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDBase_IsA(const void*);
   static void delete_TMatrixDBase(void *p);
   static void deleteArray_TMatrixDBase(void *p);
   static void destruct_TMatrixDBase(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDBase*)
   {
      ::TMatrixDBase *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDBase", ::TMatrixDBase::Class_Version(), "matrix/inc/TMatrixDBase.h", 49,
                  typeid(::TMatrixDBase), DefineBehavior(ptr, ptr),
                  &::TMatrixDBase::Dictionary, &TMatrixDBase_IsA, 1,
                  sizeof(::TMatrixDBase) );
      instance.SetDelete(&delete_TMatrixDBase);
      instance.SetDeleteArray(&deleteArray_TMatrixDBase);
      instance.SetDestructor(&destruct_TMatrixDBase);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TVectorF_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TVectorF_IsA(const void*);
   static void *new_TVectorF(void *p = 0);
   static void *newArray_TVectorF(Long_t size);
   static void delete_TVectorF(void *p);
   static void deleteArray_TVectorF(void *p);
   static void destruct_TVectorF(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TVectorF*)
   {
      ::TVectorF *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TVectorF", ::TVectorF::Class_Version(), "matrix/inc/TVectorF.h", 30,
                  typeid(::TVectorF), DefineBehavior(ptr, ptr),
                  &::TVectorF::Dictionary, &TVectorF_IsA, 1,
                  sizeof(::TVectorF) );
      instance.SetNew(&new_TVectorF);
      instance.SetNewArray(&newArray_TVectorF);
      instance.SetDelete(&delete_TVectorF);
      instance.SetDeleteArray(&deleteArray_TVectorF);
      instance.SetDestructor(&destruct_TVectorF);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TVectorF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TVectorD_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TVectorD_IsA(const void*);
   static void *new_TVectorD(void *p = 0);
   static void *newArray_TVectorD(Long_t size);
   static void delete_TVectorD(void *p);
   static void deleteArray_TVectorD(void *p);
   static void destruct_TVectorD(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TVectorD*)
   {
      ::TVectorD *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TVectorD", ::TVectorD::Class_Version(), "matrix/inc/TVectorD.h", 33,
                  typeid(::TVectorD), DefineBehavior(ptr, ptr),
                  &::TVectorD::Dictionary, &TVectorD_IsA, 1,
                  sizeof(::TVectorD) );
      instance.SetNew(&new_TVectorD);
      instance.SetNewArray(&newArray_TVectorD);
      instance.SetDelete(&delete_TVectorD);
      instance.SetDeleteArray(&deleteArray_TVectorD);
      instance.SetDestructor(&destruct_TVectorD);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TVectorD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixD_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixD_IsA(const void*);
   static void *new_TMatrixD(void *p = 0);
   static void *newArray_TMatrixD(Long_t size);
   static void delete_TMatrixD(void *p);
   static void deleteArray_TMatrixD(void *p);
   static void destruct_TMatrixD(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixD*)
   {
      ::TMatrixD *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixD", ::TMatrixD::Class_Version(), "matrix/inc/TMatrixD.h", 40,
                  typeid(::TMatrixD), DefineBehavior(ptr, ptr),
                  &::TMatrixD::Dictionary, &TMatrixD_IsA, 1,
                  sizeof(::TMatrixD) );
      instance.SetNew(&new_TMatrixD);
      instance.SetNewArray(&newArray_TMatrixD);
      instance.SetDelete(&delete_TMatrixD);
      instance.SetDeleteArray(&deleteArray_TMatrixD);
      instance.SetDestructor(&destruct_TMatrixD);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDSym_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDSym_IsA(const void*);
   static void *new_TMatrixDSym(void *p = 0);
   static void *newArray_TMatrixDSym(Long_t size);
   static void delete_TMatrixDSym(void *p);
   static void deleteArray_TMatrixDSym(void *p);
   static void destruct_TMatrixDSym(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDSym*)
   {
      ::TMatrixDSym *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDSym", ::TMatrixDSym::Class_Version(), "matrix/inc/TMatrixDSym.h", 39,
                  typeid(::TMatrixDSym), DefineBehavior(ptr, ptr),
                  &::TMatrixDSym::Dictionary, &TMatrixDSym_IsA, 1,
                  sizeof(::TMatrixDSym) );
      instance.SetNew(&new_TMatrixDSym);
      instance.SetNewArray(&newArray_TMatrixDSym);
      instance.SetDelete(&delete_TMatrixDSym);
      instance.SetDeleteArray(&deleteArray_TMatrixDSym);
      instance.SetDestructor(&destruct_TMatrixDSym);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDSym*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDSparse_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDSparse_IsA(const void*);
   static void *new_TMatrixDSparse(void *p = 0);
   static void *newArray_TMatrixDSparse(Long_t size);
   static void delete_TMatrixDSparse(void *p);
   static void deleteArray_TMatrixDSparse(void *p);
   static void destruct_TMatrixDSparse(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDSparse*)
   {
      ::TMatrixDSparse *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDSparse", ::TMatrixDSparse::Class_Version(), "matrix/inc/TMatrixDSparse.h", 39,
                  typeid(::TMatrixDSparse), DefineBehavior(ptr, ptr),
                  &::TMatrixDSparse::Dictionary, &TMatrixDSparse_IsA, 4,
                  sizeof(::TMatrixDSparse) );
      instance.SetNew(&new_TMatrixDSparse);
      instance.SetNewArray(&newArray_TMatrixDSparse);
      instance.SetDelete(&delete_TMatrixDSparse);
      instance.SetDeleteArray(&deleteArray_TMatrixDSparse);
      instance.SetDestructor(&destruct_TMatrixDSparse);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDSparse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDRow_const_IsA(const void*);
   static void *new_TMatrixDRow_const(void *p = 0);
   static void *newArray_TMatrixDRow_const(Long_t size);
   static void delete_TMatrixDRow_const(void *p);
   static void deleteArray_TMatrixDRow_const(void *p);
   static void destruct_TMatrixDRow_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDRow_const*)
   {
      ::TMatrixDRow_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDRow_const", ::TMatrixDRow_const::Class_Version(), "matrix/inc/TMatrixDUtils.h", 110,
                  typeid(::TMatrixDRow_const), DefineBehavior(ptr, ptr),
                  &::TMatrixDRow_const::Dictionary, &TMatrixDRow_const_IsA, 0,
                  sizeof(::TMatrixDRow_const) );
      instance.SetNew(&new_TMatrixDRow_const);
      instance.SetNewArray(&newArray_TMatrixDRow_const);
      instance.SetDelete(&delete_TMatrixDRow_const);
      instance.SetDeleteArray(&deleteArray_TMatrixDRow_const);
      instance.SetDestructor(&destruct_TMatrixDRow_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDRow_IsA(const void*);
   static void *new_TMatrixDRow(void *p = 0);
   static void *newArray_TMatrixDRow(Long_t size);
   static void delete_TMatrixDRow(void *p);
   static void deleteArray_TMatrixDRow(void *p);
   static void destruct_TMatrixDRow(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDRow*)
   {
      ::TMatrixDRow *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDRow", ::TMatrixDRow::Class_Version(), "matrix/inc/TMatrixDUtils.h", 137,
                  typeid(::TMatrixDRow), DefineBehavior(ptr, ptr),
                  &::TMatrixDRow::Dictionary, &TMatrixDRow_IsA, 0,
                  sizeof(::TMatrixDRow) );
      instance.SetNew(&new_TMatrixDRow);
      instance.SetNewArray(&newArray_TMatrixDRow);
      instance.SetDelete(&delete_TMatrixDRow);
      instance.SetDeleteArray(&deleteArray_TMatrixDRow);
      instance.SetDestructor(&destruct_TMatrixDRow);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDColumn_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDColumn_const_IsA(const void*);
   static void *new_TMatrixDColumn_const(void *p = 0);
   static void *newArray_TMatrixDColumn_const(Long_t size);
   static void delete_TMatrixDColumn_const(void *p);
   static void deleteArray_TMatrixDColumn_const(void *p);
   static void destruct_TMatrixDColumn_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDColumn_const*)
   {
      ::TMatrixDColumn_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDColumn_const", ::TMatrixDColumn_const::Class_Version(), "matrix/inc/TMatrixDUtils.h", 180,
                  typeid(::TMatrixDColumn_const), DefineBehavior(ptr, ptr),
                  &::TMatrixDColumn_const::Dictionary, &TMatrixDColumn_const_IsA, 0,
                  sizeof(::TMatrixDColumn_const) );
      instance.SetNew(&new_TMatrixDColumn_const);
      instance.SetNewArray(&newArray_TMatrixDColumn_const);
      instance.SetDelete(&delete_TMatrixDColumn_const);
      instance.SetDeleteArray(&deleteArray_TMatrixDColumn_const);
      instance.SetDestructor(&destruct_TMatrixDColumn_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDColumn_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDColumn_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDColumn_IsA(const void*);
   static void *new_TMatrixDColumn(void *p = 0);
   static void *newArray_TMatrixDColumn(Long_t size);
   static void delete_TMatrixDColumn(void *p);
   static void deleteArray_TMatrixDColumn(void *p);
   static void destruct_TMatrixDColumn(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDColumn*)
   {
      ::TMatrixDColumn *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDColumn", ::TMatrixDColumn::Class_Version(), "matrix/inc/TMatrixDUtils.h", 207,
                  typeid(::TMatrixDColumn), DefineBehavior(ptr, ptr),
                  &::TMatrixDColumn::Dictionary, &TMatrixDColumn_IsA, 0,
                  sizeof(::TMatrixDColumn) );
      instance.SetNew(&new_TMatrixDColumn);
      instance.SetNewArray(&newArray_TMatrixDColumn);
      instance.SetDelete(&delete_TMatrixDColumn);
      instance.SetDeleteArray(&deleteArray_TMatrixDColumn);
      instance.SetDestructor(&destruct_TMatrixDColumn);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDColumn*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDDiag_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDDiag_const_IsA(const void*);
   static void *new_TMatrixDDiag_const(void *p = 0);
   static void *newArray_TMatrixDDiag_const(Long_t size);
   static void delete_TMatrixDDiag_const(void *p);
   static void deleteArray_TMatrixDDiag_const(void *p);
   static void destruct_TMatrixDDiag_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDDiag_const*)
   {
      ::TMatrixDDiag_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDDiag_const", ::TMatrixDDiag_const::Class_Version(), "matrix/inc/TMatrixDUtils.h", 250,
                  typeid(::TMatrixDDiag_const), DefineBehavior(ptr, ptr),
                  &::TMatrixDDiag_const::Dictionary, &TMatrixDDiag_const_IsA, 0,
                  sizeof(::TMatrixDDiag_const) );
      instance.SetNew(&new_TMatrixDDiag_const);
      instance.SetNewArray(&newArray_TMatrixDDiag_const);
      instance.SetDelete(&delete_TMatrixDDiag_const);
      instance.SetDeleteArray(&deleteArray_TMatrixDDiag_const);
      instance.SetDestructor(&destruct_TMatrixDDiag_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDDiag_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDDiag_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDDiag_IsA(const void*);
   static void *new_TMatrixDDiag(void *p = 0);
   static void *newArray_TMatrixDDiag(Long_t size);
   static void delete_TMatrixDDiag(void *p);
   static void deleteArray_TMatrixDDiag(void *p);
   static void destruct_TMatrixDDiag(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDDiag*)
   {
      ::TMatrixDDiag *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDDiag", ::TMatrixDDiag::Class_Version(), "matrix/inc/TMatrixDUtils.h", 276,
                  typeid(::TMatrixDDiag), DefineBehavior(ptr, ptr),
                  &::TMatrixDDiag::Dictionary, &TMatrixDDiag_IsA, 0,
                  sizeof(::TMatrixDDiag) );
      instance.SetNew(&new_TMatrixDDiag);
      instance.SetNewArray(&newArray_TMatrixDDiag);
      instance.SetDelete(&delete_TMatrixDDiag);
      instance.SetDeleteArray(&deleteArray_TMatrixDDiag);
      instance.SetDestructor(&destruct_TMatrixDDiag);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDDiag*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDFlat_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDFlat_const_IsA(const void*);
   static void *new_TMatrixDFlat_const(void *p = 0);
   static void *newArray_TMatrixDFlat_const(Long_t size);
   static void delete_TMatrixDFlat_const(void *p);
   static void deleteArray_TMatrixDFlat_const(void *p);
   static void destruct_TMatrixDFlat_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDFlat_const*)
   {
      ::TMatrixDFlat_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDFlat_const", ::TMatrixDFlat_const::Class_Version(), "matrix/inc/TMatrixDUtils.h", 316,
                  typeid(::TMatrixDFlat_const), DefineBehavior(ptr, ptr),
                  &::TMatrixDFlat_const::Dictionary, &TMatrixDFlat_const_IsA, 0,
                  sizeof(::TMatrixDFlat_const) );
      instance.SetNew(&new_TMatrixDFlat_const);
      instance.SetNewArray(&newArray_TMatrixDFlat_const);
      instance.SetDelete(&delete_TMatrixDFlat_const);
      instance.SetDeleteArray(&deleteArray_TMatrixDFlat_const);
      instance.SetDestructor(&destruct_TMatrixDFlat_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDFlat_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDFlat_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDFlat_IsA(const void*);
   static void *new_TMatrixDFlat(void *p = 0);
   static void *newArray_TMatrixDFlat(Long_t size);
   static void delete_TMatrixDFlat(void *p);
   static void deleteArray_TMatrixDFlat(void *p);
   static void destruct_TMatrixDFlat(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDFlat*)
   {
      ::TMatrixDFlat *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDFlat", ::TMatrixDFlat::Class_Version(), "matrix/inc/TMatrixDUtils.h", 338,
                  typeid(::TMatrixDFlat), DefineBehavior(ptr, ptr),
                  &::TMatrixDFlat::Dictionary, &TMatrixDFlat_IsA, 0,
                  sizeof(::TMatrixDFlat) );
      instance.SetNew(&new_TMatrixDFlat);
      instance.SetNewArray(&newArray_TMatrixDFlat);
      instance.SetDelete(&delete_TMatrixDFlat);
      instance.SetDeleteArray(&deleteArray_TMatrixDFlat);
      instance.SetDestructor(&destruct_TMatrixDFlat);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDFlat*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDSub_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDSub_const_IsA(const void*);
   static void *new_TMatrixDSub_const(void *p = 0);
   static void *newArray_TMatrixDSub_const(Long_t size);
   static void delete_TMatrixDSub_const(void *p);
   static void deleteArray_TMatrixDSub_const(void *p);
   static void destruct_TMatrixDSub_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDSub_const*)
   {
      ::TMatrixDSub_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDSub_const", ::TMatrixDSub_const::Class_Version(), "matrix/inc/TMatrixDUtils.h", 378,
                  typeid(::TMatrixDSub_const), DefineBehavior(ptr, ptr),
                  &::TMatrixDSub_const::Dictionary, &TMatrixDSub_const_IsA, 0,
                  sizeof(::TMatrixDSub_const) );
      instance.SetNew(&new_TMatrixDSub_const);
      instance.SetNewArray(&newArray_TMatrixDSub_const);
      instance.SetDelete(&delete_TMatrixDSub_const);
      instance.SetDeleteArray(&deleteArray_TMatrixDSub_const);
      instance.SetDestructor(&destruct_TMatrixDSub_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDSub_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDSub_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDSub_IsA(const void*);
   static void *new_TMatrixDSub(void *p = 0);
   static void *newArray_TMatrixDSub(Long_t size);
   static void delete_TMatrixDSub(void *p);
   static void deleteArray_TMatrixDSub(void *p);
   static void destruct_TMatrixDSub(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDSub*)
   {
      ::TMatrixDSub *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDSub", ::TMatrixDSub::Class_Version(), "matrix/inc/TMatrixDUtils.h", 411,
                  typeid(::TMatrixDSub), DefineBehavior(ptr, ptr),
                  &::TMatrixDSub::Dictionary, &TMatrixDSub_IsA, 0,
                  sizeof(::TMatrixDSub) );
      instance.SetNew(&new_TMatrixDSub);
      instance.SetNewArray(&newArray_TMatrixDSub);
      instance.SetDelete(&delete_TMatrixDSub);
      instance.SetDeleteArray(&deleteArray_TMatrixDSub);
      instance.SetDestructor(&destruct_TMatrixDSub);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDSub*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDSparseRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDSparseRow_const_IsA(const void*);
   static void *new_TMatrixDSparseRow_const(void *p = 0);
   static void *newArray_TMatrixDSparseRow_const(Long_t size);
   static void delete_TMatrixDSparseRow_const(void *p);
   static void deleteArray_TMatrixDSparseRow_const(void *p);
   static void destruct_TMatrixDSparseRow_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDSparseRow_const*)
   {
      ::TMatrixDSparseRow_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDSparseRow_const", ::TMatrixDSparseRow_const::Class_Version(), "matrix/inc/TMatrixDUtils.h", 456,
                  typeid(::TMatrixDSparseRow_const), DefineBehavior(ptr, ptr),
                  &::TMatrixDSparseRow_const::Dictionary, &TMatrixDSparseRow_const_IsA, 0,
                  sizeof(::TMatrixDSparseRow_const) );
      instance.SetNew(&new_TMatrixDSparseRow_const);
      instance.SetNewArray(&newArray_TMatrixDSparseRow_const);
      instance.SetDelete(&delete_TMatrixDSparseRow_const);
      instance.SetDeleteArray(&deleteArray_TMatrixDSparseRow_const);
      instance.SetDestructor(&destruct_TMatrixDSparseRow_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDSparseRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDSparseRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDSparseRow_IsA(const void*);
   static void *new_TMatrixDSparseRow(void *p = 0);
   static void *newArray_TMatrixDSparseRow(Long_t size);
   static void delete_TMatrixDSparseRow(void *p);
   static void deleteArray_TMatrixDSparseRow(void *p);
   static void destruct_TMatrixDSparseRow(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDSparseRow*)
   {
      ::TMatrixDSparseRow *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDSparseRow", ::TMatrixDSparseRow::Class_Version(), "matrix/inc/TMatrixDUtils.h", 487,
                  typeid(::TMatrixDSparseRow), DefineBehavior(ptr, ptr),
                  &::TMatrixDSparseRow::Dictionary, &TMatrixDSparseRow_IsA, 0,
                  sizeof(::TMatrixDSparseRow) );
      instance.SetNew(&new_TMatrixDSparseRow);
      instance.SetNewArray(&newArray_TMatrixDSparseRow);
      instance.SetDelete(&delete_TMatrixDSparseRow);
      instance.SetDeleteArray(&deleteArray_TMatrixDSparseRow);
      instance.SetDestructor(&destruct_TMatrixDSparseRow);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDSparseRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDSparseDiag_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDSparseDiag_const_IsA(const void*);
   static void *new_TMatrixDSparseDiag_const(void *p = 0);
   static void *newArray_TMatrixDSparseDiag_const(Long_t size);
   static void delete_TMatrixDSparseDiag_const(void *p);
   static void deleteArray_TMatrixDSparseDiag_const(void *p);
   static void destruct_TMatrixDSparseDiag_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDSparseDiag_const*)
   {
      ::TMatrixDSparseDiag_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDSparseDiag_const", ::TMatrixDSparseDiag_const::Class_Version(), "matrix/inc/TMatrixDUtils.h", 528,
                  typeid(::TMatrixDSparseDiag_const), DefineBehavior(ptr, ptr),
                  &::TMatrixDSparseDiag_const::Dictionary, &TMatrixDSparseDiag_const_IsA, 0,
                  sizeof(::TMatrixDSparseDiag_const) );
      instance.SetNew(&new_TMatrixDSparseDiag_const);
      instance.SetNewArray(&newArray_TMatrixDSparseDiag_const);
      instance.SetDelete(&delete_TMatrixDSparseDiag_const);
      instance.SetDeleteArray(&deleteArray_TMatrixDSparseDiag_const);
      instance.SetDestructor(&destruct_TMatrixDSparseDiag_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDSparseDiag_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDSparseDiag_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDSparseDiag_IsA(const void*);
   static void *new_TMatrixDSparseDiag(void *p = 0);
   static void *newArray_TMatrixDSparseDiag(Long_t size);
   static void delete_TMatrixDSparseDiag(void *p);
   static void deleteArray_TMatrixDSparseDiag(void *p);
   static void destruct_TMatrixDSparseDiag(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDSparseDiag*)
   {
      ::TMatrixDSparseDiag *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDSparseDiag", ::TMatrixDSparseDiag::Class_Version(), "matrix/inc/TMatrixDUtils.h", 560,
                  typeid(::TMatrixDSparseDiag), DefineBehavior(ptr, ptr),
                  &::TMatrixDSparseDiag::Dictionary, &TMatrixDSparseDiag_IsA, 0,
                  sizeof(::TMatrixDSparseDiag) );
      instance.SetNew(&new_TMatrixDSparseDiag);
      instance.SetNewArray(&newArray_TMatrixDSparseDiag);
      instance.SetDelete(&delete_TMatrixDSparseDiag);
      instance.SetDeleteArray(&deleteArray_TMatrixDSparseDiag);
      instance.SetDestructor(&destruct_TMatrixDSparseDiag);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDSparseDiag*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixF_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixF_IsA(const void*);
   static void *new_TMatrixF(void *p = 0);
   static void *newArray_TMatrixF(Long_t size);
   static void delete_TMatrixF(void *p);
   static void deleteArray_TMatrixF(void *p);
   static void destruct_TMatrixF(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixF*)
   {
      ::TMatrixF *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixF", ::TMatrixF::Class_Version(), "matrix/inc/TMatrixF.h", 39,
                  typeid(::TMatrixF), DefineBehavior(ptr, ptr),
                  &::TMatrixF::Dictionary, &TMatrixF_IsA, 1,
                  sizeof(::TMatrixF) );
      instance.SetNew(&new_TMatrixF);
      instance.SetNewArray(&newArray_TMatrixF);
      instance.SetDelete(&delete_TMatrixF);
      instance.SetDeleteArray(&deleteArray_TMatrixF);
      instance.SetDestructor(&destruct_TMatrixF);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDLazy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDLazy_IsA(const void*);
   static void delete_TMatrixDLazy(void *p);
   static void deleteArray_TMatrixDLazy(void *p);
   static void destruct_TMatrixDLazy(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDLazy*)
   {
      ::TMatrixDLazy *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDLazy", ::TMatrixDLazy::Class_Version(), "matrix/inc/TMatrixDLazy.h", 44,
                  typeid(::TMatrixDLazy), DefineBehavior(ptr, ptr),
                  &::TMatrixDLazy::Dictionary, &TMatrixDLazy_IsA, 4,
                  sizeof(::TMatrixDLazy) );
      instance.SetDelete(&delete_TMatrixDLazy);
      instance.SetDeleteArray(&deleteArray_TMatrixDLazy);
      instance.SetDestructor(&destruct_TMatrixDLazy);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDLazy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDSymLazy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDSymLazy_IsA(const void*);
   static void delete_TMatrixDSymLazy(void *p);
   static void deleteArray_TMatrixDSymLazy(void *p);
   static void destruct_TMatrixDSymLazy(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDSymLazy*)
   {
      ::TMatrixDSymLazy *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDSymLazy", ::TMatrixDSymLazy::Class_Version(), "matrix/inc/TMatrixDLazy.h", 87,
                  typeid(::TMatrixDSymLazy), DefineBehavior(ptr, ptr),
                  &::TMatrixDSymLazy::Dictionary, &TMatrixDSymLazy_IsA, 4,
                  sizeof(::TMatrixDSymLazy) );
      instance.SetDelete(&delete_TMatrixDSymLazy);
      instance.SetDeleteArray(&deleteArray_TMatrixDSymLazy);
      instance.SetDestructor(&destruct_TMatrixDSymLazy);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDSymLazy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFSym_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFSym_IsA(const void*);
   static void *new_TMatrixFSym(void *p = 0);
   static void *newArray_TMatrixFSym(Long_t size);
   static void delete_TMatrixFSym(void *p);
   static void deleteArray_TMatrixFSym(void *p);
   static void destruct_TMatrixFSym(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFSym*)
   {
      ::TMatrixFSym *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFSym", ::TMatrixFSym::Class_Version(), "matrix/inc/TMatrixFSym.h", 39,
                  typeid(::TMatrixFSym), DefineBehavior(ptr, ptr),
                  &::TMatrixFSym::Dictionary, &TMatrixFSym_IsA, 1,
                  sizeof(::TMatrixFSym) );
      instance.SetNew(&new_TMatrixFSym);
      instance.SetNewArray(&newArray_TMatrixFSym);
      instance.SetDelete(&delete_TMatrixFSym);
      instance.SetDeleteArray(&deleteArray_TMatrixFSym);
      instance.SetDestructor(&destruct_TMatrixFSym);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFSym*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDecompBase_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDecompBase_IsA(const void*);
   static void delete_TDecompBase(void *p);
   static void deleteArray_TDecompBase(void *p);
   static void destruct_TDecompBase(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDecompBase*)
   {
      ::TDecompBase *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDecompBase", ::TDecompBase::Class_Version(), "matrix/inc/TDecompBase.h", 37,
                  typeid(::TDecompBase), DefineBehavior(ptr, ptr),
                  &::TDecompBase::Dictionary, &TDecompBase_IsA, 4,
                  sizeof(::TDecompBase) );
      instance.SetDelete(&delete_TDecompBase);
      instance.SetDeleteArray(&deleteArray_TDecompBase);
      instance.SetDestructor(&destruct_TDecompBase);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDecompBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDecompBK_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDecompBK_IsA(const void*);
   static void *new_TDecompBK(void *p = 0);
   static void *newArray_TDecompBK(Long_t size);
   static void delete_TDecompBK(void *p);
   static void deleteArray_TDecompBK(void *p);
   static void destruct_TDecompBK(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDecompBK*)
   {
      ::TDecompBK *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDecompBK", ::TDecompBK::Class_Version(), "matrix/inc/TDecompBK.h", 26,
                  typeid(::TDecompBK), DefineBehavior(ptr, ptr),
                  &::TDecompBK::Dictionary, &TDecompBK_IsA, 4,
                  sizeof(::TDecompBK) );
      instance.SetNew(&new_TDecompBK);
      instance.SetNewArray(&newArray_TDecompBK);
      instance.SetDelete(&delete_TDecompBK);
      instance.SetDeleteArray(&deleteArray_TDecompBK);
      instance.SetDestructor(&destruct_TDecompBK);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDecompBK*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void THaarMatrixD_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *THaarMatrixD_IsA(const void*);
   static void *new_THaarMatrixD(void *p = 0);
   static void *newArray_THaarMatrixD(Long_t size);
   static void delete_THaarMatrixD(void *p);
   static void deleteArray_THaarMatrixD(void *p);
   static void destruct_THaarMatrixD(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::THaarMatrixD*)
   {
      ::THaarMatrixD *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("THaarMatrixD", ::THaarMatrixD::Class_Version(), "matrix/inc/TMatrixDLazy.h", 123,
                  typeid(::THaarMatrixD), DefineBehavior(ptr, ptr),
                  &::THaarMatrixD::Dictionary, &THaarMatrixD_IsA, 4,
                  sizeof(::THaarMatrixD) );
      instance.SetNew(&new_THaarMatrixD);
      instance.SetNewArray(&newArray_THaarMatrixD);
      instance.SetDelete(&delete_THaarMatrixD);
      instance.SetDeleteArray(&deleteArray_THaarMatrixD);
      instance.SetDestructor(&destruct_THaarMatrixD);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::THaarMatrixD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void THilbertMatrixD_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *THilbertMatrixD_IsA(const void*);
   static void *new_THilbertMatrixD(void *p = 0);
   static void *newArray_THilbertMatrixD(Long_t size);
   static void delete_THilbertMatrixD(void *p);
   static void deleteArray_THilbertMatrixD(void *p);
   static void destruct_THilbertMatrixD(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::THilbertMatrixD*)
   {
      ::THilbertMatrixD *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("THilbertMatrixD", ::THilbertMatrixD::Class_Version(), "matrix/inc/TMatrixDLazy.h", 142,
                  typeid(::THilbertMatrixD), DefineBehavior(ptr, ptr),
                  &::THilbertMatrixD::Dictionary, &THilbertMatrixD_IsA, 4,
                  sizeof(::THilbertMatrixD) );
      instance.SetNew(&new_THilbertMatrixD);
      instance.SetNewArray(&newArray_THilbertMatrixD);
      instance.SetDelete(&delete_THilbertMatrixD);
      instance.SetDeleteArray(&deleteArray_THilbertMatrixD);
      instance.SetDestructor(&destruct_THilbertMatrixD);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::THilbertMatrixD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void THilbertMatrixDSym_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *THilbertMatrixDSym_IsA(const void*);
   static void *new_THilbertMatrixDSym(void *p = 0);
   static void *newArray_THilbertMatrixDSym(Long_t size);
   static void delete_THilbertMatrixDSym(void *p);
   static void deleteArray_THilbertMatrixDSym(void *p);
   static void destruct_THilbertMatrixDSym(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::THilbertMatrixDSym*)
   {
      ::THilbertMatrixDSym *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("THilbertMatrixDSym", ::THilbertMatrixDSym::Class_Version(), "matrix/inc/TMatrixDLazy.h", 162,
                  typeid(::THilbertMatrixDSym), DefineBehavior(ptr, ptr),
                  &::THilbertMatrixDSym::Dictionary, &THilbertMatrixDSym_IsA, 4,
                  sizeof(::THilbertMatrixDSym) );
      instance.SetNew(&new_THilbertMatrixDSym);
      instance.SetNewArray(&newArray_THilbertMatrixDSym);
      instance.SetDelete(&delete_THilbertMatrixDSym);
      instance.SetDeleteArray(&deleteArray_THilbertMatrixDSym);
      instance.SetDestructor(&destruct_THilbertMatrixDSym);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::THilbertMatrixDSym*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDecompSparse_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDecompSparse_IsA(const void*);
   static void *new_TDecompSparse(void *p = 0);
   static void *newArray_TDecompSparse(Long_t size);
   static void delete_TDecompSparse(void *p);
   static void deleteArray_TDecompSparse(void *p);
   static void destruct_TDecompSparse(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDecompSparse*)
   {
      ::TDecompSparse *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDecompSparse", ::TDecompSparse::Class_Version(), "matrix/inc/TDecompSparse.h", 52,
                  typeid(::TDecompSparse), DefineBehavior(ptr, ptr),
                  &::TDecompSparse::Dictionary, &TDecompSparse_IsA, 4,
                  sizeof(::TDecompSparse) );
      instance.SetNew(&new_TDecompSparse);
      instance.SetNewArray(&newArray_TDecompSparse);
      instance.SetDelete(&delete_TDecompSparse);
      instance.SetDeleteArray(&deleteArray_TDecompSparse);
      instance.SetDestructor(&destruct_TDecompSparse);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDecompSparse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFRow_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFRow_const_IsA(const void*);
   static void *new_TMatrixFRow_const(void *p = 0);
   static void *newArray_TMatrixFRow_const(Long_t size);
   static void delete_TMatrixFRow_const(void *p);
   static void deleteArray_TMatrixFRow_const(void *p);
   static void destruct_TMatrixFRow_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFRow_const*)
   {
      ::TMatrixFRow_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFRow_const", ::TMatrixFRow_const::Class_Version(), "matrix/inc/TMatrixFUtils.h", 106,
                  typeid(::TMatrixFRow_const), DefineBehavior(ptr, ptr),
                  &::TMatrixFRow_const::Dictionary, &TMatrixFRow_const_IsA, 0,
                  sizeof(::TMatrixFRow_const) );
      instance.SetNew(&new_TMatrixFRow_const);
      instance.SetNewArray(&newArray_TMatrixFRow_const);
      instance.SetDelete(&delete_TMatrixFRow_const);
      instance.SetDeleteArray(&deleteArray_TMatrixFRow_const);
      instance.SetDestructor(&destruct_TMatrixFRow_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFRow_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFRow_IsA(const void*);
   static void *new_TMatrixFRow(void *p = 0);
   static void *newArray_TMatrixFRow(Long_t size);
   static void delete_TMatrixFRow(void *p);
   static void deleteArray_TMatrixFRow(void *p);
   static void destruct_TMatrixFRow(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFRow*)
   {
      ::TMatrixFRow *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFRow", ::TMatrixFRow::Class_Version(), "matrix/inc/TMatrixFUtils.h", 133,
                  typeid(::TMatrixFRow), DefineBehavior(ptr, ptr),
                  &::TMatrixFRow::Dictionary, &TMatrixFRow_IsA, 0,
                  sizeof(::TMatrixFRow) );
      instance.SetNew(&new_TMatrixFRow);
      instance.SetNewArray(&newArray_TMatrixFRow);
      instance.SetDelete(&delete_TMatrixFRow);
      instance.SetDeleteArray(&deleteArray_TMatrixFRow);
      instance.SetDestructor(&destruct_TMatrixFRow);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFColumn_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFColumn_const_IsA(const void*);
   static void *new_TMatrixFColumn_const(void *p = 0);
   static void *newArray_TMatrixFColumn_const(Long_t size);
   static void delete_TMatrixFColumn_const(void *p);
   static void deleteArray_TMatrixFColumn_const(void *p);
   static void destruct_TMatrixFColumn_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFColumn_const*)
   {
      ::TMatrixFColumn_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFColumn_const", ::TMatrixFColumn_const::Class_Version(), "matrix/inc/TMatrixFUtils.h", 176,
                  typeid(::TMatrixFColumn_const), DefineBehavior(ptr, ptr),
                  &::TMatrixFColumn_const::Dictionary, &TMatrixFColumn_const_IsA, 0,
                  sizeof(::TMatrixFColumn_const) );
      instance.SetNew(&new_TMatrixFColumn_const);
      instance.SetNewArray(&newArray_TMatrixFColumn_const);
      instance.SetDelete(&delete_TMatrixFColumn_const);
      instance.SetDeleteArray(&deleteArray_TMatrixFColumn_const);
      instance.SetDestructor(&destruct_TMatrixFColumn_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFColumn_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFColumn_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFColumn_IsA(const void*);
   static void *new_TMatrixFColumn(void *p = 0);
   static void *newArray_TMatrixFColumn(Long_t size);
   static void delete_TMatrixFColumn(void *p);
   static void deleteArray_TMatrixFColumn(void *p);
   static void destruct_TMatrixFColumn(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFColumn*)
   {
      ::TMatrixFColumn *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFColumn", ::TMatrixFColumn::Class_Version(), "matrix/inc/TMatrixFUtils.h", 203,
                  typeid(::TMatrixFColumn), DefineBehavior(ptr, ptr),
                  &::TMatrixFColumn::Dictionary, &TMatrixFColumn_IsA, 0,
                  sizeof(::TMatrixFColumn) );
      instance.SetNew(&new_TMatrixFColumn);
      instance.SetNewArray(&newArray_TMatrixFColumn);
      instance.SetDelete(&delete_TMatrixFColumn);
      instance.SetDeleteArray(&deleteArray_TMatrixFColumn);
      instance.SetDestructor(&destruct_TMatrixFColumn);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFColumn*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFDiag_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFDiag_const_IsA(const void*);
   static void *new_TMatrixFDiag_const(void *p = 0);
   static void *newArray_TMatrixFDiag_const(Long_t size);
   static void delete_TMatrixFDiag_const(void *p);
   static void deleteArray_TMatrixFDiag_const(void *p);
   static void destruct_TMatrixFDiag_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFDiag_const*)
   {
      ::TMatrixFDiag_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFDiag_const", ::TMatrixFDiag_const::Class_Version(), "matrix/inc/TMatrixFUtils.h", 246,
                  typeid(::TMatrixFDiag_const), DefineBehavior(ptr, ptr),
                  &::TMatrixFDiag_const::Dictionary, &TMatrixFDiag_const_IsA, 0,
                  sizeof(::TMatrixFDiag_const) );
      instance.SetNew(&new_TMatrixFDiag_const);
      instance.SetNewArray(&newArray_TMatrixFDiag_const);
      instance.SetDelete(&delete_TMatrixFDiag_const);
      instance.SetDeleteArray(&deleteArray_TMatrixFDiag_const);
      instance.SetDestructor(&destruct_TMatrixFDiag_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFDiag_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFDiag_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFDiag_IsA(const void*);
   static void *new_TMatrixFDiag(void *p = 0);
   static void *newArray_TMatrixFDiag(Long_t size);
   static void delete_TMatrixFDiag(void *p);
   static void deleteArray_TMatrixFDiag(void *p);
   static void destruct_TMatrixFDiag(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFDiag*)
   {
      ::TMatrixFDiag *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFDiag", ::TMatrixFDiag::Class_Version(), "matrix/inc/TMatrixFUtils.h", 272,
                  typeid(::TMatrixFDiag), DefineBehavior(ptr, ptr),
                  &::TMatrixFDiag::Dictionary, &TMatrixFDiag_IsA, 0,
                  sizeof(::TMatrixFDiag) );
      instance.SetNew(&new_TMatrixFDiag);
      instance.SetNewArray(&newArray_TMatrixFDiag);
      instance.SetDelete(&delete_TMatrixFDiag);
      instance.SetDeleteArray(&deleteArray_TMatrixFDiag);
      instance.SetDestructor(&destruct_TMatrixFDiag);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFDiag*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFFlat_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFFlat_const_IsA(const void*);
   static void *new_TMatrixFFlat_const(void *p = 0);
   static void *newArray_TMatrixFFlat_const(Long_t size);
   static void delete_TMatrixFFlat_const(void *p);
   static void deleteArray_TMatrixFFlat_const(void *p);
   static void destruct_TMatrixFFlat_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFFlat_const*)
   {
      ::TMatrixFFlat_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFFlat_const", ::TMatrixFFlat_const::Class_Version(), "matrix/inc/TMatrixFUtils.h", 312,
                  typeid(::TMatrixFFlat_const), DefineBehavior(ptr, ptr),
                  &::TMatrixFFlat_const::Dictionary, &TMatrixFFlat_const_IsA, 0,
                  sizeof(::TMatrixFFlat_const) );
      instance.SetNew(&new_TMatrixFFlat_const);
      instance.SetNewArray(&newArray_TMatrixFFlat_const);
      instance.SetDelete(&delete_TMatrixFFlat_const);
      instance.SetDeleteArray(&deleteArray_TMatrixFFlat_const);
      instance.SetDestructor(&destruct_TMatrixFFlat_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFFlat_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFFlat_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFFlat_IsA(const void*);
   static void *new_TMatrixFFlat(void *p = 0);
   static void *newArray_TMatrixFFlat(Long_t size);
   static void delete_TMatrixFFlat(void *p);
   static void deleteArray_TMatrixFFlat(void *p);
   static void destruct_TMatrixFFlat(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFFlat*)
   {
      ::TMatrixFFlat *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFFlat", ::TMatrixFFlat::Class_Version(), "matrix/inc/TMatrixFUtils.h", 334,
                  typeid(::TMatrixFFlat), DefineBehavior(ptr, ptr),
                  &::TMatrixFFlat::Dictionary, &TMatrixFFlat_IsA, 0,
                  sizeof(::TMatrixFFlat) );
      instance.SetNew(&new_TMatrixFFlat);
      instance.SetNewArray(&newArray_TMatrixFFlat);
      instance.SetDelete(&delete_TMatrixFFlat);
      instance.SetDeleteArray(&deleteArray_TMatrixFFlat);
      instance.SetDestructor(&destruct_TMatrixFFlat);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFFlat*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFSub_const_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFSub_const_IsA(const void*);
   static void *new_TMatrixFSub_const(void *p = 0);
   static void *newArray_TMatrixFSub_const(Long_t size);
   static void delete_TMatrixFSub_const(void *p);
   static void deleteArray_TMatrixFSub_const(void *p);
   static void destruct_TMatrixFSub_const(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFSub_const*)
   {
      ::TMatrixFSub_const *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFSub_const", ::TMatrixFSub_const::Class_Version(), "matrix/inc/TMatrixFUtils.h", 374,
                  typeid(::TMatrixFSub_const), DefineBehavior(ptr, ptr),
                  &::TMatrixFSub_const::Dictionary, &TMatrixFSub_const_IsA, 0,
                  sizeof(::TMatrixFSub_const) );
      instance.SetNew(&new_TMatrixFSub_const);
      instance.SetNewArray(&newArray_TMatrixFSub_const);
      instance.SetDelete(&delete_TMatrixFSub_const);
      instance.SetDeleteArray(&deleteArray_TMatrixFSub_const);
      instance.SetDestructor(&destruct_TMatrixFSub_const);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFSub_const*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFSub_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFSub_IsA(const void*);
   static void *new_TMatrixFSub(void *p = 0);
   static void *newArray_TMatrixFSub(Long_t size);
   static void delete_TMatrixFSub(void *p);
   static void deleteArray_TMatrixFSub(void *p);
   static void destruct_TMatrixFSub(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFSub*)
   {
      ::TMatrixFSub *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFSub", ::TMatrixFSub::Class_Version(), "matrix/inc/TMatrixFUtils.h", 407,
                  typeid(::TMatrixFSub), DefineBehavior(ptr, ptr),
                  &::TMatrixFSub::Dictionary, &TMatrixFSub_IsA, 0,
                  sizeof(::TMatrixFSub) );
      instance.SetNew(&new_TMatrixFSub);
      instance.SetNewArray(&newArray_TMatrixFSub);
      instance.SetDelete(&delete_TMatrixFSub);
      instance.SetDeleteArray(&deleteArray_TMatrixFSub);
      instance.SetDestructor(&destruct_TMatrixFSub);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFSub*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixRow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixRow_IsA(const void*);
   static void *new_TMatrixRow(void *p = 0);
   static void *newArray_TMatrixRow(Long_t size);
   static void delete_TMatrixRow(void *p);
   static void deleteArray_TMatrixRow(void *p);
   static void destruct_TMatrixRow(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixRow*)
   {
      ::TMatrixRow *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixRow", ::TMatrixRow::Class_Version(), "matrix/inc/TMatrixFUtils.h", 442,
                  typeid(::TMatrixRow), DefineBehavior(ptr, ptr),
                  &::TMatrixRow::Dictionary, &TMatrixRow_IsA, 0,
                  sizeof(::TMatrixRow) );
      instance.SetNew(&new_TMatrixRow);
      instance.SetNewArray(&newArray_TMatrixRow);
      instance.SetDelete(&delete_TMatrixRow);
      instance.SetDeleteArray(&deleteArray_TMatrixRow);
      instance.SetDestructor(&destruct_TMatrixRow);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixColumn_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixColumn_IsA(const void*);
   static void *new_TMatrixColumn(void *p = 0);
   static void *newArray_TMatrixColumn(Long_t size);
   static void delete_TMatrixColumn(void *p);
   static void deleteArray_TMatrixColumn(void *p);
   static void destruct_TMatrixColumn(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixColumn*)
   {
      ::TMatrixColumn *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixColumn", ::TMatrixColumn::Class_Version(), "matrix/inc/TMatrixFUtils.h", 452,
                  typeid(::TMatrixColumn), DefineBehavior(ptr, ptr),
                  &::TMatrixColumn::Dictionary, &TMatrixColumn_IsA, 0,
                  sizeof(::TMatrixColumn) );
      instance.SetNew(&new_TMatrixColumn);
      instance.SetNewArray(&newArray_TMatrixColumn);
      instance.SetDelete(&delete_TMatrixColumn);
      instance.SetDeleteArray(&deleteArray_TMatrixColumn);
      instance.SetDestructor(&destruct_TMatrixColumn);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixColumn*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDiag_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDiag_IsA(const void*);
   static void *new_TMatrixDiag(void *p = 0);
   static void *newArray_TMatrixDiag(Long_t size);
   static void delete_TMatrixDiag(void *p);
   static void deleteArray_TMatrixDiag(void *p);
   static void destruct_TMatrixDiag(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDiag*)
   {
      ::TMatrixDiag *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDiag", ::TMatrixDiag::Class_Version(), "matrix/inc/TMatrixFUtils.h", 463,
                  typeid(::TMatrixDiag), DefineBehavior(ptr, ptr),
                  &::TMatrixDiag::Dictionary, &TMatrixDiag_IsA, 0,
                  sizeof(::TMatrixDiag) );
      instance.SetNew(&new_TMatrixDiag);
      instance.SetNewArray(&newArray_TMatrixDiag);
      instance.SetDelete(&delete_TMatrixDiag);
      instance.SetDeleteArray(&deleteArray_TMatrixDiag);
      instance.SetDestructor(&destruct_TMatrixDiag);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDiag*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFlat_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFlat_IsA(const void*);
   static void *new_TMatrixFlat(void *p = 0);
   static void *newArray_TMatrixFlat(Long_t size);
   static void delete_TMatrixFlat(void *p);
   static void deleteArray_TMatrixFlat(void *p);
   static void destruct_TMatrixFlat(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFlat*)
   {
      ::TMatrixFlat *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFlat", ::TMatrixFlat::Class_Version(), "matrix/inc/TMatrixFUtils.h", 473,
                  typeid(::TMatrixFlat), DefineBehavior(ptr, ptr),
                  &::TMatrixFlat::Dictionary, &TMatrixFlat_IsA, 0,
                  sizeof(::TMatrixFlat) );
      instance.SetNew(&new_TMatrixFlat);
      instance.SetNewArray(&newArray_TMatrixFlat);
      instance.SetDelete(&delete_TMatrixFlat);
      instance.SetDeleteArray(&deleteArray_TMatrixFlat);
      instance.SetDestructor(&destruct_TMatrixFlat);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFlat*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFLazy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFLazy_IsA(const void*);
   static void delete_TMatrixFLazy(void *p);
   static void deleteArray_TMatrixFLazy(void *p);
   static void destruct_TMatrixFLazy(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFLazy*)
   {
      ::TMatrixFLazy *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFLazy", ::TMatrixFLazy::Class_Version(), "matrix/inc/TMatrixFLazy.h", 44,
                  typeid(::TMatrixFLazy), DefineBehavior(ptr, ptr),
                  &::TMatrixFLazy::Dictionary, &TMatrixFLazy_IsA, 4,
                  sizeof(::TMatrixFLazy) );
      instance.SetDelete(&delete_TMatrixFLazy);
      instance.SetDeleteArray(&deleteArray_TMatrixFLazy);
      instance.SetDestructor(&destruct_TMatrixFLazy);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFLazy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrix_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrix_IsA(const void*);
   static void *new_TMatrix(void *p = 0);
   static void *newArray_TMatrix(Long_t size);
   static void delete_TMatrix(void *p);
   static void deleteArray_TMatrix(void *p);
   static void destruct_TMatrix(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrix*)
   {
      ::TMatrix *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrix", ::TMatrix::Class_Version(), "matrix/inc/TMatrixF.h", 171,
                  typeid(::TMatrix), DefineBehavior(ptr, ptr),
                  &::TMatrix::Dictionary, &TMatrix_IsA, 1,
                  sizeof(::TMatrix) );
      instance.SetNew(&new_TMatrix);
      instance.SetNewArray(&newArray_TMatrix);
      instance.SetDelete(&delete_TMatrix);
      instance.SetDeleteArray(&deleteArray_TMatrix);
      instance.SetDestructor(&destruct_TMatrix);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDecompQRH_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDecompQRH_IsA(const void*);
   static void *new_TDecompQRH(void *p = 0);
   static void *newArray_TDecompQRH(Long_t size);
   static void delete_TDecompQRH(void *p);
   static void deleteArray_TDecompQRH(void *p);
   static void destruct_TDecompQRH(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDecompQRH*)
   {
      ::TDecompQRH *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDecompQRH", ::TDecompQRH::Class_Version(), "matrix/inc/TDecompQRH.h", 26,
                  typeid(::TDecompQRH), DefineBehavior(ptr, ptr),
                  &::TDecompQRH::Dictionary, &TDecompQRH_IsA, 4,
                  sizeof(::TDecompQRH) );
      instance.SetNew(&new_TDecompQRH);
      instance.SetNewArray(&newArray_TDecompQRH);
      instance.SetDelete(&delete_TDecompQRH);
      instance.SetDeleteArray(&deleteArray_TDecompQRH);
      instance.SetDestructor(&destruct_TDecompQRH);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDecompQRH*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDecompLU_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDecompLU_IsA(const void*);
   static void *new_TDecompLU(void *p = 0);
   static void *newArray_TDecompLU(Long_t size);
   static void delete_TDecompLU(void *p);
   static void deleteArray_TDecompLU(void *p);
   static void destruct_TDecompLU(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDecompLU*)
   {
      ::TDecompLU *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDecompLU", ::TDecompLU::Class_Version(), "matrix/inc/TDecompLU.h", 26,
                  typeid(::TDecompLU), DefineBehavior(ptr, ptr),
                  &::TDecompLU::Dictionary, &TDecompLU_IsA, 4,
                  sizeof(::TDecompLU) );
      instance.SetNew(&new_TDecompLU);
      instance.SetNewArray(&newArray_TDecompLU);
      instance.SetDelete(&delete_TDecompLU);
      instance.SetDeleteArray(&deleteArray_TDecompLU);
      instance.SetDestructor(&destruct_TDecompLU);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDecompLU*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDEigen_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDEigen_IsA(const void*);
   static void *new_TMatrixDEigen(void *p = 0);
   static void *newArray_TMatrixDEigen(Long_t size);
   static void delete_TMatrixDEigen(void *p);
   static void deleteArray_TMatrixDEigen(void *p);
   static void destruct_TMatrixDEigen(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDEigen*)
   {
      ::TMatrixDEigen *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDEigen", ::TMatrixDEigen::Class_Version(), "matrix/inc/TMatrixDEigen.h", 31,
                  typeid(::TMatrixDEigen), DefineBehavior(ptr, ptr),
                  &::TMatrixDEigen::Dictionary, &TMatrixDEigen_IsA, 4,
                  sizeof(::TMatrixDEigen) );
      instance.SetNew(&new_TMatrixDEigen);
      instance.SetNewArray(&newArray_TMatrixDEigen);
      instance.SetDelete(&delete_TMatrixDEigen);
      instance.SetDeleteArray(&deleteArray_TMatrixDEigen);
      instance.SetDestructor(&destruct_TMatrixDEigen);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDEigen*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDecompChol_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDecompChol_IsA(const void*);
   static void *new_TDecompChol(void *p = 0);
   static void *newArray_TDecompChol(Long_t size);
   static void delete_TDecompChol(void *p);
   static void deleteArray_TDecompChol(void *p);
   static void destruct_TDecompChol(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDecompChol*)
   {
      ::TDecompChol *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDecompChol", ::TDecompChol::Class_Version(), "matrix/inc/TDecompChol.h", 26,
                  typeid(::TDecompChol), DefineBehavior(ptr, ptr),
                  &::TDecompChol::Dictionary, &TDecompChol_IsA, 4,
                  sizeof(::TDecompChol) );
      instance.SetNew(&new_TDecompChol);
      instance.SetNewArray(&newArray_TDecompChol);
      instance.SetDelete(&delete_TDecompChol);
      instance.SetDeleteArray(&deleteArray_TDecompChol);
      instance.SetDestructor(&destruct_TDecompChol);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDecompChol*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixFSymLazy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixFSymLazy_IsA(const void*);
   static void delete_TMatrixFSymLazy(void *p);
   static void deleteArray_TMatrixFSymLazy(void *p);
   static void destruct_TMatrixFSymLazy(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixFSymLazy*)
   {
      ::TMatrixFSymLazy *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixFSymLazy", ::TMatrixFSymLazy::Class_Version(), "matrix/inc/TMatrixFLazy.h", 103,
                  typeid(::TMatrixFSymLazy), DefineBehavior(ptr, ptr),
                  &::TMatrixFSymLazy::Dictionary, &TMatrixFSymLazy_IsA, 4,
                  sizeof(::TMatrixFSymLazy) );
      instance.SetDelete(&delete_TMatrixFSymLazy);
      instance.SetDeleteArray(&deleteArray_TMatrixFSymLazy);
      instance.SetDestructor(&destruct_TMatrixFSymLazy);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixFSymLazy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TVector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TVector_IsA(const void*);
   static void *new_TVector(void *p = 0);
   static void *newArray_TVector(Long_t size);
   static void delete_TVector(void *p);
   static void deleteArray_TVector(void *p);
   static void destruct_TVector(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TVector*)
   {
      ::TVector *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TVector", ::TVector::Class_Version(), "matrix/inc/TVectorF.h", 150,
                  typeid(::TVector), DefineBehavior(ptr, ptr),
                  &::TVector::Dictionary, &TVector_IsA, 1,
                  sizeof(::TVector) );
      instance.SetNew(&new_TVector);
      instance.SetNewArray(&newArray_TVector);
      instance.SetDelete(&delete_TVector);
      instance.SetDeleteArray(&deleteArray_TVector);
      instance.SetDestructor(&destruct_TVector);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TDecompSVD_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TDecompSVD_IsA(const void*);
   static void *new_TDecompSVD(void *p = 0);
   static void *newArray_TDecompSVD(Long_t size);
   static void delete_TDecompSVD(void *p);
   static void deleteArray_TDecompSVD(void *p);
   static void destruct_TDecompSVD(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TDecompSVD*)
   {
      ::TDecompSVD *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TDecompSVD", ::TDecompSVD::Class_Version(), "matrix/inc/TDecompSVD.h", 26,
                  typeid(::TDecompSVD), DefineBehavior(ptr, ptr),
                  &::TDecompSVD::Dictionary, &TDecompSVD_IsA, 4,
                  sizeof(::TDecompSVD) );
      instance.SetNew(&new_TDecompSVD);
      instance.SetNewArray(&newArray_TDecompSVD);
      instance.SetDelete(&delete_TDecompSVD);
      instance.SetDeleteArray(&deleteArray_TDecompSVD);
      instance.SetDestructor(&destruct_TDecompSVD);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TDecompSVD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixDSymEigen_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixDSymEigen_IsA(const void*);
   static void *new_TMatrixDSymEigen(void *p = 0);
   static void *newArray_TMatrixDSymEigen(Long_t size);
   static void delete_TMatrixDSymEigen(void *p);
   static void deleteArray_TMatrixDSymEigen(void *p);
   static void destruct_TMatrixDSymEigen(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixDSymEigen*)
   {
      ::TMatrixDSymEigen *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixDSymEigen", ::TMatrixDSymEigen::Class_Version(), "matrix/inc/TMatrixDSymEigen.h", 31,
                  typeid(::TMatrixDSymEigen), DefineBehavior(ptr, ptr),
                  &::TMatrixDSymEigen::Dictionary, &TMatrixDSymEigen_IsA, 4,
                  sizeof(::TMatrixDSymEigen) );
      instance.SetNew(&new_TMatrixDSymEigen);
      instance.SetNewArray(&newArray_TMatrixDSymEigen);
      instance.SetDelete(&delete_TMatrixDSymEigen);
      instance.SetDeleteArray(&deleteArray_TMatrixDSymEigen);
      instance.SetDestructor(&destruct_TMatrixDSymEigen);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixDSymEigen*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMatrixLazy_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMatrixLazy_IsA(const void*);
   static void delete_TMatrixLazy(void *p);
   static void deleteArray_TMatrixLazy(void *p);
   static void destruct_TMatrixLazy(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMatrixLazy*)
   {
      ::TMatrixLazy *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMatrixLazy", ::TMatrixLazy::Class_Version(), "matrix/inc/TMatrixFLazy.h", 78,
                  typeid(::TMatrixLazy), DefineBehavior(ptr, ptr),
                  &::TMatrixLazy::Dictionary, &TMatrixLazy_IsA, 4,
                  sizeof(::TMatrixLazy) );
      instance.SetDelete(&delete_TMatrixLazy);
      instance.SetDeleteArray(&deleteArray_TMatrixLazy);
      instance.SetDestructor(&destruct_TMatrixLazy);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMatrixLazy*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void THaarMatrixF_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *THaarMatrixF_IsA(const void*);
   static void *new_THaarMatrixF(void *p = 0);
   static void *newArray_THaarMatrixF(Long_t size);
   static void delete_THaarMatrixF(void *p);
   static void deleteArray_THaarMatrixF(void *p);
   static void destruct_THaarMatrixF(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::THaarMatrixF*)
   {
      ::THaarMatrixF *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("THaarMatrixF", ::THaarMatrixF::Class_Version(), "matrix/inc/TMatrixFLazy.h", 139,
                  typeid(::THaarMatrixF), DefineBehavior(ptr, ptr),
                  &::THaarMatrixF::Dictionary, &THaarMatrixF_IsA, 4,
                  sizeof(::THaarMatrixF) );
      instance.SetNew(&new_THaarMatrixF);
      instance.SetNewArray(&newArray_THaarMatrixF);
      instance.SetDelete(&delete_THaarMatrixF);
      instance.SetDeleteArray(&deleteArray_THaarMatrixF);
      instance.SetDestructor(&destruct_THaarMatrixF);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::THaarMatrixF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void THilbertMatrixF_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *THilbertMatrixF_IsA(const void*);
   static void *new_THilbertMatrixF(void *p = 0);
   static void *newArray_THilbertMatrixF(Long_t size);
   static void delete_THilbertMatrixF(void *p);
   static void deleteArray_THilbertMatrixF(void *p);
   static void destruct_THilbertMatrixF(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::THilbertMatrixF*)
   {
      ::THilbertMatrixF *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("THilbertMatrixF", ::THilbertMatrixF::Class_Version(), "matrix/inc/TMatrixFLazy.h", 158,
                  typeid(::THilbertMatrixF), DefineBehavior(ptr, ptr),
                  &::THilbertMatrixF::Dictionary, &THilbertMatrixF_IsA, 4,
                  sizeof(::THilbertMatrixF) );
      instance.SetNew(&new_THilbertMatrixF);
      instance.SetNewArray(&newArray_THilbertMatrixF);
      instance.SetDelete(&delete_THilbertMatrixF);
      instance.SetDeleteArray(&deleteArray_THilbertMatrixF);
      instance.SetDestructor(&destruct_THilbertMatrixF);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::THilbertMatrixF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void THilbertMatrixFSym_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *THilbertMatrixFSym_IsA(const void*);
   static void *new_THilbertMatrixFSym(void *p = 0);
   static void *newArray_THilbertMatrixFSym(Long_t size);
   static void delete_THilbertMatrixFSym(void *p);
   static void deleteArray_THilbertMatrixFSym(void *p);
   static void destruct_THilbertMatrixFSym(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::THilbertMatrixFSym*)
   {
      ::THilbertMatrixFSym *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("THilbertMatrixFSym", ::THilbertMatrixFSym::Class_Version(), "matrix/inc/TMatrixFLazy.h", 178,
                  typeid(::THilbertMatrixFSym), DefineBehavior(ptr, ptr),
                  &::THilbertMatrixFSym::Dictionary, &THilbertMatrixFSym_IsA, 4,
                  sizeof(::THilbertMatrixFSym) );
      instance.SetNew(&new_THilbertMatrixFSym);
      instance.SetNewArray(&newArray_THilbertMatrixFSym);
      instance.SetDelete(&delete_THilbertMatrixFSym);
      instance.SetDeleteArray(&deleteArray_THilbertMatrixFSym);
      instance.SetDestructor(&destruct_THilbertMatrixFSym);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::THilbertMatrixFSym*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TMatrixFBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFBase::Class_Name()
{
   return "TMatrixFBase";
}

//______________________________________________________________________________
const char *TMatrixFBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFBase*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDBase::Class_Name()
{
   return "TMatrixDBase";
}

//______________________________________________________________________________
const char *TMatrixDBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDBase*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVectorF::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVectorF::Class_Name()
{
   return "TVectorF";
}

//______________________________________________________________________________
const char *TVectorF::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TVectorF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVectorF::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TVectorF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVectorF::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TVectorF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVectorF::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TVectorF*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVectorD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVectorD::Class_Name()
{
   return "TVectorD";
}

//______________________________________________________________________________
const char *TVectorD::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TVectorD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVectorD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TVectorD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVectorD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TVectorD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVectorD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TVectorD*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixD::Class_Name()
{
   return "TMatrixD";
}

//______________________________________________________________________________
const char *TMatrixD::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixD*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDSym::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDSym::Class_Name()
{
   return "TMatrixDSym";
}

//______________________________________________________________________________
const char *TMatrixDSym::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSym*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDSym::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSym*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDSym::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSym*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDSym::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSym*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDSparse::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDSparse::Class_Name()
{
   return "TMatrixDSparse";
}

//______________________________________________________________________________
const char *TMatrixDSparse::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSparse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDSparse::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSparse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDSparse::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSparse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDSparse::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSparse*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDRow_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDRow_const::Class_Name()
{
   return "TMatrixDRow_const";
}

//______________________________________________________________________________
const char *TMatrixDRow_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDRow_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDRow_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDRow_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDRow_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDRow_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDRow_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDRow_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDRow::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDRow::Class_Name()
{
   return "TMatrixDRow";
}

//______________________________________________________________________________
const char *TMatrixDRow::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDRow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDRow::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDRow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDRow::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDRow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDRow::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDRow*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDColumn_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDColumn_const::Class_Name()
{
   return "TMatrixDColumn_const";
}

//______________________________________________________________________________
const char *TMatrixDColumn_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDColumn_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDColumn_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDColumn_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDColumn_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDColumn_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDColumn_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDColumn_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDColumn::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDColumn::Class_Name()
{
   return "TMatrixDColumn";
}

//______________________________________________________________________________
const char *TMatrixDColumn::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDColumn*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDColumn::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDColumn*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDColumn::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDColumn*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDColumn::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDColumn*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDDiag_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDDiag_const::Class_Name()
{
   return "TMatrixDDiag_const";
}

//______________________________________________________________________________
const char *TMatrixDDiag_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDDiag_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDDiag_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDDiag_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDDiag_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDDiag_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDDiag_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDDiag_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDDiag::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDDiag::Class_Name()
{
   return "TMatrixDDiag";
}

//______________________________________________________________________________
const char *TMatrixDDiag::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDDiag*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDDiag::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDDiag*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDDiag::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDDiag*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDDiag::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDDiag*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDFlat_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDFlat_const::Class_Name()
{
   return "TMatrixDFlat_const";
}

//______________________________________________________________________________
const char *TMatrixDFlat_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDFlat_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDFlat_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDFlat_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDFlat_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDFlat_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDFlat_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDFlat_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDFlat::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDFlat::Class_Name()
{
   return "TMatrixDFlat";
}

//______________________________________________________________________________
const char *TMatrixDFlat::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDFlat*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDFlat::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDFlat*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDFlat::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDFlat*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDFlat::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDFlat*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDSub_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDSub_const::Class_Name()
{
   return "TMatrixDSub_const";
}

//______________________________________________________________________________
const char *TMatrixDSub_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSub_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDSub_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSub_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDSub_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSub_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDSub_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSub_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDSub::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDSub::Class_Name()
{
   return "TMatrixDSub";
}

//______________________________________________________________________________
const char *TMatrixDSub::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSub*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDSub::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSub*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDSub::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSub*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDSub::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSub*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDSparseRow_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDSparseRow_const::Class_Name()
{
   return "TMatrixDSparseRow_const";
}

//______________________________________________________________________________
const char *TMatrixDSparseRow_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSparseRow_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDSparseRow_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSparseRow_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDSparseRow_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSparseRow_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDSparseRow_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSparseRow_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDSparseRow::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDSparseRow::Class_Name()
{
   return "TMatrixDSparseRow";
}

//______________________________________________________________________________
const char *TMatrixDSparseRow::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSparseRow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDSparseRow::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSparseRow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDSparseRow::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSparseRow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDSparseRow::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSparseRow*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDSparseDiag_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDSparseDiag_const::Class_Name()
{
   return "TMatrixDSparseDiag_const";
}

//______________________________________________________________________________
const char *TMatrixDSparseDiag_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSparseDiag_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDSparseDiag_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSparseDiag_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDSparseDiag_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSparseDiag_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDSparseDiag_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSparseDiag_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDSparseDiag::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDSparseDiag::Class_Name()
{
   return "TMatrixDSparseDiag";
}

//______________________________________________________________________________
const char *TMatrixDSparseDiag::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSparseDiag*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDSparseDiag::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSparseDiag*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDSparseDiag::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSparseDiag*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDSparseDiag::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSparseDiag*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixF::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixF::Class_Name()
{
   return "TMatrixF";
}

//______________________________________________________________________________
const char *TMatrixF::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixF::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixF::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixF::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixF*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDLazy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDLazy::Class_Name()
{
   return "TMatrixDLazy";
}

//______________________________________________________________________________
const char *TMatrixDLazy::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDLazy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDLazy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDLazy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDLazy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDLazy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDLazy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDLazy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDSymLazy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDSymLazy::Class_Name()
{
   return "TMatrixDSymLazy";
}

//______________________________________________________________________________
const char *TMatrixDSymLazy::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSymLazy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDSymLazy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSymLazy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDSymLazy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSymLazy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDSymLazy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSymLazy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFSym::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFSym::Class_Name()
{
   return "TMatrixFSym";
}

//______________________________________________________________________________
const char *TMatrixFSym::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFSym*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFSym::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFSym*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFSym::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFSym*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFSym::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFSym*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDecompBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDecompBase::Class_Name()
{
   return "TDecompBase";
}

//______________________________________________________________________________
const char *TDecompBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDecompBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDecompBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDecompBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompBase*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDecompBK::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDecompBK::Class_Name()
{
   return "TDecompBK";
}

//______________________________________________________________________________
const char *TDecompBK::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompBK*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDecompBK::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompBK*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDecompBK::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompBK*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDecompBK::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompBK*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THaarMatrixD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THaarMatrixD::Class_Name()
{
   return "THaarMatrixD";
}

//______________________________________________________________________________
const char *THaarMatrixD::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::THaarMatrixD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaarMatrixD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::THaarMatrixD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaarMatrixD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::THaarMatrixD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaarMatrixD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::THaarMatrixD*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THilbertMatrixD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THilbertMatrixD::Class_Name()
{
   return "THilbertMatrixD";
}

//______________________________________________________________________________
const char *THilbertMatrixD::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::THilbertMatrixD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THilbertMatrixD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::THilbertMatrixD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THilbertMatrixD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::THilbertMatrixD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THilbertMatrixD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::THilbertMatrixD*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THilbertMatrixDSym::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THilbertMatrixDSym::Class_Name()
{
   return "THilbertMatrixDSym";
}

//______________________________________________________________________________
const char *THilbertMatrixDSym::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::THilbertMatrixDSym*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THilbertMatrixDSym::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::THilbertMatrixDSym*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THilbertMatrixDSym::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::THilbertMatrixDSym*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THilbertMatrixDSym::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::THilbertMatrixDSym*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDecompSparse::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDecompSparse::Class_Name()
{
   return "TDecompSparse";
}

//______________________________________________________________________________
const char *TDecompSparse::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompSparse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDecompSparse::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompSparse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDecompSparse::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompSparse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDecompSparse::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompSparse*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFRow_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFRow_const::Class_Name()
{
   return "TMatrixFRow_const";
}

//______________________________________________________________________________
const char *TMatrixFRow_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFRow_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFRow_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFRow_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFRow_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFRow_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFRow_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFRow_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFRow::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFRow::Class_Name()
{
   return "TMatrixFRow";
}

//______________________________________________________________________________
const char *TMatrixFRow::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFRow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFRow::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFRow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFRow::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFRow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFRow::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFRow*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFColumn_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFColumn_const::Class_Name()
{
   return "TMatrixFColumn_const";
}

//______________________________________________________________________________
const char *TMatrixFColumn_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFColumn_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFColumn_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFColumn_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFColumn_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFColumn_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFColumn_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFColumn_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFColumn::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFColumn::Class_Name()
{
   return "TMatrixFColumn";
}

//______________________________________________________________________________
const char *TMatrixFColumn::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFColumn*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFColumn::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFColumn*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFColumn::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFColumn*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFColumn::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFColumn*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFDiag_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFDiag_const::Class_Name()
{
   return "TMatrixFDiag_const";
}

//______________________________________________________________________________
const char *TMatrixFDiag_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFDiag_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFDiag_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFDiag_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFDiag_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFDiag_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFDiag_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFDiag_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFDiag::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFDiag::Class_Name()
{
   return "TMatrixFDiag";
}

//______________________________________________________________________________
const char *TMatrixFDiag::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFDiag*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFDiag::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFDiag*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFDiag::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFDiag*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFDiag::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFDiag*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFFlat_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFFlat_const::Class_Name()
{
   return "TMatrixFFlat_const";
}

//______________________________________________________________________________
const char *TMatrixFFlat_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFFlat_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFFlat_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFFlat_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFFlat_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFFlat_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFFlat_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFFlat_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFFlat::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFFlat::Class_Name()
{
   return "TMatrixFFlat";
}

//______________________________________________________________________________
const char *TMatrixFFlat::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFFlat*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFFlat::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFFlat*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFFlat::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFFlat*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFFlat::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFFlat*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFSub_const::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFSub_const::Class_Name()
{
   return "TMatrixFSub_const";
}

//______________________________________________________________________________
const char *TMatrixFSub_const::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFSub_const*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFSub_const::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFSub_const*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFSub_const::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFSub_const*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFSub_const::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFSub_const*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFSub::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFSub::Class_Name()
{
   return "TMatrixFSub";
}

//______________________________________________________________________________
const char *TMatrixFSub::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFSub*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFSub::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFSub*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFSub::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFSub*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFSub::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFSub*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixRow::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixRow::Class_Name()
{
   return "TMatrixRow";
}

//______________________________________________________________________________
const char *TMatrixRow::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixRow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixRow::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixRow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixRow::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixRow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixRow::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixRow*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixColumn::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixColumn::Class_Name()
{
   return "TMatrixColumn";
}

//______________________________________________________________________________
const char *TMatrixColumn::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixColumn*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixColumn::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixColumn*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixColumn::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixColumn*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixColumn::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixColumn*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDiag::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDiag::Class_Name()
{
   return "TMatrixDiag";
}

//______________________________________________________________________________
const char *TMatrixDiag::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDiag*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDiag::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDiag*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDiag::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDiag*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDiag::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDiag*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFlat::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFlat::Class_Name()
{
   return "TMatrixFlat";
}

//______________________________________________________________________________
const char *TMatrixFlat::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFlat*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFlat::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFlat*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFlat::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFlat*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFlat::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFlat*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFLazy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFLazy::Class_Name()
{
   return "TMatrixFLazy";
}

//______________________________________________________________________________
const char *TMatrixFLazy::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFLazy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFLazy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFLazy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFLazy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFLazy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFLazy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFLazy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrix::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrix::Class_Name()
{
   return "TMatrix";
}

//______________________________________________________________________________
const char *TMatrix::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrix::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrix::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrix::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrix*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDecompQRH::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDecompQRH::Class_Name()
{
   return "TDecompQRH";
}

//______________________________________________________________________________
const char *TDecompQRH::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompQRH*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDecompQRH::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompQRH*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDecompQRH::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompQRH*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDecompQRH::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompQRH*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDecompLU::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDecompLU::Class_Name()
{
   return "TDecompLU";
}

//______________________________________________________________________________
const char *TDecompLU::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompLU*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDecompLU::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompLU*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDecompLU::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompLU*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDecompLU::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompLU*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDEigen::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDEigen::Class_Name()
{
   return "TMatrixDEigen";
}

//______________________________________________________________________________
const char *TMatrixDEigen::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDEigen*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDEigen::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDEigen*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDEigen::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDEigen*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDEigen::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDEigen*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDecompChol::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDecompChol::Class_Name()
{
   return "TDecompChol";
}

//______________________________________________________________________________
const char *TDecompChol::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompChol*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDecompChol::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompChol*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDecompChol::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompChol*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDecompChol::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompChol*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixFSymLazy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixFSymLazy::Class_Name()
{
   return "TMatrixFSymLazy";
}

//______________________________________________________________________________
const char *TMatrixFSymLazy::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFSymLazy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixFSymLazy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixFSymLazy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixFSymLazy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFSymLazy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixFSymLazy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixFSymLazy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVector::Class_Name()
{
   return "TVector";
}

//______________________________________________________________________________
const char *TVector::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TVector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDecompSVD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDecompSVD::Class_Name()
{
   return "TDecompSVD";
}

//______________________________________________________________________________
const char *TDecompSVD::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompSVD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDecompSVD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TDecompSVD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDecompSVD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompSVD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDecompSVD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TDecompSVD*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixDSymEigen::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixDSymEigen::Class_Name()
{
   return "TMatrixDSymEigen";
}

//______________________________________________________________________________
const char *TMatrixDSymEigen::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSymEigen*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixDSymEigen::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixDSymEigen*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixDSymEigen::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSymEigen*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixDSymEigen::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixDSymEigen*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMatrixLazy::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMatrixLazy::Class_Name()
{
   return "TMatrixLazy";
}

//______________________________________________________________________________
const char *TMatrixLazy::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixLazy*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMatrixLazy::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMatrixLazy*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMatrixLazy::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixLazy*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMatrixLazy::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMatrixLazy*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THaarMatrixF::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THaarMatrixF::Class_Name()
{
   return "THaarMatrixF";
}

//______________________________________________________________________________
const char *THaarMatrixF::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::THaarMatrixF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaarMatrixF::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::THaarMatrixF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaarMatrixF::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::THaarMatrixF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaarMatrixF::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::THaarMatrixF*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THilbertMatrixF::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THilbertMatrixF::Class_Name()
{
   return "THilbertMatrixF";
}

//______________________________________________________________________________
const char *THilbertMatrixF::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::THilbertMatrixF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THilbertMatrixF::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::THilbertMatrixF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THilbertMatrixF::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::THilbertMatrixF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THilbertMatrixF::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::THilbertMatrixF*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THilbertMatrixFSym::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THilbertMatrixFSym::Class_Name()
{
   return "THilbertMatrixFSym";
}

//______________________________________________________________________________
const char *THilbertMatrixFSym::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::THilbertMatrixFSym*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THilbertMatrixFSym::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::THilbertMatrixFSym*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THilbertMatrixFSym::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::THilbertMatrixFSym*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THilbertMatrixFSym::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::THilbertMatrixFSym*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TVectorF::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVectorF.

      TClass *R__cl = ::TVectorF::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNrows", &fNrows);
      R__insp.Inspect(R__cl, R__parent, "fRowLwb", &fRowLwb);
      R__insp.Inspect(R__cl, R__parent, "*fElements", &fElements);
      R__insp.Inspect(R__cl, R__parent, "fDataStack[5]", fDataStack);
      R__insp.Inspect(R__cl, R__parent, "fIsOwner", &fIsOwner);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TVectorF_IsA(const void *obj) {
      return ((::TVectorF*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TVectorF(void *p) {
      return  p ? new(p) ::TVectorF : new ::TVectorF;
   }
   static void *newArray_TVectorF(Long_t size) {
      return new ::TVectorF[size];
   }
   // Wrapper around operator delete
   static void delete_TVectorF(void *p) {
      delete ((::TVectorF*)p);
   }
   static void deleteArray_TVectorF(void *p) {
      delete [] ((::TVectorF*)p);
   }
   static void destruct_TVectorF(void *p) {
      typedef ::TVectorF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVectorF

//______________________________________________________________________________
void TMatrixFBase::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFBase.

      TClass *R__cl = ::TMatrixFBase::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNrows", &fNrows);
      R__insp.Inspect(R__cl, R__parent, "fNcols", &fNcols);
      R__insp.Inspect(R__cl, R__parent, "fRowLwb", &fRowLwb);
      R__insp.Inspect(R__cl, R__parent, "fColLwb", &fColLwb);
      R__insp.Inspect(R__cl, R__parent, "fNelems", &fNelems);
      R__insp.Inspect(R__cl, R__parent, "fNrowIndex", &fNrowIndex);
      R__insp.Inspect(R__cl, R__parent, "fTol", &fTol);
      R__insp.Inspect(R__cl, R__parent, "fIsOwner", &fIsOwner);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFBase_IsA(const void *obj) {
      return ((::TMatrixFBase*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TMatrixFBase(void *p) {
      delete ((::TMatrixFBase*)p);
   }
   static void deleteArray_TMatrixFBase(void *p) {
      delete [] ((::TMatrixFBase*)p);
   }
   static void destruct_TMatrixFBase(void *p) {
      typedef ::TMatrixFBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFBase

//______________________________________________________________________________
void TMatrixF::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixF.

      TClass *R__cl = ::TMatrixF::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDataStack[25]", fDataStack);
      R__insp.Inspect(R__cl, R__parent, "*fElements", &fElements);
      TMatrixFBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixF_IsA(const void *obj) {
      return ((::TMatrixF*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixF(void *p) {
      return  p ? new(p) ::TMatrixF : new ::TMatrixF;
   }
   static void *newArray_TMatrixF(Long_t size) {
      return new ::TMatrixF[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixF(void *p) {
      delete ((::TMatrixF*)p);
   }
   static void deleteArray_TMatrixF(void *p) {
      delete [] ((::TMatrixF*)p);
   }
   static void destruct_TMatrixF(void *p) {
      typedef ::TMatrixF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixF

//______________________________________________________________________________
void TMatrixFSym::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFSym.

      TClass *R__cl = ::TMatrixFSym::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDataStack[25]", fDataStack);
      R__insp.Inspect(R__cl, R__parent, "*fElements", &fElements);
      TMatrixFBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFSym_IsA(const void *obj) {
      return ((::TMatrixFSym*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFSym(void *p) {
      return  p ? new(p) ::TMatrixFSym : new ::TMatrixFSym;
   }
   static void *newArray_TMatrixFSym(Long_t size) {
      return new ::TMatrixFSym[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFSym(void *p) {
      delete ((::TMatrixFSym*)p);
   }
   static void deleteArray_TMatrixFSym(void *p) {
      delete [] ((::TMatrixFSym*)p);
   }
   static void destruct_TMatrixFSym(void *p) {
      typedef ::TMatrixFSym current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFSym

//______________________________________________________________________________
void TMatrixFLazy::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFLazy.

   if (R__b.IsReading()) {
      TMatrixFLazy::Class()->ReadBuffer(R__b, this);
   } else {
      TMatrixFLazy::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TMatrixFLazy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFLazy.

      TClass *R__cl = ::TMatrixFLazy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRowUpb", &fRowUpb);
      R__insp.Inspect(R__cl, R__parent, "fRowLwb", &fRowLwb);
      R__insp.Inspect(R__cl, R__parent, "fColUpb", &fColUpb);
      R__insp.Inspect(R__cl, R__parent, "fColLwb", &fColLwb);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFLazy_IsA(const void *obj) {
      return ((::TMatrixFLazy*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TMatrixFLazy(void *p) {
      delete ((::TMatrixFLazy*)p);
   }
   static void deleteArray_TMatrixFLazy(void *p) {
      delete [] ((::TMatrixFLazy*)p);
   }
   static void destruct_TMatrixFLazy(void *p) {
      typedef ::TMatrixFLazy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFLazy

//______________________________________________________________________________
void TMatrixFSymLazy::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFSymLazy.

   if (R__b.IsReading()) {
      TMatrixFSymLazy::Class()->ReadBuffer(R__b, this);
   } else {
      TMatrixFSymLazy::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TMatrixFSymLazy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFSymLazy.

      TClass *R__cl = ::TMatrixFSymLazy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRowUpb", &fRowUpb);
      R__insp.Inspect(R__cl, R__parent, "fRowLwb", &fRowLwb);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFSymLazy_IsA(const void *obj) {
      return ((::TMatrixFSymLazy*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TMatrixFSymLazy(void *p) {
      delete ((::TMatrixFSymLazy*)p);
   }
   static void deleteArray_TMatrixFSymLazy(void *p) {
      delete [] ((::TMatrixFSymLazy*)p);
   }
   static void destruct_TMatrixFSymLazy(void *p) {
      typedef ::TMatrixFSymLazy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFSymLazy

//______________________________________________________________________________
void THaarMatrixF::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaarMatrixF.

   if (R__b.IsReading()) {
      THaarMatrixF::Class()->ReadBuffer(R__b, this);
   } else {
      THaarMatrixF::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void THaarMatrixF::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THaarMatrixF.

      TClass *R__cl = ::THaarMatrixF::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFLazy::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *THaarMatrixF_IsA(const void *obj) {
      return ((::THaarMatrixF*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_THaarMatrixF(void *p) {
      return  p ? new(p) ::THaarMatrixF : new ::THaarMatrixF;
   }
   static void *newArray_THaarMatrixF(Long_t size) {
      return new ::THaarMatrixF[size];
   }
   // Wrapper around operator delete
   static void delete_THaarMatrixF(void *p) {
      delete ((::THaarMatrixF*)p);
   }
   static void deleteArray_THaarMatrixF(void *p) {
      delete [] ((::THaarMatrixF*)p);
   }
   static void destruct_THaarMatrixF(void *p) {
      typedef ::THaarMatrixF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THaarMatrixF

//______________________________________________________________________________
void THilbertMatrixF::Streamer(TBuffer &R__b)
{
   // Stream an object of class THilbertMatrixF.

   if (R__b.IsReading()) {
      THilbertMatrixF::Class()->ReadBuffer(R__b, this);
   } else {
      THilbertMatrixF::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void THilbertMatrixF::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THilbertMatrixF.

      TClass *R__cl = ::THilbertMatrixF::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFLazy::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *THilbertMatrixF_IsA(const void *obj) {
      return ((::THilbertMatrixF*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_THilbertMatrixF(void *p) {
      return  p ? new(p) ::THilbertMatrixF : new ::THilbertMatrixF;
   }
   static void *newArray_THilbertMatrixF(Long_t size) {
      return new ::THilbertMatrixF[size];
   }
   // Wrapper around operator delete
   static void delete_THilbertMatrixF(void *p) {
      delete ((::THilbertMatrixF*)p);
   }
   static void deleteArray_THilbertMatrixF(void *p) {
      delete [] ((::THilbertMatrixF*)p);
   }
   static void destruct_THilbertMatrixF(void *p) {
      typedef ::THilbertMatrixF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THilbertMatrixF

//______________________________________________________________________________
void THilbertMatrixFSym::Streamer(TBuffer &R__b)
{
   // Stream an object of class THilbertMatrixFSym.

   if (R__b.IsReading()) {
      THilbertMatrixFSym::Class()->ReadBuffer(R__b, this);
   } else {
      THilbertMatrixFSym::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void THilbertMatrixFSym::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THilbertMatrixFSym.

      TClass *R__cl = ::THilbertMatrixFSym::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFSymLazy::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *THilbertMatrixFSym_IsA(const void *obj) {
      return ((::THilbertMatrixFSym*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_THilbertMatrixFSym(void *p) {
      return  p ? new(p) ::THilbertMatrixFSym : new ::THilbertMatrixFSym;
   }
   static void *newArray_THilbertMatrixFSym(Long_t size) {
      return new ::THilbertMatrixFSym[size];
   }
   // Wrapper around operator delete
   static void delete_THilbertMatrixFSym(void *p) {
      delete ((::THilbertMatrixFSym*)p);
   }
   static void deleteArray_THilbertMatrixFSym(void *p) {
      delete [] ((::THilbertMatrixFSym*)p);
   }
   static void destruct_THilbertMatrixFSym(void *p) {
      typedef ::THilbertMatrixFSym current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THilbertMatrixFSym

//______________________________________________________________________________
void TMatrixFRow::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFRow.

   TMatrixFRow_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixFRow::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFRow.

      TClass *R__cl = ::TMatrixFRow::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFRow_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFRow_IsA(const void *obj) {
      return ((::TMatrixFRow*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFRow(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixFRow : new ::TMatrixFRow;
   }
   static void *newArray_TMatrixFRow(Long_t size) {
      return new ::TMatrixFRow[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFRow(void *p) {
      delete ((::TMatrixFRow*)p);
   }
   static void deleteArray_TMatrixFRow(void *p) {
      delete [] ((::TMatrixFRow*)p);
   }
   static void destruct_TMatrixFRow(void *p) {
      typedef ::TMatrixFRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFRow

//______________________________________________________________________________
void TMatrixFColumn::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFColumn.

   TMatrixFColumn_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixFColumn::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFColumn.

      TClass *R__cl = ::TMatrixFColumn::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFColumn_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFColumn_IsA(const void *obj) {
      return ((::TMatrixFColumn*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFColumn(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixFColumn : new ::TMatrixFColumn;
   }
   static void *newArray_TMatrixFColumn(Long_t size) {
      return new ::TMatrixFColumn[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFColumn(void *p) {
      delete ((::TMatrixFColumn*)p);
   }
   static void deleteArray_TMatrixFColumn(void *p) {
      delete [] ((::TMatrixFColumn*)p);
   }
   static void destruct_TMatrixFColumn(void *p) {
      typedef ::TMatrixFColumn current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFColumn

//______________________________________________________________________________
void TMatrixFDiag::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFDiag.

   TMatrixFDiag_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixFDiag::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFDiag.

      TClass *R__cl = ::TMatrixFDiag::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFDiag_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFDiag_IsA(const void *obj) {
      return ((::TMatrixFDiag*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFDiag(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixFDiag : new ::TMatrixFDiag;
   }
   static void *newArray_TMatrixFDiag(Long_t size) {
      return new ::TMatrixFDiag[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFDiag(void *p) {
      delete ((::TMatrixFDiag*)p);
   }
   static void deleteArray_TMatrixFDiag(void *p) {
      delete [] ((::TMatrixFDiag*)p);
   }
   static void destruct_TMatrixFDiag(void *p) {
      typedef ::TMatrixFDiag current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFDiag

//______________________________________________________________________________
void TMatrixFFlat::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFFlat.

   TMatrixFFlat_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixFFlat::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFFlat.

      TClass *R__cl = ::TMatrixFFlat::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFFlat_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFFlat_IsA(const void *obj) {
      return ((::TMatrixFFlat*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFFlat(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixFFlat : new ::TMatrixFFlat;
   }
   static void *newArray_TMatrixFFlat(Long_t size) {
      return new ::TMatrixFFlat[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFFlat(void *p) {
      delete ((::TMatrixFFlat*)p);
   }
   static void deleteArray_TMatrixFFlat(void *p) {
      delete [] ((::TMatrixFFlat*)p);
   }
   static void destruct_TMatrixFFlat(void *p) {
      typedef ::TMatrixFFlat current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFFlat

//______________________________________________________________________________
void TMatrixFSub::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFSub.

   TMatrixFSub_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixFSub::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFSub.

      TClass *R__cl = ::TMatrixFSub::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFSub_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFSub_IsA(const void *obj) {
      return ((::TMatrixFSub*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFSub(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixFSub : new ::TMatrixFSub;
   }
   static void *newArray_TMatrixFSub(Long_t size) {
      return new ::TMatrixFSub[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFSub(void *p) {
      delete ((::TMatrixFSub*)p);
   }
   static void deleteArray_TMatrixFSub(void *p) {
      delete [] ((::TMatrixFSub*)p);
   }
   static void destruct_TMatrixFSub(void *p) {
      typedef ::TMatrixFSub current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFSub

//______________________________________________________________________________
void TMatrixFRow_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFRow_const.

   ::Error("TMatrixFRow_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixFRow_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFRow_const.

      TClass *R__cl = ::TMatrixFRow_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fRowInd", &fRowInd);
      R__insp.Inspect(R__cl, R__parent, "fInc", &fInc);
      R__insp.Inspect(R__cl, R__parent, "*fPtr", &fPtr);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFRow_const_IsA(const void *obj) {
      return ((::TMatrixFRow_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFRow_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixFRow_const : new ::TMatrixFRow_const;
   }
   static void *newArray_TMatrixFRow_const(Long_t size) {
      return new ::TMatrixFRow_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFRow_const(void *p) {
      delete ((::TMatrixFRow_const*)p);
   }
   static void deleteArray_TMatrixFRow_const(void *p) {
      delete [] ((::TMatrixFRow_const*)p);
   }
   static void destruct_TMatrixFRow_const(void *p) {
      typedef ::TMatrixFRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFRow_const

//______________________________________________________________________________
void TMatrixFColumn_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFColumn_const.

   ::Error("TMatrixFColumn_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixFColumn_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFColumn_const.

      TClass *R__cl = ::TMatrixFColumn_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fColInd", &fColInd);
      R__insp.Inspect(R__cl, R__parent, "fInc", &fInc);
      R__insp.Inspect(R__cl, R__parent, "*fPtr", &fPtr);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFColumn_const_IsA(const void *obj) {
      return ((::TMatrixFColumn_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFColumn_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixFColumn_const : new ::TMatrixFColumn_const;
   }
   static void *newArray_TMatrixFColumn_const(Long_t size) {
      return new ::TMatrixFColumn_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFColumn_const(void *p) {
      delete ((::TMatrixFColumn_const*)p);
   }
   static void deleteArray_TMatrixFColumn_const(void *p) {
      delete [] ((::TMatrixFColumn_const*)p);
   }
   static void destruct_TMatrixFColumn_const(void *p) {
      typedef ::TMatrixFColumn_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFColumn_const

//______________________________________________________________________________
void TMatrixFDiag_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFDiag_const.

   ::Error("TMatrixFDiag_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixFDiag_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFDiag_const.

      TClass *R__cl = ::TMatrixFDiag_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fInc", &fInc);
      R__insp.Inspect(R__cl, R__parent, "fNdiag", &fNdiag);
      R__insp.Inspect(R__cl, R__parent, "*fPtr", &fPtr);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFDiag_const_IsA(const void *obj) {
      return ((::TMatrixFDiag_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFDiag_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixFDiag_const : new ::TMatrixFDiag_const;
   }
   static void *newArray_TMatrixFDiag_const(Long_t size) {
      return new ::TMatrixFDiag_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFDiag_const(void *p) {
      delete ((::TMatrixFDiag_const*)p);
   }
   static void deleteArray_TMatrixFDiag_const(void *p) {
      delete [] ((::TMatrixFDiag_const*)p);
   }
   static void destruct_TMatrixFDiag_const(void *p) {
      typedef ::TMatrixFDiag_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFDiag_const

//______________________________________________________________________________
void TMatrixFFlat_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFFlat_const.

   ::Error("TMatrixFFlat_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixFFlat_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFFlat_const.

      TClass *R__cl = ::TMatrixFFlat_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fNelems", &fNelems);
      R__insp.Inspect(R__cl, R__parent, "*fPtr", &fPtr);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFFlat_const_IsA(const void *obj) {
      return ((::TMatrixFFlat_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFFlat_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixFFlat_const : new ::TMatrixFFlat_const;
   }
   static void *newArray_TMatrixFFlat_const(Long_t size) {
      return new ::TMatrixFFlat_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFFlat_const(void *p) {
      delete ((::TMatrixFFlat_const*)p);
   }
   static void deleteArray_TMatrixFFlat_const(void *p) {
      delete [] ((::TMatrixFFlat_const*)p);
   }
   static void destruct_TMatrixFFlat_const(void *p) {
      typedef ::TMatrixFFlat_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFFlat_const

//______________________________________________________________________________
void TMatrixFSub_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFSub_const.

   ::Error("TMatrixFSub_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixFSub_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFSub_const.

      TClass *R__cl = ::TMatrixFSub_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fRowOff", &fRowOff);
      R__insp.Inspect(R__cl, R__parent, "fColOff", &fColOff);
      R__insp.Inspect(R__cl, R__parent, "fNrowsSub", &fNrowsSub);
      R__insp.Inspect(R__cl, R__parent, "fNcolsSub", &fNcolsSub);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFSub_const_IsA(const void *obj) {
      return ((::TMatrixFSub_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFSub_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixFSub_const : new ::TMatrixFSub_const;
   }
   static void *newArray_TMatrixFSub_const(Long_t size) {
      return new ::TMatrixFSub_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFSub_const(void *p) {
      delete ((::TMatrixFSub_const*)p);
   }
   static void deleteArray_TMatrixFSub_const(void *p) {
      delete [] ((::TMatrixFSub_const*)p);
   }
   static void destruct_TMatrixFSub_const(void *p) {
      typedef ::TMatrixFSub_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFSub_const

//______________________________________________________________________________
void TVector::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVector.

      TClass *R__cl = ::TVector::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TVectorF::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TVector_IsA(const void *obj) {
      return ((::TVector*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TVector(void *p) {
      return  p ? new(p) ::TVector : new ::TVector;
   }
   static void *newArray_TVector(Long_t size) {
      return new ::TVector[size];
   }
   // Wrapper around operator delete
   static void delete_TVector(void *p) {
      delete ((::TVector*)p);
   }
   static void deleteArray_TVector(void *p) {
      delete [] ((::TVector*)p);
   }
   static void destruct_TVector(void *p) {
      typedef ::TVector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVector

//______________________________________________________________________________
void TMatrix::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrix.

      TClass *R__cl = ::TMatrix::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixF::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrix_IsA(const void *obj) {
      return ((::TMatrix*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrix(void *p) {
      return  p ? new(p) ::TMatrix : new ::TMatrix;
   }
   static void *newArray_TMatrix(Long_t size) {
      return new ::TMatrix[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrix(void *p) {
      delete ((::TMatrix*)p);
   }
   static void deleteArray_TMatrix(void *p) {
      delete [] ((::TMatrix*)p);
   }
   static void destruct_TMatrix(void *p) {
      typedef ::TMatrix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrix

//______________________________________________________________________________
void TMatrixLazy::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixLazy.

   if (R__b.IsReading()) {
      TMatrixLazy::Class()->ReadBuffer(R__b, this);
   } else {
      TMatrixLazy::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TMatrixLazy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixLazy.

      TClass *R__cl = ::TMatrixLazy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFLazy::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixLazy_IsA(const void *obj) {
      return ((::TMatrixLazy*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TMatrixLazy(void *p) {
      delete ((::TMatrixLazy*)p);
   }
   static void deleteArray_TMatrixLazy(void *p) {
      delete [] ((::TMatrixLazy*)p);
   }
   static void destruct_TMatrixLazy(void *p) {
      typedef ::TMatrixLazy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixLazy

//______________________________________________________________________________
void TMatrixRow::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixRow.

   TMatrixFRow::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixRow::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixRow.

      TClass *R__cl = ::TMatrixRow::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFRow::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixRow_IsA(const void *obj) {
      return ((::TMatrixRow*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixRow(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixRow : new ::TMatrixRow;
   }
   static void *newArray_TMatrixRow(Long_t size) {
      return new ::TMatrixRow[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixRow(void *p) {
      delete ((::TMatrixRow*)p);
   }
   static void deleteArray_TMatrixRow(void *p) {
      delete [] ((::TMatrixRow*)p);
   }
   static void destruct_TMatrixRow(void *p) {
      typedef ::TMatrixRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixRow

//______________________________________________________________________________
void TMatrixColumn::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixColumn.

   TMatrixFColumn::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixColumn::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixColumn.

      TClass *R__cl = ::TMatrixColumn::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFColumn::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixColumn_IsA(const void *obj) {
      return ((::TMatrixColumn*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixColumn(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixColumn : new ::TMatrixColumn;
   }
   static void *newArray_TMatrixColumn(Long_t size) {
      return new ::TMatrixColumn[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixColumn(void *p) {
      delete ((::TMatrixColumn*)p);
   }
   static void deleteArray_TMatrixColumn(void *p) {
      delete [] ((::TMatrixColumn*)p);
   }
   static void destruct_TMatrixColumn(void *p) {
      typedef ::TMatrixColumn current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixColumn

//______________________________________________________________________________
void TMatrixDiag::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDiag.

   TMatrixFDiag::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixDiag::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDiag.

      TClass *R__cl = ::TMatrixDiag::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFDiag::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDiag_IsA(const void *obj) {
      return ((::TMatrixDiag*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDiag(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDiag : new ::TMatrixDiag;
   }
   static void *newArray_TMatrixDiag(Long_t size) {
      return new ::TMatrixDiag[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDiag(void *p) {
      delete ((::TMatrixDiag*)p);
   }
   static void deleteArray_TMatrixDiag(void *p) {
      delete [] ((::TMatrixDiag*)p);
   }
   static void destruct_TMatrixDiag(void *p) {
      typedef ::TMatrixDiag current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDiag

//______________________________________________________________________________
void TMatrixFlat::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixFlat.

   TMatrixFFlat::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixFlat::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixFlat.

      TClass *R__cl = ::TMatrixFlat::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixFFlat::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixFlat_IsA(const void *obj) {
      return ((::TMatrixFlat*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixFlat(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixFlat : new ::TMatrixFlat;
   }
   static void *newArray_TMatrixFlat(Long_t size) {
      return new ::TMatrixFlat[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixFlat(void *p) {
      delete ((::TMatrixFlat*)p);
   }
   static void deleteArray_TMatrixFlat(void *p) {
      delete [] ((::TMatrixFlat*)p);
   }
   static void destruct_TMatrixFlat(void *p) {
      typedef ::TMatrixFlat current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixFlat

//______________________________________________________________________________
void TVectorD::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TVectorD.

      TClass *R__cl = ::TVectorD::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNrows", &fNrows);
      R__insp.Inspect(R__cl, R__parent, "fRowLwb", &fRowLwb);
      R__insp.Inspect(R__cl, R__parent, "*fElements", &fElements);
      R__insp.Inspect(R__cl, R__parent, "fDataStack[5]", fDataStack);
      R__insp.Inspect(R__cl, R__parent, "fIsOwner", &fIsOwner);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TVectorD_IsA(const void *obj) {
      return ((::TVectorD*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TVectorD(void *p) {
      return  p ? new(p) ::TVectorD : new ::TVectorD;
   }
   static void *newArray_TVectorD(Long_t size) {
      return new ::TVectorD[size];
   }
   // Wrapper around operator delete
   static void delete_TVectorD(void *p) {
      delete ((::TVectorD*)p);
   }
   static void deleteArray_TVectorD(void *p) {
      delete [] ((::TVectorD*)p);
   }
   static void destruct_TVectorD(void *p) {
      typedef ::TVectorD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVectorD

//______________________________________________________________________________
void TMatrixDBase::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDBase.

      TClass *R__cl = ::TMatrixDBase::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNrows", &fNrows);
      R__insp.Inspect(R__cl, R__parent, "fNcols", &fNcols);
      R__insp.Inspect(R__cl, R__parent, "fRowLwb", &fRowLwb);
      R__insp.Inspect(R__cl, R__parent, "fColLwb", &fColLwb);
      R__insp.Inspect(R__cl, R__parent, "fNelems", &fNelems);
      R__insp.Inspect(R__cl, R__parent, "fNrowIndex", &fNrowIndex);
      R__insp.Inspect(R__cl, R__parent, "fTol", &fTol);
      R__insp.Inspect(R__cl, R__parent, "fIsOwner", &fIsOwner);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDBase_IsA(const void *obj) {
      return ((::TMatrixDBase*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TMatrixDBase(void *p) {
      delete ((::TMatrixDBase*)p);
   }
   static void deleteArray_TMatrixDBase(void *p) {
      delete [] ((::TMatrixDBase*)p);
   }
   static void destruct_TMatrixDBase(void *p) {
      typedef ::TMatrixDBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDBase

//______________________________________________________________________________
void TMatrixD::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixD.

      TClass *R__cl = ::TMatrixD::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDataStack[25]", fDataStack);
      R__insp.Inspect(R__cl, R__parent, "*fElements", &fElements);
      TMatrixDBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixD_IsA(const void *obj) {
      return ((::TMatrixD*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixD(void *p) {
      return  p ? new(p) ::TMatrixD : new ::TMatrixD;
   }
   static void *newArray_TMatrixD(Long_t size) {
      return new ::TMatrixD[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixD(void *p) {
      delete ((::TMatrixD*)p);
   }
   static void deleteArray_TMatrixD(void *p) {
      delete [] ((::TMatrixD*)p);
   }
   static void destruct_TMatrixD(void *p) {
      typedef ::TMatrixD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixD

//______________________________________________________________________________
void TMatrixDSym::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDSym.

      TClass *R__cl = ::TMatrixDSym::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDataStack[25]", fDataStack);
      R__insp.Inspect(R__cl, R__parent, "*fElements", &fElements);
      TMatrixDBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDSym_IsA(const void *obj) {
      return ((::TMatrixDSym*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDSym(void *p) {
      return  p ? new(p) ::TMatrixDSym : new ::TMatrixDSym;
   }
   static void *newArray_TMatrixDSym(Long_t size) {
      return new ::TMatrixDSym[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDSym(void *p) {
      delete ((::TMatrixDSym*)p);
   }
   static void deleteArray_TMatrixDSym(void *p) {
      delete [] ((::TMatrixDSym*)p);
   }
   static void destruct_TMatrixDSym(void *p) {
      typedef ::TMatrixDSym current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDSym

//______________________________________________________________________________
void TMatrixDSparse::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDSparse.

   if (R__b.IsReading()) {
      TMatrixDSparse::Class()->ReadBuffer(R__b, this);
   } else {
      TMatrixDSparse::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TMatrixDSparse::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDSparse.

      TClass *R__cl = ::TMatrixDSparse::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fRowIndex", &fRowIndex);
      R__insp.Inspect(R__cl, R__parent, "*fColIndex", &fColIndex);
      R__insp.Inspect(R__cl, R__parent, "*fElements", &fElements);
      TMatrixDBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDSparse_IsA(const void *obj) {
      return ((::TMatrixDSparse*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDSparse(void *p) {
      return  p ? new(p) ::TMatrixDSparse : new ::TMatrixDSparse;
   }
   static void *newArray_TMatrixDSparse(Long_t size) {
      return new ::TMatrixDSparse[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDSparse(void *p) {
      delete ((::TMatrixDSparse*)p);
   }
   static void deleteArray_TMatrixDSparse(void *p) {
      delete [] ((::TMatrixDSparse*)p);
   }
   static void destruct_TMatrixDSparse(void *p) {
      typedef ::TMatrixDSparse current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDSparse

//______________________________________________________________________________
void TMatrixDLazy::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDLazy.

   if (R__b.IsReading()) {
      TMatrixDLazy::Class()->ReadBuffer(R__b, this);
   } else {
      TMatrixDLazy::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TMatrixDLazy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDLazy.

      TClass *R__cl = ::TMatrixDLazy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRowUpb", &fRowUpb);
      R__insp.Inspect(R__cl, R__parent, "fRowLwb", &fRowLwb);
      R__insp.Inspect(R__cl, R__parent, "fColUpb", &fColUpb);
      R__insp.Inspect(R__cl, R__parent, "fColLwb", &fColLwb);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDLazy_IsA(const void *obj) {
      return ((::TMatrixDLazy*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TMatrixDLazy(void *p) {
      delete ((::TMatrixDLazy*)p);
   }
   static void deleteArray_TMatrixDLazy(void *p) {
      delete [] ((::TMatrixDLazy*)p);
   }
   static void destruct_TMatrixDLazy(void *p) {
      typedef ::TMatrixDLazy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDLazy

//______________________________________________________________________________
void TMatrixDSymLazy::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDSymLazy.

   if (R__b.IsReading()) {
      TMatrixDSymLazy::Class()->ReadBuffer(R__b, this);
   } else {
      TMatrixDSymLazy::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TMatrixDSymLazy::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDSymLazy.

      TClass *R__cl = ::TMatrixDSymLazy::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRowUpb", &fRowUpb);
      R__insp.Inspect(R__cl, R__parent, "fRowLwb", &fRowLwb);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDSymLazy_IsA(const void *obj) {
      return ((::TMatrixDSymLazy*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TMatrixDSymLazy(void *p) {
      delete ((::TMatrixDSymLazy*)p);
   }
   static void deleteArray_TMatrixDSymLazy(void *p) {
      delete [] ((::TMatrixDSymLazy*)p);
   }
   static void destruct_TMatrixDSymLazy(void *p) {
      typedef ::TMatrixDSymLazy current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDSymLazy

//______________________________________________________________________________
void THaarMatrixD::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaarMatrixD.

   if (R__b.IsReading()) {
      THaarMatrixD::Class()->ReadBuffer(R__b, this);
   } else {
      THaarMatrixD::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void THaarMatrixD::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THaarMatrixD.

      TClass *R__cl = ::THaarMatrixD::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixDLazy::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *THaarMatrixD_IsA(const void *obj) {
      return ((::THaarMatrixD*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_THaarMatrixD(void *p) {
      return  p ? new(p) ::THaarMatrixD : new ::THaarMatrixD;
   }
   static void *newArray_THaarMatrixD(Long_t size) {
      return new ::THaarMatrixD[size];
   }
   // Wrapper around operator delete
   static void delete_THaarMatrixD(void *p) {
      delete ((::THaarMatrixD*)p);
   }
   static void deleteArray_THaarMatrixD(void *p) {
      delete [] ((::THaarMatrixD*)p);
   }
   static void destruct_THaarMatrixD(void *p) {
      typedef ::THaarMatrixD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THaarMatrixD

//______________________________________________________________________________
void THilbertMatrixD::Streamer(TBuffer &R__b)
{
   // Stream an object of class THilbertMatrixD.

   if (R__b.IsReading()) {
      THilbertMatrixD::Class()->ReadBuffer(R__b, this);
   } else {
      THilbertMatrixD::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void THilbertMatrixD::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THilbertMatrixD.

      TClass *R__cl = ::THilbertMatrixD::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixDLazy::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *THilbertMatrixD_IsA(const void *obj) {
      return ((::THilbertMatrixD*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_THilbertMatrixD(void *p) {
      return  p ? new(p) ::THilbertMatrixD : new ::THilbertMatrixD;
   }
   static void *newArray_THilbertMatrixD(Long_t size) {
      return new ::THilbertMatrixD[size];
   }
   // Wrapper around operator delete
   static void delete_THilbertMatrixD(void *p) {
      delete ((::THilbertMatrixD*)p);
   }
   static void deleteArray_THilbertMatrixD(void *p) {
      delete [] ((::THilbertMatrixD*)p);
   }
   static void destruct_THilbertMatrixD(void *p) {
      typedef ::THilbertMatrixD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THilbertMatrixD

//______________________________________________________________________________
void THilbertMatrixDSym::Streamer(TBuffer &R__b)
{
   // Stream an object of class THilbertMatrixDSym.

   if (R__b.IsReading()) {
      THilbertMatrixDSym::Class()->ReadBuffer(R__b, this);
   } else {
      THilbertMatrixDSym::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void THilbertMatrixDSym::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THilbertMatrixDSym.

      TClass *R__cl = ::THilbertMatrixDSym::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixDSymLazy::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *THilbertMatrixDSym_IsA(const void *obj) {
      return ((::THilbertMatrixDSym*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_THilbertMatrixDSym(void *p) {
      return  p ? new(p) ::THilbertMatrixDSym : new ::THilbertMatrixDSym;
   }
   static void *newArray_THilbertMatrixDSym(Long_t size) {
      return new ::THilbertMatrixDSym[size];
   }
   // Wrapper around operator delete
   static void delete_THilbertMatrixDSym(void *p) {
      delete ((::THilbertMatrixDSym*)p);
   }
   static void deleteArray_THilbertMatrixDSym(void *p) {
      delete [] ((::THilbertMatrixDSym*)p);
   }
   static void destruct_THilbertMatrixDSym(void *p) {
      typedef ::THilbertMatrixDSym current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THilbertMatrixDSym

//______________________________________________________________________________
void TMatrixDRow::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDRow.

   TMatrixDRow_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixDRow::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDRow.

      TClass *R__cl = ::TMatrixDRow::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixDRow_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDRow_IsA(const void *obj) {
      return ((::TMatrixDRow*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDRow(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDRow : new ::TMatrixDRow;
   }
   static void *newArray_TMatrixDRow(Long_t size) {
      return new ::TMatrixDRow[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDRow(void *p) {
      delete ((::TMatrixDRow*)p);
   }
   static void deleteArray_TMatrixDRow(void *p) {
      delete [] ((::TMatrixDRow*)p);
   }
   static void destruct_TMatrixDRow(void *p) {
      typedef ::TMatrixDRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDRow

//______________________________________________________________________________
void TMatrixDColumn::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDColumn.

   TMatrixDColumn_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixDColumn::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDColumn.

      TClass *R__cl = ::TMatrixDColumn::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixDColumn_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDColumn_IsA(const void *obj) {
      return ((::TMatrixDColumn*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDColumn(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDColumn : new ::TMatrixDColumn;
   }
   static void *newArray_TMatrixDColumn(Long_t size) {
      return new ::TMatrixDColumn[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDColumn(void *p) {
      delete ((::TMatrixDColumn*)p);
   }
   static void deleteArray_TMatrixDColumn(void *p) {
      delete [] ((::TMatrixDColumn*)p);
   }
   static void destruct_TMatrixDColumn(void *p) {
      typedef ::TMatrixDColumn current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDColumn

//______________________________________________________________________________
void TMatrixDDiag::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDDiag.

   TMatrixDDiag_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixDDiag::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDDiag.

      TClass *R__cl = ::TMatrixDDiag::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixDDiag_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDDiag_IsA(const void *obj) {
      return ((::TMatrixDDiag*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDDiag(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDDiag : new ::TMatrixDDiag;
   }
   static void *newArray_TMatrixDDiag(Long_t size) {
      return new ::TMatrixDDiag[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDDiag(void *p) {
      delete ((::TMatrixDDiag*)p);
   }
   static void deleteArray_TMatrixDDiag(void *p) {
      delete [] ((::TMatrixDDiag*)p);
   }
   static void destruct_TMatrixDDiag(void *p) {
      typedef ::TMatrixDDiag current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDDiag

//______________________________________________________________________________
void TMatrixDFlat::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDFlat.

   TMatrixDFlat_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixDFlat::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDFlat.

      TClass *R__cl = ::TMatrixDFlat::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixDFlat_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDFlat_IsA(const void *obj) {
      return ((::TMatrixDFlat*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDFlat(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDFlat : new ::TMatrixDFlat;
   }
   static void *newArray_TMatrixDFlat(Long_t size) {
      return new ::TMatrixDFlat[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDFlat(void *p) {
      delete ((::TMatrixDFlat*)p);
   }
   static void deleteArray_TMatrixDFlat(void *p) {
      delete [] ((::TMatrixDFlat*)p);
   }
   static void destruct_TMatrixDFlat(void *p) {
      typedef ::TMatrixDFlat current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDFlat

//______________________________________________________________________________
void TMatrixDSub::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDSub.

   TMatrixDSub_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixDSub::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDSub.

      TClass *R__cl = ::TMatrixDSub::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixDSub_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDSub_IsA(const void *obj) {
      return ((::TMatrixDSub*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDSub(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDSub : new ::TMatrixDSub;
   }
   static void *newArray_TMatrixDSub(Long_t size) {
      return new ::TMatrixDSub[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDSub(void *p) {
      delete ((::TMatrixDSub*)p);
   }
   static void deleteArray_TMatrixDSub(void *p) {
      delete [] ((::TMatrixDSub*)p);
   }
   static void destruct_TMatrixDSub(void *p) {
      typedef ::TMatrixDSub current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDSub

//______________________________________________________________________________
void TMatrixDRow_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDRow_const.

   ::Error("TMatrixDRow_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixDRow_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDRow_const.

      TClass *R__cl = ::TMatrixDRow_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fRowInd", &fRowInd);
      R__insp.Inspect(R__cl, R__parent, "fInc", &fInc);
      R__insp.Inspect(R__cl, R__parent, "*fPtr", &fPtr);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDRow_const_IsA(const void *obj) {
      return ((::TMatrixDRow_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDRow_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDRow_const : new ::TMatrixDRow_const;
   }
   static void *newArray_TMatrixDRow_const(Long_t size) {
      return new ::TMatrixDRow_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDRow_const(void *p) {
      delete ((::TMatrixDRow_const*)p);
   }
   static void deleteArray_TMatrixDRow_const(void *p) {
      delete [] ((::TMatrixDRow_const*)p);
   }
   static void destruct_TMatrixDRow_const(void *p) {
      typedef ::TMatrixDRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDRow_const

//______________________________________________________________________________
void TMatrixDColumn_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDColumn_const.

   ::Error("TMatrixDColumn_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixDColumn_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDColumn_const.

      TClass *R__cl = ::TMatrixDColumn_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fColInd", &fColInd);
      R__insp.Inspect(R__cl, R__parent, "fInc", &fInc);
      R__insp.Inspect(R__cl, R__parent, "*fPtr", &fPtr);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDColumn_const_IsA(const void *obj) {
      return ((::TMatrixDColumn_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDColumn_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDColumn_const : new ::TMatrixDColumn_const;
   }
   static void *newArray_TMatrixDColumn_const(Long_t size) {
      return new ::TMatrixDColumn_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDColumn_const(void *p) {
      delete ((::TMatrixDColumn_const*)p);
   }
   static void deleteArray_TMatrixDColumn_const(void *p) {
      delete [] ((::TMatrixDColumn_const*)p);
   }
   static void destruct_TMatrixDColumn_const(void *p) {
      typedef ::TMatrixDColumn_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDColumn_const

//______________________________________________________________________________
void TMatrixDDiag_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDDiag_const.

   ::Error("TMatrixDDiag_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixDDiag_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDDiag_const.

      TClass *R__cl = ::TMatrixDDiag_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fInc", &fInc);
      R__insp.Inspect(R__cl, R__parent, "fNdiag", &fNdiag);
      R__insp.Inspect(R__cl, R__parent, "*fPtr", &fPtr);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDDiag_const_IsA(const void *obj) {
      return ((::TMatrixDDiag_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDDiag_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDDiag_const : new ::TMatrixDDiag_const;
   }
   static void *newArray_TMatrixDDiag_const(Long_t size) {
      return new ::TMatrixDDiag_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDDiag_const(void *p) {
      delete ((::TMatrixDDiag_const*)p);
   }
   static void deleteArray_TMatrixDDiag_const(void *p) {
      delete [] ((::TMatrixDDiag_const*)p);
   }
   static void destruct_TMatrixDDiag_const(void *p) {
      typedef ::TMatrixDDiag_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDDiag_const

//______________________________________________________________________________
void TMatrixDFlat_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDFlat_const.

   ::Error("TMatrixDFlat_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixDFlat_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDFlat_const.

      TClass *R__cl = ::TMatrixDFlat_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fNelems", &fNelems);
      R__insp.Inspect(R__cl, R__parent, "*fPtr", &fPtr);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDFlat_const_IsA(const void *obj) {
      return ((::TMatrixDFlat_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDFlat_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDFlat_const : new ::TMatrixDFlat_const;
   }
   static void *newArray_TMatrixDFlat_const(Long_t size) {
      return new ::TMatrixDFlat_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDFlat_const(void *p) {
      delete ((::TMatrixDFlat_const*)p);
   }
   static void deleteArray_TMatrixDFlat_const(void *p) {
      delete [] ((::TMatrixDFlat_const*)p);
   }
   static void destruct_TMatrixDFlat_const(void *p) {
      typedef ::TMatrixDFlat_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDFlat_const

//______________________________________________________________________________
void TMatrixDSub_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDSub_const.

   ::Error("TMatrixDSub_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixDSub_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDSub_const.

      TClass *R__cl = ::TMatrixDSub_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fRowOff", &fRowOff);
      R__insp.Inspect(R__cl, R__parent, "fColOff", &fColOff);
      R__insp.Inspect(R__cl, R__parent, "fNrowsSub", &fNrowsSub);
      R__insp.Inspect(R__cl, R__parent, "fNcolsSub", &fNcolsSub);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDSub_const_IsA(const void *obj) {
      return ((::TMatrixDSub_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDSub_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDSub_const : new ::TMatrixDSub_const;
   }
   static void *newArray_TMatrixDSub_const(Long_t size) {
      return new ::TMatrixDSub_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDSub_const(void *p) {
      delete ((::TMatrixDSub_const*)p);
   }
   static void deleteArray_TMatrixDSub_const(void *p) {
      delete [] ((::TMatrixDSub_const*)p);
   }
   static void destruct_TMatrixDSub_const(void *p) {
      typedef ::TMatrixDSub_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDSub_const

//______________________________________________________________________________
void TMatrixDSparseRow_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDSparseRow_const.

   ::Error("TMatrixDSparseRow_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixDSparseRow_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDSparseRow_const.

      TClass *R__cl = ::TMatrixDSparseRow_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fRowInd", &fRowInd);
      R__insp.Inspect(R__cl, R__parent, "fNindex", &fNindex);
      R__insp.Inspect(R__cl, R__parent, "*fColPtr", &fColPtr);
      R__insp.Inspect(R__cl, R__parent, "*fDataPtr", &fDataPtr);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDSparseRow_const_IsA(const void *obj) {
      return ((::TMatrixDSparseRow_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDSparseRow_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDSparseRow_const : new ::TMatrixDSparseRow_const;
   }
   static void *newArray_TMatrixDSparseRow_const(Long_t size) {
      return new ::TMatrixDSparseRow_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDSparseRow_const(void *p) {
      delete ((::TMatrixDSparseRow_const*)p);
   }
   static void deleteArray_TMatrixDSparseRow_const(void *p) {
      delete [] ((::TMatrixDSparseRow_const*)p);
   }
   static void destruct_TMatrixDSparseRow_const(void *p) {
      typedef ::TMatrixDSparseRow_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDSparseRow_const

//______________________________________________________________________________
void TMatrixDSparseRow::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDSparseRow.

   TMatrixDSparseRow_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixDSparseRow::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDSparseRow.

      TClass *R__cl = ::TMatrixDSparseRow::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixDSparseRow_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDSparseRow_IsA(const void *obj) {
      return ((::TMatrixDSparseRow*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDSparseRow(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDSparseRow : new ::TMatrixDSparseRow;
   }
   static void *newArray_TMatrixDSparseRow(Long_t size) {
      return new ::TMatrixDSparseRow[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDSparseRow(void *p) {
      delete ((::TMatrixDSparseRow*)p);
   }
   static void deleteArray_TMatrixDSparseRow(void *p) {
      delete [] ((::TMatrixDSparseRow*)p);
   }
   static void destruct_TMatrixDSparseRow(void *p) {
      typedef ::TMatrixDSparseRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDSparseRow

//______________________________________________________________________________
void TMatrixDSparseDiag_const::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDSparseDiag_const.

   ::Error("TMatrixDSparseDiag_const::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TMatrixDSparseDiag_const::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDSparseDiag_const.

      TClass *R__cl = ::TMatrixDSparseDiag_const::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "fNdiag", &fNdiag);
      R__insp.Inspect(R__cl, R__parent, "*fDataPtr", &fDataPtr);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDSparseDiag_const_IsA(const void *obj) {
      return ((::TMatrixDSparseDiag_const*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDSparseDiag_const(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDSparseDiag_const : new ::TMatrixDSparseDiag_const;
   }
   static void *newArray_TMatrixDSparseDiag_const(Long_t size) {
      return new ::TMatrixDSparseDiag_const[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDSparseDiag_const(void *p) {
      delete ((::TMatrixDSparseDiag_const*)p);
   }
   static void deleteArray_TMatrixDSparseDiag_const(void *p) {
      delete [] ((::TMatrixDSparseDiag_const*)p);
   }
   static void destruct_TMatrixDSparseDiag_const(void *p) {
      typedef ::TMatrixDSparseDiag_const current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDSparseDiag_const

//______________________________________________________________________________
void TMatrixDSparseDiag::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDSparseDiag.

   TMatrixDSparseDiag_const::Streamer(R__b);
}

//______________________________________________________________________________
void TMatrixDSparseDiag::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDSparseDiag.

      TClass *R__cl = ::TMatrixDSparseDiag::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TMatrixDSparseDiag_const::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDSparseDiag_IsA(const void *obj) {
      return ((::TMatrixDSparseDiag*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDSparseDiag(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDSparseDiag : new ::TMatrixDSparseDiag;
   }
   static void *newArray_TMatrixDSparseDiag(Long_t size) {
      return new ::TMatrixDSparseDiag[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDSparseDiag(void *p) {
      delete ((::TMatrixDSparseDiag*)p);
   }
   static void deleteArray_TMatrixDSparseDiag(void *p) {
      delete [] ((::TMatrixDSparseDiag*)p);
   }
   static void destruct_TMatrixDSparseDiag(void *p) {
      typedef ::TMatrixDSparseDiag current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDSparseDiag

//______________________________________________________________________________
void TMatrixDEigen::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDEigen.

   if (R__b.IsReading()) {
      TMatrixDEigen::Class()->ReadBuffer(R__b, this);
   } else {
      TMatrixDEigen::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TMatrixDEigen::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDEigen.

      TClass *R__cl = ::TMatrixDEigen::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fEigenVectors", &fEigenVectors);
      fEigenVectors.ShowMembers(R__insp, strcat(R__parent,"fEigenVectors.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fEigenValuesRe", &fEigenValuesRe);
      fEigenValuesRe.ShowMembers(R__insp, strcat(R__parent,"fEigenValuesRe.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fEigenValuesIm", &fEigenValuesIm);
      fEigenValuesIm.ShowMembers(R__insp, strcat(R__parent,"fEigenValuesIm.")); R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDEigen_IsA(const void *obj) {
      return ((::TMatrixDEigen*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDEigen(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDEigen : new ::TMatrixDEigen;
   }
   static void *newArray_TMatrixDEigen(Long_t size) {
      return new ::TMatrixDEigen[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDEigen(void *p) {
      delete ((::TMatrixDEigen*)p);
   }
   static void deleteArray_TMatrixDEigen(void *p) {
      delete [] ((::TMatrixDEigen*)p);
   }
   static void destruct_TMatrixDEigen(void *p) {
      typedef ::TMatrixDEigen current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDEigen

//______________________________________________________________________________
void TMatrixDSymEigen::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMatrixDSymEigen.

   if (R__b.IsReading()) {
      TMatrixDSymEigen::Class()->ReadBuffer(R__b, this);
   } else {
      TMatrixDSymEigen::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TMatrixDSymEigen::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMatrixDSymEigen.

      TClass *R__cl = ::TMatrixDSymEigen::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fEigenVectors", &fEigenVectors);
      fEigenVectors.ShowMembers(R__insp, strcat(R__parent,"fEigenVectors.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fEigenValues", &fEigenValues);
      fEigenValues.ShowMembers(R__insp, strcat(R__parent,"fEigenValues.")); R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMatrixDSymEigen_IsA(const void *obj) {
      return ((::TMatrixDSymEigen*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMatrixDSymEigen(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TMatrixDSymEigen : new ::TMatrixDSymEigen;
   }
   static void *newArray_TMatrixDSymEigen(Long_t size) {
      return new ::TMatrixDSymEigen[size];
   }
   // Wrapper around operator delete
   static void delete_TMatrixDSymEigen(void *p) {
      delete ((::TMatrixDSymEigen*)p);
   }
   static void deleteArray_TMatrixDSymEigen(void *p) {
      delete [] ((::TMatrixDSymEigen*)p);
   }
   static void destruct_TMatrixDSymEigen(void *p) {
      typedef ::TMatrixDSymEigen current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMatrixDSymEigen

//______________________________________________________________________________
void TDecompBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDecompBase.

   if (R__b.IsReading()) {
      TDecompBase::Class()->ReadBuffer(R__b, this);
   } else {
      TDecompBase::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDecompBase::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDecompBase.

      TClass *R__cl = ::TDecompBase::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTol", &fTol);
      R__insp.Inspect(R__cl, R__parent, "fDet1", &fDet1);
      R__insp.Inspect(R__cl, R__parent, "fDet2", &fDet2);
      R__insp.Inspect(R__cl, R__parent, "fCondition", &fCondition);
      R__insp.Inspect(R__cl, R__parent, "fRowLwb", &fRowLwb);
      R__insp.Inspect(R__cl, R__parent, "fColLwb", &fColLwb);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDecompBase_IsA(const void *obj) {
      return ((::TDecompBase*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TDecompBase(void *p) {
      delete ((::TDecompBase*)p);
   }
   static void deleteArray_TDecompBase(void *p) {
      delete [] ((::TDecompBase*)p);
   }
   static void destruct_TDecompBase(void *p) {
      typedef ::TDecompBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDecompBase

//______________________________________________________________________________
void TDecompBK::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDecompBK.

   if (R__b.IsReading()) {
      TDecompBK::Class()->ReadBuffer(R__b, this);
   } else {
      TDecompBK::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDecompBK::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDecompBK.

      TClass *R__cl = ::TDecompBK::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNIpiv", &fNIpiv);
      R__insp.Inspect(R__cl, R__parent, "*fIpiv", &fIpiv);
      R__insp.Inspect(R__cl, R__parent, "fU", &fU);
      fU.ShowMembers(R__insp, strcat(R__parent,"fU.")); R__parent[R__ncp] = 0;
      TDecompBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDecompBK_IsA(const void *obj) {
      return ((::TDecompBK*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDecompBK(void *p) {
      return  p ? new(p) ::TDecompBK : new ::TDecompBK;
   }
   static void *newArray_TDecompBK(Long_t size) {
      return new ::TDecompBK[size];
   }
   // Wrapper around operator delete
   static void delete_TDecompBK(void *p) {
      delete ((::TDecompBK*)p);
   }
   static void deleteArray_TDecompBK(void *p) {
      delete [] ((::TDecompBK*)p);
   }
   static void destruct_TDecompBK(void *p) {
      typedef ::TDecompBK current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDecompBK

//______________________________________________________________________________
void TDecompChol::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDecompChol.

   if (R__b.IsReading()) {
      TDecompChol::Class()->ReadBuffer(R__b, this);
   } else {
      TDecompChol::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDecompChol::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDecompChol.

      TClass *R__cl = ::TDecompChol::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fU", &fU);
      fU.ShowMembers(R__insp, strcat(R__parent,"fU.")); R__parent[R__ncp] = 0;
      TDecompBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDecompChol_IsA(const void *obj) {
      return ((::TDecompChol*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDecompChol(void *p) {
      return  p ? new(p) ::TDecompChol : new ::TDecompChol;
   }
   static void *newArray_TDecompChol(Long_t size) {
      return new ::TDecompChol[size];
   }
   // Wrapper around operator delete
   static void delete_TDecompChol(void *p) {
      delete ((::TDecompChol*)p);
   }
   static void deleteArray_TDecompChol(void *p) {
      delete [] ((::TDecompChol*)p);
   }
   static void destruct_TDecompChol(void *p) {
      typedef ::TDecompChol current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDecompChol

//______________________________________________________________________________
void TDecompLU::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDecompLU.

   if (R__b.IsReading()) {
      TDecompLU::Class()->ReadBuffer(R__b, this);
   } else {
      TDecompLU::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDecompLU::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDecompLU.

      TClass *R__cl = ::TDecompLU::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fImplicitPivot", &fImplicitPivot);
      R__insp.Inspect(R__cl, R__parent, "fNIndex", &fNIndex);
      R__insp.Inspect(R__cl, R__parent, "*fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__parent, "fSign", &fSign);
      R__insp.Inspect(R__cl, R__parent, "fLU", &fLU);
      fLU.ShowMembers(R__insp, strcat(R__parent,"fLU.")); R__parent[R__ncp] = 0;
      TDecompBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDecompLU_IsA(const void *obj) {
      return ((::TDecompLU*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDecompLU(void *p) {
      return  p ? new(p) ::TDecompLU : new ::TDecompLU;
   }
   static void *newArray_TDecompLU(Long_t size) {
      return new ::TDecompLU[size];
   }
   // Wrapper around operator delete
   static void delete_TDecompLU(void *p) {
      delete ((::TDecompLU*)p);
   }
   static void deleteArray_TDecompLU(void *p) {
      delete [] ((::TDecompLU*)p);
   }
   static void destruct_TDecompLU(void *p) {
      typedef ::TDecompLU current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDecompLU

//______________________________________________________________________________
void TDecompQRH::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDecompQRH.

   if (R__b.IsReading()) {
      TDecompQRH::Class()->ReadBuffer(R__b, this);
   } else {
      TDecompQRH::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDecompQRH::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDecompQRH.

      TClass *R__cl = ::TDecompQRH::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fQ", &fQ);
      fQ.ShowMembers(R__insp, strcat(R__parent,"fQ.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fR", &fR);
      fR.ShowMembers(R__insp, strcat(R__parent,"fR.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUp", &fUp);
      fUp.ShowMembers(R__insp, strcat(R__parent,"fUp.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fW", &fW);
      fW.ShowMembers(R__insp, strcat(R__parent,"fW.")); R__parent[R__ncp] = 0;
      TDecompBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDecompQRH_IsA(const void *obj) {
      return ((::TDecompQRH*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDecompQRH(void *p) {
      return  p ? new(p) ::TDecompQRH : new ::TDecompQRH;
   }
   static void *newArray_TDecompQRH(Long_t size) {
      return new ::TDecompQRH[size];
   }
   // Wrapper around operator delete
   static void delete_TDecompQRH(void *p) {
      delete ((::TDecompQRH*)p);
   }
   static void deleteArray_TDecompQRH(void *p) {
      delete [] ((::TDecompQRH*)p);
   }
   static void destruct_TDecompQRH(void *p) {
      typedef ::TDecompQRH current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDecompQRH

//______________________________________________________________________________
void TDecompSVD::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDecompSVD.

   if (R__b.IsReading()) {
      TDecompSVD::Class()->ReadBuffer(R__b, this);
   } else {
      TDecompSVD::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDecompSVD::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDecompSVD.

      TClass *R__cl = ::TDecompSVD::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fU", &fU);
      fU.ShowMembers(R__insp, strcat(R__parent,"fU.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fV", &fV);
      fV.ShowMembers(R__insp, strcat(R__parent,"fV.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSig", &fSig);
      fSig.ShowMembers(R__insp, strcat(R__parent,"fSig.")); R__parent[R__ncp] = 0;
      TDecompBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDecompSVD_IsA(const void *obj) {
      return ((::TDecompSVD*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDecompSVD(void *p) {
      return  p ? new(p) ::TDecompSVD : new ::TDecompSVD;
   }
   static void *newArray_TDecompSVD(Long_t size) {
      return new ::TDecompSVD[size];
   }
   // Wrapper around operator delete
   static void delete_TDecompSVD(void *p) {
      delete ((::TDecompSVD*)p);
   }
   static void deleteArray_TDecompSVD(void *p) {
      delete [] ((::TDecompSVD*)p);
   }
   static void destruct_TDecompSVD(void *p) {
      typedef ::TDecompSVD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDecompSVD

//______________________________________________________________________________
void TDecompSparse::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDecompSparse.

   if (R__b.IsReading()) {
      TDecompSparse::Class()->ReadBuffer(R__b, this);
   } else {
      TDecompSparse::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TDecompSparse::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TDecompSparse.

      TClass *R__cl = ::TDecompSparse::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fVerbose", &fVerbose);
      R__insp.Inspect(R__cl, R__parent, "fIcntl[31]", fIcntl);
      R__insp.Inspect(R__cl, R__parent, "fCntl[6]", fCntl);
      R__insp.Inspect(R__cl, R__parent, "fInfo[21]", fInfo);
      R__insp.Inspect(R__cl, R__parent, "fPrecision", &fPrecision);
      R__insp.Inspect(R__cl, R__parent, "fIkeep", &fIkeep);
      fIkeep.ShowMembers(R__insp, strcat(R__parent,"fIkeep.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIw", &fIw);
      fIw.ShowMembers(R__insp, strcat(R__parent,"fIw.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIw1", &fIw1);
      fIw1.ShowMembers(R__insp, strcat(R__parent,"fIw1.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIw2", &fIw2);
      fIw2.ShowMembers(R__insp, strcat(R__parent,"fIw2.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNsteps", &fNsteps);
      R__insp.Inspect(R__cl, R__parent, "fMaxfrt", &fMaxfrt);
      R__insp.Inspect(R__cl, R__parent, "fW", &fW);
      fW.ShowMembers(R__insp, strcat(R__parent,"fW.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fIPessimism", &fIPessimism);
      R__insp.Inspect(R__cl, R__parent, "fRPessimism", &fRPessimism);
      R__insp.Inspect(R__cl, R__parent, "fA", &fA);
      fA.ShowMembers(R__insp, strcat(R__parent,"fA.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNrows", &fNrows);
      R__insp.Inspect(R__cl, R__parent, "fNnonZeros", &fNnonZeros);
      R__insp.Inspect(R__cl, R__parent, "fFact", &fFact);
      fFact.ShowMembers(R__insp, strcat(R__parent,"fFact.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fRowFact", &fRowFact);
      fRowFact.ShowMembers(R__insp, strcat(R__parent,"fRowFact.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fColFact", &fColFact);
      fColFact.ShowMembers(R__insp, strcat(R__parent,"fColFact.")); R__parent[R__ncp] = 0;
      TDecompBase::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TDecompSparse_IsA(const void *obj) {
      return ((::TDecompSparse*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TDecompSparse(void *p) {
      return  p ? new(p) ::TDecompSparse : new ::TDecompSparse;
   }
   static void *newArray_TDecompSparse(Long_t size) {
      return new ::TDecompSparse[size];
   }
   // Wrapper around operator delete
   static void delete_TDecompSparse(void *p) {
      delete ((::TDecompSparse*)p);
   }
   static void deleteArray_TDecompSparse(void *p) {
      delete [] ((::TDecompSparse*)p);
   }
   static void destruct_TDecompSparse(void *p) {
      typedef ::TDecompSparse current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TDecompSparse

/********************************************************
* matrix/src/G__Matrix.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__Matrix();

extern "C" void G__set_cpp_environmentG__Matrix() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("matrix/inc/TDecompBK.h");
  G__add_compiledheader("matrix/inc/TMatrixDLazy.h");
  G__add_compiledheader("matrix/inc/TDecompBase.h");
  G__add_compiledheader("matrix/inc/TMatrixFBase.h");
  G__add_compiledheader("matrix/inc/TDecompSparse.h");
  G__add_compiledheader("matrix/inc/TMatrix.h");
  G__add_compiledheader("matrix/inc/TDecompQRH.h");
  G__add_compiledheader("matrix/inc/TMatrixDBase.h");
  G__add_compiledheader("matrix/inc/TVectorD.h");
  G__add_compiledheader("matrix/inc/TMatrixFUtils.h");
  G__add_compiledheader("matrix/inc/TDecompLU.h");
  G__add_compiledheader("matrix/inc/TMatrixDEigen.h");
  G__add_compiledheader("matrix/inc/TMatrixD.h");
  G__add_compiledheader("matrix/inc/TDecompChol.h");
  G__add_compiledheader("matrix/inc/TVector.h");
  G__add_compiledheader("matrix/inc/TMatrixFCramerInv.h");
  G__add_compiledheader("matrix/inc/TDecompSVD.h");
  G__add_compiledheader("matrix/inc/TMatrixDSparse.h");
  G__add_compiledheader("matrix/inc/TVectorF.h");
  G__add_compiledheader("matrix/inc/TMatrixDCramerInv.h");
  G__add_compiledheader("matrix/inc/TMatrixFSym.h");
  G__add_compiledheader("matrix/inc/TMatrixFSymCramerInv.h");
  G__add_compiledheader("matrix/inc/TMatrixF.h");
  G__add_compiledheader("matrix/inc/TMatrixDUtils.h");
  G__add_compiledheader("matrix/inc/TMatrixDSymEigen.h");
  G__add_compiledheader("matrix/inc/TMatrixDSymCramerInv.h");
  G__add_compiledheader("matrix/inc/TMatrixFLazy.h");
  G__add_compiledheader("matrix/inc/TMatrixDSym.h");
  G__cpp_reset_tagtableG__Matrix();
}
class G__matrixdIsrcdIG__MatrixdOcxx_tag {};

void* operator new(size_t size,G__matrixdIsrcdIG__MatrixdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__matrixdIsrcdIG__MatrixdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_matrixdIsrcdIG__MatrixdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__Matrix() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TMatrixFBase */
static int G__G__Matrix_160_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFBase*)(G__getstructoffset()))->GetRowLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFBase*)(G__getstructoffset()))->GetRowUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFBase*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFBase*)(G__getstructoffset()))->GetColLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFBase*)(G__getstructoffset()))->GetColUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFBase*)(G__getstructoffset()))->GetNcols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFBase*)(G__getstructoffset()))->GetNoElements());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixFBase*)(G__getstructoffset()))->GetTol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMatrixFBase*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((TMatrixFBase*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixFBase*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixFBase*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixFBase*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixFBase*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->SetRowIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->SetColIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->SetMatrixArray((const Float_t*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->SetMatrixArray((const Float_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((TMatrixFBase*)(G__getstructoffset()))->SetTol((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMatrixFBase*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMatrixFBase*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFBase*)(G__getstructoffset()))->Invalidate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFBase*)(G__getstructoffset()))->MakeValid();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixFBase*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixFBase*)(G__getstructoffset()))->IsOwner());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixFBase*)(G__getstructoffset()))->IsSymmetric());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      {
        const TMatrixFBase& obj=((const TMatrixFBase*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixFBase*)libp->para[4].ref,(Option_t*)G__int(libp->para[5]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 5:
      {
        const TMatrixFBase& obj=((const TMatrixFBase*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixFBase*)libp->para[4].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->SetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TMatrixFBase*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((const TMatrixFBase*)(G__getstructoffset()))->GetMatrix2Array((Float_t*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((const TMatrixFBase*)(G__getstructoffset()))->GetMatrix2Array((Float_t*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->InsertRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Float_t*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 3:
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->InsertRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Float_t*)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((const TMatrixFBase*)(G__getstructoffset()))->ExtractRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((const TMatrixFBase*)(G__getstructoffset()))->ExtractRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->Shift((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 2:
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 4:
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixFBase*)(G__getstructoffset()))->Determinant());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TMatrixFBase*)(G__getstructoffset()))->Determinant(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->Zero();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->Abs();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->Sqr();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->Sqrt();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->UnitMatrix();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->NormByDiag(*(TVectorF*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->NormByDiag(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixFBase*)(G__getstructoffset()))->RowNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixFBase*)(G__getstructoffset()))->ColNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixFBase*)(G__getstructoffset()))->E2Norm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixFBase*)(G__getstructoffset()))->NormInf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixFBase*)(G__getstructoffset()))->Norm1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFBase*)(G__getstructoffset()))->NonZeros());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixFBase*)(G__getstructoffset()))->Sum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixFBase*)(G__getstructoffset()))->Min());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixFBase*)(G__getstructoffset()))->Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMatrixFBase*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMatrixFBase*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TMatrixFBase*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TMatrixFBase*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixFBase*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixFBase*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixFBase*)(G__getstructoffset()))->operator==((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixFBase*)(G__getstructoffset()))->operator!=((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixFBase*)(G__getstructoffset()))->operator<((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixFBase*)(G__getstructoffset()))->operator<=((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixFBase*)(G__getstructoffset()))->operator>((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixFBase*)(G__getstructoffset()))->operator>=((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->Apply(*(TElementActionF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->Apply(*(TElementPosActionF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFBase*)(G__getstructoffset()))->Randomize((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFBase::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFBase*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFBase*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFBase*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFBase*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_160_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFBase G__TTMatrixFBase;
static int G__G__Matrix_160_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFBase *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixFBase *)((G__getstructoffset())+sizeof(TMatrixFBase)*i);
   else  delete (TMatrixFBase *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Matrix_160_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFBase *dest = (TMatrixFBase*)(G__getstructoffset());
   *dest = (*(TMatrixFBase*)libp->para[0].ref);
   const TMatrixFBase& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDBase */
static int G__G__Matrix_161_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDBase*)(G__getstructoffset()))->GetRowLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDBase*)(G__getstructoffset()))->GetRowUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDBase*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDBase*)(G__getstructoffset()))->GetColLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDBase*)(G__getstructoffset()))->GetColUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDBase*)(G__getstructoffset()))->GetNcols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDBase*)(G__getstructoffset()))->GetNoElements());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDBase*)(G__getstructoffset()))->GetTol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDBase*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TMatrixDBase*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixDBase*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixDBase*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixDBase*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixDBase*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->SetRowIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->SetColIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->SetMatrixArray((const Double_t*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->SetMatrixArray((const Double_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TMatrixDBase*)(G__getstructoffset()))->SetTol((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMatrixDBase*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMatrixDBase*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDBase*)(G__getstructoffset()))->Invalidate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDBase*)(G__getstructoffset()))->MakeValid();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixDBase*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixDBase*)(G__getstructoffset()))->IsOwner());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixDBase*)(G__getstructoffset()))->IsSymmetric());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      {
        const TMatrixDBase& obj=((const TMatrixDBase*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixDBase*)libp->para[4].ref,(Option_t*)G__int(libp->para[5]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 5:
      {
        const TMatrixDBase& obj=((const TMatrixDBase*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixDBase*)libp->para[4].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->SetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TMatrixDBase*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((const TMatrixDBase*)(G__getstructoffset()))->GetMatrix2Array((Double_t*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((const TMatrixDBase*)(G__getstructoffset()))->GetMatrix2Array((Double_t*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->InsertRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Double_t*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 3:
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->InsertRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Double_t*)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((const TMatrixDBase*)(G__getstructoffset()))->ExtractRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((const TMatrixDBase*)(G__getstructoffset()))->ExtractRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->Shift((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 2:
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 4:
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDBase*)(G__getstructoffset()))->Determinant());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TMatrixDBase*)(G__getstructoffset()))->Determinant(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->Zero();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->Abs();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->Sqr();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->Sqrt();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->UnitMatrix();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->NormByDiag(*(TVectorD*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->NormByDiag(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDBase*)(G__getstructoffset()))->RowNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDBase*)(G__getstructoffset()))->ColNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDBase*)(G__getstructoffset()))->E2Norm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDBase*)(G__getstructoffset()))->NormInf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDBase*)(G__getstructoffset()))->Norm1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDBase*)(G__getstructoffset()))->NonZeros());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDBase*)(G__getstructoffset()))->Sum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDBase*)(G__getstructoffset()))->Min());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDBase*)(G__getstructoffset()))->Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMatrixDBase*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMatrixDBase*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TMatrixDBase*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TMatrixDBase*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDBase*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDBase*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixDBase*)(G__getstructoffset()))->operator==((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixDBase*)(G__getstructoffset()))->operator!=((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixDBase*)(G__getstructoffset()))->operator<((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixDBase*)(G__getstructoffset()))->operator<=((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixDBase*)(G__getstructoffset()))->operator>((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixDBase*)(G__getstructoffset()))->operator>=((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->Apply(*(TElementActionD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->Apply(*(TElementPosActionD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDBase*)(G__getstructoffset()))->Randomize((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDBase::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDBase*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDBase*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDBase*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDBase*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_161_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDBase G__TTMatrixDBase;
static int G__G__Matrix_161_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDBase *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixDBase *)((G__getstructoffset())+sizeof(TMatrixDBase)*i);
   else  delete (TMatrixDBase *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Matrix_161_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDBase *dest = (TMatrixDBase*)(G__getstructoffset());
   *dest = (*(TMatrixDBase*)libp->para[0].ref);
   const TMatrixDBase& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVectorF */
static int G__G__Matrix_162_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorF *p=NULL;
   if(G__getaryconstruct()) p=new TVectorF[G__getaryconstruct()];
   else                    p=new TVectorF;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorF *p=NULL;
      p = new TVectorF((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorF *p=NULL;
      p = new TVectorF((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorF *p=NULL;
      p = new TVectorF((Int_t)G__int(libp->para[0]),(const Float_t*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorF *p=NULL;
      p = new TVectorF(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Float_t*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorF *p=NULL;
      p = new TVectorF(*(TVectorF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorF *p=NULL;
      p = new TVectorF(*(TVectorD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorF *p=NULL;
      p = new TVectorF(*(TMatrixFRow_const*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorF *p=NULL;
      p = new TVectorF(*(TMatrixFColumn_const*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorF *p=NULL;
      p = new TVectorF(*(TMatrixFDiag_const*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVectorF*)(G__getstructoffset()))->GetLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVectorF*)(G__getstructoffset()))->GetUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVectorF*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVectorF*)(G__getstructoffset()))->GetNoElements());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((TVectorF*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TVectorF*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->Invalidate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->MakeValid();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorF*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorF*)(G__getstructoffset()))->IsOwner());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->SetElements((const Float_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->Shift((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->ResizeTo(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->Use(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      {
        const TVectorF& obj=((const TVectorF*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TVectorF*)libp->para[2].ref,(Option_t*)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 3:
      {
        const TVectorF& obj=((const TVectorF*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TVectorF*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
const         TVectorF *pobj,xobj=((const TVectorF*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
        pobj=new TVectorF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
const         TVectorF *pobj,xobj=((const TVectorF*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
        pobj=new TVectorF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->SetSub((Int_t)G__int(libp->para[0]),*(TVectorF*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->Zero();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->Abs();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->Sqr();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->Sqrt();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->Invert();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->SelectNonZeros(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TVectorF*)(G__getstructoffset()))->Norm1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TVectorF*)(G__getstructoffset()))->Norm2Sqr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TVectorF*)(G__getstructoffset()))->NormInf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVectorF*)(G__getstructoffset()))->NonZeros());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TVectorF*)(G__getstructoffset()))->Sum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TVectorF*)(G__getstructoffset()))->Min());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TVectorF*)(G__getstructoffset()))->Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TVectorF*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TVectorF*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TVectorF*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TVectorF*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator=(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator=(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator=(*(TMatrixFRow_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator=(*(TMatrixFColumn_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator=(*(TMatrixFDiag_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator+=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator-=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator*=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator+=(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator-=(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator*=(*(TMatrixF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->operator*=(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorF*)(G__getstructoffset()))->operator==((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorF*)(G__getstructoffset()))->operator!=((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorF*)(G__getstructoffset()))->operator<((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorF*)(G__getstructoffset()))->operator<=((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorF*)(G__getstructoffset()))->operator>((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorF*)(G__getstructoffset()))->operator>=((Float_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TVectorF*)(G__getstructoffset()))->MatchesNonZeroPattern(*(TVectorF*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TVectorF*)(G__getstructoffset()))->SomePositive(*(TVectorF*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->AddSomeConstant((Float_t)G__double(libp->para[0]),*(TVectorF*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->Randomize((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->Apply(*(TElementActionF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=((TVectorF*)(G__getstructoffset()))->Apply(*(TElementPosActionF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TVectorF*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TVectorF*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVectorF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVectorF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TVectorF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TVectorF::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVectorF*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorF*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVectorF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVectorF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVectorF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_162_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVectorF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVectorF G__TTVectorF;
static int G__G__Matrix_162_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TVectorF *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TVectorF *)((G__getstructoffset())+sizeof(TVectorF)*i);
   else  delete (TVectorF *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVectorD */
static int G__G__Matrix_163_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorD *p=NULL;
   if(G__getaryconstruct()) p=new TVectorD[G__getaryconstruct()];
   else                    p=new TVectorD;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorD *p=NULL;
      p = new TVectorD((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorD *p=NULL;
      p = new TVectorD((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorD *p=NULL;
      p = new TVectorD((Int_t)G__int(libp->para[0]),(const Double_t*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorD *p=NULL;
      p = new TVectorD(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Double_t*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorD *p=NULL;
      p = new TVectorD(*(TVectorD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorD *p=NULL;
      p = new TVectorD(*(TVectorF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorD *p=NULL;
      p = new TVectorD(*(TMatrixDRow_const*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorD *p=NULL;
      p = new TVectorD(*(TMatrixDColumn_const*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVectorD *p=NULL;
      p = new TVectorD(*(TMatrixDDiag_const*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVectorD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVectorD*)(G__getstructoffset()))->GetLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVectorD*)(G__getstructoffset()))->GetUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVectorD*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVectorD*)(G__getstructoffset()))->GetNoElements());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TVectorD*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TVectorD*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->Invalidate();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->MakeValid();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorD*)(G__getstructoffset()))->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorD*)(G__getstructoffset()))->IsOwner());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->SetElements((const Double_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->Shift((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->ResizeTo(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->Use(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      {
        const TVectorD& obj=((const TVectorD*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TVectorD*)libp->para[2].ref,(Option_t*)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 3:
      {
        const TVectorD& obj=((const TVectorD*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TVectorD*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
const         TVectorD *pobj,xobj=((const TVectorD*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
const         TVectorD *pobj,xobj=((const TVectorD*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->SetSub((Int_t)G__int(libp->para[0]),*(TVectorD*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->Zero();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->Abs();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->Sqr();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->Sqrt();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->Invert();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->SelectNonZeros(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TVectorD*)(G__getstructoffset()))->Norm1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TVectorD*)(G__getstructoffset()))->Norm2Sqr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TVectorD*)(G__getstructoffset()))->NormInf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TVectorD*)(G__getstructoffset()))->NonZeros());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TVectorD*)(G__getstructoffset()))->Sum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TVectorD*)(G__getstructoffset()))->Min());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TVectorD*)(G__getstructoffset()))->Max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TVectorD*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TVectorD*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TVectorD*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TVectorD*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator=(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator=(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator=(*(TMatrixDRow_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator=(*(TMatrixDColumn_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator=(*(TMatrixDDiag_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator=(*(TMatrixDSparseRow_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator=(*(TMatrixDSparseDiag_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator+=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator-=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator*=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator+=(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator-=(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator*=(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator*=(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->operator*=(*(TMatrixDSparse*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorD*)(G__getstructoffset()))->operator==((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorD*)(G__getstructoffset()))->operator!=((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorD*)(G__getstructoffset()))->operator<((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorD*)(G__getstructoffset()))->operator<=((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorD*)(G__getstructoffset()))->operator>((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TVectorD*)(G__getstructoffset()))->operator>=((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TVectorD*)(G__getstructoffset()))->MatchesNonZeroPattern(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TVectorD*)(G__getstructoffset()))->SomePositive(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->AddSomeConstant((Double_t)G__double(libp->para[0]),*(TVectorD*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->Randomize((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->Apply(*(TElementActionD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TVectorD*)(G__getstructoffset()))->Apply(*(TElementPosActionD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TVectorD*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TVectorD*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVectorD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVectorD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TVectorD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TVectorD::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVectorD*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVectorD*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVectorD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVectorD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVectorD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_163_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVectorD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVectorD G__TTVectorD;
static int G__G__Matrix_163_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TVectorD *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TVectorD *)((G__getstructoffset())+sizeof(TVectorD)*i);
   else  delete (TVectorD *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixD */
static int G__G__Matrix_171_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixD[G__getaryconstruct()];
   else                    p=new TMatrixD;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TMatrixD(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Double_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      p = new TMatrixD(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Double_t*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TMatrixD(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const Double_t*)G__int(libp->para[4]),(Option_t*)G__int(libp->para[5]));
      break;
   case 5:
      p = new TMatrixD(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const Double_t*)G__int(libp->para[4]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD(*(TMatrixD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD(*(TMatrixF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD(*(TMatrixDSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD(*(TMatrixDSparse*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD((TMatrixDBase::EMatrixCreatorsOp1)G__int(libp->para[0]),*(TMatrixD*)libp->para[1].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD(
*(TMatrixD*)libp->para[0].ref,(TMatrixDBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixD*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD(
*(TMatrixD*)libp->para[0].ref,(TMatrixDBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixDSym*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD(
*(TMatrixDSym*)libp->para[0].ref,(TMatrixDBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixD*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD(
*(TMatrixDSym*)libp->para[0].ref,(TMatrixDBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixDSym*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixD *p=NULL;
      p = new TMatrixD(*(TMatrixDLazy*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixD*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TMatrixD*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixD*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixD*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixD*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixD*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixD*)(G__getstructoffset()))->SetRowIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixD*)(G__getstructoffset()))->SetColIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMatrixD*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMatrixD*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Double_t*)G__int(libp->para[4]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->Use(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      {
        const TMatrixDBase& obj=((const TMatrixD*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixDBase*)libp->para[4].ref,(Option_t*)G__int(libp->para[5]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 5:
      {
        const TMatrixDBase& obj=((const TMatrixD*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixDBase*)libp->para[4].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
const         TMatrixD *pobj,xobj=((const TMatrixD*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]));
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
const         TMatrixD *pobj,xobj=((const TMatrixD*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixD*)(G__getstructoffset()))->SetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TMatrixDBase*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        const TMatrixDBase& obj=((TMatrixD*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 2:
      {
        const TMatrixDBase& obj=((TMatrixD*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
        const TMatrixDBase& obj=((TMatrixD*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 4:
      {
        const TMatrixDBase& obj=((TMatrixD*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixD*)(G__getstructoffset()))->ResizeTo(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixD*)(G__getstructoffset()))->Determinant());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TMatrixD*)(G__getstructoffset()))->Determinant(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->Invert((Double_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 0:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->Invert();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->InvertFast((Double_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 0:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->InvertFast();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->Transpose(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->T();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->Rank1Update(*(TVectorD*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->Rank1Update(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->Rank1Update(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref
,(Double_t)G__double(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 2:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->Rank1Update(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->NormByColumn(*(TVectorD*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->NormByColumn(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->NormByRow(*(TVectorD*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->NormByRow(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixD*)(G__getstructoffset()))->Mult(*(TMatrixD*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixD*)(G__getstructoffset()))->Mult(*(TMatrixD*)libp->para[0].ref,*(TMatrixDSym*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixD*)(G__getstructoffset()))->Mult(*(TMatrixDSym*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixD*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixD*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TMatrixDRow_const *pobj,xobj=((const TMatrixD*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
        pobj=new TMatrixDRow_const(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDRow *pobj,xobj=((TMatrixD*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
        pobj=new TMatrixDRow(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator=(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator=(*(TMatrixF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator=(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator=(*(TMatrixDSparse*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator=(*(TMatrixDLazy*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator-=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator+=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator*=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator+=(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator+=(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator-=(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator-=(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator*=(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator*=(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator*=(*(TMatrixDDiag_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator/=(*(TMatrixDDiag_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator*=(*(TMatrixDRow_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator/=(*(TMatrixDRow_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator*=(*(TMatrixDColumn_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TMatrixD*)(G__getstructoffset()))->operator/=(*(TMatrixDColumn_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TMatrixD *pobj,xobj=((const TMatrixD*)(G__getstructoffset()))->EigenVectors(*(TVectorD*)libp->para[0].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixD::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixD*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixD*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixD*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixD*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_171_0_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixD G__TTMatrixD;
static int G__G__Matrix_171_1_10(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixD *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixD *)((G__getstructoffset())+sizeof(TMatrixD)*i);
   else  delete (TMatrixD *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDSym */
static int G__G__Matrix_172_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSym *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDSym[G__getaryconstruct()];
   else                    p=new TMatrixDSym;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSym *p=NULL;
      p = new TMatrixDSym((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSym *p=NULL;
      p = new TMatrixDSym((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSym *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TMatrixDSym(
(Int_t)G__int(libp->para[0]),(const Double_t*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TMatrixDSym((Int_t)G__int(libp->para[0]),(const Double_t*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSym *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TMatrixDSym(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Double_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      p = new TMatrixDSym(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Double_t*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSym *p=NULL;
      p = new TMatrixDSym(*(TMatrixDSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSym *p=NULL;
      p = new TMatrixDSym(*(TMatrixFSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSym *p=NULL;
      p = new TMatrixDSym((TMatrixDBase::EMatrixCreatorsOp1)G__int(libp->para[0]),*(TMatrixDSym*)libp->para[1].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSym *p=NULL;
      p = new TMatrixDSym((TMatrixDBase::EMatrixCreatorsOp1)G__int(libp->para[0]),*(TMatrixD*)libp->para[1].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSym *p=NULL;
      p = new TMatrixDSym(
*(TMatrixDSym*)libp->para[0].ref,(TMatrixDBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixDSym*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSym *p=NULL;
      p = new TMatrixDSym(*(TMatrixDSymLazy*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDSym*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TMatrixDSym*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixDSym*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixDSym*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixDSym*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixDSym*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->SetRowIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->SetColIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMatrixDSym*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMatrixDSym*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixDSym*)(G__getstructoffset()))->IsSymmetric());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->Use(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      {
        const TMatrixDSym& obj=((const TMatrixDSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TMatrixDSym*)libp->para[2].ref,(Option_t*)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 3:
      {
        const TMatrixDSym& obj=((const TMatrixDSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TMatrixDSym*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      {
        const TMatrixDBase& obj=((const TMatrixDSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixDBase*)libp->para[4].ref,(Option_t*)G__int(libp->para[5]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 5:
      {
        const TMatrixDBase& obj=((const TMatrixDSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixDBase*)libp->para[4].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
const         TMatrixDSym *pobj,xobj=((const TMatrixDSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]));
        pobj=new TMatrixDSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
const         TMatrixDSym *pobj,xobj=((const TMatrixDSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
        pobj=new TMatrixDSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->SetSub((Int_t)G__int(libp->para[0]),*(TMatrixDBase*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->SetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TMatrixDBase*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->SetMatrixArray((const Double_t*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->SetMatrixArray((const Double_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->Shift((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 2:
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 4:
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->ResizeTo(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSym*)(G__getstructoffset()))->Determinant());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TMatrixDSym*)(G__getstructoffset()))->Determinant(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->Invert((Double_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 0:
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->Invert();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->InvertFast((Double_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 0:
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->InvertFast();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->Transpose(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->T();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->Rank1Update(*(TVectorD*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->Rank1Update(*(TVectorD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->Similarity(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->Similarity(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->SimilarityT(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSym*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDSym*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TMatrixDRow_const *pobj,xobj=((const TMatrixDSym*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
        pobj=new TMatrixDRow_const(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDRow *pobj,xobj=((TMatrixDSym*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
        pobj=new TMatrixDRow(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->operator=(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->operator=(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->operator=(*(TMatrixDSymLazy*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->operator=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->operator-=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->operator+=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->operator*=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->operator+=(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->operator-=(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->Apply(*(TElementActionD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->Apply(*(TElementPosActionD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSym*)(G__getstructoffset()))->Randomize((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=((TMatrixDSym*)(G__getstructoffset()))->RandomizePD((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TMatrixD *pobj,xobj=((const TMatrixDSym*)(G__getstructoffset()))->EigenVectors(*(TVectorD*)libp->para[0].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDSym::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSym::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDSym::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDSym::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSym*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSym*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSym*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSym*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSym::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSym::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSym::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_172_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSym::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDSym G__TTMatrixDSym;
static int G__G__Matrix_172_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDSym *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixDSym *)((G__getstructoffset())+sizeof(TMatrixDSym)*i);
   else  delete (TMatrixDSym *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDSparse */
static int G__G__Matrix_173_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparse *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDSparse[G__getaryconstruct()];
   else                    p=new TMatrixDSparse;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparse *p=NULL;
      p = new TMatrixDSparse((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparse *p=NULL;
      p = new TMatrixDSparse(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparse *p=NULL;
      p = new TMatrixDSparse(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t*)G__int(libp->para[5])
,(Int_t*)G__int(libp->para[6]),(Double_t*)G__int(libp->para[7]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparse *p=NULL;
      p = new TMatrixDSparse(*(TMatrixDSparse*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparse *p=NULL;
      p = new TMatrixDSparse(*(TMatrixD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparse *p=NULL;
      p = new TMatrixDSparse((TMatrixDBase::EMatrixCreatorsOp1)G__int(libp->para[0]),*(TMatrixDSparse*)libp->para[1].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparse *p=NULL;
      p = new TMatrixDSparse(
*(TMatrixDSparse*)libp->para[0].ref,(TMatrixDBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixDSparse*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDSparse*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TMatrixDSparse*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixDSparse*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixDSparse*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixDSparse*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixDSparse*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->SetRowIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->SetColIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((const TMatrixDSparse*)(G__getstructoffset()))->GetMatrix2Array((Double_t*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((const TMatrixDSparse*)(G__getstructoffset()))->GetMatrix2Array((Double_t*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->SetMatrixArray((const Double_t*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->SetMatrixArray((const Double_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->SetMatrixArray((Int_t)G__int(libp->para[0]),(Int_t*)G__int(libp->para[1])
,(Int_t*)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->SetSparseIndex((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->SetSparseIndex(*(TMatrixDBase*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->SetSparseIndexAB(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->InsertRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Double_t*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 3:
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->InsertRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Double_t*)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((const TMatrixDSparse*)(G__getstructoffset()))->ExtractRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((const TMatrixDSparse*)(G__getstructoffset()))->ExtractRow((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 2:
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 4:
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->ResizeTo(*(TMatrixDSparse*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMatrixDSparse*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMatrixDSparse*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->Use(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Int_t*)G__int(libp->para[5])
,(Int_t*)G__int(libp->para[6]),(Double_t*)G__int(libp->para[7]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t*)G__int(libp->para[3])
,(Int_t*)G__int(libp->para[4]),(Double_t*)G__int(libp->para[5]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->Use(*(TMatrixDSparse*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      {
        const TMatrixDBase& obj=((const TMatrixDSparse*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixDBase*)libp->para[4].ref,(Option_t*)G__int(libp->para[5]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 5:
      {
        const TMatrixDBase& obj=((const TMatrixDSparse*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixDBase*)libp->para[4].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
const         TMatrixDSparse *pobj,xobj=((const TMatrixDSparse*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]));
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
const         TMatrixDSparse *pobj,xobj=((const TMatrixDSparse*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->SetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TMatrixDBase*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixDSparse*)(G__getstructoffset()))->IsSymmetric());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->Transpose(*(TMatrixDSparse*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->T();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparse*)(G__getstructoffset()))->Mult(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->Zero();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->UnitMatrix();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSparse*)(G__getstructoffset()))->RowNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSparse*)(G__getstructoffset()))->ColNorm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDSparse*)(G__getstructoffset()))->NonZeros());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->NormByDiag(*(TVectorD*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSparse*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TMatrixDSparseRow_const *pobj,xobj=((const TMatrixDSparse*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
        pobj=new TMatrixDSparseRow_const(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparseRow *pobj,xobj=((TMatrixDSparse*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
        pobj=new TMatrixDSparseRow(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator=(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator=(*(TMatrixDSparse*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator-=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator+=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator*=((Double_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator+=(*(TMatrixDSparse*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator+=(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator-=(*(TMatrixDSparse*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator-=(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator*=(*(TMatrixDSparse*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->operator*=(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDBase& obj=((TMatrixDSparse*)(G__getstructoffset()))->Randomize((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=((TMatrixDSparse*)(G__getstructoffset()))->RandomizePD((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDSparse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDSparse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDSparse::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSparse*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparse*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparse*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparse*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSparse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_173_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSparse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDSparse G__TTMatrixDSparse;
static int G__G__Matrix_173_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDSparse *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixDSparse *)((G__getstructoffset())+sizeof(TMatrixDSparse)*i);
   else  delete (TMatrixDSparse *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDRow_const */
static int G__G__Matrix_174_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDRow_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDRow_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDRow_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDRow_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDRow_const(*(TMatrixD*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDRow_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDRow_const(*(TMatrixDSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDRow_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDRow_const*)(G__getstructoffset()))->GetRowIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDRow_const*)(G__getstructoffset()))->GetInc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDRow_const*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDRow_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDRow_const*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDRow_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDRow_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDRow_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDRow_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDRow_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDRow_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDRow_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDRow_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_174_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDRow_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_174_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixDRow_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixDRow_const(*(TMatrixDRow_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDRow_const G__TTMatrixDRow_const;
static int G__G__Matrix_174_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDRow_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDRow_const *)((G__getstructoffset())+sizeof(TMatrixDRow_const)*i))->~G__TTMatrixDRow_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDRow_const *)(G__getstructoffset()))->~G__TTMatrixDRow_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDRow */
static int G__G__Matrix_175_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDRow *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDRow[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDRow;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDRow *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDRow(*(TMatrixD*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDRow *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDRow(*(TMatrixDSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDRow *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDRow(*(TMatrixDRow*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDRow*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDRow*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDRow*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDRow*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDRow*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow*)(G__getstructoffset()))->operator=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow*)(G__getstructoffset()))->operator+=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow*)(G__getstructoffset()))->operator*=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow*)(G__getstructoffset()))->operator=(*(TMatrixDRow_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow*)(G__getstructoffset()))->operator=(*(TMatrixDRow*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow*)(G__getstructoffset()))->operator=(*(TVectorD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow*)(G__getstructoffset()))->operator+=(*(TMatrixDRow_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow*)(G__getstructoffset()))->operator*=(*(TMatrixDRow_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDRow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDRow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDRow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDRow::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDRow*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDRow*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDRow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDRow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDRow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_175_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDRow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDRow G__TTMatrixDRow;
static int G__G__Matrix_175_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDRow *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDRow *)((G__getstructoffset())+sizeof(TMatrixDRow)*i))->~G__TTMatrixDRow();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDRow *)(G__getstructoffset()))->~G__TTMatrixDRow();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDColumn_const */
static int G__G__Matrix_176_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDColumn_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDColumn_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDColumn_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDColumn_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDColumn_const(*(TMatrixD*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDColumn_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDColumn_const(*(TMatrixDSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDColumn_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDColumn_const*)(G__getstructoffset()))->GetColIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDColumn_const*)(G__getstructoffset()))->GetInc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDColumn_const*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDColumn_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDColumn_const*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDColumn_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDColumn_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDColumn_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDColumn_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDColumn_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDColumn_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDColumn_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDColumn_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_176_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDColumn_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_176_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixDColumn_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixDColumn_const(*(TMatrixDColumn_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDColumn_const G__TTMatrixDColumn_const;
static int G__G__Matrix_176_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDColumn_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDColumn_const *)((G__getstructoffset())+sizeof(TMatrixDColumn_const)*i))->~G__TTMatrixDColumn_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDColumn_const *)(G__getstructoffset()))->~G__TTMatrixDColumn_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDColumn */
static int G__G__Matrix_177_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDColumn *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDColumn[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDColumn;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDColumn *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDColumn(*(TMatrixD*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDColumn *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDColumn(*(TMatrixDSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDColumn *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDColumn(*(TMatrixDColumn*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDColumn*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDColumn*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDColumn*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDColumn*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDColumn*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn*)(G__getstructoffset()))->operator=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn*)(G__getstructoffset()))->operator+=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn*)(G__getstructoffset()))->operator*=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn*)(G__getstructoffset()))->operator=(*(TMatrixDColumn_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn*)(G__getstructoffset()))->operator=(*(TMatrixDColumn*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn*)(G__getstructoffset()))->operator=(*(TVectorD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn*)(G__getstructoffset()))->operator+=(*(TMatrixDColumn_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn*)(G__getstructoffset()))->operator*=(*(TMatrixDColumn_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDColumn::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDColumn::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDColumn::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDColumn::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDColumn*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDColumn*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDColumn::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDColumn::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDColumn::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_177_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDColumn::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDColumn G__TTMatrixDColumn;
static int G__G__Matrix_177_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDColumn *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDColumn *)((G__getstructoffset())+sizeof(TMatrixDColumn)*i))->~G__TTMatrixDColumn();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDColumn *)(G__getstructoffset()))->~G__TTMatrixDColumn();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDDiag_const */
static int G__G__Matrix_178_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDDiag_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDDiag_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDDiag_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDDiag_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDDiag_const(*(TMatrixD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDDiag_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDDiag_const(*(TMatrixDSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDDiag_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDDiag_const*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDDiag_const*)(G__getstructoffset()))->GetInc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDDiag_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDDiag_const*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDDiag_const*)(G__getstructoffset()))->GetNdiags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDDiag_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDDiag_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDDiag_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDDiag_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDDiag_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDDiag_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDDiag_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDDiag_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_178_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDDiag_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_178_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixDDiag_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixDDiag_const(*(TMatrixDDiag_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDDiag_const G__TTMatrixDDiag_const;
static int G__G__Matrix_178_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDDiag_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDDiag_const *)((G__getstructoffset())+sizeof(TMatrixDDiag_const)*i))->~G__TTMatrixDDiag_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDDiag_const *)(G__getstructoffset()))->~G__TTMatrixDDiag_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDDiag */
static int G__G__Matrix_179_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDDiag *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDDiag[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDDiag;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDDiag *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDDiag(*(TMatrixD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDDiag *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDDiag(*(TMatrixDSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDDiag *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDDiag(*(TMatrixDDiag*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDDiag*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDDiag*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDDiag*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDDiag*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDDiag*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag*)(G__getstructoffset()))->operator=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag*)(G__getstructoffset()))->operator+=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag*)(G__getstructoffset()))->operator*=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag*)(G__getstructoffset()))->operator=(*(TMatrixDDiag_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag*)(G__getstructoffset()))->operator=(*(TMatrixDDiag*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag*)(G__getstructoffset()))->operator=(*(TVectorD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag*)(G__getstructoffset()))->operator+=(*(TMatrixDDiag_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag*)(G__getstructoffset()))->operator*=(*(TMatrixDDiag_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDDiag::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDDiag::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDDiag::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDDiag::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDDiag*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDDiag*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDDiag::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDDiag::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDDiag::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_179_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDDiag::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDDiag G__TTMatrixDDiag;
static int G__G__Matrix_179_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDDiag *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDDiag *)((G__getstructoffset())+sizeof(TMatrixDDiag)*i))->~G__TTMatrixDDiag();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDDiag *)(G__getstructoffset()))->~G__TTMatrixDDiag();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDFlat_const */
static int G__G__Matrix_180_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDFlat_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDFlat_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDFlat_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDFlat_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDFlat_const(*(TMatrixD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDFlat_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDFlat_const(*(TMatrixDSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDFlat_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDFlat_const*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDFlat_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDFlat_const*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDFlat_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDFlat_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDFlat_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDFlat_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDFlat_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDFlat_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDFlat_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDFlat_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_180_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDFlat_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_180_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixDFlat_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixDFlat_const(*(TMatrixDFlat_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDFlat_const G__TTMatrixDFlat_const;
static int G__G__Matrix_180_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDFlat_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDFlat_const *)((G__getstructoffset())+sizeof(TMatrixDFlat_const)*i))->~G__TTMatrixDFlat_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDFlat_const *)(G__getstructoffset()))->~G__TTMatrixDFlat_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDFlat */
static int G__G__Matrix_181_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDFlat *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDFlat[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDFlat;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDFlat *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDFlat(*(TMatrixD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDFlat *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDFlat(*(TMatrixDSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDFlat *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDFlat(*(TMatrixDFlat*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDFlat*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDFlat*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDFlat*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDFlat*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDFlat*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat*)(G__getstructoffset()))->operator=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat*)(G__getstructoffset()))->operator+=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat*)(G__getstructoffset()))->operator*=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat*)(G__getstructoffset()))->operator=(*(TMatrixDFlat_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat*)(G__getstructoffset()))->operator=(*(TMatrixDFlat*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat*)(G__getstructoffset()))->operator=(*(TVectorD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat*)(G__getstructoffset()))->operator+=(*(TMatrixDFlat_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat*)(G__getstructoffset()))->operator*=(*(TMatrixDFlat_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDFlat::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDFlat::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDFlat::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDFlat::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDFlat*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDFlat*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDFlat::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDFlat::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDFlat::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_181_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDFlat::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDFlat G__TTMatrixDFlat;
static int G__G__Matrix_181_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDFlat *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDFlat *)((G__getstructoffset())+sizeof(TMatrixDFlat)*i))->~G__TTMatrixDFlat();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDFlat *)(G__getstructoffset()))->~G__TTMatrixDFlat();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDSub_const */
static int G__G__Matrix_182_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSub_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDSub_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSub_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSub_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSub_const(
*(TMatrixD*)libp->para[0].ref,(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSub_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSub_const(
*(TMatrixDSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSub_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDSub_const*)(G__getstructoffset()))->GetRowOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDSub_const*)(G__getstructoffset()))->GetColOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDSub_const*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDSub_const*)(G__getstructoffset()))->GetNcols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((const TMatrixDSub_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDSub_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSub_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDSub_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDSub_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSub_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSub_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSub_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSub_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_182_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSub_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_182_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixDSub_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixDSub_const(*(TMatrixDSub_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDSub_const G__TTMatrixDSub_const;
static int G__G__Matrix_182_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDSub_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDSub_const *)((G__getstructoffset())+sizeof(TMatrixDSub_const)*i))->~G__TTMatrixDSub_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDSub_const *)(G__getstructoffset()))->~G__TTMatrixDSub_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDSub */
static int G__G__Matrix_184_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSub *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDSub[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSub;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSub *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSub(
*(TMatrixD*)libp->para[0].ref,(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSub *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSub(
*(TMatrixDSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSub *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSub(*(TMatrixDSub*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDSub*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->Rank1Update(*(TVectorD*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->Rank1Update(*(TVectorD*)libp->para[0].ref);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->operator=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->operator+=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->operator*=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->operator=(*(TMatrixDSub_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->operator=(*(TMatrixDSub*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->operator=(*(TMatrixDBase*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->operator+=(*(TMatrixDSub_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->operator*=(*(TMatrixDSub_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->operator+=(*(TMatrixDBase*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->operator*=(*(TMatrixD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->operator*=(*(TMatrixDSym*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDSub::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSub::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDSub::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDSub::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSub*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSub*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSub::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSub::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSub::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_184_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSub::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDSub G__TTMatrixDSub;
static int G__G__Matrix_184_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDSub *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDSub *)((G__getstructoffset())+sizeof(TMatrixDSub)*i))->~G__TTMatrixDSub();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDSub *)(G__getstructoffset()))->~G__TTMatrixDSub();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDSparseRow_const */
static int G__G__Matrix_185_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparseRow_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDSparseRow_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSparseRow_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparseRow_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSparseRow_const(*(TMatrixDSparse*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSparseRow_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDSparseRow_const*)(G__getstructoffset()))->GetDataPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixDSparseRow_const*)(G__getstructoffset()))->GetColPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDSparseRow_const*)(G__getstructoffset()))->GetRowIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDSparseRow_const*)(G__getstructoffset()))->GetNindex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSparseRow_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSparseRow_const*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDSparseRow_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseRow_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDSparseRow_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDSparseRow_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSparseRow_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseRow_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSparseRow_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseRow_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_185_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSparseRow_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_185_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixDSparseRow_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixDSparseRow_const(*(TMatrixDSparseRow_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDSparseRow_const G__TTMatrixDSparseRow_const;
static int G__G__Matrix_185_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDSparseRow_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDSparseRow_const *)((G__getstructoffset())+sizeof(TMatrixDSparseRow_const)*i))->~G__TTMatrixDSparseRow_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDSparseRow_const *)(G__getstructoffset()))->~G__TTMatrixDSparseRow_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDSparseRow */
static int G__G__Matrix_186_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparseRow *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDSparseRow[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSparseRow;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparseRow *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSparseRow(*(TMatrixDSparse*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparseRow *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSparseRow(*(TMatrixDSparseRow*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDSparseRow*)(G__getstructoffset()))->GetDataPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSparseRow*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDSparseRow*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSparseRow*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDSparseRow*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow*)(G__getstructoffset()))->operator=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow*)(G__getstructoffset()))->operator+=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow*)(G__getstructoffset()))->operator*=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow*)(G__getstructoffset()))->operator=(*(TMatrixDSparseRow_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow*)(G__getstructoffset()))->operator=(*(TMatrixDSparseRow*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow*)(G__getstructoffset()))->operator=(*(TVectorD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow*)(G__getstructoffset()))->operator+=(*(TMatrixDSparseRow_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow*)(G__getstructoffset()))->operator*=(*(TMatrixDSparseRow_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDSparseRow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseRow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDSparseRow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDSparseRow::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSparseRow*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseRow*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseRow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSparseRow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseRow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_186_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSparseRow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDSparseRow G__TTMatrixDSparseRow;
static int G__G__Matrix_186_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDSparseRow *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDSparseRow *)((G__getstructoffset())+sizeof(TMatrixDSparseRow)*i))->~G__TTMatrixDSparseRow();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDSparseRow *)(G__getstructoffset()))->~G__TTMatrixDSparseRow();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDSparseDiag_const */
static int G__G__Matrix_187_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparseDiag_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDSparseDiag_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSparseDiag_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparseDiag_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSparseDiag_const(*(TMatrixDSparse*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSparseDiag_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDSparseDiag_const*)(G__getstructoffset()))->GetDataPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDSparseDiag_const*)(G__getstructoffset()))->GetNdiags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSparseDiag_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSparseDiag_const*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDSparseDiag_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseDiag_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDSparseDiag_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDSparseDiag_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSparseDiag_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseDiag_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSparseDiag_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseDiag_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_187_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSparseDiag_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_187_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixDSparseDiag_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixDSparseDiag_const(*(TMatrixDSparseDiag_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDSparseDiag_const G__TTMatrixDSparseDiag_const;
static int G__G__Matrix_187_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDSparseDiag_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDSparseDiag_const *)((G__getstructoffset())+sizeof(TMatrixDSparseDiag_const)*i))->~G__TTMatrixDSparseDiag_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDSparseDiag_const *)(G__getstructoffset()))->~G__TTMatrixDSparseDiag_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDSparseDiag */
static int G__G__Matrix_188_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparseDiag *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDSparseDiag[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSparseDiag;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparseDiag *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSparseDiag(*(TMatrixDSparse*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSparseDiag *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSparseDiag(*(TMatrixDSparseDiag*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TMatrixDSparseDiag*)(G__getstructoffset()))->GetDataPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSparseDiag*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDSparseDiag*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixDSparseDiag*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Double_t& obj=((TMatrixDSparseDiag*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag*)(G__getstructoffset()))->operator=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag*)(G__getstructoffset()))->operator+=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag*)(G__getstructoffset()))->operator*=((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag*)(G__getstructoffset()))->operator=(*(TMatrixDSparseDiag_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag*)(G__getstructoffset()))->operator=(*(TMatrixDSparseDiag*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag*)(G__getstructoffset()))->operator=(*(TVectorD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag*)(G__getstructoffset()))->operator+=(*(TMatrixDSparseDiag_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag*)(G__getstructoffset()))->operator*=(*(TMatrixDSparseDiag_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDSparseDiag::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseDiag::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDSparseDiag::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDSparseDiag::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSparseDiag*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSparseDiag*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseDiag::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSparseDiag::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSparseDiag::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_188_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSparseDiag::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDSparseDiag G__TTMatrixDSparseDiag;
static int G__G__Matrix_188_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDSparseDiag *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDSparseDiag *)((G__getstructoffset())+sizeof(TMatrixDSparseDiag)*i))->~G__TTMatrixDSparseDiag();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDSparseDiag *)(G__getstructoffset()))->~G__TTMatrixDSparseDiag();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixF */
static int G__G__Matrix_189_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixF[G__getaryconstruct()];
   else                    p=new TMatrixF;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
      p = new TMatrixF((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
      p = new TMatrixF(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TMatrixF(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Float_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      p = new TMatrixF(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Float_t*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TMatrixF(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const Float_t*)G__int(libp->para[4]),(Option_t*)G__int(libp->para[5]));
      break;
   case 5:
      p = new TMatrixF(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const Float_t*)G__int(libp->para[4]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
      p = new TMatrixF(*(TMatrixF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
      p = new TMatrixF(*(TMatrixD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
      p = new TMatrixF(*(TMatrixFSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
      p = new TMatrixF((TMatrixFBase::EMatrixCreatorsOp1)G__int(libp->para[0]),*(TMatrixF*)libp->para[1].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
      p = new TMatrixF(
*(TMatrixF*)libp->para[0].ref,(TMatrixFBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixF*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
      p = new TMatrixF(
*(TMatrixF*)libp->para[0].ref,(TMatrixFBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixFSym*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
      p = new TMatrixF(
*(TMatrixFSym*)libp->para[0].ref,(TMatrixFBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixF*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
      p = new TMatrixF(
*(TMatrixFSym*)libp->para[0].ref,(TMatrixFBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixFSym*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixF *p=NULL;
      p = new TMatrixF(*(TMatrixFLazy*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMatrixF*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((TMatrixF*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixF*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixF*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixF*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixF*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixF*)(G__getstructoffset()))->SetRowIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixF*)(G__getstructoffset()))->SetColIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMatrixF*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMatrixF*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Float_t*)G__int(libp->para[4]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->Use(*(TMatrixF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      {
        const TMatrixFBase& obj=((const TMatrixF*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixFBase*)libp->para[4].ref,(Option_t*)G__int(libp->para[5]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 5:
      {
        const TMatrixFBase& obj=((const TMatrixF*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixFBase*)libp->para[4].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
const         TMatrixF *pobj,xobj=((const TMatrixF*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]));
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
const         TMatrixF *pobj,xobj=((const TMatrixF*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixF*)(G__getstructoffset()))->SetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TMatrixFBase*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        const TMatrixFBase& obj=((TMatrixF*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 2:
      {
        const TMatrixFBase& obj=((TMatrixF*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
        const TMatrixFBase& obj=((TMatrixF*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 4:
      {
        const TMatrixFBase& obj=((TMatrixF*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixF*)(G__getstructoffset()))->ResizeTo(*(TMatrixF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixF*)(G__getstructoffset()))->Determinant());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TMatrixF*)(G__getstructoffset()))->Determinant(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->Invert((Double_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 0:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->Invert();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->InvertFast((Double_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 0:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->InvertFast();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->Transpose(*(TMatrixF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->T();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->Rank1Update(*(TVectorF*)libp->para[0].ref,(Float_t)G__double(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->Rank1Update(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->Rank1Update(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref
,(Float_t)G__double(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 2:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->Rank1Update(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->NormByColumn(*(TVectorF*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->NormByColumn(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->NormByRow(*(TVectorF*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->NormByRow(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixF*)(G__getstructoffset()))->Mult(*(TMatrixF*)libp->para[0].ref,*(TMatrixF*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixF*)(G__getstructoffset()))->Mult(*(TMatrixF*)libp->para[0].ref,*(TMatrixFSym*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixF*)(G__getstructoffset()))->Mult(*(TMatrixFSym*)libp->para[0].ref,*(TMatrixF*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixF*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixF*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TMatrixFRow_const *pobj,xobj=((const TMatrixF*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
        pobj=new TMatrixFRow_const(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixFRow *pobj,xobj=((TMatrixF*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
        pobj=new TMatrixFRow(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator=(*(TMatrixF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator=(*(TMatrixD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator=(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator=(*(TMatrixFLazy*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator-=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator+=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator*=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator+=(*(TMatrixF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator+=(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator-=(*(TMatrixF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator-=(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator*=(*(TMatrixF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator*=(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator*=(*(TMatrixFDiag_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator/=(*(TMatrixFDiag_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator*=(*(TMatrixFRow_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_3_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator/=(*(TMatrixFRow_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_4_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator*=(*(TMatrixFColumn_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_5_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=((TMatrixF*)(G__getstructoffset()))->operator/=(*(TMatrixFColumn_const*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_6_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TMatrixF *pobj,xobj=((const TMatrixF*)(G__getstructoffset()))->EigenVectors(*(TVectorF*)libp->para[0].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_7_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_8_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_9_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_0_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixF::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_1_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixF*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_2_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixF*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_3_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixF*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_4_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixF*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_5_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_6_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_7_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_189_8_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixF G__TTMatrixF;
static int G__G__Matrix_189_9_9(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixF *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixF *)((G__getstructoffset())+sizeof(TMatrixF)*i);
   else  delete (TMatrixF *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDLazy */
static int G__G__Matrix_190_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDLazy*)(G__getstructoffset()))->GetRowLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDLazy*)(G__getstructoffset()))->GetRowUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDLazy*)(G__getstructoffset()))->GetColLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDLazy*)(G__getstructoffset()))->GetColUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDLazy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDLazy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDLazy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDLazy::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDLazy*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDLazy*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDLazy*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDLazy*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDLazy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDLazy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDLazy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_190_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDLazy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDLazy G__TTMatrixDLazy;
static int G__G__Matrix_190_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDLazy *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixDLazy *)((G__getstructoffset())+sizeof(TMatrixDLazy)*i);
   else  delete (TMatrixDLazy *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDSymLazy */
static int G__G__Matrix_191_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDSymLazy*)(G__getstructoffset()))->GetRowLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixDSymLazy*)(G__getstructoffset()))->GetRowUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDSymLazy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSymLazy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDSymLazy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDSymLazy::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSymLazy*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSymLazy*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSymLazy*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSymLazy*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSymLazy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSymLazy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSymLazy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_191_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSymLazy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDSymLazy G__TTMatrixDSymLazy;
static int G__G__Matrix_191_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDSymLazy *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixDSymLazy *)((G__getstructoffset())+sizeof(TMatrixDSymLazy)*i);
   else  delete (TMatrixDSymLazy *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFSym */
static int G__G__Matrix_192_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSym *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFSym[G__getaryconstruct()];
   else                    p=new TMatrixFSym;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSym *p=NULL;
      p = new TMatrixFSym((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSym *p=NULL;
      p = new TMatrixFSym((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSym *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TMatrixFSym(
(Int_t)G__int(libp->para[0]),(const Float_t*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TMatrixFSym((Int_t)G__int(libp->para[0]),(const Float_t*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSym *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TMatrixFSym(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Float_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      p = new TMatrixFSym(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Float_t*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSym *p=NULL;
      p = new TMatrixFSym(*(TMatrixFSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSym *p=NULL;
      p = new TMatrixFSym(*(TMatrixDSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSym *p=NULL;
      p = new TMatrixFSym((TMatrixFBase::EMatrixCreatorsOp1)G__int(libp->para[0]),*(TMatrixFSym*)libp->para[1].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSym *p=NULL;
      p = new TMatrixFSym((TMatrixFBase::EMatrixCreatorsOp1)G__int(libp->para[0]),*(TMatrixF*)libp->para[1].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSym *p=NULL;
      p = new TMatrixFSym(
*(TMatrixFSym*)libp->para[0].ref,(TMatrixFBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixFSym*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSym *p=NULL;
      p = new TMatrixFSym(*(TMatrixFSymLazy*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMatrixFSym*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((TMatrixFSym*)(G__getstructoffset()))->GetMatrixArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixFSym*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixFSym*)(G__getstructoffset()))->GetRowIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((const TMatrixFSym*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,73,(long)((TMatrixFSym*)(G__getstructoffset()))->GetColIndexArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->SetRowIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->SetColIndexArray((Int_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMatrixFSym*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMatrixFSym*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TMatrixFSym*)(G__getstructoffset()))->IsSymmetric());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->Use((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->Use(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      {
        const TMatrixFSym& obj=((const TMatrixFSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TMatrixFSym*)libp->para[2].ref,(Option_t*)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 3:
      {
        const TMatrixFSym& obj=((const TMatrixFSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TMatrixFSym*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      {
        const TMatrixFBase& obj=((const TMatrixFSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixFBase*)libp->para[4].ref,(Option_t*)G__int(libp->para[5]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 5:
      {
        const TMatrixFBase& obj=((const TMatrixFSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TMatrixFBase*)libp->para[4].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
const         TMatrixFSym *pobj,xobj=((const TMatrixFSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]));
        pobj=new TMatrixFSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
const         TMatrixFSym *pobj,xobj=((const TMatrixFSym*)(G__getstructoffset()))->GetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
        pobj=new TMatrixFSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->SetSub((Int_t)G__int(libp->para[0]),*(TMatrixFBase*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->SetSub((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TMatrixFBase*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->SetMatrixArray((const Float_t*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->SetMatrixArray((const Float_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->Shift((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 2:
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 4:
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->ResizeTo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->ResizeTo(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TMatrixFSym*)(G__getstructoffset()))->Determinant());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TMatrixFSym*)(G__getstructoffset()))->Determinant(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->Invert((Double_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 0:
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->Invert();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->InvertFast((Double_t*)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 0:
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->InvertFast();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->Transpose(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->T();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->Rank1Update(*(TVectorF*)libp->para[0].ref,(Float_t)G__double(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   case 1:
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->Rank1Update(*(TVectorF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->Similarity(*(TMatrixF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->Similarity(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->SimilarityT(*(TMatrixF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMatrixFSym*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixFSym*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TMatrixFRow_const *pobj,xobj=((const TMatrixFSym*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
        pobj=new TMatrixFRow_const(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixFRow *pobj,xobj=((TMatrixFSym*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
        pobj=new TMatrixFRow(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->operator=(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->operator=(*(TMatrixDSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->operator=(*(TMatrixFSymLazy*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->operator=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->operator-=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->operator+=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->operator*=((Float_t)G__double(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->operator+=(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->operator-=(*(TMatrixFSym*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_5_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->Apply(*(TElementActionF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_6_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->Apply(*(TElementPosActionF*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_7_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFBase& obj=((TMatrixFSym*)(G__getstructoffset()))->Randomize((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_8_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=((TMatrixFSym*)(G__getstructoffset()))->RandomizePD((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,*(Double_t*)G__Doubleref(&libp->para[2]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_9_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TMatrixF *pobj,xobj=((const TMatrixFSym*)(G__getstructoffset()))->EigenVectors(*(TVectorF*)libp->para[0].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_0_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFSym::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_1_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSym::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_2_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFSym::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_3_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFSym::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_4_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFSym*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_5_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSym*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_6_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSym*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_7_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSym*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_8_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSym::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_9_7(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFSym::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_0_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSym::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_192_1_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFSym::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFSym G__TTMatrixFSym;
static int G__G__Matrix_192_2_8(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFSym *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixFSym *)((G__getstructoffset())+sizeof(TMatrixFSym)*i);
   else  delete (TMatrixFSym *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDecompBase */
static int G__G__Matrix_194_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDecompBase*)(G__getstructoffset()))->GetTol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDecompBase*)(G__getstructoffset()))->GetDet1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDecompBase*)(G__getstructoffset()))->GetDet2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TDecompBase*)(G__getstructoffset()))->GetCondition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompBase*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompBase*)(G__getstructoffset()))->GetNcols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompBase*)(G__getstructoffset()))->GetRowLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompBase*)(G__getstructoffset()))->GetColLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDecompBase*)(G__getstructoffset()))->SetTol((Double_t)G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDecompBase*)(G__getstructoffset()))->Condition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompBase*)(G__getstructoffset()))->Det(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompBase*)(G__getstructoffset()))->Decompose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompBase*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompBase*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompBase*)(G__getstructoffset()))->Solve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompBase*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompBase*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompBase*)(G__getstructoffset()))->TransSolve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompBase*)(G__getstructoffset()))->MultiSolve(*(TMatrixD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDecompBase*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDecompBase*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDecompBase& obj=((TDecompBase*)(G__getstructoffset()))->operator=(*(TDecompBase*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDecompBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDecompBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDecompBase::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDecompBase*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompBase*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompBase*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompBase*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_194_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDecompBase G__TTDecompBase;
static int G__G__Matrix_194_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDecompBase *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDecompBase *)((G__getstructoffset())+sizeof(TDecompBase)*i);
   else  delete (TDecompBase *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDecompBK */
static int G__G__Matrix_197_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompBK *p=NULL;
   if(G__getaryconstruct()) p=new TDecompBK[G__getaryconstruct()];
   else                    p=new TDecompBK;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompBK *p=NULL;
      p = new TDecompBK((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompBK *p=NULL;
      p = new TDecompBK((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompBK *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TDecompBK(*(TMatrixDSym*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      p = new TDecompBK(*(TMatrixDSym*)libp->para[0].ref);
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompBK *p=NULL;
      p = new TDecompBK(*(TDecompBK*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompBK*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompBK*)(G__getstructoffset()))->GetNcols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TDecompBK*)(G__getstructoffset()))->GetU();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompBK*)(G__getstructoffset()))->SetMatrix(*(TMatrixDSym*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompBK*)(G__getstructoffset()))->Decompose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompBK*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompBK*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompBK*)(G__getstructoffset()))->Solve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompBK*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompBK*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompBK*)(G__getstructoffset()))->TransSolve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompBK*)(G__getstructoffset()))->Det(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompBK*)(G__getstructoffset()))->Invert(*(TMatrixDSym*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSym *pobj,xobj=((TDecompBK*)(G__getstructoffset()))->Invert();
        pobj=new TMatrixDSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDecompBK*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDecompBK*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDecompBK& obj=((TDecompBK*)(G__getstructoffset()))->operator=(*(TDecompBK*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDecompBK::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompBK::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDecompBK::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDecompBK::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDecompBK*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompBK*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompBK*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompBK*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompBK::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompBK::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompBK::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_197_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompBK::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDecompBK G__TTDecompBK;
static int G__G__Matrix_197_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDecompBK *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDecompBK *)((G__getstructoffset())+sizeof(TDecompBK)*i);
   else  delete (TDecompBK *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaarMatrixD */
static int G__G__Matrix_198_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THaarMatrixD *p=NULL;
   if(G__getaryconstruct()) p=new THaarMatrixD[G__getaryconstruct()];
   else                    p=new THaarMatrixD;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THaarMatrixD *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new THaarMatrixD((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new THaarMatrixD((Int_t)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)THaarMatrixD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THaarMatrixD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)THaarMatrixD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      THaarMatrixD::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const THaarMatrixD*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THaarMatrixD*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THaarMatrixD*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THaarMatrixD*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THaarMatrixD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THaarMatrixD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THaarMatrixD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_198_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THaarMatrixD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_198_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   THaarMatrixD *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new THaarMatrixD(*(THaarMatrixD*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaarMatrixD G__TTHaarMatrixD;
static int G__G__Matrix_198_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (THaarMatrixD *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (THaarMatrixD *)((G__getstructoffset())+sizeof(THaarMatrixD)*i);
   else  delete (THaarMatrixD *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THilbertMatrixD */
static int G__G__Matrix_199_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixD *p=NULL;
   if(G__getaryconstruct()) p=new THilbertMatrixD[G__getaryconstruct()];
   else                    p=new THilbertMatrixD;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixD *p=NULL;
      p = new THilbertMatrixD((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixD *p=NULL;
      p = new THilbertMatrixD(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)THilbertMatrixD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)THilbertMatrixD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      THilbertMatrixD::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const THilbertMatrixD*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixD*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixD*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixD*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THilbertMatrixD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_199_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THilbertMatrixD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_199_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   THilbertMatrixD *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new THilbertMatrixD(*(THilbertMatrixD*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THilbertMatrixD G__TTHilbertMatrixD;
static int G__G__Matrix_199_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (THilbertMatrixD *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (THilbertMatrixD *)((G__getstructoffset())+sizeof(THilbertMatrixD)*i);
   else  delete (THilbertMatrixD *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THilbertMatrixDSym */
static int G__G__Matrix_200_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixDSym *p=NULL;
   if(G__getaryconstruct()) p=new THilbertMatrixDSym[G__getaryconstruct()];
   else                    p=new THilbertMatrixDSym;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixDSym *p=NULL;
      p = new THilbertMatrixDSym((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixDSym *p=NULL;
      p = new THilbertMatrixDSym((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)THilbertMatrixDSym::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixDSym::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)THilbertMatrixDSym::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      THilbertMatrixDSym::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const THilbertMatrixDSym*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixDSym*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixDSym*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixDSym*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixDSym::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THilbertMatrixDSym::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixDSym::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_200_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THilbertMatrixDSym::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_200_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   THilbertMatrixDSym *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new THilbertMatrixDSym(*(THilbertMatrixDSym*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THilbertMatrixDSym G__TTHilbertMatrixDSym;
static int G__G__Matrix_200_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (THilbertMatrixDSym *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (THilbertMatrixDSym *)((G__getstructoffset())+sizeof(THilbertMatrixDSym)*i);
   else  delete (THilbertMatrixDSym *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDecompSparse */
static int G__G__Matrix_210_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompSparse *p=NULL;
   if(G__getaryconstruct()) p=new TDecompSparse[G__getaryconstruct()];
   else                    p=new TDecompSparse;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompSparse *p=NULL;
      p = new TDecompSparse(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompSparse *p=NULL;
      p = new TDecompSparse(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompSparse *p=NULL;
      p = new TDecompSparse(*(TMatrixDSparse*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompSparse *p=NULL;
      p = new TDecompSparse(*(TDecompSparse*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSparse*)(G__getstructoffset()))->SetVerbose((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompSparse*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompSparse*)(G__getstructoffset()))->GetNcols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSparse*)(G__getstructoffset()))->SetMatrix(*(TMatrixDSparse*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompSparse*)(G__getstructoffset()))->Decompose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompSparse*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompSparse*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompSparse*)(G__getstructoffset()))->Solve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompSparse*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompSparse*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompSparse*)(G__getstructoffset()))->TransSolve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSparse*)(G__getstructoffset()))->Det(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDecompSparse*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDecompSparse*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDecompSparse& obj=((TDecompSparse*)(G__getstructoffset()))->operator=(*(TDecompSparse*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDecompSparse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompSparse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDecompSparse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDecompSparse::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDecompSparse*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSparse*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSparse*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSparse*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompSparse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompSparse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompSparse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_210_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompSparse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDecompSparse G__TTDecompSparse;
static int G__G__Matrix_210_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDecompSparse *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDecompSparse *)((G__getstructoffset())+sizeof(TDecompSparse)*i);
   else  delete (TDecompSparse *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFRow_const */
static int G__G__Matrix_211_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFRow_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFRow_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFRow_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFRow_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFRow_const(*(TMatrixF*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFRow_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFRow_const(*(TMatrixFSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFRow_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFRow_const*)(G__getstructoffset()))->GetRowIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFRow_const*)(G__getstructoffset()))->GetInc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMatrixFRow_const*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFRow_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFRow_const*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFRow_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFRow_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFRow_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFRow_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFRow_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFRow_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFRow_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFRow_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_211_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFRow_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_211_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixFRow_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixFRow_const(*(TMatrixFRow_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFRow_const G__TTMatrixFRow_const;
static int G__G__Matrix_211_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFRow_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixFRow_const *)((G__getstructoffset())+sizeof(TMatrixFRow_const)*i))->~G__TTMatrixFRow_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixFRow_const *)(G__getstructoffset()))->~G__TTMatrixFRow_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFRow */
static int G__G__Matrix_212_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFRow *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFRow[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFRow;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFRow *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFRow(*(TMatrixF*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFRow *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFRow(*(TMatrixFSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFRow *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFRow(*(TMatrixFRow*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMatrixFRow*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFRow*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixFRow*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFRow*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixFRow*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow*)(G__getstructoffset()))->operator=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow*)(G__getstructoffset()))->operator+=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow*)(G__getstructoffset()))->operator*=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow*)(G__getstructoffset()))->operator=(*(TMatrixFRow_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow*)(G__getstructoffset()))->operator=(*(TMatrixFRow*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow*)(G__getstructoffset()))->operator=(*(TVectorF*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow*)(G__getstructoffset()))->operator+=(*(TMatrixFRow_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow*)(G__getstructoffset()))->operator*=(*(TMatrixFRow_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFRow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFRow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFRow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFRow::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFRow*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFRow*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFRow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFRow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFRow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_212_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFRow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFRow G__TTMatrixFRow;
static int G__G__Matrix_212_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFRow *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixFRow *)((G__getstructoffset())+sizeof(TMatrixFRow)*i))->~G__TTMatrixFRow();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixFRow *)(G__getstructoffset()))->~G__TTMatrixFRow();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFColumn_const */
static int G__G__Matrix_213_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFColumn_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFColumn_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFColumn_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFColumn_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFColumn_const(*(TMatrixF*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFColumn_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFColumn_const(*(TMatrixFSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFColumn_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFColumn_const*)(G__getstructoffset()))->GetColIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFColumn_const*)(G__getstructoffset()))->GetInc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMatrixFColumn_const*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFColumn_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFColumn_const*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFColumn_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFColumn_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFColumn_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFColumn_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFColumn_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFColumn_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFColumn_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFColumn_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_213_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFColumn_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_213_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixFColumn_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixFColumn_const(*(TMatrixFColumn_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFColumn_const G__TTMatrixFColumn_const;
static int G__G__Matrix_213_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFColumn_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixFColumn_const *)((G__getstructoffset())+sizeof(TMatrixFColumn_const)*i))->~G__TTMatrixFColumn_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixFColumn_const *)(G__getstructoffset()))->~G__TTMatrixFColumn_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFColumn */
static int G__G__Matrix_214_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFColumn *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFColumn[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFColumn;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFColumn *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFColumn(*(TMatrixF*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFColumn *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFColumn(*(TMatrixFSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFColumn *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFColumn(*(TMatrixFColumn*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMatrixFColumn*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFColumn*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixFColumn*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFColumn*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixFColumn*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn*)(G__getstructoffset()))->operator=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn*)(G__getstructoffset()))->operator+=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn*)(G__getstructoffset()))->operator*=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn*)(G__getstructoffset()))->operator=(*(TMatrixFColumn_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn*)(G__getstructoffset()))->operator=(*(TMatrixFColumn*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn*)(G__getstructoffset()))->operator=(*(TVectorF*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn*)(G__getstructoffset()))->operator+=(*(TMatrixFColumn_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn*)(G__getstructoffset()))->operator*=(*(TMatrixFColumn_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFColumn::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFColumn::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFColumn::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFColumn::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFColumn*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFColumn*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFColumn::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFColumn::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFColumn::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_214_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFColumn::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFColumn G__TTMatrixFColumn;
static int G__G__Matrix_214_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFColumn *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixFColumn *)((G__getstructoffset())+sizeof(TMatrixFColumn)*i))->~G__TTMatrixFColumn();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixFColumn *)(G__getstructoffset()))->~G__TTMatrixFColumn();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFDiag_const */
static int G__G__Matrix_215_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFDiag_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFDiag_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFDiag_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFDiag_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFDiag_const(*(TMatrixF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFDiag_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFDiag_const(*(TMatrixFSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFDiag_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMatrixFDiag_const*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFDiag_const*)(G__getstructoffset()))->GetInc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFDiag_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFDiag_const*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFDiag_const*)(G__getstructoffset()))->GetNdiags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFDiag_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFDiag_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFDiag_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFDiag_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFDiag_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFDiag_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFDiag_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFDiag_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_215_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFDiag_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_215_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixFDiag_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixFDiag_const(*(TMatrixFDiag_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFDiag_const G__TTMatrixFDiag_const;
static int G__G__Matrix_215_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFDiag_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixFDiag_const *)((G__getstructoffset())+sizeof(TMatrixFDiag_const)*i))->~G__TTMatrixFDiag_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixFDiag_const *)(G__getstructoffset()))->~G__TTMatrixFDiag_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFDiag */
static int G__G__Matrix_216_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFDiag *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFDiag[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFDiag;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFDiag *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFDiag(*(TMatrixF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFDiag *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFDiag(*(TMatrixFSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFDiag *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFDiag(*(TMatrixFDiag*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMatrixFDiag*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFDiag*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixFDiag*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFDiag*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixFDiag*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag*)(G__getstructoffset()))->operator=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag*)(G__getstructoffset()))->operator+=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag*)(G__getstructoffset()))->operator*=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag*)(G__getstructoffset()))->operator=(*(TMatrixFDiag_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag*)(G__getstructoffset()))->operator=(*(TMatrixFDiag*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag*)(G__getstructoffset()))->operator=(*(TVectorF*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag*)(G__getstructoffset()))->operator+=(*(TMatrixFDiag_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag*)(G__getstructoffset()))->operator*=(*(TMatrixFDiag_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFDiag::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFDiag::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFDiag::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFDiag::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFDiag*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFDiag*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFDiag::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFDiag::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFDiag::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_216_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFDiag::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFDiag G__TTMatrixFDiag;
static int G__G__Matrix_216_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFDiag *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixFDiag *)((G__getstructoffset())+sizeof(TMatrixFDiag)*i))->~G__TTMatrixFDiag();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixFDiag *)(G__getstructoffset()))->~G__TTMatrixFDiag();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFFlat_const */
static int G__G__Matrix_217_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFFlat_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFFlat_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFFlat_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFFlat_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFFlat_const(*(TMatrixF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFFlat_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFFlat_const(*(TMatrixFSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFFlat_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMatrixFFlat_const*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFFlat_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFFlat_const*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFFlat_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFFlat_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFFlat_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFFlat_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFFlat_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFFlat_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFFlat_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFFlat_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_217_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFFlat_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_217_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixFFlat_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixFFlat_const(*(TMatrixFFlat_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFFlat_const G__TTMatrixFFlat_const;
static int G__G__Matrix_217_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFFlat_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixFFlat_const *)((G__getstructoffset())+sizeof(TMatrixFFlat_const)*i))->~G__TTMatrixFFlat_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixFFlat_const *)(G__getstructoffset()))->~G__TTMatrixFFlat_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFFlat */
static int G__G__Matrix_218_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFFlat *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFFlat[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFFlat;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFFlat *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFFlat(*(TMatrixF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFFlat *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFFlat(*(TMatrixFSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFFlat *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFFlat(*(TMatrixFFlat*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMatrixFFlat*)(G__getstructoffset()))->GetPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFFlat*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixFFlat*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFFlat*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixFFlat*)(G__getstructoffset()))->operator[]((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat*)(G__getstructoffset()))->operator=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat*)(G__getstructoffset()))->operator+=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat*)(G__getstructoffset()))->operator*=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat*)(G__getstructoffset()))->operator=(*(TMatrixFFlat_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat*)(G__getstructoffset()))->operator=(*(TMatrixFFlat*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat*)(G__getstructoffset()))->operator=(*(TVectorF*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat*)(G__getstructoffset()))->operator+=(*(TMatrixFFlat_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat*)(G__getstructoffset()))->operator*=(*(TMatrixFFlat_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFFlat::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFFlat::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFFlat::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFFlat::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFFlat*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFFlat*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFFlat::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFFlat::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFFlat::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_218_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFFlat::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFFlat G__TTMatrixFFlat;
static int G__G__Matrix_218_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFFlat *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixFFlat *)((G__getstructoffset())+sizeof(TMatrixFFlat)*i))->~G__TTMatrixFFlat();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixFFlat *)(G__getstructoffset()))->~G__TTMatrixFFlat();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFSub_const */
static int G__G__Matrix_219_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSub_const *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFSub_const[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFSub_const;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSub_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFSub_const(
*(TMatrixF*)libp->para[0].ref,(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSub_const *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFSub_const(
*(TMatrixFSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFSub_const*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFSub_const*)(G__getstructoffset()))->GetRowOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFSub_const*)(G__getstructoffset()))->GetColOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFSub_const*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFSub_const*)(G__getstructoffset()))->GetNcols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((const TMatrixFSub_const*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFSub_const::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSub_const::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFSub_const::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFSub_const::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFSub_const*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub_const*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub_const*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub_const*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSub_const::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFSub_const::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSub_const::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_219_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFSub_const::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_219_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixFSub_const *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixFSub_const(*(TMatrixFSub_const*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFSub_const G__TTMatrixFSub_const;
static int G__G__Matrix_219_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFSub_const *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixFSub_const *)((G__getstructoffset())+sizeof(TMatrixFSub_const)*i))->~G__TTMatrixFSub_const();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixFSub_const *)(G__getstructoffset()))->~G__TTMatrixFSub_const();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFSub */
static int G__G__Matrix_221_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSub *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFSub[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFSub;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSub *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFSub(
*(TMatrixF*)libp->para[0].ref,(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSub *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFSub(
*(TMatrixFSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFSub *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFSub(*(TMatrixFSub*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Float_t& obj=((TMatrixFSub*)(G__getstructoffset()))->operator()((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
         result7->ref=(long)(&obj); result7->obj.d=(double)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->Rank1Update(*(TVectorF*)libp->para[0].ref,(Float_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->Rank1Update(*(TVectorF*)libp->para[0].ref);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->operator=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->operator+=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->operator*=((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->operator=(*(TMatrixFSub_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->operator=(*(TMatrixFSub*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->operator=(*(TMatrixFBase*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->operator+=(*(TMatrixFSub_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->operator*=(*(TMatrixFSub_const*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->operator+=(*(TMatrixFBase*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->operator*=(*(TMatrixF*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->operator*=(*(TMatrixFSym*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFSub::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSub::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFSub::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFSub::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFSub*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSub*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSub::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFSub::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSub::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_221_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFSub::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFSub G__TTMatrixFSub;
static int G__G__Matrix_221_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFSub *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixFSub *)((G__getstructoffset())+sizeof(TMatrixFSub)*i))->~G__TTMatrixFSub();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixFSub *)(G__getstructoffset()))->~G__TTMatrixFSub();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixRow */
static int G__G__Matrix_222_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixRow *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixRow[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixRow;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixRow *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixRow(*(TMatrixF*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixRow *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixRow(*(TMatrixFSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixRow *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixRow(*(TMatrixFRow*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixRow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixRow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixRow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixRow::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixRow*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixRow*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixRow*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixRow*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixRow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixRow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixRow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_222_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixRow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_222_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixRow *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixRow(*(TMatrixRow*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixRow G__TTMatrixRow;
static int G__G__Matrix_222_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixRow *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixRow *)((G__getstructoffset())+sizeof(TMatrixRow)*i))->~G__TTMatrixRow();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixRow *)(G__getstructoffset()))->~G__TTMatrixRow();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixColumn */
static int G__G__Matrix_223_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixColumn *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixColumn[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixColumn;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixColumn *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixColumn(*(TMatrixF*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixColumn *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixColumn(*(TMatrixFSym*)libp->para[0].ref,(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixColumn *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixColumn(*(TMatrixFColumn*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixColumn::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixColumn::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixColumn::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixColumn::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixColumn*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixColumn*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixColumn*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixColumn*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixColumn::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixColumn::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixColumn::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_223_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixColumn::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_223_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixColumn *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixColumn(*(TMatrixColumn*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixColumn G__TTMatrixColumn;
static int G__G__Matrix_223_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixColumn *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixColumn *)((G__getstructoffset())+sizeof(TMatrixColumn)*i))->~G__TTMatrixColumn();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixColumn *)(G__getstructoffset()))->~G__TTMatrixColumn();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDiag */
static int G__G__Matrix_224_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDiag *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDiag[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDiag;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDiag *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDiag(*(TMatrixF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDiag *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDiag(*(TMatrixFSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDiag *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDiag(*(TMatrixFDiag*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDiag::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDiag::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDiag::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDiag::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDiag*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDiag*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDiag*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDiag*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDiag::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDiag::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDiag::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_224_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDiag::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_224_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixDiag *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixDiag(*(TMatrixDiag*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDiag G__TTMatrixDiag;
static int G__G__Matrix_224_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDiag *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDiag *)((G__getstructoffset())+sizeof(TMatrixDiag)*i))->~G__TTMatrixDiag();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDiag *)(G__getstructoffset()))->~G__TTMatrixDiag();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFlat */
static int G__G__Matrix_225_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFlat *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixFlat[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFlat;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFlat *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFlat(*(TMatrixF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFlat *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFlat(*(TMatrixFSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixFlat *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixFlat(*(TMatrixFFlat*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFlat::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFlat::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFlat::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFlat::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFlat*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFlat*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFlat*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFlat*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFlat::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFlat::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFlat::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_225_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFlat::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_225_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrixFlat *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrixFlat(*(TMatrixFlat*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFlat G__TTMatrixFlat;
static int G__G__Matrix_225_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFlat *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixFlat *)((G__getstructoffset())+sizeof(TMatrixFlat)*i))->~G__TTMatrixFlat();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixFlat *)(G__getstructoffset()))->~G__TTMatrixFlat();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFLazy */
static int G__G__Matrix_226_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFLazy*)(G__getstructoffset()))->GetRowLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFLazy*)(G__getstructoffset()))->GetRowUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFLazy*)(G__getstructoffset()))->GetColLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFLazy*)(G__getstructoffset()))->GetColUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFLazy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFLazy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFLazy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFLazy::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFLazy*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFLazy*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFLazy*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFLazy*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFLazy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFLazy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFLazy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_226_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFLazy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFLazy G__TTMatrixFLazy;
static int G__G__Matrix_226_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFLazy *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixFLazy *)((G__getstructoffset())+sizeof(TMatrixFLazy)*i);
   else  delete (TMatrixFLazy *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrix */
static int G__G__Matrix_227_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
   if(G__getaryconstruct()) p=new TMatrix[G__getaryconstruct()];
   else                    p=new TMatrix;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
      p = new TMatrix((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
      p = new TMatrix(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TMatrix(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Float_t*)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      p = new TMatrix(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Float_t*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TMatrix(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const Float_t*)G__int(libp->para[4]),(Option_t*)G__int(libp->para[5]));
      break;
   case 5:
      p = new TMatrix(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(const Float_t*)G__int(libp->para[4]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
      p = new TMatrix(*(TMatrixF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
      p = new TMatrix(*(TMatrixD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
      p = new TMatrix(*(TMatrixFSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
      p = new TMatrix((TMatrixFBase::EMatrixCreatorsOp1)G__int(libp->para[0]),*(TMatrixF*)libp->para[1].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
      p = new TMatrix(
*(TMatrixF*)libp->para[0].ref,(TMatrixFBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixF*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
      p = new TMatrix(
*(TMatrixF*)libp->para[0].ref,(TMatrixFBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixFSym*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
      p = new TMatrix(
*(TMatrixFSym*)libp->para[0].ref,(TMatrixFBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixF*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
      p = new TMatrix(
*(TMatrixFSym*)libp->para[0].ref,(TMatrixFBase::EMatrixCreatorsOp2)G__int(libp->para[1])
,*(TMatrixFSym*)libp->para[2].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *p=NULL;
      p = new TMatrix(*(TMatrixFLazy*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrix::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrix*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrix*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrix*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrix*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_227_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_227_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMatrix *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMatrix(*(TMatrix*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrix G__TTMatrix;
static int G__G__Matrix_227_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrix *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrix *)((G__getstructoffset())+sizeof(TMatrix)*i);
   else  delete (TMatrix *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Matrix_227_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrix *dest = (TMatrix*)(G__getstructoffset());
   *dest = (*(TMatrix*)libp->para[0].ref);
   const TMatrix& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDecompQRH */
static int G__G__Matrix_228_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompQRH *p=NULL;
   if(G__getaryconstruct()) p=new TDecompQRH[G__getaryconstruct()];
   else                    p=new TDecompQRH;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompQRH *p=NULL;
      p = new TDecompQRH((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompQRH *p=NULL;
      p = new TDecompQRH(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompQRH *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TDecompQRH(*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      p = new TDecompQRH(*(TMatrixD*)libp->para[0].ref);
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompQRH *p=NULL;
      p = new TDecompQRH(*(TDecompQRH*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompQRH*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompQRH*)(G__getstructoffset()))->GetNcols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TDecompQRH*)(G__getstructoffset()))->GetQ();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TDecompQRH*)(G__getstructoffset()))->GetR();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TDecompQRH*)(G__getstructoffset()))->GetUp();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TDecompQRH*)(G__getstructoffset()))->GetW();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompQRH*)(G__getstructoffset()))->SetMatrix(*(TMatrixD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompQRH*)(G__getstructoffset()))->Decompose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompQRH*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompQRH*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompQRH*)(G__getstructoffset()))->Solve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompQRH*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompQRH*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompQRH*)(G__getstructoffset()))->TransSolve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompQRH*)(G__getstructoffset()))->Det(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompQRH*)(G__getstructoffset()))->Invert(*(TMatrixD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=((TDecompQRH*)(G__getstructoffset()))->Invert();
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDecompQRH*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDecompQRH*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDecompQRH& obj=((TDecompQRH*)(G__getstructoffset()))->operator=(*(TDecompQRH*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDecompQRH::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompQRH::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDecompQRH::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDecompQRH::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDecompQRH*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompQRH*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompQRH*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompQRH*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompQRH::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompQRH::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompQRH::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_228_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompQRH::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDecompQRH G__TTDecompQRH;
static int G__G__Matrix_228_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDecompQRH *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDecompQRH *)((G__getstructoffset())+sizeof(TDecompQRH)*i);
   else  delete (TDecompQRH *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDecompLU */
static int G__G__Matrix_230_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompLU *p=NULL;
   if(G__getaryconstruct()) p=new TDecompLU[G__getaryconstruct()];
   else                    p=new TDecompLU;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompLU *p=NULL;
      p = new TDecompLU((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompLU *p=NULL;
      p = new TDecompLU((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompLU *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TDecompLU(
*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TDecompLU(*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      p = new TDecompLU(*(TMatrixD*)libp->para[0].ref);
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompLU *p=NULL;
      p = new TDecompLU(*(TDecompLU*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=((TDecompLU*)(G__getstructoffset()))->GetMatrix();
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompLU*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompLU*)(G__getstructoffset()))->GetNcols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TDecompLU*)(G__getstructoffset()))->GetLU();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompLU*)(G__getstructoffset()))->SetMatrix(*(TMatrixD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompLU*)(G__getstructoffset()))->Decompose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompLU*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompLU*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompLU*)(G__getstructoffset()))->Solve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompLU*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompLU*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompLU*)(G__getstructoffset()))->TransSolve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompLU*)(G__getstructoffset()))->Det(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)TDecompLU::InvertLU(*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,(Double_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)TDecompLU::InvertLU(*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompLU*)(G__getstructoffset()))->Invert(*(TMatrixD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=((TDecompLU*)(G__getstructoffset()))->Invert();
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDecompLU*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDecompLU*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDecompLU& obj=((TDecompLU*)(G__getstructoffset()))->operator=(*(TDecompLU*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDecompLU::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompLU::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDecompLU::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDecompLU::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDecompLU*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompLU*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompLU*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompLU*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompLU::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompLU::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompLU::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_230_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompLU::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDecompLU G__TTDecompLU;
static int G__G__Matrix_230_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDecompLU *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDecompLU *)((G__getstructoffset())+sizeof(TDecompLU)*i);
   else  delete (TDecompLU *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDEigen */
static int G__G__Matrix_231_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDEigen *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDEigen[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDEigen;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigen);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDEigen *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDEigen(*(TMatrixD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigen);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDEigen *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDEigen(*(TMatrixDEigen*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigen);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((const TMatrixDEigen*)(G__getstructoffset()))->GetEigenVectors();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((const TMatrixDEigen*)(G__getstructoffset()))->GetEigenValuesRe();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((const TMatrixDEigen*)(G__getstructoffset()))->GetEigenValuesIm();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TMatrixD *pobj,xobj=((const TMatrixDEigen*)(G__getstructoffset()))->GetEigenValues();
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDEigen& obj=((TMatrixDEigen*)(G__getstructoffset()))->operator=(*(TMatrixDEigen*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDEigen::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDEigen::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDEigen::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDEigen::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDEigen*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDEigen*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDEigen*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDEigen*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDEigen::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDEigen::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDEigen::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_231_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDEigen::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDEigen G__TTMatrixDEigen;
static int G__G__Matrix_231_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDEigen *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDEigen *)((G__getstructoffset())+sizeof(TMatrixDEigen)*i))->~G__TTMatrixDEigen();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDEigen *)(G__getstructoffset()))->~G__TTMatrixDEigen();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDecompChol */
static int G__G__Matrix_233_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompChol *p=NULL;
   if(G__getaryconstruct()) p=new TDecompChol[G__getaryconstruct()];
   else                    p=new TDecompChol;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompChol *p=NULL;
      p = new TDecompChol((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompChol *p=NULL;
      p = new TDecompChol((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompChol *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TDecompChol(*(TMatrixDSym*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      p = new TDecompChol(*(TMatrixDSym*)libp->para[0].ref);
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompChol *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TDecompChol(*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      p = new TDecompChol(*(TMatrixD*)libp->para[0].ref);
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompChol *p=NULL;
      p = new TDecompChol(*(TDecompChol*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSym *pobj,xobj=((TDecompChol*)(G__getstructoffset()))->GetMatrix();
        pobj=new TMatrixDSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompChol*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompChol*)(G__getstructoffset()))->GetNcols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((const TDecompChol*)(G__getstructoffset()))->GetU();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompChol*)(G__getstructoffset()))->SetMatrix(*(TMatrixDSym*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompChol*)(G__getstructoffset()))->Decompose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompChol*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompChol*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompChol*)(G__getstructoffset()))->Solve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompChol*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompChol*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompChol*)(G__getstructoffset()))->TransSolve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompChol*)(G__getstructoffset()))->Det(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompChol*)(G__getstructoffset()))->Invert(*(TMatrixDSym*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSym *pobj,xobj=((TDecompChol*)(G__getstructoffset()))->Invert();
        pobj=new TMatrixDSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDecompChol*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDecompChol*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDecompChol& obj=((TDecompChol*)(G__getstructoffset()))->operator=(*(TDecompChol*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDecompChol::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompChol::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDecompChol::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDecompChol::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDecompChol*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompChol*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompChol*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompChol*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompChol::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompChol::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompChol::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_233_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompChol::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDecompChol G__TTDecompChol;
static int G__G__Matrix_233_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDecompChol *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDecompChol *)((G__getstructoffset())+sizeof(TDecompChol)*i);
   else  delete (TDecompChol *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixFSymLazy */
static int G__G__Matrix_234_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFSymLazy*)(G__getstructoffset()))->GetRowLwb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMatrixFSymLazy*)(G__getstructoffset()))->GetRowUpb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixFSymLazy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSymLazy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixFSymLazy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixFSymLazy::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixFSymLazy*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSymLazy*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSymLazy*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixFSymLazy*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSymLazy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFSymLazy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixFSymLazy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_234_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixFSymLazy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixFSymLazy G__TTMatrixFSymLazy;
static int G__G__Matrix_234_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixFSymLazy *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixFSymLazy *)((G__getstructoffset())+sizeof(TMatrixFSymLazy)*i);
   else  delete (TMatrixFSymLazy *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVector */
static int G__G__Matrix_236_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *p=NULL;
   if(G__getaryconstruct()) p=new TVector[G__getaryconstruct()];
   else                    p=new TVector;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *p=NULL;
      p = new TVector((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *p=NULL;
      p = new TVector((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *p=NULL;
      p = new TVector((Int_t)G__int(libp->para[0]),(const Float_t*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *p=NULL;
      p = new TVector(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(const Float_t*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *p=NULL;
      p = new TVector(*(TVectorF*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *p=NULL;
      p = new TVector(*(TVectorD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *p=NULL;
      p = new TVector(*(TVector*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *p=NULL;
      p = new TVector(*(TMatrixFRow_const*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *p=NULL;
      p = new TVector(*(TMatrixFColumn_const*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *p=NULL;
      p = new TVector(*(TMatrixFDiag_const*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TVector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TVector::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TVector*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVector*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVector*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TVector*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_236_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVector G__TTVector;
static int G__G__Matrix_236_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TVector *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TVector *)((G__getstructoffset())+sizeof(TVector)*i);
   else  delete (TVector *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Matrix_236_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TVector *dest = (TVector*)(G__getstructoffset());
   *dest = (*(TVector*)libp->para[0].ref);
   const TVector& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDecompSVD */
static int G__G__Matrix_238_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompSVD *p=NULL;
   if(G__getaryconstruct()) p=new TDecompSVD[G__getaryconstruct()];
   else                    p=new TDecompSVD;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompSVD *p=NULL;
      p = new TDecompSVD((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompSVD *p=NULL;
      p = new TDecompSVD(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompSVD *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TDecompSVD(*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      p = new TDecompSVD(*(TMatrixD*)libp->para[0].ref);
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TDecompSVD *p=NULL;
      p = new TDecompSVD(*(TDecompSVD*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=((TDecompSVD*)(G__getstructoffset()))->GetMatrix();
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompSVD*)(G__getstructoffset()))->GetNrows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TDecompSVD*)(G__getstructoffset()))->GetNcols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TDecompSVD*)(G__getstructoffset()))->GetU();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((TDecompSVD*)(G__getstructoffset()))->GetV();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((TDecompSVD*)(G__getstructoffset()))->GetSig();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSVD*)(G__getstructoffset()))->SetMatrix(*(TMatrixD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompSVD*)(G__getstructoffset()))->Decompose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompSVD*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompSVD*)(G__getstructoffset()))->Solve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompSVD*)(G__getstructoffset()))->Solve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompSVD*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=((TDecompSVD*)(G__getstructoffset()))->TransSolve(*(TVectorD*)libp->para[0].ref,*(Bool_t*)G__Boolref(&libp->para[1]));
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((TDecompSVD*)(G__getstructoffset()))->TransSolve(*(TMatrixDColumn*)libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((TDecompSVD*)(G__getstructoffset()))->Condition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSVD*)(G__getstructoffset()))->Det(*(Double_t*)G__Doubleref(&libp->para[0]),*(Double_t*)G__Doubleref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSVD*)(G__getstructoffset()))->Invert(*(TMatrixD*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=((TDecompSVD*)(G__getstructoffset()))->Invert();
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TDecompSVD*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TDecompSVD*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TDecompSVD& obj=((TDecompSVD*)(G__getstructoffset()))->operator=(*(TDecompSVD*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TDecompSVD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompSVD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TDecompSVD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TDecompSVD::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TDecompSVD*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSVD*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSVD*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TDecompSVD*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompSVD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompSVD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TDecompSVD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_238_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TDecompSVD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDecompSVD G__TTDecompSVD;
static int G__G__Matrix_238_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TDecompSVD *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TDecompSVD *)((G__getstructoffset())+sizeof(TDecompSVD)*i);
   else  delete (TDecompSVD *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixDSymEigen */
static int G__G__Matrix_242_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSymEigen *p=NULL;
   if(G__getaryconstruct()) p=new TMatrixDSymEigen[G__getaryconstruct()];
   else p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSymEigen;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigen);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSymEigen *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSymEigen(*(TMatrixDSym*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigen);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMatrixDSymEigen *p=NULL;
      p=::new((G__matrixdIsrcdIG__MatrixdOcxx_tag*)G__getgvp()) TMatrixDSymEigen(*(TMatrixDSymEigen*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigen);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=((const TMatrixDSymEigen*)(G__getstructoffset()))->GetEigenVectors();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=((const TMatrixDSymEigen*)(G__getstructoffset()))->GetEigenValues();
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSymEigen& obj=((TMatrixDSymEigen*)(G__getstructoffset()))->operator=(*(TMatrixDSymEigen*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixDSymEigen::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSymEigen::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixDSymEigen::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixDSymEigen::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixDSymEigen*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSymEigen*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSymEigen*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixDSymEigen*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSymEigen::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSymEigen::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixDSymEigen::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_242_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixDSymEigen::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixDSymEigen G__TTMatrixDSymEigen;
static int G__G__Matrix_242_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixDSymEigen *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((TMatrixDSymEigen *)((G__getstructoffset())+sizeof(TMatrixDSymEigen)*i))->~G__TTMatrixDSymEigen();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((TMatrixDSymEigen *)(G__getstructoffset()))->~G__TTMatrixDSymEigen();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMatrixLazy */
static int G__G__Matrix_245_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMatrixLazy::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_245_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixLazy::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_245_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMatrixLazy::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_245_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMatrixLazy::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_245_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMatrixLazy*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_245_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixLazy*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_245_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixLazy*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_245_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMatrixLazy*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_245_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixLazy::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_245_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixLazy::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_245_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMatrixLazy::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_245_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMatrixLazy::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMatrixLazy G__TTMatrixLazy;
static int G__G__Matrix_245_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMatrixLazy *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMatrixLazy *)((G__getstructoffset())+sizeof(TMatrixLazy)*i);
   else  delete (TMatrixLazy *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaarMatrixF */
static int G__G__Matrix_246_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THaarMatrixF *p=NULL;
   if(G__getaryconstruct()) p=new THaarMatrixF[G__getaryconstruct()];
   else                    p=new THaarMatrixF;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THaarMatrixF *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new THaarMatrixF((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new THaarMatrixF((Int_t)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)THaarMatrixF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THaarMatrixF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)THaarMatrixF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      THaarMatrixF::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const THaarMatrixF*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THaarMatrixF*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THaarMatrixF*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THaarMatrixF*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THaarMatrixF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THaarMatrixF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THaarMatrixF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_246_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THaarMatrixF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_246_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   THaarMatrixF *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new THaarMatrixF(*(THaarMatrixF*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaarMatrixF G__TTHaarMatrixF;
static int G__G__Matrix_246_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (THaarMatrixF *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (THaarMatrixF *)((G__getstructoffset())+sizeof(THaarMatrixF)*i);
   else  delete (THaarMatrixF *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THilbertMatrixF */
static int G__G__Matrix_247_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixF *p=NULL;
   if(G__getaryconstruct()) p=new THilbertMatrixF[G__getaryconstruct()];
   else                    p=new THilbertMatrixF;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixF *p=NULL;
      p = new THilbertMatrixF((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixF *p=NULL;
      p = new THilbertMatrixF(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)THilbertMatrixF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)THilbertMatrixF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      THilbertMatrixF::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const THilbertMatrixF*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixF*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixF*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixF*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THilbertMatrixF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_247_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THilbertMatrixF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_247_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   THilbertMatrixF *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new THilbertMatrixF(*(THilbertMatrixF*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THilbertMatrixF G__TTHilbertMatrixF;
static int G__G__Matrix_247_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (THilbertMatrixF *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (THilbertMatrixF *)((G__getstructoffset())+sizeof(THilbertMatrixF)*i);
   else  delete (THilbertMatrixF *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THilbertMatrixFSym */
static int G__G__Matrix_248_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixFSym *p=NULL;
   if(G__getaryconstruct()) p=new THilbertMatrixFSym[G__getaryconstruct()];
   else                    p=new THilbertMatrixFSym;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixFSym *p=NULL;
      p = new THilbertMatrixFSym((Int_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THilbertMatrixFSym *p=NULL;
      p = new THilbertMatrixFSym((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)THilbertMatrixFSym::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixFSym::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)THilbertMatrixFSym::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      THilbertMatrixFSym::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const THilbertMatrixFSym*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixFSym*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixFSym*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THilbertMatrixFSym*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixFSym::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THilbertMatrixFSym::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THilbertMatrixFSym::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix_248_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THilbertMatrixFSym::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Matrix_248_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   THilbertMatrixFSym *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new THilbertMatrixFSym(*(THilbertMatrixFSym*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THilbertMatrixFSym G__TTHilbertMatrixFSym;
static int G__G__Matrix_248_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (THilbertMatrixFSym *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (THilbertMatrixFSym *)((G__getstructoffset())+sizeof(THilbertMatrixFSym)*i);
   else  delete (THilbertMatrixFSym *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__G__Matrix__6_32(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator==(*(TMatrixDBase*)libp->para[0].ref,*(TMatrixDBase*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_32(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)E2Norm(*(TMatrixDBase*)libp->para[0].ref,*(TMatrixDBase*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_32(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)AreCompatible(*(TMatrixDBase*)libp->para[0].ref,*(TMatrixDBase*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)AreCompatible(*(TMatrixDBase*)libp->para[0].ref,*(TMatrixDBase*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_32(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)AreCompatible(*(TMatrixDBase*)libp->para[0].ref,*(TMatrixFBase*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)AreCompatible(*(TMatrixDBase*)libp->para[0].ref,*(TMatrixFBase*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_33(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      Compare(*(TMatrixDBase*)libp->para[0].ref,*(TMatrixDBase*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_33(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,103,(long)VerifyMatrixValue(*(TMatrixDBase*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7,103,(long)VerifyMatrixValue(*(TMatrixDBase*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)VerifyMatrixValue(*(TMatrixDBase*)libp->para[0].ref,(Double_t)G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_33(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,103,(long)VerifyMatrixIdentity(*(TMatrixDBase*)libp->para[0].ref,*(TMatrixDBase*)libp->para[1].ref
,(Int_t)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7,103,(long)VerifyMatrixIdentity(*(TMatrixDBase*)libp->para[0].ref,*(TMatrixDBase*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)VerifyMatrixIdentity(*(TMatrixDBase*)libp->para[0].ref,*(TMatrixDBase*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_33(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator+(*(TMatrixD*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_33(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator+(*(TMatrixD*)libp->para[0].ref,*(TMatrixDSym*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_33(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator+(*(TMatrixDSym*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_33(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator+(*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_33(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator+((Double_t)G__double(libp->para[0]),*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_33(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator-(*(TMatrixD*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_34(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator-(*(TMatrixD*)libp->para[0].ref,*(TMatrixDSym*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_34(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator-(*(TMatrixDSym*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_34(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator-(*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_34(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator-((Double_t)G__double(libp->para[0]),*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_34(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator*((Double_t)G__double(libp->para[0]),*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_34(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator*(*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_34(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator*(*(TMatrixD*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_34(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator*(*(TMatrixD*)libp->para[0].ref,*(TMatrixDSym*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_34(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator*(*(TMatrixDSym*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_34(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=operator*(*(TMatrixDSym*)libp->para[0].ref,*(TMatrixDSym*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_37(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=Add(*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,*(TMatrixD*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_37(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=Add(*(TMatrixD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,*(TMatrixDSym*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_37(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=ElementMult(*(TMatrixD*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_37(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=ElementMult(*(TMatrixD*)libp->para[0].ref,*(TMatrixDSym*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_37(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=ElementDiv(*(TMatrixD*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_37(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixD& obj=ElementDiv(*(TMatrixD*)libp->para[0].ref,*(TMatrixDSym*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_37(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSym *pobj,xobj=operator+(*(TMatrixDSym*)libp->para[0].ref,*(TMatrixDSym*)libp->para[1].ref);
        pobj=new TMatrixDSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSym *pobj,xobj=operator-(*(TMatrixDSym*)libp->para[0].ref,*(TMatrixDSym*)libp->para[1].ref);
        pobj=new TMatrixDSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSym *pobj,xobj=operator*(*(TMatrixDSym*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
        pobj=new TMatrixDSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_38(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSym *pobj,xobj=operator*((Double_t)G__double(libp->para[0]),*(TMatrixDSym*)libp->para[1].ref);
        pobj=new TMatrixDSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=Add(*(TMatrixDSym*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,*(TMatrixDSym*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=ElementMult(*(TMatrixDSym*)libp->para[0].ref,*(TMatrixDSym*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSym& obj=ElementDiv(*(TMatrixDSym*)libp->para[0].ref,*(TMatrixDSym*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator+(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator+(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator+(*(TMatrixD*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator+(*(TMatrixDSparse*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_39(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator+((Double_t)G__double(libp->para[0]),*(TMatrixDSparse*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator-(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator-(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator-(*(TMatrixD*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator-(*(TMatrixDSparse*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator-((Double_t)G__double(libp->para[0]),*(TMatrixDSparse*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator*(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator*(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator*(*(TMatrixD*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator*((Double_t)G__double(libp->para[0]),*(TMatrixDSparse*)libp->para[1].ref);
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_40(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixDSparse *pobj,xobj=operator*(*(TMatrixDSparse*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
        pobj=new TMatrixDSparse(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=Add(*(TMatrixDSparse*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,*(TMatrixDSparse*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=ElementMult(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixDSparse& obj=ElementDiv(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)AreCompatible(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)AreCompatible(*(TMatrixDSparse*)libp->para[0].ref,*(TMatrixDSparse*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator==(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=operator+(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref);
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=operator-(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref);
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)operator*(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=operator*(*(TMatrixD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref);
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_41(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=operator*(*(TMatrixDSym*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref);
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=operator*(*(TMatrixDSparse*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref);
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=operator*((Double_t)G__double(libp->para[0]),*(TVectorD*)libp->para[1].ref);
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=Add(*(TVectorD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,*(TVectorD*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=AddElemMult(*(TVectorD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,*(TVectorD*)libp->para[2].ref,*(TVectorD*)libp->para[3].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=AddElemMult(*(TVectorD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,*(TVectorD*)libp->para[2].ref,*(TVectorD*)libp->para[3].ref
,*(TVectorD*)libp->para[4].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=AddElemDiv(*(TVectorD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,*(TVectorD*)libp->para[2].ref,*(TVectorD*)libp->para[3].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=AddElemDiv(*(TVectorD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,*(TVectorD*)libp->para[2].ref,*(TVectorD*)libp->para[3].ref
,*(TVectorD*)libp->para[4].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=ElementMult(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=ElementMult(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref
,*(TVectorD*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_42(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=ElementDiv(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorD& obj=ElementDiv(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref
,*(TVectorD*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)AreCompatible(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)AreCompatible(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)AreCompatible(*(TVectorD*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)AreCompatible(*(TVectorD*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      Compare(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,103,(long)VerifyVectorValue(*(TVectorD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7,103,(long)VerifyVectorValue(*(TVectorD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)VerifyVectorValue(*(TVectorD*)libp->para[0].ref,(Double_t)G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_43(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,103,(long)VerifyVectorIdentity(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref
,(Int_t)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7,103,(long)VerifyVectorIdentity(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)VerifyVectorIdentity(*(TVectorD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator==(*(TMatrixFBase*)libp->para[0].ref,*(TMatrixFBase*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)E2Norm(*(TMatrixFBase*)libp->para[0].ref,*(TMatrixFBase*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)AreCompatible(*(TMatrixFBase*)libp->para[0].ref,*(TMatrixFBase*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)AreCompatible(*(TMatrixFBase*)libp->para[0].ref,*(TMatrixFBase*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)AreCompatible(*(TMatrixFBase*)libp->para[0].ref,*(TMatrixDBase*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)AreCompatible(*(TMatrixFBase*)libp->para[0].ref,*(TMatrixDBase*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      Compare(*(TMatrixFBase*)libp->para[0].ref,*(TMatrixFBase*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,103,(long)VerifyMatrixValue(*(TMatrixFBase*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7,103,(long)VerifyMatrixValue(*(TMatrixFBase*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)VerifyMatrixValue(*(TMatrixFBase*)libp->para[0].ref,(Float_t)G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_44(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,103,(long)VerifyMatrixIdentity(*(TMatrixFBase*)libp->para[0].ref,*(TMatrixFBase*)libp->para[1].ref
,(Int_t)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7,103,(long)VerifyMatrixIdentity(*(TMatrixFBase*)libp->para[0].ref,*(TMatrixFBase*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)VerifyMatrixIdentity(*(TMatrixFBase*)libp->para[0].ref,*(TMatrixFBase*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_45(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator+(*(TMatrixF*)libp->para[0].ref,*(TMatrixF*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_45(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator+(*(TMatrixF*)libp->para[0].ref,*(TMatrixFSym*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_45(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator+(*(TMatrixFSym*)libp->para[0].ref,*(TMatrixF*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator+(*(TMatrixF*)libp->para[0].ref,(Float_t)G__double(libp->para[1]));
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator+((Float_t)G__double(libp->para[0]),*(TMatrixF*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator-(*(TMatrixF*)libp->para[0].ref,*(TMatrixF*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator-(*(TMatrixF*)libp->para[0].ref,*(TMatrixFSym*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator-(*(TMatrixFSym*)libp->para[0].ref,*(TMatrixF*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator-(*(TMatrixF*)libp->para[0].ref,(Float_t)G__double(libp->para[1]));
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator-((Float_t)G__double(libp->para[0]),*(TMatrixF*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator*((Float_t)G__double(libp->para[0]),*(TMatrixF*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator*(*(TMatrixF*)libp->para[0].ref,(Float_t)G__double(libp->para[1]));
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_46(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator*(*(TMatrixF*)libp->para[0].ref,*(TMatrixF*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_47(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator*(*(TMatrixF*)libp->para[0].ref,*(TMatrixFSym*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_47(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator*(*(TMatrixFSym*)libp->para[0].ref,*(TMatrixF*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_47(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixF *pobj,xobj=operator*(*(TMatrixFSym*)libp->para[0].ref,*(TMatrixFSym*)libp->para[1].ref);
        pobj=new TMatrixF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_49(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=Add(*(TMatrixF*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,*(TMatrixF*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_49(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=Add(*(TMatrixF*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,*(TMatrixFSym*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_49(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=ElementMult(*(TMatrixF*)libp->para[0].ref,*(TMatrixF*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_49(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=ElementMult(*(TMatrixF*)libp->para[0].ref,*(TMatrixFSym*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_49(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=ElementDiv(*(TMatrixF*)libp->para[0].ref,*(TMatrixF*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_49(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixF& obj=ElementDiv(*(TMatrixF*)libp->para[0].ref,*(TMatrixFSym*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_50(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=NormalEqn(*(TMatrixD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref);
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_50(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorD *pobj,xobj=NormalEqn(*(TMatrixD*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref
,*(TVectorD*)libp->para[2].ref);
        pobj=new TVectorD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_50(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=NormalEqn(*(TMatrixD*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_50(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixD *pobj,xobj=NormalEqn(*(TMatrixD*)libp->para[0].ref,*(TMatrixD*)libp->para[1].ref
,*(TVectorD*)libp->para[2].ref);
        pobj=new TMatrixD(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_50(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixFSym *pobj,xobj=operator+(*(TMatrixFSym*)libp->para[0].ref,*(TMatrixFSym*)libp->para[1].ref);
        pobj=new TMatrixFSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_50(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixFSym *pobj,xobj=operator-(*(TMatrixFSym*)libp->para[0].ref,*(TMatrixFSym*)libp->para[1].ref);
        pobj=new TMatrixFSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_51(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixFSym *pobj,xobj=operator*(*(TMatrixFSym*)libp->para[0].ref,(Float_t)G__double(libp->para[1]));
        pobj=new TMatrixFSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_51(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TMatrixFSym *pobj,xobj=operator*((Float_t)G__double(libp->para[0]),*(TMatrixFSym*)libp->para[1].ref);
        pobj=new TMatrixFSym(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_51(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=Add(*(TMatrixFSym*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,*(TMatrixFSym*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_51(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=ElementMult(*(TMatrixFSym*)libp->para[0].ref,*(TMatrixFSym*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_52(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TMatrixFSym& obj=ElementDiv(*(TMatrixFSym*)libp->para[0].ref,*(TMatrixFSym*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_52(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)operator==(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_52(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorF *pobj,xobj=operator+(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref);
        pobj=new TVectorF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_52(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorF *pobj,xobj=operator-(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref);
        pobj=new TVectorF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_52(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)operator*(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_52(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorF *pobj,xobj=operator*(*(TMatrixF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref);
        pobj=new TVectorF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_52(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorF *pobj,xobj=operator*(*(TMatrixFSym*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref);
        pobj=new TVectorF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_52(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVectorF *pobj,xobj=operator*((Float_t)G__double(libp->para[0]),*(TVectorF*)libp->para[1].ref);
        pobj=new TVectorF(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_52(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=Add(*(TVectorF*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,*(TVectorF*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_52(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=AddElemMult(*(TVectorF*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,*(TVectorF*)libp->para[2].ref,*(TVectorF*)libp->para[3].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_53(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=AddElemMult(*(TVectorF*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,*(TVectorF*)libp->para[2].ref,*(TVectorF*)libp->para[3].ref
,*(TVectorF*)libp->para[4].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_53(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=AddElemDiv(*(TVectorF*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,*(TVectorF*)libp->para[2].ref,*(TVectorF*)libp->para[3].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__2_53(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=AddElemDiv(*(TVectorF*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,*(TVectorF*)libp->para[2].ref,*(TVectorF*)libp->para[3].ref
,*(TVectorF*)libp->para[4].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__3_53(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=ElementMult(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__4_53(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=ElementMult(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref
,*(TVectorF*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__5_53(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=ElementDiv(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__6_53(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TVectorF& obj=ElementDiv(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref
,*(TVectorF*)libp->para[2].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__7_53(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)AreCompatible(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)AreCompatible(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__8_53(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,103,(long)AreCompatible(*(TVectorF*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)AreCompatible(*(TVectorF*)libp->para[0].ref,*(TVectorD*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__9_53(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      Compare(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__0_54(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,103,(long)VerifyVectorValue(*(TVectorF*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7,103,(long)VerifyVectorValue(*(TVectorF*)libp->para[0].ref,(Float_t)G__double(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)VerifyVectorValue(*(TVectorF*)libp->para[0].ref,(Float_t)G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Matrix__1_54(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__letint(result7,103,(long)VerifyVectorIdentity(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref
,(Int_t)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7,103,(long)VerifyVectorIdentity(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,103,(long)VerifyVectorIdentity(*(TVectorF*)libp->para[0].ref,*(TVectorF*)libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* TMatrixFBase */

/* TMatrixDBase */

/* TVectorF */

/* TVectorD */

/* TMatrixD */

/* TMatrixDSym */

/* TMatrixDSparse */

/* TMatrixDRow_const */

/* TMatrixDRow */

/* TMatrixDColumn_const */

/* TMatrixDColumn */

/* TMatrixDDiag_const */

/* TMatrixDDiag */

/* TMatrixDFlat_const */

/* TMatrixDFlat */

/* TMatrixDSub_const */

/* TMatrixDSub */

/* TMatrixDSparseRow_const */

/* TMatrixDSparseRow */

/* TMatrixDSparseDiag_const */

/* TMatrixDSparseDiag */

/* TMatrixF */

/* TMatrixDLazy */

/* TMatrixDSymLazy */

/* TMatrixFSym */

/* TDecompBase */

/* TDecompBK */

/* THaarMatrixD */

/* THilbertMatrixD */

/* THilbertMatrixDSym */

/* TDecompSparse */

/* TMatrixFRow_const */

/* TMatrixFRow */

/* TMatrixFColumn_const */

/* TMatrixFColumn */

/* TMatrixFDiag_const */

/* TMatrixFDiag */

/* TMatrixFFlat_const */

/* TMatrixFFlat */

/* TMatrixFSub_const */

/* TMatrixFSub */

/* TMatrixRow */

/* TMatrixColumn */

/* TMatrixDiag */

/* TMatrixFlat */

/* TMatrixFLazy */

/* TMatrix */

/* TDecompQRH */

/* TDecompLU */

/* TMatrixDEigen */

/* TDecompChol */

/* TMatrixFSymLazy */

/* TVector */

/* TDecompSVD */

/* TMatrixDSymEigen */

/* TMatrixLazy */

/* THaarMatrixF */

/* THilbertMatrixF */

/* THilbertMatrixFSym */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Matrix {
 public:
  G__Sizep2memfuncG__Matrix() {p=&G__Sizep2memfuncG__Matrix::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Matrix::*p)();
};

size_t G__get_sizep2memfuncG__Matrix()
{
  G__Sizep2memfuncG__Matrix a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Matrix() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase))) {
     TMatrixFBase *G__Lderived;
     G__Lderived=(TMatrixFBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase))) {
     TMatrixDBase *G__Lderived;
     G__Lderived=(TMatrixDBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TVectorF))) {
     TVectorF *G__Lderived;
     G__Lderived=(TVectorF*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TVectorD))) {
     TVectorD *G__Lderived;
     G__Lderived=(TVectorD*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD))) {
     TMatrixD *G__Lderived;
     G__Lderived=(TMatrixD*)0x1000;
     {
       TMatrixDBase *G__Lpbase=(TMatrixDBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym))) {
     TMatrixDSym *G__Lderived;
     G__Lderived=(TMatrixDSym*)0x1000;
     {
       TMatrixDBase *G__Lpbase=(TMatrixDBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse))) {
     TMatrixDSparse *G__Lderived;
     G__Lderived=(TMatrixDSparse*)0x1000;
     {
       TMatrixDBase *G__Lpbase=(TMatrixDBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow))) {
     TMatrixDRow *G__Lderived;
     G__Lderived=(TMatrixDRow*)0x1000;
     {
       TMatrixDRow_const *G__Lpbase=(TMatrixDRow_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn))) {
     TMatrixDColumn *G__Lderived;
     G__Lderived=(TMatrixDColumn*)0x1000;
     {
       TMatrixDColumn_const *G__Lpbase=(TMatrixDColumn_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag))) {
     TMatrixDDiag *G__Lderived;
     G__Lderived=(TMatrixDDiag*)0x1000;
     {
       TMatrixDDiag_const *G__Lpbase=(TMatrixDDiag_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat))) {
     TMatrixDFlat *G__Lderived;
     G__Lderived=(TMatrixDFlat*)0x1000;
     {
       TMatrixDFlat_const *G__Lpbase=(TMatrixDFlat_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub))) {
     TMatrixDSub *G__Lderived;
     G__Lderived=(TMatrixDSub*)0x1000;
     {
       TMatrixDSub_const *G__Lpbase=(TMatrixDSub_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow))) {
     TMatrixDSparseRow *G__Lderived;
     G__Lderived=(TMatrixDSparseRow*)0x1000;
     {
       TMatrixDSparseRow_const *G__Lpbase=(TMatrixDSparseRow_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag))) {
     TMatrixDSparseDiag *G__Lderived;
     G__Lderived=(TMatrixDSparseDiag*)0x1000;
     {
       TMatrixDSparseDiag_const *G__Lpbase=(TMatrixDSparseDiag_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF))) {
     TMatrixF *G__Lderived;
     G__Lderived=(TMatrixF*)0x1000;
     {
       TMatrixFBase *G__Lpbase=(TMatrixFBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDLazy))) {
     TMatrixDLazy *G__Lderived;
     G__Lderived=(TMatrixDLazy*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDLazy),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymLazy))) {
     TMatrixDSymLazy *G__Lderived;
     G__Lderived=(TMatrixDSymLazy*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymLazy),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym))) {
     TMatrixFSym *G__Lderived;
     G__Lderived=(TMatrixFSym*)0x1000;
     {
       TMatrixFBase *G__Lpbase=(TMatrixFBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase))) {
     TDecompBase *G__Lderived;
     G__Lderived=(TDecompBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK))) {
     TDecompBK *G__Lderived;
     G__Lderived=(TDecompBK*)0x1000;
     {
       TDecompBase *G__Lpbase=(TDecompBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK),G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD))) {
     THaarMatrixD *G__Lderived;
     G__Lderived=(THaarMatrixD*)0x1000;
     {
       TMatrixDLazy *G__Lpbase=(TMatrixDLazy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDLazy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD))) {
     THilbertMatrixD *G__Lderived;
     G__Lderived=(THilbertMatrixD*)0x1000;
     {
       TMatrixDLazy *G__Lpbase=(TMatrixDLazy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDLazy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym))) {
     THilbertMatrixDSym *G__Lderived;
     G__Lderived=(THilbertMatrixDSym*)0x1000;
     {
       TMatrixDSymLazy *G__Lpbase=(TMatrixDSymLazy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymLazy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse))) {
     TDecompSparse *G__Lderived;
     G__Lderived=(TDecompSparse*)0x1000;
     {
       TDecompBase *G__Lpbase=(TDecompBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse),G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow))) {
     TMatrixFRow *G__Lderived;
     G__Lderived=(TMatrixFRow*)0x1000;
     {
       TMatrixFRow_const *G__Lpbase=(TMatrixFRow_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn))) {
     TMatrixFColumn *G__Lderived;
     G__Lderived=(TMatrixFColumn*)0x1000;
     {
       TMatrixFColumn_const *G__Lpbase=(TMatrixFColumn_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag))) {
     TMatrixFDiag *G__Lderived;
     G__Lderived=(TMatrixFDiag*)0x1000;
     {
       TMatrixFDiag_const *G__Lpbase=(TMatrixFDiag_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat))) {
     TMatrixFFlat *G__Lderived;
     G__Lderived=(TMatrixFFlat*)0x1000;
     {
       TMatrixFFlat_const *G__Lpbase=(TMatrixFFlat_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub))) {
     TMatrixFSub *G__Lderived;
     G__Lderived=(TMatrixFSub*)0x1000;
     {
       TMatrixFSub_const *G__Lpbase=(TMatrixFSub_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow))) {
     TMatrixRow *G__Lderived;
     G__Lderived=(TMatrixRow*)0x1000;
     {
       TMatrixFRow *G__Lpbase=(TMatrixFRow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TMatrixFRow_const *G__Lpbase=(TMatrixFRow_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn))) {
     TMatrixColumn *G__Lderived;
     G__Lderived=(TMatrixColumn*)0x1000;
     {
       TMatrixFColumn *G__Lpbase=(TMatrixFColumn*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TMatrixFColumn_const *G__Lpbase=(TMatrixFColumn_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag))) {
     TMatrixDiag *G__Lderived;
     G__Lderived=(TMatrixDiag*)0x1000;
     {
       TMatrixFDiag *G__Lpbase=(TMatrixFDiag*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TMatrixFDiag_const *G__Lpbase=(TMatrixFDiag_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat))) {
     TMatrixFlat *G__Lderived;
     G__Lderived=(TMatrixFlat*)0x1000;
     {
       TMatrixFFlat *G__Lpbase=(TMatrixFFlat*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TMatrixFFlat_const *G__Lpbase=(TMatrixFFlat_const*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFLazy))) {
     TMatrixFLazy *G__Lderived;
     G__Lderived=(TMatrixFLazy*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFLazy),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrix))) {
     TMatrix *G__Lderived;
     G__Lderived=(TMatrix*)0x1000;
     {
       TMatrixF *G__Lpbase=(TMatrixF*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TMatrixFBase *G__Lpbase=(TMatrixFBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH))) {
     TDecompQRH *G__Lderived;
     G__Lderived=(TDecompQRH*)0x1000;
     {
       TDecompBase *G__Lpbase=(TDecompBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH),G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU))) {
     TDecompLU *G__Lderived;
     G__Lderived=(TDecompLU*)0x1000;
     {
       TDecompBase *G__Lpbase=(TDecompBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU),G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol))) {
     TDecompChol *G__Lderived;
     G__Lderived=(TDecompChol*)0x1000;
     {
       TDecompBase *G__Lpbase=(TDecompBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol),G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSymLazy))) {
     TMatrixFSymLazy *G__Lderived;
     G__Lderived=(TMatrixFSymLazy*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSymLazy),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TVector))) {
     TVector *G__Lderived;
     G__Lderived=(TVector*)0x1000;
     {
       TVectorF *G__Lpbase=(TVectorF*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVector),G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVector),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD))) {
     TDecompSVD *G__Lderived;
     G__Lderived=(TDecompSVD*)0x1000;
     {
       TDecompBase *G__Lpbase=(TDecompBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD),G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixLazy))) {
     TMatrixLazy *G__Lderived;
     G__Lderived=(TMatrixLazy*)0x1000;
     {
       TMatrixFLazy *G__Lpbase=(TMatrixFLazy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixLazy),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFLazy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixLazy),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF))) {
     THaarMatrixF *G__Lderived;
     G__Lderived=(THaarMatrixF*)0x1000;
     {
       TMatrixFLazy *G__Lpbase=(TMatrixFLazy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFLazy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF))) {
     THilbertMatrixF *G__Lderived;
     G__Lderived=(THilbertMatrixF*)0x1000;
     {
       TMatrixFLazy *G__Lpbase=(TMatrixFLazy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFLazy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym))) {
     THilbertMatrixFSym *G__Lderived;
     G__Lderived=(THilbertMatrixFSym*)0x1000;
     {
       TMatrixFSymLazy *G__Lpbase=(TMatrixFSymLazy*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSymLazy),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym),G__get_linked_tagnum(&G__G__MatrixLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Matrix() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__MatrixLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__MatrixLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MatrixLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__MatrixLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__MatrixLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TMatrixFBase */
static void G__setup_memvarTMatrixFBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase));
   { TMatrixFBase *p; p=(TMatrixFBase*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrows=",0,"number of rows");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNcols=",0,"number of columns");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowLwb=",0,"lower bound of the row index");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColLwb=",0,"lower bound of the col index");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNelems=",0,"number of elements in matrix");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrowIndex=",0,"length of row index array (= fNrows+1) wich is only used for sparse matrices");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTol=",0,"sqrt(epsilon); epsilon is smallest number number so that  1+epsilon > 1");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLdA),-1,-2,1,"kSizeMax=25",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLdA),-1,-2,1,"kWorkMax=100",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsOwner=",0,"!default kTRUE, when Use array kFALSE");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixStatusBits),-1,-2,1,"kStatus=16384",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp1),-1,-2,1,"kZero=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp1),-1,-2,1,"kUnit=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp1),-1,-2,1,"kTransposed=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp1),-1,-2,1,"kInverted=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp1),-1,-2,1,"kAtA=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kMult=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kTransposeMult=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kInvMult=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kMultTranspose=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kPlus=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kMinus=5",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDBase */
static void G__setup_memvarTMatrixDBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase));
   { TMatrixDBase *p; p=(TMatrixDBase*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrows=",0,"number of rows");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNcols=",0,"number of columns");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowLwb=",0,"lower bound of the row index");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColLwb=",0,"lower bound of the col index");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNelems=",0,"number of elements in matrix");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrowIndex=",0,"length of row index array (= fNrows+1) wich is only used for sparse matrices");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTol=",0,"sqrt(epsilon); epsilon is smallest number number so that  1+epsilon > 1");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLdA),-1,-2,1,"kSizeMax=25",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLdA),-1,-2,1,"kWorkMax=100",0,(char*)NULL);
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsOwner=",0,"!default kTRUE, when Use array kFALSE");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixStatusBits),-1,-2,1,"kStatus=16384",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp1),-1,-2,1,"kZero=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp1),-1,-2,1,"kUnit=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp1),-1,-2,1,"kTransposed=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp1),-1,-2,1,"kInverted=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp1),-1,-2,1,"kAtA=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kMult=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kTransposeMult=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kInvMult=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kMultTranspose=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kPlus=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp2),-1,-2,1,"kMinus=5",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVectorF */
static void G__setup_memvarTVectorF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVectorF));
   { TVectorF *p; p=(TVectorF*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrows=",0,"number of rows");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowLwb=",0,"lower bound of the row index");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fElements=",0,"[fNrows] elements themselves");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TVectorFcLcLdA),-1,-2,1,"kSizeMax=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TVectorFcLcLdA),-1,-2,1,"kWorkMax=100",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDataStack[5]=",0,"! data container");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsOwner=",0,"!default kTRUE, when Use array kFALSE");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVectorD */
static void G__setup_memvarTVectorD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVectorD));
   { TVectorD *p; p=(TVectorD*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrows=",0,"number of rows");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowLwb=",0,"lower bound of the row index");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fElements=",0,"[fNrows] elements themselves");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TVectorDcLcLdA),-1,-2,1,"kSizeMax=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TVectorDcLcLdA),-1,-2,1,"kWorkMax=100",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDataStack[5]=",0,"! data container");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsOwner=",0,"!default kTRUE, when Use array kFALSE");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixD */
static void G__setup_memvarTMatrixD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD));
   { TMatrixD *p; p=(TMatrixD*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDataStack[25]=",0,"! data container");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fElements=",0,"[fNelems] elements themselves");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDSym */
static void G__setup_memvarTMatrixDSym(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym));
   { TMatrixDSym *p; p=(TMatrixDSym*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDataStack[25]=",0,"! data container");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fElements=",0,"[fNelems] elements themselves");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDSparse */
static void G__setup_memvarTMatrixDSparse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse));
   { TMatrixDSparse *p; p=(TMatrixDSparse*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowIndex=",0,"[fNrowIndex] row index");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColIndex=",0,"[fNelems]    column index");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fElements=",0,"[fNelems]");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDRow_const */
static void G__setup_memvarTMatrixDRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const));
   { TMatrixDRow_const *p; p=(TMatrixDRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,-1,2,"fMatrix=",0,"the matrix I am a row of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowInd=",0,"effective row index");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fInc=",0,"if ptr = @a[row,i], then ptr+inc = @a[row,i+1]");
   G__memvar_setup((void*)NULL,68,0,1,-1,G__defined_typename("Double_t"),-1,2,"fPtr=",0,"pointer to the a[row,0]");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDRow */
static void G__setup_memvarTMatrixDRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow));
   { TMatrixDRow *p; p=(TMatrixDRow*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDColumn_const */
static void G__setup_memvarTMatrixDColumn_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const));
   { TMatrixDColumn_const *p; p=(TMatrixDColumn_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,-1,2,"fMatrix=",0,"the matrix I am a column of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColInd=",0,"effective column index");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fInc=",0,"if ptr = @a[i,col], then ptr+inc = @a[i+1,col]");
   G__memvar_setup((void*)NULL,68,0,1,-1,G__defined_typename("Double_t"),-1,2,"fPtr=",0,"pointer to the a[0,col] column");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDColumn */
static void G__setup_memvarTMatrixDColumn(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn));
   { TMatrixDColumn *p; p=(TMatrixDColumn*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDDiag_const */
static void G__setup_memvarTMatrixDDiag_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const));
   { TMatrixDDiag_const *p; p=(TMatrixDDiag_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,-1,2,"fMatrix=",0,"the matrix I am the diagonal of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fInc=",0,"if ptr=@a[i,i], then ptr+inc = @a[i+1,i+1]");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdiag=",0,"number of diag elems, min(nrows,ncols)");
   G__memvar_setup((void*)NULL,68,0,1,-1,G__defined_typename("Double_t"),-1,2,"fPtr=",0,"pointer to the a[0,0]");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDDiag */
static void G__setup_memvarTMatrixDDiag(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag));
   { TMatrixDDiag *p; p=(TMatrixDDiag*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDFlat_const */
static void G__setup_memvarTMatrixDFlat_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const));
   { TMatrixDFlat_const *p; p=(TMatrixDFlat_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,-1,2,"fMatrix=",0,"the matrix I am the diagonal of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNelems=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,68,0,1,-1,G__defined_typename("Double_t"),-1,2,"fPtr=",0,"pointer to the a[0,0]");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDFlat */
static void G__setup_memvarTMatrixDFlat(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat));
   { TMatrixDFlat *p; p=(TMatrixDFlat*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDSub_const */
static void G__setup_memvarTMatrixDSub_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const));
   { TMatrixDSub_const *p; p=(TMatrixDSub_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,-1,2,"fMatrix=",0,"the matrix I am a submatrix of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowOff=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColOff=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrowsSub=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNcolsSub=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_constcLcLdA),-1,-2,1,"kWorkMax=100",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDSub */
static void G__setup_memvarTMatrixDSub(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub));
   { TMatrixDSub *p; p=(TMatrixDSub*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDSparseRow_const */
static void G__setup_memvarTMatrixDSparseRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow_const));
   { TMatrixDSparseRow_const *p; p=(TMatrixDSparseRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,-1,2,"fMatrix=",0,"the matrix I am a row of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowInd=",0,"effective row index");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNindex=",0,"index range");
   G__memvar_setup((void*)NULL,73,0,1,-1,G__defined_typename("Int_t"),-1,2,"fColPtr=",0,"column index pointer");
   G__memvar_setup((void*)NULL,68,0,1,-1,G__defined_typename("Double_t"),-1,2,"fDataPtr=",0,"data pointer");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDSparseRow */
static void G__setup_memvarTMatrixDSparseRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow));
   { TMatrixDSparseRow *p; p=(TMatrixDSparseRow*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDSparseDiag_const */
static void G__setup_memvarTMatrixDSparseDiag_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag_const));
   { TMatrixDSparseDiag_const *p; p=(TMatrixDSparseDiag_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,-1,2,"fMatrix=",0,"the matrix I am the diagonal of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdiag=",0,"number of diag elems, min(nrows,ncols)");
   G__memvar_setup((void*)NULL,68,0,1,-1,G__defined_typename("Double_t"),-1,2,"fDataPtr=",0,"data pointer");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDSparseDiag */
static void G__setup_memvarTMatrixDSparseDiag(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag));
   { TMatrixDSparseDiag *p; p=(TMatrixDSparseDiag*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixF */
static void G__setup_memvarTMatrixF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF));
   { TMatrixF *p; p=(TMatrixF*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDataStack[25]=",0,"! data container");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fElements=",0,"[fNelems] elements themselves");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDLazy */
static void G__setup_memvarTMatrixDLazy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDLazy));
   { TMatrixDLazy *p; p=(TMatrixDLazy*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowUpb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowLwb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColUpb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColLwb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDSymLazy */
static void G__setup_memvarTMatrixDSymLazy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymLazy));
   { TMatrixDSymLazy *p; p=(TMatrixDSymLazy*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowUpb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowLwb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFSym */
static void G__setup_memvarTMatrixFSym(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym));
   { TMatrixFSym *p; p=(TMatrixFSym*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDataStack[25]=",0,"! data container");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fElements=",0,"[fNelems] elements themselves");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDecompBase */
static void G__setup_memvarTDecompBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase));
   { TDecompBase *p; p=(TDecompBase*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTol=",0,"sqrt(epsilon); epsilon is smallest number number so that  1+epsilon > 1");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDet1=",0,"determinant mantissa");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDet2=",0,"determinant exponent for powers of 2");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCondition=",0,"matrix condition number");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowLwb=",0,"Row    lower bound of decomposed matrix");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColLwb=",0,"Column lower bound of decomposed matrix");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBasecLcLEMatrixDecompStat),-1,-2,1,"kInit=16384",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBasecLcLEMatrixDecompStat),-1,-2,1,"kPatternSet=32768",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBasecLcLEMatrixDecompStat),-1,-2,1,"kValuesSet=65536",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBasecLcLEMatrixDecompStat),-1,-2,1,"kMatrixSet=131072",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBasecLcLEMatrixDecompStat),-1,-2,1,"kDecomposed=262144",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBasecLcLEMatrixDecompStat),-1,-2,1,"kDetermined=524288",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBasecLcLEMatrixDecompStat),-1,-2,1,"kCondition=1048576",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBasecLcLEMatrixDecompStat),-1,-2,1,"kSingular=2097152",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBasecLcLdA),-1,-2,1,"kWorkMax=100",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDecompBK */
static void G__setup_memvarTDecompBK(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK));
   { TDecompBK *p; p=(TDecompBK*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNIpiv=",0,"size of row permutation index");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIpiv=",0,"[fNIpiv] row permutation index");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,-1,2,"fU=",0,"decomposed matrix so that a = u d u^T");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaarMatrixD */
static void G__setup_memvarTHaarMatrixD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD));
   { THaarMatrixD *p; p=(THaarMatrixD*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THilbertMatrixD */
static void G__setup_memvarTHilbertMatrixD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD));
   { THilbertMatrixD *p; p=(THilbertMatrixD*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THilbertMatrixDSym */
static void G__setup_memvarTHilbertMatrixDSym(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym));
   { THilbertMatrixDSym *p; p=(THilbertMatrixDSym*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDecompSparse */
static void G__setup_memvarTDecompSparse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse));
   { TDecompSparse *p; p=(TDecompSparse*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVerbose=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIcntl[31]=",0,"integer control numbers");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCntl[6]=",0,"float control numbers");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fInfo[21]=",0,"array used for communication between programs");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPrecision=",0,"precision we demand from the linear system solver. If it isn't");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TArrayI),-1,-1,2,"fIkeep=",0,"pivot sequence and temporary storage information");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TArrayI),-1,-1,2,"fIw=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TArrayI),-1,-1,2,"fIw1=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TArrayI),-1,-1,2,"fIw2=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNsteps=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxfrt=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TArrayD),-1,-1,2,"fW=",0,"temporary storage for the factorization");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fIPessimism=",0,"amounts by which to increase allocated factorization space when");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRPessimism=",0,"inadequate space is detected. fIPessimism is for array \"fIw\",");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,-1,2,"fA=",0,"original matrix; needed for the iterative solving procedure");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrows=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNnonZeros=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TArrayD),-1,-1,2,"fFact=",0,"size of fFact array; may be increased during the numerical factorization");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TArrayI),-1,-1,2,"fRowFact=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TArrayI),-1,-1,2,"fColFact=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFRow_const */
static void G__setup_memvarTMatrixFRow_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const));
   { TMatrixFRow_const *p; p=(TMatrixFRow_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,-1,2,"fMatrix=",0,"the matrix I am a row of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowInd=",0,"effective row index");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fInc=",0,"if ptr = @a[row,i], then ptr+inc = @a[row,i+1]");
   G__memvar_setup((void*)NULL,70,0,1,-1,G__defined_typename("Float_t"),-1,2,"fPtr=",0,"pointer to the a[row,0]");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFRow */
static void G__setup_memvarTMatrixFRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow));
   { TMatrixFRow *p; p=(TMatrixFRow*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFColumn_const */
static void G__setup_memvarTMatrixFColumn_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const));
   { TMatrixFColumn_const *p; p=(TMatrixFColumn_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,-1,2,"fMatrix=",0,"the matrix I am a column of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColInd=",0,"effective column index");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fInc=",0,"if ptr = @a[i,col], then ptr+inc = @a[i+1,col]");
   G__memvar_setup((void*)NULL,70,0,1,-1,G__defined_typename("Float_t"),-1,2,"fPtr=",0,"pointer to the a[0,col] column");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFColumn */
static void G__setup_memvarTMatrixFColumn(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn));
   { TMatrixFColumn *p; p=(TMatrixFColumn*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFDiag_const */
static void G__setup_memvarTMatrixFDiag_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const));
   { TMatrixFDiag_const *p; p=(TMatrixFDiag_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,-1,2,"fMatrix=",0,"the matrix I am the diagonal of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fInc=",0,"if ptr=@a[i,i], then ptr+inc = @a[i+1,i+1]");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdiag=",0,"number of diag elems, min(nrows,ncols)");
   G__memvar_setup((void*)NULL,70,0,1,-1,G__defined_typename("Float_t"),-1,2,"fPtr=",0,"pointer to the a[0,0]");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFDiag */
static void G__setup_memvarTMatrixFDiag(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag));
   { TMatrixFDiag *p; p=(TMatrixFDiag*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFFlat_const */
static void G__setup_memvarTMatrixFFlat_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const));
   { TMatrixFFlat_const *p; p=(TMatrixFFlat_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,-1,2,"fMatrix=",0,"the matrix I am the diagonal of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNelems=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,70,0,1,-1,G__defined_typename("Float_t"),-1,2,"fPtr=",0,"pointer to the a[0,0]");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFFlat */
static void G__setup_memvarTMatrixFFlat(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat));
   { TMatrixFFlat *p; p=(TMatrixFFlat*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFSub_const */
static void G__setup_memvarTMatrixFSub_const(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const));
   { TMatrixFSub_const *p; p=(TMatrixFSub_const*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,-1,2,"fMatrix=",0,"the matrix I am a submatrix of");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowOff=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColOff=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrowsSub=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNcolsSub=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_constcLcLdA),-1,-2,1,"kWorkMax=100",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFSub */
static void G__setup_memvarTMatrixFSub(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub));
   { TMatrixFSub *p; p=(TMatrixFSub*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixRow */
static void G__setup_memvarTMatrixRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow));
   { TMatrixRow *p; p=(TMatrixRow*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixColumn */
static void G__setup_memvarTMatrixColumn(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn));
   { TMatrixColumn *p; p=(TMatrixColumn*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDiag */
static void G__setup_memvarTMatrixDiag(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag));
   { TMatrixDiag *p; p=(TMatrixDiag*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFlat */
static void G__setup_memvarTMatrixFlat(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat));
   { TMatrixFlat *p; p=(TMatrixFlat*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFLazy */
static void G__setup_memvarTMatrixFLazy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFLazy));
   { TMatrixFLazy *p; p=(TMatrixFLazy*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowUpb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowLwb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColUpb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fColLwb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrix */
static void G__setup_memvarTMatrix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrix));
   { TMatrix *p; p=(TMatrix*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDecompQRH */
static void G__setup_memvarTDecompQRH(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH));
   { TDecompQRH *p; p=(TDecompQRH*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,-1,2,"fQ=",0,"(m x n) - orthogonal matrix");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,-1,2,"fR=",0,"(n x n) - upper triangular matrix");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,-1,2,"fUp=",0,"(n) - vector with Householder up's");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,-1,2,"fW=",0,"(n) - vector with Householder beta's");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRHcLcLdA),-1,-2,1,"kWorkMax=100",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDecompLU */
static void G__setup_memvarTDecompLU(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU));
   { TDecompLU *p; p=(TDecompLU*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fImplicitPivot=",0,"control to determine implicit row scale before");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNIndex=",0,"size of row permutation index");
   G__memvar_setup((void*)NULL,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIndex=",0,"[fNIndex] row permutation index");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSign=",0,"= +/- 1 reflecting even/odd row permutations, resp.");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,-1,2,"fLU=",0,"decomposed matrix so that a = l u where");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDEigen */
static void G__setup_memvarTMatrixDEigen(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigen));
   { TMatrixDEigen *p; p=(TMatrixDEigen*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,-1,2,"fEigenVectors=",0,"Eigen-vectors of matrix");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,-1,2,"fEigenValuesRe=",0,"Eigen-values");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,-1,2,"fEigenValuesIm=",0,"Eigen-values");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigencLcLdA),-1,-2,1,"kWorkMax=100",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDecompChol */
static void G__setup_memvarTDecompChol(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol));
   { TDecompChol *p; p=(TDecompChol*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,-1,2,"fU=",0,"decomposed matrix fU so that a = fU^T fU");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixFSymLazy */
static void G__setup_memvarTMatrixFSymLazy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSymLazy));
   { TMatrixFSymLazy *p; p=(TMatrixFSymLazy*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowUpb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRowLwb=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVector */
static void G__setup_memvarTVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVector));
   { TVector *p; p=(TVector*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDecompSVD */
static void G__setup_memvarTDecompSVD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD));
   { TDecompSVD *p; p=(TDecompSVD*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,-1,2,"fU=",0,"orthogonal matrix");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,-1,2,"fV=",0,"orthogonal matrix");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,-1,2,"fSig=",0,"diagonal of diagonal matrix");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVDcLcLdA),-1,-2,1,"kWorkMax=100",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixDSymEigen */
static void G__setup_memvarTMatrixDSymEigen(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigen));
   { TMatrixDSymEigen *p; p=(TMatrixDSymEigen*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,-1,2,"fEigenVectors=",0,"Eigen-vectors of matrix");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,-1,2,"fEigenValues=",0,"Eigen-values");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigencLcLdA),-1,-2,1,"kWorkMax=100",0,(char*)NULL);
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMatrixLazy */
static void G__setup_memvarTMatrixLazy(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixLazy));
   { TMatrixLazy *p; p=(TMatrixLazy*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaarMatrixF */
static void G__setup_memvarTHaarMatrixF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF));
   { THaarMatrixF *p; p=(THaarMatrixF*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THilbertMatrixF */
static void G__setup_memvarTHilbertMatrixF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF));
   { THilbertMatrixF *p; p=(THilbertMatrixF*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THilbertMatrixFSym */
static void G__setup_memvarTHilbertMatrixFSym(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym));
   { THilbertMatrixFSym *p; p=(THilbertMatrixFSym*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Matrix() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTMatrixFBase(void) {
   /* TMatrixFBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase));
   G__memfunc_setup("GetElements",1117,(G__InterfaceMethod)NULL,70,-1,G__defined_typename("Float_t"),0,0,1,4,0,"","This function is now obsolete (and is not implemented) you should use TMatrix::GetMatrixArray().",(void*)NULL,0);
   G__memfunc_setup("Allocate",805,(G__InterfaceMethod)NULL,121,-1,-1,0,6,1,2,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 0 row_lwb i - 'Int_t' 0 0 col_lwb "
"i - 'Int_t' 0 0 init i - 'Int_t' 0 -1 nr_nonzero",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowLwb",893,G__G__Matrix_160_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRowUpb",895,G__G__Matrix_160_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_160_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColLwb",867,G__G__Matrix_160_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColUpb",869,G__G__Matrix_160_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNcols",799,G__G__Matrix_160_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNoElements",1306,G__G__Matrix_160_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTol",591,G__G__Matrix_160_1_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_160_2_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_160_3_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_160_4_1,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_160_5_1,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_160_6_1,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_160_7_1,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetRowIndexArray",1627,G__G__Matrix_160_8_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - data",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetColIndexArray",1601,G__G__Matrix_160_9_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - data",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetMatrixArray",1440,G__G__Matrix_160_0_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,2,1,1,0,
"F - 'Float_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTol",603,G__G__Matrix_160_1_2,102,-1,G__defined_typename("Float_t"),0,1,1,1,0,"f - 'Float_t' 0 - tol",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clear",487,G__G__Matrix_160_2_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Invalidate",1025,G__G__Matrix_160_3_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MakeValid",878,G__G__Matrix_160_4_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsValid",684,G__G__Matrix_160_5_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsOwner",711,G__G__Matrix_160_6_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsSymmetric",1145,G__G__Matrix_160_7_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_160_8_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,6,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"u 'TMatrixFBase' - 1 - target C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetSub",598,G__G__Matrix_160_9_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - col_lwb "
"u 'TMatrixFBase' - 11 - source",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetMatrix2Array",1478,G__G__Matrix_160_0_3,121,-1,-1,0,2,1,1,8,
"F - 'Float_t' 0 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("InsertRow",941,G__G__Matrix_160_1_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,4,1,1,0,
"i - 'Int_t' 0 - row i - 'Int_t' 0 - col "
"F - 'Float_t' 10 - v i - 'Int_t' 0 -1 n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExtractRow",1043,G__G__Matrix_160_2_3,121,-1,-1,0,4,1,1,8,
"i - 'Int_t' 0 - row i - 'Int_t' 0 - col "
"F - 'Float_t' 0 - v i - 'Int_t' 0 -1 n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Shift",510,G__G__Matrix_160_3_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,2,1,1,0,
"i - 'Int_t' 0 - row_shift i - 'Int_t' 0 - col_shift",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_160_4_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_160_5_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,5,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_160_6_3,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_160_7_3,121,-1,-1,0,2,1,1,8,
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Zero",416,G__G__Matrix_160_8_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Abs",278,G__G__Matrix_160_9_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sqr",310,G__G__Matrix_160_0_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sqrt",426,G__G__Matrix_160_1_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UnitMatrix",1045,G__G__Matrix_160_2_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("NormByDiag",972,G__G__Matrix_160_3_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,2,1,1,0,
"u 'TVectorF' - 11 - v C - 'Option_t' 10 \"D\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RowNorm",724,G__G__Matrix_160_4_4,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ColNorm",698,G__G__Matrix_160_5_4,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("E2Norm",531,G__G__Matrix_160_6_4,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("NormInf",697,G__G__Matrix_160_7_4,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Norm1",461,G__G__Matrix_160_8_4,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NonZeros",830,G__G__Matrix_160_9_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sum",309,G__G__Matrix_160_0_5,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Min",292,G__G__Matrix_160_1_5,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Max",294,G__G__Matrix_160_2_5,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Matrix_160_3_5,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Matrix_160_4_5,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" name","*MENU*",(void*)NULL,1);
   G__memfunc_setup("operator()",957,G__G__Matrix_160_5_5,102,-1,G__defined_typename("Float_t"),0,2,1,1,8,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("operator()",957,G__G__Matrix_160_6_5,102,-1,G__defined_typename("Float_t"),1,2,1,1,0,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("operator==",998,G__G__Matrix_160_7_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator!=",970,G__G__Matrix_160_8_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator<",936,G__G__Matrix_160_9_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator<=",997,G__G__Matrix_160_0_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator>",938,G__G__Matrix_160_1_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator>=",999,G__G__Matrix_160_2_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__G__Matrix_160_3_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"u 'TElementActionF' - 11 - action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Apply",518,G__G__Matrix_160_4_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"u 'TElementPosActionF' - 11 - action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Randomize",937,G__G__Matrix_160_5_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,3,1,1,0,
"f - 'Float_t' 0 - alpha f - 'Float_t' 0 - beta "
"d - 'Double_t' 1 - seed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Matrix_160_6_6,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFBase::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_160_7_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFBase::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_160_8_6,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFBase::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_160_9_6,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFBase::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_160_0_7,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_160_1_7,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_160_2_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_160_3_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_160_4_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFBase::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_160_5_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFBase::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_160_6_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFBase::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_160_7_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFBase::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFBase",1288,G__G__Matrix_160_8_7,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Matrix_160_9_7,(int)('u'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"u 'TMatrixFBase' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDBase(void) {
   /* TMatrixDBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase));
   G__memfunc_setup("GetElements",1117,(G__InterfaceMethod)NULL,68,-1,G__defined_typename("Double_t"),0,0,1,4,0,"","This function is now obsolete (and is not implemented) you should use TMatrix::GetMatrixArray().",(void*)NULL,0);
   G__memfunc_setup("DoubleLexSort",1324,(G__InterfaceMethod)NULL,121,-1,-1,0,4,3,2,0,
"i - 'Int_t' 0 - n I - 'Int_t' 0 - first "
"I - 'Int_t' 0 - second D - 'Double_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IndexedLexSort",1426,(G__InterfaceMethod)NULL,121,-1,-1,0,6,3,2,0,
"i - 'Int_t' 0 - n I - 'Int_t' 0 - first "
"i - 'Int_t' 0 - swapFirst I - 'Int_t' 0 - second "
"i - 'Int_t' 0 - swapSecond I - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Allocate",805,(G__InterfaceMethod)NULL,121,-1,-1,0,6,1,2,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 0 row_lwb i - 'Int_t' 0 0 col_lwb "
"i - 'Int_t' 0 0 init i - 'Int_t' 0 -1 nr_nonzero",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowLwb",893,G__G__Matrix_161_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRowUpb",895,G__G__Matrix_161_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_161_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColLwb",867,G__G__Matrix_161_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColUpb",869,G__G__Matrix_161_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNcols",799,G__G__Matrix_161_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNoElements",1306,G__G__Matrix_161_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTol",591,G__G__Matrix_161_3_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_161_4_1,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_161_5_1,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_161_6_1,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_161_7_1,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_161_8_1,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_161_9_1,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetRowIndexArray",1627,G__G__Matrix_161_0_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - data",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetColIndexArray",1601,G__G__Matrix_161_1_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - data",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetMatrixArray",1440,G__G__Matrix_161_2_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,2,1,1,0,
"D - 'Double_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTol",603,G__G__Matrix_161_3_2,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - tol",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clear",487,G__G__Matrix_161_4_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Invalidate",1025,G__G__Matrix_161_5_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MakeValid",878,G__G__Matrix_161_6_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsValid",684,G__G__Matrix_161_7_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsOwner",711,G__G__Matrix_161_8_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsSymmetric",1145,G__G__Matrix_161_9_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSub",586,G__G__Matrix_161_0_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,6,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"u 'TMatrixDBase' - 1 - target C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetSub",598,G__G__Matrix_161_1_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - col_lwb "
"u 'TMatrixDBase' - 11 - source",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetMatrix2Array",1478,G__G__Matrix_161_2_3,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 0 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("InsertRow",941,G__G__Matrix_161_3_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,4,1,1,0,
"i - 'Int_t' 0 - row i - 'Int_t' 0 - col "
"D - 'Double_t' 10 - v i - 'Int_t' 0 -1 n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExtractRow",1043,G__G__Matrix_161_4_3,121,-1,-1,0,4,1,1,8,
"i - 'Int_t' 0 - row i - 'Int_t' 0 - col "
"D - 'Double_t' 0 - v i - 'Int_t' 0 -1 n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Shift",510,G__G__Matrix_161_5_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,2,1,1,0,
"i - 'Int_t' 0 - row_shift i - 'Int_t' 0 - col_shift",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_161_6_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_161_7_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,5,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_161_8_3,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_161_9_3,121,-1,-1,0,2,1,1,8,
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Zero",416,G__G__Matrix_161_0_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Abs",278,G__G__Matrix_161_1_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sqr",310,G__G__Matrix_161_2_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sqrt",426,G__G__Matrix_161_3_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UnitMatrix",1045,G__G__Matrix_161_4_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("NormByDiag",972,G__G__Matrix_161_5_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,2,1,1,0,
"u 'TVectorD' - 11 - v C - 'Option_t' 10 \"D\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RowNorm",724,G__G__Matrix_161_6_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ColNorm",698,G__G__Matrix_161_7_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("E2Norm",531,G__G__Matrix_161_8_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("NormInf",697,G__G__Matrix_161_9_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Norm1",461,G__G__Matrix_161_0_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NonZeros",830,G__G__Matrix_161_1_5,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sum",309,G__G__Matrix_161_2_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Min",292,G__G__Matrix_161_3_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Max",294,G__G__Matrix_161_4_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Matrix_161_5_5,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Matrix_161_6_5,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" name","*MENU*",(void*)NULL,1);
   G__memfunc_setup("operator()",957,G__G__Matrix_161_7_5,100,-1,G__defined_typename("Double_t"),0,2,1,1,8,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("operator()",957,G__G__Matrix_161_8_5,100,-1,G__defined_typename("Double_t"),1,2,1,1,0,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("operator==",998,G__G__Matrix_161_9_5,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator!=",970,G__G__Matrix_161_0_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator<",936,G__G__Matrix_161_1_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator<=",997,G__G__Matrix_161_2_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator>",938,G__G__Matrix_161_3_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator>=",999,G__G__Matrix_161_4_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__G__Matrix_161_5_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"u 'TElementActionD' - 11 - action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Apply",518,G__G__Matrix_161_6_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"u 'TElementPosActionD' - 11 - action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Randomize",937,G__G__Matrix_161_7_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,3,1,1,0,
"d - 'Double_t' 0 - alpha d - 'Double_t' 0 - beta "
"d - 'Double_t' 1 - seed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Matrix_161_8_6,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDBase::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_161_9_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDBase::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_161_0_7,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDBase::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_161_1_7,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDBase::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_161_2_7,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_161_3_7,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_161_4_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_161_5_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_161_6_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDBase::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_161_7_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDBase::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_161_8_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDBase::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_161_9_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDBase::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDBase",1286,G__G__Matrix_161_0_8,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Matrix_161_1_8,(int)('u'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"u 'TMatrixDBase' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVectorF(void) {
   /* TVectorF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVectorF));
   G__memfunc_setup("New_m",502,(G__InterfaceMethod)NULL,70,-1,G__defined_typename("Float_t"),0,1,1,2,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Delete_m",799,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"i - 'Int_t' 0 - size F - 'Float_t' 1 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Memcpy_m",823,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,5,1,2,0,
"F - 'Float_t' 0 - newp F - 'Float_t' 10 - oldp "
"i - 'Int_t' 0 - copySize i - 'Int_t' 0 - newSize "
"i - 'Int_t' 0 - oldSize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Allocate",805,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 0 row_lwb "
"i - 'Int_t' 0 0 init",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorF",781,G__G__Matrix_162_5_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorF",781,G__G__Matrix_162_6_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,1,5,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorF",781,G__G__Matrix_162_7_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,2,1,1,0,
"i - 'Int_t' 0 - lwb i - 'Int_t' 0 - upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorF",781,G__G__Matrix_162_8_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,2,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 10 - elements",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorF",781,G__G__Matrix_162_9_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,3,1,1,0,
"i - 'Int_t' 0 - lwb i - 'Int_t' 0 - upb "
"F - 'Float_t' 10 - elements",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorF",781,G__G__Matrix_162_0_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,1,1,1,0,"u 'TVectorF' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorF",781,G__G__Matrix_162_1_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,1,1,1,0,"u 'TVectorD' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorF",781,G__G__Matrix_162_2_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,1,1,1,0,"u 'TMatrixFRow_const' - 11 - mr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorF",781,G__G__Matrix_162_3_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,1,1,1,0,"u 'TMatrixFColumn_const' - 11 - mc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorF",781,G__G__Matrix_162_4_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,1,1,1,0,"u 'TMatrixFDiag_const' - 11 - md",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLwb",581,G__G__Matrix_162_5_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUpb",583,G__G__Matrix_162_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_162_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNoElements",1306,G__G__Matrix_162_8_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_162_9_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_162_0_2,70,-1,G__defined_typename("Float_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Invalidate",1025,G__G__Matrix_162_1_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MakeValid",878,G__G__Matrix_162_2_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsValid",684,G__G__Matrix_162_3_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsOwner",711,G__G__Matrix_162_4_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetElements",1129,G__G__Matrix_162_5_2,121,-1,-1,0,1,1,1,0,"F - 'Float_t' 10 - elements",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Shift",510,G__G__Matrix_162_6_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"i - 'Int_t' 0 - row_shift",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_162_7_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,2,1,1,0,
"i - 'Int_t' 0 - lwb i - 'Int_t' 0 - upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_162_8_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_162_9_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TVectorF' - 11 - v",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_162_0_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,2,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_162_1_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,3,1,1,0,
"i - 'Int_t' 0 - lwb i - 'Int_t' 0 - upb "
"F - 'Float_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_162_2_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TVectorF' - 1 - v",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_162_3_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,4,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"u 'TVectorF' - 1 - target C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_162_4_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,3,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSub",598,G__G__Matrix_162_5_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,2,1,1,0,
"i - 'Int_t' 0 - row_lwb u 'TVectorF' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Zero",416,G__G__Matrix_162_6_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Abs",278,G__G__Matrix_162_7_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sqr",310,G__G__Matrix_162_8_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sqrt",426,G__G__Matrix_162_9_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Invert",632,G__G__Matrix_162_0_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SelectNonZeros",1438,G__G__Matrix_162_1_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TVectorF' - 11 - select",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Norm1",461,G__G__Matrix_162_2_4,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Norm2Sqr",772,G__G__Matrix_162_3_4,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NormInf",697,G__G__Matrix_162_4_4,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NonZeros",830,G__G__Matrix_162_5_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sum",309,G__G__Matrix_162_6_4,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Min",292,G__G__Matrix_162_7_4,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Max",294,G__G__Matrix_162_8_4,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_162_9_4,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_162_0_5,102,-1,G__defined_typename("Float_t"),1,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_162_1_5,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_162_2_5,102,-1,G__defined_typename("Float_t"),1,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_162_3_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TVectorF' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_162_4_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TVectorD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_162_5_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TMatrixFRow_const' - 11 - mr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_162_6_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TMatrixFColumn_const' - 11 - mc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_162_7_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TMatrixFDiag_const' - 11 - md",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_162_8_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_162_9_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_162_0_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_162_1_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_162_2_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TVectorF' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_162_3_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TVectorF' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_162_4_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TMatrixF' - 11 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_162_5_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator==",998,G__G__Matrix_162_6_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator!=",970,G__G__Matrix_162_7_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator<",936,G__G__Matrix_162_8_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator<=",997,G__G__Matrix_162_9_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator>",938,G__G__Matrix_162_0_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator>=",999,G__G__Matrix_162_1_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MatchesNonZeroPattern",2158,G__G__Matrix_162_2_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorF' - 11 - select",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SomePositive",1255,G__G__Matrix_162_3_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorF' - 11 - select",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddSomeConstant",1511,G__G__Matrix_162_4_7,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 - val u 'TVectorF' - 11 - select",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Randomize",937,G__G__Matrix_162_5_7,121,-1,-1,0,3,1,1,0,
"f - 'Float_t' 0 - alpha f - 'Float_t' 0 - beta "
"d - 'Double_t' 1 - seed",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__G__Matrix_162_6_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TElementActionF' - 11 - action",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__G__Matrix_162_7_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,1,1,1,0,"u 'TElementPosActionF' - 11 - action",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clear",487,G__G__Matrix_162_8_7,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Matrix_162_9_7,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Matrix_162_0_8,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Matrix_162_1_8,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TVectorF::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_162_2_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVectorF::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_162_3_8,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TVectorF::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_162_4_8,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TVectorF::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_162_5_8,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_162_6_8,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_162_7_8,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_162_8_8,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_162_9_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVectorF::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_162_0_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVectorF::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_162_1_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVectorF::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_162_2_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVectorF::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TVectorF",907,G__G__Matrix_162_3_9,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVectorD(void) {
   /* TVectorD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVectorD));
   G__memfunc_setup("New_m",502,(G__InterfaceMethod)NULL,68,-1,G__defined_typename("Double_t"),0,1,1,2,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Delete_m",799,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"i - 'Int_t' 0 - size D - 'Double_t' 1 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Memcpy_m",823,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,5,1,2,0,
"D - 'Double_t' 0 - newp D - 'Double_t' 10 - oldp "
"i - 'Int_t' 0 - copySize i - 'Int_t' 0 - newSize "
"i - 'Int_t' 0 - oldSize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Allocate",805,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 0 row_lwb "
"i - 'Int_t' 0 0 init",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorD",779,G__G__Matrix_163_5_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorD",779,G__G__Matrix_163_6_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,1,5,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorD",779,G__G__Matrix_163_7_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"i - 'Int_t' 0 - lwb i - 'Int_t' 0 - upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorD",779,G__G__Matrix_163_8_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 10 - elements",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorD",779,G__G__Matrix_163_9_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,3,1,1,0,
"i - 'Int_t' 0 - lwb i - 'Int_t' 0 - upb "
"D - 'Double_t' 10 - elements",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorD",779,G__G__Matrix_163_0_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,1,1,1,0,"u 'TVectorD' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorD",779,G__G__Matrix_163_1_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,1,1,1,0,"u 'TVectorF' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorD",779,G__G__Matrix_163_2_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,1,1,1,0,"u 'TMatrixDRow_const' - 11 - mr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorD",779,G__G__Matrix_163_3_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,1,1,1,0,"u 'TMatrixDColumn_const' - 11 - mc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVectorD",779,G__G__Matrix_163_4_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,1,1,1,0,"u 'TMatrixDDiag_const' - 11 - md",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLwb",581,G__G__Matrix_163_5_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetUpb",583,G__G__Matrix_163_6_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_163_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNoElements",1306,G__G__Matrix_163_8_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_163_9_1,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_163_0_2,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Invalidate",1025,G__G__Matrix_163_1_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MakeValid",878,G__G__Matrix_163_2_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsValid",684,G__G__Matrix_163_3_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsOwner",711,G__G__Matrix_163_4_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetElements",1129,G__G__Matrix_163_5_2,121,-1,-1,0,1,1,1,0,"D - 'Double_t' 10 - elements",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Shift",510,G__G__Matrix_163_6_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"i - 'Int_t' 0 - row_shift",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_163_7_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,2,1,1,0,
"i - 'Int_t' 0 - lwb i - 'Int_t' 0 - upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_163_8_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_163_9_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TVectorD' - 11 - v",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_163_0_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,2,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_163_1_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,3,1,1,0,
"i - 'Int_t' 0 - lwb i - 'Int_t' 0 - upb "
"D - 'Double_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_163_2_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TVectorD' - 1 - v",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_163_3_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,4,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"u 'TVectorD' - 1 - target C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_163_4_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,3,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSub",598,G__G__Matrix_163_5_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,2,1,1,0,
"i - 'Int_t' 0 - row_lwb u 'TVectorD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Zero",416,G__G__Matrix_163_6_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Abs",278,G__G__Matrix_163_7_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sqr",310,G__G__Matrix_163_8_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sqrt",426,G__G__Matrix_163_9_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Invert",632,G__G__Matrix_163_0_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SelectNonZeros",1438,G__G__Matrix_163_1_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TVectorD' - 11 - select",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Norm1",461,G__G__Matrix_163_2_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Norm2Sqr",772,G__G__Matrix_163_3_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NormInf",697,G__G__Matrix_163_4_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NonZeros",830,G__G__Matrix_163_5_4,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sum",309,G__G__Matrix_163_6_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Min",292,G__G__Matrix_163_7_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Max",294,G__G__Matrix_163_8_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_163_9_4,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_163_0_5,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_163_1_5,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_163_2_5,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_163_3_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TVectorD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_163_4_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TVectorF' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_163_5_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TMatrixDRow_const' - 11 - mr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_163_6_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TMatrixDColumn_const' - 11 - mc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_163_7_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TMatrixDDiag_const' - 11 - md",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_163_8_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TMatrixDSparseRow_const' - 11 - md",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_163_9_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TMatrixDSparseDiag_const' - 11 - md",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_163_0_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_163_1_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_163_2_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_163_3_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_163_4_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TVectorD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_163_5_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TVectorD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_163_6_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_163_7_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_163_8_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TMatrixDSparse' - 11 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator==",998,G__G__Matrix_163_9_6,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator!=",970,G__G__Matrix_163_0_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator<",936,G__G__Matrix_163_1_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator<=",997,G__G__Matrix_163_2_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator>",938,G__G__Matrix_163_3_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator>=",999,G__G__Matrix_163_4_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,8,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MatchesNonZeroPattern",2158,G__G__Matrix_163_5_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 11 - select",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SomePositive",1255,G__G__Matrix_163_6_7,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 11 - select",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddSomeConstant",1511,G__G__Matrix_163_7_7,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 0 - val u 'TVectorD' - 11 - select",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Randomize",937,G__G__Matrix_163_8_7,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - alpha d - 'Double_t' 0 - beta "
"d - 'Double_t' 1 - seed",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__G__Matrix_163_9_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TElementActionD' - 11 - action",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__G__Matrix_163_0_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,1,1,1,0,"u 'TElementPosActionD' - 11 - action",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clear",487,G__G__Matrix_163_1_8,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__Matrix_163_2_8,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Matrix_163_3_8,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Matrix_163_4_8,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TVectorD::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_163_5_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVectorD::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_163_6_8,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TVectorD::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_163_7_8,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TVectorD::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_163_8_8,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_163_9_8,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_163_0_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_163_1_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_163_2_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVectorD::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_163_3_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVectorD::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_163_4_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVectorD::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_163_5_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVectorD::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TVectorD",905,G__G__Matrix_163_6_9,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixD(void) {
   /* TMatrixD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD));
   G__memfunc_setup("New_m",502,(G__InterfaceMethod)NULL,68,-1,G__defined_typename("Double_t"),0,1,1,2,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Delete_m",799,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"i - 'Int_t' 0 - size D - 'Double_t' 1 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Memcpy_m",823,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,5,1,2,0,
"D - 'Double_t' 0 - newp D - 'Double_t' 10 - oldp "
"i - 'Int_t' 0 - copySize i - 'Int_t' 0 - newSize "
"i - 'Int_t' 0 - oldSize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Allocate",805,(G__InterfaceMethod)NULL,121,-1,-1,0,6,1,2,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 0 row_lwb i - 'Int_t' 0 0 col_lwb "
"i - 'Int_t' 0 0 init i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AMultB",549,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixD' - 11 - a u 'TMatrixD' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultB",549,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixD' - 11 - a u 'TMatrixDSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultB",549,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSym' - 11 - a u 'TMatrixD' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultB",549,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSym' - 11 - a u 'TMatrixDSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AtMultB",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixD' - 11 - a u 'TMatrixD' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AtMultB",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixD' - 11 - a u 'TMatrixDSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AtMultB",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSym' - 11 - a u 'TMatrixD' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AtMultB",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSym' - 11 - a u 'TMatrixDSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultBt",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixD' - 11 - a u 'TMatrixD' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultBt",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixD' - 11 - a u 'TMatrixDSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultBt",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSym' - 11 - a u 'TMatrixD' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultBt",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSym' - 11 - a u 'TMatrixDSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_7_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_8_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_9_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,4,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_0_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,4,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"D - 'Double_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_1_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,6,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"D - 'Double_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_2_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,1,1,1,0,"u 'TMatrixD' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_3_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,1,1,1,0,"u 'TMatrixF' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_4_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,1,1,1,0,"u 'TMatrixDSym' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_5_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,1,1,1,0,"u 'TMatrixDSparse' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_6_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"i 'TMatrixDBase::EMatrixCreatorsOp1' - 0 - op u 'TMatrixD' - 11 - prototype",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_7_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,3,1,1,0,
"u 'TMatrixD' - 11 - a i 'TMatrixDBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixD' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_8_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,3,1,1,0,
"u 'TMatrixD' - 11 - a i 'TMatrixDBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixDSym' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_9_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,3,1,1,0,
"u 'TMatrixDSym' - 11 - a i 'TMatrixDBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixD' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_0_3,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,3,1,1,0,
"u 'TMatrixDSym' - 11 - a i 'TMatrixDBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixDSym' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixD",781,G__G__Matrix_171_1_3,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,1,1,1,0,"u 'TMatrixDLazy' - 11 - lazy_constructor",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_171_2_3,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_171_3_3,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_171_4_3,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_171_5_3,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_171_6_3,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_171_7_3,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRowIndexArray",1627,G__G__Matrix_171_8_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetColIndexArray",1601,G__G__Matrix_171_9_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clear",487,G__G__Matrix_171_0_4,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Use",301,G__G__Matrix_171_1_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,5,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"D - 'Double_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_171_2_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,3,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"D - 'Double_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_171_3_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixD' - 1 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_171_4_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,6,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"u 'TMatrixDBase' - 1 - target C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSub",586,G__G__Matrix_171_5_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,5,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSub",598,G__G__Matrix_171_6_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - col_lwb "
"u 'TMatrixDBase' - 11 - source",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_171_7_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_171_8_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,5,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_171_9_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_171_0_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_171_1_5,121,-1,-1,0,2,1,1,8,
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Invert",632,G__G__Matrix_171_2_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"D - 'Double_t' 0 0 det",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InvertFast",1030,G__G__Matrix_171_3_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"D - 'Double_t' 0 0 det",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Transpose",959,G__G__Matrix_171_4_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("T",84,G__G__Matrix_171_5_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Rank1Update",1056,G__G__Matrix_171_6_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,2,1,1,0,
"u 'TVectorD' - 11 - v d - 'Double_t' 0 1.0 alpha",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Rank1Update",1056,G__G__Matrix_171_7_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,3,1,1,0,
"u 'TVectorD' - 11 - v1 u 'TVectorD' - 11 - v2 "
"d - 'Double_t' 0 1.0 alpha",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NormByColumn",1221,G__G__Matrix_171_8_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,2,1,1,0,
"u 'TVectorD' - 11 - v C - 'Option_t' 10 \"D\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NormByRow",911,G__G__Matrix_171_9_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,2,1,1,0,
"u 'TVectorD' - 11 - v C - 'Option_t' 10 \"D\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Mult",418,G__G__Matrix_171_0_6,121,-1,-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - a u 'TMatrixD' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Mult",418,G__G__Matrix_171_1_6,121,-1,-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - a u 'TMatrixDSym' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Mult",418,G__G__Matrix_171_2_6,121,-1,-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - a u 'TMatrixD' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_171_3_6,100,-1,G__defined_typename("Double_t"),0,2,1,1,8,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator()",957,G__G__Matrix_171_4_6,100,-1,G__defined_typename("Double_t"),1,2,1,1,0,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_171_5_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const),-1,0,1,1,1,9,"i - 'Int_t' 0 - rown",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_171_6_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow),-1,0,1,1,1,0,"i - 'Int_t' 0 - rown",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_171_7_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_171_8_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixF' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_171_9_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_171_0_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDSparse' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_171_1_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDLazy' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_171_2_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_171_3_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_171_4_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_171_5_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_171_6_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_171_7_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_171_8_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_171_9_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_171_0_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_171_1_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_171_2_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDDiag_const' - 11 - diag",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/=",984,G__G__Matrix_171_3_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDDiag_const' - 11 - diag",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_171_4_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDRow_const' - 11 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/=",984,G__G__Matrix_171_5_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDRow_const' - 11 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_171_6_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDColumn_const' - 11 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/=",984,G__G__Matrix_171_7_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,1,1,1,0,"u 'TMatrixDColumn_const' - 11 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("EigenVectors",1230,G__G__Matrix_171_8_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,1,1,1,9,"u 'TVectorD' - 1 - eigenValues",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_171_9_8,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixD::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_171_0_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixD::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_171_1_9,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixD::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_171_2_9,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixD::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_171_3_9,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_171_4_9,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_171_5_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_171_6_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_171_7_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixD::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_171_8_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixD::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_171_9_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixD::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_171_0_10,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixD::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixD",907,G__G__Matrix_171_1_10,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDSym(void) {
   /* TMatrixDSym */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym));
   G__memfunc_setup("New_m",502,(G__InterfaceMethod)NULL,68,-1,G__defined_typename("Double_t"),0,1,1,2,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Delete_m",799,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"i - 'Int_t' 0 - size D - 'Double_t' 1 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Memcpy_m",823,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,5,1,2,0,
"D - 'Double_t' 0 - newp D - 'Double_t' 10 - oldp "
"i - 'Int_t' 0 - copySize i - 'Int_t' 0 - newSize "
"i - 'Int_t' 0 - oldSize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Allocate",805,(G__InterfaceMethod)NULL,121,-1,-1,0,6,1,2,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 0 row_lwb i - 'Int_t' 0 0 col_lwb "
"i - 'Int_t' 0 0 init i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AtMultA",664,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"u 'TMatrixD' - 11 - a i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AtMultA",664,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"u 'TMatrixDSym' - 11 - a i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultA",548,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"u 'TMatrixDSym' - 11 - a i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSym",1094,G__G__Matrix_172_8_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSym",1094,G__G__Matrix_172_9_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,1,5,1,0,"i - 'Int_t' 0 - nrows",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSym",1094,G__G__Matrix_172_0_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,2,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSym",1094,G__G__Matrix_172_1_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,3,1,1,0,
"i - 'Int_t' 0 - nrows D - 'Double_t' 10 - data "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSym",1094,G__G__Matrix_172_2_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,4,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"D - 'Double_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSym",1094,G__G__Matrix_172_3_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,1,1,1,0,"u 'TMatrixDSym' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSym",1094,G__G__Matrix_172_4_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,1,1,1,0,"u 'TMatrixFSym' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSym",1094,G__G__Matrix_172_5_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,2,1,1,0,
"i 'TMatrixDBase::EMatrixCreatorsOp1' - 0 - op u 'TMatrixDSym' - 11 - prototype",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSym",1094,G__G__Matrix_172_6_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,2,1,1,0,
"i 'TMatrixDBase::EMatrixCreatorsOp1' - 0 - op u 'TMatrixD' - 11 - prototype",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSym",1094,G__G__Matrix_172_7_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,3,1,1,0,
"u 'TMatrixDSym' - 11 - a i 'TMatrixDBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixDSym' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSym",1094,G__G__Matrix_172_8_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,1,1,1,0,"u 'TMatrixDSymLazy' - 11 - lazy_constructor",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_172_9_1,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_172_0_2,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_172_1_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_172_2_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_172_3_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_172_4_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRowIndexArray",1627,G__G__Matrix_172_5_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetColIndexArray",1601,G__G__Matrix_172_6_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clear",487,G__G__Matrix_172_7_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsSymmetric",1145,G__G__Matrix_172_8_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Use",301,G__G__Matrix_172_9_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,2,1,1,0,
"i - 'Int_t' 0 - nrows D - 'Double_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_172_0_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,3,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"D - 'Double_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_172_1_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"u 'TMatrixDSym' - 1 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_172_2_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,4,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"u 'TMatrixDSym' - 1 - target C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_172_3_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,6,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"u 'TMatrixDBase' - 1 - target C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSub",586,G__G__Matrix_172_4_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,5,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSub",598,G__G__Matrix_172_5_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,2,1,1,0,
"i - 'Int_t' 0 - row_lwb u 'TMatrixDBase' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSub",598,G__G__Matrix_172_6_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - col_lwb "
"u 'TMatrixDBase' - 11 - source",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrixArray",1440,G__G__Matrix_172_7_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,2,1,1,0,
"D - 'Double_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Shift",510,G__G__Matrix_172_8_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,2,1,1,0,
"i - 'Int_t' 0 - row_shift i - 'Int_t' 0 - col_shift",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_172_9_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_172_0_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,5,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_172_1_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_172_2_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_172_3_4,121,-1,-1,0,2,1,1,8,
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Invert",632,G__G__Matrix_172_4_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"D - 'Double_t' 0 0 det",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InvertFast",1030,G__G__Matrix_172_5_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"D - 'Double_t' 0 0 det",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Transpose",959,G__G__Matrix_172_6_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("T",84,G__G__Matrix_172_7_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Rank1Update",1056,G__G__Matrix_172_8_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,2,1,1,0,
"u 'TVectorD' - 11 - v d - 'Double_t' 0 1.0 alpha",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Similarity",1063,G__G__Matrix_172_9_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Similarity",1063,G__G__Matrix_172_0_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SimilarityT",1147,G__G__Matrix_172_1_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_172_2_5,100,-1,G__defined_typename("Double_t"),0,2,1,1,8,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator()",957,G__G__Matrix_172_3_5,100,-1,G__defined_typename("Double_t"),1,2,1,1,0,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_172_4_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const),-1,0,1,1,1,9,"i - 'Int_t' 0 - rown",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_172_5_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow),-1,0,1,1,1,0,"i - 'Int_t' 0 - rown",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_172_6_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_172_7_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_172_8_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"u 'TMatrixDSymLazy' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_172_9_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_172_0_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_172_1_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_172_2_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_172_3_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_172_4_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__G__Matrix_172_5_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"u 'TElementActionD' - 11 - action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Apply",518,G__G__Matrix_172_6_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"u 'TElementPosActionD' - 11 - action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Randomize",937,G__G__Matrix_172_7_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,3,1,1,0,
"d - 'Double_t' 0 - alpha d - 'Double_t' 0 - beta "
"d - 'Double_t' 1 - seed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RandomizePD",1085,G__G__Matrix_172_8_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,3,1,1,0,
"d - 'Double_t' 0 - alpha d - 'Double_t' 0 - beta "
"d - 'Double_t' 1 - seed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("EigenVectors",1230,G__G__Matrix_172_9_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,1,1,1,9,"u 'TVectorD' - 1 - eigenValues",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_172_0_7,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDSym::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_172_1_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSym::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_172_2_7,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDSym::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_172_3_7,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDSym::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_172_4_7,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_172_5_7,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_172_6_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_172_7_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_172_8_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSym::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_172_9_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSym::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_172_0_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSym::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_172_1_8,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSym::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDSym",1220,G__G__Matrix_172_2_8,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDSparse(void) {
   /* TMatrixDSparse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse));
   G__memfunc_setup("Allocate",805,(G__InterfaceMethod)NULL,121,-1,-1,0,6,1,2,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 0 row_lwb i - 'Int_t' 0 0 col_lwb "
"i - 'Int_t' 0 0 init i - 'Int_t' 0 0 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AMultB",549,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSparse' - 11 - a u 'TMatrixDSparse' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultB",549,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSparse' - 11 - a u 'TMatrixD' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultB",549,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixD' - 11 - a u 'TMatrixDSparse' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultBt",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSparse' - 11 - a u 'TMatrixDSparse' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultBt",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSparse' - 11 - a u 'TMatrixD' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultBt",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixD' - 11 - a u 'TMatrixDSparse' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("APlusB",551,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSparse' - 11 - a u 'TMatrixDSparse' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("APlusB",551,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSparse' - 11 - a u 'TMatrixD' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("APlusB",551,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixD' - 11 - a u 'TMatrixDSparse' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMinusB",655,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSparse' - 11 - a u 'TMatrixDSparse' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMinusB",655,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixDSparse' - 11 - a u 'TMatrixD' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMinusB",655,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixD' - 11 - a u 'TMatrixDSparse' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparse",1403,G__G__Matrix_173_4_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparse",1403,G__G__Matrix_173_5_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparse",1403,G__G__Matrix_173_6_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,4,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparse",1403,G__G__Matrix_173_7_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,8,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"i - 'Int_t' 0 - nr_nonzeros I - 'Int_t' 0 - row "
"I - 'Int_t' 0 - col D - 'Double_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparse",1403,G__G__Matrix_173_8_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,1,1,1,0,"u 'TMatrixDSparse' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparse",1403,G__G__Matrix_173_9_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,1,1,1,0,"u 'TMatrixD' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparse",1403,G__G__Matrix_173_0_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"i 'TMatrixDBase::EMatrixCreatorsOp1' - 0 - op u 'TMatrixDSparse' - 11 - prototype",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparse",1403,G__G__Matrix_173_1_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,3,1,1,0,
"u 'TMatrixDSparse' - 11 - a i 'TMatrixDBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixDSparse' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_173_2_2,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_173_3_2,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_173_4_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_173_5_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_173_6_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_173_7_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRowIndexArray",1627,G__G__Matrix_173_8_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - data",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetColIndexArray",1601,G__G__Matrix_173_9_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - data",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrix2Array",1478,G__G__Matrix_173_0_3,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 0 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrixArray",1440,G__G__Matrix_173_1_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,2,1,1,0,
"D - 'Double_t' 10 - data C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrixArray",1440,G__G__Matrix_173_2_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,4,1,1,0,
"i - 'Int_t' 0 - nr_nonzeros I - 'Int_t' 0 - irow "
"I - 'Int_t' 0 - icol D - 'Double_t' 0 - data",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetSparseIndex",1426,G__G__Matrix_173_3_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"i - 'Int_t' 0 - nelem_new",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSparseIndex",1426,G__G__Matrix_173_4_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"u 'TMatrixDBase' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSparseIndexAB",1557,G__G__Matrix_173_5_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,2,1,1,0,
"u 'TMatrixDSparse' - 11 - a u 'TMatrixDSparse' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InsertRow",941,G__G__Matrix_173_6_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,4,1,1,0,
"i - 'Int_t' 0 - row i - 'Int_t' 0 - col "
"D - 'Double_t' 10 - v i - 'Int_t' 0 -1 n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExtractRow",1043,G__G__Matrix_173_7_3,121,-1,-1,0,4,1,1,8,
"i - 'Int_t' 0 - row i - 'Int_t' 0 - col "
"D - 'Double_t' 0 - v i - 'Int_t' 0 -1 n",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_173_8_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_173_9_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,5,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_173_0_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,1,1,1,0,"u 'TMatrixDSparse' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clear",487,G__G__Matrix_173_1_4,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Use",301,G__G__Matrix_173_2_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,8,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"i - 'Int_t' 0 - nr_nonzeros I - 'Int_t' 0 - pRowIndex "
"I - 'Int_t' 0 - pColIndex D - 'Double_t' 0 - pData",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_173_3_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,6,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 - nr_nonzeros I - 'Int_t' 0 - pRowIndex "
"I - 'Int_t' 0 - pColIndex D - 'Double_t' 0 - pData",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_173_4_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"u 'TMatrixDSparse' - 1 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_173_5_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,6,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"u 'TMatrixDBase' - 1 - target C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSub",586,G__G__Matrix_173_6_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,5,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSub",598,G__G__Matrix_173_7_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - col_lwb "
"u 'TMatrixDBase' - 11 - source",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsSymmetric",1145,G__G__Matrix_173_8_4,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Transpose",959,G__G__Matrix_173_9_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"u 'TMatrixDSparse' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("T",84,G__G__Matrix_173_0_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Mult",418,G__G__Matrix_173_1_5,121,-1,-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - a u 'TMatrixDSparse' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Zero",416,G__G__Matrix_173_2_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UnitMatrix",1045,G__G__Matrix_173_3_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RowNorm",724,G__G__Matrix_173_4_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ColNorm",698,G__G__Matrix_173_5_5,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("NonZeros",830,G__G__Matrix_173_6_5,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("NormByDiag",972,G__G__Matrix_173_7_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,2,1,1,0,
"u 'TVectorD' - 11 - - C - 'Option_t' 10 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator()",957,G__G__Matrix_173_8_5,100,-1,G__defined_typename("Double_t"),0,2,1,1,8,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator()",957,G__G__Matrix_173_9_5,100,-1,G__defined_typename("Double_t"),1,2,1,1,0,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_173_0_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow_const),-1,0,1,1,1,9,"i - 'Int_t' 0 - rown",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_173_1_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow),-1,0,1,1,1,0,"i - 'Int_t' 0 - rown",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_173_2_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_173_3_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"u 'TMatrixDSparse' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_173_4_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_173_5_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_173_6_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_173_7_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_173_8_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"u 'TMatrixDSparse' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_173_9_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_173_0_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"u 'TMatrixDSparse' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_173_1_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_173_2_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"u 'TMatrixDSparse' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_173_3_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Randomize",937,G__G__Matrix_173_4_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,3,1,1,0,
"d - 'Double_t' 0 - alpha d - 'Double_t' 0 - beta "
"d - 'Double_t' 1 - seed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RandomizePD",1085,G__G__Matrix_173_5_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,3,1,1,0,
"d - 'Double_t' 0 - alpha d - 'Double_t' 0 - beta "
"d - 'Double_t' 1 - seed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__Matrix_173_6_7,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDSparse::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_173_7_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparse::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_173_8_7,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDSparse::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_173_9_7,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDSparse::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_173_0_8,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_173_1_8,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_173_2_8,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_173_3_8,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_173_4_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparse::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_173_5_8,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSparse::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_173_6_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparse::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_173_7_8,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSparse::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDSparse",1529,G__G__Matrix_173_8_8,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDRow_const(void) {
   /* TMatrixDRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const));
   G__memfunc_setup("TMatrixDRow_const",1739,G__G__Matrix_174_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDRow_const",1739,G__G__Matrix_174_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDRow_const",1739,G__G__Matrix_174_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_174_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRowIndex",1104,G__G__Matrix_174_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInc",570,G__G__Matrix_174_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_174_7_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_174_8_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_174_9_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_174_0_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDRow_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_174_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDRow_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_174_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDRow_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_174_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDRow_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_174_4_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_174_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_174_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_174_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_174_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDRow_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_174_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDRow_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_174_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDRow_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_174_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDRow_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixDRow_const",1739,G__G__Matrix_174_2_2,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const),-1,0,1,1,1,0,"u 'TMatrixDRow_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDRow_const",1865,G__G__Matrix_174_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDRow(void) {
   /* TMatrixDRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow));
   G__memfunc_setup("TMatrixDRow",1093,G__G__Matrix_175_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDRow",1093,G__G__Matrix_175_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow),-1,0,2,1,1,0,
"u 'TMatrixD' - 1 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDRow",1093,G__G__Matrix_175_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 1 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDRow",1093,G__G__Matrix_175_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow),-1,0,1,1,1,0,"u 'TMatrixDRow' - 11 - mr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_175_5_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_175_6_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_175_7_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_175_8_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_175_9_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_175_0_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_175_1_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_175_2_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_175_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDRow_const' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_175_4_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDRow' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_175_5_1,121,-1,-1,0,1,1,1,0,"u 'TVectorD' - 11 - vec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_175_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDRow_const' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_175_7_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDRow_const' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_175_8_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDRow::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_175_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDRow::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_175_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDRow::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_175_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDRow::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_175_2_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_175_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_175_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_175_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_175_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDRow::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_175_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDRow::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_175_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDRow::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_175_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDRow::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDRow",1219,G__G__Matrix_175_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDColumn_const(void) {
   /* TMatrixDColumn_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const));
   G__memfunc_setup("TMatrixDColumn_const",2049,G__G__Matrix_176_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDColumn_const",2049,G__G__Matrix_176_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - matrix i - 'Int_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDColumn_const",2049,G__G__Matrix_176_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - matrix i - 'Int_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_176_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColIndex",1078,G__G__Matrix_176_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInc",570,G__G__Matrix_176_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_176_7_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_176_8_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_176_9_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_176_0_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDColumn_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_176_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDColumn_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_176_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDColumn_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_176_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDColumn_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_176_4_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_176_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_176_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_176_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_176_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDColumn_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_176_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDColumn_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_176_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDColumn_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_176_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDColumn_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixDColumn_const",2049,G__G__Matrix_176_2_2,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const),-1,0,1,1,1,0,"u 'TMatrixDColumn_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDColumn_const",2175,G__G__Matrix_176_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDColumn(void) {
   /* TMatrixDColumn */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn));
   G__memfunc_setup("TMatrixDColumn",1403,G__G__Matrix_177_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDColumn",1403,G__G__Matrix_177_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn),-1,0,2,1,1,0,
"u 'TMatrixD' - 1 - matrix i - 'Int_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDColumn",1403,G__G__Matrix_177_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 1 - matrix i - 'Int_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDColumn",1403,G__G__Matrix_177_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn),-1,0,1,1,1,0,"u 'TMatrixDColumn' - 11 - mc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_177_5_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_177_6_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_177_7_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_177_8_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_177_9_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_177_0_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_177_1_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_177_2_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_177_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDColumn_const' - 11 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_177_4_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDColumn' - 11 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_177_5_1,121,-1,-1,0,1,1,1,0,"u 'TVectorD' - 11 - vec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_177_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDColumn_const' - 11 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_177_7_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDColumn_const' - 11 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_177_8_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDColumn::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_177_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDColumn::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_177_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDColumn::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_177_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDColumn::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_177_2_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_177_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_177_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_177_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_177_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDColumn::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_177_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDColumn::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_177_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDColumn::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_177_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDColumn::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDColumn",1529,G__G__Matrix_177_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDDiag_const(void) {
   /* TMatrixDDiag_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const));
   G__memfunc_setup("TMatrixDDiag_const",1800,G__G__Matrix_178_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDDiag_const",1800,G__G__Matrix_178_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const),-1,0,1,1,1,0,"u 'TMatrixD' - 11 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDDiag_const",1800,G__G__Matrix_178_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const),-1,0,1,1,1,0,"u 'TMatrixDSym' - 11 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_178_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_178_5_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInc",570,G__G__Matrix_178_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_178_7_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_178_8_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNdiags",886,G__G__Matrix_178_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_178_0_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDDiag_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_178_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDDiag_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_178_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDDiag_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_178_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDDiag_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_178_4_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_178_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_178_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_178_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_178_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDDiag_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_178_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDDiag_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_178_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDDiag_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_178_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDDiag_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixDDiag_const",1800,G__G__Matrix_178_2_2,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const),-1,0,1,1,1,0,"u 'TMatrixDDiag_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDDiag_const",1926,G__G__Matrix_178_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDDiag(void) {
   /* TMatrixDDiag */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag));
   G__memfunc_setup("TMatrixDDiag",1154,G__G__Matrix_179_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDDiag",1154,G__G__Matrix_179_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag),-1,0,1,1,1,0,"u 'TMatrixD' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDDiag",1154,G__G__Matrix_179_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag),-1,0,1,1,1,0,"u 'TMatrixDSym' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDDiag",1154,G__G__Matrix_179_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag),-1,0,1,1,1,0,"u 'TMatrixDDiag' - 11 - md",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_179_5_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_179_6_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_179_7_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_179_8_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_179_9_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_179_0_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_179_1_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_179_2_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_179_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDDiag_const' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_179_4_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDDiag' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_179_5_1,121,-1,-1,0,1,1,1,0,"u 'TVectorD' - 11 - vec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_179_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDDiag_const' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_179_7_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDDiag_const' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_179_8_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDDiag::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_179_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDDiag::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_179_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDDiag::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_179_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDDiag::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_179_2_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_179_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_179_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_179_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_179_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDDiag::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_179_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDDiag::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_179_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDDiag::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_179_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDDiag::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDDiag",1280,G__G__Matrix_179_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDFlat_const(void) {
   /* TMatrixDFlat_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const));
   G__memfunc_setup("TMatrixDFlat_const",1818,G__G__Matrix_180_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDFlat_const",1818,G__G__Matrix_180_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const),-1,0,1,1,1,0,"u 'TMatrixD' - 11 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDFlat_const",1818,G__G__Matrix_180_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const),-1,0,1,1,1,0,"u 'TMatrixDSym' - 11 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_180_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_180_5_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_180_6_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_180_7_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_180_8_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDFlat_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_180_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDFlat_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_180_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDFlat_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_180_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDFlat_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_180_2_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_180_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_180_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_180_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_180_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDFlat_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_180_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDFlat_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_180_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDFlat_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_180_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDFlat_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixDFlat_const",1818,G__G__Matrix_180_0_2,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const),-1,0,1,1,1,0,"u 'TMatrixDFlat_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDFlat_const",1944,G__G__Matrix_180_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDFlat(void) {
   /* TMatrixDFlat */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat));
   G__memfunc_setup("TMatrixDFlat",1172,G__G__Matrix_181_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDFlat",1172,G__G__Matrix_181_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat),-1,0,1,1,1,0,"u 'TMatrixD' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDFlat",1172,G__G__Matrix_181_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat),-1,0,1,1,1,0,"u 'TMatrixDSym' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDFlat",1172,G__G__Matrix_181_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat),-1,0,1,1,1,0,"u 'TMatrixDFlat' - 11 - mf",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_181_5_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_181_6_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_181_7_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_181_8_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_181_9_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_181_0_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_181_1_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_181_2_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_181_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDFlat_const' - 11 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_181_4_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDFlat' - 11 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_181_5_1,121,-1,-1,0,1,1,1,0,"u 'TVectorD' - 11 - vec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_181_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDFlat_const' - 11 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_181_7_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDFlat_const' - 11 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_181_8_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDFlat::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_181_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDFlat::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_181_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDFlat::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_181_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDFlat::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_181_2_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_181_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_181_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_181_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_181_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDFlat::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_181_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDFlat::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_181_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDFlat::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_181_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDFlat::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDFlat",1298,G__G__Matrix_181_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDSub_const(void) {
   /* TMatrixDSub_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const));
   G__memfunc_setup("TMatrixDSub_const",1725,G__G__Matrix_182_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSub_const",1725,G__G__Matrix_182_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const),-1,0,5,1,1,0,
"u 'TMatrixD' - 11 - matrix i - 'Int_t' 0 - row_lwb "
"i - 'Int_t' 0 - row_upb i - 'Int_t' 0 - col_lwb "
"i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSub_const",1725,G__G__Matrix_182_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const),-1,0,5,1,1,0,
"u 'TMatrixDSym' - 11 - matrix i - 'Int_t' 0 - row_lwb "
"i - 'Int_t' 0 - row_upb i - 'Int_t' 0 - col_lwb "
"i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_182_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRowOff",883,G__G__Matrix_182_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColOff",857,G__G__Matrix_182_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_182_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNcols",799,G__G__Matrix_182_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_182_9_0,100,-1,G__defined_typename("Double_t"),1,2,1,1,9,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_182_0_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDSub_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_182_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSub_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_182_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDSub_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_182_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDSub_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_182_4_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_182_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_182_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_182_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_182_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSub_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_182_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSub_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_182_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSub_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_182_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSub_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixDSub_const",1725,G__G__Matrix_182_2_2,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const),-1,0,1,1,1,0,"u 'TMatrixDSub_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDSub_const",1851,G__G__Matrix_182_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDSub(void) {
   /* TMatrixDSub */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub));
   G__memfunc_setup("TMatrixDSub",1079,G__G__Matrix_184_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSub",1079,G__G__Matrix_184_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub),-1,0,5,1,1,0,
"u 'TMatrixD' - 1 - matrix i - 'Int_t' 0 - row_lwb "
"i - 'Int_t' 0 - row_upb i - 'Int_t' 0 - col_lwb "
"i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSub",1079,G__G__Matrix_184_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub),-1,0,5,1,1,0,
"u 'TMatrixDSym' - 1 - matrix i - 'Int_t' 0 - row_lwb "
"i - 'Int_t' 0 - row_upb i - 'Int_t' 0 - col_lwb "
"i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSub",1079,G__G__Matrix_184_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub),-1,0,1,1,1,0,"u 'TMatrixDSub' - 11 - ms",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_184_5_0,100,-1,G__defined_typename("Double_t"),1,2,1,1,0,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Rank1Update",1056,G__G__Matrix_184_6_0,121,-1,-1,0,2,1,1,0,
"u 'TVectorD' - 11 - vec d - 'Double_t' 0 1.0 alpha",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_184_7_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_184_8_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_184_9_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_184_0_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSub_const' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_184_1_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSub' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_184_2_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDBase' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_184_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSub_const' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_184_4_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSub_const' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_184_5_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDBase' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_184_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixD' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_184_7_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSym' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_184_8_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDSub::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_184_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSub::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_184_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDSub::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_184_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDSub::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_184_2_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_184_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_184_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_184_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_184_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSub::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_184_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSub::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_184_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSub::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_184_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSub::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDSub",1205,G__G__Matrix_184_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDSparseRow_const(void) {
   /* TMatrixDSparseRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow_const));
   G__memfunc_setup("TMatrixDSparseRow_const",2361,G__G__Matrix_185_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparseRow_const",2361,G__G__Matrix_185_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow_const),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_185_3_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDataPtr",976,G__G__Matrix_185_4_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColPtr",884,G__G__Matrix_185_5_0,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRowIndex",1104,G__G__Matrix_185_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNindex",902,G__G__Matrix_185_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_185_8_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_185_9_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_185_0_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDSparseRow_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_185_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseRow_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_185_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDSparseRow_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_185_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDSparseRow_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_185_4_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_185_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_185_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_185_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_185_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseRow_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_185_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSparseRow_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_185_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseRow_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_185_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSparseRow_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixDSparseRow_const",2361,G__G__Matrix_185_2_2,(int)('i'),
G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow_const),-1,0,1,1,1,0,"u 'TMatrixDSparseRow_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDSparseRow_const",2487,G__G__Matrix_185_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDSparseRow(void) {
   /* TMatrixDSparseRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow));
   G__memfunc_setup("TMatrixDSparseRow",1715,G__G__Matrix_186_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparseRow",1715,G__G__Matrix_186_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 1 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparseRow",1715,G__G__Matrix_186_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow),-1,0,1,1,1,0,"u 'TMatrixDSparseRow' - 11 - mr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDataPtr",976,G__G__Matrix_186_4_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_186_5_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_186_6_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_186_7_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_186_8_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_186_9_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_186_0_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_186_1_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_186_2_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSparseRow_const' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_186_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSparseRow' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_186_4_1,121,-1,-1,0,1,1,1,0,"u 'TVectorD' - 11 - vec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_186_5_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSparseRow_const' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_186_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSparseRow_const' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_186_7_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDSparseRow::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_186_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseRow::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_186_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDSparseRow::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_186_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDSparseRow::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_186_1_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_186_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_186_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_186_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_186_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseRow::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_186_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSparseRow::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_186_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseRow::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_186_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSparseRow::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDSparseRow",1841,G__G__Matrix_186_9_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDSparseDiag_const(void) {
   /* TMatrixDSparseDiag_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag_const));
   G__memfunc_setup("TMatrixDSparseDiag_const",2422,G__G__Matrix_187_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparseDiag_const",2422,G__G__Matrix_187_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag_const),-1,0,1,1,1,0,"u 'TMatrixDSparse' - 11 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_187_3_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDataPtr",976,G__G__Matrix_187_4_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNdiags",886,G__G__Matrix_187_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_187_6_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_187_7_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_187_8_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDSparseDiag_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_187_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseDiag_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_187_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDSparseDiag_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_187_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDSparseDiag_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_187_2_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_187_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_187_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_187_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_187_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseDiag_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_187_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSparseDiag_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_187_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseDiag_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_187_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSparseDiag_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixDSparseDiag_const",2422,G__G__Matrix_187_0_2,(int)('i'),
G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag_const),-1,0,1,1,1,0,"u 'TMatrixDSparseDiag_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDSparseDiag_const",2548,G__G__Matrix_187_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDSparseDiag(void) {
   /* TMatrixDSparseDiag */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag));
   G__memfunc_setup("TMatrixDSparseDiag",1776,G__G__Matrix_188_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparseDiag",1776,G__G__Matrix_188_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag),-1,0,1,1,1,0,"u 'TMatrixDSparse' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSparseDiag",1776,G__G__Matrix_188_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag),-1,0,1,1,1,0,"u 'TMatrixDSparseDiag' - 11 - md",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDataPtr",976,G__G__Matrix_188_4_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_188_5_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_188_6_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_188_7_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,8,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_188_8_0,100,-1,G__defined_typename("Double_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_188_9_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_188_0_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_188_1_1,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_188_2_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSparseDiag_const' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_188_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSparseDiag' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_188_4_1,121,-1,-1,0,1,1,1,0,"u 'TVectorD' - 11 - vec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_188_5_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSparseDiag_const' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_188_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSparseDiag_const' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_188_7_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDSparseDiag::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_188_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseDiag::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_188_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDSparseDiag::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_188_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDSparseDiag::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_188_1_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_188_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_188_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_188_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_188_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseDiag::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_188_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSparseDiag::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_188_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSparseDiag::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_188_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSparseDiag::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDSparseDiag",1902,G__G__Matrix_188_9_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixF(void) {
   /* TMatrixF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF));
   G__memfunc_setup("New_m",502,(G__InterfaceMethod)NULL,70,-1,G__defined_typename("Float_t"),0,1,1,2,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Delete_m",799,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"i - 'Int_t' 0 - size F - 'Float_t' 1 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Memcpy_m",823,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,5,1,2,0,
"F - 'Float_t' 0 - newp F - 'Float_t' 10 - oldp "
"i - 'Int_t' 0 - copySize i - 'Int_t' 0 - newSize "
"i - 'Int_t' 0 - oldSize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Allocate",805,(G__InterfaceMethod)NULL,121,-1,-1,0,6,1,2,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 0 row_lwb i - 'Int_t' 0 0 col_lwb "
"i - 'Int_t' 0 0 init i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AMultB",549,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixF' - 11 - a u 'TMatrixF' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultB",549,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixF' - 11 - a u 'TMatrixFSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultB",549,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixFSym' - 11 - a u 'TMatrixF' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultB",549,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixFSym' - 11 - a u 'TMatrixFSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AtMultB",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixF' - 11 - a u 'TMatrixF' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AtMultB",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixF' - 11 - a u 'TMatrixFSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AtMultB",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixFSym' - 11 - a u 'TMatrixF' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AtMultB",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixFSym' - 11 - a u 'TMatrixFSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultBt",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixF' - 11 - a u 'TMatrixF' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultBt",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixF' - 11 - a u 'TMatrixFSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultBt",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixFSym' - 11 - a u 'TMatrixF' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultBt",665,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,0,
"u 'TMatrixFSym' - 11 - a u 'TMatrixFSym' - 11 - b "
"i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_7_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_8_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_9_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,4,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_0_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,4,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"F - 'Float_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_1_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,6,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"F - 'Float_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_2_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,1,1,1,0,"u 'TMatrixF' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_3_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,1,1,1,0,"u 'TMatrixD' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_4_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,1,1,1,0,"u 'TMatrixFSym' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_5_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"i 'TMatrixFBase::EMatrixCreatorsOp1' - 0 - op u 'TMatrixF' - 11 - prototype",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_6_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,3,1,1,0,
"u 'TMatrixF' - 11 - a i 'TMatrixFBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixF' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_7_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,3,1,1,0,
"u 'TMatrixF' - 11 - a i 'TMatrixFBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixFSym' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_8_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,3,1,1,0,
"u 'TMatrixFSym' - 11 - a i 'TMatrixFBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixF' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_9_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,3,1,1,0,
"u 'TMatrixFSym' - 11 - a i 'TMatrixFBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixFSym' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixF",783,G__G__Matrix_189_0_3,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,1,1,1,0,"u 'TMatrixFLazy' - 11 - lazy_constructor",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_189_1_3,70,-1,G__defined_typename("Float_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_189_2_3,70,-1,G__defined_typename("Float_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_189_3_3,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_189_4_3,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_189_5_3,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_189_6_3,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRowIndexArray",1627,G__G__Matrix_189_7_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetColIndexArray",1601,G__G__Matrix_189_8_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clear",487,G__G__Matrix_189_9_3,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Use",301,G__G__Matrix_189_0_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,5,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"F - 'Float_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_189_1_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,3,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"F - 'Float_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_189_2_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixF' - 1 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_189_3_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,6,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"u 'TMatrixFBase' - 1 - target C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSub",586,G__G__Matrix_189_4_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,5,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSub",598,G__G__Matrix_189_5_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - col_lwb "
"u 'TMatrixFBase' - 11 - source",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_189_6_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_189_7_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,5,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_189_8_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"u 'TMatrixF' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_189_9_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_189_0_5,121,-1,-1,0,2,1,1,8,
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Invert",632,G__G__Matrix_189_1_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"D - 'Double_t' 0 0 det",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InvertFast",1030,G__G__Matrix_189_2_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"D - 'Double_t' 0 0 det",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Transpose",959,G__G__Matrix_189_3_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixF' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("T",84,G__G__Matrix_189_4_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Rank1Update",1056,G__G__Matrix_189_5_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,2,1,1,0,
"u 'TVectorF' - 11 - v f - 'Float_t' 0 1.0 alpha",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Rank1Update",1056,G__G__Matrix_189_6_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,3,1,1,0,
"u 'TVectorF' - 11 - v1 u 'TVectorF' - 11 - v2 "
"f - 'Float_t' 0 1.0 alpha",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NormByColumn",1221,G__G__Matrix_189_7_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,2,1,1,0,
"u 'TVectorF' - 11 - v C - 'Option_t' 10 \"D\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("NormByRow",911,G__G__Matrix_189_8_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,2,1,1,0,
"u 'TVectorF' - 11 - v C - 'Option_t' 10 \"D\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Mult",418,G__G__Matrix_189_9_5,121,-1,-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - a u 'TMatrixF' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Mult",418,G__G__Matrix_189_0_6,121,-1,-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - a u 'TMatrixFSym' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Mult",418,G__G__Matrix_189_1_6,121,-1,-1,0,2,1,1,0,
"u 'TMatrixFSym' - 11 - a u 'TMatrixF' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_189_2_6,102,-1,G__defined_typename("Float_t"),0,2,1,1,8,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator()",957,G__G__Matrix_189_3_6,102,-1,G__defined_typename("Float_t"),1,2,1,1,0,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_189_4_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const),-1,0,1,1,1,9,"i - 'Int_t' 0 - rown",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_189_5_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow),-1,0,1,1,1,0,"i - 'Int_t' 0 - rown",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_189_6_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixF' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_189_7_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_189_8_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_189_9_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixFLazy' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_189_0_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_189_1_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_189_2_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_189_3_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_189_4_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixF' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_189_5_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_189_6_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixF' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_189_7_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_189_8_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixF' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_189_9_7,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_189_0_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixFDiag_const' - 11 - diag",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/=",984,G__G__Matrix_189_1_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixFDiag_const' - 11 - diag",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_189_2_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixFRow_const' - 11 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/=",984,G__G__Matrix_189_3_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixFRow_const' - 11 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_189_4_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixFColumn_const' - 11 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator/=",984,G__G__Matrix_189_5_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,1,1,1,0,"u 'TMatrixFColumn_const' - 11 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("EigenVectors",1230,G__G__Matrix_189_6_8,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,1,1,1,9,"u 'TVectorF' - 1 - eigenValues",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_189_7_8,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixF::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_189_8_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixF::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_189_9_8,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixF::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_189_0_9,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixF::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_189_1_9,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_189_2_9,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_189_3_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_189_4_9,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_189_5_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixF::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_189_6_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixF::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_189_7_9,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixF::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_189_8_9,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixF::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixF",909,G__G__Matrix_189_9_9,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDLazy(void) {
   /* TMatrixDLazy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDLazy));
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"u 'TMatrixDLazy' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FillIn",574,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,8,"u 'TMatrixD' - 1 - m",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowLwb",893,G__G__Matrix_190_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRowUpb",895,G__G__Matrix_190_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColLwb",867,G__G__Matrix_190_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColUpb",869,G__G__Matrix_190_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_190_1_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDLazy::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_190_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDLazy::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_190_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDLazy::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_190_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDLazy::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_190_5_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_190_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_190_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_190_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_190_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDLazy::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_190_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDLazy::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_190_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDLazy::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_190_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDLazy::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDLazy",1323,G__G__Matrix_190_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDSymLazy(void) {
   /* TMatrixDSymLazy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymLazy));
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"u 'TMatrixDSymLazy' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FillIn",574,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,8,"u 'TMatrixDSym' - 1 - m",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowLwb",893,G__G__Matrix_191_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRowUpb",895,G__G__Matrix_191_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_191_9_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDSymLazy::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_191_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSymLazy::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_191_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDSymLazy::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_191_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDSymLazy::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_191_3_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_191_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_191_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_191_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_191_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSymLazy::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_191_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSymLazy::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_191_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSymLazy::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_191_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSymLazy::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDSymLazy",1636,G__G__Matrix_191_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFSym(void) {
   /* TMatrixFSym */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym));
   G__memfunc_setup("New_m",502,(G__InterfaceMethod)NULL,70,-1,G__defined_typename("Float_t"),0,1,1,2,0,"i - 'Int_t' 0 - size",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Delete_m",799,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"i - 'Int_t' 0 - size F - 'Float_t' 1 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Memcpy_m",823,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,5,1,2,0,
"F - 'Float_t' 0 - newp F - 'Float_t' 10 - oldp "
"i - 'Int_t' 0 - copySize i - 'Int_t' 0 - newSize "
"i - 'Int_t' 0 - oldSize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Allocate",805,(G__InterfaceMethod)NULL,121,-1,-1,0,6,1,2,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 0 row_lwb i - 'Int_t' 0 0 col_lwb "
"i - 'Int_t' 0 0 init i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AtMultA",664,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"u 'TMatrixF' - 11 - a i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AtMultA",664,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"u 'TMatrixFSym' - 11 - a i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AMultA",548,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,0,
"u 'TMatrixFSym' - 11 - a i - 'Int_t' 0 1 constr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSym",1096,G__G__Matrix_192_8_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSym",1096,G__G__Matrix_192_9_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,1,5,1,0,"i - 'Int_t' 0 - nrows",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSym",1096,G__G__Matrix_192_0_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,2,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSym",1096,G__G__Matrix_192_1_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,3,1,1,0,
"i - 'Int_t' 0 - nrows F - 'Float_t' 10 - data "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSym",1096,G__G__Matrix_192_2_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,4,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"F - 'Float_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSym",1096,G__G__Matrix_192_3_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,1,1,1,0,"u 'TMatrixFSym' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSym",1096,G__G__Matrix_192_4_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,1,1,1,0,"u 'TMatrixDSym' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSym",1096,G__G__Matrix_192_5_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,2,1,1,0,
"i 'TMatrixFBase::EMatrixCreatorsOp1' - 0 - op u 'TMatrixFSym' - 11 - prototype",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSym",1096,G__G__Matrix_192_6_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,2,1,1,0,
"i 'TMatrixFBase::EMatrixCreatorsOp1' - 0 - op u 'TMatrixF' - 11 - prototype",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSym",1096,G__G__Matrix_192_7_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,3,1,1,0,
"u 'TMatrixFSym' - 11 - a i 'TMatrixFBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixFSym' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSym",1096,G__G__Matrix_192_8_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,1,1,1,0,"u 'TMatrixFSymLazy' - 11 - lazy_constructor",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_192_9_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMatrixArray",1428,G__G__Matrix_192_0_2,70,-1,G__defined_typename("Float_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_192_1_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRowIndexArray",1615,G__G__Matrix_192_2_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_192_3_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetColIndexArray",1589,G__G__Matrix_192_4_2,73,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRowIndexArray",1627,G__G__Matrix_192_5_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetColIndexArray",1601,G__G__Matrix_192_6_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Clear",487,G__G__Matrix_192_7_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsSymmetric",1145,G__G__Matrix_192_8_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Use",301,G__G__Matrix_192_9_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,2,1,1,0,
"i - 'Int_t' 0 - nrows F - 'Float_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_192_0_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,3,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"F - 'Float_t' 0 - data",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Use",301,G__G__Matrix_192_1_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"u 'TMatrixFSym' - 1 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_192_2_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,4,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"u 'TMatrixFSym' - 1 - target C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSub",586,G__G__Matrix_192_3_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,6,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"u 'TMatrixFBase' - 1 - target C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSub",586,G__G__Matrix_192_4_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,5,1,1,8,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"C - 'Option_t' 10 \"S\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSub",598,G__G__Matrix_192_5_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,2,1,1,0,
"i - 'Int_t' 0 - row_lwb u 'TMatrixFBase' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetSub",598,G__G__Matrix_192_6_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - col_lwb "
"u 'TMatrixFBase' - 11 - source",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrixArray",1440,G__G__Matrix_192_7_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,2,1,1,0,
"F - 'Float_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Shift",510,G__G__Matrix_192_8_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,2,1,1,0,
"i - 'Int_t' 0 - row_shift i - 'Int_t' 0 - col_shift",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_192_9_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,3,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_192_0_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,5,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"i - 'Int_t' 0 -1 nr_nonzeros",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ResizeTo",821,G__G__Matrix_192_1_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_192_2_4,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Determinant",1147,G__G__Matrix_192_3_4,121,-1,-1,0,2,1,1,8,
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Invert",632,G__G__Matrix_192_4_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"D - 'Double_t' 0 0 det",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InvertFast",1030,G__G__Matrix_192_5_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"D - 'Double_t' 0 0 det",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Transpose",959,G__G__Matrix_192_6_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("T",84,G__G__Matrix_192_7_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Rank1Update",1056,G__G__Matrix_192_8_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,2,1,1,0,
"u 'TVectorF' - 11 - v f - 'Float_t' 0 1.0 alpha",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Similarity",1063,G__G__Matrix_192_9_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"u 'TMatrixF' - 11 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Similarity",1063,G__G__Matrix_192_0_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SimilarityT",1147,G__G__Matrix_192_1_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"u 'TMatrixF' - 11 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_192_2_5,102,-1,G__defined_typename("Float_t"),0,2,1,1,8,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator()",957,G__G__Matrix_192_3_5,102,-1,G__defined_typename("Float_t"),1,2,1,1,0,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_192_4_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const),-1,0,1,1,1,9,"i - 'Int_t' 0 - rown",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_192_5_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow),-1,0,1,1,1,0,"i - 'Int_t' 0 - rown",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_192_6_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_192_7_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"u 'TMatrixDSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_192_8_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"u 'TMatrixFSymLazy' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_192_9_5,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_192_0_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_192_1_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_192_2_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_192_3_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator-=",982,G__G__Matrix_192_4_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,1,1,1,0,"u 'TMatrixFSym' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Apply",518,G__G__Matrix_192_5_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"u 'TElementActionF' - 11 - action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Apply",518,G__G__Matrix_192_6_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,1,1,1,0,"u 'TElementPosActionF' - 11 - action",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Randomize",937,G__G__Matrix_192_7_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,1,3,1,1,0,
"f - 'Float_t' 0 - alpha f - 'Float_t' 0 - beta "
"d - 'Double_t' 1 - seed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RandomizePD",1085,G__G__Matrix_192_8_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,3,1,1,0,
"f - 'Float_t' 0 - alpha f - 'Float_t' 0 - beta "
"d - 'Double_t' 1 - seed",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("EigenVectors",1230,G__G__Matrix_192_9_6,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,1,1,1,9,"u 'TVectorF' - 1 - eigenValues",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_192_0_7,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFSym::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_192_1_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSym::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_192_2_7,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFSym::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_192_3_7,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFSym::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_192_4_7,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_192_5_7,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_192_6_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_192_7_7,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_192_8_7,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSym::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_192_9_7,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFSym::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_192_0_8,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSym::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_192_1_8,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFSym::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFSym",1222,G__G__Matrix_192_2_8,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDecompBase(void) {
   /* TDecompBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase));
   G__memfunc_setup("ResetStatus",1159,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Hager",487,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,1,2,0,
"d - 'Double_t' 1 - est i - 'Int_t' 0 5 iter",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DiagProd",778,(G__InterfaceMethod)NULL,121,-1,-1,0,4,3,2,0,
"u 'TVectorD' - 11 - diag d - 'Double_t' 0 - tol "
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDecompMatrix",1517,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,2,9,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetTol",591,G__G__Matrix_194_7_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDet1",622,G__G__Matrix_194_8_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDet2",623,G__G__Matrix_194_9_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCondition",1223,G__G__Matrix_194_0_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_194_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetNcols",799,G__G__Matrix_194_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowLwb",893,G__G__Matrix_194_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColLwb",867,G__G__Matrix_194_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTol",603,G__G__Matrix_194_5_1,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"d - 'Double_t' 0 - tol",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Condition",935,G__G__Matrix_194_6_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Det",285,G__G__Matrix_194_7_1,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Decompose",927,G__G__Matrix_194_8_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Solve",521,G__G__Matrix_194_9_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Solve",521,G__G__Matrix_194_0_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Solve",521,G__G__Matrix_194_1_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_194_2_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_194_3_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_194_4_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("MultiSolve",1044,G__G__Matrix_194_5_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixD' - 1 - B",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Matrix_194_6_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" opt",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("operator=",937,G__G__Matrix_194_7_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase),-1,1,1,1,1,0,"u 'TDecompBase' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_194_8_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDecompBase::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_194_9_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompBase::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_194_0_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDecompBase::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_194_1_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDecompBase::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_194_2_3,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_194_3_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_194_4_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_194_5_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_194_6_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompBase::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_194_7_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompBase::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_194_8_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompBase::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_194_9_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompBase::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TDecompBase",1189,G__G__Matrix_194_0_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDecompBK(void) {
   /* TDecompBK */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK));
   G__memfunc_setup("GetDecompMatrix",1517,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,2,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TDecompBK",825,G__G__Matrix_197_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompBK",825,G__G__Matrix_197_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK),-1,0,1,5,1,0,"i - 'Int_t' 0 - nrows",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompBK",825,G__G__Matrix_197_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK),-1,0,2,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompBK",825,G__G__Matrix_197_5_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - m d - 'Double_t' 0 0.0 tol",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompBK",825,G__G__Matrix_197_6_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK),-1,0,1,1,1,0,"u 'TDecompBK' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_197_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNcols",799,G__G__Matrix_197_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetU",373,G__G__Matrix_197_9_0,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,0,1,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMatrix",929,G__G__Matrix_197_0_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSym' - 11 - a",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Decompose",927,G__G__Matrix_197_1_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_197_2_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_197_3_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_197_4_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_197_5_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_197_6_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_197_7_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Det",285,G__G__Matrix_197_8_1,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Invert",632,G__G__Matrix_197_9_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSym' - 1 - inv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Invert",632,G__G__Matrix_197_0_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Matrix_197_1_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" opt","*MENU*",(void*)NULL,1);
   G__memfunc_setup("operator=",937,G__G__Matrix_197_2_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK),-1,1,1,1,1,0,"u 'TDecompBK' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_197_3_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDecompBK::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_197_4_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompBK::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_197_5_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDecompBK::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_197_6_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDecompBK::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_197_7_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_197_8_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_197_9_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_197_0_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_197_1_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompBK::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_197_2_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompBK::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_197_3_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompBK::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_197_4_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompBK::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TDecompBK",951,G__G__Matrix_197_5_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaarMatrixD(void) {
   /* THaarMatrixD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD));
   G__memfunc_setup("FillIn",574,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,8,"u 'TMatrixD' - 1 - m",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("THaarMatrixD",1161,G__G__Matrix_198_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THaarMatrixD",1161,G__G__Matrix_198_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD),-1,0,2,1,1,0,
"i - 'Int_t' 0 - n i - 'Int_t' 0 0 no_cols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_198_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&THaarMatrixD::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_198_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THaarMatrixD::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_198_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&THaarMatrixD::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_198_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&THaarMatrixD::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_198_8_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_198_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_198_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_198_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_198_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THaarMatrixD::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_198_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THaarMatrixD::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_198_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THaarMatrixD::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_198_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THaarMatrixD::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("THaarMatrixD",1161,G__G__Matrix_198_6_1,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD),-1,0,1,1,1,0,"u 'THaarMatrixD' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~THaarMatrixD",1287,G__G__Matrix_198_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHilbertMatrixD(void) {
   /* THilbertMatrixD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD));
   G__memfunc_setup("FillIn",574,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,8,"u 'TMatrixD' - 1 - m",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("THilbertMatrixD",1495,G__G__Matrix_199_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THilbertMatrixD",1495,G__G__Matrix_199_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD),-1,0,2,1,1,0,
"i - 'Int_t' 0 - no_rows i - 'Int_t' 0 - no_cols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THilbertMatrixD",1495,G__G__Matrix_199_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD),-1,0,4,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_199_5_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&THilbertMatrixD::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_199_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixD::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_199_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&THilbertMatrixD::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_199_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&THilbertMatrixD::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_199_9_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_199_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_199_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_199_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_199_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixD::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_199_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THilbertMatrixD::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_199_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixD::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_199_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THilbertMatrixD::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("THilbertMatrixD",1495,G__G__Matrix_199_7_1,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD),-1,0,1,1,1,0,"u 'THilbertMatrixD' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~THilbertMatrixD",1621,G__G__Matrix_199_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHilbertMatrixDSym(void) {
   /* THilbertMatrixDSym */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym));
   G__memfunc_setup("FillIn",574,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,8,"u 'TMatrixDSym' - 1 - m",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("THilbertMatrixDSym",1808,G__G__Matrix_200_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THilbertMatrixDSym",1808,G__G__Matrix_200_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym),-1,0,1,1,1,0,"i - 'Int_t' 0 - no_rows",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THilbertMatrixDSym",1808,G__G__Matrix_200_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym),-1,0,2,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_200_5_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&THilbertMatrixDSym::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_200_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixDSym::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_200_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&THilbertMatrixDSym::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_200_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&THilbertMatrixDSym::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_200_9_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_200_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_200_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_200_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_200_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixDSym::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_200_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THilbertMatrixDSym::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_200_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixDSym::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_200_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THilbertMatrixDSym::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("THilbertMatrixDSym",1808,G__G__Matrix_200_7_1,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym),-1,0,1,1,1,0,"u 'THilbertMatrixDSym' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~THilbertMatrixDSym",1934,G__G__Matrix_200_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDecompSparse(void) {
   /* TDecompSparse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse));
   G__memfunc_setup("NonZerosUpperTriang",1967,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,3,2,0,"u 'TMatrixDSparse' - 11 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CopyUpperTriang",1548,(G__InterfaceMethod)NULL,121,-1,-1,0,2,3,2,0,
"u 'TMatrixDSparse' - 11 - a D - 'Double_t' 0 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InitParam",901,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InitPivot",934,(G__InterfaceMethod)NULL,121,-1,-1,0,13,3,2,0,
"i - 'Int_t' 10 - n i - 'Int_t' 10 - nz "
"u 'TArrayI' - 1 - Airn u 'TArrayI' - 1 - Aicn "
"u 'TArrayI' - 1 - Aiw u 'TArrayI' - 1 - Aikeep "
"u 'TArrayI' - 1 - Aiw1 i - 'Int_t' 1 - nsteps "
"i - 'Int_t' 10 - iflag I - 'Int_t' 0 - icntl "
"D - 'Double_t' 0 - cntl I - 'Int_t' 0 - info "
"d - 'Double_t' 1 - ops",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Factor",607,(G__InterfaceMethod)NULL,121,-1,-1,0,13,3,2,0,
"i - 'Int_t' 10 - n i - 'Int_t' 10 - nz "
"u 'TArrayI' - 1 - Airn u 'TArrayI' - 1 - Aicn "
"u 'TArrayD' - 1 - Aa u 'TArrayI' - 1 - Aiw "
"u 'TArrayI' - 1 - Aikeep i - 'Int_t' 10 - nsteps "
"i - 'Int_t' 1 - maxfrt u 'TArrayI' - 1 - Aiw1 "
"I - 'Int_t' 0 - icntl D - 'Double_t' 0 - cntl "
"I - 'Int_t' 0 - info",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Solve",521,(G__InterfaceMethod)NULL,121,-1,-1,0,10,3,2,0,
"i - 'Int_t' 10 - n u 'TArrayD' - 1 - Aa "
"u 'TArrayI' - 1 - Aiw u 'TArrayD' - 1 - Aw "
"i - 'Int_t' 10 - maxfrt u 'TVectorD' - 1 - b "
"u 'TArrayI' - 1 - Aiw1 i - 'Int_t' 10 - nsteps "
"I - 'Int_t' 0 - icntl I - 'Int_t' 0 - info",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InitPivot_sub1",1408,(G__InterfaceMethod)NULL,121,-1,-1,0,11,3,2,0,
"i - 'Int_t' 10 - n i - 'Int_t' 10 - nz "
"I - 'Int_t' 0 - irn I - 'Int_t' 0 - icn "
"I - 'Int_t' 0 - iw I - 'Int_t' 0 - ipe "
"I - 'Int_t' 0 - iq I - 'Int_t' 0 - flag "
"i - 'Int_t' 1 - iwfr I - 'Int_t' 0 - icntl "
"I - 'Int_t' 0 - info",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InitPivot_sub2",1409,(G__InterfaceMethod)NULL,121,-1,-1,0,13,3,2,0,
"i - 'Int_t' 10 - n I - 'Int_t' 0 - ipe "
"I - 'Int_t' 0 - iw i - 'Int_t' 10 - lw "
"i - 'Int_t' 1 - iwfr I - 'Int_t' 0 - nv "
"I - 'Int_t' 0 - nxt I - 'Int_t' 0 - lst "
"I - 'Int_t' 0 - ipd I - 'Int_t' 0 - flag "
"i - 'Int_t' 10 - iovflo i - 'Int_t' 1 - ncmpa "
"d - 'Double_t' 10 - fratio",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InitPivot_sub2a",1506,(G__InterfaceMethod)NULL,121,-1,-1,0,6,3,2,0,
"i - 'Int_t' 10 - n I - 'Int_t' 0 - ipe "
"I - 'Int_t' 0 - iw i - 'Int_t' 10 - lw "
"i - 'Int_t' 1 - iwfr i - 'Int_t' 1 - ncmpa",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InitPivot_sub3",1410,(G__InterfaceMethod)NULL,121,-1,-1,0,12,3,2,0,
"i - 'Int_t' 10 - n i - 'Int_t' 10 - nz "
"I - 'Int_t' 0 - irn I - 'Int_t' 0 - icn "
"I - 'Int_t' 0 - perm I - 'Int_t' 0 - iw "
"I - 'Int_t' 0 - ipe I - 'Int_t' 0 - iq "
"I - 'Int_t' 0 - flag i - 'Int_t' 1 - iwfr "
"I - 'Int_t' 0 - icntl I - 'Int_t' 0 - info",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InitPivot_sub4",1411,(G__InterfaceMethod)NULL,121,-1,-1,0,10,3,2,0,
"i - 'Int_t' 10 - n I - 'Int_t' 0 - ipe "
"I - 'Int_t' 0 - iw i - 'Int_t' 10 - lw "
"i - 'Int_t' 1 - iwfr I - 'Int_t' 0 - ips "
"I - 'Int_t' 0 - ipv I - 'Int_t' 0 - nv "
"I - 'Int_t' 0 - flag i - 'Int_t' 1 - ncmpa",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InitPivot_sub5",1412,(G__InterfaceMethod)NULL,121,-1,-1,0,9,3,2,0,
"i - 'Int_t' 10 - n I - 'Int_t' 0 - ipe "
"I - 'Int_t' 0 - nv I - 'Int_t' 0 - ips "
"I - 'Int_t' 0 - ne I - 'Int_t' 0 - na "
"I - 'Int_t' 0 - nd i - 'Int_t' 1 - nsteps "
"i - 'Int_t' 10 - nemin",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("InitPivot_sub6",1413,(G__InterfaceMethod)NULL,121,-1,-1,0,14,3,2,0,
"i - 'Int_t' 10 - n i - 'Int_t' 10 - nz "
"I - 'Int_t' 0 - irn I - 'Int_t' 0 - icn "
"I - 'Int_t' 0 - perm I - 'Int_t' 0 - na "
"I - 'Int_t' 0 - ne I - 'Int_t' 0 - nd "
"i - 'Int_t' 10 - nsteps I - 'Int_t' 0 - lstki "
"I - 'Int_t' 0 - lstkr I - 'Int_t' 0 - iw "
"I - 'Int_t' 0 - info d - 'Double_t' 1 - ops",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Factor_sub1",1081,(G__InterfaceMethod)NULL,121,-1,-1,0,13,3,2,0,
"i - 'Int_t' 10 - n i - 'Int_t' 10 - nz "
"i - 'Int_t' 1 - nz1 D - 'Double_t' 0 - a "
"i - 'Int_t' 10 - la I - 'Int_t' 0 - irn "
"I - 'Int_t' 0 - icn I - 'Int_t' 0 - iw "
"i - 'Int_t' 10 - liw I - 'Int_t' 0 - perm "
"I - 'Int_t' 0 - iw2 I - 'Int_t' 0 - icntl "
"I - 'Int_t' 0 - info",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Factor_sub2",1082,(G__InterfaceMethod)NULL,121,-1,-1,0,15,3,2,0,
"i - 'Int_t' 10 - n i - 'Int_t' 10 - nz "
"D - 'Double_t' 0 - a i - 'Int_t' 10 - la "
"I - 'Int_t' 0 - iw i - 'Int_t' 10 - liw "
"I - 'Int_t' 0 - perm I - 'Int_t' 0 - nstk "
"i - 'Int_t' 10 - nsteps i - 'Int_t' 1 - maxfrt "
"I - 'Int_t' 0 - nelim I - 'Int_t' 0 - iw2 "
"I - 'Int_t' 0 - icntl D - 'Double_t' 0 - cntl "
"I - 'Int_t' 0 - info",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Factor_sub3",1083,(G__InterfaceMethod)NULL,121,-1,-1,0,8,3,2,0,
"D - 'Double_t' 0 - a I - 'Int_t' 0 - iw "
"i - 'Int_t' 1 - j1 i - 'Int_t' 1 - j2 "
"i - 'Int_t' 10 - itop i - 'Int_t' 10 - ireal "
"i - 'Int_t' 1 - ncmpbr i - 'Int_t' 1 - ncmpbi",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Solve_sub1",995,(G__InterfaceMethod)NULL,121,-1,-1,0,9,3,2,0,
"i - 'Int_t' 10 - n D - 'Double_t' 0 - a "
"I - 'Int_t' 0 - iw D - 'Double_t' 0 - w "
"D - 'Double_t' 0 - rhs I - 'Int_t' 0 - iw2 "
"i - 'Int_t' 10 - nblk i - 'Int_t' 1 - latop "
"I - 'Int_t' 0 - icntl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Solve_sub2",996,(G__InterfaceMethod)NULL,121,-1,-1,0,9,3,2,0,
"i - 'Int_t' 10 - n D - 'Double_t' 0 - a "
"I - 'Int_t' 0 - iw D - 'Double_t' 0 - w "
"D - 'Double_t' 0 - rhs I - 'Int_t' 0 - iw2 "
"i - 'Int_t' 10 - nblk i - 'Int_t' 10 - latop "
"I - 'Int_t' 0 - icntl",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IDiag",446,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,2,3,2,0,
"i - 'Int_t' 0 - ix i - 'Int_t' 0 - iy",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IError",595,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MinRealWorkspace",1623,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MinIntWorkspace",1534,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ErrorFlag",900,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetThresholdPivoting",2077,(G__InterfaceMethod)NULL,100,-1,G__defined_typename("Double_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTreatAsZero",1396,(G__InterfaceMethod)NULL,100,-1,G__defined_typename("Double_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetThresholdPivoting",2089,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"d - 'Double_t' 0 - piv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTreatAsZero",1408,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"d - 'Double_t' 0 - tol",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDecompMatrix",1517,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,2,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TDecompSparse",1306,G__G__Matrix_210_9_2,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompSparse",1306,G__G__Matrix_210_0_3,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse),-1,0,3,1,1,0,
"i - 'Int_t' 0 - nRows i - 'Int_t' 0 - nr_nonZeros "
"i - 'Int_t' 0 - verbose",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompSparse",1306,G__G__Matrix_210_1_3,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse),-1,0,4,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - nr_nonZeros i - 'Int_t' 0 - verbose",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompSparse",1306,G__G__Matrix_210_2_3,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - a i - 'Int_t' 0 - verbose",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompSparse",1306,G__G__Matrix_210_3_3,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse),-1,0,1,1,1,0,"u 'TDecompSparse' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetVerbose",1026,G__G__Matrix_210_4_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - v",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_210_5_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNcols",799,G__G__Matrix_210_6_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrix",929,G__G__Matrix_210_7_3,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSparse' - 11 - a",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Decompose",927,G__G__Matrix_210_8_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_210_9_3,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_210_0_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_210_1_4,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_210_2_4,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_210_3_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_210_4_4,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Det",285,G__G__Matrix_210_5_4,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 1 - - d - 'Double_t' 1 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__Matrix_210_6_4,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" opt","*MENU*",(void*)NULL,1);
   G__memfunc_setup("operator=",937,G__G__Matrix_210_7_4,117,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse),-1,1,1,1,1,0,"u 'TDecompSparse' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_210_8_4,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDecompSparse::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_210_9_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompSparse::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_210_0_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDecompSparse::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_210_1_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDecompSparse::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_210_2_5,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_210_3_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_210_4_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_210_5_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_210_6_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompSparse::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_210_7_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompSparse::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_210_8_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompSparse::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_210_9_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompSparse::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TDecompSparse",1432,G__G__Matrix_210_0_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFRow_const(void) {
   /* TMatrixFRow_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const));
   G__memfunc_setup("TMatrixFRow_const",1741,G__G__Matrix_211_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFRow_const",1741,G__G__Matrix_211_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFRow_const",1741,G__G__Matrix_211_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 11 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_211_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRowIndex",1104,G__G__Matrix_211_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInc",570,G__G__Matrix_211_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_211_7_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_211_8_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_211_9_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_211_0_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFRow_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_211_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFRow_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_211_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFRow_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_211_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFRow_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_211_4_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_211_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_211_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_211_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_211_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFRow_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_211_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFRow_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_211_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFRow_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_211_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFRow_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixFRow_const",1741,G__G__Matrix_211_2_2,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const),-1,0,1,1,1,0,"u 'TMatrixFRow_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFRow_const",1867,G__G__Matrix_211_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFRow(void) {
   /* TMatrixFRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow));
   G__memfunc_setup("TMatrixFRow",1095,G__G__Matrix_212_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFRow",1095,G__G__Matrix_212_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow),-1,0,2,1,1,0,
"u 'TMatrixF' - 1 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFRow",1095,G__G__Matrix_212_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 1 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFRow",1095,G__G__Matrix_212_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow),-1,0,1,1,1,0,"u 'TMatrixFRow' - 11 - mr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_212_5_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_212_6_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_212_7_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_212_8_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_212_9_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_212_0_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_212_1_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_212_2_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_212_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFRow_const' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_212_4_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFRow' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_212_5_1,121,-1,-1,0,1,1,1,0,"u 'TVectorF' - 11 - vec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_212_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFRow_const' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_212_7_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFRow_const' - 11 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_212_8_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFRow::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_212_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFRow::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_212_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFRow::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_212_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFRow::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_212_2_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_212_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_212_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_212_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_212_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFRow::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_212_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFRow::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_212_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFRow::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_212_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFRow::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFRow",1221,G__G__Matrix_212_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFColumn_const(void) {
   /* TMatrixFColumn_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const));
   G__memfunc_setup("TMatrixFColumn_const",2051,G__G__Matrix_213_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFColumn_const",2051,G__G__Matrix_213_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - matrix i - 'Int_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFColumn_const",2051,G__G__Matrix_213_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 11 - matrix i - 'Int_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_213_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColIndex",1078,G__G__Matrix_213_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInc",570,G__G__Matrix_213_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_213_7_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_213_8_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_213_9_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_213_0_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFColumn_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_213_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFColumn_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_213_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFColumn_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_213_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFColumn_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_213_4_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_213_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_213_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_213_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_213_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFColumn_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_213_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFColumn_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_213_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFColumn_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_213_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFColumn_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixFColumn_const",2051,G__G__Matrix_213_2_2,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const),-1,0,1,1,1,0,"u 'TMatrixFColumn_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFColumn_const",2177,G__G__Matrix_213_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFColumn(void) {
   /* TMatrixFColumn */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn));
   G__memfunc_setup("TMatrixFColumn",1405,G__G__Matrix_214_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFColumn",1405,G__G__Matrix_214_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn),-1,0,2,1,1,0,
"u 'TMatrixF' - 1 - matrix i - 'Int_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFColumn",1405,G__G__Matrix_214_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 1 - matrix i - 'Int_t' 0 - col",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFColumn",1405,G__G__Matrix_214_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn),-1,0,1,1,1,0,"u 'TMatrixFColumn' - 11 - mc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_214_5_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_214_6_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_214_7_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_214_8_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_214_9_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_214_0_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_214_1_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_214_2_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_214_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFColumn_const' - 11 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_214_4_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFColumn' - 11 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_214_5_1,121,-1,-1,0,1,1,1,0,"u 'TVectorF' - 11 - vec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_214_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFColumn_const' - 11 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_214_7_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFColumn_const' - 11 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_214_8_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFColumn::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_214_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFColumn::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_214_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFColumn::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_214_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFColumn::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_214_2_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_214_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_214_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_214_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_214_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFColumn::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_214_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFColumn::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_214_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFColumn::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_214_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFColumn::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFColumn",1531,G__G__Matrix_214_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFDiag_const(void) {
   /* TMatrixFDiag_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const));
   G__memfunc_setup("TMatrixFDiag_const",1802,G__G__Matrix_215_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFDiag_const",1802,G__G__Matrix_215_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const),-1,0,1,1,1,0,"u 'TMatrixF' - 11 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFDiag_const",1802,G__G__Matrix_215_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const),-1,0,1,1,1,0,"u 'TMatrixFSym' - 11 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_215_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_215_5_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetInc",570,G__G__Matrix_215_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_215_7_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_215_8_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNdiags",886,G__G__Matrix_215_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_215_0_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFDiag_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_215_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFDiag_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_215_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFDiag_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_215_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFDiag_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_215_4_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_215_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_215_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_215_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_215_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFDiag_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_215_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFDiag_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_215_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFDiag_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_215_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFDiag_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixFDiag_const",1802,G__G__Matrix_215_2_2,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const),-1,0,1,1,1,0,"u 'TMatrixFDiag_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFDiag_const",1928,G__G__Matrix_215_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFDiag(void) {
   /* TMatrixFDiag */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag));
   G__memfunc_setup("TMatrixFDiag",1156,G__G__Matrix_216_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFDiag",1156,G__G__Matrix_216_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag),-1,0,1,1,1,0,"u 'TMatrixF' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFDiag",1156,G__G__Matrix_216_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag),-1,0,1,1,1,0,"u 'TMatrixFSym' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFDiag",1156,G__G__Matrix_216_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag),-1,0,1,1,1,0,"u 'TMatrixFDiag' - 11 - md",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_216_5_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_216_6_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_216_7_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_216_8_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_216_9_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_216_0_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_216_1_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_216_2_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_216_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFDiag_const' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_216_4_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFDiag' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_216_5_1,121,-1,-1,0,1,1,1,0,"u 'TVectorF' - 11 - vec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_216_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFDiag_const' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_216_7_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFDiag_const' - 11 - d",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_216_8_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFDiag::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_216_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFDiag::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_216_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFDiag::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_216_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFDiag::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_216_2_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_216_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_216_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_216_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_216_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFDiag::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_216_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFDiag::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_216_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFDiag::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_216_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFDiag::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFDiag",1282,G__G__Matrix_216_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFFlat_const(void) {
   /* TMatrixFFlat_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const));
   G__memfunc_setup("TMatrixFFlat_const",1820,G__G__Matrix_217_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFFlat_const",1820,G__G__Matrix_217_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const),-1,0,1,1,1,0,"u 'TMatrixF' - 11 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFFlat_const",1820,G__G__Matrix_217_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const),-1,0,1,1,1,0,"u 'TMatrixFSym' - 11 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_217_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_217_5_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_217_6_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_217_7_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_217_8_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFFlat_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_217_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFFlat_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_217_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFFlat_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_217_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFFlat_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_217_2_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_217_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_217_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_217_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_217_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFFlat_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_217_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFFlat_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_217_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFFlat_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_217_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFFlat_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixFFlat_const",1820,G__G__Matrix_217_0_2,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const),-1,0,1,1,1,0,"u 'TMatrixFFlat_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFFlat_const",1946,G__G__Matrix_217_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFFlat(void) {
   /* TMatrixFFlat */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat));
   G__memfunc_setup("TMatrixFFlat",1174,G__G__Matrix_218_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFFlat",1174,G__G__Matrix_218_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat),-1,0,1,1,1,0,"u 'TMatrixF' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFFlat",1174,G__G__Matrix_218_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat),-1,0,1,1,1,0,"u 'TMatrixFSym' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFFlat",1174,G__G__Matrix_218_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat),-1,0,1,1,1,0,"u 'TMatrixFFlat' - 11 - mf",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPtr",598,G__G__Matrix_218_5_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_218_6_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_218_7_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_218_8_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,9,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator[]",1060,G__G__Matrix_218_9_0,102,-1,G__defined_typename("Float_t"),1,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_218_0_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_218_1_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_218_2_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_218_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFFlat_const' - 11 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_218_4_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFFlat' - 11 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_218_5_1,121,-1,-1,0,1,1,1,0,"u 'TVectorF' - 11 - vec",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_218_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFFlat_const' - 11 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_218_7_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFFlat_const' - 11 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_218_8_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFFlat::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_218_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFFlat::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_218_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFFlat::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_218_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFFlat::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_218_2_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_218_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_218_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_218_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_218_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFFlat::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_218_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFFlat::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_218_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFFlat::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_218_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFFlat::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFFlat",1300,G__G__Matrix_218_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFSub_const(void) {
   /* TMatrixFSub_const */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const));
   G__memfunc_setup("TMatrixFSub_const",1727,G__G__Matrix_219_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSub_const",1727,G__G__Matrix_219_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const),-1,0,5,1,1,0,
"u 'TMatrixF' - 11 - matrix i - 'Int_t' 0 - row_lwb "
"i - 'Int_t' 0 - row_upb i - 'Int_t' 0 - col_lwb "
"i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSub_const",1727,G__G__Matrix_219_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const),-1,0,5,1,1,0,
"u 'TMatrixFSym' - 11 - matrix i - 'Int_t' 0 - row_lwb "
"i - 'Int_t' 0 - row_upb i - 'Int_t' 0 - col_lwb "
"i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_219_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRowOff",883,G__G__Matrix_219_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColOff",857,G__G__Matrix_219_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_219_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNcols",799,G__G__Matrix_219_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_219_9_0,102,-1,G__defined_typename("Float_t"),1,2,1,1,9,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_219_0_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFSub_const::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_219_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSub_const::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_219_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFSub_const::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_219_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFSub_const::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_219_4_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_219_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_219_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_219_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_219_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSub_const::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_219_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFSub_const::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_219_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSub_const::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_219_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFSub_const::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixFSub_const",1727,G__G__Matrix_219_2_2,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const),-1,0,1,1,1,0,"u 'TMatrixFSub_const' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFSub_const",1853,G__G__Matrix_219_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFSub(void) {
   /* TMatrixFSub */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub));
   G__memfunc_setup("TMatrixFSub",1081,G__G__Matrix_221_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSub",1081,G__G__Matrix_221_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub),-1,0,5,1,1,0,
"u 'TMatrixF' - 1 - matrix i - 'Int_t' 0 - row_lwb "
"i - 'Int_t' 0 - row_upb i - 'Int_t' 0 - col_lwb "
"i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSub",1081,G__G__Matrix_221_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub),-1,0,5,1,1,0,
"u 'TMatrixFSym' - 1 - matrix i - 'Int_t' 0 - row_lwb "
"i - 'Int_t' 0 - row_upb i - 'Int_t' 0 - col_lwb "
"i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFSub",1081,G__G__Matrix_221_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub),-1,0,1,1,1,0,"u 'TMatrixFSub' - 11 - ms",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator()",957,G__G__Matrix_221_5_0,102,-1,G__defined_typename("Float_t"),1,2,1,1,0,
"i - 'Int_t' 0 - rown i - 'Int_t' 0 - coln",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Rank1Update",1056,G__G__Matrix_221_6_0,121,-1,-1,0,2,1,1,0,
"u 'TVectorF' - 11 - vec f - 'Float_t' 0 1.0 alpha",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_221_7_0,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_221_8_0,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_221_9_0,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_221_0_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFSub_const' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_221_1_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFSub' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_221_2_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFBase' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_221_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFSub_const' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_221_4_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFSub_const' - 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator+=",980,G__G__Matrix_221_5_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFBase' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_221_6_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixF' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator*=",979,G__G__Matrix_221_7_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixFSym' - 11 - m",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_221_8_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFSub::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_221_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSub::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_221_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFSub::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_221_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFSub::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_221_2_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_221_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_221_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_221_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_221_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSub::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_221_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFSub::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_221_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSub::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_221_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFSub::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFSub",1207,G__G__Matrix_221_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixRow(void) {
   /* TMatrixRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow));
   G__memfunc_setup("TMatrixRow",1025,G__G__Matrix_222_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixRow",1025,G__G__Matrix_222_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow),-1,0,2,1,1,0,
"u 'TMatrixF' - 1 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixRow",1025,G__G__Matrix_222_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 1 - matrix i - 'Int_t' 0 - row",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixRow",1025,G__G__Matrix_222_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow),-1,0,1,1,1,0,"u 'TMatrixFRow' - 11 - mr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_222_5_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixRow::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_222_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixRow::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_222_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixRow::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_222_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixRow::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_222_9_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_222_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_222_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_222_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_222_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixRow::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_222_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixRow::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_222_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixRow::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_222_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixRow::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixRow",1025,G__G__Matrix_222_7_1,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow),-1,0,1,1,1,0,"u 'TMatrixRow' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixRow",1151,G__G__Matrix_222_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixColumn(void) {
   /* TMatrixColumn */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn));
   G__memfunc_setup("TMatrixColumn",1335,G__G__Matrix_223_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixColumn",1335,G__G__Matrix_223_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn),-1,0,2,1,1,0,
"u 'TMatrixF' - 1 - matrix i - 'Int_t' 0 - column",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixColumn",1335,G__G__Matrix_223_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 1 - matrix i - 'Int_t' 0 - column",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixColumn",1335,G__G__Matrix_223_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn),-1,0,1,1,1,0,"u 'TMatrixFColumn' - 11 - mc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_223_5_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixColumn::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_223_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixColumn::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_223_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixColumn::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_223_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixColumn::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_223_9_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_223_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_223_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_223_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_223_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixColumn::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_223_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixColumn::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_223_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixColumn::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_223_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixColumn::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixColumn",1335,G__G__Matrix_223_7_1,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn),-1,0,1,1,1,0,"u 'TMatrixColumn' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixColumn",1461,G__G__Matrix_223_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDiag(void) {
   /* TMatrixDiag */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag));
   G__memfunc_setup("TMatrixDiag",1086,G__G__Matrix_224_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDiag",1086,G__G__Matrix_224_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag),-1,0,1,1,1,0,"u 'TMatrixF' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDiag",1086,G__G__Matrix_224_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag),-1,0,1,1,1,0,"u 'TMatrixFSym' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDiag",1086,G__G__Matrix_224_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag),-1,0,1,1,1,0,"u 'TMatrixFDiag' - 11 - md",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_224_5_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDiag::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_224_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDiag::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_224_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDiag::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_224_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDiag::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_224_9_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_224_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_224_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_224_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_224_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDiag::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_224_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDiag::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_224_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDiag::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_224_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDiag::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixDiag",1086,G__G__Matrix_224_7_1,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag),-1,0,1,1,1,0,"u 'TMatrixDiag' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDiag",1212,G__G__Matrix_224_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFlat(void) {
   /* TMatrixFlat */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat));
   G__memfunc_setup("TMatrixFlat",1104,G__G__Matrix_225_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFlat",1104,G__G__Matrix_225_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat),-1,0,1,1,1,0,"u 'TMatrixF' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFlat",1104,G__G__Matrix_225_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat),-1,0,1,1,1,0,"u 'TMatrixFSym' - 1 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixFlat",1104,G__G__Matrix_225_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat),-1,0,1,1,1,0,"u 'TMatrixFFlat' - 11 - mf",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_225_5_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFlat::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_225_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFlat::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_225_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFlat::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_225_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFlat::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_225_9_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_225_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_225_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_225_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_225_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFlat::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_225_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFlat::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_225_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFlat::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_225_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFlat::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrixFlat",1104,G__G__Matrix_225_7_1,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat),-1,0,1,1,1,0,"u 'TMatrixFlat' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFlat",1230,G__G__Matrix_225_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFLazy(void) {
   /* TMatrixFLazy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFLazy));
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"u 'TMatrixFLazy' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FillIn",574,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,8,"u 'TMatrixF' - 1 - m",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowLwb",893,G__G__Matrix_226_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRowUpb",895,G__G__Matrix_226_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColLwb",867,G__G__Matrix_226_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetColUpb",869,G__G__Matrix_226_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_226_1_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFLazy::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_226_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFLazy::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_226_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFLazy::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_226_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFLazy::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_226_5_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_226_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_226_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_226_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_226_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFLazy::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_226_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFLazy::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_226_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFLazy::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_226_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFLazy::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFLazy",1325,G__G__Matrix_226_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrix(void) {
   /* TMatrix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrix));
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,2,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,4,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,4,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols "
"F - 'Float_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_5_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,6,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb "
"F - 'Float_t' 10 - data C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_6_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,1,1,1,0,"u 'TMatrixF' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_7_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,1,1,1,0,"u 'TMatrixD' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_8_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,1,1,1,0,"u 'TMatrixFSym' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_9_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,2,1,1,0,
"i 'TMatrixFBase::EMatrixCreatorsOp1' - 0 - op u 'TMatrixF' - 11 - prototype",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_0_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,3,1,1,0,
"u 'TMatrixF' - 11 - a i 'TMatrixFBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixF' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_1_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,3,1,1,0,
"u 'TMatrixF' - 11 - a i 'TMatrixFBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixFSym' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_2_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,3,1,1,0,
"u 'TMatrixFSym' - 11 - a i 'TMatrixFBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixF' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_3_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,3,1,1,0,
"u 'TMatrixFSym' - 11 - a i 'TMatrixFBase::EMatrixCreatorsOp2' - 0 - op "
"u 'TMatrixFSym' - 11 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_4_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,1,1,1,0,"u 'TMatrixFLazy' - 11 - lazy_constructor",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_227_5_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrix::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_227_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrix::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_227_7_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrix::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_227_8_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrix::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_227_9_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_227_0_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_227_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_227_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_227_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrix::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_227_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrix::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_227_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrix::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_227_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrix::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMatrix",713,G__G__Matrix_227_7_2,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,0,1,1,1,0,"u 'TMatrix' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMatrix",839,G__G__Matrix_227_8_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Matrix_227_9_2,(int)('u'),G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),-1,1,1,1,1,0,"u 'TMatrix' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDecompQRH(void) {
   /* TDecompQRH */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH));
   G__memfunc_setup("QRH",235,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,5,3,2,0,
"u 'TMatrixD' - 1 - q u 'TVectorD' - 1 - diagR "
"u 'TVectorD' - 1 - up u 'TVectorD' - 1 - w "
"d - 'Double_t' 0 - tol",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDecompMatrix",1517,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,2,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TDecompQRH",919,G__G__Matrix_228_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompQRH",919,G__G__Matrix_228_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH),-1,0,2,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompQRH",919,G__G__Matrix_228_5_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH),-1,0,4,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompQRH",919,G__G__Matrix_228_6_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - m d - 'Double_t' 0 0.0 tol","be careful for slicing in operator=",(void*)NULL,0);
   G__memfunc_setup("TDecompQRH",919,G__G__Matrix_228_7_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH),-1,0,1,1,1,0,"u 'TDecompQRH' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_228_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNcols",799,G__G__Matrix_228_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetQ",369,G__G__Matrix_228_0_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,0,1,1,1,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetR",370,G__G__Matrix_228_1_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,0,1,1,1,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetUp",485,G__G__Matrix_228_2_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,0,1,1,1,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetW",375,G__G__Matrix_228_3_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,0,1,1,1,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrix",929,G__G__Matrix_228_4_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixD' - 11 - a",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Decompose",927,G__G__Matrix_228_5_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_228_6_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_228_7_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_228_8_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_228_9_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_228_0_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_228_1_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Det",285,G__G__Matrix_228_2_2,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Invert",632,G__G__Matrix_228_3_2,121,-1,-1,0,1,1,1,0,"u 'TMatrixD' - 1 - inv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Invert",632,G__G__Matrix_228_4_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Matrix_228_5_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" opt","*MENU*",(void*)NULL,1);
   G__memfunc_setup("operator=",937,G__G__Matrix_228_6_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH),-1,1,1,1,1,0,"u 'TDecompQRH' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_228_7_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDecompQRH::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_228_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompQRH::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_228_9_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDecompQRH::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_228_0_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDecompQRH::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_228_1_3,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_228_2_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_228_3_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_228_4_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_228_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompQRH::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_228_6_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompQRH::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_228_7_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompQRH::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_228_8_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompQRH::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TDecompQRH",1045,G__G__Matrix_228_9_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDecompLU(void) {
   /* TDecompLU */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU));
   G__memfunc_setup("DecomposeLUCrout",1613,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,5,3,2,0,
"u 'TMatrixD' - 1 - lu I - 'Int_t' 0 - index "
"d - 'Double_t' 1 - sign d - 'Double_t' 0 - tol "
"i - 'Int_t' 1 - nrZeros",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DecomposeLUGauss",1603,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,5,3,2,0,
"u 'TMatrixD' - 1 - lu I - 'Int_t' 0 - index "
"d - 'Double_t' 1 - sign d - 'Double_t' 0 - tol "
"i - 'Int_t' 1 - nrZeros",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDecompMatrix",1517,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,2,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TDecompLU",845,G__G__Matrix_230_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompLU",845,G__G__Matrix_230_5_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU),-1,0,1,5,1,0,"i - 'Int_t' 0 - nrows",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompLU",845,G__G__Matrix_230_6_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU),-1,0,2,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompLU",845,G__G__Matrix_230_7_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU),-1,0,3,1,1,0,
"u 'TMatrixD' - 11 - m d - 'Double_t' 0 0.0 tol "
"i - 'Int_t' 0 1 implicit",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompLU",845,G__G__Matrix_230_8_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU),-1,0,1,1,1,0,"u 'TDecompLU' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_230_9_0,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_230_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNcols",799,G__G__Matrix_230_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLU",449,G__G__Matrix_230_2_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,0,1,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMatrix",929,G__G__Matrix_230_3_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixD' - 11 - a",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Decompose",927,G__G__Matrix_230_4_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_230_5_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_230_6_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_230_7_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_230_8_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_230_9_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_230_0_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Det",285,G__G__Matrix_230_1_2,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("InvertLU",793,G__G__Matrix_230_2_2,103,-1,G__defined_typename("Bool_t"),0,3,3,1,0,
"u 'TMatrixD' - 1 - a d - 'Double_t' 0 - tol "
"D - 'Double_t' 0 0 det",(char*)NULL,(void*)(Bool_t (*)(TMatrixD&,Double_t,Double_t*))(&TDecompLU::InvertLU),0);
   G__memfunc_setup("Invert",632,G__G__Matrix_230_3_2,121,-1,-1,0,1,1,1,0,"u 'TMatrixD' - 1 - inv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Invert",632,G__G__Matrix_230_4_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Matrix_230_5_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" opt","*MENU*",(void*)NULL,1);
   G__memfunc_setup("operator=",937,G__G__Matrix_230_6_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU),-1,1,1,1,1,0,"u 'TDecompLU' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_230_7_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDecompLU::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_230_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompLU::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_230_9_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDecompLU::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_230_0_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDecompLU::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_230_1_3,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_230_2_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_230_3_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_230_4_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_230_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompLU::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_230_6_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompLU::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_230_7_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompLU::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_230_8_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompLU::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TDecompLU",971,G__G__Matrix_230_9_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDEigen(void) {
   /* TMatrixDEigen */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigen));
   G__memfunc_setup("MakeHessenBerg",1380,(G__InterfaceMethod)NULL,121,-1,-1,0,3,3,2,0,
"u 'TMatrixD' - 1 - v u 'TVectorD' - 1 - ortho "
"u 'TMatrixD' - 1 - H",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MakeSchurr",1013,(G__InterfaceMethod)NULL,121,-1,-1,0,4,3,2,0,
"u 'TMatrixD' - 1 - v u 'TVectorD' - 1 - d "
"u 'TVectorD' - 1 - e u 'TMatrixD' - 1 - H",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sort",424,(G__InterfaceMethod)NULL,121,-1,-1,0,3,3,2,0,
"u 'TMatrixD' - 1 - v u 'TVectorD' - 1 - d "
"u 'TVectorD' - 1 - e",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDEigen",1269,G__G__Matrix_231_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigen),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDEigen",1269,G__G__Matrix_231_5_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigen),-1,0,1,1,1,0,"u 'TMatrixD' - 11 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDEigen",1269,G__G__Matrix_231_6_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigen),-1,0,1,1,1,0,"u 'TMatrixDEigen' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEigenVectors",1518,G__G__Matrix_231_7_0,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEigenValuesRe",1583,G__G__Matrix_231_8_0,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEigenValuesIm",1582,G__G__Matrix_231_9_0,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEigenValues",1400,G__G__Matrix_231_0_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_231_1_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigen),-1,1,1,1,1,0,"u 'TMatrixDEigen' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_231_2_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDEigen::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_231_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDEigen::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_231_4_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDEigen::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_231_5_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDEigen::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_231_6_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_231_7_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_231_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_231_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_231_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDEigen::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_231_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDEigen::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_231_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDEigen::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_231_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDEigen::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDEigen",1395,G__G__Matrix_231_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDecompChol(void) {
   /* TDecompChol */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol));
   G__memfunc_setup("GetDecompMatrix",1517,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,2,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TDecompChol",1074,G__G__Matrix_233_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompChol",1074,G__G__Matrix_233_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol),-1,0,1,5,1,0,"i - 'Int_t' 0 - nrows",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompChol",1074,G__G__Matrix_233_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol),-1,0,2,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompChol",1074,G__G__Matrix_233_5_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - a d - 'Double_t' 0 0.0 tol",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompChol",1074,G__G__Matrix_233_6_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - a d - 'Double_t' 0 0.0 tol",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompChol",1074,G__G__Matrix_233_7_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol),-1,0,1,1,1,0,"u 'TDecompChol' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_233_8_0,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_233_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNcols",799,G__G__Matrix_233_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetU",373,G__G__Matrix_233_1_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMatrix",929,G__G__Matrix_233_2_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSym' - 11 - a",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Decompose",927,G__G__Matrix_233_3_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_233_4_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_233_5_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_233_6_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_233_7_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_233_8_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_233_9_1,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Det",285,G__G__Matrix_233_0_2,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Invert",632,G__G__Matrix_233_1_2,121,-1,-1,0,1,1,1,0,"u 'TMatrixDSym' - 1 - inv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Invert",632,G__G__Matrix_233_2_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Matrix_233_3_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" opt","*MENU*",(void*)NULL,1);
   G__memfunc_setup("operator=",937,G__G__Matrix_233_4_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol),-1,1,1,1,1,0,"u 'TDecompChol' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_233_5_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDecompChol::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_233_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompChol::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_233_7_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDecompChol::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_233_8_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDecompChol::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_233_9_2,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_233_0_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_233_1_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_233_2_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_233_3_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompChol::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_233_4_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompChol::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_233_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompChol::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_233_6_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompChol::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TDecompChol",1200,G__G__Matrix_233_7_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixFSymLazy(void) {
   /* TMatrixFSymLazy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSymLazy));
   G__memfunc_setup("operator=",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,0,"u 'TMatrixFSymLazy' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FillIn",574,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,8,"u 'TMatrixFSym' - 1 - m",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetRowLwb",893,G__G__Matrix_234_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRowUpb",895,G__G__Matrix_234_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_234_9_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixFSymLazy::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_234_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSymLazy::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_234_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixFSymLazy::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_234_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixFSymLazy::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_234_3_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_234_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_234_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_234_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_234_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSymLazy::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_234_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFSymLazy::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_234_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixFSymLazy::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_234_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixFSymLazy::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixFSymLazy",1638,G__G__Matrix_234_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVector(void) {
   /* TVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVector));
   G__memfunc_setup("TVector",711,G__G__Matrix_236_1_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVector",711,G__G__Matrix_236_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,0,1,5,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVector",711,G__G__Matrix_236_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,0,2,1,1,0,
"i - 'Int_t' 0 - lwb i - 'Int_t' 0 - upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVector",711,G__G__Matrix_236_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,0,2,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 10 - elements",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVector",711,G__G__Matrix_236_5_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,0,3,1,1,0,
"i - 'Int_t' 0 - lwb i - 'Int_t' 0 - upb "
"F - 'Float_t' 10 - elements",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVector",711,G__G__Matrix_236_6_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,0,1,1,1,0,"u 'TVectorF' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVector",711,G__G__Matrix_236_7_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,0,1,1,1,0,"u 'TVectorD' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVector",711,G__G__Matrix_236_8_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,0,1,1,1,0,"u 'TVector' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVector",711,G__G__Matrix_236_9_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,0,1,1,1,0,"u 'TMatrixFRow_const' - 11 - mr",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVector",711,G__G__Matrix_236_0_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,0,1,1,1,0,"u 'TMatrixFColumn_const' - 11 - mc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TVector",711,G__G__Matrix_236_1_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,0,1,1,1,0,"u 'TMatrixFDiag_const' - 11 - md",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_236_2_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TVector::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_236_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVector::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_236_4_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TVector::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_236_5_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TVector::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_236_6_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_236_7_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_236_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_236_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_236_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVector::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_236_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVector::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_236_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TVector::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_236_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TVector::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TVector",837,G__G__Matrix_236_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__Matrix_236_5_2,(int)('u'),G__get_linked_tagnum(&G__G__MatrixLN_TVector),-1,1,1,1,1,0,"u 'TVector' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDecompSVD(void) {
   /* TDecompSVD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD));
   G__memfunc_setup("Bidiagonalize",1330,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,4,3,2,0,
"u 'TMatrixD' - 1 - v u 'TMatrixD' - 1 - u "
"u 'TVectorD' - 1 - sDiag u 'TVectorD' - 1 - oDiag",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Diagonalize",1127,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,4,3,2,0,
"u 'TMatrixD' - 1 - v u 'TMatrixD' - 1 - u "
"u 'TVectorD' - 1 - sDiag u 'TVectorD' - 1 - oDiag",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Diag_1",517,(G__InterfaceMethod)NULL,121,-1,-1,0,4,3,2,0,
"u 'TMatrixD' - 1 - v u 'TVectorD' - 1 - sDiag "
"u 'TVectorD' - 1 - oDiag i - 'Int_t' 0 - k",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Diag_2",518,(G__InterfaceMethod)NULL,121,-1,-1,0,4,3,2,0,
"u 'TVectorD' - 1 - sDiag u 'TVectorD' - 1 - oDiag "
"i - 'Int_t' 0 - k i - 'Int_t' 0 - l",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Diag_3",519,(G__InterfaceMethod)NULL,121,-1,-1,0,6,3,2,0,
"u 'TMatrixD' - 1 - v u 'TMatrixD' - 1 - u "
"u 'TVectorD' - 1 - sDiag u 'TVectorD' - 1 - oDiag "
"i - 'Int_t' 0 - k i - 'Int_t' 0 - l",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SortSingular",1261,(G__InterfaceMethod)NULL,121,-1,-1,0,3,3,2,0,
"u 'TMatrixD' - 1 - v u 'TMatrixD' - 1 - u "
"u 'TVectorD' - 1 - sDiag",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDecompMatrix",1517,(G__InterfaceMethod)NULL,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),-1,1,0,1,2,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TDecompSVD",921,G__G__Matrix_238_8_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompSVD",921,G__G__Matrix_238_9_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD),-1,0,2,1,1,0,
"i - 'Int_t' 0 - nrows i - 'Int_t' 0 - ncols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompSVD",921,G__G__Matrix_238_0_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD),-1,0,4,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompSVD",921,G__G__Matrix_238_1_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - m d - 'Double_t' 0 0.0 tol",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TDecompSVD",921,G__G__Matrix_238_2_1,105,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD),-1,0,1,1,1,0,"u 'TDecompSVD' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__Matrix_238_3_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,0,1,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNrows",825,G__G__Matrix_238_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNcols",799,G__G__Matrix_238_5_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetU",373,G__G__Matrix_238_6_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,0,1,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetV",374,G__G__Matrix_238_7_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,0,1,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetSig",579,G__G__Matrix_238_8_1,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,0,1,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMatrix",929,G__G__Matrix_238_9_1,121,-1,-1,0,1,1,1,0,"u 'TMatrixD' - 11 - a",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Decompose",927,G__G__Matrix_238_0_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_238_1_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_238_2_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Solve",521,G__G__Matrix_238_3_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_238_4_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TVectorD' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_238_5_2,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - b g - 'Bool_t' 1 - ok",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TransSolve",1041,G__G__Matrix_238_6_2,103,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'TMatrixDColumn' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Condition",935,G__G__Matrix_238_7_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Det",285,G__G__Matrix_238_8_2,121,-1,-1,0,2,1,1,0,
"d - 'Double_t' 1 - d1 d - 'Double_t' 1 - d2",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Invert",632,G__G__Matrix_238_9_2,121,-1,-1,0,1,1,1,0,"u 'TMatrixD' - 1 - inv",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Invert",632,G__G__Matrix_238_0_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Print",525,G__G__Matrix_238_1_3,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" opt","*MENU*",(void*)NULL,1);
   G__memfunc_setup("operator=",937,G__G__Matrix_238_2_3,117,G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD),-1,1,1,1,1,0,"u 'TDecompSVD' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_238_3_3,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TDecompSVD::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_238_4_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompSVD::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_238_5_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TDecompSVD::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_238_6_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TDecompSVD::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_238_7_3,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_238_8_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_238_9_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_238_0_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_238_1_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompSVD::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_238_2_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompSVD::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_238_3_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TDecompSVD::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_238_4_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TDecompSVD::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TDecompSVD",1047,G__G__Matrix_238_5_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixDSymEigen(void) {
   /* TMatrixDSymEigen */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigen));
   G__memfunc_setup("MakeTridiagonal",1516,(G__InterfaceMethod)NULL,121,-1,-1,0,3,3,2,0,
"u 'TMatrixD' - 1 - v u 'TVectorD' - 1 - d "
"u 'TVectorD' - 1 - e",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MakeEigenVectors",1612,(G__InterfaceMethod)NULL,121,-1,-1,0,3,3,2,0,
"u 'TMatrixD' - 1 - v u 'TVectorD' - 1 - d "
"u 'TVectorD' - 1 - e",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSymEigen",1582,G__G__Matrix_242_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigen),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSymEigen",1582,G__G__Matrix_242_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigen),-1,0,1,1,1,0,"u 'TMatrixDSym' - 11 - a",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMatrixDSymEigen",1582,G__G__Matrix_242_5_0,105,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigen),-1,0,1,1,1,0,"u 'TMatrixDSymEigen' - 11 - another",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEigenVectors",1518,G__G__Matrix_242_6_0,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEigenValues",1400,G__G__Matrix_242_7_0,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__Matrix_242_8_0,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigen),-1,1,1,1,1,0,"u 'TMatrixDSymEigen' - 11 - source",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_242_9_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixDSymEigen::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_242_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSymEigen::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_242_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixDSymEigen::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_242_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixDSymEigen::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_242_3_1,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_242_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_242_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_242_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_242_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSymEigen::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_242_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSymEigen::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_242_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixDSymEigen::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_242_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixDSymEigen::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixDSymEigen",1708,G__G__Matrix_242_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMatrixLazy(void) {
   /* TMatrixLazy */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixLazy));
   G__memfunc_setup("Class",502,G__G__Matrix_245_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMatrixLazy::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_245_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixLazy::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_245_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMatrixLazy::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_245_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMatrixLazy::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_245_8_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_245_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_245_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_245_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_245_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixLazy::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_245_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixLazy::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_245_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMatrixLazy::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_245_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMatrixLazy::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TMatrixLazy",1255,G__G__Matrix_245_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaarMatrixF(void) {
   /* THaarMatrixF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF));
   G__memfunc_setup("FillIn",574,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,8,"u 'TMatrixF' - 1 - m",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("THaarMatrixF",1163,G__G__Matrix_246_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THaarMatrixF",1163,G__G__Matrix_246_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF),-1,0,2,1,1,0,
"i - 'Int_t' 0 - n i - 'Int_t' 0 0 no_cols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_246_4_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&THaarMatrixF::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_246_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THaarMatrixF::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_246_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&THaarMatrixF::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_246_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&THaarMatrixF::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_246_8_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_246_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_246_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_246_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_246_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THaarMatrixF::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_246_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THaarMatrixF::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_246_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THaarMatrixF::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_246_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THaarMatrixF::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("THaarMatrixF",1163,G__G__Matrix_246_6_1,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF),-1,0,1,1,1,0,"u 'THaarMatrixF' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~THaarMatrixF",1289,G__G__Matrix_246_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHilbertMatrixF(void) {
   /* THilbertMatrixF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF));
   G__memfunc_setup("FillIn",574,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,8,"u 'TMatrixF' - 1 - m",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("THilbertMatrixF",1497,G__G__Matrix_247_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THilbertMatrixF",1497,G__G__Matrix_247_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF),-1,0,2,1,1,0,
"i - 'Int_t' 0 - no_rows i - 'Int_t' 0 - no_cols",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THilbertMatrixF",1497,G__G__Matrix_247_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF),-1,0,4,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb "
"i - 'Int_t' 0 - col_lwb i - 'Int_t' 0 - col_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_247_5_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&THilbertMatrixF::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_247_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixF::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_247_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&THilbertMatrixF::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_247_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&THilbertMatrixF::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_247_9_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_247_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_247_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_247_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_247_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixF::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_247_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THilbertMatrixF::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_247_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixF::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_247_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THilbertMatrixF::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("THilbertMatrixF",1497,G__G__Matrix_247_7_1,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF),-1,0,1,1,1,0,"u 'THilbertMatrixF' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~THilbertMatrixF",1623,G__G__Matrix_247_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHilbertMatrixFSym(void) {
   /* THilbertMatrixFSym */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym));
   G__memfunc_setup("FillIn",574,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,8,"u 'TMatrixFSym' - 1 - m",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("THilbertMatrixFSym",1810,G__G__Matrix_248_2_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THilbertMatrixFSym",1810,G__G__Matrix_248_3_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym),-1,0,1,1,1,0,"i - 'Int_t' 0 - no_rows",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THilbertMatrixFSym",1810,G__G__Matrix_248_4_0,105,G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym),-1,0,2,1,1,0,
"i - 'Int_t' 0 - row_lwb i - 'Int_t' 0 - row_upb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__Matrix_248_5_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&THilbertMatrixFSym::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__Matrix_248_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixFSym::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__Matrix_248_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&THilbertMatrixFSym::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__Matrix_248_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&THilbertMatrixFSym::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__Matrix_248_9_0,85,G__get_linked_tagnum(&G__G__MatrixLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__Matrix_248_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__Matrix_248_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Matrix_248_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__Matrix_248_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixFSym::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Matrix_248_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THilbertMatrixFSym::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__Matrix_248_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THilbertMatrixFSym::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Matrix_248_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THilbertMatrixFSym::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("THilbertMatrixFSym",1810,G__G__Matrix_248_7_1,(int)('i'),G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym),-1,0,1,1,1,0,"u 'THilbertMatrixFSym' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~THilbertMatrixFSym",1936,G__G__Matrix_248_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Matrix() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Matrix() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
   G__memfunc_setup("operator==",998,G__G__Matrix__6_32,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TMatrixDBase' - 11 - m1 u 'TMatrixDBase' - 11 - m2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("E2Norm",531,G__G__Matrix__7_32,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"u 'TMatrixDBase' - 11 - m1 u 'TMatrixDBase' - 11 - m2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AreCompatible",1304,G__G__Matrix__8_32,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"u 'TMatrixDBase' - 11 - m1 u 'TMatrixDBase' - 11 - m2 "
"i - 'Int_t' 0 0 verbose",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AreCompatible",1304,G__G__Matrix__9_32,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"u 'TMatrixDBase' - 11 - m1 u 'TMatrixFBase' - 11 - m2 "
"i - 'Int_t' 0 0 verbose",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Compare",711,G__G__Matrix__0_33,121,-1,-1,0,2,1,1,0,
"u 'TMatrixDBase' - 11 - m1 u 'TMatrixDBase' - 11 - m2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("VerifyMatrixValue",1767,G__G__Matrix__1_33,103,-1,G__defined_typename("Bool_t"),0,4,1,1,0,
"u 'TMatrixDBase' - 11 - m d - 'Double_t' 0 - val "
"i - 'Int_t' 0 1 verbose d - 'Double_t' 0 DBL_EPSILON maxDevAllow",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("VerifyMatrixIdentity",2100,G__G__Matrix__2_33,103,-1,G__defined_typename("Bool_t"),0,4,1,1,0,
"u 'TMatrixDBase' - 11 - m1 u 'TMatrixDBase' - 11 - m2 "
"i - 'Int_t' 0 1 verbose d - 'Double_t' 0 DBL_EPSILON maxDevAllow",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__4_33,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source1 u 'TMatrixD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__5_33,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source1 u 'TMatrixDSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__6_33,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - source1 u 'TMatrixD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__7_33,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source d - 'Double_t' 0 - val",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__8_33,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"d - 'Double_t' 0 - val u 'TMatrixD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__9_33,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source1 u 'TMatrixD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__0_34,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source1 u 'TMatrixDSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__1_34,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - source1 u 'TMatrixD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__2_34,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source d - 'Double_t' 0 - val",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__3_34,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"d - 'Double_t' 0 - val u 'TMatrixD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__4_34,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"d - 'Double_t' 0 - val u 'TMatrixD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__5_34,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source d - 'Double_t' 0 - val",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__6_34,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source1 u 'TMatrixD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__7_34,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source1 u 'TMatrixDSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__8_34,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - source1 u 'TMatrixD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__9_34,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - source1 u 'TMatrixDSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Matrix__1_37,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,3,1,1,0,
"u 'TMatrixD' - 1 - target d - 'Double_t' 0 - scalar "
"u 'TMatrixD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Matrix__2_37,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,3,1,1,0,
"u 'TMatrixD' - 1 - target d - 'Double_t' 0 - scalar "
"u 'TMatrixDSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementMult",1132,G__G__Matrix__3_37,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,2,1,1,0,
"u 'TMatrixD' - 1 - target u 'TMatrixD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementMult",1132,G__G__Matrix__4_37,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,2,1,1,0,
"u 'TMatrixD' - 1 - target u 'TMatrixDSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementDiv",1005,G__G__Matrix__5_37,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,2,1,1,0,
"u 'TMatrixD' - 1 - target u 'TMatrixD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementDiv",1005,G__G__Matrix__6_37,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,1,2,1,1,0,
"u 'TMatrixD' - 1 - target u 'TMatrixDSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__8_37,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - source1 u 'TMatrixDSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__1_38,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - source1 u 'TMatrixDSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__4_38,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - source d - 'Double_t' 0 - val",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__5_38,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,0,2,1,1,0,
"d - 'Double_t' 0 - val u 'TMatrixDSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Matrix__2_39,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,3,1,1,0,
"u 'TMatrixDSym' - 1 - target d - 'Double_t' 0 - scalar "
"u 'TMatrixDSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementMult",1132,G__G__Matrix__3_39,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,2,1,1,0,
"u 'TMatrixDSym' - 1 - target u 'TMatrixDSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementDiv",1005,G__G__Matrix__4_39,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),-1,1,2,1,1,0,
"u 'TMatrixDSym' - 1 - target u 'TMatrixDSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__5_39,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - source1 u 'TMatrixDSparse' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__6_39,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - source1 u 'TMatrixD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__7_39,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source1 u 'TMatrixDSparse' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__8_39,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - source d - 'Double_t' 0 - val",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__9_39,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"d - 'Double_t' 0 - val u 'TMatrixDSparse' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__0_40,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - source1 u 'TMatrixDSparse' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__1_40,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - source1 u 'TMatrixD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__2_40,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source1 u 'TMatrixDSparse' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__3_40,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - source d - 'Double_t' 0 - val",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__4_40,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"d - 'Double_t' 0 - val u 'TMatrixDSparse' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__5_40,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - source1 u 'TMatrixDSparse' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__6_40,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - source1 u 'TMatrixD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
}

static void G__cpp_setup_func4() {
   G__memfunc_setup("operator*",918,G__G__Matrix__7_40,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - source1 u 'TMatrixDSparse' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__8_40,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"d - 'Double_t' 0 - val u 'TMatrixDSparse' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__9_40,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - source d - 'Double_t' 0 - val",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Matrix__0_41,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,3,1,1,0,
"u 'TMatrixDSparse' - 1 - target d - 'Double_t' 0 - scalar "
"u 'TMatrixDSparse' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementMult",1132,G__G__Matrix__1_41,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,2,1,1,0,
"u 'TMatrixDSparse' - 1 - target u 'TMatrixDSparse' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementDiv",1005,G__G__Matrix__2_41,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),-1,1,2,1,1,0,
"u 'TMatrixDSparse' - 1 - target u 'TMatrixDSparse' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AreCompatible",1304,G__G__Matrix__3_41,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"u 'TMatrixDSparse' - 11 - m1 u 'TMatrixDSparse' - 11 - m2 "
"i - 'Int_t' 0 0 verbose",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator==",998,G__G__Matrix__4_41,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TVectorD' - 11 - source1 u 'TVectorD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__5_41,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - source1 u 'TVectorD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__6_41,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TVectorD' - 11 - source1 u 'TVectorD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__7_41,100,-1,G__defined_typename("Double_t"),0,2,1,1,0,
"u 'TVectorD' - 11 - source1 u 'TVectorD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__8_41,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - a u 'TVectorD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__9_41,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TMatrixDSym' - 11 - a u 'TVectorD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__0_42,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TMatrixDSparse' - 11 - a u 'TVectorD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__1_42,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"d - 'Double_t' 0 - val u 'TVectorD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Matrix__2_42,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,3,1,1,0,
"u 'TVectorD' - 1 - target d - 'Double_t' 0 - scalar "
"u 'TVectorD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AddElemMult",1070,G__G__Matrix__3_42,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,4,1,1,0,
"u 'TVectorD' - 1 - target d - 'Double_t' 0 - scalar "
"u 'TVectorD' - 11 - source1 u 'TVectorD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AddElemMult",1070,G__G__Matrix__4_42,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,5,1,1,0,
"u 'TVectorD' - 1 - target d - 'Double_t' 0 - scalar "
"u 'TVectorD' - 11 - source1 u 'TVectorD' - 11 - source2 "
"u 'TVectorD' - 11 - select",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AddElemDiv",943,G__G__Matrix__5_42,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,4,1,1,0,
"u 'TVectorD' - 1 - target d - 'Double_t' 0 - scalar "
"u 'TVectorD' - 11 - source1 u 'TVectorD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AddElemDiv",943,G__G__Matrix__6_42,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,5,1,1,0,
"u 'TVectorD' - 1 - target d - 'Double_t' 0 - scalar "
"u 'TVectorD' - 11 - source1 u 'TVectorD' - 11 - source2 "
"u 'TVectorD' - 11 - select",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementMult",1132,G__G__Matrix__7_42,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,2,1,1,0,
"u 'TVectorD' - 1 - target u 'TVectorD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementMult",1132,G__G__Matrix__8_42,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,3,1,1,0,
"u 'TVectorD' - 1 - target u 'TVectorD' - 11 - source "
"u 'TVectorD' - 11 - select",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementDiv",1005,G__G__Matrix__9_42,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,2,1,1,0,
"u 'TVectorD' - 1 - target u 'TVectorD' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementDiv",1005,G__G__Matrix__0_43,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,1,3,1,1,0,
"u 'TVectorD' - 1 - target u 'TVectorD' - 11 - source "
"u 'TVectorD' - 11 - select",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AreCompatible",1304,G__G__Matrix__1_43,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"u 'TVectorD' - 11 - source1 u 'TVectorD' - 11 - source2 "
"i - 'Int_t' 0 0 verbose",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AreCompatible",1304,G__G__Matrix__2_43,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"u 'TVectorD' - 11 - source1 u 'TVectorF' - 11 - source2 "
"i - 'Int_t' 0 0 verbose",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Compare",711,G__G__Matrix__3_43,121,-1,-1,0,2,1,1,0,
"u 'TVectorD' - 11 - source1 u 'TVectorD' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("VerifyVectorValue",1765,G__G__Matrix__4_43,103,-1,G__defined_typename("Bool_t"),0,4,1,1,0,
"u 'TVectorD' - 11 - m d - 'Double_t' 0 - val "
"i - 'Int_t' 0 1 verbose d - 'Double_t' 0 DBL_EPSILON maxDevAllow",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("VerifyVectorIdentity",2098,G__G__Matrix__5_43,103,-1,G__defined_typename("Bool_t"),0,4,1,1,0,
"u 'TVectorD' - 11 - m1 u 'TVectorD' - 11 - m2 "
"i - 'Int_t' 0 1 verbose d - 'Double_t' 0 DBL_EPSILON maxDevAllow",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator==",998,G__G__Matrix__3_44,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TMatrixFBase' - 11 - m1 u 'TMatrixFBase' - 11 - m2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("E2Norm",531,G__G__Matrix__4_44,102,-1,G__defined_typename("Float_t"),0,2,1,1,0,
"u 'TMatrixFBase' - 11 - m1 u 'TMatrixFBase' - 11 - m2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AreCompatible",1304,G__G__Matrix__5_44,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"u 'TMatrixFBase' - 11 - m1 u 'TMatrixFBase' - 11 - m2 "
"i - 'Int_t' 0 0 verbose",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AreCompatible",1304,G__G__Matrix__6_44,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"u 'TMatrixFBase' - 11 - m1 u 'TMatrixDBase' - 11 - m2 "
"i - 'Int_t' 0 0 verbose",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Compare",711,G__G__Matrix__7_44,121,-1,-1,0,2,1,1,0,
"u 'TMatrixFBase' - 11 - m1 u 'TMatrixFBase' - 11 - m2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("VerifyMatrixValue",1767,G__G__Matrix__8_44,103,-1,G__defined_typename("Bool_t"),0,4,1,1,0,
"u 'TMatrixFBase' - 11 - m f - 'Float_t' 0 - val "
"i - 'Int_t' 0 1 verbose f - 'Float_t' 0 DBL_EPSILON maxDevAllow",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("VerifyMatrixIdentity",2100,G__G__Matrix__9_44,103,-1,G__defined_typename("Bool_t"),0,4,1,1,0,
"u 'TMatrixFBase' - 11 - m1 u 'TMatrixFBase' - 11 - m2 "
"i - 'Int_t' 0 1 verbose f - 'Float_t' 0 DBL_EPSILON maxDevAllow",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__7_45,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - source1 u 'TMatrixF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__8_45,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - source1 u 'TMatrixFSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__9_45,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 11 - source1 u 'TMatrixF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__0_46,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - source f - 'Float_t' 0 - val",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__1_46,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"f - 'Float_t' 0 - val u 'TMatrixF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__2_46,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - source1 u 'TMatrixF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__3_46,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - source1 u 'TMatrixFSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__4_46,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 11 - source1 u 'TMatrixF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__5_46,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - source f - 'Float_t' 0 - val",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__6_46,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"f - 'Float_t' 0 - val u 'TMatrixF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__7_46,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"f - 'Float_t' 0 - val u 'TMatrixF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__8_46,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - source f - 'Float_t' 0 - val",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__9_46,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - source1 u 'TMatrixF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__0_47,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - source1 u 'TMatrixFSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__1_47,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 11 - source1 u 'TMatrixF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__2_47,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 11 - source1 u 'TMatrixFSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Matrix__4_49,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,3,1,1,0,
"u 'TMatrixF' - 1 - target f - 'Float_t' 0 - scalar "
"u 'TMatrixF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Matrix__5_49,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,3,1,1,0,
"u 'TMatrixF' - 1 - target f - 'Float_t' 0 - scalar "
"u 'TMatrixFSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementMult",1132,G__G__Matrix__6_49,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,2,1,1,0,
"u 'TMatrixF' - 1 - target u 'TMatrixF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementMult",1132,G__G__Matrix__7_49,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,2,1,1,0,
"u 'TMatrixF' - 1 - target u 'TMatrixFSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementDiv",1005,G__G__Matrix__8_49,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,2,1,1,0,
"u 'TMatrixF' - 1 - target u 'TMatrixF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementDiv",1005,G__G__Matrix__9_49,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),-1,1,2,1,1,0,
"u 'TMatrixF' - 1 - target u 'TMatrixFSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("NormalEqn",909,G__G__Matrix__0_50,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - A u 'TVectorD' - 11 - b",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("NormalEqn",909,G__G__Matrix__1_50,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),-1,0,3,1,1,0,
"u 'TMatrixD' - 11 - A u 'TVectorD' - 11 - b "
"u 'TVectorD' - 11 - std",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("NormalEqn",909,G__G__Matrix__2_50,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,2,1,1,0,
"u 'TMatrixD' - 11 - A u 'TMatrixD' - 11 - b",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("NormalEqn",909,G__G__Matrix__3_50,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),-1,0,3,1,1,0,
"u 'TMatrixD' - 11 - A u 'TMatrixD' - 11 - B "
"u 'TVectorD' - 11 - std",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__4_50,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 11 - source1 u 'TMatrixFSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__7_50,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 11 - source1 u 'TMatrixFSym' - 11 - source2",(char*)NULL
,(void*)NULL,0);
}

static void G__cpp_setup_func5() {
   G__memfunc_setup("operator*",918,G__G__Matrix__0_51,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 11 - source f - 'Float_t' 0 - val",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__1_51,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,0,2,1,1,0,
"f - 'Float_t' 0 - val u 'TMatrixFSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Matrix__8_51,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,3,1,1,0,
"u 'TMatrixFSym' - 1 - target f - 'Float_t' 0 - scalar "
"u 'TMatrixFSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementMult",1132,G__G__Matrix__9_51,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,2,1,1,0,
"u 'TMatrixFSym' - 1 - target u 'TMatrixFSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementDiv",1005,G__G__Matrix__0_52,117,G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),-1,1,2,1,1,0,
"u 'TMatrixFSym' - 1 - target u 'TMatrixFSym' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator==",998,G__G__Matrix__1_52,103,-1,G__defined_typename("Bool_t"),0,2,1,1,0,
"u 'TVectorF' - 11 - source1 u 'TVectorF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator+",919,G__G__Matrix__2_52,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,2,1,1,0,
"u 'TVectorF' - 11 - source1 u 'TVectorF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator-",921,G__G__Matrix__3_52,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,2,1,1,0,
"u 'TVectorF' - 11 - source1 u 'TVectorF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__4_52,102,-1,G__defined_typename("Float_t"),0,2,1,1,0,
"u 'TVectorF' - 11 - source1 u 'TVectorF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__5_52,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,2,1,1,0,
"u 'TMatrixF' - 11 - a u 'TVectorF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__6_52,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,2,1,1,0,
"u 'TMatrixFSym' - 11 - a u 'TVectorF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("operator*",918,G__G__Matrix__7_52,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,0,2,1,1,0,
"f - 'Float_t' 0 - val u 'TVectorF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Add",265,G__G__Matrix__8_52,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,3,1,1,0,
"u 'TVectorF' - 1 - target f - 'Float_t' 0 - scalar "
"u 'TVectorF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AddElemMult",1070,G__G__Matrix__9_52,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,4,1,1,0,
"u 'TVectorF' - 1 - target f - 'Float_t' 0 - scalar "
"u 'TVectorF' - 11 - source1 u 'TVectorF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AddElemMult",1070,G__G__Matrix__0_53,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,5,1,1,0,
"u 'TVectorF' - 1 - target f - 'Float_t' 0 - scalar "
"u 'TVectorF' - 11 - source1 u 'TVectorF' - 11 - source2 "
"u 'TVectorF' - 11 - select",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AddElemDiv",943,G__G__Matrix__1_53,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,4,1,1,0,
"u 'TVectorF' - 1 - target f - 'Float_t' 0 - scalar "
"u 'TVectorF' - 11 - source1 u 'TVectorF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AddElemDiv",943,G__G__Matrix__2_53,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,5,1,1,0,
"u 'TVectorF' - 1 - target f - 'Float_t' 0 - scalar "
"u 'TVectorF' - 11 - source1 u 'TVectorF' - 11 - source2 "
"u 'TVectorF' - 11 - select",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementMult",1132,G__G__Matrix__3_53,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,2,1,1,0,
"u 'TVectorF' - 1 - target u 'TVectorF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementMult",1132,G__G__Matrix__4_53,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,3,1,1,0,
"u 'TVectorF' - 1 - target u 'TVectorF' - 11 - source "
"u 'TVectorF' - 11 - select",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementDiv",1005,G__G__Matrix__5_53,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,2,1,1,0,
"u 'TVectorF' - 1 - target u 'TVectorF' - 11 - source",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("ElementDiv",1005,G__G__Matrix__6_53,117,G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),-1,1,3,1,1,0,
"u 'TVectorF' - 1 - target u 'TVectorF' - 11 - source "
"u 'TVectorF' - 11 - select",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AreCompatible",1304,G__G__Matrix__7_53,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"u 'TVectorF' - 11 - source1 u 'TVectorF' - 11 - source2 "
"i - 'Int_t' 0 0 verbose",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("AreCompatible",1304,G__G__Matrix__8_53,103,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"u 'TVectorF' - 11 - source1 u 'TVectorD' - 11 - source2 "
"i - 'Int_t' 0 0 verbose",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("Compare",711,G__G__Matrix__9_53,121,-1,-1,0,2,1,1,0,
"u 'TVectorF' - 11 - source1 u 'TVectorF' - 11 - source2",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("VerifyVectorValue",1765,G__G__Matrix__0_54,103,-1,G__defined_typename("Bool_t"),0,4,1,1,0,
"u 'TVectorF' - 11 - m f - 'Float_t' 0 - val "
"i - 'Int_t' 0 1 verbose f - 'Float_t' 0 DBL_EPSILON maxDevAllow",(char*)NULL
,(void*)NULL,0);
   G__memfunc_setup("VerifyVectorIdentity",2098,G__G__Matrix__1_54,103,-1,G__defined_typename("Bool_t"),0,4,1,1,0,
"u 'TVectorF' - 11 - m1 u 'TVectorF' - 11 - m2 "
"i - 'Int_t' 0 1 verbose f - 'Float_t' 0 DBL_EPSILON maxDevAllow",(char*)NULL
,(void*)NULL,0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Matrix() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__MatrixLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFBase = { "TMatrixFBase" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDBase = { "TMatrixDBase" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TVectorF = { "TVectorF" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TVectorD = { "TVectorD" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TElementActionD = { "TElementActionD" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TElementPosActionD = { "TElementPosActionD" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDBasecLcLdA = { "TMatrixDBase::$" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDBasecLcLEMatrixStatusBits = { "TMatrixDBase::EMatrixStatusBits" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp1 = { "TMatrixDBase::EMatrixCreatorsOp1" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp2 = { "TMatrixDBase::EMatrixCreatorsOp2" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixD = { "TMatrixD" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSym = { "TMatrixDSym" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSparse = { "TMatrixDSparse" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDRow_const = { "TMatrixDRow_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDRow = { "TMatrixDRow" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDColumn_const = { "TMatrixDColumn_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDColumn = { "TMatrixDColumn" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDDiag_const = { "TMatrixDDiag_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDDiag = { "TMatrixDDiag" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDFlat_const = { "TMatrixDFlat_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDFlat = { "TMatrixDFlat" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSub_const = { "TMatrixDSub_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSub_constcLcLdA = { "TMatrixDSub_const::$" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSub = { "TMatrixDSub" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSparseRow_const = { "TMatrixDSparseRow_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSparseRow = { "TMatrixDSparseRow" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSparseDiag_const = { "TMatrixDSparseDiag_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSparseDiag = { "TMatrixDSparseDiag" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixF = { "TMatrixF" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDLazy = { "TMatrixDLazy" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSymLazy = { "TMatrixDSymLazy" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFSym = { "TMatrixFSym" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TVectorDcLcLdA = { "TVectorD::$" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TDecompBase = { "TDecompBase" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TDecompBasecLcLEMatrixDecompStat = { "TDecompBase::EMatrixDecompStat" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TDecompBasecLcLdA = { "TDecompBase::$" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TDecompBK = { "TDecompBK" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_THaarMatrixD = { "THaarMatrixD" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_THilbertMatrixD = { "THilbertMatrixD" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_THilbertMatrixDSym = { "THilbertMatrixDSym" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TElementActionF = { "TElementActionF" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TElementPosActionF = { "TElementPosActionF" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFBasecLcLdA = { "TMatrixFBase::$" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFBasecLcLEMatrixStatusBits = { "TMatrixFBase::EMatrixStatusBits" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp1 = { "TMatrixFBase::EMatrixCreatorsOp1" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp2 = { "TMatrixFBase::EMatrixCreatorsOp2" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TDecompSparse = { "TDecompSparse" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFRow_const = { "TMatrixFRow_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFRow = { "TMatrixFRow" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFColumn_const = { "TMatrixFColumn_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFColumn = { "TMatrixFColumn" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFDiag_const = { "TMatrixFDiag_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFDiag = { "TMatrixFDiag" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFFlat_const = { "TMatrixFFlat_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFFlat = { "TMatrixFFlat" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFSub_const = { "TMatrixFSub_const" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFSub_constcLcLdA = { "TMatrixFSub_const::$" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFSub = { "TMatrixFSub" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixRow = { "TMatrixRow" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixColumn = { "TMatrixColumn" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDiag = { "TMatrixDiag" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFlat = { "TMatrixFlat" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFLazy = { "TMatrixFLazy" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrix = { "TMatrix" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TDecompQRH = { "TDecompQRH" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TDecompQRHcLcLdA = { "TDecompQRH::$" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TDecompLU = { "TDecompLU" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDEigen = { "TMatrixDEigen" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDEigencLcLdA = { "TMatrixDEigen::$" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TDecompChol = { "TDecompChol" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixFSymLazy = { "TMatrixFSymLazy" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TVectorFcLcLdA = { "TVectorF::$" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TVector = { "TVector" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TDecompSVD = { "TDecompSVD" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TDecompSVDcLcLdA = { "TDecompSVD::$" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSymEigen = { "TMatrixDSymEigen" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixDSymEigencLcLdA = { "TMatrixDSymEigen::$" , 101 , -1 };
G__linked_taginfo G__G__MatrixLN_TMatrixLazy = { "TMatrixLazy" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_THaarMatrixF = { "THaarMatrixF" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_THilbertMatrixF = { "THilbertMatrixF" , 99 , -1 };
G__linked_taginfo G__G__MatrixLN_THilbertMatrixFSym = { "THilbertMatrixFSym" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Matrix() {
  G__G__MatrixLN_TClass.tagnum = -1 ;
  G__G__MatrixLN_TBuffer.tagnum = -1 ;
  G__G__MatrixLN_TMemberInspector.tagnum = -1 ;
  G__G__MatrixLN_TObject.tagnum = -1 ;
  G__G__MatrixLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__MatrixLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFBase.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDBase.tagnum = -1 ;
  G__G__MatrixLN_TVectorF.tagnum = -1 ;
  G__G__MatrixLN_TVectorD.tagnum = -1 ;
  G__G__MatrixLN_TElementActionD.tagnum = -1 ;
  G__G__MatrixLN_TElementPosActionD.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDBasecLcLdA.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDBasecLcLEMatrixStatusBits.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp1.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp2.tagnum = -1 ;
  G__G__MatrixLN_TMatrixD.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSym.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSparse.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDRow_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDRow.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDColumn_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDColumn.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDDiag_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDDiag.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDFlat_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDFlat.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSub_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSub_constcLcLdA.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSub.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSparseRow_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSparseRow.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSparseDiag_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSparseDiag.tagnum = -1 ;
  G__G__MatrixLN_TMatrixF.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDLazy.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSymLazy.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFSym.tagnum = -1 ;
  G__G__MatrixLN_TVectorDcLcLdA.tagnum = -1 ;
  G__G__MatrixLN_TDecompBase.tagnum = -1 ;
  G__G__MatrixLN_TDecompBasecLcLEMatrixDecompStat.tagnum = -1 ;
  G__G__MatrixLN_TDecompBasecLcLdA.tagnum = -1 ;
  G__G__MatrixLN_TDecompBK.tagnum = -1 ;
  G__G__MatrixLN_THaarMatrixD.tagnum = -1 ;
  G__G__MatrixLN_THilbertMatrixD.tagnum = -1 ;
  G__G__MatrixLN_THilbertMatrixDSym.tagnum = -1 ;
  G__G__MatrixLN_TElementActionF.tagnum = -1 ;
  G__G__MatrixLN_TElementPosActionF.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFBasecLcLdA.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFBasecLcLEMatrixStatusBits.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp1.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp2.tagnum = -1 ;
  G__G__MatrixLN_TArrayD.tagnum = -1 ;
  G__G__MatrixLN_TArrayI.tagnum = -1 ;
  G__G__MatrixLN_TDecompSparse.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFRow_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFRow.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFColumn_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFColumn.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFDiag_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFDiag.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFFlat_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFFlat.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFSub_const.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFSub_constcLcLdA.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFSub.tagnum = -1 ;
  G__G__MatrixLN_TMatrixRow.tagnum = -1 ;
  G__G__MatrixLN_TMatrixColumn.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDiag.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFlat.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFLazy.tagnum = -1 ;
  G__G__MatrixLN_TMatrix.tagnum = -1 ;
  G__G__MatrixLN_TDecompQRH.tagnum = -1 ;
  G__G__MatrixLN_TDecompQRHcLcLdA.tagnum = -1 ;
  G__G__MatrixLN_TDecompLU.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDEigen.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDEigencLcLdA.tagnum = -1 ;
  G__G__MatrixLN_TDecompChol.tagnum = -1 ;
  G__G__MatrixLN_TMatrixFSymLazy.tagnum = -1 ;
  G__G__MatrixLN_TVectorFcLcLdA.tagnum = -1 ;
  G__G__MatrixLN_TVector.tagnum = -1 ;
  G__G__MatrixLN_TDecompSVD.tagnum = -1 ;
  G__G__MatrixLN_TDecompSVDcLcLdA.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSymEigen.tagnum = -1 ;
  G__G__MatrixLN_TMatrixDSymEigencLcLdA.tagnum = -1 ;
  G__G__MatrixLN_TMatrixLazy.tagnum = -1 ;
  G__G__MatrixLN_THaarMatrixF.tagnum = -1 ;
  G__G__MatrixLN_THilbertMatrixF.tagnum = -1 ;
  G__G__MatrixLN_THilbertMatrixFSym.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Matrix() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__MatrixLN_TClass);
   G__get_linked_tagnum(&G__G__MatrixLN_TBuffer);
   G__get_linked_tagnum(&G__G__MatrixLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__MatrixLN_TObject);
   G__get_linked_tagnum(&G__G__MatrixLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__MatrixLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBase),sizeof(TMatrixFBase),-1,95504,"Dense Matrix base class (single precision)",G__setup_memvarTMatrixFBase,G__setup_memfuncTMatrixFBase);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBase),sizeof(TMatrixDBase),-1,95504,"Matrix base class (double precision)",G__setup_memvarTMatrixDBase,G__setup_memfuncTMatrixDBase);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVectorF),sizeof(TVectorF),-1,130816,"Vector class with single precision",G__setup_memvarTVectorF,G__setup_memfuncTVectorF);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVectorD),sizeof(TVectorD),-1,130816,"Vector class with double precision",G__setup_memvarTVectorD,G__setup_memfuncTVectorD);
   G__get_linked_tagnum(&G__G__MatrixLN_TElementActionD);
   G__get_linked_tagnum(&G__G__MatrixLN_TElementPosActionD);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLdA);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixStatusBits);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp1);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDBasecLcLEMatrixCreatorsOp2);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixD),sizeof(TMatrixD),-1,130816,"Matrix class (double precision)",G__setup_memvarTMatrixD,G__setup_memfuncTMatrixD);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSym),sizeof(TMatrixDSym),-1,130816,"Symmetric Matrix class (double precision)",G__setup_memvarTMatrixDSym,G__setup_memfuncTMatrixDSym);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparse),sizeof(TMatrixDSparse),-1,327424,"Sparse Matrix class (double precision)",G__setup_memvarTMatrixDSparse,G__setup_memfuncTMatrixDSparse);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow_const),sizeof(TMatrixDRow_const),-1,34048,"One row of a dense matrix (double precision)",G__setup_memvarTMatrixDRow_const,G__setup_memfuncTMatrixDRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDRow),sizeof(TMatrixDRow),-1,35584,"One row of a dense matrix (double precision)",G__setup_memvarTMatrixDRow,G__setup_memfuncTMatrixDRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn_const),sizeof(TMatrixDColumn_const),-1,34048,"One column of a dense matrix (double precision)",G__setup_memvarTMatrixDColumn_const,G__setup_memfuncTMatrixDColumn_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDColumn),sizeof(TMatrixDColumn),-1,35584,"One column of a dense matrix (double precision)",G__setup_memvarTMatrixDColumn,G__setup_memfuncTMatrixDColumn);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag_const),sizeof(TMatrixDDiag_const),-1,34048,"Diagonal of a dense matrix (double  precision)",G__setup_memvarTMatrixDDiag_const,G__setup_memfuncTMatrixDDiag_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDDiag),sizeof(TMatrixDDiag),-1,35584,"Diagonal of a dense matrix (double  precision)",G__setup_memvarTMatrixDDiag,G__setup_memfuncTMatrixDDiag);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat_const),sizeof(TMatrixDFlat_const),-1,34048,"Flat representation of a dense matrix",G__setup_memvarTMatrixDFlat_const,G__setup_memfuncTMatrixDFlat_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDFlat),sizeof(TMatrixDFlat),-1,35584,"Flat representation of a dense matrix",G__setup_memvarTMatrixDFlat,G__setup_memfuncTMatrixDFlat);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_const),sizeof(TMatrixDSub_const),-1,34048,"sub matrix (double precision)",G__setup_memvarTMatrixDSub_const,G__setup_memfuncTMatrixDSub_const);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub_constcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSub),sizeof(TMatrixDSub),-1,35584,"sub matrix (double precision)",G__setup_memvarTMatrixDSub,G__setup_memfuncTMatrixDSub);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow_const),sizeof(TMatrixDSparseRow_const),-1,34048,"One row of a sparse matrix (double precision)",G__setup_memvarTMatrixDSparseRow_const,G__setup_memfuncTMatrixDSparseRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseRow),sizeof(TMatrixDSparseRow),-1,35584,"One row of a sparse matrix (double precision)",G__setup_memvarTMatrixDSparseRow,G__setup_memfuncTMatrixDSparseRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag_const),sizeof(TMatrixDSparseDiag_const),-1,34048,"Diagonal of a sparse matrix (double  precision)",G__setup_memvarTMatrixDSparseDiag_const,G__setup_memfuncTMatrixDSparseDiag_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSparseDiag),sizeof(TMatrixDSparseDiag),-1,35584,"Diagonal of a dense matrix (double  precision)",G__setup_memvarTMatrixDSparseDiag,G__setup_memfuncTMatrixDSparseDiag);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixF),sizeof(TMatrixF),-1,130816,"Matrix class (single precision)",G__setup_memvarTMatrixF,G__setup_memfuncTMatrixF);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDLazy),sizeof(TMatrixDLazy),-1,327425,"Lazy matrix with double precision",G__setup_memvarTMatrixDLazy,G__setup_memfuncTMatrixDLazy);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymLazy),sizeof(TMatrixDSymLazy),-1,327425,"Lazy symmeytric matrix with double precision",G__setup_memvarTMatrixDSymLazy,G__setup_memfuncTMatrixDSymLazy);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSym),sizeof(TMatrixFSym),-1,130816,"Symmetric Matrix class (single precision)",G__setup_memvarTMatrixFSym,G__setup_memfuncTMatrixFSym);
   G__get_linked_tagnum(&G__G__MatrixLN_TVectorDcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompBase),sizeof(TDecompBase),-1,294666,"Matrix Decomposition Base",G__setup_memvarTDecompBase,G__setup_memfuncTDecompBase);
   G__get_linked_tagnum(&G__G__MatrixLN_TDecompBasecLcLEMatrixDecompStat);
   G__get_linked_tagnum(&G__G__MatrixLN_TDecompBasecLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompBK),sizeof(TDecompBK),-1,327424,"Matrix Decomposition Bunch-Kaufman",G__setup_memvarTDecompBK,G__setup_memfuncTDecompBK);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixD),sizeof(THaarMatrixD),-1,324864,"Haar matrix with double precision",G__setup_memvarTHaarMatrixD,G__setup_memfuncTHaarMatrixD);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixD),sizeof(THilbertMatrixD),-1,324864,"(no_rows x no_cols) Hilbert matrix with double precision",G__setup_memvarTHilbertMatrixD,G__setup_memfuncTHilbertMatrixD);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixDSym),sizeof(THilbertMatrixDSym),-1,324864,"(no_rows x no_rows) Hilbert matrix with double precision",G__setup_memvarTHilbertMatrixDSym,G__setup_memfuncTHilbertMatrixDSym);
   G__get_linked_tagnum(&G__G__MatrixLN_TElementActionF);
   G__get_linked_tagnum(&G__G__MatrixLN_TElementPosActionF);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLdA);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixStatusBits);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp1);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFBasecLcLEMatrixCreatorsOp2);
   G__get_linked_tagnum(&G__G__MatrixLN_TArrayD);
   G__get_linked_tagnum(&G__G__MatrixLN_TArrayI);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSparse),sizeof(TDecompSparse),-1,327424,"Matrix Decompositition LU",G__setup_memvarTDecompSparse,G__setup_memfuncTDecompSparse);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow_const),sizeof(TMatrixFRow_const),-1,34048,"One row of a dense matrix (single precision)",G__setup_memvarTMatrixFRow_const,G__setup_memfuncTMatrixFRow_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFRow),sizeof(TMatrixFRow),-1,35584,"One row of a dense matrix (single precision)",G__setup_memvarTMatrixFRow,G__setup_memfuncTMatrixFRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn_const),sizeof(TMatrixFColumn_const),-1,34048,"One column of a dense matrix (single precision)",G__setup_memvarTMatrixFColumn_const,G__setup_memfuncTMatrixFColumn_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFColumn),sizeof(TMatrixFColumn),-1,35584,"One column of a dense matrix (single precision)",G__setup_memvarTMatrixFColumn,G__setup_memfuncTMatrixFColumn);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag_const),sizeof(TMatrixFDiag_const),-1,34048,"Diagonal of a dense matrix (single  precision)",G__setup_memvarTMatrixFDiag_const,G__setup_memfuncTMatrixFDiag_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFDiag),sizeof(TMatrixFDiag),-1,35584,"Diagonal of a dense matrix (single  precision)",G__setup_memvarTMatrixFDiag,G__setup_memfuncTMatrixFDiag);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat_const),sizeof(TMatrixFFlat_const),-1,34048,"Flat representation of a dense matrix",G__setup_memvarTMatrixFFlat_const,G__setup_memfuncTMatrixFFlat_const);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFFlat),sizeof(TMatrixFFlat),-1,35584,"Flat representation of a dense matrix",G__setup_memvarTMatrixFFlat,G__setup_memfuncTMatrixFFlat);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_const),sizeof(TMatrixFSub_const),-1,34048,"sub matrix (single precision)",G__setup_memvarTMatrixFSub_const,G__setup_memfuncTMatrixFSub_const);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub_constcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSub),sizeof(TMatrixFSub),-1,35584,"sub matrix (single precision)",G__setup_memvarTMatrixFSub,G__setup_memfuncTMatrixFSub);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixRow),sizeof(TMatrixRow),-1,34048,"One row of a matrix (single precision)",G__setup_memvarTMatrixRow,G__setup_memfuncTMatrixRow);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixColumn),sizeof(TMatrixColumn),-1,34048,"One column of a matrix (single precision)",G__setup_memvarTMatrixColumn,G__setup_memfuncTMatrixColumn);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDiag),sizeof(TMatrixDiag),-1,34048,"Diagonal of a matrix (single precision)",G__setup_memvarTMatrixDiag,G__setup_memfuncTMatrixDiag);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFlat),sizeof(TMatrixFlat),-1,34048,"Flat representation of a matrix",G__setup_memvarTMatrixFlat,G__setup_memfuncTMatrixFlat);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFLazy),sizeof(TMatrixFLazy),-1,327425,"Lazy matrix with single precision",G__setup_memvarTMatrixFLazy,G__setup_memfuncTMatrixFLazy);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrix),sizeof(TMatrix),-1,128256,"Matrix class (single precision)",G__setup_memvarTMatrix,G__setup_memfuncTMatrix);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRH),sizeof(TDecompQRH),-1,327424,"Matrix Decompositition QRH",G__setup_memvarTDecompQRH,G__setup_memfuncTDecompQRH);
   G__get_linked_tagnum(&G__G__MatrixLN_TDecompQRHcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompLU),sizeof(TDecompLU),-1,327424,"Matrix Decompositition LU",G__setup_memvarTDecompLU,G__setup_memfuncTDecompLU);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigen),sizeof(TMatrixDEigen),-1,298752,"Eigen-Vectors/Values of a Matrix",G__setup_memvarTMatrixDEigen,G__setup_memfuncTMatrixDEigen);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDEigencLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompChol),sizeof(TDecompChol),-1,327424,"Matrix Decompositition Cholesky",G__setup_memvarTDecompChol,G__setup_memfuncTDecompChol);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixFSymLazy),sizeof(TMatrixFSymLazy),-1,327425,"Lazy symmeytric matrix with single precision",G__setup_memvarTMatrixFSymLazy,G__setup_memfuncTMatrixFSymLazy);
   G__get_linked_tagnum(&G__G__MatrixLN_TVectorFcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TVector),sizeof(TVector),-1,128768,"Vector class with single precision",G__setup_memvarTVector,G__setup_memfuncTVector);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVD),sizeof(TDecompSVD),-1,327424,"Matrix Decompositition SVD",G__setup_memvarTDecompSVD,G__setup_memfuncTDecompSVD);
   G__get_linked_tagnum(&G__G__MatrixLN_TDecompSVDcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigen),sizeof(TMatrixDSymEigen),-1,298752,"Eigen-Vectors/Values of a Matrix",G__setup_memvarTMatrixDSymEigen,G__setup_memfuncTMatrixDSymEigen);
   G__get_linked_tagnum(&G__G__MatrixLN_TMatrixDSymEigencLcLdA);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_TMatrixLazy),sizeof(TMatrixLazy),-1,324865,"Lazy matrix with single precision",G__setup_memvarTMatrixLazy,G__setup_memfuncTMatrixLazy);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_THaarMatrixF),sizeof(THaarMatrixF),-1,324864,"Haar matrix with single precision",G__setup_memvarTHaarMatrixF,G__setup_memfuncTHaarMatrixF);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixF),sizeof(THilbertMatrixF),-1,324864,"(no_rows x no_cols) Hilbert matrix with single precision",G__setup_memvarTHilbertMatrixF,G__setup_memfuncTHilbertMatrixF);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__MatrixLN_THilbertMatrixFSym),sizeof(THilbertMatrixFSym),-1,324864,"(no_rows x no_rows) Hilbert matrix with single precision",G__setup_memvarTHilbertMatrixFSym,G__setup_memfuncTHilbertMatrixFSym);
}
extern "C" void G__cpp_setupG__Matrix(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Matrix()");
  G__set_cpp_environmentG__Matrix();
  G__cpp_setup_tagtableG__Matrix();

  G__cpp_setup_inheritanceG__Matrix();

  G__cpp_setup_typetableG__Matrix();

  G__cpp_setup_memvarG__Matrix();

  G__cpp_setup_memfuncG__Matrix();
  G__cpp_setup_globalG__Matrix();
  G__cpp_setup_funcG__Matrix();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Matrix();
  return;
}
class G__cpp_setup_initG__Matrix {
  public:
    G__cpp_setup_initG__Matrix() { G__add_setup_func("G__Matrix",(G__incsetup)(&G__cpp_setupG__Matrix)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Matrix() { G__remove_setup_func("G__Matrix"); }
};
G__cpp_setup_initG__Matrix G__cpp_setup_initializerG__Matrix;

