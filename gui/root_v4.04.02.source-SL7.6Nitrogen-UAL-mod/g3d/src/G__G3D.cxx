//
// File generated by utils/src/rootcint_tmp at Wed Jul  1 06:25:33 2020.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "G__G3D.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"

#include "TCollectionProxy.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TMaterial_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMaterial_IsA(const void*);
   static void *new_TMaterial(void *p = 0);
   static void *newArray_TMaterial(Long_t size);
   static void delete_TMaterial(void *p);
   static void deleteArray_TMaterial(void *p);
   static void destruct_TMaterial(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMaterial*)
   {
      ::TMaterial *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMaterial", ::TMaterial::Class_Version(), "g3d/inc/TMaterial.h", 32,
                  typeid(::TMaterial), DefineBehavior(ptr, ptr),
                  &::TMaterial::Dictionary, &TMaterial_IsA, 1,
                  sizeof(::TMaterial) );
      instance.SetNew(&new_TMaterial);
      instance.SetNewArray(&newArray_TMaterial);
      instance.SetDelete(&delete_TMaterial);
      instance.SetDeleteArray(&deleteArray_TMaterial);
      instance.SetDestructor(&destruct_TMaterial);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMaterial*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TNode_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TNode_IsA(const void*);
   static void *new_TNode(void *p = 0);
   static void *newArray_TNode(Long_t size);
   static void delete_TNode(void *p);
   static void deleteArray_TNode(void *p);
   static void destruct_TNode(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TNode*)
   {
      ::TNode *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TNode", ::TNode::Class_Version(), "g3d/inc/TNode.h", 43,
                  typeid(::TNode), DefineBehavior(ptr, ptr),
                  &::TNode::Dictionary, &TNode_IsA, 1,
                  sizeof(::TNode) );
      instance.SetNew(&new_TNode);
      instance.SetNewArray(&newArray_TNode);
      instance.SetDelete(&delete_TNode);
      instance.SetDeleteArray(&deleteArray_TNode);
      instance.SetDestructor(&destruct_TNode);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TNode*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TShape_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TShape_IsA(const void*);
   static void *new_TShape(void *p = 0);
   static void *newArray_TShape(Long_t size);
   static void delete_TShape(void *p);
   static void deleteArray_TShape(void *p);
   static void destruct_TShape(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TShape*)
   {
      ::TShape *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TShape", ::TShape::Class_Version(), "g3d/inc/TShape.h", 47,
                  typeid(::TShape), DefineBehavior(ptr, ptr),
                  &::TShape::Dictionary, &TShape_IsA, 1,
                  sizeof(::TShape) );
      instance.SetNew(&new_TShape);
      instance.SetNewArray(&newArray_TShape);
      instance.SetDelete(&delete_TShape);
      instance.SetDeleteArray(&deleteArray_TShape);
      instance.SetDestructor(&destruct_TShape);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TShape*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TBRIK_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TBRIK_IsA(const void*);
   static void *new_TBRIK(void *p = 0);
   static void *newArray_TBRIK(Long_t size);
   static void delete_TBRIK(void *p);
   static void deleteArray_TBRIK(void *p);
   static void destruct_TBRIK(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TBRIK*)
   {
      ::TBRIK *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TBRIK", ::TBRIK::Class_Version(), "g3d/inc/TBRIK.h", 28,
                  typeid(::TBRIK), DefineBehavior(ptr, ptr),
                  &::TBRIK::Dictionary, &TBRIK_IsA, 4,
                  sizeof(::TBRIK) );
      instance.SetNew(&new_TBRIK);
      instance.SetNewArray(&newArray_TBRIK);
      instance.SetDelete(&delete_TBRIK);
      instance.SetDeleteArray(&deleteArray_TBRIK);
      instance.SetDestructor(&destruct_TBRIK);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TBRIK*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TTRD2_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TTRD2_IsA(const void*);
   static void *new_TTRD2(void *p = 0);
   static void *newArray_TTRD2(Long_t size);
   static void delete_TTRD2(void *p);
   static void deleteArray_TTRD2(void *p);
   static void destruct_TTRD2(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TTRD2*)
   {
      ::TTRD2 *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TTRD2", ::TTRD2::Class_Version(), "g3d/inc/TTRD2.h", 31,
                  typeid(::TTRD2), DefineBehavior(ptr, ptr),
                  &::TTRD2::Dictionary, &TTRD2_IsA, 4,
                  sizeof(::TTRD2) );
      instance.SetNew(&new_TTRD2);
      instance.SetNewArray(&newArray_TTRD2);
      instance.SetDelete(&delete_TTRD2);
      instance.SetDeleteArray(&deleteArray_TTRD2);
      instance.SetDestructor(&destruct_TTRD2);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TTRD2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMixture_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMixture_IsA(const void*);
   static void *new_TMixture(void *p = 0);
   static void *newArray_TMixture(Long_t size);
   static void delete_TMixture(void *p);
   static void deleteArray_TMixture(void *p);
   static void destruct_TMixture(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMixture*)
   {
      ::TMixture *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMixture", ::TMixture::Class_Version(), "g3d/inc/TMixture.h", 29,
                  typeid(::TMixture), DefineBehavior(ptr, ptr),
                  &::TMixture::Dictionary, &TMixture_IsA, 1,
                  sizeof(::TMixture) );
      instance.SetNew(&new_TMixture);
      instance.SetNewArray(&newArray_TMixture);
      instance.SetDelete(&delete_TMixture);
      instance.SetDeleteArray(&deleteArray_TMixture);
      instance.SetDestructor(&destruct_TMixture);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMixture*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TTUBE_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TTUBE_IsA(const void*);
   static void *new_TTUBE(void *p = 0);
   static void *newArray_TTUBE(Long_t size);
   static void delete_TTUBE(void *p);
   static void deleteArray_TTUBE(void *p);
   static void destruct_TTUBE(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TTUBE*)
   {
      ::TTUBE *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TTUBE", ::TTUBE::Class_Version(), "g3d/inc/TTUBE.h", 36,
                  typeid(::TTUBE), DefineBehavior(ptr, ptr),
                  &::TTUBE::Dictionary, &TTUBE_IsA, 1,
                  sizeof(::TTUBE) );
      instance.SetNew(&new_TTUBE);
      instance.SetNewArray(&newArray_TTUBE);
      instance.SetDelete(&delete_TTUBE);
      instance.SetDeleteArray(&deleteArray_TTUBE);
      instance.SetDestructor(&destruct_TTUBE);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TTUBE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TTUBS_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TTUBS_IsA(const void*);
   static void *new_TTUBS(void *p = 0);
   static void *newArray_TTUBS(Long_t size);
   static void delete_TTUBS(void *p);
   static void deleteArray_TTUBS(void *p);
   static void destruct_TTUBS(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TTUBS*)
   {
      ::TTUBS *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TTUBS", ::TTUBS::Class_Version(), "g3d/inc/TTUBS.h", 31,
                  typeid(::TTUBS), DefineBehavior(ptr, ptr),
                  &::TTUBS::Dictionary, &TTUBS_IsA, 4,
                  sizeof(::TTUBS) );
      instance.SetNew(&new_TTUBS);
      instance.SetNewArray(&newArray_TTUBS);
      instance.SetDelete(&delete_TTUBS);
      instance.SetDeleteArray(&deleteArray_TTUBS);
      instance.SetDestructor(&destruct_TTUBS);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TTUBS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TCONS_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCONS_IsA(const void*);
   static void *new_TCONS(void *p = 0);
   static void *newArray_TCONS(Long_t size);
   static void delete_TCONS(void *p);
   static void deleteArray_TCONS(void *p);
   static void destruct_TCONS(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCONS*)
   {
      ::TCONS *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCONS", ::TCONS::Class_Version(), "g3d/inc/TCONS.h", 29,
                  typeid(::TCONS), DefineBehavior(ptr, ptr),
                  &::TCONS::Dictionary, &TCONS_IsA, 4,
                  sizeof(::TCONS) );
      instance.SetNew(&new_TCONS);
      instance.SetNewArray(&newArray_TCONS);
      instance.SetDelete(&delete_TCONS);
      instance.SetDeleteArray(&deleteArray_TCONS);
      instance.SetDestructor(&destruct_TCONS);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCONS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TTRAP_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TTRAP_IsA(const void*);
   static void *new_TTRAP(void *p = 0);
   static void *newArray_TTRAP(Long_t size);
   static void delete_TTRAP(void *p);
   static void deleteArray_TTRAP(void *p);
   static void destruct_TTRAP(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TTRAP*)
   {
      ::TTRAP *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TTRAP", ::TTRAP::Class_Version(), "g3d/inc/TTRAP.h", 35,
                  typeid(::TTRAP), DefineBehavior(ptr, ptr),
                  &::TTRAP::Dictionary, &TTRAP_IsA, 4,
                  sizeof(::TTRAP) );
      instance.SetNew(&new_TTRAP);
      instance.SetNewArray(&newArray_TTRAP);
      instance.SetDelete(&delete_TTRAP);
      instance.SetDeleteArray(&deleteArray_TTRAP);
      instance.SetDestructor(&destruct_TTRAP);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TTRAP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPolyLine3D_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPolyLine3D_IsA(const void*);
   static void *new_TPolyLine3D(void *p = 0);
   static void *newArray_TPolyLine3D(Long_t size);
   static void delete_TPolyLine3D(void *p);
   static void deleteArray_TPolyLine3D(void *p);
   static void destruct_TPolyLine3D(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPolyLine3D*)
   {
      ::TPolyLine3D *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPolyLine3D", ::TPolyLine3D::Class_Version(), "g3d/inc/TPolyLine3D.h", 41,
                  typeid(::TPolyLine3D), DefineBehavior(ptr, ptr),
                  &::TPolyLine3D::Dictionary, &TPolyLine3D_IsA, 1,
                  sizeof(::TPolyLine3D) );
      instance.SetNew(&new_TPolyLine3D);
      instance.SetNewArray(&newArray_TPolyLine3D);
      instance.SetDelete(&delete_TPolyLine3D);
      instance.SetDeleteArray(&deleteArray_TPolyLine3D);
      instance.SetDestructor(&destruct_TPolyLine3D);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPolyLine3D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TRotMatrix_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TRotMatrix_IsA(const void*);
   static void *new_TRotMatrix(void *p = 0);
   static void *newArray_TRotMatrix(Long_t size);
   static void delete_TRotMatrix(void *p);
   static void deleteArray_TRotMatrix(void *p);
   static void destruct_TRotMatrix(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TRotMatrix*)
   {
      ::TRotMatrix *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TRotMatrix", ::TRotMatrix::Class_Version(), "g3d/inc/TRotMatrix.h", 34,
                  typeid(::TRotMatrix), DefineBehavior(ptr, ptr),
                  &::TRotMatrix::Dictionary, &TRotMatrix_IsA, 1,
                  sizeof(::TRotMatrix) );
      instance.SetNew(&new_TRotMatrix);
      instance.SetNewArray(&newArray_TRotMatrix);
      instance.SetDelete(&delete_TRotMatrix);
      instance.SetDeleteArray(&deleteArray_TRotMatrix);
      instance.SetDestructor(&destruct_TRotMatrix);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TRotMatrix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void THelix_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *THelix_IsA(const void*);
   static void *new_THelix(void *p = 0);
   static void *newArray_THelix(Long_t size);
   static void delete_THelix(void *p);
   static void deleteArray_THelix(void *p);
   static void destruct_THelix(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::THelix*)
   {
      ::THelix *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("THelix", ::THelix::Class_Version(), "g3d/inc/THelix.h", 40,
                  typeid(::THelix), DefineBehavior(ptr, ptr),
                  &::THelix::Dictionary, &THelix_IsA, 1,
                  sizeof(::THelix) );
      instance.SetNew(&new_THelix);
      instance.SetNewArray(&newArray_THelix);
      instance.SetDelete(&delete_THelix);
      instance.SetDeleteArray(&deleteArray_THelix);
      instance.SetDestructor(&destruct_THelix);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::THelix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPCON_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPCON_IsA(const void*);
   static void *new_TPCON(void *p = 0);
   static void *newArray_TPCON(Long_t size);
   static void delete_TPCON(void *p);
   static void deleteArray_TPCON(void *p);
   static void destruct_TPCON(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPCON*)
   {
      ::TPCON *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPCON", ::TPCON::Class_Version(), "g3d/inc/TPCON.h", 35,
                  typeid(::TPCON), DefineBehavior(ptr, ptr),
                  &::TPCON::Dictionary, &TPCON_IsA, 1,
                  sizeof(::TPCON) );
      instance.SetNew(&new_TPCON);
      instance.SetNewArray(&newArray_TPCON);
      instance.SetDelete(&delete_TPCON);
      instance.SetDeleteArray(&deleteArray_TPCON);
      instance.SetDestructor(&destruct_TPCON);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPCON*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPGON_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPGON_IsA(const void*);
   static void *new_TPGON(void *p = 0);
   static void *newArray_TPGON(Long_t size);
   static void delete_TPGON(void *p);
   static void deleteArray_TPGON(void *p);
   static void destruct_TPGON(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPGON*)
   {
      ::TPGON *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPGON", ::TPGON::Class_Version(), "g3d/inc/TPGON.h", 32,
                  typeid(::TPGON), DefineBehavior(ptr, ptr),
                  &::TPGON::Dictionary, &TPGON_IsA, 4,
                  sizeof(::TPGON) );
      instance.SetNew(&new_TPGON);
      instance.SetNewArray(&newArray_TPGON);
      instance.SetDelete(&delete_TPGON);
      instance.SetDeleteArray(&deleteArray_TPGON);
      instance.SetDestructor(&destruct_TPGON);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPGON*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TSPHE_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TSPHE_IsA(const void*);
   static void *new_TSPHE(void *p = 0);
   static void *newArray_TSPHE(Long_t size);
   static void delete_TSPHE(void *p);
   static void deleteArray_TSPHE(void *p);
   static void destruct_TSPHE(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TSPHE*)
   {
      ::TSPHE *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TSPHE", ::TSPHE::Class_Version(), "g3d/inc/TSPHE.h", 30,
                  typeid(::TSPHE), DefineBehavior(ptr, ptr),
                  &::TSPHE::Dictionary, &TSPHE_IsA, 1,
                  sizeof(::TSPHE) );
      instance.SetNew(&new_TSPHE);
      instance.SetNewArray(&newArray_TSPHE);
      instance.SetDelete(&delete_TSPHE);
      instance.SetDeleteArray(&deleteArray_TSPHE);
      instance.SetDestructor(&destruct_TSPHE);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TSPHE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPoints3DABC_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPoints3DABC_IsA(const void*);
   static void delete_TPoints3DABC(void *p);
   static void deleteArray_TPoints3DABC(void *p);
   static void destruct_TPoints3DABC(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPoints3DABC*)
   {
      ::TPoints3DABC *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPoints3DABC", ::TPoints3DABC::Class_Version(), "g3d/inc/TPoints3DABC.h", 27,
                  typeid(::TPoints3DABC), DefineBehavior(ptr, ptr),
                  &::TPoints3DABC::Dictionary, &TPoints3DABC_IsA, 0,
                  sizeof(::TPoints3DABC) );
      instance.SetDelete(&delete_TPoints3DABC);
      instance.SetDeleteArray(&deleteArray_TPoints3DABC);
      instance.SetDestructor(&destruct_TPoints3DABC);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPoints3DABC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGTRA_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGTRA_IsA(const void*);
   static void *new_TGTRA(void *p = 0);
   static void *newArray_TGTRA(Long_t size);
   static void delete_TGTRA(void *p);
   static void deleteArray_TGTRA(void *p);
   static void destruct_TGTRA(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGTRA*)
   {
      ::TGTRA *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGTRA", ::TGTRA::Class_Version(), "g3d/inc/TGTRA.h", 29,
                  typeid(::TGTRA), DefineBehavior(ptr, ptr),
                  &::TGTRA::Dictionary, &TGTRA_IsA, 4,
                  sizeof(::TGTRA) );
      instance.SetNew(&new_TGTRA);
      instance.SetNewArray(&newArray_TGTRA);
      instance.SetDelete(&delete_TGTRA);
      instance.SetDeleteArray(&deleteArray_TGTRA);
      instance.SetDestructor(&destruct_TGTRA);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGTRA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TMarker3DBox_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TMarker3DBox_IsA(const void*);
   static void *new_TMarker3DBox(void *p = 0);
   static void *newArray_TMarker3DBox(Long_t size);
   static void delete_TMarker3DBox(void *p);
   static void deleteArray_TMarker3DBox(void *p);
   static void destruct_TMarker3DBox(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TMarker3DBox*)
   {
      ::TMarker3DBox *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TMarker3DBox", ::TMarker3DBox::Class_Version(), "g3d/inc/TMarker3DBox.h", 46,
                  typeid(::TMarker3DBox), DefineBehavior(ptr, ptr),
                  &::TMarker3DBox::Dictionary, &TMarker3DBox_IsA, 1,
                  sizeof(::TMarker3DBox) );
      instance.SetNew(&new_TMarker3DBox);
      instance.SetNewArray(&newArray_TMarker3DBox);
      instance.SetDelete(&delete_TMarker3DBox);
      instance.SetDeleteArray(&deleteArray_TMarker3DBox);
      instance.SetDestructor(&destruct_TMarker3DBox);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TMarker3DBox*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TCONE_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCONE_IsA(const void*);
   static void *new_TCONE(void *p = 0);
   static void *newArray_TCONE(Long_t size);
   static void delete_TCONE(void *p);
   static void deleteArray_TCONE(void *p);
   static void destruct_TCONE(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCONE*)
   {
      ::TCONE *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCONE", ::TCONE::Class_Version(), "g3d/inc/TCONE.h", 30,
                  typeid(::TCONE), DefineBehavior(ptr, ptr),
                  &::TCONE::Dictionary, &TCONE_IsA, 4,
                  sizeof(::TCONE) );
      instance.SetNew(&new_TCONE);
      instance.SetNewArray(&newArray_TCONE);
      instance.SetDelete(&delete_TCONE);
      instance.SetDeleteArray(&deleteArray_TCONE);
      instance.SetDestructor(&destruct_TCONE);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCONE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void THYPE_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *THYPE_IsA(const void*);
   static void *new_THYPE(void *p = 0);
   static void *newArray_THYPE(Long_t size);
   static void delete_THYPE(void *p);
   static void deleteArray_THYPE(void *p);
   static void destruct_THYPE(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::THYPE*)
   {
      ::THYPE *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("THYPE", ::THYPE::Class_Version(), "g3d/inc/THYPE.h", 30,
                  typeid(::THYPE), DefineBehavior(ptr, ptr),
                  &::THYPE::Dictionary, &THYPE_IsA, 4,
                  sizeof(::THYPE) );
      instance.SetNew(&new_THYPE);
      instance.SetNewArray(&newArray_THYPE);
      instance.SetDelete(&delete_THYPE);
      instance.SetDeleteArray(&deleteArray_THYPE);
      instance.SetDestructor(&destruct_THYPE);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::THYPE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TUtil3D_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TUtil3D_IsA(const void*);
   static void *new_TUtil3D(void *p = 0);
   static void *newArray_TUtil3D(Long_t size);
   static void delete_TUtil3D(void *p);
   static void deleteArray_TUtil3D(void *p);
   static void destruct_TUtil3D(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TUtil3D*)
   {
      ::TUtil3D *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TUtil3D", ::TUtil3D::Class_Version(), "g3d/inc/TUtil3D.h", 28,
                  typeid(::TUtil3D), DefineBehavior(ptr, ptr),
                  &::TUtil3D::Dictionary, &TUtil3D_IsA, 0,
                  sizeof(::TUtil3D) );
      instance.SetNew(&new_TUtil3D);
      instance.SetNewArray(&newArray_TUtil3D);
      instance.SetDelete(&delete_TUtil3D);
      instance.SetDeleteArray(&deleteArray_TUtil3D);
      instance.SetDestructor(&destruct_TUtil3D);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TUtil3D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TXTRU_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TXTRU_IsA(const void*);
   static void *new_TXTRU(void *p = 0);
   static void *newArray_TXTRU(Long_t size);
   static void delete_TXTRU(void *p);
   static void deleteArray_TXTRU(void *p);
   static void destruct_TXTRU(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TXTRU*)
   {
      ::TXTRU *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TXTRU", ::TXTRU::Class_Version(), "g3d/inc/TXTRU.h", 24,
                  typeid(::TXTRU), DefineBehavior(ptr, ptr),
                  &::TXTRU::Dictionary, &TXTRU_IsA, 4,
                  sizeof(::TXTRU) );
      instance.SetNew(&new_TXTRU);
      instance.SetNewArray(&newArray_TXTRU);
      instance.SetDelete(&delete_TXTRU);
      instance.SetDeleteArray(&deleteArray_TXTRU);
      instance.SetDestructor(&destruct_TXTRU);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TXTRU*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TTRD1_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TTRD1_IsA(const void*);
   static void *new_TTRD1(void *p = 0);
   static void *newArray_TTRD1(Long_t size);
   static void delete_TTRD1(void *p);
   static void deleteArray_TTRD1(void *p);
   static void destruct_TTRD1(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TTRD1*)
   {
      ::TTRD1 *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TTRD1", ::TTRD1::Class_Version(), "g3d/inc/TTRD1.h", 30,
                  typeid(::TTRD1), DefineBehavior(ptr, ptr),
                  &::TTRD1::Dictionary, &TTRD1_IsA, 4,
                  sizeof(::TTRD1) );
      instance.SetNew(&new_TTRD1);
      instance.SetNewArray(&newArray_TTRD1);
      instance.SetDelete(&delete_TTRD1);
      instance.SetDeleteArray(&deleteArray_TTRD1);
      instance.SetDestructor(&destruct_TTRD1);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TTRD1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TELTU_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TELTU_IsA(const void*);
   static void *new_TELTU(void *p = 0);
   static void *newArray_TELTU(Long_t size);
   static void delete_TELTU(void *p);
   static void deleteArray_TELTU(void *p);
   static void destruct_TELTU(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TELTU*)
   {
      ::TELTU *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TELTU", ::TELTU::Class_Version(), "g3d/inc/TELTU.h", 33,
                  typeid(::TELTU), DefineBehavior(ptr, ptr),
                  &::TELTU::Dictionary, &TELTU_IsA, 4,
                  sizeof(::TELTU) );
      instance.SetNew(&new_TELTU);
      instance.SetNewArray(&newArray_TELTU);
      instance.SetDelete(&delete_TELTU);
      instance.SetDeleteArray(&deleteArray_TELTU);
      instance.SetDestructor(&destruct_TELTU);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TELTU*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TAxis3D_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TAxis3D_IsA(const void*);
   static void *new_TAxis3D(void *p = 0);
   static void *newArray_TAxis3D(Long_t size);
   static void delete_TAxis3D(void *p);
   static void deleteArray_TAxis3D(void *p);
   static void destruct_TAxis3D(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TAxis3D*)
   {
      ::TAxis3D *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TAxis3D", ::TAxis3D::Class_Version(), "g3d/inc/TAxis3D.h", 51,
                  typeid(::TAxis3D), DefineBehavior(ptr, ptr),
                  &::TAxis3D::Dictionary, &TAxis3D_IsA, 4,
                  sizeof(::TAxis3D) );
      instance.SetNew(&new_TAxis3D);
      instance.SetNewArray(&newArray_TAxis3D);
      instance.SetDelete(&delete_TAxis3D);
      instance.SetDeleteArray(&deleteArray_TAxis3D);
      instance.SetDestructor(&destruct_TAxis3D);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TAxis3D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPolyMarker3D_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPolyMarker3D_IsA(const void*);
   static void *new_TPolyMarker3D(void *p = 0);
   static void *newArray_TPolyMarker3D(Long_t size);
   static void delete_TPolyMarker3D(void *p);
   static void deleteArray_TPolyMarker3D(void *p);
   static void destruct_TPolyMarker3D(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPolyMarker3D*)
   {
      ::TPolyMarker3D *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPolyMarker3D", ::TPolyMarker3D::Class_Version(), "g3d/inc/TPolyMarker3D.h", 37,
                  typeid(::TPolyMarker3D), DefineBehavior(ptr, ptr),
                  &::TPolyMarker3D::Dictionary, &TPolyMarker3D_IsA, 1,
                  sizeof(::TPolyMarker3D) );
      instance.SetNew(&new_TPolyMarker3D);
      instance.SetNewArray(&newArray_TPolyMarker3D);
      instance.SetDelete(&delete_TPolyMarker3D);
      instance.SetDeleteArray(&deleteArray_TPolyMarker3D);
      instance.SetDestructor(&destruct_TPolyMarker3D);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPolyMarker3D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TCTUB_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TCTUB_IsA(const void*);
   static void *new_TCTUB(void *p = 0);
   static void *newArray_TCTUB(Long_t size);
   static void delete_TCTUB(void *p);
   static void deleteArray_TCTUB(void *p);
   static void destruct_TCTUB(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TCTUB*)
   {
      ::TCTUB *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TCTUB", ::TCTUB::Class_Version(), "g3d/inc/TCTUB.h", 31,
                  typeid(::TCTUB), DefineBehavior(ptr, ptr),
                  &::TCTUB::Dictionary, &TCTUB_IsA, 1,
                  sizeof(::TCTUB) );
      instance.SetNew(&new_TCTUB);
      instance.SetNewArray(&newArray_TCTUB);
      instance.SetDelete(&delete_TCTUB);
      instance.SetDeleteArray(&deleteArray_TCTUB);
      instance.SetDestructor(&destruct_TCTUB);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TCTUB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TGeometry_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TGeometry_IsA(const void*);
   static void *new_TGeometry(void *p = 0);
   static void *newArray_TGeometry(Long_t size);
   static void delete_TGeometry(void *p);
   static void deleteArray_TGeometry(void *p);
   static void destruct_TGeometry(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TGeometry*)
   {
      ::TGeometry *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TGeometry", ::TGeometry::Class_Version(), "g3d/inc/TGeometry.h", 43,
                  typeid(::TGeometry), DefineBehavior(ptr, ptr),
                  &::TGeometry::Dictionary, &TGeometry_IsA, 1,
                  sizeof(::TGeometry) );
      instance.SetNew(&new_TGeometry);
      instance.SetNewArray(&newArray_TGeometry);
      instance.SetDelete(&delete_TGeometry);
      instance.SetDeleteArray(&deleteArray_TGeometry);
      instance.SetDestructor(&destruct_TGeometry);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TGeometry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TNodeDiv_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TNodeDiv_IsA(const void*);
   static void *new_TNodeDiv(void *p = 0);
   static void *newArray_TNodeDiv(Long_t size);
   static void delete_TNodeDiv(void *p);
   static void deleteArray_TNodeDiv(void *p);
   static void destruct_TNodeDiv(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TNodeDiv*)
   {
      ::TNodeDiv *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TNodeDiv", ::TNodeDiv::Class_Version(), "g3d/inc/TNodeDiv.h", 30,
                  typeid(::TNodeDiv), DefineBehavior(ptr, ptr),
                  &::TNodeDiv::Dictionary, &TNodeDiv_IsA, 4,
                  sizeof(::TNodeDiv) );
      instance.SetNew(&new_TNodeDiv);
      instance.SetNewArray(&newArray_TNodeDiv);
      instance.SetDelete(&delete_TNodeDiv);
      instance.SetDeleteArray(&deleteArray_TNodeDiv);
      instance.SetDestructor(&destruct_TNodeDiv);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TNodeDiv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void TPARA_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static TClass *TPARA_IsA(const void*);
   static void *new_TPARA(void *p = 0);
   static void *newArray_TPARA(Long_t size);
   static void delete_TPARA(void *p);
   static void deleteArray_TPARA(void *p);
   static void destruct_TPARA(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::TPARA*)
   {
      ::TPARA *ptr = 0;
      static ::ROOT::TGenericClassInfo 
         instance("TPARA", ::TPARA::Class_Version(), "g3d/inc/TPARA.h", 32,
                  typeid(::TPARA), DefineBehavior(ptr, ptr),
                  &::TPARA::Dictionary, &TPARA_IsA, 4,
                  sizeof(::TPARA) );
      instance.SetNew(&new_TPARA);
      instance.SetNewArray(&newArray_TPARA);
      instance.SetDelete(&delete_TPARA);
      instance.SetDeleteArray(&deleteArray_TPARA);
      instance.SetDestructor(&destruct_TPARA);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::TPARA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TMaterial::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMaterial::Class_Name()
{
   return "TMaterial";
}

//______________________________________________________________________________
const char *TMaterial::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMaterial*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMaterial::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMaterial*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMaterial::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMaterial*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMaterial::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMaterial*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TNode::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TNode::Class_Name()
{
   return "TNode";
}

//______________________________________________________________________________
const char *TNode::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TNode*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TNode::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TNode*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TNode::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TNode*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TNode::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TNode*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TShape::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TShape::Class_Name()
{
   return "TShape";
}

//______________________________________________________________________________
const char *TShape::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TShape*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TShape::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TShape*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TShape::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TShape*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TShape::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TShape*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TBRIK::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBRIK::Class_Name()
{
   return "TBRIK";
}

//______________________________________________________________________________
const char *TBRIK::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TBRIK*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBRIK::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TBRIK*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBRIK::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TBRIK*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBRIK::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TBRIK*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTRD2::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTRD2::Class_Name()
{
   return "TTRD2";
}

//______________________________________________________________________________
const char *TTRD2::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TTRD2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTRD2::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TTRD2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTRD2::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TTRD2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTRD2::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TTRD2*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMixture::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMixture::Class_Name()
{
   return "TMixture";
}

//______________________________________________________________________________
const char *TMixture::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMixture*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMixture::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMixture*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMixture::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMixture*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMixture::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMixture*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTUBE::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTUBE::Class_Name()
{
   return "TTUBE";
}

//______________________________________________________________________________
const char *TTUBE::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TTUBE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTUBE::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TTUBE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTUBE::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TTUBE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTUBE::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TTUBE*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTUBS::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTUBS::Class_Name()
{
   return "TTUBS";
}

//______________________________________________________________________________
const char *TTUBS::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TTUBS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTUBS::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TTUBS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTUBS::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TTUBS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTUBS::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TTUBS*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCONS::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCONS::Class_Name()
{
   return "TCONS";
}

//______________________________________________________________________________
const char *TCONS::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCONS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCONS::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCONS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCONS::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCONS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCONS::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCONS*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTRAP::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTRAP::Class_Name()
{
   return "TTRAP";
}

//______________________________________________________________________________
const char *TTRAP::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TTRAP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTRAP::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TTRAP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTRAP::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TTRAP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTRAP::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TTRAP*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPolyLine3D::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPolyLine3D::Class_Name()
{
   return "TPolyLine3D";
}

//______________________________________________________________________________
const char *TPolyLine3D::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPolyLine3D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPolyLine3D::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPolyLine3D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPolyLine3D::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPolyLine3D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPolyLine3D::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPolyLine3D*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRotMatrix::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRotMatrix::Class_Name()
{
   return "TRotMatrix";
}

//______________________________________________________________________________
const char *TRotMatrix::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TRotMatrix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRotMatrix::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TRotMatrix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRotMatrix::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TRotMatrix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRotMatrix::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TRotMatrix*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THelix::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THelix::Class_Name()
{
   return "THelix";
}

//______________________________________________________________________________
const char *THelix::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::THelix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THelix::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::THelix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THelix::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::THelix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THelix::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::THelix*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPCON::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPCON::Class_Name()
{
   return "TPCON";
}

//______________________________________________________________________________
const char *TPCON::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPCON*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPCON::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPCON*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPCON::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPCON*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPCON::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPCON*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPGON::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPGON::Class_Name()
{
   return "TPGON";
}

//______________________________________________________________________________
const char *TPGON::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPGON*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPGON::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPGON*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPGON::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPGON*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPGON::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPGON*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSPHE::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSPHE::Class_Name()
{
   return "TSPHE";
}

//______________________________________________________________________________
const char *TSPHE::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TSPHE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSPHE::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TSPHE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSPHE::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TSPHE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSPHE::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TSPHE*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPoints3DABC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPoints3DABC::Class_Name()
{
   return "TPoints3DABC";
}

//______________________________________________________________________________
const char *TPoints3DABC::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPoints3DABC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPoints3DABC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPoints3DABC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPoints3DABC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPoints3DABC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPoints3DABC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPoints3DABC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGTRA::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGTRA::Class_Name()
{
   return "TGTRA";
}

//______________________________________________________________________________
const char *TGTRA::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGTRA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGTRA::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGTRA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGTRA::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGTRA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGTRA::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGTRA*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TMarker3DBox::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMarker3DBox::Class_Name()
{
   return "TMarker3DBox";
}

//______________________________________________________________________________
const char *TMarker3DBox::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TMarker3DBox*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMarker3DBox::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TMarker3DBox*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMarker3DBox::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TMarker3DBox*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMarker3DBox::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TMarker3DBox*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCONE::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCONE::Class_Name()
{
   return "TCONE";
}

//______________________________________________________________________________
const char *TCONE::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCONE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCONE::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCONE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCONE::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCONE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCONE::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCONE*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THYPE::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THYPE::Class_Name()
{
   return "THYPE";
}

//______________________________________________________________________________
const char *THYPE::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::THYPE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THYPE::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::THYPE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THYPE::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::THYPE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THYPE::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::THYPE*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TUtil3D::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TUtil3D::Class_Name()
{
   return "TUtil3D";
}

//______________________________________________________________________________
const char *TUtil3D::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TUtil3D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TUtil3D::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TUtil3D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TUtil3D::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TUtil3D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TUtil3D::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TUtil3D*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TXTRU::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TXTRU::Class_Name()
{
   return "TXTRU";
}

//______________________________________________________________________________
const char *TXTRU::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TXTRU*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXTRU::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TXTRU*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXTRU::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TXTRU*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXTRU::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TXTRU*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTRD1::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTRD1::Class_Name()
{
   return "TTRD1";
}

//______________________________________________________________________________
const char *TTRD1::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TTRD1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTRD1::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TTRD1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTRD1::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TTRD1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTRD1::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TTRD1*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TELTU::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TELTU::Class_Name()
{
   return "TELTU";
}

//______________________________________________________________________________
const char *TELTU::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TELTU*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TELTU::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TELTU*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TELTU::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TELTU*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TELTU::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TELTU*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAxis3D::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAxis3D::Class_Name()
{
   return "TAxis3D";
}

//______________________________________________________________________________
const char *TAxis3D::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TAxis3D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAxis3D::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TAxis3D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAxis3D::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TAxis3D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAxis3D::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TAxis3D*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPolyMarker3D::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPolyMarker3D::Class_Name()
{
   return "TPolyMarker3D";
}

//______________________________________________________________________________
const char *TPolyMarker3D::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPolyMarker3D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPolyMarker3D::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPolyMarker3D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPolyMarker3D::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPolyMarker3D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPolyMarker3D::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPolyMarker3D*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCTUB::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCTUB::Class_Name()
{
   return "TCTUB";
}

//______________________________________________________________________________
const char *TCTUB::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TCTUB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCTUB::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TCTUB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCTUB::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TCTUB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCTUB::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TCTUB*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGeometry::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeometry::Class_Name()
{
   return "TGeometry";
}

//______________________________________________________________________________
const char *TGeometry::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TGeometry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeometry::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TGeometry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeometry::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TGeometry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeometry::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TGeometry*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TNodeDiv::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TNodeDiv::Class_Name()
{
   return "TNodeDiv";
}

//______________________________________________________________________________
const char *TNodeDiv::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TNodeDiv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TNodeDiv::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TNodeDiv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TNodeDiv::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TNodeDiv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TNodeDiv::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TNodeDiv*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPARA::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPARA::Class_Name()
{
   return "TPARA";
}

//______________________________________________________________________________
const char *TPARA::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::TPARA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPARA::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::TPARA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPARA::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::TPARA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPARA::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::TPARA*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TAxis3D::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAxis3D.

   if (R__b.IsReading()) {
      TAxis3D::Class()->ReadBuffer(R__b, this);
   } else {
      TAxis3D::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TAxis3D::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TAxis3D.

      TClass *R__cl = ::TAxis3D::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fAxis[3]", fAxis);
      R__insp.Inspect(R__cl, R__parent, "fOption", &fOption);
      fOption.ShowMembers(R__insp, strcat(R__parent,"fOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fSelected", &fSelected);
      R__insp.Inspect(R__cl, R__parent, "fZoomMode", &fZoomMode);
      R__insp.Inspect(R__cl, R__parent, "fStickyZoom", &fStickyZoom);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TAxis3D_IsA(const void *obj) {
      return ((::TAxis3D*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TAxis3D(void *p) {
      return  p ? new(p) ::TAxis3D : new ::TAxis3D;
   }
   static void *newArray_TAxis3D(Long_t size) {
      return new ::TAxis3D[size];
   }
   // Wrapper around operator delete
   static void delete_TAxis3D(void *p) {
      delete ((::TAxis3D*)p);
   }
   static void deleteArray_TAxis3D(void *p) {
      delete [] ((::TAxis3D*)p);
   }
   static void destruct_TAxis3D(void *p) {
      typedef ::TAxis3D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAxis3D

//______________________________________________________________________________
void TBRIK::Streamer(TBuffer &R__b)
{
   // Stream an object of class TBRIK.

   if (R__b.IsReading()) {
      TBRIK::Class()->ReadBuffer(R__b, this);
   } else {
      TBRIK::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TBRIK::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TBRIK.

      TClass *R__cl = ::TBRIK::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDx", &fDx);
      R__insp.Inspect(R__cl, R__parent, "fDy", &fDy);
      R__insp.Inspect(R__cl, R__parent, "fDz", &fDz);
      TShape::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TBRIK_IsA(const void *obj) {
      return ((::TBRIK*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TBRIK(void *p) {
      return  p ? new(p) ::TBRIK : new ::TBRIK;
   }
   static void *newArray_TBRIK(Long_t size) {
      return new ::TBRIK[size];
   }
   // Wrapper around operator delete
   static void delete_TBRIK(void *p) {
      delete ((::TBRIK*)p);
   }
   static void deleteArray_TBRIK(void *p) {
      delete [] ((::TBRIK*)p);
   }
   static void destruct_TBRIK(void *p) {
      typedef ::TBRIK current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TBRIK

//______________________________________________________________________________
void TCONE::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCONE.

   if (R__b.IsReading()) {
      TCONE::Class()->ReadBuffer(R__b, this);
   } else {
      TCONE::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TCONE::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCONE.

      TClass *R__cl = ::TCONE::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRmin2", &fRmin2);
      R__insp.Inspect(R__cl, R__parent, "fRmax2", &fRmax2);
      TTUBE::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCONE_IsA(const void *obj) {
      return ((::TCONE*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TCONE(void *p) {
      return  p ? new(p) ::TCONE : new ::TCONE;
   }
   static void *newArray_TCONE(Long_t size) {
      return new ::TCONE[size];
   }
   // Wrapper around operator delete
   static void delete_TCONE(void *p) {
      delete ((::TCONE*)p);
   }
   static void deleteArray_TCONE(void *p) {
      delete [] ((::TCONE*)p);
   }
   static void destruct_TCONE(void *p) {
      typedef ::TCONE current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCONE

//______________________________________________________________________________
void TCONS::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCONS.

   if (R__b.IsReading()) {
      TCONS::Class()->ReadBuffer(R__b, this);
   } else {
      TCONS::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TCONS::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCONS.

      TClass *R__cl = ::TCONS::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRmin2", &fRmin2);
      R__insp.Inspect(R__cl, R__parent, "fRmax2", &fRmax2);
      TTUBS::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCONS_IsA(const void *obj) {
      return ((::TCONS*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TCONS(void *p) {
      return  p ? new(p) ::TCONS : new ::TCONS;
   }
   static void *newArray_TCONS(Long_t size) {
      return new ::TCONS[size];
   }
   // Wrapper around operator delete
   static void delete_TCONS(void *p) {
      delete ((::TCONS*)p);
   }
   static void deleteArray_TCONS(void *p) {
      delete [] ((::TCONS*)p);
   }
   static void destruct_TCONS(void *p) {
      typedef ::TCONS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCONS

//______________________________________________________________________________
void TCTUB::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TCTUB.

      TClass *R__cl = ::TCTUB::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fCosLow[3]", fCosLow);
      R__insp.Inspect(R__cl, R__parent, "fCosHigh[3]", fCosHigh);
      TTUBS::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TCTUB_IsA(const void *obj) {
      return ((::TCTUB*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TCTUB(void *p) {
      return  p ? new(p) ::TCTUB : new ::TCTUB;
   }
   static void *newArray_TCTUB(Long_t size) {
      return new ::TCTUB[size];
   }
   // Wrapper around operator delete
   static void delete_TCTUB(void *p) {
      delete ((::TCTUB*)p);
   }
   static void deleteArray_TCTUB(void *p) {
      delete [] ((::TCTUB*)p);
   }
   static void destruct_TCTUB(void *p) {
      typedef ::TCTUB current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCTUB

//______________________________________________________________________________
void TELTU::Streamer(TBuffer &R__b)
{
   // Stream an object of class TELTU.

   if (R__b.IsReading()) {
      TELTU::Class()->ReadBuffer(R__b, this);
   } else {
      TELTU::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TELTU::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TELTU.

      TClass *R__cl = ::TELTU::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TTUBE::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TELTU_IsA(const void *obj) {
      return ((::TELTU*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TELTU(void *p) {
      return  p ? new(p) ::TELTU : new ::TELTU;
   }
   static void *newArray_TELTU(Long_t size) {
      return new ::TELTU[size];
   }
   // Wrapper around operator delete
   static void delete_TELTU(void *p) {
      delete ((::TELTU*)p);
   }
   static void deleteArray_TELTU(void *p) {
      delete [] ((::TELTU*)p);
   }
   static void destruct_TELTU(void *p) {
      typedef ::TELTU current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TELTU

//______________________________________________________________________________
void TGTRA::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGTRA.

   if (R__b.IsReading()) {
      TGTRA::Class()->ReadBuffer(R__b, this);
   } else {
      TGTRA::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TGTRA::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGTRA.

      TClass *R__cl = ::TGTRA::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fTwist", &fTwist);
      R__insp.Inspect(R__cl, R__parent, "fH1", &fH1);
      R__insp.Inspect(R__cl, R__parent, "fBl1", &fBl1);
      R__insp.Inspect(R__cl, R__parent, "fTl1", &fTl1);
      R__insp.Inspect(R__cl, R__parent, "fAlpha1", &fAlpha1);
      R__insp.Inspect(R__cl, R__parent, "fH2", &fH2);
      R__insp.Inspect(R__cl, R__parent, "fBl2", &fBl2);
      R__insp.Inspect(R__cl, R__parent, "fTl2", &fTl2);
      R__insp.Inspect(R__cl, R__parent, "fAlpha2", &fAlpha2);
      TBRIK::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGTRA_IsA(const void *obj) {
      return ((::TGTRA*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGTRA(void *p) {
      return  p ? new(p) ::TGTRA : new ::TGTRA;
   }
   static void *newArray_TGTRA(Long_t size) {
      return new ::TGTRA[size];
   }
   // Wrapper around operator delete
   static void delete_TGTRA(void *p) {
      delete ((::TGTRA*)p);
   }
   static void deleteArray_TGTRA(void *p) {
      delete [] ((::TGTRA*)p);
   }
   static void destruct_TGTRA(void *p) {
      typedef ::TGTRA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGTRA

//______________________________________________________________________________
void TGeometry::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TGeometry.

      TClass *R__cl = ::TGeometry::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMaterials", &fMaterials);
      R__insp.Inspect(R__cl, R__parent, "*fMatrices", &fMatrices);
      R__insp.Inspect(R__cl, R__parent, "*fShapes", &fShapes);
      R__insp.Inspect(R__cl, R__parent, "*fNodes", &fNodes);
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "*fCurrentNode", &fCurrentNode);
      R__insp.Inspect(R__cl, R__parent, "*fMaterialPointer", &fMaterialPointer);
      R__insp.Inspect(R__cl, R__parent, "*fMatrixPointer", &fMatrixPointer);
      R__insp.Inspect(R__cl, R__parent, "*fShapePointer", &fShapePointer);
      R__insp.Inspect(R__cl, R__parent, "fBomb", &fBomb);
      R__insp.Inspect(R__cl, R__parent, "fGeomLevel", &fGeomLevel);
      R__insp.Inspect(R__cl, R__parent, "fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "fY", &fY);
      R__insp.Inspect(R__cl, R__parent, "fZ", &fZ);
      R__insp.Inspect(R__cl, R__parent, "fTranslation[20][3]", fTranslation);
      R__insp.Inspect(R__cl, R__parent, "fRotMatrix[20][9]", fRotMatrix);
      R__insp.Inspect(R__cl, R__parent, "fIsReflection[20]", fIsReflection);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TGeometry_IsA(const void *obj) {
      return ((::TGeometry*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TGeometry(void *p) {
      return  p ? new(p) ::TGeometry : new ::TGeometry;
   }
   static void *newArray_TGeometry(Long_t size) {
      return new ::TGeometry[size];
   }
   // Wrapper around operator delete
   static void delete_TGeometry(void *p) {
      delete ((::TGeometry*)p);
   }
   static void deleteArray_TGeometry(void *p) {
      delete [] ((::TGeometry*)p);
   }
   static void destruct_TGeometry(void *p) {
      typedef ::TGeometry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeometry

//______________________________________________________________________________
void THelix::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THelix.

      TClass *R__cl = ::THelix::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fX0", &fX0);
      R__insp.Inspect(R__cl, R__parent, "fY0", &fY0);
      R__insp.Inspect(R__cl, R__parent, "fZ0", &fZ0);
      R__insp.Inspect(R__cl, R__parent, "fVt", &fVt);
      R__insp.Inspect(R__cl, R__parent, "fPhi0", &fPhi0);
      R__insp.Inspect(R__cl, R__parent, "fVz", &fVz);
      R__insp.Inspect(R__cl, R__parent, "fW", &fW);
      R__insp.Inspect(R__cl, R__parent, "fAxis[3]", fAxis);
      R__insp.Inspect(R__cl, R__parent, "*fRotMat", &fRotMat);
      R__insp.Inspect(R__cl, R__parent, "fRange[2]", fRange);
      TPolyLine3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *THelix_IsA(const void *obj) {
      return ((::THelix*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_THelix(void *p) {
      return  p ? new(p) ::THelix : new ::THelix;
   }
   static void *newArray_THelix(Long_t size) {
      return new ::THelix[size];
   }
   // Wrapper around operator delete
   static void delete_THelix(void *p) {
      delete ((::THelix*)p);
   }
   static void deleteArray_THelix(void *p) {
      delete [] ((::THelix*)p);
   }
   static void destruct_THelix(void *p) {
      typedef ::THelix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THelix

//______________________________________________________________________________
void THYPE::Streamer(TBuffer &R__b)
{
   // Stream an object of class THYPE.

   if (R__b.IsReading()) {
      THYPE::Class()->ReadBuffer(R__b, this);
   } else {
      THYPE::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void THYPE::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class THYPE.

      TClass *R__cl = ::THYPE::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPhi", &fPhi);
      TTUBE::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *THYPE_IsA(const void *obj) {
      return ((::THYPE*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_THYPE(void *p) {
      return  p ? new(p) ::THYPE : new ::THYPE;
   }
   static void *newArray_THYPE(Long_t size) {
      return new ::THYPE[size];
   }
   // Wrapper around operator delete
   static void delete_THYPE(void *p) {
      delete ((::THYPE*)p);
   }
   static void deleteArray_THYPE(void *p) {
      delete [] ((::THYPE*)p);
   }
   static void destruct_THYPE(void *p) {
      typedef ::THYPE current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THYPE

//______________________________________________________________________________
void TMaterial::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMaterial.

      TClass *R__cl = ::TMaterial::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNumber", &fNumber);
      R__insp.Inspect(R__cl, R__parent, "fA", &fA);
      R__insp.Inspect(R__cl, R__parent, "fZ", &fZ);
      R__insp.Inspect(R__cl, R__parent, "fDensity", &fDensity);
      R__insp.Inspect(R__cl, R__parent, "fRadLength", &fRadLength);
      R__insp.Inspect(R__cl, R__parent, "fInterLength", &fInterLength);
      TNamed::ShowMembers(R__insp, R__parent);
      TAttFill::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMaterial_IsA(const void *obj) {
      return ((::TMaterial*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMaterial(void *p) {
      return  p ? new(p) ::TMaterial : new ::TMaterial;
   }
   static void *newArray_TMaterial(Long_t size) {
      return new ::TMaterial[size];
   }
   // Wrapper around operator delete
   static void delete_TMaterial(void *p) {
      delete ((::TMaterial*)p);
   }
   static void deleteArray_TMaterial(void *p) {
      delete [] ((::TMaterial*)p);
   }
   static void destruct_TMaterial(void *p) {
      typedef ::TMaterial current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMaterial

//______________________________________________________________________________
void TMixture::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMixture.

      TClass *R__cl = ::TMixture::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNmixt", &fNmixt);
      R__insp.Inspect(R__cl, R__parent, "*fAmixt", &fAmixt);
      R__insp.Inspect(R__cl, R__parent, "*fZmixt", &fZmixt);
      R__insp.Inspect(R__cl, R__parent, "*fWmixt", &fWmixt);
      TMaterial::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMixture_IsA(const void *obj) {
      return ((::TMixture*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMixture(void *p) {
      return  p ? new(p) ::TMixture : new ::TMixture;
   }
   static void *newArray_TMixture(Long_t size) {
      return new ::TMixture[size];
   }
   // Wrapper around operator delete
   static void delete_TMixture(void *p) {
      delete ((::TMixture*)p);
   }
   static void deleteArray_TMixture(void *p) {
      delete [] ((::TMixture*)p);
   }
   static void destruct_TMixture(void *p) {
      typedef ::TMixture current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMixture

//______________________________________________________________________________
void TNode::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TNode.

      TClass *R__cl = ::TNode::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "fY", &fY);
      R__insp.Inspect(R__cl, R__parent, "fZ", &fZ);
      R__insp.Inspect(R__cl, R__parent, "*fMatrix", &fMatrix);
      R__insp.Inspect(R__cl, R__parent, "*fShape", &fShape);
      R__insp.Inspect(R__cl, R__parent, "*fParent", &fParent);
      R__insp.Inspect(R__cl, R__parent, "*fNodes", &fNodes);
      R__insp.Inspect(R__cl, R__parent, "fOption", &fOption);
      fOption.ShowMembers(R__insp, strcat(R__parent,"fOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fVisibility", &fVisibility);
      TNamed::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
      TAttFill::ShowMembers(R__insp, R__parent);
      TAtt3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TNode_IsA(const void *obj) {
      return ((::TNode*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TNode(void *p) {
      return  p ? new(p) ::TNode : new ::TNode;
   }
   static void *newArray_TNode(Long_t size) {
      return new ::TNode[size];
   }
   // Wrapper around operator delete
   static void delete_TNode(void *p) {
      delete ((::TNode*)p);
   }
   static void deleteArray_TNode(void *p) {
      delete [] ((::TNode*)p);
   }
   static void destruct_TNode(void *p) {
      typedef ::TNode current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TNode

//______________________________________________________________________________
void TNodeDiv::Streamer(TBuffer &R__b)
{
   // Stream an object of class TNodeDiv.

   if (R__b.IsReading()) {
      TNodeDiv::Class()->ReadBuffer(R__b, this);
   } else {
      TNodeDiv::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TNodeDiv::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TNodeDiv.

      TClass *R__cl = ::TNodeDiv::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNdiv", &fNdiv);
      R__insp.Inspect(R__cl, R__parent, "fAxis", &fAxis);
      TNode::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TNodeDiv_IsA(const void *obj) {
      return ((::TNodeDiv*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TNodeDiv(void *p) {
      return  p ? new(p) ::TNodeDiv : new ::TNodeDiv;
   }
   static void *newArray_TNodeDiv(Long_t size) {
      return new ::TNodeDiv[size];
   }
   // Wrapper around operator delete
   static void delete_TNodeDiv(void *p) {
      delete ((::TNodeDiv*)p);
   }
   static void deleteArray_TNodeDiv(void *p) {
      delete [] ((::TNodeDiv*)p);
   }
   static void destruct_TNodeDiv(void *p) {
      typedef ::TNodeDiv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TNodeDiv

//______________________________________________________________________________
void TPARA::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPARA.

   if (R__b.IsReading()) {
      TPARA::Class()->ReadBuffer(R__b, this);
   } else {
      TPARA::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TPARA::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPARA.

      TClass *R__cl = ::TPARA::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fAlpha", &fAlpha);
      R__insp.Inspect(R__cl, R__parent, "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__parent, "fPhi", &fPhi);
      TBRIK::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPARA_IsA(const void *obj) {
      return ((::TPARA*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TPARA(void *p) {
      return  p ? new(p) ::TPARA : new ::TPARA;
   }
   static void *newArray_TPARA(Long_t size) {
      return new ::TPARA[size];
   }
   // Wrapper around operator delete
   static void delete_TPARA(void *p) {
      delete ((::TPARA*)p);
   }
   static void deleteArray_TPARA(void *p) {
      delete [] ((::TPARA*)p);
   }
   static void destruct_TPARA(void *p) {
      typedef ::TPARA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPARA

//______________________________________________________________________________
void TPCON::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPCON.

      TClass *R__cl = ::TPCON::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSiTab", &fSiTab);
      R__insp.Inspect(R__cl, R__parent, "*fCoTab", &fCoTab);
      R__insp.Inspect(R__cl, R__parent, "fPhi1", &fPhi1);
      R__insp.Inspect(R__cl, R__parent, "fDphi1", &fDphi1);
      R__insp.Inspect(R__cl, R__parent, "fNdiv", &fNdiv);
      R__insp.Inspect(R__cl, R__parent, "fNz", &fNz);
      R__insp.Inspect(R__cl, R__parent, "*fRmin", &fRmin);
      R__insp.Inspect(R__cl, R__parent, "*fRmax", &fRmax);
      R__insp.Inspect(R__cl, R__parent, "*fDz", &fDz);
      TShape::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPCON_IsA(const void *obj) {
      return ((::TPCON*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TPCON(void *p) {
      return  p ? new(p) ::TPCON : new ::TPCON;
   }
   static void *newArray_TPCON(Long_t size) {
      return new ::TPCON[size];
   }
   // Wrapper around operator delete
   static void delete_TPCON(void *p) {
      delete ((::TPCON*)p);
   }
   static void deleteArray_TPCON(void *p) {
      delete [] ((::TPCON*)p);
   }
   static void destruct_TPCON(void *p) {
      typedef ::TPCON current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPCON

//______________________________________________________________________________
void TPGON::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPGON.

   if (R__b.IsReading()) {
      TPGON::Class()->ReadBuffer(R__b, this);
   } else {
      TPGON::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TPGON::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPGON.

      TClass *R__cl = ::TPGON::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TPCON::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPGON_IsA(const void *obj) {
      return ((::TPGON*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TPGON(void *p) {
      return  p ? new(p) ::TPGON : new ::TPGON;
   }
   static void *newArray_TPGON(Long_t size) {
      return new ::TPGON[size];
   }
   // Wrapper around operator delete
   static void delete_TPGON(void *p) {
      delete ((::TPGON*)p);
   }
   static void deleteArray_TPGON(void *p) {
      delete [] ((::TPGON*)p);
   }
   static void destruct_TPGON(void *p) {
      typedef ::TPGON current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPGON

//______________________________________________________________________________
void TPolyLine3D::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPolyLine3D.

      TClass *R__cl = ::TPolyLine3D::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fN", &fN);
      R__insp.Inspect(R__cl, R__parent, "*fP", &fP);
      R__insp.Inspect(R__cl, R__parent, "fOption", &fOption);
      fOption.ShowMembers(R__insp, strcat(R__parent,"fOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fGLList", &fGLList);
      R__insp.Inspect(R__cl, R__parent, "fLastPoint", &fLastPoint);
      TObject::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
      TAtt3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPolyLine3D_IsA(const void *obj) {
      return ((::TPolyLine3D*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TPolyLine3D(void *p) {
      return  p ? new(p) ::TPolyLine3D : new ::TPolyLine3D;
   }
   static void *newArray_TPolyLine3D(Long_t size) {
      return new ::TPolyLine3D[size];
   }
   // Wrapper around operator delete
   static void delete_TPolyLine3D(void *p) {
      delete ((::TPolyLine3D*)p);
   }
   static void deleteArray_TPolyLine3D(void *p) {
      delete [] ((::TPolyLine3D*)p);
   }
   static void destruct_TPolyLine3D(void *p) {
      typedef ::TPolyLine3D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPolyLine3D

//______________________________________________________________________________
void TPolyMarker3D::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPolyMarker3D.

      TClass *R__cl = ::TPolyMarker3D::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fN", &fN);
      R__insp.Inspect(R__cl, R__parent, "*fP", &fP);
      R__insp.Inspect(R__cl, R__parent, "fOption", &fOption);
      fOption.ShowMembers(R__insp, strcat(R__parent,"fOption.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fGLList", &fGLList);
      R__insp.Inspect(R__cl, R__parent, "fLastPoint", &fLastPoint);
      TObject::ShowMembers(R__insp, R__parent);
      TAttMarker::ShowMembers(R__insp, R__parent);
      TAtt3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPolyMarker3D_IsA(const void *obj) {
      return ((::TPolyMarker3D*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TPolyMarker3D(void *p) {
      return  p ? new(p) ::TPolyMarker3D : new ::TPolyMarker3D;
   }
   static void *newArray_TPolyMarker3D(Long_t size) {
      return new ::TPolyMarker3D[size];
   }
   // Wrapper around operator delete
   static void delete_TPolyMarker3D(void *p) {
      delete ((::TPolyMarker3D*)p);
   }
   static void deleteArray_TPolyMarker3D(void *p) {
      delete [] ((::TPolyMarker3D*)p);
   }
   static void destruct_TPolyMarker3D(void *p) {
      typedef ::TPolyMarker3D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPolyMarker3D

//______________________________________________________________________________
void TRotMatrix::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TRotMatrix.

      TClass *R__cl = ::TRotMatrix::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNumber", &fNumber);
      R__insp.Inspect(R__cl, R__parent, "fType", &fType);
      R__insp.Inspect(R__cl, R__parent, "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__parent, "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__parent, "fPsi", &fPsi);
      R__insp.Inspect(R__cl, R__parent, "fMatrix[9]", fMatrix);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TRotMatrix_IsA(const void *obj) {
      return ((::TRotMatrix*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TRotMatrix(void *p) {
      return  p ? new(p) ::TRotMatrix : new ::TRotMatrix;
   }
   static void *newArray_TRotMatrix(Long_t size) {
      return new ::TRotMatrix[size];
   }
   // Wrapper around operator delete
   static void delete_TRotMatrix(void *p) {
      delete ((::TRotMatrix*)p);
   }
   static void deleteArray_TRotMatrix(void *p) {
      delete [] ((::TRotMatrix*)p);
   }
   static void destruct_TRotMatrix(void *p) {
      typedef ::TRotMatrix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TRotMatrix

//______________________________________________________________________________
void TShape::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TShape.

      TClass *R__cl = ::TShape::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNumber", &fNumber);
      R__insp.Inspect(R__cl, R__parent, "fVisibility", &fVisibility);
      R__insp.Inspect(R__cl, R__parent, "*fMaterial", &fMaterial);
      TNamed::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
      TAttFill::ShowMembers(R__insp, R__parent);
      TAtt3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TShape_IsA(const void *obj) {
      return ((::TShape*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TShape(void *p) {
      return  p ? new(p) ::TShape : new ::TShape;
   }
   static void *newArray_TShape(Long_t size) {
      return new ::TShape[size];
   }
   // Wrapper around operator delete
   static void delete_TShape(void *p) {
      delete ((::TShape*)p);
   }
   static void deleteArray_TShape(void *p) {
      delete [] ((::TShape*)p);
   }
   static void destruct_TShape(void *p) {
      typedef ::TShape current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TShape

//______________________________________________________________________________
void TSPHE::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TSPHE.

      TClass *R__cl = ::TSPHE::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fSiTab", &fSiTab);
      R__insp.Inspect(R__cl, R__parent, "*fCoTab", &fCoTab);
      R__insp.Inspect(R__cl, R__parent, "*fCoThetaTab", &fCoThetaTab);
      R__insp.Inspect(R__cl, R__parent, "fNdiv", &fNdiv);
      R__insp.Inspect(R__cl, R__parent, "fNz", &fNz);
      R__insp.Inspect(R__cl, R__parent, "fAspectRatio", &fAspectRatio);
      R__insp.Inspect(R__cl, R__parent, "fRmin", &fRmin);
      R__insp.Inspect(R__cl, R__parent, "fRmax", &fRmax);
      R__insp.Inspect(R__cl, R__parent, "fThemin", &fThemin);
      R__insp.Inspect(R__cl, R__parent, "fThemax", &fThemax);
      R__insp.Inspect(R__cl, R__parent, "fPhimin", &fPhimin);
      R__insp.Inspect(R__cl, R__parent, "fPhimax", &fPhimax);
      R__insp.Inspect(R__cl, R__parent, "faX", &faX);
      R__insp.Inspect(R__cl, R__parent, "faY", &faY);
      R__insp.Inspect(R__cl, R__parent, "faZ", &faZ);
      TShape::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TSPHE_IsA(const void *obj) {
      return ((::TSPHE*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TSPHE(void *p) {
      return  p ? new(p) ::TSPHE : new ::TSPHE;
   }
   static void *newArray_TSPHE(Long_t size) {
      return new ::TSPHE[size];
   }
   // Wrapper around operator delete
   static void delete_TSPHE(void *p) {
      delete ((::TSPHE*)p);
   }
   static void deleteArray_TSPHE(void *p) {
      delete [] ((::TSPHE*)p);
   }
   static void destruct_TSPHE(void *p) {
      typedef ::TSPHE current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSPHE

//______________________________________________________________________________
void TTRAP::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTRAP.

   if (R__b.IsReading()) {
      TTRAP::Class()->ReadBuffer(R__b, this);
   } else {
      TTRAP::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TTRAP::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTRAP.

      TClass *R__cl = ::TTRAP::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fH1", &fH1);
      R__insp.Inspect(R__cl, R__parent, "fBl1", &fBl1);
      R__insp.Inspect(R__cl, R__parent, "fTl1", &fTl1);
      R__insp.Inspect(R__cl, R__parent, "fAlpha1", &fAlpha1);
      R__insp.Inspect(R__cl, R__parent, "fH2", &fH2);
      R__insp.Inspect(R__cl, R__parent, "fBl2", &fBl2);
      R__insp.Inspect(R__cl, R__parent, "fTl2", &fTl2);
      R__insp.Inspect(R__cl, R__parent, "fAlpha2", &fAlpha2);
      TBRIK::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TTRAP_IsA(const void *obj) {
      return ((::TTRAP*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TTRAP(void *p) {
      return  p ? new(p) ::TTRAP : new ::TTRAP;
   }
   static void *newArray_TTRAP(Long_t size) {
      return new ::TTRAP[size];
   }
   // Wrapper around operator delete
   static void delete_TTRAP(void *p) {
      delete ((::TTRAP*)p);
   }
   static void deleteArray_TTRAP(void *p) {
      delete [] ((::TTRAP*)p);
   }
   static void destruct_TTRAP(void *p) {
      typedef ::TTRAP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTRAP

//______________________________________________________________________________
void TTRD1::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTRD1.

   if (R__b.IsReading()) {
      TTRD1::Class()->ReadBuffer(R__b, this);
   } else {
      TTRD1::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TTRD1::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTRD1.

      TClass *R__cl = ::TTRD1::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDx2", &fDx2);
      TBRIK::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TTRD1_IsA(const void *obj) {
      return ((::TTRD1*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TTRD1(void *p) {
      return  p ? new(p) ::TTRD1 : new ::TTRD1;
   }
   static void *newArray_TTRD1(Long_t size) {
      return new ::TTRD1[size];
   }
   // Wrapper around operator delete
   static void delete_TTRD1(void *p) {
      delete ((::TTRD1*)p);
   }
   static void deleteArray_TTRD1(void *p) {
      delete [] ((::TTRD1*)p);
   }
   static void destruct_TTRD1(void *p) {
      typedef ::TTRD1 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTRD1

//______________________________________________________________________________
void TTRD2::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTRD2.

   if (R__b.IsReading()) {
      TTRD2::Class()->ReadBuffer(R__b, this);
   } else {
      TTRD2::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TTRD2::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTRD2.

      TClass *R__cl = ::TTRD2::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fDx2", &fDx2);
      R__insp.Inspect(R__cl, R__parent, "fDy2", &fDy2);
      TBRIK::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TTRD2_IsA(const void *obj) {
      return ((::TTRD2*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TTRD2(void *p) {
      return  p ? new(p) ::TTRD2 : new ::TTRD2;
   }
   static void *newArray_TTRD2(Long_t size) {
      return new ::TTRD2[size];
   }
   // Wrapper around operator delete
   static void delete_TTRD2(void *p) {
      delete ((::TTRD2*)p);
   }
   static void deleteArray_TTRD2(void *p) {
      delete [] ((::TTRD2*)p);
   }
   static void destruct_TTRD2(void *p) {
      typedef ::TTRD2 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTRD2

//______________________________________________________________________________
void TTUBE::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTUBE.

      TClass *R__cl = ::TTUBE::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fRmin", &fRmin);
      R__insp.Inspect(R__cl, R__parent, "fRmax", &fRmax);
      R__insp.Inspect(R__cl, R__parent, "fDz", &fDz);
      R__insp.Inspect(R__cl, R__parent, "fNdiv", &fNdiv);
      R__insp.Inspect(R__cl, R__parent, "fAspectRatio", &fAspectRatio);
      R__insp.Inspect(R__cl, R__parent, "*fSiTab", &fSiTab);
      R__insp.Inspect(R__cl, R__parent, "*fCoTab", &fCoTab);
      TShape::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TTUBE_IsA(const void *obj) {
      return ((::TTUBE*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TTUBE(void *p) {
      return  p ? new(p) ::TTUBE : new ::TTUBE;
   }
   static void *newArray_TTUBE(Long_t size) {
      return new ::TTUBE[size];
   }
   // Wrapper around operator delete
   static void delete_TTUBE(void *p) {
      delete ((::TTUBE*)p);
   }
   static void deleteArray_TTUBE(void *p) {
      delete [] ((::TTUBE*)p);
   }
   static void destruct_TTUBE(void *p) {
      typedef ::TTUBE current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTUBE

//______________________________________________________________________________
void TTUBS::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTUBS.

   if (R__b.IsReading()) {
      TTUBS::Class()->ReadBuffer(R__b, this);
   } else {
      TTUBS::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TTUBS::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TTUBS.

      TClass *R__cl = ::TTUBS::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPhi1", &fPhi1);
      R__insp.Inspect(R__cl, R__parent, "fPhi2", &fPhi2);
      TTUBE::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TTUBS_IsA(const void *obj) {
      return ((::TTUBS*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TTUBS(void *p) {
      return  p ? new(p) ::TTUBS : new ::TTUBS;
   }
   static void *newArray_TTUBS(Long_t size) {
      return new ::TTUBS[size];
   }
   // Wrapper around operator delete
   static void delete_TTUBS(void *p) {
      delete ((::TTUBS*)p);
   }
   static void deleteArray_TTUBS(void *p) {
      delete [] ((::TTUBS*)p);
   }
   static void destruct_TTUBS(void *p) {
      typedef ::TTUBS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTUBS

//______________________________________________________________________________
void TMarker3DBox::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TMarker3DBox.

      TClass *R__cl = ::TMarker3DBox::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fX", &fX);
      R__insp.Inspect(R__cl, R__parent, "fY", &fY);
      R__insp.Inspect(R__cl, R__parent, "fZ", &fZ);
      R__insp.Inspect(R__cl, R__parent, "fDx", &fDx);
      R__insp.Inspect(R__cl, R__parent, "fDy", &fDy);
      R__insp.Inspect(R__cl, R__parent, "fDz", &fDz);
      R__insp.Inspect(R__cl, R__parent, "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__parent, "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__parent, "*fRefObject", &fRefObject);
      TObject::ShowMembers(R__insp, R__parent);
      TAttLine::ShowMembers(R__insp, R__parent);
      TAttFill::ShowMembers(R__insp, R__parent);
      TAtt3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TMarker3DBox_IsA(const void *obj) {
      return ((::TMarker3DBox*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TMarker3DBox(void *p) {
      return  p ? new(p) ::TMarker3DBox : new ::TMarker3DBox;
   }
   static void *newArray_TMarker3DBox(Long_t size) {
      return new ::TMarker3DBox[size];
   }
   // Wrapper around operator delete
   static void delete_TMarker3DBox(void *p) {
      delete ((::TMarker3DBox*)p);
   }
   static void deleteArray_TMarker3DBox(void *p) {
      delete [] ((::TMarker3DBox*)p);
   }
   static void destruct_TMarker3DBox(void *p) {
      typedef ::TMarker3DBox current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TMarker3DBox

//______________________________________________________________________________
void TPoints3DABC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPoints3DABC.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TPoints3DABC::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPoints3DABC.

      TClass *R__cl = ::TPoints3DABC::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TPoints3DABC_IsA(const void *obj) {
      return ((::TPoints3DABC*)obj)->IsA();
   }
   // Wrapper around operator delete
   static void delete_TPoints3DABC(void *p) {
      delete ((::TPoints3DABC*)p);
   }
   static void deleteArray_TPoints3DABC(void *p) {
      delete [] ((::TPoints3DABC*)p);
   }
   static void destruct_TPoints3DABC(void *p) {
      typedef ::TPoints3DABC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPoints3DABC

//______________________________________________________________________________
void TXTRU::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXTRU.

   if (R__b.IsReading()) {
      TXTRU::Class()->ReadBuffer(R__b, this);
   } else {
      TXTRU::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void TXTRU::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TXTRU.

      TClass *R__cl = ::TXTRU::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNxy", &fNxy);
      R__insp.Inspect(R__cl, R__parent, "fNxyAlloc", &fNxyAlloc);
      R__insp.Inspect(R__cl, R__parent, "fNz", &fNz);
      R__insp.Inspect(R__cl, R__parent, "fNzAlloc", &fNzAlloc);
      R__insp.Inspect(R__cl, R__parent, "*fXvtx", &fXvtx);
      R__insp.Inspect(R__cl, R__parent, "*fYvtx", &fYvtx);
      R__insp.Inspect(R__cl, R__parent, "*fZ", &fZ);
      R__insp.Inspect(R__cl, R__parent, "*fScale", &fScale);
      R__insp.Inspect(R__cl, R__parent, "*fX0", &fX0);
      R__insp.Inspect(R__cl, R__parent, "*fY0", &fY0);
      R__insp.Inspect(R__cl, R__parent, "fPolygonShape", &fPolygonShape);
      R__insp.Inspect(R__cl, R__parent, "fZOrdering", &fZOrdering);
      R__insp.Inspect(R__cl, R__parent, "fSplitConcave", &fSplitConcave);
      TShape::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TXTRU_IsA(const void *obj) {
      return ((::TXTRU*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TXTRU(void *p) {
      return  p ? new(p) ::TXTRU : new ::TXTRU;
   }
   static void *newArray_TXTRU(Long_t size) {
      return new ::TXTRU[size];
   }
   // Wrapper around operator delete
   static void delete_TXTRU(void *p) {
      delete ((::TXTRU*)p);
   }
   static void deleteArray_TXTRU(void *p) {
      delete [] ((::TXTRU*)p);
   }
   static void destruct_TXTRU(void *p) {
      typedef ::TXTRU current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TXTRU

//______________________________________________________________________________
void TUtil3D::Streamer(TBuffer &R__b)
{
   // Stream an object of class TUtil3D.

   TVirtualUtil3D::Streamer(R__b);
}

//______________________________________________________________________________
void TUtil3D::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TUtil3D.

      TClass *R__cl = ::TUtil3D::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TVirtualUtil3D::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Return the actual TClass for the object argument
   static TClass *TUtil3D_IsA(const void *obj) {
      return ((::TUtil3D*)obj)->IsA();
   }
   // Wrappers around operator new
   static void *new_TUtil3D(void *p) {
      return  p ? new(p) ::TUtil3D : new ::TUtil3D;
   }
   static void *newArray_TUtil3D(Long_t size) {
      return new ::TUtil3D[size];
   }
   // Wrapper around operator delete
   static void delete_TUtil3D(void *p) {
      delete ((::TUtil3D*)p);
   }
   static void deleteArray_TUtil3D(void *p) {
      delete [] ((::TUtil3D*)p);
   }
   static void destruct_TUtil3D(void *p) {
      typedef ::TUtil3D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TUtil3D

/********************************************************
* g3d/src/G__G3D.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableG__G3D();

extern "C" void G__set_cpp_environmentG__G3D() {
  G__add_compiledheader("base/inc/TROOT.h");
  G__add_compiledheader("base/inc/TMemberInspector.h");
  G__add_compiledheader("g3d/inc/TTRD2.h");
  G__add_compiledheader("g3d/inc/TMixture.h");
  G__add_compiledheader("g3d/inc/TCONS.h");
  G__add_compiledheader("g3d/inc/TTRAP.h");
  G__add_compiledheader("g3d/inc/THelix.h");
  G__add_compiledheader("g3d/inc/TPGON.h");
  G__add_compiledheader("g3d/inc/TSPHE.h");
  G__add_compiledheader("g3d/inc/TPolyLine3D.h");
  G__add_compiledheader("g3d/inc/TPoints3DABC.h");
  G__add_compiledheader("g3d/inc/TGTRA.h");
  G__add_compiledheader("g3d/inc/TMarker3DBox.h");
  G__add_compiledheader("g3d/inc/TCONE.h");
  G__add_compiledheader("g3d/inc/THYPE.h");
  G__add_compiledheader("g3d/inc/TBRIK.h");
  G__add_compiledheader("g3d/inc/TPCON.h");
  G__add_compiledheader("g3d/inc/TShape.h");
  G__add_compiledheader("g3d/inc/TUtil3D.h");
  G__add_compiledheader("g3d/inc/TXTRU.h");
  G__add_compiledheader("g3d/inc/TTRD1.h");
  G__add_compiledheader("g3d/inc/TELTU.h");
  G__add_compiledheader("g3d/inc/TRotMatrix.h");
  G__add_compiledheader("g3d/inc/TAxis3D.h");
  G__add_compiledheader("g3d/inc/TNode.h");
  G__add_compiledheader("g3d/inc/TMaterial.h");
  G__add_compiledheader("g3d/inc/TTUBE.h");
  G__add_compiledheader("g3d/inc/TPolyMarker3D.h");
  G__add_compiledheader("g3d/inc/TCTUB.h");
  G__add_compiledheader("g3d/inc/TGeometry.h");
  G__add_compiledheader("g3d/inc/TNodeDiv.h");
  G__add_compiledheader("g3d/inc/TPARA.h");
  G__add_compiledheader("g3d/inc/TTUBS.h");
  G__cpp_reset_tagtableG__G3D();
}
class G__g3ddIsrcdIG__G3DdOcxx_tag {};

void* operator new(size_t size,G__g3ddIsrcdIG__G3DdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__g3ddIsrcdIG__G3DdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_g3ddIsrcdIG__G3DdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevG__G3D() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TMaterial */
static int G__G__G3D_131_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMaterial *p=NULL;
   if(G__getaryconstruct()) p=new TMaterial[G__getaryconstruct()];
   else                    p=new TMaterial;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TMaterial);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMaterial *p=NULL;
      p = new TMaterial(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TMaterial);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMaterial *p=NULL;
      p = new TMaterial(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TMaterial);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMaterial*)(G__getstructoffset()))->GetNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMaterial*)(G__getstructoffset()))->GetA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMaterial*)(G__getstructoffset()))->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMaterial*)(G__getstructoffset()))->GetDensity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMaterial*)(G__getstructoffset()))->GetRadLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TMaterial*)(G__getstructoffset()))->GetInterLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMaterial::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMaterial::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMaterial::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMaterial::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMaterial*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMaterial*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMaterial*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMaterial*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMaterial::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMaterial::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMaterial::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_131_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMaterial::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_131_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMaterial *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMaterial(*(TMaterial*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TMaterial);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMaterial G__TTMaterial;
static int G__G__G3D_131_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMaterial *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMaterial *)((G__getstructoffset())+sizeof(TMaterial)*i);
   else  delete (TMaterial *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_131_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMaterial *dest = (TMaterial*)(G__getstructoffset());
   *dest = (*(TMaterial*)libp->para[0].ref);
   const TMaterial& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TNode */
static int G__G__G3D_137_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNode *p=NULL;
   if(G__getaryconstruct()) p=new TNode[G__getaryconstruct()];
   else                    p=new TNode;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TNode);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNode *p=NULL;
   switch(libp->paran) {
   case 8:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(const char*)G__int(libp->para[6]),(Option_t*)G__int(libp->para[7]));
      break;
   case 7:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(const char*)G__int(libp->para[6]));
      break;
   case 6:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5]));
      break;
   case 5:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]));
      break;
   case 4:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3]));
      break;
   case 3:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TNode);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNode *p=NULL;
   switch(libp->paran) {
   case 8:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(TShape*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(TRotMatrix*)G__int(libp->para[6]),(Option_t*)G__int(libp->para[7]));
      break;
   case 7:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(TShape*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(TRotMatrix*)G__int(libp->para[6]));
      break;
   case 6:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(TShape*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5]));
      break;
   case 5:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(TShape*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]));
      break;
   case 4:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(TShape*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3]));
      break;
   case 3:
      p = new TNode(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(TShape*)G__int(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TNode);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->BuildListOfNodes();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->cd((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->cd();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TNode*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->DrawOnly((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->DrawOnly();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->ExecuteEvent((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNode*)(G__getstructoffset()))->GetListOfNodes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNode*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNode*)(G__getstructoffset()))->GetNode((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TNode*)(G__getstructoffset()))->GetObjectInfo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TNode*)(G__getstructoffset()))->GetOption());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNode*)(G__getstructoffset()))->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNode*)(G__getstructoffset()))->GetShape());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TNode*)(G__getstructoffset()))->GetVisibility());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TNode*)(G__getstructoffset()))->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TNode*)(G__getstructoffset()))->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TNode*)(G__getstructoffset()))->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->ImportShapeAttributes();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TNode*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->Local2Master((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->Local2Master((const Float_t*)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TNode*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TNode*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->Master2Local((const Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->Master2Local((const Float_t*)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->RecursiveRemove((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->SetMatrix((TRotMatrix*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->SetMatrix();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->SetName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->SetParent((TNode*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->SetNameTitle((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->SetPosition((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->SetPosition((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->SetPosition((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->SetPosition();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->SetVisibility((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->SetVisibility();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TNode*)(G__getstructoffset()))->Sizeof3D();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->UpdateMatrix();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->UpdateTempMatrix(
(const Double_t*)G__int(libp->para[0]),(const Double_t*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t*)G__int(libp->para[5])
,(Double_t*)G__int(libp->para[6]),(Double_t*)G__int(libp->para[7]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TNode::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNode::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TNode::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TNode::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNode*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNode*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNode::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNode::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNode::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_137_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNode::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_137_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TNode *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TNode(*(TNode*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TNode);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TNode G__TTNode;
static int G__G__G3D_137_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TNode *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TNode *)((G__getstructoffset())+sizeof(TNode)*i);
   else  delete (TNode *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_137_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNode *dest = (TNode*)(G__getstructoffset());
   *dest = (*(TNode*)libp->para[0].ref);
   const TNode& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TShape */
static int G__G__G3D_138_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TShape *p=NULL;
   if(G__getaryconstruct()) p=new TShape[G__getaryconstruct()];
   else                    p=new TShape;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TShape);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TShape *p=NULL;
      p = new TShape(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TShape);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer3D& obj=((const TShape*)(G__getstructoffset()))->GetBuffer3D((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TShape*)(G__getstructoffset()))->GetMaterial());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TShape*)(G__getstructoffset()))->GetNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TShape*)(G__getstructoffset()))->GetVisibility());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TShape*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TShape*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TShape*)(G__getstructoffset()))->SetName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TShape*)(G__getstructoffset()))->SetPoints((Double_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TShape*)(G__getstructoffset()))->SetVisibility((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TShape*)(G__getstructoffset()))->TransformPoints((Double_t*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TShape::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TShape::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TShape::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TShape::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TShape*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TShape*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TShape*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TShape*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TShape::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TShape::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TShape::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_138_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TShape::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_138_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TShape *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TShape(*(TShape*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TShape);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TShape G__TTShape;
static int G__G__G3D_138_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TShape *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TShape *)((G__getstructoffset())+sizeof(TShape)*i);
   else  delete (TShape *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_138_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TShape *dest = (TShape*)(G__getstructoffset());
   *dest = (*(TShape*)libp->para[0].ref);
   const TShape& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TBRIK */
static int G__G__G3D_139_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBRIK *p=NULL;
   if(G__getaryconstruct()) p=new TBRIK[G__getaryconstruct()];
   else                    p=new TBRIK;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TBRIK);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBRIK *p=NULL;
      p = new TBRIK(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TBRIK);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBRIK*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer3D& obj=((const TBRIK*)(G__getstructoffset()))->GetBuffer3D((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TBRIK*)(G__getstructoffset()))->GetDx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TBRIK*)(G__getstructoffset()))->GetDy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TBRIK*)(G__getstructoffset()))->GetDz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TBRIK*)(G__getstructoffset()))->Sizeof3D();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TBRIK::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBRIK::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TBRIK::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TBRIK::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TBRIK*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBRIK*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBRIK*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBRIK*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBRIK::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBRIK::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TBRIK::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_139_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBRIK::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_139_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TBRIK *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TBRIK(*(TBRIK*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TBRIK);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TBRIK G__TTBRIK;
static int G__G__G3D_139_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TBRIK *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TBRIK *)((G__getstructoffset())+sizeof(TBRIK)*i);
   else  delete (TBRIK *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_139_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBRIK *dest = (TBRIK*)(G__getstructoffset());
   *dest = (*(TBRIK*)libp->para[0].ref);
   const TBRIK& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTRD2 */
static int G__G__G3D_140_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTRD2 *p=NULL;
   if(G__getaryconstruct()) p=new TTRD2[G__getaryconstruct()];
   else                    p=new TTRD2;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTRD2);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTRD2 *p=NULL;
      p = new TTRD2(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTRD2);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTRD2*)(G__getstructoffset()))->GetDx2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTRD2*)(G__getstructoffset()))->GetDy2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TTRD2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTRD2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TTRD2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TTRD2::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTRD2*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTRD2*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTRD2*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTRD2*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTRD2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTRD2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTRD2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_140_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTRD2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_140_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TTRD2 *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TTRD2(*(TTRD2*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTRD2);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTRD2 G__TTTRD2;
static int G__G__G3D_140_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TTRD2 *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TTRD2 *)((G__getstructoffset())+sizeof(TTRD2)*i);
   else  delete (TTRD2 *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_140_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTRD2 *dest = (TTRD2*)(G__getstructoffset());
   *dest = (*(TTRD2*)libp->para[0].ref);
   const TTRD2& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMixture */
static int G__G__G3D_141_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMixture *p=NULL;
   if(G__getaryconstruct()) p=new TMixture[G__getaryconstruct()];
   else                    p=new TMixture;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TMixture);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMixture *p=NULL;
      p = new TMixture(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TMixture);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMixture*)(G__getstructoffset()))->DefineElement((Int_t)G__int(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TMixture*)(G__getstructoffset()))->GetNmixt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMixture*)(G__getstructoffset()))->GetAmixt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMixture*)(G__getstructoffset()))->GetZmixt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TMixture*)(G__getstructoffset()))->GetWmixt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMixture::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMixture::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMixture::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMixture::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMixture*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMixture*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMixture*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMixture*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMixture::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMixture::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMixture::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_141_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMixture::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_141_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMixture *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMixture(*(TMixture*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TMixture);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMixture G__TTMixture;
static int G__G__G3D_141_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMixture *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMixture *)((G__getstructoffset())+sizeof(TMixture)*i);
   else  delete (TMixture *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_141_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMixture *dest = (TMixture*)(G__getstructoffset());
   *dest = (*(TMixture*)libp->para[0].ref);
   const TMixture& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTUBE */
static int G__G__G3D_142_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTUBE *p=NULL;
   if(G__getaryconstruct()) p=new TTUBE[G__getaryconstruct()];
   else                    p=new TTUBE;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTUBE);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTUBE *p=NULL;
   switch(libp->paran) {
   case 7:
      p = new TTUBE(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]));
      break;
   case 6:
      p = new TTUBE(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTUBE);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTUBE *p=NULL;
      p = new TTUBE(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTUBE);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TTUBE*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer3D& obj=((const TTUBE*)(G__getstructoffset()))->GetBuffer3D((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTUBE*)(G__getstructoffset()))->GetRmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTUBE*)(G__getstructoffset()))->GetRmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTUBE*)(G__getstructoffset()))->GetDz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TTUBE*)(G__getstructoffset()))->GetNdiv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTUBE*)(G__getstructoffset()))->GetAspectRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TTUBE*)(G__getstructoffset()))->GetNumberOfDivisions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTUBE*)(G__getstructoffset()))->SetNumberOfDivisions((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TTUBE*)(G__getstructoffset()))->SetAspectRatio((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TTUBE*)(G__getstructoffset()))->SetAspectRatio();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TTUBE*)(G__getstructoffset()))->Sizeof3D();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TTUBE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTUBE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TTUBE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TTUBE::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTUBE*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTUBE*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTUBE*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTUBE*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTUBE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTUBE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTUBE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_142_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTUBE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_142_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TTUBE *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TTUBE(*(TTUBE*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTUBE);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTUBE G__TTTUBE;
static int G__G__G3D_142_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TTUBE *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TTUBE *)((G__getstructoffset())+sizeof(TTUBE)*i);
   else  delete (TTUBE *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_142_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTUBE *dest = (TTUBE*)(G__getstructoffset());
   *dest = (*(TTUBE*)libp->para[0].ref);
   const TTUBE& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTUBS */
static int G__G__G3D_143_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTUBS *p=NULL;
   if(G__getaryconstruct()) p=new TTUBS[G__getaryconstruct()];
   else                    p=new TTUBS;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTUBS);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTUBS *p=NULL;
      p = new TTUBS(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTUBS);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTUBS *p=NULL;
      p = new TTUBS(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTUBS);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TTUBS*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer3D& obj=((const TTUBS*)(G__getstructoffset()))->GetBuffer3D((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTUBS*)(G__getstructoffset()))->GetPhi1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTUBS*)(G__getstructoffset()))->GetPhi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TTUBS*)(G__getstructoffset()))->Sizeof3D();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TTUBS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTUBS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TTUBS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TTUBS::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTUBS*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTUBS*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTUBS*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTUBS*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTUBS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTUBS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTUBS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_143_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTUBS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_143_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TTUBS *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TTUBS(*(TTUBS*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTUBS);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTUBS G__TTTUBS;
static int G__G__G3D_143_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TTUBS *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TTUBS *)((G__getstructoffset())+sizeof(TTUBS)*i);
   else  delete (TTUBS *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_143_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTUBS *dest = (TTUBS*)(G__getstructoffset());
   *dest = (*(TTUBS*)libp->para[0].ref);
   const TTUBS& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCONS */
static int G__G__G3D_144_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCONS *p=NULL;
   if(G__getaryconstruct()) p=new TCONS[G__getaryconstruct()];
   else                    p=new TCONS;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCONS);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCONS *p=NULL;
      p = new TCONS(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]),(Float_t)G__double(libp->para[9]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCONS);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCONS *p=NULL;
   switch(libp->paran) {
   case 8:
      p = new TCONS(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7]));
      break;
   case 7:
      p = new TCONS(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCONS);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TCONS*)(G__getstructoffset()))->GetRmin2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TCONS*)(G__getstructoffset()))->GetRmax2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCONS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCONS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCONS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCONS::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCONS*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCONS*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCONS*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCONS*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCONS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCONS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCONS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_144_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCONS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_144_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TCONS *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TCONS(*(TCONS*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCONS);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCONS G__TTCONS;
static int G__G__G3D_144_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCONS *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCONS *)((G__getstructoffset())+sizeof(TCONS)*i);
   else  delete (TCONS *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_144_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCONS *dest = (TCONS*)(G__getstructoffset());
   *dest = (*(TCONS*)libp->para[0].ref);
   const TCONS& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTRAP */
static int G__G__G3D_145_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTRAP *p=NULL;
   if(G__getaryconstruct()) p=new TTRAP[G__getaryconstruct()];
   else                    p=new TTRAP;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTRAP);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTRAP *p=NULL;
      p = new TTRAP(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]),(Float_t)G__double(libp->para[9])
,(Float_t)G__double(libp->para[10]),(Float_t)G__double(libp->para[11])
,(Float_t)G__double(libp->para[12]),(Float_t)G__double(libp->para[13]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTRAP);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTRAP*)(G__getstructoffset()))->GetH1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTRAP*)(G__getstructoffset()))->GetBl1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTRAP*)(G__getstructoffset()))->GetTl1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTRAP*)(G__getstructoffset()))->GetAlpha1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTRAP*)(G__getstructoffset()))->GetH2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTRAP*)(G__getstructoffset()))->GetBl2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTRAP*)(G__getstructoffset()))->GetTl2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTRAP*)(G__getstructoffset()))->GetAlpha2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TTRAP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTRAP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TTRAP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TTRAP::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTRAP*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTRAP*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTRAP*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTRAP*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTRAP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTRAP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTRAP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_145_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTRAP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_145_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TTRAP *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TTRAP(*(TTRAP*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTRAP);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTRAP G__TTTRAP;
static int G__G__G3D_145_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TTRAP *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TTRAP *)((G__getstructoffset())+sizeof(TTRAP)*i);
   else  delete (TTRAP *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_145_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTRAP *dest = (TTRAP*)(G__getstructoffset());
   *dest = (*(TTRAP*)libp->para[0].ref);
   const TTRAP& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPolyLine3D */
static int G__G__G3D_146_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyLine3D *p=NULL;
   if(G__getaryconstruct()) p=new TPolyLine3D[G__getaryconstruct()];
   else                    p=new TPolyLine3D;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyLine3D *p=NULL;
   switch(libp->paran) {
   case 2:
      p = new TPolyLine3D((Int_t)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      p = new TPolyLine3D((Int_t)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyLine3D *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TPolyLine3D(
(Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TPolyLine3D((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyLine3D *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TPolyLine3D(
(Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TPolyLine3D((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyLine3D *p=NULL;
   switch(libp->paran) {
   case 5:
      p = new TPolyLine3D(
(Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]),(Float_t*)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]));
      break;
   case 4:
      p = new TPolyLine3D(
(Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2]),(Float_t*)G__int(libp->para[3]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyLine3D *p=NULL;
   switch(libp->paran) {
   case 5:
      p = new TPolyLine3D(
(Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3])
,(Option_t*)G__int(libp->para[4]));
      break;
   case 4:
      p = new TPolyLine3D(
(Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(Double_t*)G__int(libp->para[3]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyLine3D *p=NULL;
      p = new TPolyLine3D(*(TPolyLine3D*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TPolyLine3D*)(G__getstructoffset()))->Copy(*(TObject*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPolyLine3D*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->DrawPolyLine((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->DrawPolyLine((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->ExecuteEvent((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPolyLine3D*)(G__getstructoffset()))->GetLastPoint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPolyLine3D*)(G__getstructoffset()))->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TPolyLine3D*)(G__getstructoffset()))->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TPolyLine3D*)(G__getstructoffset()))->GetOption());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TPolyLine3D*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TPolyLine3D*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPolyLine3D*)(G__getstructoffset()))->Merge((TCollection*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TPolyLine3D*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TPolyLine3D*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPolyLine3D*)(G__getstructoffset()))->SetNextPoint((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->SetOption((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->SetOption();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->SetPoint((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->SetPolyLine((Int_t)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->SetPolyLine((Int_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->SetPolyLine((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->SetPolyLine((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->SetPolyLine((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->SetPolyLine((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPolyLine3D*)(G__getstructoffset()))->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPolyLine3D::DrawOutlineCube((TList*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPolyLine3D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPolyLine3D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPolyLine3D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPolyLine3D::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPolyLine3D*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyLine3D*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPolyLine3D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPolyLine3D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPolyLine3D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_146_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPolyLine3D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPolyLine3D G__TTPolyLine3D;
static int G__G__G3D_146_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPolyLine3D *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPolyLine3D *)((G__getstructoffset())+sizeof(TPolyLine3D)*i);
   else  delete (TPolyLine3D *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_146_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyLine3D *dest = (TPolyLine3D*)(G__getstructoffset());
   *dest = (*(TPolyLine3D*)libp->para[0].ref);
   const TPolyLine3D& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRotMatrix */
static int G__G__G3D_148_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TRotMatrix *p=NULL;
   if(G__getaryconstruct()) p=new TRotMatrix[G__getaryconstruct()];
   else                    p=new TRotMatrix;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TRotMatrix *p=NULL;
      p = new TRotMatrix(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TRotMatrix *p=NULL;
      p = new TRotMatrix(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TRotMatrix *p=NULL;
      p = new TRotMatrix(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]),(Double_t)G__double(libp->para[7]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TRotMatrix*)(G__getstructoffset()))->Determinant());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TRotMatrix*)(G__getstructoffset()))->GetMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TRotMatrix*)(G__getstructoffset()))->GetNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TRotMatrix*)(G__getstructoffset()))->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TRotMatrix*)(G__getstructoffset()))->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TRotMatrix*)(G__getstructoffset()))->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const TRotMatrix*)(G__getstructoffset()))->GetPsi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((const TRotMatrix*)(G__getstructoffset()))->GetGLMatrix((Double_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TRotMatrix*)(G__getstructoffset()))->IsReflection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,68,(long)((TRotMatrix*)(G__getstructoffset()))->SetAngles((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRotMatrix*)(G__getstructoffset()))->SetMatrix((const Double_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRotMatrix*)(G__getstructoffset()))->SetName((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TRotMatrix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TRotMatrix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TRotMatrix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TRotMatrix::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TRotMatrix*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRotMatrix*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRotMatrix*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TRotMatrix*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TRotMatrix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TRotMatrix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TRotMatrix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_148_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TRotMatrix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_148_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TRotMatrix *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TRotMatrix(*(TRotMatrix*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRotMatrix G__TTRotMatrix;
static int G__G__G3D_148_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TRotMatrix *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TRotMatrix *)((G__getstructoffset())+sizeof(TRotMatrix)*i);
   else  delete (TRotMatrix *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_148_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TRotMatrix *dest = (TRotMatrix*)(G__getstructoffset());
   *dest = (*(TRotMatrix*)libp->para[0].ref);
   const TRotMatrix& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THelix */
static int G__G__G3D_150_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THelix *p=NULL;
   if(G__getaryconstruct()) p=new THelix[G__getaryconstruct()];
   else                    p=new THelix;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_THelix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THelix *p=NULL;
      p = new THelix(
(Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(Double_t)G__double(libp->para[6]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_THelix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THelix *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new THelix(
(Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t*)G__int(libp->para[3])
,(EHelixRangeType)G__int(libp->para[4]),(Double_t*)G__int(libp->para[5]));
      break;
   case 5:
      p = new THelix(
(Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t*)G__int(libp->para[3])
,(EHelixRangeType)G__int(libp->para[4]));
      break;
   case 4:
      p = new THelix(
(Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t*)G__int(libp->para[3]));
      break;
   case 3:
      p = new THelix(
(Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_THelix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THelix *p=NULL;
      p = new THelix(*(THelix*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_THelix);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const THelix*)(G__getstructoffset()))->Copy(*(TObject*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const THelix*)(G__getstructoffset()))->GetOption());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const THelix*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const THelix*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetOption((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetOption();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetAxis((Double_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetAxis((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetRange((Double_t*)G__int(libp->para[0]),(EHelixRangeType)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetRange((Double_t*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetRange((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(EHelixRangeType)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetRange((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 6:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetHelix((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t*)G__int(libp->para[3])
,(EHelixRangeType)G__int(libp->para[4]),(Double_t*)G__int(libp->para[5]));
      break;
   case 5:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetHelix((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t*)G__int(libp->para[3])
,(EHelixRangeType)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetHelix((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->SetHelix((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)THelix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THelix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)THelix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      THelix::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const THelix*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THelix*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THelix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THelix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THelix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_150_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THelix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THelix G__TTHelix;
static int G__G__G3D_150_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (THelix *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (THelix *)((G__getstructoffset())+sizeof(THelix)*i);
   else  delete (THelix *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_150_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THelix *dest = (THelix*)(G__getstructoffset());
   *dest = (*(THelix*)libp->para[0].ref);
   const THelix& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPCON */
static int G__G__G3D_151_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPCON *p=NULL;
   if(G__getaryconstruct()) p=new TPCON[G__getaryconstruct()];
   else                    p=new TPCON;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPCON);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPCON *p=NULL;
      p = new TPCON(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Int_t)G__int(libp->para[5]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPCON);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPCON*)(G__getstructoffset()))->DefineSection((Int_t)G__int(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPCON*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer3D& obj=((const TPCON*)(G__getstructoffset()))->GetBuffer3D((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPCON*)(G__getstructoffset()))->GetNumberOfDivisions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TPCON*)(G__getstructoffset()))->GetPhi1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TPCON*)(G__getstructoffset()))->GetDhi1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPCON*)(G__getstructoffset()))->GetNz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TPCON*)(G__getstructoffset()))->GetRmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TPCON*)(G__getstructoffset()))->GetRmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TPCON*)(G__getstructoffset()))->GetDz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPCON*)(G__getstructoffset()))->GetNdiv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPCON*)(G__getstructoffset()))->SetNumberOfDivisions((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TPCON*)(G__getstructoffset()))->Sizeof3D();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPCON::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPCON::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPCON::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPCON::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPCON*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPCON*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPCON*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPCON*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPCON::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPCON::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPCON::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_151_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPCON::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_151_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TPCON *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TPCON(*(TPCON*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPCON);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPCON G__TTPCON;
static int G__G__G3D_151_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPCON *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPCON *)((G__getstructoffset())+sizeof(TPCON)*i);
   else  delete (TPCON *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_151_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPCON *dest = (TPCON*)(G__getstructoffset());
   *dest = (*(TPCON*)libp->para[0].ref);
   const TPCON& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPGON */
static int G__G__G3D_152_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPGON *p=NULL;
   if(G__getaryconstruct()) p=new TPGON[G__getaryconstruct()];
   else                    p=new TPGON;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPGON);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPGON *p=NULL;
      p = new TPGON(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Int_t)G__int(libp->para[5])
,(Int_t)G__int(libp->para[6]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPGON);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPGON::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPGON::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPGON::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPGON::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPGON*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPGON*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPGON*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPGON*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPGON::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPGON::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPGON::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_152_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPGON::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_152_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TPGON *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TPGON(*(TPGON*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPGON);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPGON G__TTPGON;
static int G__G__G3D_152_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPGON *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPGON *)((G__getstructoffset())+sizeof(TPGON)*i);
   else  delete (TPGON *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_152_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPGON *dest = (TPGON*)(G__getstructoffset());
   *dest = (*(TPGON*)libp->para[0].ref);
   const TPGON& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSPHE */
static int G__G__G3D_153_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSPHE *p=NULL;
   if(G__getaryconstruct()) p=new TSPHE[G__getaryconstruct()];
   else                    p=new TSPHE;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TSPHE);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSPHE *p=NULL;
      p = new TSPHE(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TSPHE);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSPHE *p=NULL;
      p = new TSPHE(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TSPHE);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TSPHE*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer3D& obj=((const TSPHE*)(G__getstructoffset()))->GetBuffer3D((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TSPHE*)(G__getstructoffset()))->GetRmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TSPHE*)(G__getstructoffset()))->GetRmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TSPHE*)(G__getstructoffset()))->GetThemin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TSPHE*)(G__getstructoffset()))->GetThemax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TSPHE*)(G__getstructoffset()))->GetPhimin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TSPHE*)(G__getstructoffset()))->GetPhimax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TSPHE*)(G__getstructoffset()))->GetAspectRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TSPHE*)(G__getstructoffset()))->GetNumberOfDivisions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TSPHE*)(G__getstructoffset()))->SetAspectRatio((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TSPHE*)(G__getstructoffset()))->SetAspectRatio();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSPHE*)(G__getstructoffset()))->SetEllipse((const Float_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSPHE*)(G__getstructoffset()))->SetNumberOfDivisions((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TSPHE*)(G__getstructoffset()))->Sizeof3D();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TSPHE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSPHE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TSPHE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TSPHE::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TSPHE*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSPHE*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSPHE*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TSPHE*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSPHE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSPHE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TSPHE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_153_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TSPHE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_153_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TSPHE *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TSPHE(*(TSPHE*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TSPHE);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSPHE G__TTSPHE;
static int G__G__G3D_153_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TSPHE *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TSPHE *)((G__getstructoffset())+sizeof(TSPHE)*i);
   else  delete (TSPHE *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_153_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TSPHE *dest = (TSPHE*)(G__getstructoffset());
   *dest = (*(TSPHE*)libp->para[0].ref);
   const TSPHE& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPoints3DABC */
static int G__G__G3D_154_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 7:
      G__letint(result7,105,(long)TPoints3DABC::DistancetoLine(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Int_t)G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7,105,(long)TPoints3DABC::DistancetoLine((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPoints3DABC*)(G__getstructoffset()))->Add((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPoints3DABC*)(G__getstructoffset()))->AddLast((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPoints3DABC*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPoints3DABC*)(G__getstructoffset()))->GetLastPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPoints3DABC*)(G__getstructoffset()))->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TPoints3DABC*)(G__getstructoffset()))->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TPoints3DABC*)(G__getstructoffset()))->GetX((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TPoints3DABC*)(G__getstructoffset()))->GetY((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TPoints3DABC*)(G__getstructoffset()))->GetZ((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
   G__letint(result7,70,(long)((const TPoints3DABC*)(G__getstructoffset()))->GetXYZ((Float_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2])));
      break;
   case 2:
   G__letint(result7,70,(long)((const TPoints3DABC*)(G__getstructoffset()))->GetXYZ((Float_t*)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((TPoints3DABC*)(G__getstructoffset()))->GetXYZ((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TPoints3DABC*)(G__getstructoffset()))->GetOption());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TPoints3DABC*)(G__getstructoffset()))->PaintPoints((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TPoints3DABC*)(G__getstructoffset()))->PaintPoints((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPoints3DABC*)(G__getstructoffset()))->SetLastPosition((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPoints3DABC*)(G__getstructoffset()))->SetNextPoint((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPoints3DABC*)(G__getstructoffset()))->SetOption((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPoints3DABC*)(G__getstructoffset()))->SetOption();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPoints3DABC*)(G__getstructoffset()))->SetPoint((Int_t)G__int(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,105,(long)((TPoints3DABC*)(G__getstructoffset()))->SetPoints((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,105,(long)((TPoints3DABC*)(G__getstructoffset()))->SetPoints((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,105,(long)((TPoints3DABC*)(G__getstructoffset()))->SetPoints((Int_t)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPoints3DABC*)(G__getstructoffset()))->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPoints3DABC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPoints3DABC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPoints3DABC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPoints3DABC::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPoints3DABC*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPoints3DABC*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPoints3DABC*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPoints3DABC*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPoints3DABC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPoints3DABC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPoints3DABC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_154_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPoints3DABC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPoints3DABC G__TTPoints3DABC;
static int G__G__G3D_154_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPoints3DABC *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPoints3DABC *)((G__getstructoffset())+sizeof(TPoints3DABC)*i);
   else  delete (TPoints3DABC *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_154_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPoints3DABC *dest = (TPoints3DABC*)(G__getstructoffset());
   *dest = (*(TPoints3DABC*)libp->para[0].ref);
   const TPoints3DABC& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGTRA */
static int G__G__G3D_155_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGTRA *p=NULL;
   if(G__getaryconstruct()) p=new TGTRA[G__getaryconstruct()];
   else                    p=new TGTRA;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TGTRA);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGTRA *p=NULL;
      p = new TGTRA(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]),(Float_t)G__double(libp->para[9])
,(Float_t)G__double(libp->para[10]),(Float_t)G__double(libp->para[11])
,(Float_t)G__double(libp->para[12]),(Float_t)G__double(libp->para[13])
,(Float_t)G__double(libp->para[14]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TGTRA);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TGTRA*)(G__getstructoffset()))->GetTwist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TGTRA*)(G__getstructoffset()))->GetH1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TGTRA*)(G__getstructoffset()))->GetBl1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TGTRA*)(G__getstructoffset()))->GetTl1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TGTRA*)(G__getstructoffset()))->GetAlpha1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TGTRA*)(G__getstructoffset()))->GetH2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TGTRA*)(G__getstructoffset()))->GetBl2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TGTRA*)(G__getstructoffset()))->GetTl2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TGTRA*)(G__getstructoffset()))->GetAlpha2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGTRA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGTRA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGTRA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGTRA::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGTRA*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGTRA*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGTRA*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGTRA*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGTRA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGTRA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGTRA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_155_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGTRA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_155_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGTRA *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGTRA(*(TGTRA*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TGTRA);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGTRA G__TTGTRA;
static int G__G__G3D_155_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGTRA *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGTRA *)((G__getstructoffset())+sizeof(TGTRA)*i);
   else  delete (TGTRA *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_155_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGTRA *dest = (TGTRA*)(G__getstructoffset());
   *dest = (*(TGTRA*)libp->para[0].ref);
   const TGTRA& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMarker3DBox */
static int G__G__G3D_157_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMarker3DBox *p=NULL;
   if(G__getaryconstruct()) p=new TMarker3DBox[G__getaryconstruct()];
   else                    p=new TMarker3DBox;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMarker3DBox *p=NULL;
      p = new TMarker3DBox(
(Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TMarker3DBox*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMarker3DBox*)(G__getstructoffset()))->ExecuteEvent((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMarker3DBox*)(G__getstructoffset()))->GetRefObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TMarker3DBox*)(G__getstructoffset()))->GetDirection(*(Float_t*)G__Floatref(&libp->para[0]),*(Float_t*)G__Floatref(&libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TMarker3DBox*)(G__getstructoffset()))->GetPosition(*(Float_t*)G__Floatref(&libp->para[0]),*(Float_t*)G__Floatref(&libp->para[1])
,*(Float_t*)G__Floatref(&libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TMarker3DBox*)(G__getstructoffset()))->GetSize(*(Float_t*)G__Floatref(&libp->para[0]),*(Float_t*)G__Floatref(&libp->para[1])
,*(Float_t*)G__Floatref(&libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMarker3DBox*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMarker3DBox::PaintH3((TH1*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMarker3DBox*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TMarker3DBox*)(G__getstructoffset()))->SetPoints((Double_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMarker3DBox*)(G__getstructoffset()))->SetDirection((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMarker3DBox*)(G__getstructoffset()))->SetPosition((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMarker3DBox*)(G__getstructoffset()))->SetSize((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TMarker3DBox*)(G__getstructoffset()))->SetRefObject((TObject*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TMarker3DBox*)(G__getstructoffset()))->SetRefObject();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TMarker3DBox::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMarker3DBox::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TMarker3DBox::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TMarker3DBox::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TMarker3DBox*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMarker3DBox*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMarker3DBox*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TMarker3DBox*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMarker3DBox::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMarker3DBox::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TMarker3DBox::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_157_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TMarker3DBox::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_157_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TMarker3DBox *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TMarker3DBox(*(TMarker3DBox*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMarker3DBox G__TTMarker3DBox;
static int G__G__G3D_157_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TMarker3DBox *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TMarker3DBox *)((G__getstructoffset())+sizeof(TMarker3DBox)*i);
   else  delete (TMarker3DBox *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_157_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TMarker3DBox *dest = (TMarker3DBox*)(G__getstructoffset());
   *dest = (*(TMarker3DBox*)libp->para[0].ref);
   const TMarker3DBox& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCONE */
static int G__G__G3D_158_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCONE *p=NULL;
   if(G__getaryconstruct()) p=new TCONE[G__getaryconstruct()];
   else                    p=new TCONE;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCONE);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCONE *p=NULL;
      p = new TCONE(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCONE);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCONE *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TCONE(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5]));
      break;
   case 5:
      p = new TCONE(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCONE);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TCONE*)(G__getstructoffset()))->GetRmin2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TCONE*)(G__getstructoffset()))->GetRmax2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCONE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCONE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCONE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCONE::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCONE*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCONE*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCONE*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCONE*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCONE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCONE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCONE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_158_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCONE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_158_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TCONE *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TCONE(*(TCONE*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCONE);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCONE G__TTCONE;
static int G__G__G3D_158_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCONE *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCONE *)((G__getstructoffset())+sizeof(TCONE)*i);
   else  delete (TCONE *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_158_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCONE *dest = (TCONE*)(G__getstructoffset());
   *dest = (*(TCONE*)libp->para[0].ref);
   const TCONE& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THYPE */
static int G__G__G3D_159_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THYPE *p=NULL;
   if(G__getaryconstruct()) p=new THYPE[G__getaryconstruct()];
   else                    p=new THYPE;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_THYPE);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THYPE *p=NULL;
      p = new THYPE(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_THYPE);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const THYPE*)(G__getstructoffset()))->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)THYPE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THYPE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)THYPE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      THYPE::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const THYPE*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THYPE*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THYPE*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((THYPE*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THYPE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THYPE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)THYPE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_159_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)THYPE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_159_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   THYPE *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new THYPE(*(THYPE*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_THYPE);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THYPE G__TTHYPE;
static int G__G__G3D_159_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (THYPE *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (THYPE *)((G__getstructoffset())+sizeof(THYPE)*i);
   else  delete (THYPE *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_159_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   THYPE *dest = (THYPE*)(G__getstructoffset());
   *dest = (*(THYPE*)libp->para[0].ref);
   const THYPE& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TUtil3D */
static int G__G__G3D_161_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TUtil3D *p=NULL;
   if(G__getaryconstruct()) p=new TUtil3D[G__getaryconstruct()];
   else                    p=new TUtil3D;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TUtil3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtil3D*)(G__getstructoffset()))->DrawOutlineCube((TList*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtil3D*)(G__getstructoffset()))->ToggleRulers((TVirtualPad*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtil3D*)(G__getstructoffset()))->ToggleZoom((TVirtualPad*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TUtil3D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TUtil3D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TUtil3D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TUtil3D::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TUtil3D*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtil3D*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtil3D*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TUtil3D*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TUtil3D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TUtil3D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TUtil3D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_161_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TUtil3D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_161_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TUtil3D *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TUtil3D(*(TUtil3D*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TUtil3D);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TUtil3D G__TTUtil3D;
static int G__G__G3D_161_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TUtil3D *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TUtil3D *)((G__getstructoffset())+sizeof(TUtil3D)*i);
   else  delete (TUtil3D *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_161_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TUtil3D *dest = (TUtil3D*)(G__getstructoffset());
   *dest = (*(TUtil3D*)libp->para[0].ref);
   const TUtil3D& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXTRU */
static int G__G__G3D_162_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXTRU *p=NULL;
   if(G__getaryconstruct()) p=new TXTRU[G__getaryconstruct()];
   else                    p=new TXTRU;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TXTRU);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXTRU *p=NULL;
      p = new TXTRU(
(const Text_t*)G__int(libp->para[0]),(const Text_t*)G__int(libp->para[1])
,(const Text_t*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TXTRU);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TXTRU *p=NULL;
      p = new TXTRU(*(TXTRU*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TXTRU);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TXTRU& obj=((TXTRU*)(G__getstructoffset()))->operator=(*(TXTRU*)libp->para[0].ref);
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TXTRU*)(G__getstructoffset()))->Copy(*(TObject*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->DefineSection((Int_t)G__int(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->DefineSection((Int_t)G__int(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->DefineSection((Int_t)G__int(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->DefineSection((Int_t)G__int(libp->para[0]),(Float_t)G__double(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->DefineVertex((Int_t)G__int(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TXTRU*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const TBuffer3D& obj=((const TXTRU*)(G__getstructoffset()))->GetBuffer3D((Int_t)G__int(libp->para[0]));
         result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TXTRU*)(G__getstructoffset()))->GetNxy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TXTRU*)(G__getstructoffset()))->GetNz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TXTRU*)(G__getstructoffset()))->GetOutlinePointX((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TXTRU*)(G__getstructoffset()))->GetOutlinePointY((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TXTRU*)(G__getstructoffset()))->GetSectionX0((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TXTRU*)(G__getstructoffset()))->GetSectionY0((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TXTRU*)(G__getstructoffset()))->GetSectionScale((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TXTRU*)(G__getstructoffset()))->GetSectionZ((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TXTRU*)(G__getstructoffset()))->GetXvtx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TXTRU*)(G__getstructoffset()))->GetYvtx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TXTRU*)(G__getstructoffset()))->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TXTRU*)(G__getstructoffset()))->GetScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TXTRU*)(G__getstructoffset()))->GetX0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TXTRU*)(G__getstructoffset()))->GetY0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TXTRU*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TXTRU*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TXTRU*)(G__getstructoffset()))->Sizeof3D();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->SplitConcavePolygon((Bool_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->SplitConcavePolygon();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->TruncateNxy((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->TruncateNz((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TXTRU::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXTRU::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TXTRU::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TXTRU::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TXTRU*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TXTRU*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXTRU::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXTRU::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TXTRU::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_162_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TXTRU::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXTRU G__TTXTRU;
static int G__G__G3D_162_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TXTRU *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TXTRU *)((G__getstructoffset())+sizeof(TXTRU)*i);
   else  delete (TXTRU *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTRD1 */
static int G__G__G3D_165_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTRD1 *p=NULL;
   if(G__getaryconstruct()) p=new TTRD1[G__getaryconstruct()];
   else                    p=new TTRD1;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTRD1);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTRD1 *p=NULL;
      p = new TTRD1(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTRD1);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TTRD1*)(G__getstructoffset()))->GetDx2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TTRD1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTRD1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TTRD1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TTRD1::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TTRD1*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTRD1*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTRD1*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TTRD1*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTRD1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTRD1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TTRD1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_165_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TTRD1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_165_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TTRD1 *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TTRD1(*(TTRD1*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TTRD1);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTRD1 G__TTTRD1;
static int G__G__G3D_165_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TTRD1 *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TTRD1 *)((G__getstructoffset())+sizeof(TTRD1)*i);
   else  delete (TTRD1 *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_165_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TTRD1 *dest = (TTRD1*)(G__getstructoffset());
   *dest = (*(TTRD1*)libp->para[0].ref);
   const TTRD1& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TELTU */
static int G__G__G3D_166_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TELTU *p=NULL;
   if(G__getaryconstruct()) p=new TELTU[G__getaryconstruct()];
   else                    p=new TELTU;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TELTU);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TELTU *p=NULL;
      p = new TELTU(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TELTU);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TELTU::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TELTU::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TELTU::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TELTU::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TELTU*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TELTU*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TELTU*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TELTU*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TELTU::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TELTU::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TELTU::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_166_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TELTU::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_166_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TELTU *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TELTU(*(TELTU*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TELTU);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TELTU G__TTELTU;
static int G__G__G3D_166_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TELTU *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TELTU *)((G__getstructoffset())+sizeof(TELTU)*i);
   else  delete (TELTU *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_166_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TELTU *dest = (TELTU*)(G__getstructoffset());
   *dest = (*(TELTU*)libp->para[0].ref);
   const TELTU& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAxis3D */
static int G__G__G3D_177_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAxis3D *p=NULL;
   if(G__getaryconstruct()) p=new TAxis3D[G__getaryconstruct()];
   else                    p=new TAxis3D;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TAxis3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAxis3D *p=NULL;
      p = new TAxis3D((Option_t*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TAxis3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAxis3D *p=NULL;
      p = new TAxis3D(*(TAxis3D*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TAxis3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TAxis3D*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->ExecuteEvent((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Bool_t& obj=((TAxis3D*)(G__getstructoffset()))->StickyZoom();
         result7->ref=(long)(&obj); result7->obj.i=(long)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        const Bool_t& obj=((TAxis3D*)(G__getstructoffset()))->Zoom();
         result7->ref=(long)(&obj); result7->obj.i=(long)(obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,105,(long)((const TAxis3D*)(G__getstructoffset()))->GetNdivisions((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,105,(long)((const TAxis3D*)(G__getstructoffset()))->GetNdivisions());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,115,(long)((const TAxis3D*)(G__getstructoffset()))->GetAxisColor((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,115,(long)((const TAxis3D*)(G__getstructoffset()))->GetAxisColor());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,115,(long)((const TAxis3D*)(G__getstructoffset()))->GetLabelColor((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,115,(long)((const TAxis3D*)(G__getstructoffset()))->GetLabelColor());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letint(result7,115,(long)((const TAxis3D*)(G__getstructoffset()))->GetLabelFont((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7,115,(long)((const TAxis3D*)(G__getstructoffset()))->GetLabelFont());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,102,(double)((const TAxis3D*)(G__getstructoffset()))->GetLabelOffset((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,102,(double)((const TAxis3D*)(G__getstructoffset()))->GetLabelOffset());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,102,(double)((const TAxis3D*)(G__getstructoffset()))->GetLabelSize((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,102,(double)((const TAxis3D*)(G__getstructoffset()))->GetLabelSize());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)TAxis3D::GetPadAxis((TVirtualPad*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)TAxis3D::GetPadAxis());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,102,(double)((const TAxis3D*)(G__getstructoffset()))->GetTitleOffset((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,102,(double)((const TAxis3D*)(G__getstructoffset()))->GetTitleOffset());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__letdouble(result7,102,(double)((const TAxis3D*)(G__getstructoffset()))->GetTickLength((Option_t*)G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7,102,(double)((const TAxis3D*)(G__getstructoffset()))->GetTickLength());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->GetCenter((Axis_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->GetLowEdge((Axis_t*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TAxis3D*)(G__getstructoffset()))->GetObjectInfo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TAxis3D*)(G__getstructoffset()))->GetOption());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TAxis3D*)(G__getstructoffset()))->GetXaxis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TAxis3D*)(G__getstructoffset()))->GetYaxis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((TAxis3D*)(G__getstructoffset()))->GetZaxis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TAxis3D*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->PaintAxis((TGaxis*)G__int(libp->para[0]),(Float_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
   G__letint(result7,68,(long)TAxis3D::PixeltoXYZ((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t*)G__int(libp->para[2]),(TView*)G__int(libp->para[3])));
      break;
   case 3:
   G__letint(result7,68,(long)TAxis3D::PixeltoXYZ((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t*)G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetAxisColor((Color_t)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetAxisColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetAxisColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetAxisRange((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetAxisRange((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelColor((Color_t)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelColor((Color_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelColor();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelFont((Style_t)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelFont((Style_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelFont();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelOffset((Float_t)G__double(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelOffset((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelOffset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelSize((Float_t)G__double(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelSize((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetLabelSize();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetNdivisions((Int_t)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetNdivisions((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetNdivisions();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetOption((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetOption();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetTickLength((Float_t)G__double(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetTickLength((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetTickLength();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetTitleOffset((Float_t)G__double(libp->para[0]),(Option_t*)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetTitleOffset((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetTitleOffset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetXTitle((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetYTitle((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->SetZTitle((const char*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)TAxis3D::ToggleRulers((TVirtualPad*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)TAxis3D::ToggleRulers());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
   G__letint(result7,85,(long)TAxis3D::ToggleZoom((TVirtualPad*)G__int(libp->para[0])));
      break;
   case 0:
   G__letint(result7,85,(long)TAxis3D::ToggleZoom());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->UseCurrentStyle();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TAxis3D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAxis3D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TAxis3D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TAxis3D::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TAxis3D*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TAxis3D*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAxis3D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAxis3D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TAxis3D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_177_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TAxis3D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAxis3D G__TTAxis3D;
static int G__G__G3D_177_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TAxis3D *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TAxis3D *)((G__getstructoffset())+sizeof(TAxis3D)*i);
   else  delete (TAxis3D *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_177_4_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TAxis3D *dest = (TAxis3D*)(G__getstructoffset());
   *dest = (*(TAxis3D*)libp->para[0].ref);
   const TAxis3D& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPolyMarker3D */
static int G__G__G3D_180_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyMarker3D *p=NULL;
   if(G__getaryconstruct()) p=new TPolyMarker3D[G__getaryconstruct()];
   else                    p=new TPolyMarker3D;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyMarker3D *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new TPolyMarker3D(
(Int_t)G__int(libp->para[0]),(Marker_t)G__int(libp->para[1])
,(Option_t*)G__int(libp->para[2]));
      break;
   case 2:
      p = new TPolyMarker3D((Int_t)G__int(libp->para[0]),(Marker_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new TPolyMarker3D((Int_t)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyMarker3D *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TPolyMarker3D(
(Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Marker_t)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      p = new TPolyMarker3D(
(Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Marker_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TPolyMarker3D((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyMarker3D *p=NULL;
   switch(libp->paran) {
   case 4:
      p = new TPolyMarker3D(
(Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Marker_t)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      p = new TPolyMarker3D(
(Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Marker_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new TPolyMarker3D((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyMarker3D *p=NULL;
      p = new TPolyMarker3D(*(TPolyMarker3D*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TPolyMarker3D*)(G__getstructoffset()))->Copy(*(TObject*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPolyMarker3D*)(G__getstructoffset()))->DistancetoPrimitive((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->DrawPolyMarker((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Marker_t)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->DrawPolyMarker((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Marker_t)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->ExecuteEvent((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPolyMarker3D*)(G__getstructoffset()))->GetLastPoint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPolyMarker3D*)(G__getstructoffset()))->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,70,(long)((const TPolyMarker3D*)(G__getstructoffset()))->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((const TPolyMarker3D*)(G__getstructoffset()))->GetPoint((Int_t)G__int(libp->para[0]),*(Float_t*)G__Floatref(&libp->para[1])
,*(Float_t*)G__Floatref(&libp->para[2]),*(Float_t*)G__Floatref(&libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const TPolyMarker3D*)(G__getstructoffset()))->GetOption());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TPolyMarker3D*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TPolyMarker3D*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPolyMarker3D*)(G__getstructoffset()))->Merge((TCollection*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TPolyMarker3D*)(G__getstructoffset()))->Print((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TPolyMarker3D*)(G__getstructoffset()))->Print();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->SavePrimitive(*(ofstream*)libp->para[0].ref,(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->SetPoint((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->SetPolyMarker((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Marker_t)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->SetPolyMarker((Int_t)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Marker_t)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->SetPolyMarker((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Marker_t)G__int(libp->para[2]),(Option_t*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->SetPolyMarker((Int_t)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Marker_t)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TPolyMarker3D*)(G__getstructoffset()))->SetNextPoint((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TPolyMarker3D*)(G__getstructoffset()))->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPolyMarker3D::PaintH3((TH1*)G__int(libp->para[0]),(Option_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPolyMarker3D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPolyMarker3D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPolyMarker3D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPolyMarker3D::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPolyMarker3D*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPolyMarker3D*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPolyMarker3D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPolyMarker3D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPolyMarker3D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_180_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPolyMarker3D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPolyMarker3D G__TTPolyMarker3D;
static int G__G__G3D_180_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPolyMarker3D *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPolyMarker3D *)((G__getstructoffset())+sizeof(TPolyMarker3D)*i);
   else  delete (TPolyMarker3D *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_180_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPolyMarker3D *dest = (TPolyMarker3D*)(G__getstructoffset());
   *dest = (*(TPolyMarker3D*)libp->para[0].ref);
   const TPolyMarker3D& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCTUB */
static int G__G__G3D_181_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCTUB *p=NULL;
   if(G__getaryconstruct()) p=new TCTUB[G__getaryconstruct()];
   else                    p=new TCTUB;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCTUB);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCTUB *p=NULL;
      p = new TCTUB(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]),(Float_t)G__double(libp->para[9])
,(Float_t)G__double(libp->para[10]),(Float_t)G__double(libp->para[11])
,(Float_t)G__double(libp->para[12]),(Float_t)G__double(libp->para[13]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCTUB);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCTUB *p=NULL;
      p = new TCTUB(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t*)G__int(libp->para[8]),(Float_t*)G__int(libp->para[9]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCTUB);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TCTUB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCTUB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TCTUB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TCTUB::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TCTUB*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCTUB*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCTUB*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TCTUB*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCTUB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCTUB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TCTUB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_181_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TCTUB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_181_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TCTUB *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TCTUB(*(TCTUB*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TCTUB);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCTUB G__TTCTUB;
static int G__G__G3D_181_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TCTUB *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TCTUB *)((G__getstructoffset())+sizeof(TCTUB)*i);
   else  delete (TCTUB *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_181_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TCTUB *dest = (TCTUB*)(G__getstructoffset());
   *dest = (*(TCTUB*)libp->para[0].ref);
   const TCTUB& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGeometry */
static int G__G__G3D_182_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeometry *p=NULL;
   if(G__getaryconstruct()) p=new TGeometry[G__getaryconstruct()];
   else                    p=new TGeometry;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TGeometry);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeometry *p=NULL;
      p = new TGeometry((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TGeometry);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Browse((TBrowser*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->cd((const char*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->cd();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->FindObject((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->FindObject((const TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TGeometry*)(G__getstructoffset()))->GetBomb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TGeometry*)(G__getstructoffset()))->GeomLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetListOfShapes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetListOfNodes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetListOfMaterials());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetListOfMatrices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetCurrentNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetMaterial((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetMaterialByNumber((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetNode((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetShape((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetShapeByNumber((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetRotMatrix((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetRotMatrixByNumber((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetCurrentMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetCurrentPosition((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->GetCurrentPosition((Float_t*)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1])
,(Float_t*)G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeometry*)(G__getstructoffset()))->GetCurrentReflection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,103,(long)((const TGeometry*)(G__getstructoffset()))->IsFolder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Local2Master((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Local2Master((Float_t*)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((const TGeometry*)(G__getstructoffset()))->ls((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((const TGeometry*)(G__getstructoffset()))->ls();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Master2Local((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Master2Local((Float_t*)G__int(libp->para[0]),(Float_t*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 8:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Node(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(const char*)G__int(libp->para[6]),(Option_t*)G__int(libp->para[7]));
      break;
   case 7:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Node(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5])
,(const char*)G__int(libp->para[6]));
      break;
   case 6:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Node((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t)G__double(libp->para[5]));
      break;
   case 5:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Node((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Node((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Double_t)G__double(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Node((const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeometry*)(G__getstructoffset()))->PushLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TGeometry*)(G__getstructoffset()))->PopLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->RecursiveRemove((TObject*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetBomb((Float_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetBomb();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetCurrentNode((TNode*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetGeomLevel((Int_t)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetGeomLevel();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetMatrix((TRotMatrix*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetMatrix();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetPosition((TRotMatrix*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetPosition((TRotMatrix*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetPosition((TRotMatrix*)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetPosition((TRotMatrix*)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetPosition((TRotMatrix*)G__int(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]),(Float_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetPosition((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->SetPosition((Float_t)G__double(libp->para[0]),(Float_t)G__double(libp->para[1])
,(Float_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->UpdateMatrix((TNode*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 4:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->UpdateTempMatrix((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(TRotMatrix*)G__int(libp->para[3]));
      break;
   case 3:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->UpdateTempMatrix((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->UpdateTempMatrix((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->UpdateTempMatrix((Double_t)G__double(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->UpdateTempMatrix();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 5:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->UpdateTempMatrix((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t*)G__int(libp->para[3])
,(Bool_t)G__int(libp->para[4]));
      break;
   case 4:
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->UpdateTempMatrix((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t*)G__int(libp->para[3]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeometry::Get((const char*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeometry::UpdateTempMatrix(
(Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3])
,(Double_t)G__double(libp->para[4]),(Double_t*)G__int(libp->para[5])
,(Double_t*)G__int(libp->para[6]),(Double_t*)G__int(libp->para[7]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TGeometry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeometry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TGeometry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_2_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TGeometry::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_3_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TGeometry*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_4_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_5_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_6_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TGeometry*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_7_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeometry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_8_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeometry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_9_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TGeometry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_182_0_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TGeometry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_182_1_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TGeometry *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TGeometry(*(TGeometry*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TGeometry);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeometry G__TTGeometry;
static int G__G__G3D_182_2_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TGeometry *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TGeometry *)((G__getstructoffset())+sizeof(TGeometry)*i);
   else  delete (TGeometry *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_182_3_6(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TGeometry *dest = (TGeometry*)(G__getstructoffset());
   *dest = (*(TGeometry*)libp->para[0].ref);
   const TGeometry& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TNodeDiv */
static int G__G__G3D_183_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNodeDiv *p=NULL;
   if(G__getaryconstruct()) p=new TNodeDiv[G__getaryconstruct()];
   else                    p=new TNodeDiv;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNodeDiv *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TNodeDiv(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Option_t*)G__int(libp->para[5]));
      break;
   case 5:
      p = new TNodeDiv(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNodeDiv *p=NULL;
   switch(libp->paran) {
   case 6:
      p = new TNodeDiv(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(TShape*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]),(Option_t*)G__int(libp->para[5]));
      break;
   case 5:
      p = new TNodeDiv(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(TShape*)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(Int_t)G__int(libp->para[4]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TNodeDiv*)(G__getstructoffset()))->Draw((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TNodeDiv*)(G__getstructoffset()))->Draw();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TNodeDiv*)(G__getstructoffset()))->Paint((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TNodeDiv*)(G__getstructoffset()))->Paint();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TNodeDiv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNodeDiv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TNodeDiv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TNodeDiv::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TNodeDiv*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNodeDiv*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNodeDiv*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TNodeDiv*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNodeDiv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNodeDiv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TNodeDiv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_183_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TNodeDiv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_183_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TNodeDiv *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TNodeDiv(*(TNodeDiv*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TNodeDiv G__TTNodeDiv;
static int G__G__G3D_183_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TNodeDiv *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TNodeDiv *)((G__getstructoffset())+sizeof(TNodeDiv)*i);
   else  delete (TNodeDiv *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_183_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TNodeDiv *dest = (TNodeDiv*)(G__getstructoffset());
   *dest = (*(TNodeDiv*)libp->para[0].ref);
   const TNodeDiv& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPARA */
static int G__G__G3D_184_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPARA *p=NULL;
   if(G__getaryconstruct()) p=new TPARA[G__getaryconstruct()];
   else                    p=new TPARA;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPARA);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPARA *p=NULL;
      p = new TPARA(
(const char*)G__int(libp->para[0]),(const char*)G__int(libp->para[1])
,(const char*)G__int(libp->para[2]),(Float_t)G__double(libp->para[3])
,(Float_t)G__double(libp->para[4]),(Float_t)G__double(libp->para[5])
,(Float_t)G__double(libp->para[6]),(Float_t)G__double(libp->para[7])
,(Float_t)G__double(libp->para[8]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPARA);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TPARA*)(G__getstructoffset()))->GetAlpha());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TPARA*)(G__getstructoffset()))->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const TPARA*)(G__getstructoffset()))->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)TPARA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPARA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TPARA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TPARA::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const TPARA*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPARA*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPARA*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TPARA*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPARA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPARA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)TPARA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__G3D_184_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TPARA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__G3D_184_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TPARA *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new TPARA(*(TPARA*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__G__G3DLN_TPARA);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPARA G__TTPARA;
static int G__G__G3D_184_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TPARA *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TPARA *)((G__getstructoffset())+sizeof(TPARA)*i);
   else  delete (TPARA *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__G3D_184_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TPARA *dest = (TPARA*)(G__getstructoffset());
   *dest = (*(TPARA*)libp->para[0].ref);
   const TPARA& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TMaterial */

/* TNode */

/* TShape */

/* TBRIK */

/* TTRD2 */

/* TMixture */

/* TTUBE */

/* TTUBS */

/* TCONS */

/* TTRAP */

/* TPolyLine3D */

/* TRotMatrix */

/* THelix */

/* TPCON */

/* TPGON */

/* TSPHE */

/* TPoints3DABC */

/* TGTRA */

/* TMarker3DBox */

/* TCONE */

/* THYPE */

/* TUtil3D */

/* TXTRU */

/* TTRD1 */

/* TELTU */

/* TAxis3D */

/* TPolyMarker3D */

/* TCTUB */

/* TGeometry */

/* TNodeDiv */

/* TPARA */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__G3D {
 public:
  G__Sizep2memfuncG__G3D() {p=&G__Sizep2memfuncG__G3D::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__G3D::*p)();
};

size_t G__get_sizep2memfuncG__G3D()
{
  G__Sizep2memfuncG__G3D a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__G3D() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TMaterial))) {
     TMaterial *G__Lderived;
     G__Lderived=(TMaterial*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TMaterial),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TMaterial),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TMaterial),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TNode))) {
     TNode *G__Lderived;
     G__Lderived=(TNode*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TNode),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TNode),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TNode),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TNode),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TNode),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TShape))) {
     TShape *G__Lderived;
     G__Lderived=(TShape*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TShape),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TShape),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TShape),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TShape),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TShape),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TBRIK))) {
     TBRIK *G__Lderived;
     G__Lderived=(TBRIK*)0x1000;
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TBRIK),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TBRIK),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TBRIK),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TBRIK),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TBRIK),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TBRIK),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TTRD2))) {
     TTRD2 *G__Lderived;
     G__Lderived=(TTRD2*)0x1000;
     {
       TBRIK *G__Lpbase=(TBRIK*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD2),G__get_linked_tagnum(&G__G__G3DLN_TBRIK),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD2),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD2),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD2),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD2),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD2),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD2),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TMixture))) {
     TMixture *G__Lderived;
     G__Lderived=(TMixture*)0x1000;
     {
       TMaterial *G__Lpbase=(TMaterial*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TMixture),G__get_linked_tagnum(&G__G__G3DLN_TMaterial),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TMixture),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TMixture),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TMixture),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TTUBE))) {
     TTUBE *G__Lderived;
     G__Lderived=(TTUBE*)0x1000;
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBE),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBE),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBE),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBE),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBE),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBE),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TTUBS))) {
     TTUBS *G__Lderived;
     G__Lderived=(TTUBS*)0x1000;
     {
       TTUBE *G__Lpbase=(TTUBE*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBS),G__get_linked_tagnum(&G__G__G3DLN_TTUBE),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBS),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBS),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBS),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBS),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBS),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBS),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TCONS))) {
     TCONS *G__Lderived;
     G__Lderived=(TCONS*)0x1000;
     {
       TTUBS *G__Lpbase=(TTUBS*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONS),G__get_linked_tagnum(&G__G__G3DLN_TTUBS),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTUBE *G__Lpbase=(TTUBE*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONS),G__get_linked_tagnum(&G__G__G3DLN_TTUBE),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONS),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONS),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONS),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONS),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONS),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONS),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TTRAP))) {
     TTRAP *G__Lderived;
     G__Lderived=(TTRAP*)0x1000;
     {
       TBRIK *G__Lpbase=(TBRIK*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRAP),G__get_linked_tagnum(&G__G__G3DLN_TBRIK),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRAP),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRAP),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRAP),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRAP),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRAP),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRAP),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D))) {
     TPolyLine3D *G__Lderived;
     G__Lderived=(TPolyLine3D*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix))) {
     TRotMatrix *G__Lderived;
     G__Lderived=(TRotMatrix*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_THelix))) {
     THelix *G__Lderived;
     G__Lderived=(THelix*)0x1000;
     {
       TPolyLine3D *G__Lpbase=(TPolyLine3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_THelix),G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_THelix),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_THelix),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_THelix),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TPCON))) {
     TPCON *G__Lderived;
     G__Lderived=(TPCON*)0x1000;
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPCON),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPCON),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPCON),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPCON),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPCON),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPCON),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TPGON))) {
     TPGON *G__Lderived;
     G__Lderived=(TPGON*)0x1000;
     {
       TPCON *G__Lpbase=(TPCON*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPGON),G__get_linked_tagnum(&G__G__G3DLN_TPCON),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPGON),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPGON),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPGON),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPGON),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPGON),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPGON),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TSPHE))) {
     TSPHE *G__Lderived;
     G__Lderived=(TSPHE*)0x1000;
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TSPHE),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TSPHE),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TSPHE),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TSPHE),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TSPHE),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TSPHE),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TPoints3DABC))) {
     TPoints3DABC *G__Lderived;
     G__Lderived=(TPoints3DABC*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPoints3DABC),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TGTRA))) {
     TGTRA *G__Lderived;
     G__Lderived=(TGTRA*)0x1000;
     {
       TBRIK *G__Lpbase=(TBRIK*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TGTRA),G__get_linked_tagnum(&G__G__G3DLN_TBRIK),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TGTRA),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TGTRA),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TGTRA),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TGTRA),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TGTRA),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TGTRA),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox))) {
     TMarker3DBox *G__Lderived;
     G__Lderived=(TMarker3DBox*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TCONE))) {
     TCONE *G__Lderived;
     G__Lderived=(TCONE*)0x1000;
     {
       TTUBE *G__Lpbase=(TTUBE*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONE),G__get_linked_tagnum(&G__G__G3DLN_TTUBE),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONE),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONE),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONE),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONE),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONE),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONE),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_THYPE))) {
     THYPE *G__Lderived;
     G__Lderived=(THYPE*)0x1000;
     {
       TTUBE *G__Lpbase=(TTUBE*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_THYPE),G__get_linked_tagnum(&G__G__G3DLN_TTUBE),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_THYPE),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_THYPE),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_THYPE),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_THYPE),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_THYPE),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_THYPE),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TUtil3D))) {
     TUtil3D *G__Lderived;
     G__Lderived=(TUtil3D*)0x1000;
     {
       TVirtualUtil3D *G__Lpbase=(TVirtualUtil3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TUtil3D),G__get_linked_tagnum(&G__G__G3DLN_TVirtualUtil3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TUtil3D),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TUtil3D),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TXTRU))) {
     TXTRU *G__Lderived;
     G__Lderived=(TXTRU*)0x1000;
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TXTRU),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TXTRU),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TXTRU),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TXTRU),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TXTRU),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TXTRU),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TTRD1))) {
     TTRD1 *G__Lderived;
     G__Lderived=(TTRD1*)0x1000;
     {
       TBRIK *G__Lpbase=(TBRIK*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD1),G__get_linked_tagnum(&G__G__G3DLN_TBRIK),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD1),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD1),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD1),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD1),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD1),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD1),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TELTU))) {
     TELTU *G__Lderived;
     G__Lderived=(TELTU*)0x1000;
     {
       TTUBE *G__Lpbase=(TTUBE*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TELTU),G__get_linked_tagnum(&G__G__G3DLN_TTUBE),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TELTU),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TELTU),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TELTU),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TELTU),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TELTU),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TELTU),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TAxis3D))) {
     TAxis3D *G__Lderived;
     G__Lderived=(TAxis3D*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TAxis3D),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TAxis3D),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D))) {
     TPolyMarker3D *G__Lderived;
     G__Lderived=(TPolyMarker3D*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D),G__get_linked_tagnum(&G__G__G3DLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TCTUB))) {
     TCTUB *G__Lderived;
     G__Lderived=(TCTUB*)0x1000;
     {
       TTUBS *G__Lpbase=(TTUBS*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCTUB),G__get_linked_tagnum(&G__G__G3DLN_TTUBS),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTUBE *G__Lpbase=(TTUBE*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCTUB),G__get_linked_tagnum(&G__G__G3DLN_TTUBE),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCTUB),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCTUB),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCTUB),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCTUB),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCTUB),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TCTUB),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TGeometry))) {
     TGeometry *G__Lderived;
     G__Lderived=(TGeometry*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TGeometry),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TGeometry),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv))) {
     TNodeDiv *G__Lderived;
     G__Lderived=(TNodeDiv*)0x1000;
     {
       TNode *G__Lpbase=(TNode*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),G__get_linked_tagnum(&G__G__G3DLN_TNode),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__G3DLN_TPARA))) {
     TPARA *G__Lderived;
     G__Lderived=(TPARA*)0x1000;
     {
       TBRIK *G__Lpbase=(TBRIK*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPARA),G__get_linked_tagnum(&G__G__G3DLN_TBRIK),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TShape *G__Lpbase=(TShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPARA),G__get_linked_tagnum(&G__G__G3DLN_TShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPARA),G__get_linked_tagnum(&G__G__G3DLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPARA),G__get_linked_tagnum(&G__G__G3DLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPARA),G__get_linked_tagnum(&G__G__G3DLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPARA),G__get_linked_tagnum(&G__G__G3DLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__G3DLN_TPARA),G__get_linked_tagnum(&G__G__G3DLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__G3D() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Text_t",99,-1,0,
-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__G__G3DLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__G3DLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__G3DLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__G3DLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__G3DLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.42 2005/03/10 17:57:04 rdm Exp $",0);
   G__search_typename2("Axis_t",100,-1,0,
-1);
   G__setnewtype(-1,"Axis values type (double)",0);
   G__search_typename2("Style_t",115,-1,0,
-1);
   G__setnewtype(-1,"Style number (short)",0);
   G__search_typename2("Marker_t",115,-1,0,
-1);
   G__setnewtype(-1,"Marker number (short)",0);
   G__search_typename2("Color_t",115,-1,0,
-1);
   G__setnewtype(-1,"Color number (short)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TMaterial */
static void G__setup_memvarTMaterial(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TMaterial));
   { TMaterial *p; p=(TMaterial*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumber=",0,"Material matrix number");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fA=",0,"A of Material");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fZ=",0,"Z of Material");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDensity=",0,"Material density in gr/cm3");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRadLength=",0,"Material radiation length");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fInterLength=",0,"Material interaction length");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TNode */
static void G__setup_memvarTNode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TNode));
   { TNode *p; p=(TNode*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TNodecLcLdA),-1,-2,1,"kSonsInvisible=131072",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX=",0,"X offset with respect to parent object");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY=",0,"Y offset with respect to parent object");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ=",0,"Z offset with respect to parent object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,-1,2,"fMatrix=",0,"Pointer to rotation matrix");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TShape),-1,-1,2,"fShape=",0,"Pointer to shape definition");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TNode),-1,-1,2,"fParent=",0,"Pointer to parent positioned volume");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TList),-1,-1,2,"fNodes=",0,"List of son nodes (if any)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__G3DLN_TString),-1,-1,2,"fOption=",0,"List of options if any");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVisibility=",0,"Visibility flag");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TShape */
static void G__setup_memvarTShape(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TShape));
   { TShape *p; p=(TShape*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumber=",0,"Shape number");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fVisibility=",0,"Visibility flag");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TMaterial),-1,-1,2,"fMaterial=",0,"Pointer to material");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TBRIK */
static void G__setup_memvarTBRIK(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TBRIK));
   { TBRIK *p; p=(TBRIK*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDx=",0,"half length in x");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDy=",0,"half length in y");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDz=",0,"half length in z");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTRD2 */
static void G__setup_memvarTTRD2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD2));
   { TTRD2 *p; p=(TTRD2*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDx2=",0,"half length in x at the high z surface");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDy2=",0,"half length in y at the high z surface");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMixture */
static void G__setup_memvarTMixture(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TMixture));
   { TMixture *p; p=(TMixture*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNmixt=",0,"Number of elements in mixture");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fAmixt=",0,"[fNmixt] Array of A of mixtures");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fZmixt=",0,"[fNmixt] Array of Z of mixtures");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fWmixt=",0,"[fNmixt] Array of relative weights");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTUBE */
static void G__setup_memvarTTUBE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBE));
   { TTUBE *p; p=(TTUBE*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRmin=",0,"ellipse  semi-axis   in  X inside");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRmax=",0,"ellipse  semi-axis   in  X outside");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDz=",0,"half length in z");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdiv=",0,"number of segments (precision)");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fAspectRatio=",0,"defines  (the ellipse semi-axis in Y)/(the ellipse semi-axis in X)");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSiTab=",0,"! Table of sin(fPhi1) .... sin(fPhil+fDphi1)");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCoTab=",0,"! Table of cos(fPhi1) .... cos(fPhil+fDphi1)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTUBS */
static void G__setup_memvarTTUBS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBS));
   { TTUBS *p; p=(TTUBS*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPhi1=",0,"first phi limit");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPhi2=",0,"second phi limit");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCONS */
static void G__setup_memvarTCONS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONS));
   { TCONS *p; p=(TCONS*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRmin2=",0,"inside radius at the high z limit");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRmax2=",0,"outside radius at the high z limit");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTRAP */
static void G__setup_memvarTTRAP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRAP));
   { TTRAP *p; p=(TTRAP*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fH1=",0,"half length in y at low z");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fBl1=",0,"half length in x at low z and y low edge");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTl1=",0,"half length in x at low z and y high edge");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fAlpha1=",0,"angle w.r.t. the y axis");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fH2=",0,"half length in y at high z");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fBl2=",0,"half length in x at high z and y low edge");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTl2=",0,"half length in x at high z and y high edge");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fAlpha2=",0,"angle w.r.t. the y axis");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPolyLine3D */
static void G__setup_memvarTPolyLine3D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D));
   { TPolyLine3D *p; p=(TPolyLine3D*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fN=",0,"Number of points");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fP=",0,"[3*fN] Array of 3-D coordinates  (x,y,z)");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__G3DLN_TString),-1,-1,2,"fOption=",0,"options");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fGLList=",0,"!The list number for OpenGL view");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLastPoint=",0,"The index of the last filled point");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRotMatrix */
static void G__setup_memvarTRotMatrix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix));
   { TRotMatrix *p; p=(TRotMatrix*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNumber=",0,"Rotation matrix number");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fType=",0,"Type of matrix (0=identity, 1=reflexion, 2=otherwise)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"theta angle");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"phi angle");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPsi=",0,"psi angle");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMatrix[9]=",0,"Rotation matrix");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EHelixRangeType */

   /* THelix */
static void G__setup_memvarTHelix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_THelix));
   { THelix *p; p=(THelix*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX0=",0,"Initial X position");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY0=",0,"Initial Y position");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ0=",0,"Initial Z position");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVt=",0,"Transverse velocity (constant of motion)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi0=",0,"Initial phase, so vx0 = fVt*cos(fPhi0)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVz=",0,"Z velocity (constant of motion)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fW=",0,"Angular frequency");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAxis[3]=",0,"Direction unit vector of the helix axis");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,-1,2,"fRotMat=",0,"Rotation matrix: axis // z  -->  axis // fAxis");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRange[2]=",0,"Range of helix parameter t");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"fgMinNSeg=",0,"minimal number of segments in polyline");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPCON */
static void G__setup_memvarTPCON(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TPCON));
   { TPCON *p; p=(TPCON*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSiTab=",0,"! Table of sin(fPhi1) .... sin(fPhil+fDphi1)");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCoTab=",0,"! Table of cos(fPhi1) .... cos(fPhil+fDphi1)");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPhi1=",0,"lower phi limit");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDphi1=",0,"range in phi");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdiv=",0,"number of divisions");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNz=",0,"number of z segments");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRmin=",0,"[fNz] pointer to array of inside radiuses");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRmax=",0,"[fNz] pointer to array of outside radiuses");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDz=",0,"[fNz] pointer to array of half lengths in z");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPGON */
static void G__setup_memvarTPGON(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TPGON));
   { TPGON *p; p=(TPGON*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSPHE */
static void G__setup_memvarTSPHE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TSPHE));
   { TSPHE *p; p=(TSPHE*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSiTab=",0,"! Table of sin(fPhimin) .... sin(Phi)");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCoTab=",0,"! Table of cos(fPhimin) .... cos(Phi)");
   G__memvar_setup((void*)NULL,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCoThetaTab=",0,"! Table of sin(gThemin) .... cos(Theta)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNdiv=",0,"number of divisions");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNz=",0,"! number of sections");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fAspectRatio=",0,"Relation between asumth and grid size (by default 1.0)");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRmin=",0,"minimum radius");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRmax=",0,"maximum radius");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fThemin=",0,"minimum theta");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fThemax=",0,"maximum theta");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPhimin=",0,"minimum phi");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPhimax=",0,"maximum phi");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"faX=",0,"Coeff along Ox");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"faY=",0,"Coeff along Oy");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"faZ=",0,"Coeff along Oz");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPoints3DABC */
static void G__setup_memvarTPoints3DABC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TPoints3DABC));
   { TPoints3DABC *p; p=(TPoints3DABC*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGTRA */
static void G__setup_memvarTGTRA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TGTRA));
   { TGTRA *p; p=(TGTRA*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTwist=",0,"twisting parameter");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fH1=",0,"half length in y at low z");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fBl1=",0,"half length in x at low z and y low edge");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTl1=",0,"half length in x at low z and y high edge");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fAlpha1=",0,"angle w.r.t. the y axis");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fH2=",0,"half length in y at high z");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fBl2=",0,"half length in x at high z and y low edge");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTl2=",0,"half length in x at high z and y high edge");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fAlpha2=",0,"angle w.r.t. the y axis");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMarker3DBox */
static void G__setup_memvarTMarker3DBox(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox));
   { TMarker3DBox *p; p=(TMarker3DBox*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fX=",0,"X coordinate of center of box");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fY=",0,"Y coordinate of center of box");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fZ=",0,"Z coordinate of center of box");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDx=",0,"half length in x");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDy=",0,"half length in y");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDz=",0,"half length in z");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTheta=",0,"Angle of box z axis with respect to main Z axis");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPhi=",0,"Angle of box x axis with respect to main Xaxis");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TObject),-1,-1,2,"fRefObject=",0,"Pointer to an object");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCONE */
static void G__setup_memvarTCONE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONE));
   { TCONE *p; p=(TCONE*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRmin2=",0,"inside radius at the high z limit");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fRmax2=",0,"outside radius at the high z limit");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THYPE */
static void G__setup_memvarTHYPE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_THYPE));
   { THYPE *p; p=(THYPE*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPhi=",0,"stereo angle");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TUtil3D */
static void G__setup_memvarTUtil3D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TUtil3D));
   { TUtil3D *p; p=(TUtil3D*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXTRU */
static void G__setup_memvarTXTRU(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TXTRU));
   { TXTRU *p; p=(TXTRU*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNxy=",0,"number of x-y points in the cross section");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNxyAlloc=",0,"number of x-y points allocated");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNz=",0,"number of z planes");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNzAlloc=",0,"number of z planes allocated");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fXvtx=",0,"[fNxyAlloc] array of x positions");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fYvtx=",0,"[fNxyAlloc] array of y positions");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fZ=",0,"[fNzAlloc] array of z planes");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fScale=",0,"[fNzAlloc] array of scale factors (for each z)");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fX0=",0,"[fNzAlloc] array of x offsets (for each z)");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fY0=",0,"[fNzAlloc] array of y offsets (for each z)");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEXYChecked),-1,-2,1,"kUncheckedXY=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEXYChecked),-1,-2,1,"kMalformedXY=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEXYChecked),-1,-2,1,"kConvexCCW=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEXYChecked),-1,-2,1,"kConvexCW=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEXYChecked),-1,-2,1,"kConcaveCCW=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEXYChecked),-1,-2,1,"kConcaveCW=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEZChecked),-1,-2,1,"kUncheckedZ=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEZChecked),-1,-2,1,"kMalformedZ=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEZChecked),-1,-2,1,"kConvexIncZ=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEZChecked),-1,-2,1,"kConvexDecZ=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEZChecked),-1,-2,1,"kConcaveIncZ=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEZChecked),-1,-2,1,"kConcaveDecZ=5",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEXYChecked),-1,-1,2,"fPolygonShape=",0,"CCW vs. CW, convex vs. concave");
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEZChecked),-1,-1,2,"fZOrdering=",0,"increasing or decreasing");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSplitConcave=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTRD1 */
static void G__setup_memvarTTRD1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD1));
   { TTRD1 *p; p=(TTRD1*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fDx2=",0,"half length in x at the high z surface");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TELTU */
static void G__setup_memvarTELTU(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TELTU));
   { TELTU *p; p=(TELTU*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAxis3D */
static void G__setup_memvarTAxis3D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TAxis3D));
   { TAxis3D *p; p=(TAxis3D*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__G3DLN_TAxis),-1,-1,2,"fAxis[3]=",0,"X/Y/Z axis");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__G3DLN_TString),-1,-1,2,"fOption=",0,"Options (is not use yet)");
   G__memvar_setup((void*)NULL,67,0,1,-1,G__defined_typename("Char_t"),-2,2,"rulerName=",0,"The default object name");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TAxis),-1,-1,2,"fSelected=",0,"!  The selected axis to play with");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fZoomMode=",0,"Zoom mode for the entire parent TPad");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fStickyZoom=",0,"StickyZoom mode:  zoom will not be disabled    after zooming attempt if true  ");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPolyMarker3D */
static void G__setup_memvarTPolyMarker3D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D));
   { TPolyMarker3D *p; p=(TPolyMarker3D*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fN=",0,"number of points");
   G__memvar_setup((void*)NULL,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fP=",0,"[3*fN] Array of X,Y,Z coordinates");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__G__G3DLN_TString),-1,-1,2,"fOption=",0,"options");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fGLList=",0,"!The list number for OpenGL view");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLastPoint=",0,"The index of the last filled point");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCTUB */
static void G__setup_memvarTCTUB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TCTUB));
   { TCTUB *p; p=(TCTUB*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fCosLow[3]=",0,"dir cosinus of surface cutting tube at low z");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fCosHigh[3]=",0,"dir cosinus of surface cutting tube at high z");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGeometry */
static void G__setup_memvarTGeometry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TGeometry));
   { TGeometry *p; p=(TGeometry*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_THashList),-1,-1,4,"fMaterials=",0,"->Collection of materials");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_THashList),-1,-1,4,"fMatrices=",0,"->Collection of rotation matrices");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_THashList),-1,-1,4,"fShapes=",0,"->Collection of shapes");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TList),-1,-1,4,"fNodes=",0,"->Collection of nodes");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,-1,4,"fMatrix=",0,"!Pointers to current rotation matrices");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TNode),-1,-1,4,"fCurrentNode=",0,"!Pointer to current node");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__G3DLN_TMaterial),-1,-1,4,"fMaterialPointer=",0,"!Pointers to materials");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,-1,4,"fMatrixPointer=",0,"!Pointers to rotation matrices");
   G__memvar_setup((void*)NULL,85,2,0,G__get_linked_tagnum(&G__G__G3DLN_TShape),-1,-1,4,"fShapePointer=",0,"!Pointers to shapes");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fBomb=",0,"Bomb factor for exploded geometry");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGeomLevel=",0,"!");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX=",0,"!");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY=",0,"! The global translation of the current node");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,"!");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTranslation[20][3]=",0,"!");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRotMatrix[20][9]=",0,"!");
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsReflection[20]=",0,"!");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TNodeDiv */
static void G__setup_memvarTNodeDiv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv));
   { TNodeDiv *p; p=(TNodeDiv*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdiv=",0,"Number of divisions");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fAxis=",0,"Axis number where object is divided");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPARA */
static void G__setup_memvarTPARA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__G3DLN_TPARA));
   { TPARA *p; p=(TPARA*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fAlpha=",0,"angle w.r.t. the y axis from the centre of the low y to the high y");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTheta=",0,"polar angle from the centre of the low z to the high z");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPhi=",0,"polar angle from the centre of the low z to the high z");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__G3D() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTMaterial(void) {
   /* TMaterial */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TMaterial));
   G__memfunc_setup("TMaterial",899,G__G__G3D_131_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_TMaterial),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMaterial",899,G__G__G3D_131_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TMaterial),-1,0,5,1,1,0,
"C - - 10 - name C - - 10 - title "
"f - 'Float_t' 0 - a f - 'Float_t' 0 - z "
"f - 'Float_t' 0 - density",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMaterial",899,G__G__G3D_131_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TMaterial),-1,0,7,1,1,0,
"C - - 10 - name C - - 10 - title "
"f - 'Float_t' 0 - a f - 'Float_t' 0 - z "
"f - 'Float_t' 0 - density f - 'Float_t' 0 - radl "
"f - 'Float_t' 0 - inter",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumber",905,G__G__G3D_131_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetA",353,G__G__G3D_131_5_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetZ",378,G__G__G3D_131_6_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDensity",1024,G__G__G3D_131_7_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRadLength",1177,G__G__G3D_131_8_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetInterLength",1412,G__G__G3D_131_9_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_131_0_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMaterial::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_131_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMaterial::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_131_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMaterial::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_131_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMaterial::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_131_4_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_131_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_131_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_131_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_131_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMaterial::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_131_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMaterial::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_131_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMaterial::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_131_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMaterial::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMaterial",899,G__G__G3D_131_2_2,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TMaterial),-1,0,1,1,1,0,"u 'TMaterial' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMaterial",1025,G__G__G3D_131_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_131_4_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TMaterial),-1,1,1,1,1,0,"u 'TMaterial' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTNode(void) {
   /* TNode */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TNode));
   G__memfunc_setup("TNode",474,G__G__G3D_137_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_TNode),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TNode",474,G__G__G3D_137_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TNode),-1,0,8,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - shapename d - 'Double_t' 0 0 x "
"d - 'Double_t' 0 0 y d - 'Double_t' 0 0 z "
"C - - 10 \"\" matrixname C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TNode",474,G__G__G3D_137_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TNode),-1,0,8,1,1,0,
"C - - 10 - name C - - 10 - title "
"U 'TShape' - 0 - shape d - 'Double_t' 0 0 x "
"d - 'Double_t' 0 0 y d - 'Double_t' 0 0 z "
"U 'TRotMatrix' - 0 0 matrix C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Browse",626,G__G__G3D_137_4_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("BuildListOfNodes",1594,G__G__G3D_137_5_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("cd",199,G__G__G3D_137_6_0,121,-1,-1,0,1,1,1,0,"C - - 10 0 path","*MENU*",(void*)NULL,1);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_137_7_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__G3D_137_8_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("DrawOnly",816,G__G__G3D_137_9_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteEvent",1237,G__G__G3D_137_0_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetListOfNodes",1386,G__G__G3D_137_1_1,85,G__get_linked_tagnum(&G__G__G3DLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMatrix",917,G__G__G3D_137_2_1,85,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNode",678,G__G__G3D_137_3_1,85,G__get_linked_tagnum(&G__G__G3DLN_TNode),-1,0,1,1,1,8,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetObjectInfo",1283,G__G__G3D_137_4_1,67,-1,-1,0,2,1,1,8,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOption",921,G__G__G3D_137_5_1,67,-1,G__defined_typename("Option_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetParent",906,G__G__G3D_137_6_1,85,G__get_linked_tagnum(&G__G__G3DLN_TNode),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetShape",785,G__G__G3D_137_7_1,85,G__get_linked_tagnum(&G__G__G3DLN_TShape),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetVisibility",1352,G__G__G3D_137_8_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetX",376,G__G__G3D_137_9_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetY",377,G__G__G3D_137_0_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetZ",378,G__G__G3D_137_1_2,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ImportShapeAttributes",2195,G__G__G3D_137_2_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsFolder",792,G__G__G3D_137_3_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Local2Master",1161,G__G__G3D_137_4_2,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Local2Master",1161,G__G__G3D_137_5_2,121,-1,-1,0,2,1,1,0,
"F - 'Float_t' 10 - local F - 'Float_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ls",223,G__G__G3D_137_6_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"2\" option","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Master2Local",1161,G__G__G3D_137_7_2,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Master2Local",1161,G__G__G3D_137_8_2,121,-1,-1,0,2,1,1,0,
"F - 'Float_t' 10 - master F - 'Float_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__G3D_137_9_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RecursiveRemove",1574,G__G__G3D_137_0_3,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrix",929,G__G__G3D_137_1_3,121,-1,-1,0,1,1,1,0,"U 'TRotMatrix' - 0 0 matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetName",685,G__G__G3D_137_2_3,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetParent",918,G__G__G3D_137_3_3,121,-1,-1,0,1,1,1,0,"U 'TNode' - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetNameTitle",1199,G__G__G3D_137_4_3,121,-1,-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - title",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPosition",1153,G__G__G3D_137_5_3,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 0 x d - 'Double_t' 0 0 y "
"d - 'Double_t' 0 0 z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetVisibility",1364,G__G__G3D_137_6_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 1 vis","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Sizeof3D",743,G__G__G3D_137_7_3,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UpdateMatrix",1240,G__G__G3D_137_8_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UpdateTempMatrix",1646,G__G__G3D_137_9_3,121,-1,-1,0,8,1,1,0,
"D - 'Double_t' 10 - dx1 D - 'Double_t' 10 - rmat1 "
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z D - 'Double_t' 0 - matrix "
"D - 'Double_t' 0 - dxnew D - 'Double_t' 0 - rmatnew",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_137_0_4,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TNode::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_137_1_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNode::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_137_2_4,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TNode::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_137_3_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TNode::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_137_4_4,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_137_5_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_137_6_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_137_7_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_137_8_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNode::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_137_9_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNode::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_137_0_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNode::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_137_1_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNode::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TNode",474,G__G__G3D_137_2_5,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TNode),-1,0,1,1,1,0,"u 'TNode' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TNode",600,G__G__G3D_137_3_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_137_4_5,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TNode),-1,1,1,1,1,0,"u 'TNode' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTShape(void) {
   /* TShape */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TShape));
   G__memfunc_setup("FillBuffer3D",1112,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,2,8,
"u 'TBuffer3D' - 1 - buffer i - 'Int_t' 0 - reqSections",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBasicColor",1281,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,0,1,2,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ShapeDistancetoPrimitive",2488,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,3,1,2,0,
"i - 'Int_t' 0 - numPoints i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TShape",581,G__G__G3D_138_4_0,105,G__get_linked_tagnum(&G__G__G3DLN_TShape),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TShape",581,G__G__G3D_138_5_0,105,G__get_linked_tagnum(&G__G__G3DLN_TShape),-1,0,3,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBuffer3D",1009,G__G__G3D_138_6_0,117,G__get_linked_tagnum(&G__G__G3DLN_TBuffer3D),-1,1,1,1,1,9,"i - 'Int_t' 0 - reqSections",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetMaterial",1103,G__G__G3D_138_7_0,85,G__get_linked_tagnum(&G__G__G3DLN_TMaterial),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNumber",905,G__G__G3D_138_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetVisibility",1352,G__G__G3D_138_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Paint",508,G__G__G3D_138_0_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetName",685,G__G__G3D_138_1_1,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPoints",937,G__G__G3D_138_2_1,121,-1,-1,0,1,1,1,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetVisibility",1364,G__G__G3D_138_3_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - vis","*MENU*",(void*)NULL,1);
   G__memfunc_setup("TransformPoints",1593,G__G__G3D_138_4_1,121,-1,-1,0,2,1,1,8,
"D - 'Double_t' 0 - points h - 'UInt_t' 0 - NbPnts",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__G3D_138_5_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TShape::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_138_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TShape::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_138_7_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TShape::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_138_8_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TShape::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_138_9_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_138_0_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_138_1_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_138_2_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_138_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TShape::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_138_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TShape::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_138_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TShape::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_138_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TShape::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TShape",581,G__G__G3D_138_7_2,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TShape),-1,0,1,1,1,0,"u 'TShape' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TShape",707,G__G__G3D_138_8_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_138_9_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TShape),-1,1,1,1,1,0,"u 'TShape' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTBRIK(void) {
   /* TBRIK */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TBRIK));
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TBRIK",380,G__G__G3D_139_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TBRIK),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TBRIK",380,G__G__G3D_139_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TBRIK),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - dx "
"f - 'Float_t' 0 - dy f - 'Float_t' 0 - dz",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_139_4_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBuffer3D",1009,G__G__G3D_139_5_0,117,G__get_linked_tagnum(&G__G__G3DLN_TBuffer3D),-1,1,1,1,1,9,"i - 'Int_t' 0 - reqSections",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDx",476,G__G__G3D_139_6_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDy",477,G__G__G3D_139_7_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDz",478,G__G__G3D_139_8_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Sizeof3D",743,G__G__G3D_139_9_0,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_139_0_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TBRIK::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_139_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBRIK::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_139_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TBRIK::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_139_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TBRIK::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_139_4_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_139_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_139_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_139_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_139_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBRIK::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_139_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBRIK::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_139_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TBRIK::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_139_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TBRIK::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TBRIK",380,G__G__G3D_139_2_2,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TBRIK),-1,0,1,1,1,0,"u 'TBRIK' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TBRIK",506,G__G__G3D_139_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_139_4_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TBRIK),-1,1,1,1,1,0,"u 'TBRIK' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTRD2(void) {
   /* TTRD2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD2));
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TTRD2",368,G__G__G3D_140_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTRD2),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTRD2",368,G__G__G3D_140_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTRD2),-1,0,8,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - dx1 "
"f - 'Float_t' 0 - dx2 f - 'Float_t' 0 - dy1 "
"f - 'Float_t' 0 - dy2 f - 'Float_t' 0 - dz",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDx2",526,G__G__G3D_140_4_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDy2",527,G__G__G3D_140_5_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__G3D_140_6_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TTRD2::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_140_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTRD2::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_140_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TTRD2::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_140_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TTRD2::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_140_0_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_140_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_140_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_140_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_140_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTRD2::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_140_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTRD2::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_140_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTRD2::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_140_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTRD2::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TTRD2",368,G__G__G3D_140_8_1,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TTRD2),-1,0,1,1,1,0,"u 'TTRD2' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TTRD2",494,G__G__G3D_140_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_140_0_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TTRD2),-1,1,1,1,1,0,"u 'TTRD2' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMixture(void) {
   /* TMixture */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TMixture));
   G__memfunc_setup("TMixture",834,G__G__G3D_141_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_TMixture),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMixture",834,G__G__G3D_141_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TMixture),-1,0,3,1,1,0,
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 - nmixt",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DefineElement",1301,G__G__G3D_141_3_0,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n f - 'Float_t' 0 - a "
"f - 'Float_t' 0 - z f - 'Float_t' 0 - w",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNmixt",816,G__G__G3D_141_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAmixt",803,G__G__G3D_141_5_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetZmixt",828,G__G__G3D_141_6_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetWmixt",825,G__G__G3D_141_7_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__G3D_141_8_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMixture::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_141_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMixture::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_141_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMixture::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_141_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMixture::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_141_2_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_141_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_141_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_141_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_141_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMixture::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_141_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMixture::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_141_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMixture::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_141_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMixture::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMixture",834,G__G__G3D_141_0_2,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TMixture),-1,0,1,1,1,0,"u 'TMixture' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMixture",960,G__G__G3D_141_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_141_2_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TMixture),-1,1,1,1,1,0,"u 'TMixture' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTUBE(void) {
   /* TTUBE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBE));
   G__memfunc_setup("MakeTableOfCoSin",1527,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,8,"","Create the table of the fSiTab; fCoTab",(void*)NULL,1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetSegsAndPols",1391,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"u 'TBuffer3D' - 1 - buffer",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TTUBE",388,G__G__G3D_142_4_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTUBE),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTUBE",388,G__G__G3D_142_5_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTUBE),-1,0,7,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - rmin "
"f - 'Float_t' 0 - rmax f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 1 aspect",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTUBE",388,G__G__G3D_142_6_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTUBE),-1,0,5,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - rmax "
"f - 'Float_t' 0 - dz",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_142_7_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBuffer3D",1009,G__G__G3D_142_8_0,117,G__get_linked_tagnum(&G__G__G3DLN_TBuffer3D),-1,1,1,1,1,9,"i - 'Int_t' 0 - reqSections",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRmin",694,G__G__G3D_142_9_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRmax",696,G__G__G3D_142_0_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDz",478,G__G__G3D_142_1_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNdiv",689,G__G__G3D_142_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAspectRatio",1407,G__G__G3D_142_3_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumberOfDivisions",2038,G__G__G3D_142_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetNumberOfDivisions",2050,G__G__G3D_142_5_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - ndiv",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAspectRatio",1419,G__G__G3D_142_6_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 1 factor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sizeof3D",743,G__G__G3D_142_7_1,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_142_8_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TTUBE::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_142_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTUBE::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_142_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TTUBE::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_142_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TTUBE::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_142_2_2,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_142_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_142_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_142_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_142_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTUBE::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_142_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTUBE::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_142_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTUBE::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_142_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTUBE::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TTUBE",388,G__G__G3D_142_0_3,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TTUBE),-1,0,1,1,1,0,"u 'TTUBE' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TTUBE",514,G__G__G3D_142_1_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_142_2_3,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TTUBE),-1,1,1,1,1,0,"u 'TTUBE' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTUBS(void) {
   /* TTUBS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBS));
   G__memfunc_setup("MakeTableOfCoSin",1527,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,8,"","Create the table of the fSiTab; fCoTab",(void*)NULL,1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TTUBS",402,G__G__G3D_143_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTUBS),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTUBS",402,G__G__G3D_143_4_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTUBS),-1,0,8,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - rmin "
"f - 'Float_t' 0 - rmax f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 - phi1 f - 'Float_t' 0 - phi2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTUBS",402,G__G__G3D_143_5_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTUBS),-1,0,7,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - rmax "
"f - 'Float_t' 0 - dz f - 'Float_t' 0 - phi1 "
"f - 'Float_t' 0 - phi2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_143_6_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBuffer3D",1009,G__G__G3D_143_7_0,117,G__get_linked_tagnum(&G__G__G3DLN_TBuffer3D),-1,1,1,1,1,9,"i - 'Int_t' 0 - reqSections",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPhi1",626,G__G__G3D_143_8_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPhi2",627,G__G__G3D_143_9_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sizeof3D",743,G__G__G3D_143_0_1,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_143_1_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TTUBS::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_143_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTUBS::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_143_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TTUBS::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_143_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TTUBS::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_143_5_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_143_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_143_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_143_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_143_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTUBS::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_143_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTUBS::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_143_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTUBS::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_143_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTUBS::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TTUBS",402,G__G__G3D_143_3_2,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TTUBS),-1,0,1,1,1,0,"u 'TTUBS' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TTUBS",528,G__G__G3D_143_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_143_5_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TTUBS),-1,1,1,1,1,0,"u 'TTUBS' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCONS(void) {
   /* TCONS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONS));
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TCONS",391,G__G__G3D_144_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TCONS),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCONS",391,G__G__G3D_144_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TCONS),-1,0,10,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 - rmin1 f - 'Float_t' 0 - rmax1 "
"f - 'Float_t' 0 - rmin2 f - 'Float_t' 0 - rmax2 "
"f - 'Float_t' 0 - phi1 f - 'Float_t' 0 - phi2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCONS",391,G__G__G3D_144_4_0,105,G__get_linked_tagnum(&G__G__G3DLN_TCONS),-1,0,8,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - rmax1 "
"f - 'Float_t' 0 - dz f - 'Float_t' 0 - phi1 "
"f - 'Float_t' 0 - phi2 f - 'Float_t' 0 0 rmax2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRmin2",744,G__G__G3D_144_5_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRmax2",746,G__G__G3D_144_6_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_144_7_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCONS::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_144_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCONS::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_144_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCONS::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_144_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCONS::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_144_1_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_144_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_144_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_144_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_144_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCONS::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_144_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCONS::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_144_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCONS::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_144_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCONS::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TCONS",391,G__G__G3D_144_9_1,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TCONS),-1,0,1,1,1,0,"u 'TCONS' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TCONS",517,G__G__G3D_144_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_144_1_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TCONS),-1,1,1,1,1,0,"u 'TCONS' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTRAP(void) {
   /* TTRAP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRAP));
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TTRAP",395,G__G__G3D_145_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTRAP),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTRAP",395,G__G__G3D_145_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTRAP),-1,0,14,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 - theta f - 'Float_t' 0 - phi "
"f - 'Float_t' 0 - h1 f - 'Float_t' 0 - bl1 "
"f - 'Float_t' 0 - tl1 f - 'Float_t' 0 - alpha1 "
"f - 'Float_t' 0 - h2 f - 'Float_t' 0 - bl2 "
"f - 'Float_t' 0 - tl2 f - 'Float_t' 0 - alpha2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetH1",409,G__G__G3D_145_4_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBl1",511,G__G__G3D_145_5_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTl1",529,G__G__G3D_145_6_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAlpha1",823,G__G__G3D_145_7_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetH2",410,G__G__G3D_145_8_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBl2",512,G__G__G3D_145_9_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTl2",530,G__G__G3D_145_0_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAlpha2",824,G__G__G3D_145_1_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_145_2_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TTRAP::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_145_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTRAP::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_145_4_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TTRAP::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_145_5_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TTRAP::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_145_6_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_145_7_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_145_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_145_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_145_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTRAP::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_145_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTRAP::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_145_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTRAP::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_145_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTRAP::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TTRAP",395,G__G__G3D_145_4_2,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TTRAP),-1,0,1,1,1,0,"u 'TTRAP' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TTRAP",521,G__G__G3D_145_5_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_145_6_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TTRAP),-1,1,1,1,1,0,"u 'TTRAP' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPolyLine3D(void) {
   /* TPolyLine3D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D));
   G__memfunc_setup("TPolyLine3D",1015,G__G__G3D_146_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPolyLine3D",1015,G__G__G3D_146_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),-1,0,2,1,1,0,
"i - 'Int_t' 0 - n C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPolyLine3D",1015,G__G__G3D_146_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - p "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPolyLine3D",1015,G__G__G3D_146_4_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),-1,0,3,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - p "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPolyLine3D",1015,G__G__G3D_146_5_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),-1,0,5,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - x "
"F - 'Float_t' 0 - y F - 'Float_t' 0 - z "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPolyLine3D",1015,G__G__G3D_146_6_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),-1,0,5,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - y D - 'Double_t' 0 - z "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPolyLine3D",1015,G__G__G3D_146_7_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),-1,0,1,1,1,0,"u 'TPolyLine3D' - 11 - polylin",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Copy",411,G__G__G3D_146_8_0,121,-1,-1,0,1,1,1,8,"u 'TObject' - 1 - polyline",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_146_9_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__G3D_146_0_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPolyLine",1210,G__G__G3D_146_1_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - p "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteEvent",1237,G__G__G3D_146_2_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLastPoint",1214,G__G__G3D_146_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetN",366,G__G__G3D_146_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetP",368,G__G__G3D_146_5_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetOption",921,G__G__G3D_146_6_1,67,-1,G__defined_typename("Option_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ls",223,G__G__G3D_146_7_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Merge",496,G__G__G3D_146_8_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TCollection' - 0 - list",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__G3D_146_9_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__G3D_146_0_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__G3D_146_1_2,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetNextPoint",1237,G__G__G3D_146_2_2,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetOption",933,G__G__G3D_146_3_2,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPoint",822,G__G__G3D_146_4_2,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - point d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetPolyLine",1112,G__G__G3D_146_5_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - n C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPolyLine",1112,G__G__G3D_146_6_2,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - p "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPolyLine",1112,G__G__G3D_146_7_2,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - p "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Size",411,G__G__G3D_146_8_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawOutlineCube",1517,G__G__G3D_146_9_2,121,-1,-1,0,3,3,1,0,
"U 'TList' - 0 - outline D - 'Double_t' 0 - rmin "
"D - 'Double_t' 0 - rmax",(char*)NULL,(void*)(void (*)(TList*,Double_t*,Double_t*))(&TPolyLine3D::DrawOutlineCube),0);
   G__memfunc_setup("Class",502,G__G__G3D_146_0_3,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPolyLine3D::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_146_1_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPolyLine3D::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_146_2_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPolyLine3D::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_146_3_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPolyLine3D::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_146_4_3,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_146_5_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_146_6_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_146_7_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_146_8_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPolyLine3D::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_146_9_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPolyLine3D::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_146_0_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPolyLine3D::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_146_1_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPolyLine3D::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TPolyLine3D",1141,G__G__G3D_146_2_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_146_3_4,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),-1,1,1,1,1,0,"u 'TPolyLine3D' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRotMatrix(void) {
   /* TRotMatrix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix));
   G__memfunc_setup("SetReflection",1335,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"","Set the \"reflection\" flag if det < 0",(void*)NULL,1);
   G__memfunc_setup("TRotMatrix",1022,G__G__G3D_148_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TRotMatrix",1022,G__G__G3D_148_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,0,3,1,1,0,
"C - - 10 - name C - - 10 - title "
"D - 'Double_t' 0 - matrix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TRotMatrix",1022,G__G__G3D_148_4_0,105,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,0,5,1,1,0,
"C - - 10 - name C - - 10 - title "
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - phi "
"d - 'Double_t' 0 - psi",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TRotMatrix",1022,G__G__G3D_148_5_0,105,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,0,8,1,1,0,
"C - - 10 - name C - - 10 - title "
"d - 'Double_t' 0 - theta1 d - 'Double_t' 0 - phi1 "
"d - 'Double_t' 0 - theta2 d - 'Double_t' 0 - phi2 "
"d - 'Double_t' 0 - theta3 d - 'Double_t' 0 - phi3",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Determinant",1147,G__G__G3D_148_6_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"","returns the determinant of this matrix",(void*)NULL,1);
   G__memfunc_setup("GetMatrix",917,G__G__G3D_148_7_0,68,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumber",905,G__G__G3D_148_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetType",706,G__G__G3D_148_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTheta",790,G__G__G3D_148_0_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPhi",577,G__G__G3D_148_1_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPsi",588,G__G__G3D_148_2_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetGLMatrix",1064,G__G__G3D_148_3_1,68,-1,G__defined_typename("Double_t"),0,1,1,1,8,"D - 'Double_t' 0 - rGLMatrix","Convert this matrix to the OpenGL [4x4]",(void*)NULL,1);
   G__memfunc_setup("IsReflection",1223,G__G__G3D_148_4_1,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"","Return kTRUE if this matrix defines the reflection",(void*)NULL,1);
   G__memfunc_setup("SetAngles",902,G__G__G3D_148_5_1,68,-1,G__defined_typename("Double_t"),0,6,1,1,1,
"d - 'Double_t' 0 - theta1 d - 'Double_t' 0 - phi1 "
"d - 'Double_t' 0 - theta2 d - 'Double_t' 0 - phi2 "
"d - 'Double_t' 0 - theta3 d - 'Double_t' 0 - phi3",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrix",929,G__G__G3D_148_6_1,121,-1,-1,0,1,1,1,0,"D - 'Double_t' 10 - matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetName",685,G__G__G3D_148_7_1,121,-1,-1,0,1,1,1,0,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_148_8_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TRotMatrix::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_148_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TRotMatrix::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_148_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TRotMatrix::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_148_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TRotMatrix::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_148_2_2,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_148_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_148_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_148_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_148_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TRotMatrix::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_148_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TRotMatrix::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_148_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TRotMatrix::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_148_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TRotMatrix::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TRotMatrix",1022,G__G__G3D_148_0_3,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,0,1,1,1,0,"u 'TRotMatrix' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TRotMatrix",1148,G__G__G3D_148_1_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_148_2_3,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,1,1,1,1,0,"u 'TRotMatrix' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHelix(void) {
   /* THelix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_THelix));
   G__memfunc_setup("SetRotMatrix",1238,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"","Set rotation matrix",(void*)NULL,0);
   G__memfunc_setup("FindClosestPhase",1615,(G__InterfaceMethod)NULL,100,-1,G__defined_typename("Double_t"),0,2,1,2,0,
"d - 'Double_t' 0 - phi0 d - 'Double_t' 0 - cosine",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THelix",590,G__G__G3D_150_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_THelix),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THelix",590,G__G__G3D_150_4_0,105,G__get_linked_tagnum(&G__G__G3DLN_THelix),-1,0,7,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - vx "
"d - 'Double_t' 0 - vy d - 'Double_t' 0 - vz "
"d - 'Double_t' 0 - w",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THelix",590,G__G__G3D_150_5_0,105,G__get_linked_tagnum(&G__G__G3DLN_THelix),-1,0,6,1,1,0,
"D - 'Double_t' 0 - xyz D - 'Double_t' 0 - v "
"d - 'Double_t' 0 - w D - 'Double_t' 0 0 range "
"i 'EHelixRangeType' - 0 kHelixZ rtype D - 'Double_t' 0 0 axis",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THelix",590,G__G__G3D_150_6_0,105,G__get_linked_tagnum(&G__G__G3DLN_THelix),-1,0,1,1,1,0,"u 'THelix' - 11 - helix",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Copy",411,G__G__G3D_150_7_0,121,-1,-1,0,1,1,1,8,"u 'TObject' - 1 - helix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__G3D_150_8_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOption",921,G__G__G3D_150_9_0,67,-1,G__defined_typename("Option_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__G3D_150_0_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__G3D_150_1_1,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetOption",933,G__G__G3D_150_2_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAxis",705,G__G__G3D_150_3_1,121,-1,-1,0,1,1,1,0,"D - 'Double_t' 0 - axis","Define new axis",(void*)NULL,1);
   G__memfunc_setup("SetAxis",705,G__G__G3D_150_4_1,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRange",793,G__G__G3D_150_5_1,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - range i 'EHelixRangeType' - 0 kHelixZ rtype",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRange",793,G__G__G3D_150_6_1,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - r1 d - 'Double_t' 0 - r2 "
"i 'EHelixRangeType' - 0 kHelixZ rtype",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetHelix",806,G__G__G3D_150_7_1,121,-1,-1,0,6,1,1,0,
"D - 'Double_t' 0 - xyz D - 'Double_t' 0 - v "
"d - 'Double_t' 0 - w D - 'Double_t' 0 0 range "
"i 'EHelixRangeType' - 0 kUnchanged type D - 'Double_t' 0 0 axis",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__G3D_150_8_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&THelix::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_150_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THelix::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_150_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&THelix::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_150_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&THelix::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_150_2_2,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_150_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_150_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_150_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_150_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THelix::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_150_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THelix::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_150_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THelix::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_150_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THelix::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~THelix",716,G__G__G3D_150_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_150_1_3,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_THelix),-1,1,1,1,1,0,"u 'THelix' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPCON(void) {
   /* TPCON */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TPCON));
   G__memfunc_setup("MakeTableOfCoSin",1527,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,8,"","Create the table of the fSiTab; fCoTab",(void*)NULL,1);
   G__memfunc_setup("FillTableOfCoSin",1536,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,8,
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - angstep "
"i - 'Int_t' 0 - n","Fill the table of cosin",(void*)NULL,1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetSegsAndPols",1391,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,1,1,2,8,"u 'TBuffer3D' - 1 - buffer",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TPCON",388,G__G__G3D_151_5_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPCON),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPCON",388,G__G__G3D_151_6_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPCON),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - phi1 "
"f - 'Float_t' 0 - dphi1 i - 'Int_t' 0 - nz",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DefineSection",1312,G__G__G3D_151_7_0,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - secNum f - 'Float_t' 0 - z "
"f - 'Float_t' 0 - rmin f - 'Float_t' 0 - rmax",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_151_8_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBuffer3D",1009,G__G__G3D_151_9_0,117,G__get_linked_tagnum(&G__G__G3DLN_TBuffer3D),-1,1,1,1,1,9,"i - 'Int_t' 0 - reqSections",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumberOfDivisions",2038,G__G__G3D_151_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPhi1",626,G__G__G3D_151_1_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDhi1",614,G__G__G3D_151_2_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNz",488,G__G__G3D_151_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRmin",694,G__G__G3D_151_4_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRmax",696,G__G__G3D_151_5_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetDz",478,G__G__G3D_151_6_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNdiv",689,G__G__G3D_151_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetNumberOfDivisions",2050,G__G__G3D_151_8_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - p",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sizeof3D",743,G__G__G3D_151_9_1,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_151_0_2,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPCON::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_151_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPCON::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_151_2_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPCON::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_151_3_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPCON::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_151_4_2,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_151_5_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_151_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_151_7_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_151_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPCON::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_151_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPCON::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_151_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPCON::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_151_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPCON::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TPCON",388,G__G__G3D_151_2_3,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TPCON),-1,0,1,1,1,0,"u 'TPCON' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TPCON",514,G__G__G3D_151_3_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_151_4_3,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TPCON),-1,1,1,1,1,0,"u 'TPCON' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPGON(void) {
   /* TPGON */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TPGON));
   G__memfunc_setup("FillTableOfCoSin",1536,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,2,8,
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - angstep "
"i - 'Int_t' 0 - n","Fill the table of cosin",(void*)NULL,1);
   G__memfunc_setup("TPGON",392,G__G__G3D_152_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPGON),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPGON",392,G__G__G3D_152_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPGON),-1,0,7,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - phi1 "
"f - 'Float_t' 0 - dphi1 i - 'Int_t' 0 - npdv "
"i - 'Int_t' 0 - nz",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__G3D_152_4_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPGON::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_152_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPGON::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_152_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPGON::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_152_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPGON::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_152_8_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_152_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_152_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_152_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_152_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPGON::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_152_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPGON::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_152_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPGON::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_152_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPGON::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TPGON",392,G__G__G3D_152_6_1,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TPGON),-1,0,1,1,1,0,"u 'TPGON' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TPGON",518,G__G__G3D_152_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_152_8_1,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TPGON),-1,1,1,1,1,0,"u 'TPGON' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSPHE(void) {
   /* TSPHE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TSPHE));
   G__memfunc_setup("MakeTableOfCoSin",1527,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,8,"","Create the table of the fSiTab; fCoTab",(void*)NULL,1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TSPHE",388,G__G__G3D_153_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TSPHE),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSPHE",388,G__G__G3D_153_4_0,105,G__get_linked_tagnum(&G__G__G3DLN_TSPHE),-1,0,9,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - rmin "
"f - 'Float_t' 0 - rmax f - 'Float_t' 0 - themin "
"f - 'Float_t' 0 - themax f - 'Float_t' 0 - phimin "
"f - 'Float_t' 0 - phimax",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TSPHE",388,G__G__G3D_153_5_0,105,G__get_linked_tagnum(&G__G__G3DLN_TSPHE),-1,0,4,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - rmax",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_153_6_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBuffer3D",1009,G__G__G3D_153_7_0,117,G__get_linked_tagnum(&G__G__G3DLN_TBuffer3D),-1,1,1,1,1,9,"i - 'Int_t' 0 - reqSections",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRmin",694,G__G__G3D_153_8_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRmax",696,G__G__G3D_153_9_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetThemin",901,G__G__G3D_153_0_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetThemax",903,G__G__G3D_153_1_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPhimin",901,G__G__G3D_153_2_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPhimax",903,G__G__G3D_153_3_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAspectRatio",1407,G__G__G3D_153_4_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNumberOfDivisions",2038,G__G__G3D_153_5_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAspectRatio",1419,G__G__G3D_153_6_1,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 1.0 factor",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetEllipse",1018,G__G__G3D_153_7_1,121,-1,-1,0,1,1,1,0,"F - 'Float_t' 10 - factors",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetNumberOfDivisions",2050,G__G__G3D_153_8_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - p",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sizeof3D",743,G__G__G3D_153_9_1,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_153_0_2,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TSPHE::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_153_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSPHE::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_153_2_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TSPHE::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_153_3_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TSPHE::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_153_4_2,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_153_5_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_153_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_153_7_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_153_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSPHE::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_153_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSPHE::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_153_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TSPHE::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_153_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TSPHE::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TSPHE",388,G__G__G3D_153_2_3,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TSPHE),-1,0,1,1,1,0,"u 'TSPHE' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TSPHE",514,G__G__G3D_153_3_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_153_4_3,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TSPHE),-1,1,1,1,1,0,"u 'TSPHE' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPoints3DABC(void) {
   /* TPoints3DABC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TPoints3DABC));
   G__memfunc_setup("DistancetoLine",1430,G__G__G3D_154_2_0,105,-1,G__defined_typename("Int_t"),0,7,3,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py "
"f - 'Float_t' 0 - x1 f - 'Float_t' 0 - y1 "
"f - 'Float_t' 0 - x2 f - 'Float_t' 0 - y2 "
"i - 'Int_t' 0 1 lineWidth",(char*)NULL,(void*)(Int_t (*)(Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Int_t))(&TPoints3DABC::DistancetoLine),0);
   G__memfunc_setup("Add",265,G__G__G3D_154_3_0,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("AddLast",669,G__G__G3D_154_4_0,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_154_5_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetLastPosition",1545,G__G__G3D_154_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetN",366,G__G__G3D_154_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetP",368,G__G__G3D_154_8_0,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetX",376,G__G__G3D_154_9_0,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetY",377,G__G__G3D_154_0_1,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetZ",378,G__G__G3D_154_1_1,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetXYZ",555,G__G__G3D_154_2_1,70,-1,G__defined_typename("Float_t"),0,3,1,1,8,
"F - 'Float_t' 0 - xyz i - 'Int_t' 0 - idx "
"i - 'Int_t' 0 1 num",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetXYZ",555,G__G__G3D_154_3_1,70,-1,G__defined_typename("Float_t"),0,1,1,1,1,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("GetOption",921,G__G__G3D_154_4_1,67,-1,G__defined_typename("Option_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("PaintPoints",1145,G__G__G3D_154_5_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - p "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetLastPosition",1557,G__G__G3D_154_6_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetNextPoint",1237,G__G__G3D_154_7_1,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetOption",933,G__G__G3D_154_8_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetPoint",822,G__G__G3D_154_9_1,105,-1,G__defined_typename("Int_t"),0,4,1,1,0,
"i - 'Int_t' 0 - point f - 'Float_t' 0 - x "
"f - 'Float_t' 0 - y f - 'Float_t' 0 - z",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("SetPoints",937,G__G__G3D_154_0_2,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 0 p "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Size",411,G__G__G3D_154_1_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,3);
   G__memfunc_setup("Class",502,G__G__G3D_154_2_2,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPoints3DABC::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_154_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPoints3DABC::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_154_4_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPoints3DABC::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_154_5_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPoints3DABC::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_154_6_2,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_154_7_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_154_8_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_154_9_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_154_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPoints3DABC::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_154_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPoints3DABC::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_154_2_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPoints3DABC::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_154_3_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPoints3DABC::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TPoints3DABC",1164,G__G__G3D_154_4_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_154_5_3,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TPoints3DABC),-1,1,1,1,1,0,"u 'TPoints3DABC' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGTRA(void) {
   /* TGTRA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TGTRA));
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TGTRA",386,G__G__G3D_155_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TGTRA),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGTRA",386,G__G__G3D_155_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TGTRA),-1,0,15,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 - theta f - 'Float_t' 0 - phi "
"f - 'Float_t' 0 - twist f - 'Float_t' 0 - h1 "
"f - 'Float_t' 0 - bl1 f - 'Float_t' 0 - tl1 "
"f - 'Float_t' 0 - alpha1 f - 'Float_t' 0 - h2 "
"f - 'Float_t' 0 - bl2 f - 'Float_t' 0 - tl2 "
"f - 'Float_t' 0 - alpha2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTwist",827,G__G__G3D_155_4_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetH1",409,G__G__G3D_155_5_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBl1",511,G__G__G3D_155_6_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTl1",529,G__G__G3D_155_7_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAlpha1",823,G__G__G3D_155_8_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetH2",410,G__G__G3D_155_9_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetBl2",512,G__G__G3D_155_0_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTl2",530,G__G__G3D_155_1_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAlpha2",824,G__G__G3D_155_2_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__G3D_155_3_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGTRA::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_155_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGTRA::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_155_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGTRA::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_155_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGTRA::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_155_7_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_155_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_155_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_155_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_155_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGTRA::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_155_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGTRA::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_155_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGTRA::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_155_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGTRA::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGTRA",386,G__G__G3D_155_5_2,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TGTRA),-1,0,1,1,1,0,"u 'TGTRA' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGTRA",512,G__G__G3D_155_6_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_155_7_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TGTRA),-1,1,1,1,1,0,"u 'TGTRA' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMarker3DBox(void) {
   /* TMarker3DBox */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox));
   G__memfunc_setup("TMarker3DBox",1110,G__G__G3D_157_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TMarker3DBox",1110,G__G__G3D_157_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox),-1,0,8,1,1,0,
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z f - 'Float_t' 0 - dx "
"f - 'Float_t' 0 - dy f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 - theta f - 'Float_t' 0 - phi",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_157_3_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteEvent",1237,G__G__G3D_157_4_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetRefObject",1172,G__G__G3D_157_5_0,85,G__get_linked_tagnum(&G__G__G3DLN_TObject),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDirection",1217,G__G__G3D_157_6_0,121,-1,-1,0,2,1,1,8,
"f - 'Float_t' 1 - theta f - 'Float_t' 1 - phi",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPosition",1141,G__G__G3D_157_7_0,121,-1,-1,0,3,1,1,8,
"f - 'Float_t' 1 - x f - 'Float_t' 1 - y "
"f - 'Float_t' 1 - z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSize",699,G__G__G3D_157_8_0,121,-1,-1,0,3,1,1,8,
"f - 'Float_t' 1 - dx f - 'Float_t' 1 - dy "
"f - 'Float_t' 1 - dz",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__G3D_157_9_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintH3",631,G__G__G3D_157_0_1,121,-1,-1,0,2,3,1,0,
"U 'TH1' - 0 - h C - 'Option_t' 10 - option",(char*)NULL,(void*)(void (*)(TH1*,Option_t*))(&TMarker3DBox::PaintH3),0);
   G__memfunc_setup("SavePrimitive",1352,G__G__G3D_157_1_1,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPoints",937,G__G__G3D_157_2_1,121,-1,-1,0,1,1,1,8,"D - 'Double_t' 0 - buff",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetDirection",1229,G__G__G3D_157_3_1,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 - theta f - 'Float_t' 0 - phi",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPosition",1153,G__G__G3D_157_4_1,121,-1,-1,0,3,1,1,0,
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetSize",711,G__G__G3D_157_5_1,121,-1,-1,0,3,1,1,0,
"f - 'Float_t' 0 - dx f - 'Float_t' 0 - dy "
"f - 'Float_t' 0 - dz",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetRefObject",1184,G__G__G3D_157_6_1,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 0 obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_157_7_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TMarker3DBox::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_157_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMarker3DBox::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_157_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TMarker3DBox::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_157_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TMarker3DBox::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_157_1_2,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_157_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_157_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_157_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_157_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMarker3DBox::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_157_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMarker3DBox::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_157_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TMarker3DBox::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_157_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TMarker3DBox::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TMarker3DBox",1110,G__G__G3D_157_9_2,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox),-1,0,1,1,1,0,"u 'TMarker3DBox' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TMarker3DBox",1236,G__G__G3D_157_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_157_1_3,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox),-1,1,1,1,1,0,"u 'TMarker3DBox' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCONE(void) {
   /* TCONE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONE));
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TCONE",377,G__G__G3D_158_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TCONE),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCONE",377,G__G__G3D_158_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TCONE),-1,0,8,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 - rmin1 f - 'Float_t' 0 - rmax1 "
"f - 'Float_t' 0 - rmin2 f - 'Float_t' 0 - rmax2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCONE",377,G__G__G3D_158_4_0,105,G__get_linked_tagnum(&G__G__G3DLN_TCONE),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 - rmax1 f - 'Float_t' 0 0 rmax2",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRmin2",744,G__G__G3D_158_5_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRmax2",746,G__G__G3D_158_6_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__G3D_158_7_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCONE::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_158_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCONE::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_158_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCONE::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_158_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCONE::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_158_1_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_158_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_158_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_158_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_158_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCONE::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_158_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCONE::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_158_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCONE::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_158_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCONE::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TCONE",377,G__G__G3D_158_9_1,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TCONE),-1,0,1,1,1,0,"u 'TCONE' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TCONE",503,G__G__G3D_158_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_158_1_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TCONE),-1,1,1,1,1,0,"u 'TCONE' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHYPE(void) {
   /* THYPE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_THYPE));
   G__memfunc_setup("THYPE",394,G__G__G3D_159_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_THYPE),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("THYPE",394,G__G__G3D_159_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_THYPE),-1,0,7,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - rmin "
"f - 'Float_t' 0 - rmax f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 - phi",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPhi",577,G__G__G3D_159_3_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_159_4_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&THYPE::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_159_5_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THYPE::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_159_6_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&THYPE::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_159_7_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&THYPE::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_159_8_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_159_9_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_159_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_159_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_159_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THYPE::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_159_3_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THYPE::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_159_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&THYPE::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_159_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&THYPE::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("THYPE",394,G__G__G3D_159_6_1,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_THYPE),-1,0,1,1,1,0,"u 'THYPE' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~THYPE",520,G__G__G3D_159_7_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_159_8_1,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_THYPE),-1,1,1,1,1,0,"u 'THYPE' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTUtil3D(void) {
   /* TUtil3D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TUtil3D));
   G__memfunc_setup("TUtil3D",617,G__G__G3D_161_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_TUtil3D),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DrawOutlineCube",1517,G__G__G3D_161_2_0,121,-1,-1,0,3,1,1,0,
"U 'TList' - 0 - outline D - 'Double_t' 0 - rmin "
"D - 'Double_t' 0 - rmax",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ToggleRulers",1247,G__G__G3D_161_3_0,121,-1,-1,0,1,1,1,0,"U 'TVirtualPad' - 0 - pad",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ToggleZoom",1031,G__G__G3D_161_4_0,121,-1,-1,0,1,1,1,0,"U 'TVirtualPad' - 0 - pad",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_161_5_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TUtil3D::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_161_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TUtil3D::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_161_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TUtil3D::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_161_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TUtil3D::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_161_9_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_161_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_161_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_161_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_161_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TUtil3D::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_161_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TUtil3D::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_161_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TUtil3D::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_161_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TUtil3D::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TUtil3D",617,G__G__G3D_161_7_1,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TUtil3D),-1,0,1,1,1,0,"u 'TUtil3D' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TUtil3D",743,G__G__G3D_161_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_161_9_1,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TUtil3D),-1,1,1,1,1,0,"u 'TUtil3D' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXTRU(void) {
   /* TXTRU */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TXTRU));
   G__memfunc_setup("TXTRU",423,G__G__G3D_162_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_TXTRU),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TXTRU",423,G__G__G3D_162_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TXTRU),-1,0,5,1,1,0,
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title "
"C - 'Text_t' 10 - material i - 'Int_t' 0 - nyx "
"i - 'Int_t' 0 - nz",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TXTRU",423,G__G__G3D_162_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TXTRU),-1,0,1,1,1,0,"u 'TXTRU' - 11 - xtru",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("operator=",937,G__G__G3D_162_4_0,117,G__get_linked_tagnum(&G__G__G3DLN_TXTRU),-1,1,1,1,1,0,"u 'TXTRU' - 11 - rhs",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Copy",411,G__G__G3D_162_5_0,121,-1,-1,0,1,1,1,8,"u 'TObject' - 1 - xtru",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DefineSection",1312,G__G__G3D_162_6_0,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 - secNum f - 'Float_t' 0 - z "
"f - 'Float_t' 0 1. scale f - 'Float_t' 0 0. x0 "
"f - 'Float_t' 0 0. y0",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DefineVertex",1225,G__G__G3D_162_7_0,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - pointNum f - 'Float_t' 0 - x "
"f - 'Float_t' 0 - y",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_162_8_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBuffer3D",1009,G__G__G3D_162_9_0,117,G__get_linked_tagnum(&G__G__G3DLN_TBuffer3D),-1,1,1,1,1,9,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNxy",607,G__G__G3D_162_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNz",488,G__G__G3D_162_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOutlinePointX",1634,G__G__G3D_162_2_1,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"i - 'Int_t' 0 - pointNum",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOutlinePointY",1635,G__G__G3D_162_3_1,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"i - 'Int_t' 0 - pointNum",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSectionX0",1149,G__G__G3D_162_4_1,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"i - 'Int_t' 0 - secNum",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSectionY0",1150,G__G__G3D_162_5_1,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"i - 'Int_t' 0 - secNum",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSectionScale",1501,G__G__G3D_162_6_1,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"i - 'Int_t' 0 - secNum",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetSectionZ",1103,G__G__G3D_162_7_1,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"i - 'Int_t' 0 - secNum",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetXvtx",730,G__G__G3D_162_8_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetYvtx",731,G__G__G3D_162_9_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetZ",378,G__G__G3D_162_0_2,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetScale",776,G__G__G3D_162_1_2,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetX0",424,G__G__G3D_162_2_2,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetY0",425,G__G__G3D_162_3_2,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__G3D_162_4_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Sizeof3D",743,G__G__G3D_162_5_2,121,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SplitConcavePolygon",1971,G__G__G3D_162_6_2,121,-1,-1,0,1,1,1,0,"g - 'Bool_t' 0 kTRUE split",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TruncateNxy",1157,G__G__G3D_162_7_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - npts",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TruncateNz",1038,G__G__G3D_162_8_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - npts",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("CheckOrdering",1304,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DumpPoints",1043,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,8,
"i - - 0 - npoints F - - 0 - pointbuff",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DumpSegments",1244,(G__InterfaceMethod)NULL,121,-1,-1,0,2,1,4,8,
"i - - 0 - nsegments I - - 0 - segbuff",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DumpPolygons",1265,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,4,8,
"i - - 0 - npolygons I - - 0 - polybuff "
"i - - 0 - buffsize",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__G3D_162_4_3,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TXTRU::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_162_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXTRU::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_162_6_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TXTRU::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_162_7_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TXTRU::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_162_8_3,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_162_9_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_162_0_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_162_1_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_162_2_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXTRU::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_162_3_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXTRU::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_162_4_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TXTRU::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_162_5_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TXTRU::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TXTRU",549,G__G__G3D_162_6_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTRD1(void) {
   /* TTRD1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD1));
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TTRD1",367,G__G__G3D_165_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTRD1),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TTRD1",367,G__G__G3D_165_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TTRD1),-1,0,7,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - dx1 "
"f - 'Float_t' 0 - dx2 f - 'Float_t' 0 - dy "
"f - 'Float_t' 0 - dz",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDx2",526,G__G__G3D_165_4_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_165_5_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TTRD1::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_165_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTRD1::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_165_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TTRD1::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_165_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TTRD1::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_165_9_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_165_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_165_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_165_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_165_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTRD1::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_165_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTRD1::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_165_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TTRD1::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_165_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TTRD1::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TTRD1",367,G__G__G3D_165_7_1,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TTRD1),-1,0,1,1,1,0,"u 'TTRD1' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TTRD1",493,G__G__G3D_165_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_165_9_1,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TTRD1),-1,1,1,1,1,0,"u 'TTRD1' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTELTU(void) {
   /* TELTU */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TELTU));
   G__memfunc_setup("TELTU",398,G__G__G3D_166_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_TELTU),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TELTU",398,G__G__G3D_166_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TELTU),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - rx "
"f - 'Float_t' 0 - ry f - 'Float_t' 0 - dz",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__G3D_166_3_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TELTU::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_166_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TELTU::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_166_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TELTU::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_166_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TELTU::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_166_7_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_166_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_166_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_166_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_166_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TELTU::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_166_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TELTU::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_166_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TELTU::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_166_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TELTU::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TELTU",398,G__G__G3D_166_5_1,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TELTU),-1,0,1,1,1,0,"u 'TELTU' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TELTU",524,G__G__G3D_166_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_166_7_1,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TELTU),-1,1,1,1,1,0,"u 'TELTU' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAxis3D(void) {
   /* TAxis3D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TAxis3D));
   G__memfunc_setup("AxisChoice",992,(G__InterfaceMethod)NULL,105,-1,G__defined_typename("Int_t"),0,1,1,4,8,"C - 'Option_t' 10 - axis",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Build",496,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"u 'TObject' - 1 - hnew",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("InitSet",704,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SwitchZoom",1047,(G__InterfaceMethod)NULL,103,-1,G__defined_typename("Bool_t"),0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TAxis3D",608,G__G__G3D_177_6_0,105,G__get_linked_tagnum(&G__G__G3DLN_TAxis3D),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TAxis3D",608,G__G__G3D_177_7_0,105,G__get_linked_tagnum(&G__G__G3DLN_TAxis3D),-1,0,1,1,1,0,"C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TAxis3D",608,G__G__G3D_177_8_0,105,G__get_linked_tagnum(&G__G__G3DLN_TAxis3D),-1,0,1,1,1,0,"u 'TAxis3D' - 11 - axis",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Browse",626,G__G__G3D_177_9_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_177_0_1,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteEvent",1237,G__G__G3D_177_1_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StickyZoom",1052,G__G__G3D_177_2_1,103,-1,G__defined_typename("Bool_t"),1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Zoom",421,G__G__G3D_177_3_1,103,-1,G__defined_typename("Bool_t"),1,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNdivisions",1350,G__G__G3D_177_4_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"C - 'Option_t' 10 \"X\" axis",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetAxisColor",1204,G__G__G3D_177_5_1,115,-1,G__defined_typename("Color_t"),0,1,1,1,8,"C - 'Option_t' 10 \"X\" axis",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLabelColor",1279,G__G__G3D_177_6_1,115,-1,G__defined_typename("Color_t"),0,1,1,1,8,"C - 'Option_t' 10 \"X\" axis",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLabelFont",1175,G__G__G3D_177_7_1,115,-1,G__defined_typename("Style_t"),0,1,1,1,8,"C - 'Option_t' 10 \"X\" axis",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLabelOffset",1383,G__G__G3D_177_8_1,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"C - 'Option_t' 10 \"X\" axis",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLabelSize",1179,G__G__G3D_177_9_1,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"C - 'Option_t' 10 \"X\" axis",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPadAxis",970,G__G__G3D_177_0_2,85,G__get_linked_tagnum(&G__G__G3DLN_TAxis3D),-1,0,1,3,1,0,"U 'TVirtualPad' - 0 0 pad",(char*)NULL,(void*)(TAxis3D* (*)(TVirtualPad*))(&TAxis3D::GetPadAxis),0);
   G__memfunc_setup("GetTitleOffset",1417,G__G__G3D_177_1_2,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"C - 'Option_t' 10 \"X\" axis",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTickLength",1293,G__G__G3D_177_2_2,102,-1,G__defined_typename("Float_t"),0,1,1,1,8,"C - 'Option_t' 10 \"X\" axis",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetCenter",897,G__G__G3D_177_3_2,121,-1,-1,0,1,1,1,0,"D - 'Axis_t' 0 - center",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLowEdge",967,G__G__G3D_177_4_2,121,-1,-1,0,1,1,1,0,"D - 'Axis_t' 0 - edge",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetObjectInfo",1283,G__G__G3D_177_5_2,67,-1,-1,0,2,1,1,8,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOption",921,G__G__G3D_177_6_2,67,-1,G__defined_typename("Option_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetXaxis",813,G__G__G3D_177_7_2,85,G__get_linked_tagnum(&G__G__G3DLN_TAxis),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetYaxis",814,G__G__G3D_177_8_2,85,G__get_linked_tagnum(&G__G__G3DLN_TAxis),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetZaxis",815,G__G__G3D_177_9_2,85,G__get_linked_tagnum(&G__G__G3DLN_TAxis),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsFolder",792,G__G__G3D_177_0_3,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__G3D_177_1_3,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintAxis",913,G__G__G3D_177_2_3,121,-1,-1,0,2,1,1,0,
"U 'TGaxis' - 0 - axis f - 'Float_t' 0 - ang",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PixeltoXYZ",1008,G__G__G3D_177_3_3,68,-1,G__defined_typename("Double_t"),0,4,3,1,0,
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"D - 'Double_t' 0 - point3D U 'TView' - 0 0 view",(char*)NULL,(void*)(Double_t* (*)(Double_t,Double_t,Double_t*,TView*))(&TAxis3D::PixeltoXYZ),0);
   G__memfunc_setup("SavePrimitive",1352,G__G__G3D_177_4_3,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetAxisColor",1216,G__G__G3D_177_5_3,121,-1,-1,0,2,1,1,0,
"s - 'Color_t' 0 1 color C - 'Option_t' 10 \"*\" axis","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetAxisRange",1198,G__G__G3D_177_6_3,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - xmax "
"C - 'Option_t' 10 \"*\" axis",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetLabelColor",1291,G__G__G3D_177_7_3,121,-1,-1,0,2,1,1,0,
"s - 'Color_t' 0 1 color C - 'Option_t' 10 \"*\" axis","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetLabelFont",1187,G__G__G3D_177_8_3,121,-1,-1,0,2,1,1,0,
"s - 'Style_t' 0 62 font C - 'Option_t' 10 \"*\" axis","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetLabelOffset",1395,G__G__G3D_177_9_3,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 0.005 offset C - 'Option_t' 10 \"*\" axis","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetLabelSize",1191,G__G__G3D_177_0_4,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 0.02 size C - 'Option_t' 10 \"*\" axis","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetNdivisions",1362,G__G__G3D_177_1_4,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 510 n C - 'Option_t' 10 \"*\" axis","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetOption",933,G__G__G3D_177_2_4,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \" \" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetTickLength",1305,G__G__G3D_177_3_4,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 0.02 length C - 'Option_t' 10 \"*\" axis","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetTitleOffset",1429,G__G__G3D_177_4_4,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 1 offset C - 'Option_t' 10 \"*\" axis","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetXTitle",902,G__G__G3D_177_5_4,121,-1,-1,0,1,1,1,0,"C - - 10 - title","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetYTitle",903,G__G__G3D_177_6_4,121,-1,-1,0,1,1,1,0,"C - - 10 - title","*MENU*",(void*)NULL,1);
   G__memfunc_setup("SetZTitle",904,G__G__G3D_177_7_4,121,-1,-1,0,1,1,1,0,"C - - 10 - title","*MENU*",(void*)NULL,1);
   G__memfunc_setup("ToggleRulers",1247,G__G__G3D_177_8_4,85,G__get_linked_tagnum(&G__G__G3DLN_TAxis3D),-1,0,1,3,1,0,"U 'TVirtualPad' - 0 0 pad",(char*)NULL,(void*)(TAxis3D* (*)(TVirtualPad*))(&TAxis3D::ToggleRulers),0);
   G__memfunc_setup("ToggleZoom",1031,G__G__G3D_177_9_4,85,G__get_linked_tagnum(&G__G__G3DLN_TAxis3D),-1,0,1,3,1,0,"U 'TVirtualPad' - 0 0 pad",(char*)NULL,(void*)(TAxis3D* (*)(TVirtualPad*))(&TAxis3D::ToggleZoom),0);
   G__memfunc_setup("UseCurrentStyle",1569,G__G__G3D_177_0_5,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_177_1_5,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TAxis3D::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_177_2_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAxis3D::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_177_3_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TAxis3D::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_177_4_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TAxis3D::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_177_5_5,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_177_6_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_177_7_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_177_8_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_177_9_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAxis3D::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_177_0_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAxis3D::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_177_1_6,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TAxis3D::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_177_2_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TAxis3D::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TAxis3D",734,G__G__G3D_177_3_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_177_4_6,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TAxis3D),-1,1,1,1,1,0,"u 'TAxis3D' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPolyMarker3D(void) {
   /* TPolyMarker3D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D));
   G__memfunc_setup("TPolyMarker3D",1233,G__G__G3D_180_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPolyMarker3D",1233,G__G__G3D_180_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D),-1,0,3,1,1,0,
"i - 'Int_t' 0 - n s - 'Marker_t' 0 1 marker "
"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPolyMarker3D",1233,G__G__G3D_180_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D),-1,0,4,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - p "
"s - 'Marker_t' 0 1 marker C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPolyMarker3D",1233,G__G__G3D_180_4_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D),-1,0,4,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - p "
"s - 'Marker_t' 0 1 marker C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPolyMarker3D",1233,G__G__G3D_180_5_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D),-1,0,1,1,1,0,"u 'TPolyMarker3D' - 11 - polymarker",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Copy",411,G__G__G3D_180_6_0,121,-1,-1,0,1,1,1,8,"u 'TObject' - 1 - polymarker",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DistancetoPrimitive",1991,G__G__G3D_180_7_0,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__G3D_180_8_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("DrawPolyMarker",1428,G__G__G3D_180_9_0,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - p "
"s - 'Marker_t' 0 - marker C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ExecuteEvent",1237,G__G__G3D_180_0_1,121,-1,-1,0,3,1,1,0,
"i - 'Int_t' 0 - event i - 'Int_t' 0 - px "
"i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetLastPoint",1214,G__G__G3D_180_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetN",366,G__G__G3D_180_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetP",368,G__G__G3D_180_3_1,70,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPoint",810,G__G__G3D_180_4_1,121,-1,-1,0,4,1,1,8,
"i - 'Int_t' 0 - n f - 'Float_t' 1 - x "
"f - 'Float_t' 1 - y f - 'Float_t' 1 - z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetOption",921,G__G__G3D_180_5_1,67,-1,G__defined_typename("Option_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ls",223,G__G__G3D_180_6_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Merge",496,G__G__G3D_180_7_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TCollection' - 0 - list",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__G3D_180_8_1,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Print",525,G__G__G3D_180_9_1,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SavePrimitive",1352,G__G__G3D_180_0_2,121,-1,-1,0,2,1,1,0,
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - out C - 'Option_t' 10 - option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPoint",822,G__G__G3D_180_1_2,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z","*MENU*",(void*)NULL,0);
   G__memfunc_setup("SetPolyMarker",1330,G__G__G3D_180_2_2,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n F - 'Float_t' 0 - p "
"s - 'Marker_t' 0 - marker C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPolyMarker",1330,G__G__G3D_180_3_2,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - n D - 'Double_t' 0 - p "
"s - 'Marker_t' 0 - marker C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetNextPoint",1237,G__G__G3D_180_4_2,105,-1,G__defined_typename("Int_t"),0,3,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z","*MENU*",(void*)NULL,1);
   G__memfunc_setup("Size",411,G__G__G3D_180_5_2,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PaintH3",631,G__G__G3D_180_6_2,121,-1,-1,0,2,3,1,0,
"U 'TH1' - 0 - h C - 'Option_t' 10 - option",(char*)NULL,(void*)(void (*)(TH1*,Option_t*))(&TPolyMarker3D::PaintH3),0);
   G__memfunc_setup("Class",502,G__G__G3D_180_7_2,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPolyMarker3D::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_180_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPolyMarker3D::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_180_9_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPolyMarker3D::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_180_0_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPolyMarker3D::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_180_1_3,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_180_2_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_180_3_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_180_4_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_180_5_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPolyMarker3D::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_180_6_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPolyMarker3D::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_180_7_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPolyMarker3D::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_180_8_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPolyMarker3D::DeclFileLine),0);
   // automatic destructor
   G__memfunc_setup("~TPolyMarker3D",1359,G__G__G3D_180_9_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_180_0_4,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D),-1,1,1,1,1,0,"u 'TPolyMarker3D' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCTUB(void) {
   /* TCTUB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TCTUB));
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TCTUB",386,G__G__G3D_181_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TCTUB),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCTUB",386,G__G__G3D_181_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TCTUB),-1,0,14,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - rmin "
"f - 'Float_t' 0 - rmax f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 - phi1 f - 'Float_t' 0 - phi2 "
"f - 'Float_t' 0 - coslx f - 'Float_t' 0 - cosly "
"f - 'Float_t' 0 - coslz f - 'Float_t' 0 - coshx "
"f - 'Float_t' 0 - coshy f - 'Float_t' 0 - coshz",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TCTUB",386,G__G__G3D_181_4_0,105,G__get_linked_tagnum(&G__G__G3DLN_TCTUB),-1,0,10,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - rmin "
"f - 'Float_t' 0 - rmax f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 - phi1 f - 'Float_t' 0 - phi2 "
"F - 'Float_t' 0 - lowNormal F - 'Float_t' 0 - highNormal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__G__G3D_181_5_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TCTUB::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_181_6_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCTUB::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_181_7_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TCTUB::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_181_8_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TCTUB::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_181_9_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_181_0_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_181_1_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_181_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_181_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCTUB::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_181_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCTUB::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_181_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TCTUB::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_181_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TCTUB::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TCTUB",386,G__G__G3D_181_7_1,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TCTUB),-1,0,1,1,1,0,"u 'TCTUB' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TCTUB",512,G__G__G3D_181_8_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_181_9_1,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TCTUB),-1,1,1,1,1,0,"u 'TCTUB' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGeometry(void) {
   /* TGeometry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TGeometry));
   G__memfunc_setup("TGeometry",928,G__G__G3D_182_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_TGeometry),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TGeometry",928,G__G__G3D_182_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TGeometry),-1,0,2,1,1,0,
"C - - 10 - name C - - 10 - title",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Browse",626,G__G__G3D_182_3_0,121,-1,-1,0,1,1,1,0,"U 'TBrowser' - 0 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("cd",199,G__G__G3D_182_4_0,121,-1,-1,0,1,1,1,0,"C - - 10 0 path",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Draw",398,G__G__G3D_182_5_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindObject",984,G__G__G3D_182_6_0,85,G__get_linked_tagnum(&G__G__G3DLN_TObject),-1,0,1,1,1,8,"C - - 10 - name",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("FindObject",984,G__G__G3D_182_7_0,85,G__get_linked_tagnum(&G__G__G3DLN_TObject),-1,0,1,1,1,8,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetBomb",672,G__G__G3D_182_8_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GeomLevel",896,G__G__G3D_182_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfShapes",1493,G__G__G3D_182_0_1,85,G__get_linked_tagnum(&G__G__G3DLN_THashList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfNodes",1386,G__G__G3D_182_1_1,85,G__get_linked_tagnum(&G__G__G3DLN_TList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfMaterials",1811,G__G__G3D_182_2_1,85,G__get_linked_tagnum(&G__G__G3DLN_THashList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetListOfMatrices",1705,G__G__G3D_182_3_1,85,G__get_linked_tagnum(&G__G__G3DLN_THashList),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCurrentNode",1417,G__G__G3D_182_4_1,85,G__get_linked_tagnum(&G__G__G3DLN_TNode),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaterial",1103,G__G__G3D_182_5_1,85,G__get_linked_tagnum(&G__G__G3DLN_TMaterial),-1,0,1,1,1,8,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaterialByNumber",1907,G__G__G3D_182_6_1,85,G__get_linked_tagnum(&G__G__G3DLN_TMaterial),-1,0,1,1,1,8,"i - 'Int_t' 0 - number",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNode",678,G__G__G3D_182_7_1,85,G__get_linked_tagnum(&G__G__G3DLN_TNode),-1,0,1,1,1,8,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetShape",785,G__G__G3D_182_8_1,85,G__get_linked_tagnum(&G__G__G3DLN_TShape),-1,0,1,1,1,8,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetShapeByNumber",1589,G__G__G3D_182_9_1,85,G__get_linked_tagnum(&G__G__G3DLN_TShape),-1,0,1,1,1,8,"i - 'Int_t' 0 - number",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRotMatrix",1226,G__G__G3D_182_0_2,85,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,0,1,1,1,8,"C - - 10 - name",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRotMatrixByNumber",2030,G__G__G3D_182_1_2,85,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,0,1,1,1,8,"i - 'Int_t' 0 - number",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCurrentMatrix",1656,G__G__G3D_182_2_2,85,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCurrentPosition",1880,G__G__G3D_182_3_2,85,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,0,3,1,1,8,
"D - 'Double_t' 0 - x D - 'Double_t' 0 - y "
"D - 'Double_t' 0 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCurrentPosition",1880,G__G__G3D_182_4_2,85,G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),-1,0,3,1,1,8,
"F - 'Float_t' 0 - x F - 'Float_t' 0 - y "
"F - 'Float_t' 0 - z",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetCurrentReflection",2062,G__G__G3D_182_5_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsFolder",792,G__G__G3D_182_6_2,103,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Local2Master",1161,G__G__G3D_182_7_2,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - local D - 'Double_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Local2Master",1161,G__G__G3D_182_8_2,121,-1,-1,0,2,1,1,0,
"F - 'Float_t' 0 - local F - 'Float_t' 0 - master",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ls",223,G__G__G3D_182_9_2,121,-1,-1,0,1,1,1,8,"C - 'Option_t' 10 \"rsn2\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Master2Local",1161,G__G__G3D_182_0_3,121,-1,-1,0,2,1,1,0,
"D - 'Double_t' 0 - master D - 'Double_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Master2Local",1161,G__G__G3D_182_1_3,121,-1,-1,0,2,1,1,0,
"F - 'Float_t' 0 - master F - 'Float_t' 0 - local",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Node",390,G__G__G3D_182_2_3,121,-1,-1,0,8,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - shapename d - 'Double_t' 0 0 x "
"d - 'Double_t' 0 0 y d - 'Double_t' 0 0 z "
"C - - 10 \"\" matrixname C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PushLevel",920,G__G__G3D_182_3_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("PopLevel",807,G__G__G3D_182_4_3,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("RecursiveRemove",1574,G__G__G3D_182_5_3,121,-1,-1,0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetBomb",684,G__G__G3D_182_6_3,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 1.4 bomb",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetCurrentNode",1429,G__G__G3D_182_7_3,121,-1,-1,0,1,1,1,0,"U 'TNode' - 0 - node",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetGeomLevel",1196,G__G__G3D_182_8_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 0 level",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetMatrix",929,G__G__G3D_182_9_3,121,-1,-1,0,1,1,1,0,"U 'TRotMatrix' - 0 0 matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPosition",1153,G__G__G3D_182_0_4,121,-1,-1,0,4,1,1,0,
"U 'TRotMatrix' - 0 - matrix d - 'Double_t' 0 0 x "
"d - 'Double_t' 0 0 y d - 'Double_t' 0 0 z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPosition",1153,G__G__G3D_182_1_4,121,-1,-1,0,4,1,1,0,
"U 'TRotMatrix' - 0 - matrix f - 'Float_t' 0 - x "
"f - 'Float_t' 0 - y f - 'Float_t' 0 - z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPosition",1153,G__G__G3D_182_2_4,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetPosition",1153,G__G__G3D_182_3_4,121,-1,-1,0,3,1,1,0,
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UpdateMatrix",1240,G__G__G3D_182_4_4,121,-1,-1,0,1,1,1,0,"U 'TNode' - 0 - node",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UpdateTempMatrix",1646,G__G__G3D_182_5_4,121,-1,-1,0,4,1,1,0,
"d - 'Double_t' 0 0 x d - 'Double_t' 0 0 y "
"d - 'Double_t' 0 0 z U 'TRotMatrix' - 0 0 matrix",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("UpdateTempMatrix",1646,G__G__G3D_182_6_4,121,-1,-1,0,5,1,1,0,
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z D - 'Double_t' 0 - matrix "
"g - 'Bool_t' 0 kFALSE isReflection",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Get",288,G__G__G3D_182_7_4,85,G__get_linked_tagnum(&G__G__G3DLN_TObjArray),-1,0,1,3,1,0,"C - - 10 - name",(char*)NULL,(void*)(TObjArray* (*)(const char*))(&TGeometry::Get),0);
   G__memfunc_setup("UpdateTempMatrix",1646,G__G__G3D_182_8_4,121,-1,-1,0,8,3,1,0,
"D - 'Double_t' 0 - dx1 D - 'Double_t' 0 - rmat1 "
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z D - 'Double_t' 0 - matrix "
"D - 'Double_t' 0 - dxnew D - 'Double_t' 0 - rmatnew",(char*)NULL,(void*)(void (*)(Double_t*,Double_t*,Double_t,Double_t,Double_t,Double_t*,Double_t*,Double_t*))(&TGeometry::UpdateTempMatrix),0);
   G__memfunc_setup("Class",502,G__G__G3D_182_9_4,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TGeometry::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_182_0_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeometry::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_182_1_5,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TGeometry::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_182_2_5,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TGeometry::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_182_3_5,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_182_4_5,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_182_5_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_182_6_5,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_182_7_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeometry::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_182_8_5,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeometry::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_182_9_5,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TGeometry::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_182_0_6,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TGeometry::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TGeometry",928,G__G__G3D_182_1_6,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TGeometry),-1,0,1,1,1,0,"u 'TGeometry' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TGeometry",1054,G__G__G3D_182_2_6,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_182_3_6,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TGeometry),-1,1,1,1,1,0,"u 'TGeometry' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTNodeDiv(void) {
   /* TNodeDiv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv));
   G__memfunc_setup("TNodeDiv",765,G__G__G3D_183_1_0,105,G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TNodeDiv",765,G__G__G3D_183_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - shapename i - 'Int_t' 0 - ndiv "
"i - 'Int_t' 0 - axis C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TNodeDiv",765,G__G__G3D_183_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),-1,0,6,1,1,0,
"C - - 10 - name C - - 10 - title "
"U 'TShape' - 0 - shape i - 'Int_t' 0 - ndiv "
"i - 'Int_t' 0 - axis C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Draw",398,G__G__G3D_183_4_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Paint",508,G__G__G3D_183_5_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_183_6_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TNodeDiv::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_183_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNodeDiv::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_183_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TNodeDiv::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_183_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TNodeDiv::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_183_0_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_183_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_183_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_183_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_183_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNodeDiv::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_183_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNodeDiv::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_183_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TNodeDiv::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_183_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TNodeDiv::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TNodeDiv",765,G__G__G3D_183_8_1,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),-1,0,1,1,1,0,"u 'TNodeDiv' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TNodeDiv",891,G__G__G3D_183_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_183_0_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),-1,1,1,1,1,0,"u 'TNodeDiv' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPARA(void) {
   /* TPARA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__G3DLN_TPARA));
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,2,8,"D - 'Double_t' 0 - points",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("TPARA",376,G__G__G3D_184_2_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPARA),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TPARA",376,G__G__G3D_184_3_0,105,G__get_linked_tagnum(&G__G__G3DLN_TPARA),-1,0,9,1,1,0,
"C - - 10 - name C - - 10 - title "
"C - - 10 - material f - 'Float_t' 0 - dx "
"f - 'Float_t' 0 - dy f - 'Float_t' 0 - dz "
"f - 'Float_t' 0 - alpha f - 'Float_t' 0 - theta "
"f - 'Float_t' 0 - phi",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetAlpha",774,G__G__G3D_184_4_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTheta",790,G__G__G3D_184_5_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetPhi",577,G__G__G3D_184_6_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__G__G3D_184_7_0,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&TPARA::Class),0);
   G__memfunc_setup("Class_Name",982,G__G__G3D_184_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPARA::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__G__G3D_184_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&TPARA::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__G__G3D_184_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&TPARA::Dictionary),0);
   G__memfunc_setup("IsA",253,G__G__G3D_184_1_1,85,G__get_linked_tagnum(&G__G__G3DLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__G__G3D_184_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__G__G3D_184_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__G3D_184_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__G__G3D_184_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPARA::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__G__G3D_184_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPARA::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__G__G3D_184_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&TPARA::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__G__G3D_184_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&TPARA::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("TPARA",376,G__G__G3D_184_9_1,(int)('i'),G__get_linked_tagnum(&G__G__G3DLN_TPARA),-1,0,1,1,1,0,"u 'TPARA' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TPARA",502,G__G__G3D_184_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__G__G3D_184_1_2,(int)('u'),G__get_linked_tagnum(&G__G__G3DLN_TPARA),-1,1,1,1,1,0,"u 'TPARA' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__G3D() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_EHelixRangeType),-1,-1,1,"kHelixT=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_EHelixRangeType),-1,-1,1,"kHelixX=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_EHelixRangeType),-1,-1,1,"kHelixY=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_EHelixRangeType),-1,-1,1,"kHelixZ=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_EHelixRangeType),-1,-1,1,"kLabX=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_EHelixRangeType),-1,-1,1,"kLabY=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_EHelixRangeType),-1,-1,1,"kLabZ=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__G3DLN_EHelixRangeType),-1,-1,1,"kUnchanged=7",0,(char*)NULL);
   G__memvar_setup((void*)(&gGeometry),85,0,0,G__get_linked_tagnum(&G__G__G3DLN_TGeometry),-1,-1,1,"gGeometry=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__G3D() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__G3D() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__G3DLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TVirtualPad = { "TVirtualPad" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TMaterial = { "TMaterial" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TAtt3D = { "TAtt3D" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TBuffer3D = { "TBuffer3D" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TNode = { "TNode" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TShape = { "TShape" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TBRIK = { "TBRIK" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TTRD2 = { "TTRD2" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TMixture = { "TMixture" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TTUBE = { "TTUBE" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TTUBS = { "TTUBS" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TCONS = { "TCONS" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TTRAP = { "TTRAP" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TPolyLine3D = { "TPolyLine3D" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TRotMatrix = { "TRotMatrix" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_EHelixRangeType = { "EHelixRangeType" , 101 , -1 };
G__linked_taginfo G__G__G3DLN_THelix = { "THelix" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TPCON = { "TPCON" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TPGON = { "TPGON" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TSPHE = { "TSPHE" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TPoints3DABC = { "TPoints3DABC" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TGTRA = { "TGTRA" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TMarker3DBox = { "TMarker3DBox" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TCONE = { "TCONE" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_THYPE = { "THYPE" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TVirtualUtil3D = { "TVirtualUtil3D" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TUtil3D = { "TUtil3D" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TXTRU = { "TXTRU" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TXTRUcLcLEXYChecked = { "TXTRU::EXYChecked" , 101 , -1 };
G__linked_taginfo G__G__G3DLN_TXTRUcLcLEZChecked = { "TXTRU::EZChecked" , 101 , -1 };
G__linked_taginfo G__G__G3DLN_TTRD1 = { "TTRD1" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TELTU = { "TELTU" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_THashList = { "THashList" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TAxis = { "TAxis" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TGaxis = { "TGaxis" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TView = { "TView" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TAxis3D = { "TAxis3D" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TNodecLcLdA = { "TNode::$" , 101 , -1 };
G__linked_taginfo G__G__G3DLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TPolyMarker3D = { "TPolyMarker3D" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TCTUB = { "TCTUB" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TGeometry = { "TGeometry" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TNodeDiv = { "TNodeDiv" , 99 , -1 };
G__linked_taginfo G__G__G3DLN_TPARA = { "TPARA" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__G3D() {
  G__G__G3DLN_TClass.tagnum = -1 ;
  G__G__G3DLN_TBuffer.tagnum = -1 ;
  G__G__G3DLN_TMemberInspector.tagnum = -1 ;
  G__G__G3DLN_TObject.tagnum = -1 ;
  G__G__G3DLN_TNamed.tagnum = -1 ;
  G__G__G3DLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__G3DLN_TList.tagnum = -1 ;
  G__G__G3DLN_TBrowser.tagnum = -1 ;
  G__G__G3DLN_TObjArray.tagnum = -1 ;
  G__G__G3DLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__G__G3DLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__G3DLN_TCollection.tagnum = -1 ;
  G__G__G3DLN_TString.tagnum = -1 ;
  G__G__G3DLN_TVirtualPad.tagnum = -1 ;
  G__G__G3DLN_TAttFill.tagnum = -1 ;
  G__G__G3DLN_TMaterial.tagnum = -1 ;
  G__G__G3DLN_TAttLine.tagnum = -1 ;
  G__G__G3DLN_TAtt3D.tagnum = -1 ;
  G__G__G3DLN_TBuffer3D.tagnum = -1 ;
  G__G__G3DLN_TNode.tagnum = -1 ;
  G__G__G3DLN_TShape.tagnum = -1 ;
  G__G__G3DLN_TBRIK.tagnum = -1 ;
  G__G__G3DLN_TTRD2.tagnum = -1 ;
  G__G__G3DLN_TMixture.tagnum = -1 ;
  G__G__G3DLN_TTUBE.tagnum = -1 ;
  G__G__G3DLN_TTUBS.tagnum = -1 ;
  G__G__G3DLN_TCONS.tagnum = -1 ;
  G__G__G3DLN_TTRAP.tagnum = -1 ;
  G__G__G3DLN_TPolyLine3D.tagnum = -1 ;
  G__G__G3DLN_TRotMatrix.tagnum = -1 ;
  G__G__G3DLN_EHelixRangeType.tagnum = -1 ;
  G__G__G3DLN_THelix.tagnum = -1 ;
  G__G__G3DLN_TPCON.tagnum = -1 ;
  G__G__G3DLN_TPGON.tagnum = -1 ;
  G__G__G3DLN_TSPHE.tagnum = -1 ;
  G__G__G3DLN_TPoints3DABC.tagnum = -1 ;
  G__G__G3DLN_TGTRA.tagnum = -1 ;
  G__G__G3DLN_TH1.tagnum = -1 ;
  G__G__G3DLN_TMarker3DBox.tagnum = -1 ;
  G__G__G3DLN_TCONE.tagnum = -1 ;
  G__G__G3DLN_THYPE.tagnum = -1 ;
  G__G__G3DLN_TVirtualUtil3D.tagnum = -1 ;
  G__G__G3DLN_TUtil3D.tagnum = -1 ;
  G__G__G3DLN_TXTRU.tagnum = -1 ;
  G__G__G3DLN_TXTRUcLcLEXYChecked.tagnum = -1 ;
  G__G__G3DLN_TXTRUcLcLEZChecked.tagnum = -1 ;
  G__G__G3DLN_TTRD1.tagnum = -1 ;
  G__G__G3DLN_TELTU.tagnum = -1 ;
  G__G__G3DLN_THashList.tagnum = -1 ;
  G__G__G3DLN_TAxis.tagnum = -1 ;
  G__G__G3DLN_TGaxis.tagnum = -1 ;
  G__G__G3DLN_TView.tagnum = -1 ;
  G__G__G3DLN_TAxis3D.tagnum = -1 ;
  G__G__G3DLN_TNodecLcLdA.tagnum = -1 ;
  G__G__G3DLN_TAttMarker.tagnum = -1 ;
  G__G__G3DLN_TPolyMarker3D.tagnum = -1 ;
  G__G__G3DLN_TCTUB.tagnum = -1 ;
  G__G__G3DLN_TGeometry.tagnum = -1 ;
  G__G__G3DLN_TNodeDiv.tagnum = -1 ;
  G__G__G3DLN_TPARA.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__G3D() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__G__G3DLN_TClass);
   G__get_linked_tagnum(&G__G__G3DLN_TBuffer);
   G__get_linked_tagnum(&G__G__G3DLN_TMemberInspector);
   G__get_linked_tagnum(&G__G__G3DLN_TObject);
   G__get_linked_tagnum(&G__G__G3DLN_TNamed);
   G__get_linked_tagnum(&G__G__G3DLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum(&G__G__G3DLN_TList);
   G__get_linked_tagnum(&G__G__G3DLN_TBrowser);
   G__get_linked_tagnum(&G__G__G3DLN_TObjArray);
   G__get_linked_tagnum(&G__G__G3DLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__G__G3DLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__G__G3DLN_TCollection);
   G__get_linked_tagnum(&G__G__G3DLN_TString);
   G__get_linked_tagnum(&G__G__G3DLN_TVirtualPad);
   G__get_linked_tagnum(&G__G__G3DLN_TAttFill);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TMaterial),sizeof(TMaterial),-1,128256,"Materials used in the Geometry Shapes",G__setup_memvarTMaterial,G__setup_memfuncTMaterial);
   G__get_linked_tagnum(&G__G__G3DLN_TAttLine);
   G__get_linked_tagnum(&G__G__G3DLN_TAtt3D);
   G__get_linked_tagnum(&G__G__G3DLN_TBuffer3D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TNode),sizeof(TNode),-1,128256,"Description of parameters to position a 3-D geometry object",G__setup_memvarTNode,G__setup_memfuncTNode);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TShape),sizeof(TShape),-1,128256,"Basic shape",G__setup_memvarTShape,G__setup_memfuncTShape);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TBRIK),sizeof(TBRIK),-1,324864,"TBRIK shape",G__setup_memvarTBRIK,G__setup_memfuncTBRIK);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD2),sizeof(TTRD2),-1,324864,"TRD2 shape",G__setup_memvarTTRD2,G__setup_memfuncTTRD2);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TMixture),sizeof(TMixture),-1,128256,"Mixtures used in the Geometry Shapes",G__setup_memvarTMixture,G__setup_memfuncTMixture);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBE),sizeof(TTUBE),-1,128256,"TUBE shape",G__setup_memvarTTUBE,G__setup_memfuncTTUBE);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TTUBS),sizeof(TTUBS),-1,324864,"TUBS shape",G__setup_memvarTTUBS,G__setup_memfuncTTUBS);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONS),sizeof(TCONS),-1,324864,"CONS shape",G__setup_memvarTCONS,G__setup_memfuncTCONS);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRAP),sizeof(TTRAP),-1,324864,"TRAP shape",G__setup_memvarTTRAP,G__setup_memfuncTTRAP);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyLine3D),sizeof(TPolyLine3D),-1,128768,"A 3-D polyline",G__setup_memvarTPolyLine3D,G__setup_memfuncTPolyLine3D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TRotMatrix),sizeof(TRotMatrix),-1,128256,"Rotation Matrix for 3-D geometry objects",G__setup_memvarTRotMatrix,G__setup_memfuncTRotMatrix);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_EHelixRangeType),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_THelix),sizeof(THelix),-1,128768,"A Helix drawn as a PolyLine3D",G__setup_memvarTHelix,G__setup_memfuncTHelix);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TPCON),sizeof(TPCON),-1,128256,"PCON shape",G__setup_memvarTPCON,G__setup_memfuncTPCON);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TPGON),sizeof(TPGON),-1,324864,"PGON shape",G__setup_memvarTPGON,G__setup_memfuncTPGON);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TSPHE),sizeof(TSPHE),-1,128256,"SPHE shape",G__setup_memvarTSPHE,G__setup_memfuncTSPHE);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TPoints3DABC),sizeof(TPoints3DABC),-1,29965,"A 3-D Points",G__setup_memvarTPoints3DABC,G__setup_memfuncTPoints3DABC);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TGTRA),sizeof(TGTRA),-1,324864,"GTRA shape",G__setup_memvarTGTRA,G__setup_memfuncTGTRA);
   G__get_linked_tagnum(&G__G__G3DLN_TH1);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TMarker3DBox),sizeof(TMarker3DBox),-1,128256,"A special 3-D marker designed for event display",G__setup_memvarTMarker3DBox,G__setup_memfuncTMarker3DBox);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TCONE),sizeof(TCONE),-1,324864,"CONE shape",G__setup_memvarTCONE,G__setup_memfuncTCONE);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_THYPE),sizeof(THYPE),-1,324864,"HYPE shape",G__setup_memvarTHYPE,G__setup_memfuncTHYPE);
   G__get_linked_tagnum(&G__G__G3DLN_TVirtualUtil3D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TUtil3D),sizeof(TUtil3D),-1,62720,"The default 3-D view utility  class",G__setup_memvarTUtil3D,G__setup_memfuncTUtil3D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TXTRU),sizeof(TXTRU),-1,327424,"TXTRU shape",G__setup_memvarTXTRU,G__setup_memfuncTXTRU);
   G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEXYChecked);
   G__get_linked_tagnum(&G__G__G3DLN_TXTRUcLcLEZChecked);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TTRD1),sizeof(TTRD1),-1,324864,"TRD1 shape",G__setup_memvarTTRD1,G__setup_memfuncTTRD1);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TELTU),sizeof(TELTU),-1,324864,"ELTU shape",G__setup_memvarTELTU,G__setup_memfuncTELTU);
   G__get_linked_tagnum(&G__G__G3DLN_THashList);
   G__get_linked_tagnum(&G__G__G3DLN_TAxis);
   G__get_linked_tagnum(&G__G__G3DLN_TGaxis);
   G__get_linked_tagnum(&G__G__G3DLN_TView);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TAxis3D),sizeof(TAxis3D),-1,325376,"3-D ruler painting class",G__setup_memvarTAxis3D,G__setup_memfuncTAxis3D);
   G__get_linked_tagnum(&G__G__G3DLN_TNodecLcLdA);
   G__get_linked_tagnum(&G__G__G3DLN_TAttMarker);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TPolyMarker3D),sizeof(TPolyMarker3D),-1,128768,"An array of 3-D points with the same marker",G__setup_memvarTPolyMarker3D,G__setup_memfuncTPolyMarker3D);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TCTUB),sizeof(TCTUB),-1,128256,"The Cut Tube shape",G__setup_memvarTCTUB,G__setup_memfuncTCTUB);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TGeometry),sizeof(TGeometry),-1,128256,"Structure for Matrices, Shapes and Nodes",G__setup_memvarTGeometry,G__setup_memfuncTGeometry);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TNodeDiv),sizeof(TNodeDiv),-1,324864,"Description of parameters to divide a 3-D geometry object",G__setup_memvarTNodeDiv,G__setup_memfuncTNodeDiv);
   G__tagtable_setup(G__get_linked_tagnum(&G__G__G3DLN_TPARA),sizeof(TPARA),-1,324864,"PARA shape",G__setup_memvarTPARA,G__setup_memfuncTPARA);
}
extern "C" void G__cpp_setupG__G3D(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__G3D()");
  G__set_cpp_environmentG__G3D();
  G__cpp_setup_tagtableG__G3D();

  G__cpp_setup_inheritanceG__G3D();

  G__cpp_setup_typetableG__G3D();

  G__cpp_setup_memvarG__G3D();

  G__cpp_setup_memfuncG__G3D();
  G__cpp_setup_globalG__G3D();
  G__cpp_setup_funcG__G3D();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__G3D();
  return;
}
class G__cpp_setup_initG__G3D {
  public:
    G__cpp_setup_initG__G3D() { G__add_setup_func("G__G3D",(G__incsetup)(&G__cpp_setupG__G3D)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__G3D() { G__remove_setup_func("G__G3D"); }
};
G__cpp_setup_initG__G3D G__cpp_setup_initializerG__G3D;

